2025-01-17T11:17:42.2996272Z Requested labels: ubuntu-latest
2025-01-17T11:17:42.2996747Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2934/merge
2025-01-17T11:17:42.2996893Z Waiting for a runner to pick up this job...
2025-01-17T11:17:42.5955061Z Job is waiting for a hosted runner to come online.
2025-01-17T11:17:45.7824134Z Job is about to start running on the hosted runner: GitHub Actions 44 (hosted)
2025-01-17T11:17:47.0693825Z Current runner version: '2.321.0'
2025-01-17T11:17:47.0721410Z ##[group]Operating System
2025-01-17T11:17:47.0722195Z Ubuntu
2025-01-17T11:17:47.0722998Z 24.04.1
2025-01-17T11:17:47.0723583Z LTS
2025-01-17T11:17:47.0724061Z ##[endgroup]
2025-01-17T11:17:47.0724610Z ##[group]Runner Image
2025-01-17T11:17:47.0725217Z Image: ubuntu-24.04
2025-01-17T11:17:47.0725717Z Version: 20250105.1.0
2025-01-17T11:17:47.0726799Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250105.1/images/ubuntu/Ubuntu2404-Readme.md
2025-01-17T11:17:47.0728282Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250105.1
2025-01-17T11:17:47.0729191Z ##[endgroup]
2025-01-17T11:17:47.0729726Z ##[group]Runner Image Provisioner
2025-01-17T11:17:47.0730350Z 2.0.414.1
2025-01-17T11:17:47.0730802Z ##[endgroup]
2025-01-17T11:17:47.0733395Z ##[group]GITHUB_TOKEN Permissions
2025-01-17T11:17:47.0735719Z Actions: read
2025-01-17T11:17:47.0736455Z Attestations: read
2025-01-17T11:17:47.0737239Z Checks: read
2025-01-17T11:17:47.0737701Z Contents: read
2025-01-17T11:17:47.0738260Z Deployments: read
2025-01-17T11:17:47.0738813Z Discussions: read
2025-01-17T11:17:47.0739275Z Issues: read
2025-01-17T11:17:47.0739807Z Metadata: read
2025-01-17T11:17:47.0740280Z Packages: read
2025-01-17T11:17:47.0740767Z Pages: read
2025-01-17T11:17:47.0741305Z PullRequests: read
2025-01-17T11:17:47.0741811Z RepositoryProjects: read
2025-01-17T11:17:47.0742386Z SecurityEvents: read
2025-01-17T11:17:47.0743266Z Statuses: read
2025-01-17T11:17:47.0743765Z ##[endgroup]
2025-01-17T11:17:47.0747099Z Secret source: None
2025-01-17T11:17:47.0747929Z Prepare workflow directory
2025-01-17T11:17:47.1390599Z Prepare all required actions
2025-01-17T11:17:47.1427718Z Getting action download info
2025-01-17T11:17:47.2674374Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-17T11:17:47.3576724Z Download action repository 'actions/upload-artifact@v4' (SHA:65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08)
2025-01-17T11:17:47.7242351Z Complete job name: not continuum ubuntu-latest 
2025-01-17T11:17:47.7914178Z ##[group]Run actions/checkout@v4
2025-01-17T11:17:47.7915021Z with:
2025-01-17T11:17:47.7915416Z   repository: tardis-sn/tardis
2025-01-17T11:17:47.7916070Z   token: ***
2025-01-17T11:17:47.7916455Z   ssh-strict: true
2025-01-17T11:17:47.7916847Z   ssh-user: git
2025-01-17T11:17:47.7917243Z   persist-credentials: true
2025-01-17T11:17:47.7917690Z   clean: true
2025-01-17T11:17:47.7918093Z   sparse-checkout-cone-mode: true
2025-01-17T11:17:47.7918589Z   fetch-depth: 1
2025-01-17T11:17:47.7918977Z   fetch-tags: false
2025-01-17T11:17:47.7919396Z   show-progress: true
2025-01-17T11:17:47.7919808Z   lfs: false
2025-01-17T11:17:47.7920176Z   submodules: false
2025-01-17T11:17:47.7920569Z   set-safe-directory: true
2025-01-17T11:17:47.7921276Z env:
2025-01-17T11:17:47.7921653Z   CACHE_NUMBER: 0
2025-01-17T11:17:47.7923004Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:17:47.7924316Z   CODECOV_TOKEN: 
2025-01-17T11:17:47.7924704Z ##[endgroup]
2025-01-17T11:17:47.9861238Z Syncing repository: tardis-sn/tardis
2025-01-17T11:17:47.9863407Z ##[group]Getting Git version info
2025-01-17T11:17:47.9864239Z Working directory is '/home/runner/work/tardis/tardis'
2025-01-17T11:17:47.9865156Z [command]/usr/bin/git version
2025-01-17T11:17:47.9922118Z git version 2.47.1
2025-01-17T11:17:47.9950032Z ##[endgroup]
2025-01-17T11:17:47.9964687Z Temporarily overriding HOME='/home/runner/work/_temp/98bc7813-bb14-463f-9a9a-d7a3f86b8099' before making global git config changes
2025-01-17T11:17:47.9966263Z Adding repository directory to the temporary git global config as a safe directory
2025-01-17T11:17:47.9970066Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-17T11:17:48.0007076Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-01-17T11:17:48.0010954Z ##[group]Initializing the repository
2025-01-17T11:17:48.0014993Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-01-17T11:17:48.0085586Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-17T11:17:48.0087245Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-17T11:17:48.0088772Z hint: of your new repositories, which will suppress this warning, call:
2025-01-17T11:17:48.0089748Z hint:
2025-01-17T11:17:48.0090589Z hint: 	git config --global init.defaultBranch <name>
2025-01-17T11:17:48.0091658Z hint:
2025-01-17T11:17:48.0092861Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-17T11:17:48.0094676Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-17T11:17:48.0096000Z hint:
2025-01-17T11:17:48.0096463Z hint: 	git branch -m <name>
2025-01-17T11:17:48.0097208Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-01-17T11:17:48.0106782Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-17T11:17:48.0141651Z ##[endgroup]
2025-01-17T11:17:48.0142960Z ##[group]Disabling automatic garbage collection
2025-01-17T11:17:48.0145897Z [command]/usr/bin/git config --local gc.auto 0
2025-01-17T11:17:48.0174955Z ##[endgroup]
2025-01-17T11:17:48.0176000Z ##[group]Setting up auth
2025-01-17T11:17:48.0181780Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-17T11:17:48.0214444Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-17T11:17:48.0518554Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-17T11:17:48.0550404Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-17T11:17:48.0806583Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-17T11:17:48.0848388Z ##[endgroup]
2025-01-17T11:17:48.0849647Z ##[group]Fetching the repository
2025-01-17T11:17:48.0859426Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +2eb9b241664f5a2133bedb263877318dc98b199a:refs/remotes/pull/2934/merge
2025-01-17T11:17:49.1857577Z From https://github.com/tardis-sn/tardis
2025-01-17T11:17:49.1859596Z  * [new ref]         2eb9b241664f5a2133bedb263877318dc98b199a -> pull/2934/merge
2025-01-17T11:17:49.1889904Z ##[endgroup]
2025-01-17T11:17:49.1891200Z ##[group]Determining the checkout info
2025-01-17T11:17:49.1892789Z ##[endgroup]
2025-01-17T11:17:49.1898077Z [command]/usr/bin/git sparse-checkout disable
2025-01-17T11:17:49.1944251Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-17T11:17:49.1980158Z ##[group]Checking out the ref
2025-01-17T11:17:49.1984439Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2934/merge
2025-01-17T11:17:49.4007249Z Note: switching to 'refs/remotes/pull/2934/merge'.
2025-01-17T11:17:49.4008545Z 
2025-01-17T11:17:49.4009804Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-17T11:17:49.4011650Z changes and commit them, and you can discard any commits you make in this
2025-01-17T11:17:49.4013502Z state without impacting any branches by switching back to a branch.
2025-01-17T11:17:49.4014280Z 
2025-01-17T11:17:49.4014825Z If you want to create a new branch to retain commits you create, you may
2025-01-17T11:17:49.4016029Z do so (now or later) by using -c with the switch command. Example:
2025-01-17T11:17:49.4016723Z 
2025-01-17T11:17:49.4017081Z   git switch -c <new-branch-name>
2025-01-17T11:17:49.4017659Z 
2025-01-17T11:17:49.4018000Z Or undo this operation with:
2025-01-17T11:17:49.4018535Z 
2025-01-17T11:17:49.4019188Z   git switch -
2025-01-17T11:17:49.4019631Z 
2025-01-17T11:17:49.4020294Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-17T11:17:49.4021228Z 
2025-01-17T11:17:49.4022271Z HEAD is now at 2eb9b24 Merge 1b161e1683613a262c887dd4bbd7da70e49b0b71 into 5e2d0bb3139b6cd34b9c08e22fe36d65cd9c57fa
2025-01-17T11:17:49.4030258Z ##[endgroup]
2025-01-17T11:17:49.4074534Z [command]/usr/bin/git log -1 --format=%H
2025-01-17T11:17:49.4099162Z 2eb9b241664f5a2133bedb263877318dc98b199a
2025-01-17T11:17:49.4454910Z Prepare all required actions
2025-01-17T11:17:49.4456328Z Getting action download info
2025-01-17T11:17:49.5845467Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-17T11:17:49.7221314Z ##[group]Run ./.github/actions/setup_lfs
2025-01-17T11:17:49.7221702Z with:
2025-01-17T11:17:49.7222028Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-17T11:17:49.7222400Z env:
2025-01-17T11:17:49.7222856Z   CACHE_NUMBER: 0
2025-01-17T11:17:49.7223588Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:17:49.7224350Z   CODECOV_TOKEN: 
2025-01-17T11:17:49.7224596Z ##[endgroup]
2025-01-17T11:17:49.7353226Z ##[group]Run actions/checkout@v4
2025-01-17T11:17:49.7353587Z with:
2025-01-17T11:17:49.7353901Z   repository: atharva-2001/tardis-regression-data
2025-01-17T11:17:49.7354295Z   path: tardis-regression-data
2025-01-17T11:17:49.7354660Z   ref: numpy_v2_2
2025-01-17T11:17:49.7355089Z   token: ***
2025-01-17T11:17:49.7355357Z   ssh-strict: true
2025-01-17T11:17:49.7355634Z   ssh-user: git
2025-01-17T11:17:49.7355912Z   persist-credentials: true
2025-01-17T11:17:49.7356221Z   clean: true
2025-01-17T11:17:49.7356509Z   sparse-checkout-cone-mode: true
2025-01-17T11:17:49.7356829Z   fetch-depth: 1
2025-01-17T11:17:49.7357102Z   fetch-tags: false
2025-01-17T11:17:49.7357385Z   show-progress: true
2025-01-17T11:17:49.7357673Z   lfs: false
2025-01-17T11:17:49.7357932Z   submodules: false
2025-01-17T11:17:49.7358214Z   set-safe-directory: true
2025-01-17T11:17:49.7358501Z env:
2025-01-17T11:17:49.7358750Z   CACHE_NUMBER: 0
2025-01-17T11:17:49.7359478Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:17:49.7360245Z   CODECOV_TOKEN: 
2025-01-17T11:17:49.7360514Z ##[endgroup]
2025-01-17T11:17:49.8319946Z Syncing repository: atharva-2001/tardis-regression-data
2025-01-17T11:17:49.8328129Z ##[group]Getting Git version info
2025-01-17T11:17:49.8329043Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-01-17T11:17:49.8368150Z [command]/usr/bin/git version
2025-01-17T11:17:49.8413730Z git version 2.47.1
2025-01-17T11:17:49.8439999Z ##[endgroup]
2025-01-17T11:17:49.8454460Z Temporarily overriding HOME='/home/runner/work/_temp/ef457d49-fd5e-4e44-b67d-77c1fea05eef' before making global git config changes
2025-01-17T11:17:49.8455963Z Adding repository directory to the temporary git global config as a safe directory
2025-01-17T11:17:49.8460189Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-17T11:17:49.8492325Z ##[group]Initializing the repository
2025-01-17T11:17:49.8497535Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-17T11:17:49.8534345Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-17T11:17:49.8535484Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-17T11:17:49.8536510Z hint: of your new repositories, which will suppress this warning, call:
2025-01-17T11:17:49.8536999Z hint:
2025-01-17T11:17:49.8537361Z hint: 	git config --global init.defaultBranch <name>
2025-01-17T11:17:49.8537762Z hint:
2025-01-17T11:17:49.8538165Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-17T11:17:49.8539046Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-17T11:17:49.8539512Z hint:
2025-01-17T11:17:49.8539784Z hint: 	git branch -m <name>
2025-01-17T11:17:49.8540381Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-17T11:17:49.8547566Z [command]/usr/bin/git remote add origin https://github.com/atharva-2001/tardis-regression-data
2025-01-17T11:17:49.8577843Z ##[endgroup]
2025-01-17T11:17:49.8578662Z ##[group]Disabling automatic garbage collection
2025-01-17T11:17:49.8581545Z [command]/usr/bin/git config --local gc.auto 0
2025-01-17T11:17:49.8610203Z ##[endgroup]
2025-01-17T11:17:49.8610733Z ##[group]Setting up auth
2025-01-17T11:17:49.8616988Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-17T11:17:49.8646099Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-17T11:17:49.8875559Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-17T11:17:49.8905398Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-17T11:17:49.9138703Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-17T11:17:49.9176082Z ##[endgroup]
2025-01-17T11:17:49.9176713Z ##[group]Fetching the repository
2025-01-17T11:17:49.9186929Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/numpy_v2_2*:refs/remotes/origin/numpy_v2_2* +refs/tags/numpy_v2_2*:refs/tags/numpy_v2_2*
2025-01-17T11:17:50.1916435Z From https://github.com/atharva-2001/tardis-regression-data
2025-01-17T11:17:50.1917211Z  * [new branch]      numpy_v2_2 -> origin/numpy_v2_2
2025-01-17T11:17:50.1939174Z ##[endgroup]
2025-01-17T11:17:50.1940166Z ##[group]Determining the checkout info
2025-01-17T11:17:50.1947363Z [command]/usr/bin/git branch --list --remote origin/numpy_v2_2
2025-01-17T11:17:50.1970189Z   origin/numpy_v2_2
2025-01-17T11:17:50.1977509Z ##[endgroup]
2025-01-17T11:17:50.1981961Z [command]/usr/bin/git sparse-checkout disable
2025-01-17T11:17:50.2017246Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-17T11:17:50.2043918Z ##[group]Checking out the ref
2025-01-17T11:17:50.2048353Z [command]/usr/bin/git checkout --progress --force -B numpy_v2_2 refs/remotes/origin/numpy_v2_2
2025-01-17T11:17:50.3143741Z Switched to a new branch 'numpy_v2_2'
2025-01-17T11:17:50.3145309Z branch 'numpy_v2_2' set up to track 'origin/numpy_v2_2'.
2025-01-17T11:17:50.3419232Z ##[endgroup]
2025-01-17T11:17:50.3462052Z [command]/usr/bin/git log -1 --format=%H
2025-01-17T11:17:50.3487861Z 1b733c351f2eb90190b8c0228dc6b4d32242ad4e
2025-01-17T11:17:50.3627439Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-17T11:17:50.3628035Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-17T11:17:50.3660244Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-17T11:17:50.3660633Z env:
2025-01-17T11:17:50.3660856Z   CACHE_NUMBER: 0
2025-01-17T11:17:50.3661547Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:17:50.3662237Z   CODECOV_TOKEN: 
2025-01-17T11:17:50.3662465Z ##[endgroup]
2025-01-17T11:17:50.5219084Z ##[group]Run actions/cache/restore@v4
2025-01-17T11:17:50.5219482Z with:
2025-01-17T11:17:50.5219776Z   path: tardis-regression-data/.git/lfs
2025-01-17T11:17:50.5220381Z   key: Linux-lfs-da2b5f2a10e913c6b13843a5855aea2bb20264b467d915063c23fa8ba1af31fb-v1
2025-01-17T11:17:50.5220971Z   enableCrossOsArchive: false
2025-01-17T11:17:50.5221642Z   fail-on-cache-miss: false
2025-01-17T11:17:50.5221968Z   lookup-only: false
2025-01-17T11:17:50.5222253Z env:
2025-01-17T11:17:50.5222510Z   CACHE_NUMBER: 0
2025-01-17T11:17:50.5224058Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:17:50.5224750Z   CODECOV_TOKEN: 
2025-01-17T11:17:50.5224975Z ##[endgroup]
2025-01-17T11:17:50.7664117Z Cache not found for input keys: Linux-lfs-da2b5f2a10e913c6b13843a5855aea2bb20264b467d915063c23fa8ba1af31fb-v1
2025-01-17T11:17:50.7782485Z ##[group]Run git lfs pull
2025-01-17T11:17:50.7783019Z [36;1mgit lfs pull[0m
2025-01-17T11:17:50.7810399Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-17T11:17:50.7810774Z env:
2025-01-17T11:17:50.7810985Z   CACHE_NUMBER: 0
2025-01-17T11:17:50.7811645Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:17:50.7812335Z   CODECOV_TOKEN: 
2025-01-17T11:17:50.7812682Z ##[endgroup]
2025-01-17T11:18:25.3626150Z Prepare all required actions
2025-01-17T11:18:25.3626506Z Getting action download info
2025-01-17T11:18:25.4455262Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-17T11:18:25.6672300Z ##[group]Run ./.github/actions/setup_env
2025-01-17T11:18:25.6673032Z with:
2025-01-17T11:18:25.6673233Z   os-label: linux-64
2025-01-17T11:18:25.6673416Z env:
2025-01-17T11:18:25.6673575Z   CACHE_NUMBER: 0
2025-01-17T11:18:25.6674173Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:18:25.6674797Z   CODECOV_TOKEN: 
2025-01-17T11:18:25.6674972Z ##[endgroup]
2025-01-17T11:18:25.6698878Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-17T11:18:25.6699373Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-17T11:18:25.6699781Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-17T11:18:25.6727978Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-17T11:18:25.6728275Z env:
2025-01-17T11:18:25.6728437Z   CACHE_NUMBER: 0
2025-01-17T11:18:25.6729018Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:18:25.6729636Z   CODECOV_TOKEN: 
2025-01-17T11:18:25.6729805Z ##[endgroup]
2025-01-17T11:18:25.7073600Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-17T11:18:25.7073858Z with:
2025-01-17T11:18:25.7074045Z   environment-file: conda-linux-64.lock
2025-01-17T11:18:25.7074459Z   cache-environment-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-17T11:18:25.7075008Z   cache-downloads-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-17T11:18:25.7075413Z   environment-name: tardis
2025-01-17T11:18:25.7075639Z   cache-environment: true
2025-01-17T11:18:25.7075846Z   cache-downloads: true
2025-01-17T11:18:25.7076034Z env:
2025-01-17T11:18:25.7076184Z   CACHE_NUMBER: 0
2025-01-17T11:18:25.7076778Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:18:25.7077399Z   CODECOV_TOKEN: 
2025-01-17T11:18:25.7077571Z ##[endgroup]
2025-01-17T11:18:25.8494389Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-01-17T11:18:25.8508850Z ##[group]Install micromamba
2025-01-17T11:18:26.0810636Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-01-17T11:18:26.0811687Z ##[endgroup]
2025-01-17T11:18:26.0812287Z Adding conda-forge to condarc channels ...
2025-01-17T11:18:26.0822199Z ##[group]Initialize micromamba for bash.
2025-01-17T11:18:26.0838728Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:18:26.0955558Z Modifying RC file "/home/runner/.bashrc"
2025-01-17T11:18:26.0956998Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-01-17T11:18:26.0959247Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-01-17T11:18:26.0960083Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-01-17T11:18:26.0960598Z 
2025-01-17T11:18:26.0960740Z # >>> mamba initialize >>>
2025-01-17T11:18:26.0961210Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-17T11:18:26.0961834Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-01-17T11:18:26.0962425Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-01-17T11:18:26.0963481Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-17T11:18:26.0964210Z if [ $? -eq 0 ]; then
2025-01-17T11:18:26.0964577Z     eval "$__mamba_setup"
2025-01-17T11:18:26.0964922Z else
2025-01-17T11:18:26.0965763Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-17T11:18:26.0966371Z fi
2025-01-17T11:18:26.0966644Z unset __mamba_setup
2025-01-17T11:18:26.0966930Z # <<< mamba initialize <<<
2025-01-17T11:18:26.0967163Z 
2025-01-17T11:18:26.0977576Z Moving mamba initialize block to .bash_profile
2025-01-17T11:18:26.0996982Z ##[endgroup]
2025-01-17T11:18:26.0998634Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-01-17T11:18:27.2148799Z Received 230686720 of 358593873 (64.3%), 220.0 MBs/sec
2025-01-17T11:18:27.6610037Z Cache Size: ~342 MB (358593873 B)
2025-01-17T11:18:27.6648278Z [command]/usr/bin/tar -xf /home/runner/work/_temp/91bc308f-4a51-4856-b879-815a5eb987e0/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-17T11:18:28.1423306Z Cache restored successfully
2025-01-17T11:18:28.2131513Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64`
2025-01-17T11:18:28.2135312Z ##[endgroup]
2025-01-17T11:18:28.2147795Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-01-17T11:18:28.2155380Z Received 358593873 of 358593873 (100.0%), 170.9 MBs/sec
2025-01-17T11:18:29.3056499Z Received 268435456 of 446763168 (60.1%), 255.5 MBs/sec
2025-01-17T11:18:29.8754085Z Cache Size: ~426 MB (446763168 B)
2025-01-17T11:18:29.8837899Z [command]/usr/bin/tar -xf /home/runner/work/_temp/95fdd5eb-1af4-44ca-84c3-d8b3e88ffd48/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-17T11:18:30.3069843Z Received 446763168 of 446763168 (100.0%), 212.7 MBs/sec
2025-01-17T11:18:35.2922333Z Cache restored successfully
2025-01-17T11:18:35.4556513Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614`
2025-01-17T11:18:35.4558579Z ##[endgroup]
2025-01-17T11:18:35.4559019Z Adding environment tardis to auto-activate bash ...
2025-01-17T11:18:35.4568800Z Generating micromamba run shell.
2025-01-17T11:18:35.4578750Z ##[endgroup]
2025-01-17T11:18:35.4584260Z Set environment variables.
2025-01-17T11:18:35.4588592Z ##[group]micromamba info
2025-01-17T11:18:35.4592104Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-01-17T11:18:35.4829924Z 
2025-01-17T11:18:35.4830826Z        libmamba version : 1.5.10
2025-01-17T11:18:35.4831321Z      micromamba version : 1.5.10
2025-01-17T11:18:35.4831956Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-17T11:18:35.4833054Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-17T11:18:35.4833731Z        envs directories : /home/runner/micromamba/envs
2025-01-17T11:18:35.4834302Z           package cache : /home/runner/micromamba/pkgs
2025-01-17T11:18:35.4835286Z                           /home/runner/.mamba/pkgs
2025-01-17T11:18:35.4835762Z             environment : tardis
2025-01-17T11:18:35.4836252Z            env location : /home/runner/micromamba/envs/tardis
2025-01-17T11:18:35.4836702Z       user config files : /home/runner/.mambarc
2025-01-17T11:18:35.4837153Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:18:35.4837586Z        virtual packages : __unix=0=0
2025-01-17T11:18:35.4837870Z                           __linux=6.8.0=0
2025-01-17T11:18:35.4838149Z                           __glibc=2.39=0
2025-01-17T11:18:35.4838438Z                           __archspec=1=x86_64_v3
2025-01-17T11:18:35.4838841Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-01-17T11:18:35.4839288Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-17T11:18:35.4839814Z        base environment : /home/runner/micromamba
2025-01-17T11:18:35.4840152Z                platform : linux-64
2025-01-17T11:18:35.4853987Z ##[endgroup]
2025-01-17T11:18:35.4854946Z ##[group]micromamba list
2025-01-17T11:18:35.4856831Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-01-17T11:18:35.8845809Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-01-17T11:18:35.8846601Z 
2025-01-17T11:18:35.8846991Z   Name                           Version              Build                    Channel    
2025-01-17T11:18:35.8848292Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-17T11:18:35.8849058Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-01-17T11:18:35.8849851Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-01-17T11:18:35.8850487Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8851242Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8851969Z   argon2-cffi                    23.1.0               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8852968Z   argon2-cffi-bindings           21.2.0               py312h66e93f0_5          conda-forge
2025-01-17T11:18:35.8853624Z   arrow                          1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8854260Z   astropy                        6.1.1                py312h4fc7734_1          conda-forge
2025-01-17T11:18:35.8855147Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8856230Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8857133Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8857659Z   async-lru                      2.0.4                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8858119Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-01-17T11:18:35.8858545Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-17T11:18:35.8858977Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8859452Z   beautifulsoup4                 4.12.3               pyha770c72_1             conda-forge
2025-01-17T11:18:35.8859928Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8860341Z   blosc                          1.21.6               hef167b5_0               conda-forge
2025-01-17T11:18:35.8860662Z   brotli                         1.1.0                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.8860990Z   brotli-bin                     1.1.0                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.8861739Z   brotli-python                  1.1.0                py312h2ec8cdc_2          conda-forge
2025-01-17T11:18:35.8862112Z   bzip2                          1.0.8                h4bc722e_7               conda-forge
2025-01-17T11:18:35.8862439Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-01-17T11:18:35.8863030Z   c-blosc2                       2.15.2               h68e2383_0               conda-forge
2025-01-17T11:18:35.8863397Z   ca-certificates                2024.12.14           hbcca054_0               conda-forge
2025-01-17T11:18:35.8863790Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-17T11:18:35.8864170Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-17T11:18:35.8864519Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-01-17T11:18:35.8864865Z   certifi                        2024.12.14           pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8865379Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-01-17T11:18:35.8865753Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8866121Z   click                          8.1.7                unix_pyh707e725_1        conda-forge
2025-01-17T11:18:35.8866455Z   codespell                      2.3.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8866804Z   colorama                       0.4.6                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8867148Z   comm                           0.2.2                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8867478Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-17T11:18:35.8867826Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-01-17T11:18:35.8868175Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-01-17T11:18:35.8868515Z   cycler                         0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8868859Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-17T11:18:35.8869353Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-01-17T11:18:35.8869819Z   decorator                      5.1.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8870228Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8870854Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-01-17T11:18:35.8871286Z   dot2tex                        2.11.3               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8871761Z   entrypoints                    0.4                  pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8872278Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-17T11:18:35.8872971Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8873497Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-01-17T11:18:35.8873971Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-17T11:18:35.8874473Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-17T11:18:35.8875077Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-17T11:18:35.8875568Z   font-ttf-ubuntu                0.83                 h77eed37_3               conda-forge
2025-01-17T11:18:35.8876053Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-01-17T11:18:35.8876715Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-17T11:18:35.8877194Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-17T11:18:35.8877734Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-01-17T11:18:35.8900252Z   fqdn                           1.5.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8900939Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-01-17T11:18:35.8901537Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-01-17T11:18:35.8902122Z   future                         1.0.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8902931Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-01-17T11:18:35.8903865Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-01-17T11:18:35.8904863Z   git-lfs                        3.5.1                h647637d_1               conda-forge
2025-01-17T11:18:35.8905485Z   gmp                            6.3.0                hac33072_2               conda-forge
2025-01-17T11:18:35.8906059Z   gmpy2                          2.1.5                py312h7201bc8_3          conda-forge
2025-01-17T11:18:35.8906650Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-01-17T11:18:35.8907250Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-01-17T11:18:35.8907862Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-01-17T11:18:35.8908398Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-01-17T11:18:35.8908984Z   h11                            0.14.0               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8909330Z   h2                             4.1.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8909678Z   h5py                           3.11.0               nompi_py312hedeef09_103  conda-forge
2025-01-17T11:18:35.8910025Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-01-17T11:18:35.8910382Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-01-17T11:18:35.8910762Z   hpack                          4.0.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8911109Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8911455Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8911793Z   hyperframe                     6.0.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8912117Z   icu                            73.2                 h59595ed_0               conda-forge
2025-01-17T11:18:35.8912437Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8913045Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8913443Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-17T11:18:35.8913844Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-17T11:18:35.8914242Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8914618Z   iniconfig                      2.0.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8914965Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-01-17T11:18:35.8915301Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-17T11:18:35.8915661Z   ipython_genutils               0.2.0                pyhd8ed1ab_2             conda-forge
2025-01-17T11:18:35.8916228Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8916593Z   isoduration                    20.11.0              pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8916936Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8917273Z   jinja2                         3.1.4                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8917614Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8917963Z   jsonpointer                    3.0.0                py312h7900ff3_1          conda-forge
2025-01-17T11:18:35.8918321Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8918739Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8919345Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8919796Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8920166Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8920533Z   jupyter_core                   5.7.2                pyh31011fe_1             conda-forge
2025-01-17T11:18:35.8920895Z   jupyter_events                 0.10.0               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8921269Z   jupyter_server                 2.14.1               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8942461Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8943114Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8943529Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_2             conda-forge
2025-01-17T11:18:35.8943954Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8944340Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8944694Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-01-17T11:18:35.8945024Z   kiwisolver                     1.4.5                py312h68727a3_2          conda-forge
2025-01-17T11:18:35.8945369Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-01-17T11:18:35.8945705Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-17T11:18:35.8946031Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-01-17T11:18:35.8946361Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-01-17T11:18:35.8946681Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-01-17T11:18:35.8946985Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-01-17T11:18:35.8947297Z   libblas                        3.9.0                24_linux64_openblas      conda-forge
2025-01-17T11:18:35.8947642Z   libbrotlicommon                1.1.0                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.8948000Z   libbrotlidec                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.8948343Z   libbrotlienc                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.8948680Z   libcblas                       3.9.0                24_linux64_openblas      conda-forge
2025-01-17T11:18:35.8949002Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-01-17T11:18:35.8949322Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-01-17T11:18:35.8949882Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-01-17T11:18:35.8950212Z   libev                          4.33                 hd590300_2               conda-forge
2025-01-17T11:18:35.8950523Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-01-17T11:18:35.8950837Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-01-17T11:18:35.8951144Z   libgcc                         14.2.0               h77fa898_1               conda-forge
2025-01-17T11:18:35.8951464Z   libgcc-ng                      14.2.0               h69a702a_1               conda-forge
2025-01-17T11:18:35.8951774Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-01-17T11:18:35.8952098Z   libgfortran-ng                 13.2.0               h69a702a_13              conda-forge
2025-01-17T11:18:35.8952455Z   libgfortran5                   13.2.0               h3d2ce59_13              conda-forge
2025-01-17T11:18:35.8953153Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-01-17T11:18:35.8953508Z   libgomp                        14.2.0               h77fa898_1               conda-forge
2025-01-17T11:18:35.8953831Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-01-17T11:18:35.8954177Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-01-17T11:18:35.8954528Z   liblapack                      3.9.0                24_linux64_openblas      conda-forge
2025-01-17T11:18:35.8954868Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-01-17T11:18:35.8955208Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-01-17T11:18:35.8955541Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-01-17T11:18:35.8955907Z   libopenblas                    0.3.27               pthreads_hac2b453_1      conda-forge
2025-01-17T11:18:35.8956258Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-01-17T11:18:35.8956577Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-01-17T11:18:35.8956904Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-01-17T11:18:35.8957235Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-01-17T11:18:35.8957557Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-01-17T11:18:35.8957880Z   libstdcxx                      14.2.0               hc0a3c3a_1               conda-forge
2025-01-17T11:18:35.8958216Z   libstdcxx-ng                   14.2.0               h4852527_1               conda-forge
2025-01-17T11:18:35.8958551Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-01-17T11:18:35.8958873Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-01-17T11:18:35.8959197Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-01-17T11:18:35.8959531Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-01-17T11:18:35.8959870Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-01-17T11:18:35.8960196Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-01-17T11:18:35.8960527Z   libxml2                        2.12.7               h4c95cb1_3               conda-forge
2025-01-17T11:18:35.8960850Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-01-17T11:18:35.8961170Z   libzlib                        1.3.1                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.8961643Z   llvmlite                       0.43.0               py312h374181b_1          conda-forge
2025-01-17T11:18:35.8961968Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-01-17T11:18:35.8962273Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-01-17T11:18:35.8962761Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-01-17T11:18:35.8963095Z   markupsafe                     2.1.5                py312h66e93f0_1          conda-forge
2025-01-17T11:18:35.8963460Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-01-17T11:18:35.8963844Z   matplotlib-inline              0.1.7                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8964204Z   mistune                        3.0.2                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8964519Z   mpc                            1.3.1                h24ddda3_1               conda-forge
2025-01-17T11:18:35.8964961Z   mpfr                           4.2.1                h90cbb55_3               conda-forge
2025-01-17T11:18:35.8965347Z   mpmath                         1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8965679Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-17T11:18:35.8966029Z   mypy_extensions                1.0.0                pyha770c72_1             conda-forge
2025-01-17T11:18:35.8966383Z   nbclassic                      1.1.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8966726Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8967068Z   nbconvert                      7.16.4               hd8ed1ab_3               conda-forge
2025-01-17T11:18:35.8967422Z   nbconvert-core                 7.16.4               pyhd8ed1ab_3             conda-forge
2025-01-17T11:18:35.8967820Z   nbconvert-pandoc               7.16.4               hd8ed1ab_3               conda-forge
2025-01-17T11:18:35.8968183Z   nbformat                       5.10.4               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8968527Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8968855Z   ncurses                        6.5                  he02047a_1               conda-forge
2025-01-17T11:18:35.8969197Z   nest-asyncio                   1.6.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8969544Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8969874Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-01-17T11:18:35.8970197Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8970551Z   notebook-shim                  0.2.4                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8970898Z   numba                          0.60.0               py312h83e6fd3_0          conda-forge
2025-01-17T11:18:35.8971224Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-01-17T11:18:35.8971547Z   numpy                          2.0.2                py312h58c1407_1          conda-forge
2025-01-17T11:18:35.8971873Z   numpydoc                       1.7.0                pyhd8ed1ab_3             conda-forge
2025-01-17T11:18:35.8972203Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-01-17T11:18:35.8972685Z   openssl                        3.4.0                h7b32b05_1               conda-forge
2025-01-17T11:18:35.8973045Z   overrides                      7.7.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8973417Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8973910Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-01-17T11:18:35.8974230Z   pandoc                         3.2.1                ha770c72_0               conda-forge
2025-01-17T11:18:35.8974577Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8974918Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-01-17T11:18:35.8975232Z   parso                          0.8.4                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8975560Z   pathspec                       0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8975886Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8976196Z   pcre2                          10.44                hba22ea6_2               conda-forge
2025-01-17T11:18:35.8976518Z   pexpect                        4.9.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8976987Z   pickleshare                    0.7.5                pyhd8ed1ab_1004          conda-forge
2025-01-17T11:18:35.8977332Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-01-17T11:18:35.8977653Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8977965Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-01-17T11:18:35.8978340Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_2             conda-forge
2025-01-17T11:18:35.8978737Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8979085Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8979419Z   pluggy                         1.5.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8979788Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8980187Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-17T11:18:35.8980545Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-01-17T11:18:35.8980888Z   pthread-stubs                  0.4                  hb9d3cd8_1002            conda-forge
2025-01-17T11:18:35.8981244Z   ptyprocess                     0.7.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8981586Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8981923Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8982257Z   pybtex                         0.24.0               pyhd8ed1ab_3             conda-forge
2025-01-17T11:18:35.8982778Z   pybtex-docutils                1.0.3                py312h7900ff3_2          conda-forge
2025-01-17T11:18:35.8983154Z   pycparser                      2.22                 pyh29332c3_1             conda-forge
2025-01-17T11:18:35.8983489Z   pyerfa                         2.0.1.4              py312hc0a28a1_2          conda-forge
2025-01-17T11:18:35.8983821Z   pygments                       2.18.0               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8984164Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-01-17T11:18:35.8984511Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8984848Z   pysocks                        1.7.1                pyha55dd90_7             conda-forge
2025-01-17T11:18:35.8985182Z   pytables                       3.10.2               py312h2895ec7_0          conda-forge
2025-01-17T11:18:35.8985506Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8985970Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8986348Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8986724Z   pytest-html                    4.1.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8987091Z   pytest-metadata                3.1.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8987449Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-01-17T11:18:35.8987813Z   python-dateutil                2.9.0.post0          pyhff2d567_1             conda-forge
2025-01-17T11:18:35.8988227Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8988639Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8989026Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8989500Z   python_abi                     3.12                 5_cp312                  conda-forge
2025-01-17T11:18:35.8989832Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8990148Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-01-17T11:18:35.8990468Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-01-17T11:18:35.8990782Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-17T11:18:35.8991133Z   radioactivedecay               0.5.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8991491Z   readline                       8.2                  h8228510_1               conda-forge
2025-01-17T11:18:35.8991832Z   recommonmark                   0.7.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8992198Z   referencing                    0.35.1               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8992716Z   requests                       2.32.3               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8993148Z   rfc3339-validator              0.1.4                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8993537Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-17T11:18:35.8993892Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-01-17T11:18:35.8994207Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-01-17T11:18:35.8994517Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-01-17T11:18:35.8994853Z   send2trash                     1.8.3                pyh0d859eb_1             conda-forge
2025-01-17T11:18:35.8995217Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8995582Z   setuptools-scm                 8.1.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8995950Z   setuptools_scm                 8.1.0                hd8ed1ab_1               conda-forge
2025-01-17T11:18:35.8996281Z   six                            1.16.0               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8996598Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8996925Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-01-17T11:18:35.8997247Z   sniffio                        1.3.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8997606Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8997967Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8998425Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8998777Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.8999162Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-17T11:18:35.8999546Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.8999934Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9000331Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9000716Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-17T11:18:35.9001100Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-17T11:18:35.9001521Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9002066Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9002489Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9003085Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9003510Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9003917Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9004327Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9004784Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9005375Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9005937Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-17T11:18:35.9006509Z   tabulate                       0.9.0                pyhd8ed1ab_2             conda-forge
2025-01-17T11:18:35.9006961Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9007300Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-01-17T11:18:35.9007635Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9007949Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-01-17T11:18:35.9008255Z   toml                           0.10.2               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9008566Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9008888Z   tornado                        6.4.1                py312h66e93f0_1          conda-forge
2025-01-17T11:18:35.9009214Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9009541Z   traitlets                      5.14.3               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9009884Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-01-17T11:18:35.9010273Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9010689Z   typing-extensions              4.12.2               hd8ed1ab_1               conda-forge
2025-01-17T11:18:35.9011069Z   typing_extensions              4.12.2               pyha770c72_1             conda-forge
2025-01-17T11:18:35.9011437Z   typing_utils                   0.1.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9011781Z   tzdata                         2024a                h8827d51_1               conda-forge
2025-01-17T11:18:35.9012302Z   uri-template                   1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9012855Z   urllib3                        2.2.2                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9013191Z   wcwidth                        0.2.13               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9013537Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9013886Z   webencodings                   0.5.1                pyhd8ed1ab_3             conda-forge
2025-01-17T11:18:35.9014260Z   websocket-client               1.8.0                pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9014611Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-17T11:18:35.9014974Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9015350Z   xorg-kbproto                   1.0.7                hb9d3cd8_1003            conda-forge
2025-01-17T11:18:35.9015828Z   xorg-libice                    1.1.1                hb9d3cd8_1               conda-forge
2025-01-17T11:18:35.9016173Z   xorg-libsm                     1.2.4                he73a12e_1               conda-forge
2025-01-17T11:18:35.9016647Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-01-17T11:18:35.9017173Z   xorg-libxau                    1.0.11               hb9d3cd8_1               conda-forge
2025-01-17T11:18:35.9017528Z   xorg-libxdmcp                  1.1.3                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.9017883Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-01-17T11:18:35.9018242Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-01-17T11:18:35.9018611Z   xorg-renderproto               0.11.1               hb9d3cd8_1003            conda-forge
2025-01-17T11:18:35.9018992Z   xorg-xextproto                 7.3.0                hb9d3cd8_1004            conda-forge
2025-01-17T11:18:35.9019357Z   xorg-xproto                    7.0.31               hb9d3cd8_1008            conda-forge
2025-01-17T11:18:35.9019677Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-01-17T11:18:35.9019971Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-01-17T11:18:35.9020279Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-01-17T11:18:35.9020589Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-17T11:18:35.9020896Z   zlib                           1.3.1                hb9d3cd8_2               conda-forge
2025-01-17T11:18:35.9021201Z   zlib-ng                        2.2.3                h7955e40_0               conda-forge
2025-01-17T11:18:35.9021527Z   zstandard                      0.23.0               py312hef9b889_1          conda-forge
2025-01-17T11:18:35.9021860Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-01-17T11:18:35.9022385Z ##[endgroup]
2025-01-17T11:18:35.9059549Z ##[group]Run pip install -e . --user
2025-01-17T11:18:35.9059861Z [36;1mpip install -e . --user[0m
2025-01-17T11:18:35.9091057Z shell: /usr/bin/bash -l {0}
2025-01-17T11:18:35.9091292Z env:
2025-01-17T11:18:35.9091457Z   CACHE_NUMBER: 0
2025-01-17T11:18:35.9092066Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:18:35.9092964Z   CODECOV_TOKEN: 
2025-01-17T11:18:35.9093202Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-17T11:18:35.9093514Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-17T11:18:35.9093863Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:18:35.9094160Z ##[endgroup]
2025-01-17T11:18:36.6322128Z Obtaining file:///home/runner/work/tardis/tardis
2025-01-17T11:18:36.6359400Z   Installing build dependencies: started
2025-01-17T11:18:39.6126713Z   Installing build dependencies: finished with status 'done'
2025-01-17T11:18:39.6134046Z   Checking if build backend supports build_editable: started
2025-01-17T11:18:39.7430525Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-17T11:18:39.7438873Z   Getting requirements to build editable: started
2025-01-17T11:18:40.2461711Z   Getting requirements to build editable: finished with status 'done'
2025-01-17T11:18:40.2470506Z   Preparing editable metadata (pyproject.toml): started
2025-01-17T11:18:40.7141105Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-17T11:18:40.7735403Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-17T11:18:40.8130589Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.2)
2025-01-17T11:18:40.8141455Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-17T11:18:40.8153442Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-17T11:18:40.8163952Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-17T11:18:40.8173500Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-17T11:18:40.8264656Z Building wheels for collected packages: tardis
2025-01-17T11:18:40.8272901Z   Building editable for tardis (pyproject.toml): started
2025-01-17T11:18:41.5923747Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-17T11:18:41.5930281Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8876 sha256=ea09f866d019c54cb35570b1e92683dbab2b3d7a41ad3a590b20e97fa4c868a4
2025-01-17T11:18:41.5931632Z   Stored in directory: /tmp/pip-ephem-wheel-cache-u6g74g11/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-01-17T11:18:41.5958674Z Successfully built tardis
2025-01-17T11:18:42.3613780Z Installing collected packages: tardis
2025-01-17T11:18:42.3708045Z Successfully installed tardis-0.0.0
2025-01-17T11:18:42.6149566Z ##[group]Run pip install qgridnext
2025-01-17T11:18:42.6149880Z [36;1mpip install qgridnext[0m
2025-01-17T11:18:42.6176882Z shell: /usr/bin/bash -l {0}
2025-01-17T11:18:42.6177119Z env:
2025-01-17T11:18:42.6177287Z   CACHE_NUMBER: 0
2025-01-17T11:18:42.6177886Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:18:42.6178556Z   CODECOV_TOKEN: 
2025-01-17T11:18:42.6178772Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-17T11:18:42.6179066Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-17T11:18:42.6179405Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:18:42.6179697Z ##[endgroup]
2025-01-17T11:18:43.2699160Z Collecting qgridnext
2025-01-17T11:18:43.3241884Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-17T11:18:43.3380647Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-17T11:18:43.3389577Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-17T11:18:43.3399342Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.0.2)
2025-01-17T11:18:43.3410149Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-17T11:18:43.3498155Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-17T11:18:43.3506947Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-17T11:18:43.3520467Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-17T11:18:43.3539488Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-17T11:18:43.3554748Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-17T11:18:43.3998525Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0.post0)
2025-01-17T11:18:43.4013285Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-17T11:18:43.4022057Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-17T11:18:43.4341426Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-17T11:18:43.4357682Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-17T11:18:43.4367497Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-17T11:18:43.4379648Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-17T11:18:43.4389894Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-17T11:18:43.4400586Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-17T11:18:43.4421022Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-17T11:18:43.4471983Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-17T11:18:43.4530679Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-17T11:18:43.4723653Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-17T11:18:43.4875589Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-17T11:18:43.4890775Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-17T11:18:43.4909194Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-17T11:18:43.4921582Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-17T11:18:43.4931033Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-17T11:18:43.4963705Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-17T11:18:43.4993921Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-17T11:18:43.5143449Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-17T11:18:43.5154148Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-17T11:18:43.5163189Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-17T11:18:43.5508594Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-17T11:18:43.5520446Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-17T11:18:43.5530908Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-17T11:18:43.5543732Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-17T11:18:43.5556753Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-17T11:18:43.5568839Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-17T11:18:43.5580737Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-17T11:18:43.5595246Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-17T11:18:43.5606295Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-17T11:18:43.5616390Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-17T11:18:43.5627202Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-17T11:18:43.5637101Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-17T11:18:43.5650054Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-17T11:18:43.5661507Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-17T11:18:43.5675360Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-17T11:18:43.5694715Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-17T11:18:43.5985005Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-17T11:18:43.5998575Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-17T11:18:43.6011872Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-17T11:18:43.6026977Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-17T11:18:43.6054804Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-17T11:18:43.6250448Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-17T11:18:43.6278540Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-17T11:18:43.6290204Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-17T11:18:43.6310192Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-17T11:18:43.6667181Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-17T11:18:43.6676700Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-17T11:18:43.6779209Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-17T11:18:43.6954398Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.12.14)
2025-01-17T11:18:43.6969391Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-17T11:18:43.7050277Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-17T11:18:43.7236469Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-17T11:18:43.7258487Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-17T11:18:43.7273816Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-17T11:18:43.7338693Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-17T11:18:43.7539686Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-17T11:18:43.7550432Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-17T11:18:43.7560020Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-17T11:18:43.7569802Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-17T11:18:43.7840183Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-17T11:18:43.7993908Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-17T11:18:43.8002473Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-17T11:18:43.8013640Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-17T11:18:43.8023062Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-17T11:18:43.8465625Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-17T11:18:43.8485576Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-17T11:18:43.8500617Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-17T11:18:43.8515874Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-17T11:18:43.8528779Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-17T11:18:43.8541962Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-17T11:18:43.8559685Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-17T11:18:43.8570153Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-17T11:18:43.8691915Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-17T11:18:43.9014958Z Requirement already satisfied: charset_normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-17T11:18:43.9030219Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-17T11:18:43.9820864Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-17T11:18:44.0402801Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-17T11:18:44.0418233Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-17T11:18:44.0432786Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-17T11:18:44.0451478Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-17T11:18:44.0465145Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-17T11:18:44.1516509Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-17T11:18:44.1619884Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-17T11:18:44.2175042Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-17T11:18:44.2703783Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-17T11:18:44.3018144Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-17T11:18:44.3452951Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-17T11:18:44.4060105Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 21.6 MB/s eta 0:00:00
2025-01-17T11:18:45.2022829Z Installing collected packages: qgridnext
2025-01-17T11:18:45.2934176Z Successfully installed qgridnext-2.0.4
2025-01-17T11:18:45.5182803Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-17T11:18:45.5184075Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-17T11:18:45.5211440Z shell: /usr/bin/bash -l {0}
2025-01-17T11:18:45.5211681Z env:
2025-01-17T11:18:45.5211845Z   CACHE_NUMBER: 0
2025-01-17T11:18:45.5212449Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:18:45.5213363Z   CODECOV_TOKEN: 
2025-01-17T11:18:45.5213577Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-17T11:18:45.5213870Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-17T11:18:45.5214264Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:18:45.5214556Z ##[endgroup]
2025-01-17T11:18:54.7287682Z ============================= test session starts ==============================
2025-01-17T11:18:54.7288665Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-17T11:18:54.7289265Z rootdir: /home/runner/work/tardis/tardis
2025-01-17T11:18:54.7289718Z configfile: pyproject.toml
2025-01-17T11:18:54.7290264Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-17T11:18:54.7290911Z collected 1796 items / 2 deselected / 1794 selected
2025-01-17T11:18:54.7291231Z 
2025-01-17T11:19:00.0594703Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-17T11:19:01.6606700Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-17T11:19:03.3615338Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-17T11:19:05.3499840Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-17T11:19:05.3607614Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-17T11:19:06.7090814Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-17T11:19:07.0621338Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-17T11:19:07.0638463Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-17T11:19:10.8464043Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-17T11:19:10.8593270Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-17T11:19:10.8893891Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-17T11:19:52.1393843Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-17T11:19:52.1540574Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-17T11:19:52.1649005Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-17T11:19:52.1979448Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-17T11:19:52.2217123Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-17T11:19:52.5385422Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-17T11:19:52.8839213Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-17T11:19:52.9213237Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-17T11:19:53.1250821Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-17T11:19:53.1325380Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-17T11:20:55.3231134Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-17T11:20:56.3592415Z ............                                                             [ 10%]
2025-01-17T11:20:59.5625813Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-17T11:20:59.6141838Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-17T11:21:01.0006269Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-17T11:21:02.4076428Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-17T11:21:04.8043975Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-17T11:21:07.8568057Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-17T11:21:55.4948496Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-17T11:22:07.0842856Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-17T11:22:08.8408654Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-01-17T11:22:12.4832130Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-17T11:22:14.9475845Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-17T11:22:18.6195506Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-01-17T11:22:22.6296334Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-17T11:22:24.0274512Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-01-17T11:22:27.7891284Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-01-17T11:22:31.8025929Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-01-17T11:22:35.7993680Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-17T11:22:38.5488137Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-01-17T11:22:42.1231351Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-01-17T11:22:46.4538889Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-01-17T11:22:47.1657630Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-17T11:22:47.4510550Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-17T11:22:47.4637618Z ......                                                                   [ 62%]
2025-01-17T11:22:47.6077942Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-17T11:25:08.0550284Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-17T11:25:08.0577637Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-17T11:25:31.6273634Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-17T11:25:44.9723263Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-17T11:25:45.7318252Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-17T11:25:54.5415816Z tardis/simulation/tests/test_simulation.py FFFFFFFFFF...                 [ 65%]
2025-01-17T11:25:54.5614549Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-17T11:25:55.0295360Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-17T11:25:55.0370018Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-17T11:25:57.1673912Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-17T11:25:57.1866972Z ..........                                                               [ 69%]
2025-01-17T11:25:57.3569681Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-17T11:25:57.3896907Z .........                                                                [ 72%]
2025-01-17T11:26:16.0926704Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-17T11:27:19.5707412Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-17T11:28:46.2885933Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-17T11:28:46.3649561Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-17T11:28:49.0618497Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-17T11:28:56.5349805Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-17T11:28:56.7685355Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-17T11:28:56.7862307Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-17T11:28:56.8285719Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-17T11:29:05.7920285Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-17T11:29:05.7986948Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-17T11:29:12.2093713Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-17T11:29:12.6890599Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-17T11:29:13.7173930Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-17T11:29:13.8587508Z XX.........                                                              [ 84%]
2025-01-17T11:29:13.8862717Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-17T11:29:14.1947313Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-17T11:29:14.6190857Z .....                                                                    [ 85%]
2025-01-17T11:29:49.4806004Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-17T11:29:49.5100771Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-17T11:29:49.5132982Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-17T11:29:52.4871888Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-17T11:29:52.5043497Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-17T11:29:56.3441258Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-17T11:29:56.3442272Z                                                                          [ 86%]
2025-01-17T11:29:57.0746314Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-17T11:29:58.4204094Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-17T11:30:00.6372025Z ......                                                                   [ 88%]
2025-01-17T11:30:05.5629803Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..FF.F [ 90%]
2025-01-17T11:30:08.9076998Z ..FF.....FF.F............FF.F                                            [ 91%]
2025-01-17T11:30:11.8470598Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-17T11:30:18.9514299Z ....                                                                     [ 92%]
2025-01-17T11:30:25.0611975Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-17T11:30:33.3314100Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-17T11:30:33.7637555Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-17T11:30:33.8339528Z ....                                                                     [ 96%]
2025-01-17T11:30:34.8947989Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-17T11:30:35.5175542Z ..................                                                       [ 98%]
2025-01-17T11:31:39.0140588Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-17T11:31:46.4029154Z ......                                                                   [100%]
2025-01-17T11:31:46.4029542Z 
2025-01-17T11:31:46.4029727Z =================================== FAILURES ===================================
2025-01-17T11:31:46.4030391Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-17T11:31:46.4030839Z 
2025-01-17T11:31:46.4031030Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-17T11:31:46.4031669Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-17T11:31:46.4032158Z 
2025-01-17T11:31:46.4032419Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4033697Z         if err_msg is None:
2025-01-17T11:31:46.4034115Z             if left.shape != right.shape:
2025-01-17T11:31:46.4034618Z                 raise_assert_detail(
2025-01-17T11:31:46.4035281Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4035958Z                 )
2025-01-17T11:31:46.4036348Z     
2025-01-17T11:31:46.4036656Z             diff = 0
2025-01-17T11:31:46.4037043Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4037535Z                 # count up differences
2025-01-17T11:31:46.4038098Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4038545Z                     diff += 1
2025-01-17T11:31:46.4038782Z     
2025-01-17T11:31:46.4038980Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4039328Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4039796Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4040243Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4040555Z E           
2025-01-17T11:31:46.4040807Z E           numpy array values are different (0.08897 %)
2025-01-17T11:31:46.4041513Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-17T11:31:46.4042801Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-17T11:31:46.4043395Z 
2025-01-17T11:31:46.4043787Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4044254Z 
2025-01-17T11:31:46.4044456Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4044753Z 
2025-01-17T11:31:46.4045036Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81765d6fc0>
2025-01-17T11:31:46.4045738Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f81546d0320>
2025-01-17T11:31:46.4046154Z 
2025-01-17T11:31:46.4046261Z     def test_calculate_sobolev_line_opacity(
2025-01-17T11:31:46.4046540Z         nb_simulation_verysimple, regression_data
2025-01-17T11:31:46.4046791Z     ):
2025-01-17T11:31:46.4047002Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-17T11:31:46.4047260Z     
2025-01-17T11:31:46.4047490Z         actual = calculate_sobolev_line_opacity(
2025-01-17T11:31:46.4048392Z             legacy_plasma.lines,
2025-01-17T11:31:46.4049108Z             legacy_plasma.level_number_density,
2025-01-17T11:31:46.4049470Z             legacy_plasma.time_explosion,
2025-01-17T11:31:46.4049815Z             legacy_plasma.stimulated_emission_factor,
2025-01-17T11:31:46.4050260Z         )
2025-01-17T11:31:46.4050618Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.4051122Z >       pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4051438Z 
2025-01-17T11:31:46.4051623Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-17T11:31:46.4053100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4053713Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4054227Z     ???
2025-01-17T11:31:46.4054569Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4054923Z 
2025-01-17T11:31:46.4055046Z >   ???
2025-01-17T11:31:46.4055396Z E   AssertionError: MultiIndex level [0] are different
2025-01-17T11:31:46.4055879Z E   
2025-01-17T11:31:46.4056241Z E   MultiIndex level [0] values are different (0.08897 %)
2025-01-17T11:31:46.4056782Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.4057219Z E          ...
2025-01-17T11:31:46.4057522Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.4057986Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.4058504Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.4058947Z E          ...
2025-01-17T11:31:46.4059250Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.4059719Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.4060219Z E   At positional index 54, first diff: 14 != 12
2025-01-17T11:31:46.4060543Z 
2025-01-17T11:31:46.4060682Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4061193Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.4062217Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.4063634Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.4064643Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:31:46.4065051Z 
2025-01-17T11:31:46.4065056Z 
2025-01-17T11:31:46.4065467Z Packets:                                                                                   4021/? [00:12<00:00, 243.67it/s]  [A
2025-01-17T11:31:46.4066399Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.84s/it]
2025-01-17T11:31:46.4066864Z 
2025-01-17T11:31:46.4067267Z Packets:                                                                                   4030/? [00:12<00:00, 243.67it/s][A
2025-01-17T11:31:46.4067911Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.4069202Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.4070478Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-17T11:31:46.4070883Z 
2025-01-17T11:31:46.4071285Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81765d6fc0>
2025-01-17T11:31:46.4072286Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f81763e9460>
2025-01-17T11:31:46.4073027Z 
2025-01-17T11:31:46.4073364Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-17T11:31:46.4074035Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-17T11:31:46.4074474Z     
2025-01-17T11:31:46.4074799Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-17T11:31:46.4075496Z             legacy_plasma.lines,
2025-01-17T11:31:46.4076049Z             legacy_plasma.level_number_density,
2025-01-17T11:31:46.4076507Z             legacy_plasma.time_explosion,
2025-01-17T11:31:46.4076963Z             legacy_plasma.stimulated_emission_factor,
2025-01-17T11:31:46.4077391Z         )
2025-01-17T11:31:46.4077716Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-17T11:31:46.4078221Z         expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.4078703Z >       npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.4079002Z 
2025-01-17T11:31:46.4079184Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-17T11:31:46.4079685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4080025Z 
2025-01-17T11:31:46.4080478Z args = (<function assert_allclose.<locals>.compare at 0x7f8169bf1080>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4081195Z        [1., 1., .....,
2025-01-17T11:31:46.4081516Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4081895Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4082259Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-17T11:31:46.4084249Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.4084830Z 
2025-01-17T11:31:46.4084962Z     @wraps(func)
2025-01-17T11:31:46.4085267Z     def inner(*args, **kwds):
2025-01-17T11:31:46.4085624Z         with self._recreate_cm():
2025-01-17T11:31:46.4086015Z >           return func(*args, **kwds)
2025-01-17T11:31:46.4086419Z E           AssertionError: 
2025-01-17T11:31:46.4086814Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.4087229Z E           
2025-01-17T11:31:46.4087548Z E           Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.4088052Z E           Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.4088495Z E           Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.4088811Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4089071Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4089313Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.4089584Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4089856Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4090093Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.4090249Z 
2025-01-17T11:31:46.4090459Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.4090934Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-17T11:31:46.4091208Z 
2025-01-17T11:31:46.4091329Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4091660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4091966Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4092262Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4092813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4093114Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4093353Z err_msg = None
2025-01-17T11:31:46.4093464Z 
2025-01-17T11:31:46.4093571Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4093840Z         if err_msg is None:
2025-01-17T11:31:46.4094063Z             if left.shape != right.shape:
2025-01-17T11:31:46.4094304Z                 raise_assert_detail(
2025-01-17T11:31:46.4094592Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4094871Z                 )
2025-01-17T11:31:46.4095036Z     
2025-01-17T11:31:46.4095375Z             diff = 0
2025-01-17T11:31:46.4095700Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4095967Z                 # count up differences
2025-01-17T11:31:46.4096484Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4097040Z                     diff += 1
2025-01-17T11:31:46.4097375Z     
2025-01-17T11:31:46.4097647Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4098126Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4098863Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4099470Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4099877Z E           
2025-01-17T11:31:46.4100082Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4100532Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4101129Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4101466Z 
2025-01-17T11:31:46.4101786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4102166Z 
2025-01-17T11:31:46.4102336Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4102795Z 
2025-01-17T11:31:46.4103026Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e90cdd0>
2025-01-17T11:31:46.4103494Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4103807Z attr = 'lines'
2025-01-17T11:31:46.4103908Z 
2025-01-17T11:31:46.4104045Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4104355Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4104618Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4104821Z         try:
2025-01-17T11:31:46.4105052Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4105338Z         except KeyError:
2025-01-17T11:31:46.4105591Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4105863Z     
2025-01-17T11:31:46.4106029Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4106261Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4106511Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4106803Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4107098Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4107333Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4107599Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4107853Z             else:
2025-01-17T11:31:46.4108044Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4108312Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4108496Z 
2025-01-17T11:31:46.4108616Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4108922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4109251Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4109532Z     ???
2025-01-17T11:31:46.4109728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4109912Z 
2025-01-17T11:31:46.4109982Z >   ???
2025-01-17T11:31:46.4110186Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4110648Z E   
2025-01-17T11:31:46.4110961Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4111273Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4111524Z E          ...
2025-01-17T11:31:46.4111704Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4111987Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4112297Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4112711Z E          ...
2025-01-17T11:31:46.4112899Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4113177Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4113473Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4113644Z 
2025-01-17T11:31:46.4113734Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4114090Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-17T11:31:46.4114620Z 
2025-01-17T11:31:46.4114991Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817ef3b9e0>
2025-01-17T11:31:46.4115805Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4116354Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4116603Z 
2025-01-17T11:31:46.4116817Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4117346Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4117791Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4118126Z         try:
2025-01-17T11:31:46.4118496Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4118786Z         except KeyError:
2025-01-17T11:31:46.4119038Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4119313Z     
2025-01-17T11:31:46.4119480Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4119705Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4119955Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4120241Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4120567Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4120793Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4121050Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4121245Z 
2025-01-17T11:31:46.4121365Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4121669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4121867Z 
2025-01-17T11:31:46.4122007Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4122306Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4122735Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4123004Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4123292Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4123592Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4123838Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4124092Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4124312Z err_msg = None
2025-01-17T11:31:46.4124418Z 
2025-01-17T11:31:46.4124523Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4124782Z         if err_msg is None:
2025-01-17T11:31:46.4125006Z             if left.shape != right.shape:
2025-01-17T11:31:46.4125252Z                 raise_assert_detail(
2025-01-17T11:31:46.4125539Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4125831Z                 )
2025-01-17T11:31:46.4125998Z     
2025-01-17T11:31:46.4126145Z             diff = 0
2025-01-17T11:31:46.4126363Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4126775Z                 # count up differences
2025-01-17T11:31:46.4127210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4127529Z                     diff += 1
2025-01-17T11:31:46.4127730Z     
2025-01-17T11:31:46.4127898Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4128192Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4128567Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4128918Z E           AssertionError: Series are different
2025-01-17T11:31:46.4129171Z E           
2025-01-17T11:31:46.4129368Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4129918Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4130686Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4131408Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4131817Z 
2025-01-17T11:31:46.4132131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4133197Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-17T11:31:46.4133718Z 
2025-01-17T11:31:46.4134082Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaea180>
2025-01-17T11:31:46.4134872Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4135416Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4135669Z 
2025-01-17T11:31:46.4135893Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4136223Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4136493Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4136700Z         try:
2025-01-17T11:31:46.4136934Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4137219Z         except KeyError:
2025-01-17T11:31:46.4137488Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4137770Z     
2025-01-17T11:31:46.4137945Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4138179Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4138427Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4138717Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4139004Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4139232Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4139496Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4139680Z 
2025-01-17T11:31:46.4139804Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4140107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4140297Z 
2025-01-17T11:31:46.4140429Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4140904Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4141261Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4141521Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4141805Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4142098Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4142353Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4142839Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4143063Z err_msg = None
2025-01-17T11:31:46.4143162Z 
2025-01-17T11:31:46.4143273Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4143524Z         if err_msg is None:
2025-01-17T11:31:46.4143743Z             if left.shape != right.shape:
2025-01-17T11:31:46.4143982Z                 raise_assert_detail(
2025-01-17T11:31:46.4144266Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4144555Z                 )
2025-01-17T11:31:46.4144723Z     
2025-01-17T11:31:46.4144878Z             diff = 0
2025-01-17T11:31:46.4145097Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4145360Z                 # count up differences
2025-01-17T11:31:46.4145675Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4145996Z                     diff += 1
2025-01-17T11:31:46.4146192Z     
2025-01-17T11:31:46.4146353Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4146639Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4147013Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4147361Z E           AssertionError: Series are different
2025-01-17T11:31:46.4147595Z E           
2025-01-17T11:31:46.4147787Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4148334Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4149152Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4150284Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4151101Z 
2025-01-17T11:31:46.4151617Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4152357Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-17T11:31:46.4152725Z 
2025-01-17T11:31:46.4152853Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4153177Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4153473Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4153768Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4154338Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4154632Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4154862Z err_msg = None
2025-01-17T11:31:46.4154971Z 
2025-01-17T11:31:46.4155073Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4155328Z         if err_msg is None:
2025-01-17T11:31:46.4155549Z             if left.shape != right.shape:
2025-01-17T11:31:46.4155788Z                 raise_assert_detail(
2025-01-17T11:31:46.4156078Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4156362Z                 )
2025-01-17T11:31:46.4156528Z     
2025-01-17T11:31:46.4156677Z             diff = 0
2025-01-17T11:31:46.4156888Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4157152Z                 # count up differences
2025-01-17T11:31:46.4157470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4157794Z                     diff += 1
2025-01-17T11:31:46.4157988Z     
2025-01-17T11:31:46.4158149Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4158432Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4158802Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4159157Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4159405Z E           
2025-01-17T11:31:46.4159604Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4160038Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4160641Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4160981Z 
2025-01-17T11:31:46.4161275Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4161649Z 
2025-01-17T11:31:46.4161810Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4162059Z 
2025-01-17T11:31:46.4162274Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaeb290>
2025-01-17T11:31:46.4162871Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>, attr = 'nu'
2025-01-17T11:31:46.4163141Z 
2025-01-17T11:31:46.4163279Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4163601Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4163873Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4164076Z         try:
2025-01-17T11:31:46.4164302Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4164587Z         except KeyError:
2025-01-17T11:31:46.4164841Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4165116Z     
2025-01-17T11:31:46.4165277Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4165510Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4165758Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4166042Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4166325Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4166552Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4166814Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4167118Z 
2025-01-17T11:31:46.4167242Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4167642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4168182Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4168672Z     ???
2025-01-17T11:31:46.4168991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4169322Z 
2025-01-17T11:31:46.4169428Z >   ???
2025-01-17T11:31:46.4169767Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4170176Z E   
2025-01-17T11:31:46.4170384Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4170690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4170940Z E          ...
2025-01-17T11:31:46.4171118Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4171400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4171841Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4172235Z E          ...
2025-01-17T11:31:46.4172417Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4172877Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4173176Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4173354Z 
2025-01-17T11:31:46.4173436Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4173777Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-17T11:31:46.4174061Z 
2025-01-17T11:31:46.4174180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4174504Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4174801Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4175101Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4175439Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4175729Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4175962Z err_msg = None
2025-01-17T11:31:46.4176064Z 
2025-01-17T11:31:46.4176170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4176422Z         if err_msg is None:
2025-01-17T11:31:46.4176633Z             if left.shape != right.shape:
2025-01-17T11:31:46.4176881Z                 raise_assert_detail(
2025-01-17T11:31:46.4177167Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4177450Z                 )
2025-01-17T11:31:46.4177618Z     
2025-01-17T11:31:46.4177769Z             diff = 0
2025-01-17T11:31:46.4177984Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4178246Z                 # count up differences
2025-01-17T11:31:46.4178559Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4178892Z                     diff += 1
2025-01-17T11:31:46.4179085Z     
2025-01-17T11:31:46.4179243Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4179528Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4180122Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4180479Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4180726Z E           
2025-01-17T11:31:46.4180923Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4181362Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4182218Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4182730Z 
2025-01-17T11:31:46.4183187Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4183574Z 
2025-01-17T11:31:46.4183734Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4183981Z 
2025-01-17T11:31:46.4184195Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaebf50>
2025-01-17T11:31:46.4184648Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4184962Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4185083Z 
2025-01-17T11:31:46.4185213Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4185543Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4185960Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4186327Z         try:
2025-01-17T11:31:46.4186707Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4187196Z         except KeyError:
2025-01-17T11:31:46.4187619Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4188080Z     
2025-01-17T11:31:46.4188356Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4188752Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4189168Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4189500Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4189783Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4190008Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4190271Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4190460Z 
2025-01-17T11:31:46.4190587Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4190893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4191223Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4191502Z     ???
2025-01-17T11:31:46.4191687Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4191879Z 
2025-01-17T11:31:46.4191943Z >   ???
2025-01-17T11:31:46.4192146Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4192405Z E   
2025-01-17T11:31:46.4192826Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4193138Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4193385Z E          ...
2025-01-17T11:31:46.4193565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4193853Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4194163Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4194417Z E          ...
2025-01-17T11:31:46.4194595Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4194866Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4195156Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4195342Z 
2025-01-17T11:31:46.4195428Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4195756Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-17T11:31:46.4196024Z 
2025-01-17T11:31:46.4196145Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4196471Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4196768Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4197056Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4197633Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4197924Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4198155Z err_msg = None
2025-01-17T11:31:46.4198255Z 
2025-01-17T11:31:46.4198362Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4198618Z         if err_msg is None:
2025-01-17T11:31:46.4198838Z             if left.shape != right.shape:
2025-01-17T11:31:46.4199080Z                 raise_assert_detail(
2025-01-17T11:31:46.4199360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4199646Z                 )
2025-01-17T11:31:46.4199814Z     
2025-01-17T11:31:46.4199964Z             diff = 0
2025-01-17T11:31:46.4200178Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4200439Z                 # count up differences
2025-01-17T11:31:46.4200764Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4201096Z                     diff += 1
2025-01-17T11:31:46.4201290Z     
2025-01-17T11:31:46.4201452Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4201737Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4202110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4202458Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4202820Z E           
2025-01-17T11:31:46.4203027Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4203480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4204587Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4205193Z 
2025-01-17T11:31:46.4205707Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4206376Z 
2025-01-17T11:31:46.4206649Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4207078Z 
2025-01-17T11:31:46.4207342Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaeb1d0>
2025-01-17T11:31:46.4207835Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>, attr = 'f_lu'
2025-01-17T11:31:46.4208114Z 
2025-01-17T11:31:46.4208247Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4208571Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4208840Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4209045Z         try:
2025-01-17T11:31:46.4209277Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4209566Z         except KeyError:
2025-01-17T11:31:46.4209823Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4210097Z     
2025-01-17T11:31:46.4210261Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4210496Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4210735Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4211018Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4211301Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4211535Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4211799Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4212133Z 
2025-01-17T11:31:46.4212252Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4212769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4213110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4213388Z     ???
2025-01-17T11:31:46.4213579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4213772Z 
2025-01-17T11:31:46.4213838Z >   ???
2025-01-17T11:31:46.4214040Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4214299Z E   
2025-01-17T11:31:46.4214500Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4214808Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4215058Z E          ...
2025-01-17T11:31:46.4215237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4215519Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4215832Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4216084Z E          ...
2025-01-17T11:31:46.4216261Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4216537Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4216828Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4217007Z 
2025-01-17T11:31:46.4217094Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4217434Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-17T11:31:46.4217705Z 
2025-01-17T11:31:46.4217831Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4218150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4218447Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4218740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4219077Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4219366Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4219601Z err_msg = None
2025-01-17T11:31:46.4219705Z 
2025-01-17T11:31:46.4219809Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4220060Z         if err_msg is None:
2025-01-17T11:31:46.4220274Z             if left.shape != right.shape:
2025-01-17T11:31:46.4220552Z                 raise_assert_detail(
2025-01-17T11:31:46.4220842Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4221123Z                 )
2025-01-17T11:31:46.4221290Z     
2025-01-17T11:31:46.4221434Z             diff = 0
2025-01-17T11:31:46.4221651Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4221913Z                 # count up differences
2025-01-17T11:31:46.4222242Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4222656Z                     diff += 1
2025-01-17T11:31:46.4222852Z     
2025-01-17T11:31:46.4223016Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4223302Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4223669Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4224020Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4224268Z E           
2025-01-17T11:31:46.4224467Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4224902Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4225715Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4226057Z 
2025-01-17T11:31:46.4226361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4226734Z 
2025-01-17T11:31:46.4226900Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4227276Z 
2025-01-17T11:31:46.4227648Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8b90>
2025-01-17T11:31:46.4228369Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4228683Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4228798Z 
2025-01-17T11:31:46.4228934Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4229396Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4229658Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4229861Z         try:
2025-01-17T11:31:46.4230090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4230378Z         except KeyError:
2025-01-17T11:31:46.4230632Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4230902Z     
2025-01-17T11:31:46.4231067Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4231299Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4231543Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4231826Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4232109Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4232336Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4232807Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4233071Z             else:
2025-01-17T11:31:46.4233271Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4233535Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4233714Z 
2025-01-17T11:31:46.4233830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4234134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4234464Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4234744Z     ???
2025-01-17T11:31:46.4234934Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4235122Z 
2025-01-17T11:31:46.4235191Z >   ???
2025-01-17T11:31:46.4235396Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4235648Z E   
2025-01-17T11:31:46.4235860Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4236164Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4236415Z E          ...
2025-01-17T11:31:46.4236601Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4236881Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4237191Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4237439Z E          ...
2025-01-17T11:31:46.4237619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4237893Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4238185Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4238357Z 
2025-01-17T11:31:46.4238445Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4238780Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-17T11:31:46.4239051Z 
2025-01-17T11:31:46.4239172Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4239493Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4240055Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4240351Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4240675Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4240962Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4241197Z err_msg = None
2025-01-17T11:31:46.4241300Z 
2025-01-17T11:31:46.4241402Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4241651Z         if err_msg is None:
2025-01-17T11:31:46.4241865Z             if left.shape != right.shape:
2025-01-17T11:31:46.4242259Z                 raise_assert_detail(
2025-01-17T11:31:46.4242821Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4243288Z                 )
2025-01-17T11:31:46.4243561Z     
2025-01-17T11:31:46.4243812Z             diff = 0
2025-01-17T11:31:46.4244167Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4244574Z                 # count up differences
2025-01-17T11:31:46.4245070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4245581Z                     diff += 1
2025-01-17T11:31:46.4245938Z     
2025-01-17T11:31:46.4246264Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4246791Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4247437Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4248069Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4248528Z E           
2025-01-17T11:31:46.4248889Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4249720Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4250856Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4251489Z 
2025-01-17T11:31:46.4252026Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4252876Z 
2025-01-17T11:31:46.4253524Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4253961Z 
2025-01-17T11:31:46.4254197Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8c50>
2025-01-17T11:31:46.4254679Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4254995Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4255115Z 
2025-01-17T11:31:46.4255258Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4255578Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4255853Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4256072Z         try:
2025-01-17T11:31:46.4256308Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4271263Z         except KeyError:
2025-01-17T11:31:46.4271712Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4272203Z     
2025-01-17T11:31:46.4272479Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4273047Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4273314Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4273625Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4274119Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4274469Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4274759Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4275029Z             else:
2025-01-17T11:31:46.4275238Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4275514Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4275698Z 
2025-01-17T11:31:46.4275832Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4276159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4276515Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4276811Z     ???
2025-01-17T11:31:46.4277012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4277202Z 
2025-01-17T11:31:46.4277275Z >   ???
2025-01-17T11:31:46.4277481Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4277756Z E   
2025-01-17T11:31:46.4277975Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4278300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4278558Z E          ...
2025-01-17T11:31:46.4278745Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4279042Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4279364Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4279632Z E          ...
2025-01-17T11:31:46.4279819Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4280111Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4280423Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4280728Z 
2025-01-17T11:31:46.4280860Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4281207Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-17T11:31:46.4281509Z 
2025-01-17T11:31:46.4281642Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4281978Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4282295Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4282835Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4283183Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4283483Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4283755Z err_msg = None
2025-01-17T11:31:46.4283958Z 
2025-01-17T11:31:46.4284144Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4284581Z         if err_msg is None:
2025-01-17T11:31:46.4284948Z             if left.shape != right.shape:
2025-01-17T11:31:46.4285244Z                 raise_assert_detail(
2025-01-17T11:31:46.4285553Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4285849Z                 )
2025-01-17T11:31:46.4286028Z     
2025-01-17T11:31:46.4286178Z             diff = 0
2025-01-17T11:31:46.4286398Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4286662Z                 # count up differences
2025-01-17T11:31:46.4286989Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4287316Z                     diff += 1
2025-01-17T11:31:46.4287509Z     
2025-01-17T11:31:46.4287678Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4287978Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4288351Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4288707Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4289111Z E           
2025-01-17T11:31:46.4289435Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4289889Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4290490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4290833Z 
2025-01-17T11:31:46.4291141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4291532Z 
2025-01-17T11:31:46.4291695Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4291953Z 
2025-01-17T11:31:46.4292173Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8260>
2025-01-17T11:31:46.4292759Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4293072Z attr = 'j_blues'
2025-01-17T11:31:46.4293178Z 
2025-01-17T11:31:46.4293318Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4293641Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4293907Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4294116Z         try:
2025-01-17T11:31:46.4294351Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4294639Z         except KeyError:
2025-01-17T11:31:46.4294901Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4295182Z     
2025-01-17T11:31:46.4295350Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4295596Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4295855Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4296149Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4296445Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4296677Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4296942Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4297196Z             else:
2025-01-17T11:31:46.4297394Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4297665Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4297849Z 
2025-01-17T11:31:46.4297968Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4298276Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4298610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4299058Z     ???
2025-01-17T11:31:46.4299401Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4299654Z 
2025-01-17T11:31:46.4299718Z >   ???
2025-01-17T11:31:46.4299926Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4300193Z E   
2025-01-17T11:31:46.4300398Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4300851Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4301110Z E          ...
2025-01-17T11:31:46.4301323Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4301819Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4302335Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4302804Z E          ...
2025-01-17T11:31:46.4302986Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4303268Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4303720Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4303897Z 
2025-01-17T11:31:46.4304086Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4304416Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-17T11:31:46.4304685Z 
2025-01-17T11:31:46.4304813Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4305144Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4305448Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4305752Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4306084Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4306378Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4306613Z err_msg = None
2025-01-17T11:31:46.4306729Z 
2025-01-17T11:31:46.4306834Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4307102Z         if err_msg is None:
2025-01-17T11:31:46.4307320Z             if left.shape != right.shape:
2025-01-17T11:31:46.4307566Z                 raise_assert_detail(
2025-01-17T11:31:46.4307859Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4308146Z                 )
2025-01-17T11:31:46.4308312Z     
2025-01-17T11:31:46.4308462Z             diff = 0
2025-01-17T11:31:46.4308676Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4308943Z                 # count up differences
2025-01-17T11:31:46.4309264Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4309578Z                     diff += 1
2025-01-17T11:31:46.4309776Z     
2025-01-17T11:31:46.4309938Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4310229Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4310617Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4310975Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4311227Z E           
2025-01-17T11:31:46.4311421Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4311866Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4312469Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4312924Z 
2025-01-17T11:31:46.4313234Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4313618Z 
2025-01-17T11:31:46.4313781Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4314039Z 
2025-01-17T11:31:46.4314262Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae9a30>
2025-01-17T11:31:46.4314724Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4315031Z attr = 'lines'
2025-01-17T11:31:46.4315129Z 
2025-01-17T11:31:46.4315264Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4315585Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4315845Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4316048Z         try:
2025-01-17T11:31:46.4316279Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4316688Z         except KeyError:
2025-01-17T11:31:46.4317039Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4317316Z     
2025-01-17T11:31:46.4317479Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4317710Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4317957Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4318242Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4318525Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4318753Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4319090Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4319519Z             else:
2025-01-17T11:31:46.4319829Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4320211Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4320428Z 
2025-01-17T11:31:46.4320549Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4320861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4321197Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4321482Z     ???
2025-01-17T11:31:46.4321675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4321866Z 
2025-01-17T11:31:46.4321933Z >   ???
2025-01-17T11:31:46.4322140Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4322400Z E   
2025-01-17T11:31:46.4322801Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4323116Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4323368Z E          ...
2025-01-17T11:31:46.4323546Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4323829Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4324133Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4324389Z E          ...
2025-01-17T11:31:46.4324567Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4324843Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4325136Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4325311Z 
2025-01-17T11:31:46.4325399Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4325739Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-17T11:31:46.4326023Z 
2025-01-17T11:31:46.4326248Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae86b0>
2025-01-17T11:31:46.4326700Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4327021Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4327174Z 
2025-01-17T11:31:46.4327304Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4327620Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4327879Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4328089Z         try:
2025-01-17T11:31:46.4328320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4328612Z         except KeyError:
2025-01-17T11:31:46.4328867Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4329142Z     
2025-01-17T11:31:46.4329304Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4329540Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4329781Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4330070Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4330355Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4330580Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4330839Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4331027Z 
2025-01-17T11:31:46.4331142Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4331444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4331784Z 
2025-01-17T11:31:46.4332008Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4332302Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4332665Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4332928Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4333215Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4333508Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4333756Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4334005Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4334220Z err_msg = None
2025-01-17T11:31:46.4334322Z 
2025-01-17T11:31:46.4334423Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4334674Z         if err_msg is None:
2025-01-17T11:31:46.4334896Z             if left.shape != right.shape:
2025-01-17T11:31:46.4335141Z                 raise_assert_detail(
2025-01-17T11:31:46.4335428Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4335713Z                 )
2025-01-17T11:31:46.4335883Z     
2025-01-17T11:31:46.4336039Z             diff = 0
2025-01-17T11:31:46.4336252Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4336519Z                 # count up differences
2025-01-17T11:31:46.4336834Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4337354Z                     diff += 1
2025-01-17T11:31:46.4337675Z     
2025-01-17T11:31:46.4337944Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4338276Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4338649Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4339009Z E           AssertionError: Series are different
2025-01-17T11:31:46.4339262Z E           
2025-01-17T11:31:46.4339451Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4339997Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4340774Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4341524Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4341937Z 
2025-01-17T11:31:46.4342241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4342926Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-17T11:31:46.4343216Z 
2025-01-17T11:31:46.4343434Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae9970>
2025-01-17T11:31:46.4343893Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4344214Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4344527Z 
2025-01-17T11:31:46.4344758Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4345084Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4345350Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4345560Z         try:
2025-01-17T11:31:46.4345795Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4346085Z         except KeyError:
2025-01-17T11:31:46.4346347Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4346620Z     
2025-01-17T11:31:46.4346780Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4347013Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4347258Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4347548Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4347832Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4348058Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4348328Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4348515Z 
2025-01-17T11:31:46.4348638Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4348941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4349134Z 
2025-01-17T11:31:46.4349268Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4349564Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4349823Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4350081Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4350363Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4350659Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4350914Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4351178Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4351558Z err_msg = None
2025-01-17T11:31:46.4351700Z 
2025-01-17T11:31:46.4351883Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4352178Z         if err_msg is None:
2025-01-17T11:31:46.4352404Z             if left.shape != right.shape:
2025-01-17T11:31:46.4352797Z                 raise_assert_detail(
2025-01-17T11:31:46.4353087Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4353497Z                 )
2025-01-17T11:31:46.4353665Z     
2025-01-17T11:31:46.4353812Z             diff = 0
2025-01-17T11:31:46.4354028Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4354298Z                 # count up differences
2025-01-17T11:31:46.4354616Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4354937Z                     diff += 1
2025-01-17T11:31:46.4355215Z     
2025-01-17T11:31:46.4355500Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4355978Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4356524Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4356873Z E           AssertionError: Series are different
2025-01-17T11:31:46.4357108Z E           
2025-01-17T11:31:46.4357297Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4357843Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4358822Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4359753Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4360204Z 
2025-01-17T11:31:46.4360509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4361070Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-17T11:31:46.4361334Z 
2025-01-17T11:31:46.4361464Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4361795Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4362092Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4362391Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4362952Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4363245Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4363475Z err_msg = None
2025-01-17T11:31:46.4363581Z 
2025-01-17T11:31:46.4363684Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4363933Z         if err_msg is None:
2025-01-17T11:31:46.4364148Z             if left.shape != right.shape:
2025-01-17T11:31:46.4364393Z                 raise_assert_detail(
2025-01-17T11:31:46.4364682Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4364964Z                 )
2025-01-17T11:31:46.4365129Z     
2025-01-17T11:31:46.4365280Z             diff = 0
2025-01-17T11:31:46.4365491Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4365752Z                 # count up differences
2025-01-17T11:31:46.4366073Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4366390Z                     diff += 1
2025-01-17T11:31:46.4366582Z     
2025-01-17T11:31:46.4366744Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4367027Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4367409Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4367762Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4368020Z E           
2025-01-17T11:31:46.4368223Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4368668Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4369267Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4369611Z 
2025-01-17T11:31:46.4369907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4370417Z 
2025-01-17T11:31:46.4370688Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4370943Z 
2025-01-17T11:31:46.4371163Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8a40>
2025-01-17T11:31:46.4371656Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>, attr = 'nu'
2025-01-17T11:31:46.4371934Z 
2025-01-17T11:31:46.4372067Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4372388Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4372761Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4372972Z         try:
2025-01-17T11:31:46.4373214Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4373714Z         except KeyError:
2025-01-17T11:31:46.4374130Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4374512Z     
2025-01-17T11:31:46.4374683Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4374928Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4375180Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4375467Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4375756Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4375988Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4376255Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4376441Z 
2025-01-17T11:31:46.4376565Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4376872Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4377204Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4377481Z     ???
2025-01-17T11:31:46.4377673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4377868Z 
2025-01-17T11:31:46.4377932Z >   ???
2025-01-17T11:31:46.4378139Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4378407Z E   
2025-01-17T11:31:46.4378615Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4378923Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4379175Z E          ...
2025-01-17T11:31:46.4379356Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4379642Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4379948Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4380201Z E          ...
2025-01-17T11:31:46.4380375Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4380656Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4380955Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4381135Z 
2025-01-17T11:31:46.4381218Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4381554Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-17T11:31:46.4381838Z 
2025-01-17T11:31:46.4381964Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4382294Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4382705Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4383003Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4383332Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4383622Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4383863Z err_msg = None
2025-01-17T11:31:46.4383962Z 
2025-01-17T11:31:46.4384074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4384329Z         if err_msg is None:
2025-01-17T11:31:46.4384545Z             if left.shape != right.shape:
2025-01-17T11:31:46.4384918Z                 raise_assert_detail(
2025-01-17T11:31:46.4385308Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4385597Z                 )
2025-01-17T11:31:46.4385762Z     
2025-01-17T11:31:46.4385911Z             diff = 0
2025-01-17T11:31:46.4386138Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4386402Z                 # count up differences
2025-01-17T11:31:46.4386723Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4387049Z                     diff += 1
2025-01-17T11:31:46.4387246Z     
2025-01-17T11:31:46.4387411Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4387693Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4388066Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4388417Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4388672Z E           
2025-01-17T11:31:46.4388877Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4389323Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4389922Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4390499Z 
2025-01-17T11:31:46.4391011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4391447Z 
2025-01-17T11:31:46.4391612Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4391867Z 
2025-01-17T11:31:46.4392086Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8aa0>
2025-01-17T11:31:46.4392640Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4392957Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4393080Z 
2025-01-17T11:31:46.4393213Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4393530Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4393797Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4394008Z         try:
2025-01-17T11:31:46.4394239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4394525Z         except KeyError:
2025-01-17T11:31:46.4394781Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4395054Z     
2025-01-17T11:31:46.4395215Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4395455Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4395705Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4395991Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4396267Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4396500Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4396761Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4396944Z 
2025-01-17T11:31:46.4397068Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4397374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4397703Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4397985Z     ???
2025-01-17T11:31:46.4398180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4398369Z 
2025-01-17T11:31:46.4398440Z >   ???
2025-01-17T11:31:46.4398802Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4399062Z E   
2025-01-17T11:31:46.4399363Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4399675Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4399928Z E          ...
2025-01-17T11:31:46.4400108Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4400393Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4400703Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4400957Z E          ...
2025-01-17T11:31:46.4401135Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4401412Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4401704Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4401937Z 
2025-01-17T11:31:46.4402022Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4402348Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-17T11:31:46.4402827Z 
2025-01-17T11:31:46.4402960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4403290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4403586Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4403881Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4404209Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4404500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4404739Z err_msg = None
2025-01-17T11:31:46.4404838Z 
2025-01-17T11:31:46.4404947Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4405201Z         if err_msg is None:
2025-01-17T11:31:46.4405417Z             if left.shape != right.shape:
2025-01-17T11:31:46.4405667Z                 raise_assert_detail(
2025-01-17T11:31:46.4405963Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4406260Z                 )
2025-01-17T11:31:46.4406422Z     
2025-01-17T11:31:46.4406572Z             diff = 0
2025-01-17T11:31:46.4406788Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4407053Z                 # count up differences
2025-01-17T11:31:46.4407370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4407694Z                     diff += 1
2025-01-17T11:31:46.4407891Z     
2025-01-17T11:31:46.4408177Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4408656Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4409198Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4409553Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4409804Z E           
2025-01-17T11:31:46.4410008Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4410453Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4411050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4411392Z 
2025-01-17T11:31:46.4411699Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4412215Z 
2025-01-17T11:31:46.4412483Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4412844Z 
2025-01-17T11:31:46.4413069Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaea900>
2025-01-17T11:31:46.4413560Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>, attr = 'f_lu'
2025-01-17T11:31:46.4413840Z 
2025-01-17T11:31:46.4413970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4414290Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4414556Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4414759Z         try:
2025-01-17T11:31:46.4414987Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4415277Z         except KeyError:
2025-01-17T11:31:46.4415532Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4415807Z     
2025-01-17T11:31:46.4415970Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4416219Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4416469Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4416752Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4417039Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4417268Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4417534Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4417720Z 
2025-01-17T11:31:46.4417836Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4418140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4418472Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4418754Z     ???
2025-01-17T11:31:46.4418944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4419136Z 
2025-01-17T11:31:46.4419206Z >   ???
2025-01-17T11:31:46.4419411Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4419677Z E   
2025-01-17T11:31:46.4419888Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4420193Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4420479Z E          ...
2025-01-17T11:31:46.4420661Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4420946Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4421256Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4421507Z E          ...
2025-01-17T11:31:46.4421685Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4421963Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4422259Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4422433Z 
2025-01-17T11:31:46.4422525Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4422951Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-17T11:31:46.4423230Z 
2025-01-17T11:31:46.4423359Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4423693Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4423988Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4424279Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4424609Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4424902Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4425136Z err_msg = None
2025-01-17T11:31:46.4425240Z 
2025-01-17T11:31:46.4425346Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4425606Z         if err_msg is None:
2025-01-17T11:31:46.4425940Z             if left.shape != right.shape:
2025-01-17T11:31:46.4426511Z                 raise_assert_detail(
2025-01-17T11:31:46.4427050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4427343Z                 )
2025-01-17T11:31:46.4427508Z     
2025-01-17T11:31:46.4427656Z             diff = 0
2025-01-17T11:31:46.4427868Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4428134Z                 # count up differences
2025-01-17T11:31:46.4428451Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4428773Z                     diff += 1
2025-01-17T11:31:46.4428970Z     
2025-01-17T11:31:46.4429134Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4429422Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4429798Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4430149Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4430405Z E           
2025-01-17T11:31:46.4430610Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4431052Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4431651Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4431988Z 
2025-01-17T11:31:46.4432292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4432784Z 
2025-01-17T11:31:46.4432958Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4433204Z 
2025-01-17T11:31:46.4433424Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8f80>
2025-01-17T11:31:46.4433882Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4434196Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4434310Z 
2025-01-17T11:31:46.4434445Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4434765Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4435025Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4435229Z         try:
2025-01-17T11:31:46.4435459Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4435753Z         except KeyError:
2025-01-17T11:31:46.4436008Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4436280Z     
2025-01-17T11:31:46.4436455Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4436693Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4436946Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4437237Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4437522Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4437747Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4438019Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4438271Z             else:
2025-01-17T11:31:46.4438465Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4438730Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4438912Z 
2025-01-17T11:31:46.4439030Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4439335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4439670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4440076Z     ???
2025-01-17T11:31:46.4440388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4440584Z 
2025-01-17T11:31:46.4440652Z >   ???
2025-01-17T11:31:46.4440857Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4441115Z E   
2025-01-17T11:31:46.4441314Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4441621Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4441875Z E          ...
2025-01-17T11:31:46.4442057Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4442340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4442856Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4443173Z E          ...
2025-01-17T11:31:46.4443480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4443949Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4444431Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4444610Z 
2025-01-17T11:31:46.4444706Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4445039Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-17T11:31:46.4445311Z 
2025-01-17T11:31:46.4445440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4445769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4446059Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4446362Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4446690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4446978Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4447216Z err_msg = None
2025-01-17T11:31:46.4447327Z 
2025-01-17T11:31:46.4447429Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4447692Z         if err_msg is None:
2025-01-17T11:31:46.4447910Z             if left.shape != right.shape:
2025-01-17T11:31:46.4448154Z                 raise_assert_detail(
2025-01-17T11:31:46.4448449Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4448734Z                 )
2025-01-17T11:31:46.4448900Z     
2025-01-17T11:31:46.4449046Z             diff = 0
2025-01-17T11:31:46.4449262Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4449525Z                 # count up differences
2025-01-17T11:31:46.4449840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4450162Z                     diff += 1
2025-01-17T11:31:46.4450358Z     
2025-01-17T11:31:46.4450521Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4450811Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4451194Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4451547Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4451791Z E           
2025-01-17T11:31:46.4451987Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4452429Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4453143Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4453621Z 
2025-01-17T11:31:46.4454021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4454402Z 
2025-01-17T11:31:46.4454569Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4454813Z 
2025-01-17T11:31:46.4455033Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8e90>
2025-01-17T11:31:46.4455492Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4455803Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4455918Z 
2025-01-17T11:31:46.4456054Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4456373Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4456636Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4456840Z         try:
2025-01-17T11:31:46.4457069Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4457366Z         except KeyError:
2025-01-17T11:31:46.4457632Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4457910Z     
2025-01-17T11:31:46.4458074Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4458309Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4458555Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4458841Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4459120Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4459352Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4459619Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4459872Z             else:
2025-01-17T11:31:46.4460063Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4460534Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4460844Z 
2025-01-17T11:31:46.4461036Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4461499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4461832Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4462116Z     ???
2025-01-17T11:31:46.4462309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4462500Z 
2025-01-17T11:31:46.4462666Z >   ???
2025-01-17T11:31:46.4462873Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4463130Z E   
2025-01-17T11:31:46.4463333Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4463640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4463891Z E          ...
2025-01-17T11:31:46.4464070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4464353Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4464665Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4464927Z E          ...
2025-01-17T11:31:46.4465109Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4465388Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4465687Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4465863Z 
2025-01-17T11:31:46.4465954Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4466273Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-17T11:31:46.4466547Z 
2025-01-17T11:31:46.4466669Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4466996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4467293Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4467587Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4467914Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4468431Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4468673Z err_msg = None
2025-01-17T11:31:46.4468776Z 
2025-01-17T11:31:46.4468877Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4469133Z         if err_msg is None:
2025-01-17T11:31:46.4469348Z             if left.shape != right.shape:
2025-01-17T11:31:46.4469594Z                 raise_assert_detail(
2025-01-17T11:31:46.4469881Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4470166Z                 )
2025-01-17T11:31:46.4470328Z     
2025-01-17T11:31:46.4470479Z             diff = 0
2025-01-17T11:31:46.4470695Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4470961Z                 # count up differences
2025-01-17T11:31:46.4471281Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4471619Z                     diff += 1
2025-01-17T11:31:46.4471813Z     
2025-01-17T11:31:46.4471986Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4472273Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4472750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4473105Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4473354Z E           
2025-01-17T11:31:46.4473549Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4473990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4474598Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4474941Z 
2025-01-17T11:31:46.4475244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4475621Z 
2025-01-17T11:31:46.4475790Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4476033Z 
2025-01-17T11:31:46.4476253Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8cb0>
2025-01-17T11:31:46.4476712Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4477018Z attr = 'j_blues'
2025-01-17T11:31:46.4477124Z 
2025-01-17T11:31:46.4477253Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4477687Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4478150Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4478496Z         try:
2025-01-17T11:31:46.4478837Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4479135Z         except KeyError:
2025-01-17T11:31:46.4479390Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4479667Z     
2025-01-17T11:31:46.4479831Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4480066Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4480315Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4480601Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4480890Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4481123Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4481393Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4481650Z             else:
2025-01-17T11:31:46.4481977Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4482350Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4482683Z 
2025-01-17T11:31:46.4482860Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4497036Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4497688Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4498173Z     ???
2025-01-17T11:31:46.4498506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4498719Z 
2025-01-17T11:31:46.4498788Z >   ???
2025-01-17T11:31:46.4499004Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4499266Z E   
2025-01-17T11:31:46.4499473Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4499776Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4500020Z E          ...
2025-01-17T11:31:46.4500213Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4500501Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4500811Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4501070Z E          ...
2025-01-17T11:31:46.4501250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4501544Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4501860Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4502041Z 
2025-01-17T11:31:46.4502129Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4502462Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-17T11:31:46.4502860Z 
2025-01-17T11:31:46.4502986Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4503328Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4503631Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4503928Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4504253Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4504539Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4504772Z err_msg = None
2025-01-17T11:31:46.4504873Z 
2025-01-17T11:31:46.4504983Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4505238Z         if err_msg is None:
2025-01-17T11:31:46.4505450Z             if left.shape != right.shape:
2025-01-17T11:31:46.4505689Z                 raise_assert_detail(
2025-01-17T11:31:46.4505978Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4506260Z                 )
2025-01-17T11:31:46.4506423Z     
2025-01-17T11:31:46.4506570Z             diff = 0
2025-01-17T11:31:46.4506790Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4507060Z                 # count up differences
2025-01-17T11:31:46.4507380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4507697Z                     diff += 1
2025-01-17T11:31:46.4507897Z     
2025-01-17T11:31:46.4508065Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4508355Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4508730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4509089Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4509344Z E           
2025-01-17T11:31:46.4509550Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4510171Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4510876Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4511215Z 
2025-01-17T11:31:46.4511520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4511902Z 
2025-01-17T11:31:46.4512068Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4512322Z 
2025-01-17T11:31:46.4512634Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903410>
2025-01-17T11:31:46.4513096Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4513412Z attr = 'lines'
2025-01-17T11:31:46.4513520Z 
2025-01-17T11:31:46.4513661Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4513982Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4514254Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4514460Z         try:
2025-01-17T11:31:46.4514693Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4514983Z         except KeyError:
2025-01-17T11:31:46.4515234Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4515511Z     
2025-01-17T11:31:46.4515679Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4515917Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4516168Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4516458Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4516753Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4516993Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4517267Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4517523Z             else:
2025-01-17T11:31:46.4517719Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4517986Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4518169Z 
2025-01-17T11:31:46.4518292Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4518602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4518931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4519225Z     ???
2025-01-17T11:31:46.4519573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4519911Z 
2025-01-17T11:31:46.4520017Z >   ???
2025-01-17T11:31:46.4520356Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4520775Z E   
2025-01-17T11:31:46.4521001Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4521305Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4521564Z E          ...
2025-01-17T11:31:46.4521747Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4522030Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4522339Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4522789Z E          ...
2025-01-17T11:31:46.4522980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4523260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4523559Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4523739Z 
2025-01-17T11:31:46.4523825Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4524167Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-17T11:31:46.4524452Z 
2025-01-17T11:31:46.4524816Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9035f0>
2025-01-17T11:31:46.4525403Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4525728Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4525878Z 
2025-01-17T11:31:46.4526013Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4526330Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4526595Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4526804Z         try:
2025-01-17T11:31:46.4527035Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4527328Z         except KeyError:
2025-01-17T11:31:46.4527581Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4527854Z     
2025-01-17T11:31:46.4528024Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4528258Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4528506Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4528799Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4529094Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4529326Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4529595Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4529777Z 
2025-01-17T11:31:46.4529899Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4530204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4530392Z 
2025-01-17T11:31:46.4530529Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4530822Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4531080Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4531334Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4531617Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4531917Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4532172Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4532426Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4532751Z err_msg = None
2025-01-17T11:31:46.4532858Z 
2025-01-17T11:31:46.4532960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4533217Z         if err_msg is None:
2025-01-17T11:31:46.4533437Z             if left.shape != right.shape:
2025-01-17T11:31:46.4533676Z                 raise_assert_detail(
2025-01-17T11:31:46.4533967Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4534250Z                 )
2025-01-17T11:31:46.4534409Z     
2025-01-17T11:31:46.4534559Z             diff = 0
2025-01-17T11:31:46.4534778Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4535043Z                 # count up differences
2025-01-17T11:31:46.4535371Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4535698Z                     diff += 1
2025-01-17T11:31:46.4535891Z     
2025-01-17T11:31:46.4536048Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4536338Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4536709Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4537317Z E           AssertionError: Series are different
2025-01-17T11:31:46.4537720Z E           
2025-01-17T11:31:46.4538027Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4538987Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4540005Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4540737Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4541139Z 
2025-01-17T11:31:46.4541450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4542035Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-17T11:31:46.4542318Z 
2025-01-17T11:31:46.4542645Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903a40>
2025-01-17T11:31:46.4543108Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4543430Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4543578Z 
2025-01-17T11:31:46.4543715Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4544034Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4544299Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4544501Z         try:
2025-01-17T11:31:46.4544733Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4545026Z         except KeyError:
2025-01-17T11:31:46.4545281Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4545564Z     
2025-01-17T11:31:46.4545730Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4545967Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4546218Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4546508Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4546792Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4547021Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4547281Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4547466Z 
2025-01-17T11:31:46.4547586Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4547888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4548090Z 
2025-01-17T11:31:46.4548221Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4548512Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4548773Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4549035Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4549322Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4549616Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4549875Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4550129Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4550341Z err_msg = None
2025-01-17T11:31:46.4550443Z 
2025-01-17T11:31:46.4550543Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4550796Z         if err_msg is None:
2025-01-17T11:31:46.4551012Z             if left.shape != right.shape:
2025-01-17T11:31:46.4551250Z                 raise_assert_detail(
2025-01-17T11:31:46.4551535Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4551817Z                 )
2025-01-17T11:31:46.4552129Z     
2025-01-17T11:31:46.4552280Z             diff = 0
2025-01-17T11:31:46.4552702Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4552980Z                 # count up differences
2025-01-17T11:31:46.4553299Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4553618Z                     diff += 1
2025-01-17T11:31:46.4553813Z     
2025-01-17T11:31:46.4554041Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4554548Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4555183Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4555771Z E           AssertionError: Series are different
2025-01-17T11:31:46.4556177Z E           
2025-01-17T11:31:46.4556404Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4556949Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4557750Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4558556Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4559005Z 
2025-01-17T11:31:46.4559317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4559872Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-17T11:31:46.4560134Z 
2025-01-17T11:31:46.4560260Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4560586Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4560880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4561464Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4561790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4562088Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4562327Z err_msg = None
2025-01-17T11:31:46.4562430Z 
2025-01-17T11:31:46.4562704Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4563011Z         if err_msg is None:
2025-01-17T11:31:46.4563234Z             if left.shape != right.shape:
2025-01-17T11:31:46.4563475Z                 raise_assert_detail(
2025-01-17T11:31:46.4563763Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4564044Z                 )
2025-01-17T11:31:46.4564206Z     
2025-01-17T11:31:46.4564357Z             diff = 0
2025-01-17T11:31:46.4564571Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4564833Z                 # count up differences
2025-01-17T11:31:46.4565153Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4565621Z                     diff += 1
2025-01-17T11:31:46.4565921Z     
2025-01-17T11:31:46.4566091Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4566378Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4566746Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4567099Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4567343Z E           
2025-01-17T11:31:46.4567546Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4567989Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4568578Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4568920Z 
2025-01-17T11:31:46.4569225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4569601Z 
2025-01-17T11:31:46.4569771Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4570016Z 
2025-01-17T11:31:46.4570242Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e901ca0>
2025-01-17T11:31:46.4570728Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>, attr = 'nu'
2025-01-17T11:31:46.4571006Z 
2025-01-17T11:31:46.4571138Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4571460Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4571741Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4572102Z         try:
2025-01-17T11:31:46.4572506Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4573119Z         except KeyError:
2025-01-17T11:31:46.4573548Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4574022Z     
2025-01-17T11:31:46.4574294Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4574683Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4575097Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4575568Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4575926Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4576152Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4576412Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4576603Z 
2025-01-17T11:31:46.4576723Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4577041Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4577372Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4577654Z     ???
2025-01-17T11:31:46.4577844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4578031Z 
2025-01-17T11:31:46.4578099Z >   ???
2025-01-17T11:31:46.4578217Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4578286Z E   
2025-01-17T11:31:46.4578410Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4578520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4578586Z E          ...
2025-01-17T11:31:46.4578670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4578793Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4578906Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4579116Z E          ...
2025-01-17T11:31:46.4579298Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4579416Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4579522Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4579526Z 
2025-01-17T11:31:46.4579610Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4579806Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-17T11:31:46.4579810Z 
2025-01-17T11:31:46.4579932Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4580055Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4580144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4580273Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4580389Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4580492Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4580565Z err_msg = None
2025-01-17T11:31:46.4580569Z 
2025-01-17T11:31:46.4580672Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4580750Z         if err_msg is None:
2025-01-17T11:31:46.4580838Z             if left.shape != right.shape:
2025-01-17T11:31:46.4580921Z                 raise_assert_detail(
2025-01-17T11:31:46.4581058Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4581125Z                 )
2025-01-17T11:31:46.4581190Z     
2025-01-17T11:31:46.4581259Z             diff = 0
2025-01-17T11:31:46.4581363Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4581449Z                 # count up differences
2025-01-17T11:31:46.4581610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4581691Z                     diff += 1
2025-01-17T11:31:46.4581753Z     
2025-01-17T11:31:46.4581843Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4581971Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4582135Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4582239Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4582310Z E           
2025-01-17T11:31:46.4582412Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4582896Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4583167Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4583177Z 
2025-01-17T11:31:46.4583505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4583509Z 
2025-01-17T11:31:46.4583671Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4583675Z 
2025-01-17T11:31:46.4583896Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903bc0>
2025-01-17T11:31:46.4584053Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4584127Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4584131Z 
2025-01-17T11:31:46.4584257Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4584364Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4584567Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4584753Z         try:
2025-01-17T11:31:46.4584890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4584967Z         except KeyError:
2025-01-17T11:31:46.4585098Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4585164Z     
2025-01-17T11:31:46.4585243Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4585330Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4585415Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4585539Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4585622Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4585705Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4585811Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4585815Z 
2025-01-17T11:31:46.4585933Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4586052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4586187Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4586258Z     ???
2025-01-17T11:31:46.4586359Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4586364Z 
2025-01-17T11:31:46.4586429Z >   ???
2025-01-17T11:31:46.4586546Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4586611Z E   
2025-01-17T11:31:46.4586737Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4586844Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4586909Z E          ...
2025-01-17T11:31:46.4586996Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4587117Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4587226Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4587296Z E          ...
2025-01-17T11:31:46.4587382Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4587499Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4587595Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4587603Z 
2025-01-17T11:31:46.4587684Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4587860Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-17T11:31:46.4587867Z 
2025-01-17T11:31:46.4587992Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4588120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4588208Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4588332Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4588462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4588549Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4588623Z err_msg = None
2025-01-17T11:31:46.4588627Z 
2025-01-17T11:31:46.4588727Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4588809Z         if err_msg is None:
2025-01-17T11:31:46.4588896Z             if left.shape != right.shape:
2025-01-17T11:31:46.4588978Z                 raise_assert_detail(
2025-01-17T11:31:46.4589114Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4589186Z                 )
2025-01-17T11:31:46.4589250Z     
2025-01-17T11:31:46.4589323Z             diff = 0
2025-01-17T11:31:46.4589425Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4589508Z                 # count up differences
2025-01-17T11:31:46.4589668Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4589845Z                     diff += 1
2025-01-17T11:31:46.4589979Z     
2025-01-17T11:31:46.4590068Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4590197Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4590360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4590461Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4590526Z E           
2025-01-17T11:31:46.4590634Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4590889Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4591163Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4591176Z 
2025-01-17T11:31:46.4591474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4591478Z 
2025-01-17T11:31:46.4591636Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4591640Z 
2025-01-17T11:31:46.4591855Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903920>
2025-01-17T11:31:46.4592048Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>, attr = 'f_lu'
2025-01-17T11:31:46.4592052Z 
2025-01-17T11:31:46.4592186Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4592293Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4592380Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4592449Z         try:
2025-01-17T11:31:46.4592688Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4592766Z         except KeyError:
2025-01-17T11:31:46.4593002Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4593092Z     
2025-01-17T11:31:46.4593183Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4593271Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4593351Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4593479Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4593557Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4593644Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4593744Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4593748Z 
2025-01-17T11:31:46.4593869Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4593985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4594125Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4594190Z     ???
2025-01-17T11:31:46.4594296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4594299Z 
2025-01-17T11:31:46.4594363Z >   ???
2025-01-17T11:31:46.4594484Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4594546Z E   
2025-01-17T11:31:46.4594669Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4594770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4594839Z E          ...
2025-01-17T11:31:46.4594918Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4595044Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4595147Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4595340Z E          ...
2025-01-17T11:31:46.4595520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4595645Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4595744Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4595748Z 
2025-01-17T11:31:46.4595830Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4596019Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-17T11:31:46.4596029Z 
2025-01-17T11:31:46.4596251Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4596464Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4596611Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4596834Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4597038Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4597192Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4597308Z err_msg = None
2025-01-17T11:31:46.4597315Z 
2025-01-17T11:31:46.4597467Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4597545Z         if err_msg is None:
2025-01-17T11:31:46.4597637Z             if left.shape != right.shape:
2025-01-17T11:31:46.4597715Z                 raise_assert_detail(
2025-01-17T11:31:46.4597854Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4597918Z                 )
2025-01-17T11:31:46.4597983Z     
2025-01-17T11:31:46.4598049Z             diff = 0
2025-01-17T11:31:46.4598157Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4598237Z                 # count up differences
2025-01-17T11:31:46.4598401Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4598478Z                     diff += 1
2025-01-17T11:31:46.4598549Z     
2025-01-17T11:31:46.4598627Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4598760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4598920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4599029Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4599099Z E           
2025-01-17T11:31:46.4599203Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4599462Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4599726Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4599735Z 
2025-01-17T11:31:46.4600030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4600034Z 
2025-01-17T11:31:46.4600200Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4600204Z 
2025-01-17T11:31:46.4600418Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903da0>
2025-01-17T11:31:46.4600580Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4600653Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4600657Z 
2025-01-17T11:31:46.4600789Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4601020Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4601174Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4601241Z         try:
2025-01-17T11:31:46.4601377Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4601450Z         except KeyError:
2025-01-17T11:31:46.4601587Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4601649Z     
2025-01-17T11:31:46.4601729Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4601825Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4601906Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4602030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4602109Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4602199Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4602300Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4602374Z             else:
2025-01-17T11:31:46.4602469Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4602775Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4602783Z 
2025-01-17T11:31:46.4602908Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4603017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4603152Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4603218Z     ???
2025-01-17T11:31:46.4603318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4603321Z 
2025-01-17T11:31:46.4603393Z >   ???
2025-01-17T11:31:46.4603511Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4603584Z E   
2025-01-17T11:31:46.4603703Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4603811Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4603877Z E          ...
2025-01-17T11:31:46.4603971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4604095Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4604199Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4604269Z E          ...
2025-01-17T11:31:46.4604348Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4604468Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4604565Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4604568Z 
2025-01-17T11:31:46.4604657Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4604845Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-17T11:31:46.4604849Z 
2025-01-17T11:31:46.4604975Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4605092Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4605192Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4605320Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4605442Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4605528Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4605602Z err_msg = None
2025-01-17T11:31:46.4605605Z 
2025-01-17T11:31:46.4605706Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4605788Z         if err_msg is None:
2025-01-17T11:31:46.4605876Z             if left.shape != right.shape:
2025-01-17T11:31:46.4605958Z                 raise_assert_detail(
2025-01-17T11:31:46.4606091Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4606161Z                 )
2025-01-17T11:31:46.4606223Z     
2025-01-17T11:31:46.4606295Z             diff = 0
2025-01-17T11:31:46.4606530Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4606743Z                 # count up differences
2025-01-17T11:31:46.4606909Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4606988Z                     diff += 1
2025-01-17T11:31:46.4607051Z     
2025-01-17T11:31:46.4607132Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4607262Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4607423Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4607532Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4607597Z E           
2025-01-17T11:31:46.4607706Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4607969Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4608237Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4608241Z 
2025-01-17T11:31:46.4608540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4608544Z 
2025-01-17T11:31:46.4608702Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4608705Z 
2025-01-17T11:31:46.4608926Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903fb0>
2025-01-17T11:31:46.4609079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4609158Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4609165Z 
2025-01-17T11:31:46.4609295Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4609405Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4609481Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4609555Z         try:
2025-01-17T11:31:46.4609684Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4609758Z         except KeyError:
2025-01-17T11:31:46.4609895Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4609959Z     
2025-01-17T11:31:46.4610044Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4610129Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4610216Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4610339Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4610421Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4610507Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4610617Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4610684Z             else:
2025-01-17T11:31:46.4610776Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4610875Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4610879Z 
2025-01-17T11:31:46.4610998Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4611102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4611240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4611305Z     ???
2025-01-17T11:31:46.4611415Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4611418Z 
2025-01-17T11:31:46.4611481Z >   ???
2025-01-17T11:31:46.4611603Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4611755Z E   
2025-01-17T11:31:46.4611874Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4612070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4612137Z E          ...
2025-01-17T11:31:46.4612222Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4612344Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4612453Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4612518Z E          ...
2025-01-17T11:31:46.4612714Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4612831Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4612933Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4612937Z 
2025-01-17T11:31:46.4613019Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4613208Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-17T11:31:46.4613212Z 
2025-01-17T11:31:46.4613339Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4613468Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4613558Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4613690Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4613804Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4613896Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4613965Z err_msg = None
2025-01-17T11:31:46.4613969Z 
2025-01-17T11:31:46.4614076Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4614150Z         if err_msg is None:
2025-01-17T11:31:46.4614241Z             if left.shape != right.shape:
2025-01-17T11:31:46.4614318Z                 raise_assert_detail(
2025-01-17T11:31:46.4614464Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4614533Z                 )
2025-01-17T11:31:46.4614638Z     
2025-01-17T11:31:46.4614765Z             diff = 0
2025-01-17T11:31:46.4614950Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4615092Z                 # count up differences
2025-01-17T11:31:46.4615367Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4615490Z                     diff += 1
2025-01-17T11:31:46.4615595Z     
2025-01-17T11:31:46.4615738Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4615948Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4616229Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4616399Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4616521Z E           
2025-01-17T11:31:46.4616699Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4617163Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4617622Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4617629Z 
2025-01-17T11:31:46.4618078Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4618083Z 
2025-01-17T11:31:46.4618244Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4618387Z 
2025-01-17T11:31:46.4618711Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e902fc0>
2025-01-17T11:31:46.4618877Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4618948Z attr = 'j_blues'
2025-01-17T11:31:46.4618952Z 
2025-01-17T11:31:46.4619081Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4619192Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4619268Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4619337Z         try:
2025-01-17T11:31:46.4619469Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4619552Z         except KeyError:
2025-01-17T11:31:46.4619682Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4619750Z     
2025-01-17T11:31:46.4619831Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4619922Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4620011Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4620146Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4620224Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4620310Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4620444Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4620516Z             else:
2025-01-17T11:31:46.4620604Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4620702Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4620713Z 
2025-01-17T11:31:46.4620829Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4620941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4621078Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4621142Z     ???
2025-01-17T11:31:46.4621248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4621257Z 
2025-01-17T11:31:46.4621324Z >   ???
2025-01-17T11:31:46.4621449Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4621512Z E   
2025-01-17T11:31:46.4621639Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4621742Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4621816Z E          ...
2025-01-17T11:31:46.4621894Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4622017Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4622120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4622188Z E          ...
2025-01-17T11:31:46.4622266Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4622391Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4622486Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4622494Z 
2025-01-17T11:31:46.4622684Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4622881Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-17T11:31:46.4622886Z 
2025-01-17T11:31:46.4623012Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4623130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4623223Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4623348Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4623472Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4623559Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4623633Z err_msg = None
2025-01-17T11:31:46.4623637Z 
2025-01-17T11:31:46.4623739Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4623939Z         if err_msg is None:
2025-01-17T11:31:46.4624130Z             if left.shape != right.shape:
2025-01-17T11:31:46.4624209Z                 raise_assert_detail(
2025-01-17T11:31:46.4624348Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4624414Z                 )
2025-01-17T11:31:46.4624486Z     
2025-01-17T11:31:46.4624552Z             diff = 0
2025-01-17T11:31:46.4624660Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4624740Z                 # count up differences
2025-01-17T11:31:46.4624907Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4624980Z                     diff += 1
2025-01-17T11:31:46.4625047Z     
2025-01-17T11:31:46.4625128Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4625261Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4625423Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4625544Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4625612Z E           
2025-01-17T11:31:46.4625722Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4625974Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4626233Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4626242Z 
2025-01-17T11:31:46.4626535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4626539Z 
2025-01-17T11:31:46.4626703Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4626707Z 
2025-01-17T11:31:46.4626920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900860>
2025-01-17T11:31:46.4627089Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4627157Z attr = 'lines'
2025-01-17T11:31:46.4627161Z 
2025-01-17T11:31:46.4627290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4627395Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4627484Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4627550Z         try:
2025-01-17T11:31:46.4627686Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4627759Z         except KeyError:
2025-01-17T11:31:46.4627897Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4627965Z     
2025-01-17T11:31:46.4628051Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4628135Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4628220Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4628345Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4628427Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4628510Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4628610Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4628683Z             else:
2025-01-17T11:31:46.4628770Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4628875Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4628879Z 
2025-01-17T11:31:46.4628996Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4629105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4629427Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4629500Z     ???
2025-01-17T11:31:46.4629605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4629608Z 
2025-01-17T11:31:46.4629676Z >   ???
2025-01-17T11:31:46.4629795Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4629862Z E   
2025-01-17T11:31:46.4629984Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4630093Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4630158Z E          ...
2025-01-17T11:31:46.4630241Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4630360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4630475Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4630543Z E          ...
2025-01-17T11:31:46.4630627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4630756Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4630851Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4630860Z 
2025-01-17T11:31:46.4630943Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4631318Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-17T11:31:46.4631334Z 
2025-01-17T11:31:46.4631693Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900920>
2025-01-17T11:31:46.4631952Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4632088Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4632094Z 
2025-01-17T11:31:46.4632275Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4632385Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4632462Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4632669Z         try:
2025-01-17T11:31:46.4632873Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4632963Z         except KeyError:
2025-01-17T11:31:46.4633096Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4633164Z     
2025-01-17T11:31:46.4633244Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4633334Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4633419Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4633549Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4633626Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4633712Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4633812Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4633816Z 
2025-01-17T11:31:46.4633942Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4634045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4634052Z 
2025-01-17T11:31:46.4634191Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4634269Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4634379Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4634453Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4634591Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4634666Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4634766Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4634839Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4634905Z err_msg = None
2025-01-17T11:31:46.4634909Z 
2025-01-17T11:31:46.4635013Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4635089Z         if err_msg is None:
2025-01-17T11:31:46.4635178Z             if left.shape != right.shape:
2025-01-17T11:31:46.4635392Z                 raise_assert_detail(
2025-01-17T11:31:46.4635632Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4635700Z                 )
2025-01-17T11:31:46.4635769Z     
2025-01-17T11:31:46.4635837Z             diff = 0
2025-01-17T11:31:46.4635948Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4636028Z                 # count up differences
2025-01-17T11:31:46.4636191Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4636261Z                     diff += 1
2025-01-17T11:31:46.4636331Z     
2025-01-17T11:31:46.4636411Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4636543Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4636709Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4636809Z E           AssertionError: Series are different
2025-01-17T11:31:46.4636880Z E           
2025-01-17T11:31:46.4636981Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4637351Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4637680Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4638012Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4638017Z 
2025-01-17T11:31:46.4638317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4638533Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-17T11:31:46.4638537Z 
2025-01-17T11:31:46.4638757Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900bf0>
2025-01-17T11:31:46.4638915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4639002Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4639005Z 
2025-01-17T11:31:46.4639136Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4639254Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4639330Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4639402Z         try:
2025-01-17T11:31:46.4639532Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4639609Z         except KeyError:
2025-01-17T11:31:46.4639738Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4639807Z     
2025-01-17T11:31:46.4639884Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4639975Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4640061Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4640192Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4640271Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4640357Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4640458Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4640546Z 
2025-01-17T11:31:46.4640738Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4640846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4640850Z 
2025-01-17T11:31:46.4640980Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4641057Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4641161Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4641233Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4641365Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4641444Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4641549Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4641625Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4641699Z err_msg = None
2025-01-17T11:31:46.4641702Z 
2025-01-17T11:31:46.4641812Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4641886Z         if err_msg is None:
2025-01-17T11:31:46.4641976Z             if left.shape != right.shape:
2025-01-17T11:31:46.4642053Z                 raise_assert_detail(
2025-01-17T11:31:46.4642191Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4642255Z                 )
2025-01-17T11:31:46.4642322Z     
2025-01-17T11:31:46.4642389Z             diff = 0
2025-01-17T11:31:46.4642503Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4642780Z                 # count up differences
2025-01-17T11:31:46.4642951Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4643024Z                     diff += 1
2025-01-17T11:31:46.4643090Z     
2025-01-17T11:31:46.4643168Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4643299Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4643471Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4643570Z E           AssertionError: Series are different
2025-01-17T11:31:46.4643641Z E           
2025-01-17T11:31:46.4643734Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4644110Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4644487Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4644860Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4644865Z 
2025-01-17T11:31:46.4645166Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4645350Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-17T11:31:46.4645473Z 
2025-01-17T11:31:46.4645702Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4645824Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4645920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4646044Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4646160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4646248Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4646320Z err_msg = None
2025-01-17T11:31:46.4646324Z 
2025-01-17T11:31:46.4646422Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4646498Z         if err_msg is None:
2025-01-17T11:31:46.4646589Z             if left.shape != right.shape:
2025-01-17T11:31:46.4646671Z                 raise_assert_detail(
2025-01-17T11:31:46.4646809Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4646882Z                 )
2025-01-17T11:31:46.4646945Z     
2025-01-17T11:31:46.4647019Z             diff = 0
2025-01-17T11:31:46.4647121Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4647204Z                 # count up differences
2025-01-17T11:31:46.4647361Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4647436Z                     diff += 1
2025-01-17T11:31:46.4647498Z     
2025-01-17T11:31:46.4647578Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4647707Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4647869Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4647977Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4648042Z E           
2025-01-17T11:31:46.4648158Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4648417Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4648684Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4648691Z 
2025-01-17T11:31:46.4649223Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4649230Z 
2025-01-17T11:31:46.4649662Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4649679Z 
2025-01-17T11:31:46.4650058Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9011f0>
2025-01-17T11:31:46.4650388Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>, attr = 'nu'
2025-01-17T11:31:46.4650394Z 
2025-01-17T11:31:46.4650614Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4650791Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4650922Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4651028Z         try:
2025-01-17T11:31:46.4651242Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4651320Z         except KeyError:
2025-01-17T11:31:46.4651457Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4651519Z     
2025-01-17T11:31:46.4651598Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4651687Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4651891Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4652099Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4652178Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4652266Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4652369Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4652373Z 
2025-01-17T11:31:46.4652496Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4652783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4652934Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4652998Z     ???
2025-01-17T11:31:46.4653107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4653111Z 
2025-01-17T11:31:46.4653174Z >   ???
2025-01-17T11:31:46.4653303Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4653373Z E   
2025-01-17T11:31:46.4653498Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4653608Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4653681Z E          ...
2025-01-17T11:31:46.4653762Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4653891Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4653995Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4654060Z E          ...
2025-01-17T11:31:46.4654144Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4654260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4654364Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4654368Z 
2025-01-17T11:31:46.4654451Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4654657Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-17T11:31:46.4654661Z 
2025-01-17T11:31:46.4654788Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4654920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4655010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4655140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4655257Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4655349Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4655418Z err_msg = None
2025-01-17T11:31:46.4655421Z 
2025-01-17T11:31:46.4655530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4655604Z         if err_msg is None:
2025-01-17T11:31:46.4655697Z             if left.shape != right.shape:
2025-01-17T11:31:46.4655775Z                 raise_assert_detail(
2025-01-17T11:31:46.4655917Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4655987Z                 )
2025-01-17T11:31:46.4656054Z     
2025-01-17T11:31:46.4656121Z             diff = 0
2025-01-17T11:31:46.4656229Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4656311Z                 # count up differences
2025-01-17T11:31:46.4656476Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4656548Z                     diff += 1
2025-01-17T11:31:46.4656610Z     
2025-01-17T11:31:46.4656703Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4656829Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4656992Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4657096Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4657167Z E           
2025-01-17T11:31:46.4657403Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4657762Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4658028Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4658033Z 
2025-01-17T11:31:46.4658325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4658329Z 
2025-01-17T11:31:46.4658494Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4658502Z 
2025-01-17T11:31:46.4658722Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9011c0>
2025-01-17T11:31:46.4658884Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4658958Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4658962Z 
2025-01-17T11:31:46.4659094Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4659204Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4659285Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4659349Z         try:
2025-01-17T11:31:46.4659484Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4659557Z         except KeyError:
2025-01-17T11:31:46.4659689Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4659754Z     
2025-01-17T11:31:46.4659838Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4659926Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4660012Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4660144Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4660225Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4660311Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4660413Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4660417Z 
2025-01-17T11:31:46.4660538Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4660642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4660781Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4660849Z     ???
2025-01-17T11:31:46.4660957Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4660961Z 
2025-01-17T11:31:46.4661023Z >   ???
2025-01-17T11:31:46.4661145Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4661213Z E   
2025-01-17T11:31:46.4661341Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4661442Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4661511Z E          ...
2025-01-17T11:31:46.4661591Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4661711Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4661817Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4661882Z E          ...
2025-01-17T11:31:46.4661963Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4662077Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4662174Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4662178Z 
2025-01-17T11:31:46.4662261Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4662453Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-17T11:31:46.4662645Z 
2025-01-17T11:31:46.4662878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4663013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4663107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4663242Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4663361Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4663452Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4663524Z err_msg = None
2025-01-17T11:31:46.4663528Z 
2025-01-17T11:31:46.4663638Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4663715Z         if err_msg is None:
2025-01-17T11:31:46.4663808Z             if left.shape != right.shape:
2025-01-17T11:31:46.4663886Z                 raise_assert_detail(
2025-01-17T11:31:46.4664040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4664108Z                 )
2025-01-17T11:31:46.4664175Z     
2025-01-17T11:31:46.4664242Z             diff = 0
2025-01-17T11:31:46.4664351Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4664431Z                 # count up differences
2025-01-17T11:31:46.4664598Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4664671Z                     diff += 1
2025-01-17T11:31:46.4664733Z     
2025-01-17T11:31:46.4664824Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4664953Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4665121Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4665226Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4665297Z E           
2025-01-17T11:31:46.4665408Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4665675Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4665930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4665939Z 
2025-01-17T11:31:46.4666239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4666243Z 
2025-01-17T11:31:46.4666413Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4666417Z 
2025-01-17T11:31:46.4666640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e901b50>
2025-01-17T11:31:46.4666839Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>, attr = 'f_lu'
2025-01-17T11:31:46.4666843Z 
2025-01-17T11:31:46.4666974Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4667151Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4667285Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4667403Z         try:
2025-01-17T11:31:46.4667625Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4667750Z         except KeyError:
2025-01-17T11:31:46.4667966Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4668069Z     
2025-01-17T11:31:46.4668207Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4668361Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4668605Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4668835Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4668923Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4669008Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4669119Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4669123Z 
2025-01-17T11:31:46.4669246Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4669357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4669503Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4669571Z     ???
2025-01-17T11:31:46.4669673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4669676Z 
2025-01-17T11:31:46.4669743Z >   ???
2025-01-17T11:31:46.4669864Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4669936Z E   
2025-01-17T11:31:46.4670058Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4670177Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4670244Z E          ...
2025-01-17T11:31:46.4670331Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4670454Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4670559Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4670629Z E          ...
2025-01-17T11:31:46.4670706Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4670826Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4670925Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4670928Z 
2025-01-17T11:31:46.4671018Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4671216Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-17T11:31:46.4671224Z 
2025-01-17T11:31:46.4671355Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4671478Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4671573Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4671699Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4671821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4671907Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4671987Z err_msg = None
2025-01-17T11:31:46.4671991Z 
2025-01-17T11:31:46.4672094Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4672174Z         if err_msg is None:
2025-01-17T11:31:46.4672265Z             if left.shape != right.shape:
2025-01-17T11:31:46.4672346Z                 raise_assert_detail(
2025-01-17T11:31:46.4672489Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4672671Z                 )
2025-01-17T11:31:46.4672736Z     
2025-01-17T11:31:46.4672808Z             diff = 0
2025-01-17T11:31:46.4672912Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4672998Z                 # count up differences
2025-01-17T11:31:46.4673162Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4673236Z                     diff += 1
2025-01-17T11:31:46.4673298Z     
2025-01-17T11:31:46.4673380Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4673511Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4673676Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4673785Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4673850Z E           
2025-01-17T11:31:46.4674086Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4674444Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4674708Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4674713Z 
2025-01-17T11:31:46.4675014Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4675018Z 
2025-01-17T11:31:46.4675178Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4675188Z 
2025-01-17T11:31:46.4675414Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9018b0>
2025-01-17T11:31:46.4675574Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4675654Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4675658Z 
2025-01-17T11:31:46.4675785Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4675897Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4675971Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4676037Z         try:
2025-01-17T11:31:46.4676167Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4676238Z         except KeyError:
2025-01-17T11:31:46.4676377Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4676437Z     
2025-01-17T11:31:46.4676525Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4676616Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4676705Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4676828Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4676914Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4676997Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4677105Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4677171Z             else:
2025-01-17T11:31:46.4677266Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4677365Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4677369Z 
2025-01-17T11:31:46.4677490Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4677595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4677735Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4677799Z     ???
2025-01-17T11:31:46.4677905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4677914Z 
2025-01-17T11:31:46.4677981Z >   ???
2025-01-17T11:31:46.4678104Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4678170Z E   
2025-01-17T11:31:46.4678289Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4678397Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4678462Z E          ...
2025-01-17T11:31:46.4678547Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4678667Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4678774Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4678839Z E          ...
2025-01-17T11:31:46.4678921Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4679039Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4679145Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4679240Z 
2025-01-17T11:31:46.4679325Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4679600Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-17T11:31:46.4679604Z 
2025-01-17T11:31:46.4679727Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4679852Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4679938Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4680064Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4680180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4680271Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4680340Z err_msg = None
2025-01-17T11:31:46.4680343Z 
2025-01-17T11:31:46.4680449Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4680532Z         if err_msg is None:
2025-01-17T11:31:46.4680627Z             if left.shape != right.shape:
2025-01-17T11:31:46.4680704Z                 raise_assert_detail(
2025-01-17T11:31:46.4680842Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4680910Z                 )
2025-01-17T11:31:46.4680974Z     
2025-01-17T11:31:46.4681040Z             diff = 0
2025-01-17T11:31:46.4681143Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4681228Z                 # count up differences
2025-01-17T11:31:46.4681388Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4681464Z                     diff += 1
2025-01-17T11:31:46.4681526Z     
2025-01-17T11:31:46.4681609Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4681733Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4681903Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4682010Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4682079Z E           
2025-01-17T11:31:46.4682181Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4682437Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4682897Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4682908Z 
2025-01-17T11:31:46.4683217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4683221Z 
2025-01-17T11:31:46.4683382Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4683392Z 
2025-01-17T11:31:46.4683610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e901b80>
2025-01-17T11:31:46.4683767Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4683844Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4683848Z 
2025-01-17T11:31:46.4683980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4684091Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4684167Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4684235Z         try:
2025-01-17T11:31:46.4684365Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4692368Z         except KeyError:
2025-01-17T11:31:46.4692980Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4693266Z     
2025-01-17T11:31:46.4693415Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4693567Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4693701Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4693924Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4694068Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4694173Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4694286Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4694355Z             else:
2025-01-17T11:31:46.4694452Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4694556Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4694561Z 
2025-01-17T11:31:46.4694694Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4694808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4694983Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4695050Z     ???
2025-01-17T11:31:46.4695159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4695163Z 
2025-01-17T11:31:46.4695225Z >   ???
2025-01-17T11:31:46.4695350Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4695411Z E   
2025-01-17T11:31:46.4695535Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4695638Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4695706Z E          ...
2025-01-17T11:31:46.4695787Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4695913Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4696019Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4696085Z E          ...
2025-01-17T11:31:46.4696171Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4696297Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4696395Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4696399Z 
2025-01-17T11:31:46.4696485Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4696690Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-17T11:31:46.4696693Z 
2025-01-17T11:31:46.4696819Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4696951Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4697046Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4697177Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4697297Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4697391Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4697463Z err_msg = None
2025-01-17T11:31:46.4697468Z 
2025-01-17T11:31:46.4697576Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4697650Z         if err_msg is None:
2025-01-17T11:31:46.4697745Z             if left.shape != right.shape:
2025-01-17T11:31:46.4697823Z                 raise_assert_detail(
2025-01-17T11:31:46.4697968Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4698031Z                 )
2025-01-17T11:31:46.4698095Z     
2025-01-17T11:31:46.4698161Z             diff = 0
2025-01-17T11:31:46.4698270Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4698349Z                 # count up differences
2025-01-17T11:31:46.4698520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4698590Z                     diff += 1
2025-01-17T11:31:46.4698784Z     
2025-01-17T11:31:46.4698960Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4699095Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4699259Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4699372Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4699438Z E           
2025-01-17T11:31:46.4699550Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4699809Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4700076Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4700085Z 
2025-01-17T11:31:46.4700398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4700403Z 
2025-01-17T11:31:46.4700572Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4700576Z 
2025-01-17T11:31:46.4700797Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900d40>
2025-01-17T11:31:46.4700955Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4701025Z attr = 'j_blues'
2025-01-17T11:31:46.4701029Z 
2025-01-17T11:31:46.4701168Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4701277Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4701372Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4701437Z         try:
2025-01-17T11:31:46.4701582Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4701658Z         except KeyError:
2025-01-17T11:31:46.4701795Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4701858Z     
2025-01-17T11:31:46.4701944Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4702031Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4702113Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4702244Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4702325Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4702441Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4702750Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4702878Z             else:
2025-01-17T11:31:46.4703027Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4703213Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4703219Z 
2025-01-17T11:31:46.4703425Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4703609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4703852Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4703931Z     ???
2025-01-17T11:31:46.4704037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4704041Z 
2025-01-17T11:31:46.4704112Z >   ???
2025-01-17T11:31:46.4704235Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4704304Z E   
2025-01-17T11:31:46.4704424Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4704532Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4704599Z E          ...
2025-01-17T11:31:46.4704685Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4704952Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4705167Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4705236Z E          ...
2025-01-17T11:31:46.4705318Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4705450Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4705552Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4705556Z 
2025-01-17T11:31:46.4705646Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4705888Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-17T11:31:46.4705892Z 
2025-01-17T11:31:46.4706024Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4706148Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4706246Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4706386Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4706512Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4706598Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4706672Z err_msg = None
2025-01-17T11:31:46.4706676Z 
2025-01-17T11:31:46.4706790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4706871Z         if err_msg is None:
2025-01-17T11:31:46.4706961Z             if left.shape != right.shape:
2025-01-17T11:31:46.4707044Z                 raise_assert_detail(
2025-01-17T11:31:46.4707187Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4707255Z                 )
2025-01-17T11:31:46.4707319Z     
2025-01-17T11:31:46.4707394Z             diff = 0
2025-01-17T11:31:46.4707504Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4707596Z                 # count up differences
2025-01-17T11:31:46.4707767Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4707847Z                     diff += 1
2025-01-17T11:31:46.4707906Z     
2025-01-17T11:31:46.4707987Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4708122Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4708280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4708388Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4708453Z E           
2025-01-17T11:31:46.4708562Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4708823Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4709088Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4709092Z 
2025-01-17T11:31:46.4709402Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4709405Z 
2025-01-17T11:31:46.4709570Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4709574Z 
2025-01-17T11:31:46.4709795Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900fb0>
2025-01-17T11:31:46.4709954Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4710113Z attr = 'lines'
2025-01-17T11:31:46.4710117Z 
2025-01-17T11:31:46.4710321Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4710439Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4710519Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4710591Z         try:
2025-01-17T11:31:46.4710726Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4710803Z         except KeyError:
2025-01-17T11:31:46.4710933Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4711000Z     
2025-01-17T11:31:46.4711079Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4711166Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4711253Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4711381Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4711467Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4711548Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4711661Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4711731Z             else:
2025-01-17T11:31:46.4711825Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4711924Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4711928Z 
2025-01-17T11:31:46.4712051Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4712158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4712298Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4712364Z     ???
2025-01-17T11:31:46.4712471Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4712475Z 
2025-01-17T11:31:46.4712694Z >   ???
2025-01-17T11:31:46.4712865Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4712929Z E   
2025-01-17T11:31:46.4713056Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4713171Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4713252Z E          ...
2025-01-17T11:31:46.4713334Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4713457Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4713567Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4713632Z E          ...
2025-01-17T11:31:46.4713716Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4713832Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4713934Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4713938Z 
2025-01-17T11:31:46.4714022Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4714318Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-17T11:31:46.4714322Z 
2025-01-17T11:31:46.4714541Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900dd0>
2025-01-17T11:31:46.4714711Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4714793Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4714796Z 
2025-01-17T11:31:46.4714929Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4715035Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4715119Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4715183Z         try:
2025-01-17T11:31:46.4715320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4715395Z         except KeyError:
2025-01-17T11:31:46.4715528Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4715590Z     
2025-01-17T11:31:46.4715674Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4715759Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4715844Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4716098Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4716280Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4716365Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4716467Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4716476Z 
2025-01-17T11:31:46.4716591Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4716696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4716704Z 
2025-01-17T11:31:46.4716832Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4716909Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4717017Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4717090Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4717228Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4717312Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4717419Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4717492Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4717566Z err_msg = None
2025-01-17T11:31:46.4717570Z 
2025-01-17T11:31:46.4717674Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4717752Z         if err_msg is None:
2025-01-17T11:31:46.4717838Z             if left.shape != right.shape:
2025-01-17T11:31:46.4717921Z                 raise_assert_detail(
2025-01-17T11:31:46.4718059Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4718130Z                 )
2025-01-17T11:31:46.4718192Z     
2025-01-17T11:31:46.4718262Z             diff = 0
2025-01-17T11:31:46.4718367Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4718451Z                 # count up differences
2025-01-17T11:31:46.4718617Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4718697Z                     diff += 1
2025-01-17T11:31:46.4718761Z     
2025-01-17T11:31:46.4718842Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4718975Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4719140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4719241Z E           AssertionError: Series are different
2025-01-17T11:31:46.4719307Z E           
2025-01-17T11:31:46.4719483Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4720170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4720755Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4721091Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4721096Z 
2025-01-17T11:31:46.4721400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4721883Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-17T11:31:46.4721888Z 
2025-01-17T11:31:46.4722111Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e902c60>
2025-01-17T11:31:46.4722277Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4722358Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4722361Z 
2025-01-17T11:31:46.4722499Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4722796Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4722888Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4722954Z         try:
2025-01-17T11:31:46.4723092Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4723165Z         except KeyError:
2025-01-17T11:31:46.4723296Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4723363Z     
2025-01-17T11:31:46.4723444Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4723536Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4723621Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4723746Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4723825Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4723909Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4724008Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4724012Z 
2025-01-17T11:31:46.4724133Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4724240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4724244Z 
2025-01-17T11:31:46.4724380Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4724458Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4724569Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4724647Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4724781Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4724859Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4724959Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4725030Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4725106Z err_msg = None
2025-01-17T11:31:46.4725109Z 
2025-01-17T11:31:46.4725211Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4725290Z         if err_msg is None:
2025-01-17T11:31:46.4725375Z             if left.shape != right.shape:
2025-01-17T11:31:46.4725462Z                 raise_assert_detail(
2025-01-17T11:31:46.4725596Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4725665Z                 )
2025-01-17T11:31:46.4725734Z     
2025-01-17T11:31:46.4725807Z             diff = 0
2025-01-17T11:31:46.4725913Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4725994Z                 # count up differences
2025-01-17T11:31:46.4726161Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4726232Z                     diff += 1
2025-01-17T11:31:46.4726299Z     
2025-01-17T11:31:46.4726378Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4726507Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4726668Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4726768Z E           AssertionError: Series are different
2025-01-17T11:31:46.4726833Z E           
2025-01-17T11:31:46.4726933Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4727424Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4727905Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4728284Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4728292Z 
2025-01-17T11:31:46.4728591Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4728817Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-17T11:31:46.4728820Z 
2025-01-17T11:31:46.4728942Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4729066Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4729159Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4729286Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4729408Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4729498Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4729568Z err_msg = None
2025-01-17T11:31:46.4729572Z 
2025-01-17T11:31:46.4729675Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4729749Z         if err_msg is None:
2025-01-17T11:31:46.4729842Z             if left.shape != right.shape:
2025-01-17T11:31:46.4729922Z                 raise_assert_detail(
2025-01-17T11:31:46.4730061Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4730126Z                 )
2025-01-17T11:31:46.4730192Z     
2025-01-17T11:31:46.4730259Z             diff = 0
2025-01-17T11:31:46.4730360Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4730443Z                 # count up differences
2025-01-17T11:31:46.4730601Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4730682Z                     diff += 1
2025-01-17T11:31:46.4730749Z     
2025-01-17T11:31:46.4730837Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4730963Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4731126Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4731230Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4731296Z E           
2025-01-17T11:31:46.4731397Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4731656Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4732016Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4732103Z 
2025-01-17T11:31:46.4732396Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4732401Z 
2025-01-17T11:31:46.4732673Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4732678Z 
2025-01-17T11:31:46.4732896Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6ba0>
2025-01-17T11:31:46.4733091Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>, attr = 'nu'
2025-01-17T11:31:46.4733094Z 
2025-01-17T11:31:46.4733224Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4733334Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4733426Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4733495Z         try:
2025-01-17T11:31:46.4733631Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4733703Z         except KeyError:
2025-01-17T11:31:46.4733838Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4733900Z     
2025-01-17T11:31:46.4733981Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4734067Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4734150Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4734272Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4734354Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4734434Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4734538Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4734545Z 
2025-01-17T11:31:46.4734661Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4734779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4734920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4734984Z     ???
2025-01-17T11:31:46.4735090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4735093Z 
2025-01-17T11:31:46.4735157Z >   ???
2025-01-17T11:31:46.4735280Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4735342Z E   
2025-01-17T11:31:46.4735467Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4735569Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4735641Z E          ...
2025-01-17T11:31:46.4735721Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4735844Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4735947Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4736019Z E          ...
2025-01-17T11:31:46.4736100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4736221Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4736322Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4736325Z 
2025-01-17T11:31:46.4736410Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4736676Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-17T11:31:46.4736680Z 
2025-01-17T11:31:46.4736802Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4736923Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4737013Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4737240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4737780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4737933Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4738056Z err_msg = None
2025-01-17T11:31:46.4738061Z 
2025-01-17T11:31:46.4738230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4738355Z         if err_msg is None:
2025-01-17T11:31:46.4738496Z             if left.shape != right.shape:
2025-01-17T11:31:46.4738622Z                 raise_assert_detail(
2025-01-17T11:31:46.4738852Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4738958Z                 )
2025-01-17T11:31:46.4739065Z     
2025-01-17T11:31:46.4739175Z             diff = 0
2025-01-17T11:31:46.4739350Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4739481Z                 # count up differences
2025-01-17T11:31:46.4739759Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4739882Z                     diff += 1
2025-01-17T11:31:46.4739997Z     
2025-01-17T11:31:46.4740132Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4740350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4740555Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4740664Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4740729Z E           
2025-01-17T11:31:46.4740835Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4741089Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4741350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4741360Z 
2025-01-17T11:31:46.4741656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4741660Z 
2025-01-17T11:31:46.4741820Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4741824Z 
2025-01-17T11:31:46.4742039Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa50a0>
2025-01-17T11:31:46.4742196Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4742271Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4742275Z 
2025-01-17T11:31:46.4742403Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4742512Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4742704Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4742771Z         try:
2025-01-17T11:31:46.4742904Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4742978Z         except KeyError:
2025-01-17T11:31:46.4743112Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4743174Z     
2025-01-17T11:31:46.4743256Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4743341Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4743425Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4743547Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4743625Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4743708Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4743809Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4743813Z 
2025-01-17T11:31:46.4744082Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4744286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4744434Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4744496Z     ???
2025-01-17T11:31:46.4744605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4744609Z 
2025-01-17T11:31:46.4744673Z >   ???
2025-01-17T11:31:46.4744794Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4744856Z E   
2025-01-17T11:31:46.4744980Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4745081Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4745149Z E          ...
2025-01-17T11:31:46.4745229Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4745351Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4745461Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4745527Z E          ...
2025-01-17T11:31:46.4745608Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4745726Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4745827Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4745839Z 
2025-01-17T11:31:46.4745944Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4746172Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-17T11:31:46.4746176Z 
2025-01-17T11:31:46.4746298Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4746416Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4746506Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4746630Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4746757Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4746841Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4746911Z err_msg = None
2025-01-17T11:31:46.4746915Z 
2025-01-17T11:31:46.4747015Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4747086Z         if err_msg is None:
2025-01-17T11:31:46.4747177Z             if left.shape != right.shape:
2025-01-17T11:31:46.4747252Z                 raise_assert_detail(
2025-01-17T11:31:46.4747389Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4747454Z                 )
2025-01-17T11:31:46.4747520Z     
2025-01-17T11:31:46.4747586Z             diff = 0
2025-01-17T11:31:46.4747689Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4747767Z                 # count up differences
2025-01-17T11:31:46.4747931Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4748011Z                     diff += 1
2025-01-17T11:31:46.4748078Z     
2025-01-17T11:31:46.4748157Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4748287Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4748446Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4748551Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4748614Z E           
2025-01-17T11:31:46.4748717Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4748973Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4749397Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4749402Z 
2025-01-17T11:31:46.4749697Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4749700Z 
2025-01-17T11:31:46.4749863Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4749867Z 
2025-01-17T11:31:46.4750080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa70b0>
2025-01-17T11:31:46.4750275Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>, attr = 'f_lu'
2025-01-17T11:31:46.4750279Z 
2025-01-17T11:31:46.4750405Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4750518Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4750597Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4750663Z         try:
2025-01-17T11:31:46.4750790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4750864Z         except KeyError:
2025-01-17T11:31:46.4750991Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4751055Z     
2025-01-17T11:31:46.4751132Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4751219Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4751299Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4751426Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4751503Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4751583Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4751687Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4751691Z 
2025-01-17T11:31:46.4751811Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4751920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4752054Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4752119Z     ???
2025-01-17T11:31:46.4752219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4752223Z 
2025-01-17T11:31:46.4752289Z >   ???
2025-01-17T11:31:46.4752407Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4752475Z E   
2025-01-17T11:31:46.4752693Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4752799Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4752863Z E          ...
2025-01-17T11:31:46.4752943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4753060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4753170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4753234Z E          ...
2025-01-17T11:31:46.4753319Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4753432Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4753530Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4753534Z 
2025-01-17T11:31:46.4753616Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4753878Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-17T11:31:46.4753883Z 
2025-01-17T11:31:46.4754002Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4754123Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4754209Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4754335Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4754704Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4754867Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4754988Z err_msg = None
2025-01-17T11:31:46.4754995Z 
2025-01-17T11:31:46.4755171Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4755291Z         if err_msg is None:
2025-01-17T11:31:46.4755433Z             if left.shape != right.shape:
2025-01-17T11:31:46.4755566Z                 raise_assert_detail(
2025-01-17T11:31:46.4755792Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4755903Z                 )
2025-01-17T11:31:46.4756005Z     
2025-01-17T11:31:46.4756119Z             diff = 0
2025-01-17T11:31:46.4756286Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4756421Z                 # count up differences
2025-01-17T11:31:46.4756695Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4756830Z                     diff += 1
2025-01-17T11:31:46.4756934Z     
2025-01-17T11:31:46.4757071Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4757281Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4757561Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4757733Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4757842Z E           
2025-01-17T11:31:46.4758013Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4758361Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4758627Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4758633Z 
2025-01-17T11:31:46.4758933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4758937Z 
2025-01-17T11:31:46.4759097Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4759101Z 
2025-01-17T11:31:46.4759321Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa4f20>
2025-01-17T11:31:46.4759476Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4759550Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4759554Z 
2025-01-17T11:31:46.4759683Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4759802Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4759879Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4759944Z         try:
2025-01-17T11:31:46.4760075Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4760149Z         except KeyError:
2025-01-17T11:31:46.4760279Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4760343Z     
2025-01-17T11:31:46.4760421Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4760509Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4760589Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4760710Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4760792Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4760873Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4760979Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4761140Z             else:
2025-01-17T11:31:46.4761324Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4761427Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4761431Z 
2025-01-17T11:31:46.4761550Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4761653Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4761792Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4761854Z     ???
2025-01-17T11:31:46.4761955Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4761959Z 
2025-01-17T11:31:46.4762021Z >   ???
2025-01-17T11:31:46.4762142Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4762203Z E   
2025-01-17T11:31:46.4762325Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4762426Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4762498Z E          ...
2025-01-17T11:31:46.4762781Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4762939Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4763043Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4763110Z E          ...
2025-01-17T11:31:46.4763188Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4763304Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4763402Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4763406Z 
2025-01-17T11:31:46.4763486Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4763743Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-17T11:31:46.4763747Z 
2025-01-17T11:31:46.4763867Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4763987Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4764085Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4764211Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4764325Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4764411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4764482Z err_msg = None
2025-01-17T11:31:46.4764486Z 
2025-01-17T11:31:46.4764590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4764661Z         if err_msg is None:
2025-01-17T11:31:46.4764750Z             if left.shape != right.shape:
2025-01-17T11:31:46.4764826Z                 raise_assert_detail(
2025-01-17T11:31:46.4764962Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4765026Z                 )
2025-01-17T11:31:46.4765096Z     
2025-01-17T11:31:46.4765162Z             diff = 0
2025-01-17T11:31:46.4765271Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4765352Z                 # count up differences
2025-01-17T11:31:46.4765514Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4765584Z                     diff += 1
2025-01-17T11:31:46.4765647Z     
2025-01-17T11:31:46.4765725Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4765854Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4766018Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4766120Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4766187Z E           
2025-01-17T11:31:46.4766288Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4766670Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4767032Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4767037Z 
2025-01-17T11:31:46.4767327Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4767332Z 
2025-01-17T11:31:46.4767493Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4767497Z 
2025-01-17T11:31:46.4767708Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6990>
2025-01-17T11:31:46.4767876Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4767948Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4767952Z 
2025-01-17T11:31:46.4768083Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4768187Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4768268Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4768331Z         try:
2025-01-17T11:31:46.4768463Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4768536Z         except KeyError:
2025-01-17T11:31:46.4768669Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4768731Z     
2025-01-17T11:31:46.4768810Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4768899Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4768980Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4769105Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4769187Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4769276Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4769378Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4769450Z             else:
2025-01-17T11:31:46.4769538Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4769645Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4769649Z 
2025-01-17T11:31:46.4769762Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4769868Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4770003Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4770068Z     ???
2025-01-17T11:31:46.4770167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4770171Z 
2025-01-17T11:31:46.4770235Z >   ???
2025-01-17T11:31:46.4770352Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4770423Z E   
2025-01-17T11:31:46.4770549Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4770654Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4770718Z E          ...
2025-01-17T11:31:46.4770801Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4770923Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4771025Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4771091Z E          ...
2025-01-17T11:31:46.4771169Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4771286Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4771381Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4771384Z 
2025-01-17T11:31:46.4771468Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4771780Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-17T11:31:46.4771911Z 
2025-01-17T11:31:46.4772231Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4772435Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4772707Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4772919Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4773101Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4773189Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4773261Z err_msg = None
2025-01-17T11:31:46.4773265Z 
2025-01-17T11:31:46.4773367Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4773441Z         if err_msg is None:
2025-01-17T11:31:46.4773528Z             if left.shape != right.shape:
2025-01-17T11:31:46.4773613Z                 raise_assert_detail(
2025-01-17T11:31:46.4773755Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4773822Z                 )
2025-01-17T11:31:46.4773883Z     
2025-01-17T11:31:46.4773949Z             diff = 0
2025-01-17T11:31:46.4774051Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4774131Z                 # count up differences
2025-01-17T11:31:46.4774292Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4774361Z                     diff += 1
2025-01-17T11:31:46.4774426Z     
2025-01-17T11:31:46.4774505Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4774634Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4774794Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4774902Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4774971Z E           
2025-01-17T11:31:46.4775082Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4775340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4775598Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4775603Z 
2025-01-17T11:31:46.4775904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4775912Z 
2025-01-17T11:31:46.4776076Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4776080Z 
2025-01-17T11:31:46.4776300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa76e0>
2025-01-17T11:31:46.4776456Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4776530Z attr = 'j_blues'
2025-01-17T11:31:46.4776534Z 
2025-01-17T11:31:46.4776661Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4776769Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4776852Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4776920Z         try:
2025-01-17T11:31:46.4777053Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4777127Z         except KeyError:
2025-01-17T11:31:46.4777259Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4777320Z     
2025-01-17T11:31:46.4777530Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4777616Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4777802Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4777928Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4778009Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4778090Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4778198Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4778264Z             else:
2025-01-17T11:31:46.4778355Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4778453Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4778457Z 
2025-01-17T11:31:46.4778576Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4778679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4778818Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4778888Z     ???
2025-01-17T11:31:46.4778996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4779001Z 
2025-01-17T11:31:46.4779063Z >   ???
2025-01-17T11:31:46.4779183Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4779245Z E   
2025-01-17T11:31:46.4779363Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4779477Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4779542Z E          ...
2025-01-17T11:31:46.4779629Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4779750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4779860Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4779924Z E          ...
2025-01-17T11:31:46.4780005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4780122Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4780225Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4780229Z 
2025-01-17T11:31:46.4780314Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4780516Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-17T11:31:46.4780520Z 
2025-01-17T11:31:46.4780639Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4780762Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4780848Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4780977Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4781093Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4781188Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4781259Z err_msg = None
2025-01-17T11:31:46.4781267Z 
2025-01-17T11:31:46.4781372Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4781449Z         if err_msg is None:
2025-01-17T11:31:46.4781544Z             if left.shape != right.shape:
2025-01-17T11:31:46.4781620Z                 raise_assert_detail(
2025-01-17T11:31:46.4781760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4781826Z                 )
2025-01-17T11:31:46.4781888Z     
2025-01-17T11:31:46.4781958Z             diff = 0
2025-01-17T11:31:46.4782059Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4782142Z                 # count up differences
2025-01-17T11:31:46.4782299Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4782372Z                     diff += 1
2025-01-17T11:31:46.4782437Z     
2025-01-17T11:31:46.4782522Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4782832Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4783260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4783368Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4783437Z E           
2025-01-17T11:31:46.4783539Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4783798Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4784052Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4784062Z 
2025-01-17T11:31:46.4784360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4784364Z 
2025-01-17T11:31:46.4784521Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4784529Z 
2025-01-17T11:31:46.4784746Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6c60>
2025-01-17T11:31:46.4784907Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4784979Z attr = 'lines'
2025-01-17T11:31:46.4784982Z 
2025-01-17T11:31:46.4785109Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4785215Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4785290Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4785359Z         try:
2025-01-17T11:31:46.4785489Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4785571Z         except KeyError:
2025-01-17T11:31:46.4785703Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4785769Z     
2025-01-17T11:31:46.4785848Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4785936Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4786017Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4786143Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4786220Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4786304Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4786405Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4786475Z             else:
2025-01-17T11:31:46.4786562Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4786659Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4786667Z 
2025-01-17T11:31:46.4786782Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4786896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4787042Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4787105Z     ???
2025-01-17T11:31:46.4787210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4787214Z 
2025-01-17T11:31:46.4787276Z >   ???
2025-01-17T11:31:46.4787397Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4787460Z E   
2025-01-17T11:31:46.4787583Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4787685Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4787754Z E          ...
2025-01-17T11:31:46.4787833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4787954Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4788056Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4788212Z E          ...
2025-01-17T11:31:46.4788366Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4788488Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4788583Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4788587Z 
2025-01-17T11:31:46.4788673Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4788929Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-17T11:31:46.4788935Z 
2025-01-17T11:31:46.4789320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa54f0>
2025-01-17T11:31:46.4789584Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4789721Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4789727Z 
2025-01-17T11:31:46.4789936Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4790117Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4790248Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4790316Z         try:
2025-01-17T11:31:46.4790458Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4790532Z         except KeyError:
2025-01-17T11:31:46.4790665Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4790728Z     
2025-01-17T11:31:46.4790811Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4790895Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4790978Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4791100Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4791181Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4791260Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4791362Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4791366Z 
2025-01-17T11:31:46.4791480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4791592Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4791601Z 
2025-01-17T11:31:46.4791727Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4791806Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4791906Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4791982Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4792109Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4792187Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4792281Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4792355Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4792422Z err_msg = None
2025-01-17T11:31:46.4792426Z 
2025-01-17T11:31:46.4792526Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4792712Z         if err_msg is None:
2025-01-17T11:31:46.4792801Z             if left.shape != right.shape:
2025-01-17T11:31:46.4792882Z                 raise_assert_detail(
2025-01-17T11:31:46.4793017Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4793086Z                 )
2025-01-17T11:31:46.4793149Z     
2025-01-17T11:31:46.4793219Z             diff = 0
2025-01-17T11:31:46.4793322Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4793406Z                 # count up differences
2025-01-17T11:31:46.4793568Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4793644Z                     diff += 1
2025-01-17T11:31:46.4793706Z     
2025-01-17T11:31:46.4793788Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4793913Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4794075Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4794399Z E           AssertionError: Series are different
2025-01-17T11:31:46.4794470Z E           
2025-01-17T11:31:46.4794564Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4794930Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4795254Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4795590Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4795595Z 
2025-01-17T11:31:46.4795900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4796141Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-17T11:31:46.4796144Z 
2025-01-17T11:31:46.4796360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa73b0>
2025-01-17T11:31:46.4796517Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4796606Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4796610Z 
2025-01-17T11:31:46.4796740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4796851Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4796925Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4796989Z         try:
2025-01-17T11:31:46.4797131Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4797202Z         except KeyError:
2025-01-17T11:31:46.4797332Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4797393Z     
2025-01-17T11:31:46.4797474Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4797558Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4797640Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4797762Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4797841Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4797927Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4798036Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4798040Z 
2025-01-17T11:31:46.4798156Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4798264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4798268Z 
2025-01-17T11:31:46.4798393Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4798475Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4798574Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4798652Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4798781Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4798858Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4798955Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4799121Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4799261Z err_msg = None
2025-01-17T11:31:46.4799266Z 
2025-01-17T11:31:46.4799370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4799443Z         if err_msg is None:
2025-01-17T11:31:46.4799527Z             if left.shape != right.shape:
2025-01-17T11:31:46.4799607Z                 raise_assert_detail(
2025-01-17T11:31:46.4799738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4799807Z                 )
2025-01-17T11:31:46.4799869Z     
2025-01-17T11:31:46.4799940Z             diff = 0
2025-01-17T11:31:46.4800042Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4800124Z                 # count up differences
2025-01-17T11:31:46.4800286Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4800360Z                     diff += 1
2025-01-17T11:31:46.4800427Z     
2025-01-17T11:31:46.4800510Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4800640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4800804Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4800899Z E           AssertionError: Series are different
2025-01-17T11:31:46.4800970Z E           
2025-01-17T11:31:46.4801062Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4801426Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4801793Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4802169Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4802174Z 
2025-01-17T11:31:46.4802467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4802857Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-17T11:31:46.4802867Z 
2025-01-17T11:31:46.4803000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4803121Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4803214Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4803337Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4803452Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4803542Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4803609Z err_msg = None
2025-01-17T11:31:46.4803612Z 
2025-01-17T11:31:46.4803715Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4803786Z         if err_msg is None:
2025-01-17T11:31:46.4803874Z             if left.shape != right.shape:
2025-01-17T11:31:46.4804092Z                 raise_assert_detail(
2025-01-17T11:31:46.4804329Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4804399Z                 )
2025-01-17T11:31:46.4804464Z     
2025-01-17T11:31:46.4804531Z             diff = 0
2025-01-17T11:31:46.4804635Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4804714Z                 # count up differences
2025-01-17T11:31:46.4804878Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4804948Z                     diff += 1
2025-01-17T11:31:46.4805014Z     
2025-01-17T11:31:46.4805095Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4805222Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4805382Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4805489Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4805560Z E           
2025-01-17T11:31:46.4805669Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4805926Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4806186Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4806190Z 
2025-01-17T11:31:46.4806480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4806488Z 
2025-01-17T11:31:46.4806716Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4806723Z 
2025-01-17T11:31:46.4807100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa5c10>
2025-01-17T11:31:46.4807443Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>, attr = 'nu'
2025-01-17T11:31:46.4807449Z 
2025-01-17T11:31:46.4807671Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4807863Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4807991Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4808104Z         try:
2025-01-17T11:31:46.4808330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4808457Z         except KeyError:
2025-01-17T11:31:46.4808673Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4808782Z     
2025-01-17T11:31:46.4808914Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4809070Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4809212Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4809421Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4809558Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4809696Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4809872Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4809878Z 
2025-01-17T11:31:46.4810076Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4810260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4810491Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4810604Z     ???
2025-01-17T11:31:46.4810777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4810783Z 
2025-01-17T11:31:46.4810899Z >   ???
2025-01-17T11:31:46.4811208Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4811281Z E   
2025-01-17T11:31:46.4811487Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4811601Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4811666Z E          ...
2025-01-17T11:31:46.4811750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4811874Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4811982Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4812047Z E          ...
2025-01-17T11:31:46.4812130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4812246Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4812346Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4812350Z 
2025-01-17T11:31:46.4812433Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4812763Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-17T11:31:46.4812774Z 
2025-01-17T11:31:46.4812903Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4813033Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4813125Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4813254Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4813371Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4813460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4813528Z err_msg = None
2025-01-17T11:31:46.4813532Z 
2025-01-17T11:31:46.4813634Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4813711Z         if err_msg is None:
2025-01-17T11:31:46.4813796Z             if left.shape != right.shape:
2025-01-17T11:31:46.4813881Z                 raise_assert_detail(
2025-01-17T11:31:46.4814019Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4814088Z                 )
2025-01-17T11:31:46.4814151Z     
2025-01-17T11:31:46.4814220Z             diff = 0
2025-01-17T11:31:46.4814324Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4814407Z                 # count up differences
2025-01-17T11:31:46.4814567Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4814643Z                     diff += 1
2025-01-17T11:31:46.4814704Z     
2025-01-17T11:31:46.4814791Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4814917Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4815081Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4815183Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4815257Z E           
2025-01-17T11:31:46.4815366Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4815629Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4815885Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4815889Z 
2025-01-17T11:31:46.4816185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4816311Z 
2025-01-17T11:31:46.4816576Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4816581Z 
2025-01-17T11:31:46.4816806Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6900>
2025-01-17T11:31:46.4816970Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4817046Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4817050Z 
2025-01-17T11:31:46.4817178Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4817288Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4817365Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4817430Z         try:
2025-01-17T11:31:46.4817562Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4817642Z         except KeyError:
2025-01-17T11:31:46.4817771Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4817839Z     
2025-01-17T11:31:46.4817923Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4818018Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4818105Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4818230Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4818312Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4818394Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4818499Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4818503Z 
2025-01-17T11:31:46.4818619Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4818728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4818866Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4818934Z     ???
2025-01-17T11:31:46.4819035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4819039Z 
2025-01-17T11:31:46.4819111Z >   ???
2025-01-17T11:31:46.4819231Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4819299Z E   
2025-01-17T11:31:46.4819419Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4819524Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4819590Z E          ...
2025-01-17T11:31:46.4819673Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4819792Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4819901Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4819972Z E          ...
2025-01-17T11:31:46.4820060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4820180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4820278Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4820285Z 
2025-01-17T11:31:46.4820370Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4820602Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-17T11:31:46.4820614Z 
2025-01-17T11:31:46.4820738Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4820860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4820956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4821082Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4821206Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4821291Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4821365Z err_msg = None
2025-01-17T11:31:46.4821369Z 
2025-01-17T11:31:46.4821470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4821546Z         if err_msg is None:
2025-01-17T11:31:46.4821723Z             if left.shape != right.shape:
2025-01-17T11:31:46.4821876Z                 raise_assert_detail(
2025-01-17T11:31:46.4822013Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4822086Z                 )
2025-01-17T11:31:46.4822149Z     
2025-01-17T11:31:46.4822218Z             diff = 0
2025-01-17T11:31:46.4822320Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4822403Z                 # count up differences
2025-01-17T11:31:46.4822655Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4822732Z                     diff += 1
2025-01-17T11:31:46.4822793Z     
2025-01-17T11:31:46.4822876Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4823004Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4823171Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4823288Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4823353Z E           
2025-01-17T11:31:46.4823467Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4823721Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4823980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4823984Z 
2025-01-17T11:31:46.4824278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4824287Z 
2025-01-17T11:31:46.4824450Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4824454Z 
2025-01-17T11:31:46.4824674Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa5310>
2025-01-17T11:31:46.4824866Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>, attr = 'f_lu'
2025-01-17T11:31:46.4824870Z 
2025-01-17T11:31:46.4825002Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4825109Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4825189Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4825253Z         try:
2025-01-17T11:31:46.4825388Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4825462Z         except KeyError:
2025-01-17T11:31:46.4825592Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4825654Z     
2025-01-17T11:31:46.4825740Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4825831Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4825913Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4826039Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4826117Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4826205Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4826308Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4826312Z 
2025-01-17T11:31:46.4826433Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4826537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4826677Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4826742Z     ???
2025-01-17T11:31:46.4826845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4826848Z 
2025-01-17T11:31:46.4827051Z >   ???
2025-01-17T11:31:46.4827175Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4827338Z E   
2025-01-17T11:31:46.4827465Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4827568Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4827636Z E          ...
2025-01-17T11:31:46.4827718Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4827842Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4827945Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4828017Z E          ...
2025-01-17T11:31:46.4828095Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4828211Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4828312Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4828315Z 
2025-01-17T11:31:46.4828398Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4828614Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-17T11:31:46.4828618Z 
2025-01-17T11:31:46.4828742Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4828868Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4828956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4829085Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4829201Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4829290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4829363Z err_msg = None
2025-01-17T11:31:46.4829367Z 
2025-01-17T11:31:46.4829471Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4829546Z         if err_msg is None:
2025-01-17T11:31:46.4829636Z             if left.shape != right.shape:
2025-01-17T11:31:46.4829717Z                 raise_assert_detail(
2025-01-17T11:31:46.4829865Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4829930Z                 )
2025-01-17T11:31:46.4829996Z     
2025-01-17T11:31:46.4830063Z             diff = 0
2025-01-17T11:31:46.4830167Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4830246Z                 # count up differences
2025-01-17T11:31:46.4830407Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4830477Z                     diff += 1
2025-01-17T11:31:46.4830542Z     
2025-01-17T11:31:46.4830621Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4830750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4830967Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4831153Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4831288Z E           
2025-01-17T11:31:46.4831468Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4831937Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4832401Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4832407Z 
2025-01-17T11:31:46.4833036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4833208Z 
2025-01-17T11:31:46.4833629Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4833637Z 
2025-01-17T11:31:46.4834003Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa5790>
2025-01-17T11:31:46.4834276Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4834354Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4834359Z 
2025-01-17T11:31:46.4834497Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4834601Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4834683Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4834748Z         try:
2025-01-17T11:31:46.4834881Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4834955Z         except KeyError:
2025-01-17T11:31:46.4835086Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4835157Z     
2025-01-17T11:31:46.4835236Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4835331Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4835412Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4835541Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4835619Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4835704Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4835806Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4835876Z             else:
2025-01-17T11:31:46.4835963Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4836068Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4836072Z 
2025-01-17T11:31:46.4836189Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4836298Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4836434Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4836507Z     ???
2025-01-17T11:31:46.4836613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4836617Z 
2025-01-17T11:31:46.4836684Z >   ???
2025-01-17T11:31:46.4836803Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4836869Z E   
2025-01-17T11:31:46.4836987Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4837093Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4837158Z E          ...
2025-01-17T11:31:46.4837237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4837361Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4837466Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4837536Z E          ...
2025-01-17T11:31:46.4837613Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4837731Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4837837Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4837841Z 
2025-01-17T11:31:46.4837927Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4838131Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-17T11:31:46.4838135Z 
2025-01-17T11:31:46.4838255Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4838374Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4838464Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4838586Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4838706Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4838790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4838955Z err_msg = None
2025-01-17T11:31:46.4838959Z 
2025-01-17T11:31:46.4839152Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4839236Z         if err_msg is None:
2025-01-17T11:31:46.4839325Z             if left.shape != right.shape:
2025-01-17T11:31:46.4839409Z                 raise_assert_detail(
2025-01-17T11:31:46.4839543Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4839611Z                 )
2025-01-17T11:31:46.4839672Z     
2025-01-17T11:31:46.4839743Z             diff = 0
2025-01-17T11:31:46.4839845Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4839928Z                 # count up differences
2025-01-17T11:31:46.4840085Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4840155Z                     diff += 1
2025-01-17T11:31:46.4840223Z     
2025-01-17T11:31:46.4840302Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4840435Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4840602Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4840711Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4840776Z E           
2025-01-17T11:31:46.4840881Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4841134Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4841394Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4841406Z 
2025-01-17T11:31:46.4841701Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4841705Z 
2025-01-17T11:31:46.4841864Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4841868Z 
2025-01-17T11:31:46.4842084Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6a50>
2025-01-17T11:31:46.4842239Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4842317Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4842321Z 
2025-01-17T11:31:46.4842448Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4842734Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4842845Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4842916Z         try:
2025-01-17T11:31:46.4843048Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4843132Z         except KeyError:
2025-01-17T11:31:46.4843265Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4843328Z     
2025-01-17T11:31:46.4843413Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4843499Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4843587Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4843710Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4843790Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4843871Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4843975Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4844040Z             else:
2025-01-17T11:31:46.4844129Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4844227Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4844231Z 
2025-01-17T11:31:46.4844477Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4844697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4844845Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4844908Z     ???
2025-01-17T11:31:46.4845014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4845017Z 
2025-01-17T11:31:46.4845080Z >   ???
2025-01-17T11:31:46.4845200Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4845262Z E   
2025-01-17T11:31:46.4845379Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4845484Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4845549Z E          ...
2025-01-17T11:31:46.4845630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4845750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4845858Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4845930Z E          ...
2025-01-17T11:31:46.4846016Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4846130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4846230Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4846234Z 
2025-01-17T11:31:46.4846315Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4846513Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-17T11:31:46.4846517Z 
2025-01-17T11:31:46.4846636Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4846759Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4846845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4846971Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4847101Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4847190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4847259Z err_msg = None
2025-01-17T11:31:46.4847263Z 
2025-01-17T11:31:46.4847367Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4847441Z         if err_msg is None:
2025-01-17T11:31:46.4847531Z             if left.shape != right.shape:
2025-01-17T11:31:46.4847612Z                 raise_assert_detail(
2025-01-17T11:31:46.4847750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4847814Z                 )
2025-01-17T11:31:46.4847880Z     
2025-01-17T11:31:46.4847946Z             diff = 0
2025-01-17T11:31:46.4848048Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4848133Z                 # count up differences
2025-01-17T11:31:46.4848292Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4848375Z                     diff += 1
2025-01-17T11:31:46.4848439Z     
2025-01-17T11:31:46.4848523Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4848670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4848965Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4849136Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4849250Z E           
2025-01-17T11:31:46.4849418Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4849878Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4850340Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4850347Z 
2025-01-17T11:31:46.4850644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4850648Z 
2025-01-17T11:31:46.4850807Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4850818Z 
2025-01-17T11:31:46.4851032Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6f60>
2025-01-17T11:31:46.4851187Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4851259Z attr = 'j_blues'
2025-01-17T11:31:46.4851263Z 
2025-01-17T11:31:46.4851392Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4851508Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4851591Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4851663Z         try:
2025-01-17T11:31:46.4851794Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4851875Z         except KeyError:
2025-01-17T11:31:46.4852006Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4852076Z     
2025-01-17T11:31:46.4852155Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4852247Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4852327Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4852454Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4852651Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4852741Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4852843Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4852923Z             else:
2025-01-17T11:31:46.4853009Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4853111Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4853120Z 
2025-01-17T11:31:46.4853236Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4853340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4853486Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4853549Z     ???
2025-01-17T11:31:46.4853698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4853706Z 
2025-01-17T11:31:46.4853816Z >   ???
2025-01-17T11:31:46.4854002Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4854122Z E   
2025-01-17T11:31:46.4854317Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4854422Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4854496Z E          ...
2025-01-17T11:31:46.4854575Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4854705Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4854808Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4854876Z E          ...
2025-01-17T11:31:46.4854953Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4855071Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4855165Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4855169Z 
2025-01-17T11:31:46.4855254Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4855451Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-17T11:31:46.4855455Z 
2025-01-17T11:31:46.4855578Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4855697Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4856024Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4856154Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4856275Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4856361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4856435Z err_msg = None
2025-01-17T11:31:46.4856439Z 
2025-01-17T11:31:46.4856539Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4856615Z         if err_msg is None:
2025-01-17T11:31:46.4856702Z             if left.shape != right.shape:
2025-01-17T11:31:46.4856777Z                 raise_assert_detail(
2025-01-17T11:31:46.4856915Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4856980Z                 )
2025-01-17T11:31:46.4857053Z     
2025-01-17T11:31:46.4857124Z             diff = 0
2025-01-17T11:31:46.4857234Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4857319Z                 # count up differences
2025-01-17T11:31:46.4857481Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4857550Z                     diff += 1
2025-01-17T11:31:46.4857616Z     
2025-01-17T11:31:46.4857697Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4857829Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4857990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4858097Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4858161Z E           
2025-01-17T11:31:46.4858264Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4858520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4858784Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4858789Z 
2025-01-17T11:31:46.4859078Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4859083Z 
2025-01-17T11:31:46.4859243Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4859247Z 
2025-01-17T11:31:46.4859457Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e973cb0>
2025-01-17T11:31:46.4859624Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4859696Z attr = 'lines'
2025-01-17T11:31:46.4859700Z 
2025-01-17T11:31:46.4859830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4859939Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4860023Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4860089Z         try:
2025-01-17T11:31:46.4860226Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4860300Z         except KeyError:
2025-01-17T11:31:46.4860437Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4860501Z     
2025-01-17T11:31:46.4860587Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4860675Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4860763Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4860888Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4861056Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4861219Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4861326Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4861398Z             else:
2025-01-17T11:31:46.4861486Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4861589Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4861593Z 
2025-01-17T11:31:46.4861711Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4861824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4861959Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4862029Z     ???
2025-01-17T11:31:46.4869071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4869087Z 
2025-01-17T11:31:46.4869171Z >   ???
2025-01-17T11:31:46.4869385Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4869521Z E   
2025-01-17T11:31:46.4869749Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4869928Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4870037Z E          ...
2025-01-17T11:31:46.4870176Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4870378Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4870570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4870639Z E          ...
2025-01-17T11:31:46.4870723Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4870841Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4870944Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4870948Z 
2025-01-17T11:31:46.4871032Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4871293Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-17T11:31:46.4871304Z 
2025-01-17T11:31:46.4871529Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e973d70>
2025-01-17T11:31:46.4871692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4871773Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4871777Z 
2025-01-17T11:31:46.4871912Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4872021Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4872101Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4872165Z         try:
2025-01-17T11:31:46.4872305Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4872376Z         except KeyError:
2025-01-17T11:31:46.4872507Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4872686Z     
2025-01-17T11:31:46.4872770Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4872860Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4872948Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4873084Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4873163Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4873250Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4873358Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4873362Z 
2025-01-17T11:31:46.4873488Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4873598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4873602Z 
2025-01-17T11:31:46.4873736Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4873818Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4873929Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4874003Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4874318Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4874514Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4874619Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4874691Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4874764Z err_msg = None
2025-01-17T11:31:46.4874768Z 
2025-01-17T11:31:46.4874878Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4874956Z         if err_msg is None:
2025-01-17T11:31:46.4875046Z             if left.shape != right.shape:
2025-01-17T11:31:46.4875126Z                 raise_assert_detail(
2025-01-17T11:31:46.4875265Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4875329Z                 )
2025-01-17T11:31:46.4875395Z     
2025-01-17T11:31:46.4875462Z             diff = 0
2025-01-17T11:31:46.4875572Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4875660Z                 # count up differences
2025-01-17T11:31:46.4875834Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4875909Z                     diff += 1
2025-01-17T11:31:46.4875976Z     
2025-01-17T11:31:46.4876054Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4876183Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4876343Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4876444Z E           AssertionError: Series are different
2025-01-17T11:31:46.4876510Z E           
2025-01-17T11:31:46.4876609Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4876980Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4877325Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4877649Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4877657Z 
2025-01-17T11:31:46.4877976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4878235Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-17T11:31:46.4878239Z 
2025-01-17T11:31:46.4878456Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e973e30>
2025-01-17T11:31:46.4878621Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4878706Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4878710Z 
2025-01-17T11:31:46.4878843Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4878956Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4879038Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4879104Z         try:
2025-01-17T11:31:46.4879238Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4879316Z         except KeyError:
2025-01-17T11:31:46.4879538Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4879607Z     
2025-01-17T11:31:46.4879758Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4879853Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4879935Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4880068Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4880147Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4880233Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4880336Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4880340Z 
2025-01-17T11:31:46.4880465Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4880572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4880576Z 
2025-01-17T11:31:46.4880705Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4880788Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4880894Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4880966Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4881099Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4881174Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4881273Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4881344Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4881416Z err_msg = None
2025-01-17T11:31:46.4881419Z 
2025-01-17T11:31:46.4881522Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4881600Z         if err_msg is None:
2025-01-17T11:31:46.4881686Z             if left.shape != right.shape:
2025-01-17T11:31:46.4881764Z                 raise_assert_detail(
2025-01-17T11:31:46.4881906Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4881976Z                 )
2025-01-17T11:31:46.4882042Z     
2025-01-17T11:31:46.4882111Z             diff = 0
2025-01-17T11:31:46.4882217Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4882296Z                 # count up differences
2025-01-17T11:31:46.4882458Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4882672Z                     diff += 1
2025-01-17T11:31:46.4882793Z     
2025-01-17T11:31:46.4882880Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4883013Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4883177Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4883276Z E           AssertionError: Series are different
2025-01-17T11:31:46.4883340Z E           
2025-01-17T11:31:46.4883441Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4884090Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4884778Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4885616Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4885756Z 
2025-01-17T11:31:46.4886201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4886404Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-17T11:31:46.4886408Z 
2025-01-17T11:31:46.4886530Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4886656Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4886749Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4886876Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4887013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4887104Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4887172Z err_msg = None
2025-01-17T11:31:46.4887176Z 
2025-01-17T11:31:46.4887282Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4887357Z         if err_msg is None:
2025-01-17T11:31:46.4887444Z             if left.shape != right.shape:
2025-01-17T11:31:46.4887529Z                 raise_assert_detail(
2025-01-17T11:31:46.4887664Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4887733Z                 )
2025-01-17T11:31:46.4887795Z     
2025-01-17T11:31:46.4887866Z             diff = 0
2025-01-17T11:31:46.4887967Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4888049Z                 # count up differences
2025-01-17T11:31:46.4888213Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4888292Z                     diff += 1
2025-01-17T11:31:46.4888355Z     
2025-01-17T11:31:46.4888439Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4888567Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4888728Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4888831Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4888899Z E           
2025-01-17T11:31:46.4889003Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4889263Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4889527Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4889532Z 
2025-01-17T11:31:46.4889827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4889831Z 
2025-01-17T11:31:46.4889992Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4889996Z 
2025-01-17T11:31:46.4890214Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e974440>
2025-01-17T11:31:46.4890404Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>, attr = 'nu'
2025-01-17T11:31:46.4890408Z 
2025-01-17T11:31:46.4890539Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4890741Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4890894Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4890961Z         try:
2025-01-17T11:31:46.4891100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4891175Z         except KeyError:
2025-01-17T11:31:46.4891309Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4891371Z     
2025-01-17T11:31:46.4891451Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4891537Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4891620Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4891743Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4891826Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4891907Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4892012Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4892025Z 
2025-01-17T11:31:46.4892142Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4892252Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4892396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4892460Z     ???
2025-01-17T11:31:46.4892678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4892683Z 
2025-01-17T11:31:46.4892748Z >   ???
2025-01-17T11:31:46.4892872Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4892934Z E   
2025-01-17T11:31:46.4893059Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4893164Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4893234Z E          ...
2025-01-17T11:31:46.4893315Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4893440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4893549Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4893622Z E          ...
2025-01-17T11:31:46.4893702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4893823Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4893918Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4893922Z 
2025-01-17T11:31:46.4894008Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4894224Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-17T11:31:46.4894228Z 
2025-01-17T11:31:46.4894352Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4894471Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4894564Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4894687Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4894815Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4894903Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4894974Z err_msg = None
2025-01-17T11:31:46.4894978Z 
2025-01-17T11:31:46.4895081Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4895159Z         if err_msg is None:
2025-01-17T11:31:46.4895247Z             if left.shape != right.shape:
2025-01-17T11:31:46.4895326Z                 raise_assert_detail(
2025-01-17T11:31:46.4895462Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4895529Z                 )
2025-01-17T11:31:46.4895593Z     
2025-01-17T11:31:46.4895658Z             diff = 0
2025-01-17T11:31:46.4895766Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4896141Z                 # count up differences
2025-01-17T11:31:46.4896308Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4896621Z                     diff += 1
2025-01-17T11:31:46.4896689Z     
2025-01-17T11:31:46.4896771Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4896903Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4897064Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4897180Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4897244Z E           
2025-01-17T11:31:46.4897348Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4897601Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4897876Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4897881Z 
2025-01-17T11:31:46.4898171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4898175Z 
2025-01-17T11:31:46.4898337Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4898340Z 
2025-01-17T11:31:46.4898552Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e976990>
2025-01-17T11:31:46.4898712Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4898784Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4898788Z 
2025-01-17T11:31:46.4898920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4899037Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4899123Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4899188Z         try:
2025-01-17T11:31:46.4899323Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4899397Z         except KeyError:
2025-01-17T11:31:46.4899530Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4899591Z     
2025-01-17T11:31:46.4899675Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4899763Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4899849Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4899972Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4900057Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4900137Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4900241Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4900255Z 
2025-01-17T11:31:46.4900375Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4900483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4900625Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4900690Z     ???
2025-01-17T11:31:46.4900796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4900800Z 
2025-01-17T11:31:46.4900863Z >   ???
2025-01-17T11:31:46.4900984Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4901047Z E   
2025-01-17T11:31:46.4901168Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4901271Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4901350Z E          ...
2025-01-17T11:31:46.4901450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4901573Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4901783Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4901993Z E          ...
2025-01-17T11:31:46.4902154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4902378Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4902682Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4902689Z 
2025-01-17T11:31:46.4902835Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4903174Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-17T11:31:46.4903180Z 
2025-01-17T11:31:46.4903388Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4903591Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4903743Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4903954Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4904171Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4904313Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4904432Z err_msg = None
2025-01-17T11:31:46.4904438Z 
2025-01-17T11:31:46.4904604Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4904738Z         if err_msg is None:
2025-01-17T11:31:46.4904882Z             if left.shape != right.shape:
2025-01-17T11:31:46.4905010Z                 raise_assert_detail(
2025-01-17T11:31:46.4905242Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4905351Z                 )
2025-01-17T11:31:46.4905459Z     
2025-01-17T11:31:46.4905570Z             diff = 0
2025-01-17T11:31:46.4905745Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4905878Z                 # count up differences
2025-01-17T11:31:46.4906168Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4906292Z                     diff += 1
2025-01-17T11:31:46.4906402Z     
2025-01-17T11:31:46.4906536Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4906748Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4907027Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4907203Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4907312Z E           
2025-01-17T11:31:46.4907489Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4907886Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4908156Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4908162Z 
2025-01-17T11:31:46.4908459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4908463Z 
2025-01-17T11:31:46.4908626Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4908630Z 
2025-01-17T11:31:46.4908851Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9740e0>
2025-01-17T11:31:46.4909046Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>, attr = 'f_lu'
2025-01-17T11:31:46.4909051Z 
2025-01-17T11:31:46.4909180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4909432Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4909608Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4909679Z         try:
2025-01-17T11:31:46.4909809Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4909881Z         except KeyError:
2025-01-17T11:31:46.4910012Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4910073Z     
2025-01-17T11:31:46.4910154Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4910240Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4910324Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4910447Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4910530Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4910610Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4910714Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4910723Z 
2025-01-17T11:31:46.4910837Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4910946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4911083Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4911148Z     ???
2025-01-17T11:31:46.4911247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4911251Z 
2025-01-17T11:31:46.4911316Z >   ???
2025-01-17T11:31:46.4911432Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4911497Z E   
2025-01-17T11:31:46.4911614Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4911718Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4911783Z E          ...
2025-01-17T11:31:46.4911862Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4911986Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4912094Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4912165Z E          ...
2025-01-17T11:31:46.4912243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4912359Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4912457Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4912461Z 
2025-01-17T11:31:46.4912703Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4912971Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-17T11:31:46.4912976Z 
2025-01-17T11:31:46.4913097Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4913214Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4913307Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4913427Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4913556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4913640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4913711Z err_msg = None
2025-01-17T11:31:46.4913716Z 
2025-01-17T11:31:46.4913816Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4913893Z         if err_msg is None:
2025-01-17T11:31:46.4913979Z             if left.shape != right.shape:
2025-01-17T11:31:46.4914059Z                 raise_assert_detail(
2025-01-17T11:31:46.4914192Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4914261Z                 )
2025-01-17T11:31:46.4914322Z     
2025-01-17T11:31:46.4914389Z             diff = 0
2025-01-17T11:31:46.4914491Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4914572Z                 # count up differences
2025-01-17T11:31:46.4914861Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4915031Z                     diff += 1
2025-01-17T11:31:46.4915102Z     
2025-01-17T11:31:46.4915183Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4915310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4915467Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4915572Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4915635Z E           
2025-01-17T11:31:46.4915738Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4915988Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4916251Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4916255Z 
2025-01-17T11:31:46.4916548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4916552Z 
2025-01-17T11:31:46.4916710Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4916714Z 
2025-01-17T11:31:46.4916929Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9748c0>
2025-01-17T11:31:46.4917082Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4917156Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4917159Z 
2025-01-17T11:31:46.4917290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4917400Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4917477Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4917543Z         try:
2025-01-17T11:31:46.4917672Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4917743Z         except KeyError:
2025-01-17T11:31:46.4917874Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4917935Z     
2025-01-17T11:31:46.4918016Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4918100Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4918181Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4918304Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4918385Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4918466Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4918570Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4918640Z             else:
2025-01-17T11:31:46.4918735Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4918833Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4918837Z 
2025-01-17T11:31:46.4918955Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4919059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4919198Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4919261Z     ???
2025-01-17T11:31:46.4919362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4919366Z 
2025-01-17T11:31:46.4919428Z >   ???
2025-01-17T11:31:46.4919547Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4919610Z E   
2025-01-17T11:31:46.4919729Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4919835Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4920008Z E          ...
2025-01-17T11:31:46.4920160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4920336Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4920570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4920684Z E          ...
2025-01-17T11:31:46.4920820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4921017Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4921179Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4921185Z 
2025-01-17T11:31:46.4921318Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4921645Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-17T11:31:46.4921650Z 
2025-01-17T11:31:46.4921772Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4921894Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4921995Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4922119Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4922234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4922321Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4922391Z err_msg = None
2025-01-17T11:31:46.4922394Z 
2025-01-17T11:31:46.4922497Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4922749Z         if err_msg is None:
2025-01-17T11:31:46.4922856Z             if left.shape != right.shape:
2025-01-17T11:31:46.4922933Z                 raise_assert_detail(
2025-01-17T11:31:46.4923071Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4923135Z                 )
2025-01-17T11:31:46.4923205Z     
2025-01-17T11:31:46.4923270Z             diff = 0
2025-01-17T11:31:46.4923379Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4923462Z                 # count up differences
2025-01-17T11:31:46.4923622Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4923695Z                     diff += 1
2025-01-17T11:31:46.4923758Z     
2025-01-17T11:31:46.4923840Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4923963Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4924124Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4924227Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4924292Z E           
2025-01-17T11:31:46.4924392Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4924652Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4924912Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4924916Z 
2025-01-17T11:31:46.4925213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4925218Z 
2025-01-17T11:31:46.4925376Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4925383Z 
2025-01-17T11:31:46.4925594Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e974980>
2025-01-17T11:31:46.4925988Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4926062Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4926066Z 
2025-01-17T11:31:46.4926194Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4926303Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4926379Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4926446Z         try:
2025-01-17T11:31:46.4926583Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4926662Z         except KeyError:
2025-01-17T11:31:46.4926794Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4926860Z     
2025-01-17T11:31:46.4926939Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4927027Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4927109Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4927246Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4927331Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4927420Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4927528Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4927598Z             else:
2025-01-17T11:31:46.4927685Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4927788Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4927792Z 
2025-01-17T11:31:46.4927909Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4928023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4928163Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4928226Z     ???
2025-01-17T11:31:46.4928333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4928337Z 
2025-01-17T11:31:46.4928400Z >   ???
2025-01-17T11:31:46.4928521Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4928590Z E   
2025-01-17T11:31:46.4928717Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4928819Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4928888Z E          ...
2025-01-17T11:31:46.4928970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4929097Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4929206Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4929274Z E          ...
2025-01-17T11:31:46.4929353Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4929471Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4929572Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4929575Z 
2025-01-17T11:31:46.4929662Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4929867Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-17T11:31:46.4929876Z 
2025-01-17T11:31:46.4930006Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4930131Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4930225Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4930352Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4930472Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4930558Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4930632Z err_msg = None
2025-01-17T11:31:46.4930636Z 
2025-01-17T11:31:46.4930740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4930817Z         if err_msg is None:
2025-01-17T11:31:46.4930905Z             if left.shape != right.shape:
2025-01-17T11:31:46.4931070Z                 raise_assert_detail(
2025-01-17T11:31:46.4931277Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4931345Z                 )
2025-01-17T11:31:46.4931409Z     
2025-01-17T11:31:46.4931475Z             diff = 0
2025-01-17T11:31:46.4931582Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4931662Z                 # count up differences
2025-01-17T11:31:46.4931828Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4931898Z                     diff += 1
2025-01-17T11:31:46.4931967Z     
2025-01-17T11:31:46.4932047Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4932177Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4932337Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4932445Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4932515Z E           
2025-01-17T11:31:46.4932733Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4932991Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4933247Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4933251Z 
2025-01-17T11:31:46.4933547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4933561Z 
2025-01-17T11:31:46.4933729Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4933733Z 
2025-01-17T11:31:46.4933948Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e974b30>
2025-01-17T11:31:46.4934109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4934178Z attr = 'j_blues'
2025-01-17T11:31:46.4934182Z 
2025-01-17T11:31:46.4934313Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4934421Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4934501Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4934567Z         try:
2025-01-17T11:31:46.4934702Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4934774Z         except KeyError:
2025-01-17T11:31:46.4934905Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4934967Z     
2025-01-17T11:31:46.4935048Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4935137Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4935225Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4935348Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4935430Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4935513Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4935615Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4935684Z             else:
2025-01-17T11:31:46.4935770Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4935872Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4935877Z 
2025-01-17T11:31:46.4935994Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4936103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4936240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4936429Z     ???
2025-01-17T11:31:46.4936687Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4936698Z 
2025-01-17T11:31:46.4936823Z >   ???
2025-01-17T11:31:46.4937037Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4937145Z E   
2025-01-17T11:31:46.4937345Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4937520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4937627Z E          ...
2025-01-17T11:31:46.4937766Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4937938Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4938048Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4938114Z E          ...
2025-01-17T11:31:46.4938195Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4938309Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4938415Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4938422Z 
2025-01-17T11:31:46.4938511Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4938728Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-17T11:31:46.4938736Z 
2025-01-17T11:31:46.4938857Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4938980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4939071Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4939196Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4939313Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4939398Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4939470Z err_msg = None
2025-01-17T11:31:46.4939478Z 
2025-01-17T11:31:46.4939582Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4939664Z         if err_msg is None:
2025-01-17T11:31:46.4939752Z             if left.shape != right.shape:
2025-01-17T11:31:46.4939833Z                 raise_assert_detail(
2025-01-17T11:31:46.4939968Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4940035Z                 )
2025-01-17T11:31:46.4940097Z     
2025-01-17T11:31:46.4940166Z             diff = 0
2025-01-17T11:31:46.4940267Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4940349Z                 # count up differences
2025-01-17T11:31:46.4940512Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4940587Z                     diff += 1
2025-01-17T11:31:46.4940650Z     
2025-01-17T11:31:46.4940737Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4940866Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4941043Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4941148Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4941213Z E           
2025-01-17T11:31:46.4941321Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4941576Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4941834Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4941932Z 
2025-01-17T11:31:46.4942307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4942311Z 
2025-01-17T11:31:46.4942477Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4942481Z 
2025-01-17T11:31:46.4942811Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975910>
2025-01-17T11:31:46.4942967Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4943040Z attr = 'lines'
2025-01-17T11:31:46.4943044Z 
2025-01-17T11:31:46.4943174Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4943286Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4943363Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4943430Z         try:
2025-01-17T11:31:46.4943562Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4943645Z         except KeyError:
2025-01-17T11:31:46.4943779Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4943846Z     
2025-01-17T11:31:46.4943925Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4944009Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4944093Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4944217Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4944298Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4944379Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4944485Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4944550Z             else:
2025-01-17T11:31:46.4944639Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4944738Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4944742Z 
2025-01-17T11:31:46.4944861Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4944973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4945111Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4945174Z     ???
2025-01-17T11:31:46.4945277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4945281Z 
2025-01-17T11:31:46.4945343Z >   ???
2025-01-17T11:31:46.4945462Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4945524Z E   
2025-01-17T11:31:46.4945645Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4945748Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4945815Z E          ...
2025-01-17T11:31:46.4945895Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4946014Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4946119Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4946188Z E          ...
2025-01-17T11:31:46.4946274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4946392Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4946491Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4946495Z 
2025-01-17T11:31:46.4946575Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4946853Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-17T11:31:46.4946858Z 
2025-01-17T11:31:46.4947069Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9759d0>
2025-01-17T11:31:46.4947233Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4947312Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4947316Z 
2025-01-17T11:31:46.4947445Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4947551Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4947759Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4947827Z         try:
2025-01-17T11:31:46.4948060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4948136Z         except KeyError:
2025-01-17T11:31:46.4948268Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4948330Z     
2025-01-17T11:31:46.4948411Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4948496Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4948578Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4948700Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4948782Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4948864Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4948964Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4948974Z 
2025-01-17T11:31:46.4949094Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4949206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4949218Z 
2025-01-17T11:31:46.4949347Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4949425Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4949531Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4949603Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4949736Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4949811Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4949911Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4949982Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4950057Z err_msg = None
2025-01-17T11:31:46.4950061Z 
2025-01-17T11:31:46.4950161Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4950242Z         if err_msg is None:
2025-01-17T11:31:46.4950328Z             if left.shape != right.shape:
2025-01-17T11:31:46.4950412Z                 raise_assert_detail(
2025-01-17T11:31:46.4950546Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4950613Z                 )
2025-01-17T11:31:46.4950676Z     
2025-01-17T11:31:46.4950746Z             diff = 0
2025-01-17T11:31:46.4950848Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4950930Z                 # count up differences
2025-01-17T11:31:46.4951090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4951166Z                     diff += 1
2025-01-17T11:31:46.4951229Z     
2025-01-17T11:31:46.4951308Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4951437Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4951596Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4951706Z E           AssertionError: Series are different
2025-01-17T11:31:46.4951771Z E           
2025-01-17T11:31:46.4951868Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4952229Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4952651Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4953201Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4953207Z 
2025-01-17T11:31:46.4953507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4953780Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-17T11:31:46.4953784Z 
2025-01-17T11:31:46.4953998Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975a90>
2025-01-17T11:31:46.4954158Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4954262Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4954269Z 
2025-01-17T11:31:46.4954512Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4954704Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4954836Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4954950Z         try:
2025-01-17T11:31:46.4955176Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4955302Z         except KeyError:
2025-01-17T11:31:46.4955525Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4955631Z     
2025-01-17T11:31:46.4955769Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4955914Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4956056Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4956266Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4956398Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4956549Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4956725Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4956732Z 
2025-01-17T11:31:46.4956934Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4957113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4957119Z 
2025-01-17T11:31:46.4957341Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4957476Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4957647Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4957769Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4957994Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4958120Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4958293Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4958421Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4958547Z err_msg = None
2025-01-17T11:31:46.4958554Z 
2025-01-17T11:31:46.4958721Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4958847Z         if err_msg is None:
2025-01-17T11:31:46.4958993Z             if left.shape != right.shape:
2025-01-17T11:31:46.4959127Z                 raise_assert_detail(
2025-01-17T11:31:46.4959355Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4959470Z                 )
2025-01-17T11:31:46.4959579Z     
2025-01-17T11:31:46.4959697Z             diff = 0
2025-01-17T11:31:46.4959878Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4959976Z                 # count up differences
2025-01-17T11:31:46.4960140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4960211Z                     diff += 1
2025-01-17T11:31:46.4960390Z     
2025-01-17T11:31:46.4960470Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4960694Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4960859Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4960973Z E           AssertionError: Series are different
2025-01-17T11:31:46.4961044Z E           
2025-01-17T11:31:46.4961148Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4961510Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4961891Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4962267Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4962272Z 
2025-01-17T11:31:46.4962758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4962989Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-17T11:31:46.4962994Z 
2025-01-17T11:31:46.4963120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4963249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4963341Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4963466Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4963583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4963672Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4963741Z err_msg = None
2025-01-17T11:31:46.4963745Z 
2025-01-17T11:31:46.4963855Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4963929Z         if err_msg is None:
2025-01-17T11:31:46.4964026Z             if left.shape != right.shape:
2025-01-17T11:31:46.4964103Z                 raise_assert_detail(
2025-01-17T11:31:46.4964249Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4964314Z                 )
2025-01-17T11:31:46.4964381Z     
2025-01-17T11:31:46.4964451Z             diff = 0
2025-01-17T11:31:46.4964562Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4964642Z                 # count up differences
2025-01-17T11:31:46.4964799Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4964874Z                     diff += 1
2025-01-17T11:31:46.4964937Z     
2025-01-17T11:31:46.4965019Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4965146Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4965310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4965417Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4965616Z E           
2025-01-17T11:31:46.4965817Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4966078Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4966339Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4966346Z 
2025-01-17T11:31:46.4966640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4966650Z 
2025-01-17T11:31:46.4966823Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4966827Z 
2025-01-17T11:31:46.4967045Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975d00>
2025-01-17T11:31:46.4967242Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>, attr = 'nu'
2025-01-17T11:31:46.4967246Z 
2025-01-17T11:31:46.4967377Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4967489Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4967568Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4967634Z         try:
2025-01-17T11:31:46.4967770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4967846Z         except KeyError:
2025-01-17T11:31:46.4967981Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4968044Z     
2025-01-17T11:31:46.4968133Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4968219Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4968306Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4968431Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4968513Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4968596Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4968699Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4968703Z 
2025-01-17T11:31:46.4968819Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4968926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4969066Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4969133Z     ???
2025-01-17T11:31:46.4969235Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4969239Z 
2025-01-17T11:31:46.4969305Z >   ???
2025-01-17T11:31:46.4969430Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4969502Z E   
2025-01-17T11:31:46.4969621Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4969727Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4969795Z E          ...
2025-01-17T11:31:46.4969877Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4970001Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4970286Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4970393Z E          ...
2025-01-17T11:31:46.4970516Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4970713Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4970880Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4970887Z 
2025-01-17T11:31:46.4970980Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4971225Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-17T11:31:46.4971329Z 
2025-01-17T11:31:46.4971531Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4971657Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4971748Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4971942Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4972166Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4972316Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4972435Z err_msg = None
2025-01-17T11:31:46.4972442Z 
2025-01-17T11:31:46.4972742Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4972872Z         if err_msg is None:
2025-01-17T11:31:46.4973015Z             if left.shape != right.shape:
2025-01-17T11:31:46.4973160Z                 raise_assert_detail(
2025-01-17T11:31:46.4973393Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4973511Z                 )
2025-01-17T11:31:46.4973615Z     
2025-01-17T11:31:46.4973735Z             diff = 0
2025-01-17T11:31:46.4973907Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4974041Z                 # count up differences
2025-01-17T11:31:46.4974319Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4974439Z                     diff += 1
2025-01-17T11:31:46.4974548Z     
2025-01-17T11:31:46.4974681Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4974900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4975178Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4975361Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4975439Z E           
2025-01-17T11:31:46.4975551Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4975805Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4976063Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4976067Z 
2025-01-17T11:31:46.4976367Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4976374Z 
2025-01-17T11:31:46.4976539Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4976543Z 
2025-01-17T11:31:46.4976761Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975dc0>
2025-01-17T11:31:46.4976917Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4976995Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4976999Z 
2025-01-17T11:31:46.4977127Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4977239Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4977315Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4977381Z         try:
2025-01-17T11:31:46.4977517Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4977591Z         except KeyError:
2025-01-17T11:31:46.4977724Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4977944Z     
2025-01-17T11:31:46.4978028Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4978214Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4978301Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4978426Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4978509Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4978596Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4978702Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4978707Z 
2025-01-17T11:31:46.4978823Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4978930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4979069Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4979136Z     ???
2025-01-17T11:31:46.4979238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4979242Z 
2025-01-17T11:31:46.4979317Z >   ???
2025-01-17T11:31:46.4979439Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4979507Z E   
2025-01-17T11:31:46.4979626Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4979728Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4979795Z E          ...
2025-01-17T11:31:46.4979875Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4979997Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4980102Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4980169Z E          ...
2025-01-17T11:31:46.4980247Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4980366Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4980462Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4980466Z 
2025-01-17T11:31:46.4980552Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4980765Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-17T11:31:46.4980773Z 
2025-01-17T11:31:46.4980892Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4981013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4981104Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4981227Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4981346Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4981430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4981501Z err_msg = None
2025-01-17T11:31:46.4981505Z 
2025-01-17T11:31:46.4981606Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4981681Z         if err_msg is None:
2025-01-17T11:31:46.4981771Z             if left.shape != right.shape:
2025-01-17T11:31:46.4981855Z                 raise_assert_detail(
2025-01-17T11:31:46.4981988Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4982055Z                 )
2025-01-17T11:31:46.4982120Z     
2025-01-17T11:31:46.4982189Z             diff = 0
2025-01-17T11:31:46.4982294Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4982372Z                 # count up differences
2025-01-17T11:31:46.4982726Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4982815Z                     diff += 1
2025-01-17T11:31:46.4982886Z     
2025-01-17T11:31:46.4982969Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4983101Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4983258Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4983517Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4983680Z E           
2025-01-17T11:31:46.4983789Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4984040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4984300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4984304Z 
2025-01-17T11:31:46.4984598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4984610Z 
2025-01-17T11:31:46.4984773Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4984777Z 
2025-01-17T11:31:46.4984994Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975eb0>
2025-01-17T11:31:46.4985183Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>, attr = 'f_lu'
2025-01-17T11:31:46.4985187Z 
2025-01-17T11:31:46.4985318Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4985423Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4985501Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4985567Z         try:
2025-01-17T11:31:46.4985697Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4985774Z         except KeyError:
2025-01-17T11:31:46.4985904Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4985970Z     
2025-01-17T11:31:46.4986055Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4986149Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4986230Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4986363Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4986442Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4986532Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4986635Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4986639Z 
2025-01-17T11:31:46.4986762Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4986867Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4987011Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4987076Z     ???
2025-01-17T11:31:46.4987179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4987186Z 
2025-01-17T11:31:46.4987259Z >   ???
2025-01-17T11:31:46.4987384Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4987451Z E   
2025-01-17T11:31:46.4987579Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4987684Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4987750Z E          ...
2025-01-17T11:31:46.4987837Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4987957Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4988065Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4988130Z E          ...
2025-01-17T11:31:46.4988211Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4988328Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4988427Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4988431Z 
2025-01-17T11:31:46.4988515Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4988844Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-17T11:31:46.4988920Z 
2025-01-17T11:31:46.4989042Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4989166Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4989263Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4989496Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4989707Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4989856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4989970Z err_msg = None
2025-01-17T11:31:46.4989976Z 
2025-01-17T11:31:46.4990148Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4990267Z         if err_msg is None:
2025-01-17T11:31:46.4990419Z             if left.shape != right.shape:
2025-01-17T11:31:46.4990560Z                 raise_assert_detail(
2025-01-17T11:31:46.4990716Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4990783Z                 )
2025-01-17T11:31:46.4990846Z     
2025-01-17T11:31:46.4990912Z             diff = 0
2025-01-17T11:31:46.4991018Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4991104Z                 # count up differences
2025-01-17T11:31:46.4991266Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4991340Z                     diff += 1
2025-01-17T11:31:46.4991402Z     
2025-01-17T11:31:46.4991488Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4991617Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4991782Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4991893Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4991964Z E           
2025-01-17T11:31:46.4992069Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4992329Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4992772Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4992783Z 
2025-01-17T11:31:46.4993090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4993100Z 
2025-01-17T11:31:46.4993275Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4993279Z 
2025-01-17T11:31:46.4993496Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e976630>
2025-01-17T11:31:46.4993657Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4993734Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4993738Z 
2025-01-17T11:31:46.4993871Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4993979Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4994054Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4994121Z         try:
2025-01-17T11:31:46.4994255Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4994332Z         except KeyError:
2025-01-17T11:31:46.4994461Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4994666Z     
2025-01-17T11:31:46.4994748Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4994941Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4995025Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4995153Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4995230Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4995324Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4995428Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4995501Z             else:
2025-01-17T11:31:46.4995588Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4995694Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4995698Z 
2025-01-17T11:31:46.4995815Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4995926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4996065Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4996144Z     ???
2025-01-17T11:31:46.4996256Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4996260Z 
2025-01-17T11:31:46.4996322Z >   ???
2025-01-17T11:31:46.4996445Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4996509Z E   
2025-01-17T11:31:46.4996630Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4996734Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4996803Z E          ...
2025-01-17T11:31:46.4996885Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4997011Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4997117Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4997188Z E          ...
2025-01-17T11:31:46.4997266Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4997398Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4997497Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4997500Z 
2025-01-17T11:31:46.4997584Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4997822Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-17T11:31:46.4997826Z 
2025-01-17T11:31:46.4997949Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4998072Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4998164Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4998290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4998412Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4998497Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4998572Z err_msg = None
2025-01-17T11:31:46.4998576Z 
2025-01-17T11:31:46.4998683Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4998760Z         if err_msg is None:
2025-01-17T11:31:46.4998847Z             if left.shape != right.shape:
2025-01-17T11:31:46.4998928Z                 raise_assert_detail(
2025-01-17T11:31:46.4999063Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4999127Z                 )
2025-01-17T11:31:46.4999191Z     
2025-01-17T11:31:46.4999257Z             diff = 0
2025-01-17T11:31:46.4999365Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4999445Z                 # count up differences
2025-01-17T11:31:46.4999609Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4999679Z                     diff += 1
2025-01-17T11:31:46.4999745Z     
2025-01-17T11:31:46.4999826Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5000124Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5000287Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5000395Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5000460Z E           
2025-01-17T11:31:46.5000565Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5000820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5001088Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5001097Z 
2025-01-17T11:31:46.5001391Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5001395Z 
2025-01-17T11:31:46.5001558Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5001562Z 
2025-01-17T11:31:46.5001777Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9766f0>
2025-01-17T11:31:46.5001936Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.5002008Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5002011Z 
2025-01-17T11:31:46.5002141Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5002249Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5002328Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5002394Z         try:
2025-01-17T11:31:46.5002761Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5002854Z         except KeyError:
2025-01-17T11:31:46.5002988Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5003050Z     
2025-01-17T11:31:46.5003133Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5003278Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5003427Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5003627Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5003772Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5003915Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5004095Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5004205Z             else:
2025-01-17T11:31:46.5004350Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5004531Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5004551Z 
2025-01-17T11:31:46.5004694Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5004815Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5004956Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5005026Z     ???
2025-01-17T11:31:46.5005129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5005133Z 
2025-01-17T11:31:46.5005205Z >   ???
2025-01-17T11:31:46.5005324Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5005393Z E   
2025-01-17T11:31:46.5005514Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5005621Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5005688Z E          ...
2025-01-17T11:31:46.5005773Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5005900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5006169Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5006335Z E          ...
2025-01-17T11:31:46.5006424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5006542Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5006644Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5006648Z 
2025-01-17T11:31:46.5006733Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5006961Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-17T11:31:46.5006965Z 
2025-01-17T11:31:46.5007086Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5007214Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5007304Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5007434Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5007668Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5007831Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5007944Z err_msg = None
2025-01-17T11:31:46.5007950Z 
2025-01-17T11:31:46.5008125Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5008244Z         if err_msg is None:
2025-01-17T11:31:46.5008385Z             if left.shape != right.shape:
2025-01-17T11:31:46.5008515Z                 raise_assert_detail(
2025-01-17T11:31:46.5008748Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5008827Z                 )
2025-01-17T11:31:46.5008891Z     
2025-01-17T11:31:46.5008966Z             diff = 0
2025-01-17T11:31:46.5009071Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5009157Z                 # count up differences
2025-01-17T11:31:46.5009325Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5009404Z                     diff += 1
2025-01-17T11:31:46.5009468Z     
2025-01-17T11:31:46.5009553Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5009682Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5009847Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5009956Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5010024Z E           
2025-01-17T11:31:46.5010127Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5010386Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5010650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5010655Z 
2025-01-17T11:31:46.5010953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5010957Z 
2025-01-17T11:31:46.5011122Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5011126Z 
2025-01-17T11:31:46.5011344Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e976870>
2025-01-17T11:31:46.5011500Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.5011574Z attr = 'j_blues'
2025-01-17T11:31:46.5011578Z 
2025-01-17T11:31:46.5011707Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5012002Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5012083Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5012150Z         try:
2025-01-17T11:31:46.5012284Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5012361Z         except KeyError:
2025-01-17T11:31:46.5012491Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5012670Z     
2025-01-17T11:31:46.5012753Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5012845Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5012925Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5013051Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5013135Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5013217Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5013325Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5013399Z             else:
2025-01-17T11:31:46.5013494Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5013595Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5013599Z 
2025-01-17T11:31:46.5013715Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5013819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5013960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5014024Z     ???
2025-01-17T11:31:46.5014128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5014131Z 
2025-01-17T11:31:46.5014195Z >   ???
2025-01-17T11:31:46.5014319Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5014381Z E   
2025-01-17T11:31:46.5014502Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5014604Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5014678Z E          ...
2025-01-17T11:31:46.5014762Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5014883Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5014987Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5015051Z E          ...
2025-01-17T11:31:46.5015132Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5015249Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5015351Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5015355Z 
2025-01-17T11:31:46.5015439Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5015642Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-17T11:31:46.5015646Z 
2025-01-17T11:31:46.5015765Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5015894Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5015993Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5016124Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5016241Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5016331Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5016401Z err_msg = None
2025-01-17T11:31:46.5016404Z 
2025-01-17T11:31:46.5016509Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5016583Z         if err_msg is None:
2025-01-17T11:31:46.5016672Z             if left.shape != right.shape:
2025-01-17T11:31:46.5016750Z                 raise_assert_detail(
2025-01-17T11:31:46.5016887Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5016951Z                 )
2025-01-17T11:31:46.5017139Z     
2025-01-17T11:31:46.5017214Z             diff = 0
2025-01-17T11:31:46.5017417Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5017498Z                 # count up differences
2025-01-17T11:31:46.5017662Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5017731Z                     diff += 1
2025-01-17T11:31:46.5017799Z     
2025-01-17T11:31:46.5017880Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5018008Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5018172Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5018275Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5018344Z E           
2025-01-17T11:31:46.5018448Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5018709Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5018974Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5018978Z 
2025-01-17T11:31:46.5019271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5019275Z 
2025-01-17T11:31:46.5019438Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5019442Z 
2025-01-17T11:31:46.5019656Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977680>
2025-01-17T11:31:46.5019822Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5019890Z attr = 'lines'
2025-01-17T11:31:46.5019894Z 
2025-01-17T11:31:46.5020024Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5020131Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5020213Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5020278Z         try:
2025-01-17T11:31:46.5020412Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5020515Z         except KeyError:
2025-01-17T11:31:46.5020645Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5020712Z     
2025-01-17T11:31:46.5020792Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5020881Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5020960Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5021086Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5021171Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5021261Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5021364Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5021435Z             else:
2025-01-17T11:31:46.5021524Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5021629Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5021633Z 
2025-01-17T11:31:46.5021750Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5021860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5021998Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5022066Z     ???
2025-01-17T11:31:46.5022168Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5022171Z 
2025-01-17T11:31:46.5022238Z >   ???
2025-01-17T11:31:46.5022358Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5022511Z E   
2025-01-17T11:31:46.5022851Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5022960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5023029Z E          ...
2025-01-17T11:31:46.5023109Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5023233Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5023337Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5023404Z E          ...
2025-01-17T11:31:46.5023481Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5023600Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5023696Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5023700Z 
2025-01-17T11:31:46.5023783Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5024021Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-17T11:31:46.5024031Z 
2025-01-17T11:31:46.5024249Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977740>
2025-01-17T11:31:46.5024404Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5024574Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5024581Z 
2025-01-17T11:31:46.5024809Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5024992Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5025117Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5025232Z         try:
2025-01-17T11:31:46.5025455Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5025584Z         except KeyError:
2025-01-17T11:31:46.5025759Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5025829Z     
2025-01-17T11:31:46.5025910Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5026000Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5026086Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5026214Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5026297Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5026379Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5026486Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5026490Z 
2025-01-17T11:31:46.5026605Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5026712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5026715Z 
2025-01-17T11:31:46.5026841Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5026924Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5027026Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5027104Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5027242Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5027325Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5027422Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5027498Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5027565Z err_msg = None
2025-01-17T11:31:46.5027569Z 
2025-01-17T11:31:46.5027672Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5027746Z         if err_msg is None:
2025-01-17T11:31:46.5027835Z             if left.shape != right.shape:
2025-01-17T11:31:46.5027914Z                 raise_assert_detail(
2025-01-17T11:31:46.5028056Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5028120Z                 )
2025-01-17T11:31:46.5028185Z     
2025-01-17T11:31:46.5028251Z             diff = 0
2025-01-17T11:31:46.5028359Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5028569Z                 # count up differences
2025-01-17T11:31:46.5028801Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5028879Z                     diff += 1
2025-01-17T11:31:46.5028942Z     
2025-01-17T11:31:46.5029024Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5029150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5029315Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5029409Z E           AssertionError: Series are different
2025-01-17T11:31:46.5029477Z E           
2025-01-17T11:31:46.5029571Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5029944Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5030274Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5030601Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5030610Z 
2025-01-17T11:31:46.5030911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5031148Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-17T11:31:46.5031152Z 
2025-01-17T11:31:46.5031367Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977800>
2025-01-17T11:31:46.5031522Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5031607Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5031611Z 
2025-01-17T11:31:46.5031742Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5031852Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5031929Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5031997Z         try:
2025-01-17T11:31:46.5032128Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5032205Z         except KeyError:
2025-01-17T11:31:46.5032342Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5032407Z     
2025-01-17T11:31:46.5032485Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5032690Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5032775Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5032899Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5032979Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5033061Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5033163Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5033168Z 
2025-01-17T11:31:46.5033281Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5033390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5033394Z 
2025-01-17T11:31:46.5033518Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5033720Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5033922Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5034000Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5034132Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5034211Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5034309Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5034382Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5034449Z err_msg = None
2025-01-17T11:31:46.5034453Z 
2025-01-17T11:31:46.5034554Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5034627Z         if err_msg is None:
2025-01-17T11:31:46.5034714Z             if left.shape != right.shape:
2025-01-17T11:31:46.5034793Z                 raise_assert_detail(
2025-01-17T11:31:46.5034930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5035000Z                 )
2025-01-17T11:31:46.5035069Z     
2025-01-17T11:31:46.5035136Z             diff = 0
2025-01-17T11:31:46.5035239Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5035321Z                 # count up differences
2025-01-17T11:31:46.5035483Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5035556Z                     diff += 1
2025-01-17T11:31:46.5035619Z     
2025-01-17T11:31:46.5035701Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5035827Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5035994Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5036089Z E           AssertionError: Series are different
2025-01-17T11:31:46.5036165Z E           
2025-01-17T11:31:46.5036260Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5036639Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5037010Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5037384Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5037392Z 
2025-01-17T11:31:46.5037694Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5037888Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-17T11:31:46.5037891Z 
2025-01-17T11:31:46.5038015Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5038135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5038233Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5038358Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5038641Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5038731Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5038805Z err_msg = None
2025-01-17T11:31:46.5038808Z 
2025-01-17T11:31:46.5038910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5038988Z         if err_msg is None:
2025-01-17T11:31:46.5039074Z             if left.shape != right.shape:
2025-01-17T11:31:46.5039157Z                 raise_assert_detail(
2025-01-17T11:31:46.5039292Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5039365Z                 )
2025-01-17T11:31:46.5039429Z     
2025-01-17T11:31:46.5039497Z             diff = 0
2025-01-17T11:31:46.5039606Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5039690Z                 # count up differences
2025-01-17T11:31:46.5039867Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5039938Z                     diff += 1
2025-01-17T11:31:46.5040011Z     
2025-01-17T11:31:46.5040092Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5040221Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5040383Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5040495Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5040561Z E           
2025-01-17T11:31:46.5040677Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5040932Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5041203Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5041207Z 
2025-01-17T11:31:46.5041499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5041503Z 
2025-01-17T11:31:46.5041670Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5041674Z 
2025-01-17T11:31:46.5041976Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977a40>
2025-01-17T11:31:46.5042327Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>, attr = 'nu'
2025-01-17T11:31:46.5042333Z 
2025-01-17T11:31:46.5050122Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5050382Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5050530Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5050640Z         try:
2025-01-17T11:31:46.5050878Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5051009Z         except KeyError:
2025-01-17T11:31:46.5051231Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5051341Z     
2025-01-17T11:31:46.5051474Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5051623Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5051759Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5051975Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5052105Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5052248Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5052422Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5052784Z 
2025-01-17T11:31:46.5053195Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5053329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5053491Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5053561Z     ???
2025-01-17T11:31:46.5053676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5053680Z 
2025-01-17T11:31:46.5053752Z >   ???
2025-01-17T11:31:46.5053883Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5053945Z E   
2025-01-17T11:31:46.5054071Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5054177Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5054247Z E          ...
2025-01-17T11:31:46.5054337Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5054462Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5054586Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5054659Z E          ...
2025-01-17T11:31:46.5054746Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5054867Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5054972Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5054976Z 
2025-01-17T11:31:46.5055061Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5055288Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-17T11:31:46.5055292Z 
2025-01-17T11:31:46.5055418Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5055551Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5055647Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5055778Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5055909Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5056000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5056071Z err_msg = None
2025-01-17T11:31:46.5056074Z 
2025-01-17T11:31:46.5056187Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5056264Z         if err_msg is None:
2025-01-17T11:31:46.5056358Z             if left.shape != right.shape:
2025-01-17T11:31:46.5056437Z                 raise_assert_detail(
2025-01-17T11:31:46.5056585Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5056649Z                 )
2025-01-17T11:31:46.5056718Z     
2025-01-17T11:31:46.5056784Z             diff = 0
2025-01-17T11:31:46.5056893Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5056980Z                 # count up differences
2025-01-17T11:31:46.5057155Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5057230Z                     diff += 1
2025-01-17T11:31:46.5057292Z     
2025-01-17T11:31:46.5057379Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5057511Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5057692Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5057800Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5057870Z E           
2025-01-17T11:31:46.5057973Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5058234Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5058672Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5058677Z 
2025-01-17T11:31:46.5059002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5059006Z 
2025-01-17T11:31:46.5059174Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5059178Z 
2025-01-17T11:31:46.5059394Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977b00>
2025-01-17T11:31:46.5059562Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5059641Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5059645Z 
2025-01-17T11:31:46.5059786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5059960Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5060101Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5060220Z         try:
2025-01-17T11:31:46.5060443Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5060571Z         except KeyError:
2025-01-17T11:31:46.5060789Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5060897Z     
2025-01-17T11:31:46.5061029Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5061181Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5061267Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5061398Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5061477Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5061560Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5061667Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5061677Z 
2025-01-17T11:31:46.5061805Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5061914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5062056Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5062121Z     ???
2025-01-17T11:31:46.5062226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5062230Z 
2025-01-17T11:31:46.5062296Z >   ???
2025-01-17T11:31:46.5062419Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5062481Z E   
2025-01-17T11:31:46.5062790Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5062905Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5062972Z E          ...
2025-01-17T11:31:46.5063057Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5063181Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5063298Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5063363Z E          ...
2025-01-17T11:31:46.5063444Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5063557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5063656Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5063660Z 
2025-01-17T11:31:46.5063743Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5063943Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-17T11:31:46.5063947Z 
2025-01-17T11:31:46.5064067Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5064191Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5064282Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5064552Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5064766Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5064860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5064929Z err_msg = None
2025-01-17T11:31:46.5064932Z 
2025-01-17T11:31:46.5065041Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5065116Z         if err_msg is None:
2025-01-17T11:31:46.5065204Z             if left.shape != right.shape:
2025-01-17T11:31:46.5065284Z                 raise_assert_detail(
2025-01-17T11:31:46.5065422Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5065492Z                 )
2025-01-17T11:31:46.5065555Z     
2025-01-17T11:31:46.5065627Z             diff = 0
2025-01-17T11:31:46.5065732Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5065816Z                 # count up differences
2025-01-17T11:31:46.5065991Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5066065Z                     diff += 1
2025-01-17T11:31:46.5066128Z     
2025-01-17T11:31:46.5066211Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5066337Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5066503Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5066607Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5066673Z E           
2025-01-17T11:31:46.5066775Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5067035Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5067297Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5067301Z 
2025-01-17T11:31:46.5067601Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5067605Z 
2025-01-17T11:31:46.5067766Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5067770Z 
2025-01-17T11:31:46.5067994Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977bc0>
2025-01-17T11:31:46.5068185Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>, attr = 'f_lu'
2025-01-17T11:31:46.5068188Z 
2025-01-17T11:31:46.5068324Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5068437Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5068519Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5068585Z         try:
2025-01-17T11:31:46.5068725Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5068800Z         except KeyError:
2025-01-17T11:31:46.5068934Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5068998Z     
2025-01-17T11:31:46.5069082Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5069168Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5069251Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5069379Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5069464Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5069546Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5069652Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5069745Z 
2025-01-17T11:31:46.5069937Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5070050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5070195Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5070261Z     ???
2025-01-17T11:31:46.5070366Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5070370Z 
2025-01-17T11:31:46.5070431Z >   ???
2025-01-17T11:31:46.5070555Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5070619Z E   
2025-01-17T11:31:46.5070741Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5070842Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5070912Z E          ...
2025-01-17T11:31:46.5070995Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5071118Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5071233Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5071306Z E          ...
2025-01-17T11:31:46.5071384Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5071503Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5071600Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5071604Z 
2025-01-17T11:31:46.5071690Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5071899Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-17T11:31:46.5071903Z 
2025-01-17T11:31:46.5072028Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5072154Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5072250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5072372Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5072504Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5072782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5072857Z err_msg = None
2025-01-17T11:31:46.5072862Z 
2025-01-17T11:31:46.5072969Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5073046Z         if err_msg is None:
2025-01-17T11:31:46.5073133Z             if left.shape != right.shape:
2025-01-17T11:31:46.5073209Z                 raise_assert_detail(
2025-01-17T11:31:46.5073348Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5073412Z                 )
2025-01-17T11:31:46.5073476Z     
2025-01-17T11:31:46.5073541Z             diff = 0
2025-01-17T11:31:46.5073647Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5073725Z                 # count up differences
2025-01-17T11:31:46.5073905Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5073974Z                     diff += 1
2025-01-17T11:31:46.5074039Z     
2025-01-17T11:31:46.5074120Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5074254Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5074414Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5074522Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5074588Z E           
2025-01-17T11:31:46.5074693Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5074951Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5075477Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5075482Z 
2025-01-17T11:31:46.5075780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5075785Z 
2025-01-17T11:31:46.5075951Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5075955Z 
2025-01-17T11:31:46.5076168Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e848380>
2025-01-17T11:31:46.5076323Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5076396Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5076405Z 
2025-01-17T11:31:46.5076537Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5076648Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5076727Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5076791Z         try:
2025-01-17T11:31:46.5076926Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5076999Z         except KeyError:
2025-01-17T11:31:46.5077131Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5077193Z     
2025-01-17T11:31:46.5077276Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5077359Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5077476Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5077711Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5077847Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5077996Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5078166Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5078289Z             else:
2025-01-17T11:31:46.5078438Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5078609Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5078615Z 
2025-01-17T11:31:46.5078817Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5078938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5079076Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5079147Z     ???
2025-01-17T11:31:46.5079248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5079252Z 
2025-01-17T11:31:46.5079320Z >   ???
2025-01-17T11:31:46.5079440Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5079507Z E   
2025-01-17T11:31:46.5079625Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5079731Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5079801Z E          ...
2025-01-17T11:31:46.5079890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5080010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5080118Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5080183Z E          ...
2025-01-17T11:31:46.5080269Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5080385Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5080481Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5080488Z 
2025-01-17T11:31:46.5080569Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5080764Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-17T11:31:46.5080771Z 
2025-01-17T11:31:46.5080890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5081187Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5081283Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5081407Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5081526Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5081613Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5081684Z err_msg = None
2025-01-17T11:31:46.5081688Z 
2025-01-17T11:31:46.5081788Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5081865Z         if err_msg is None:
2025-01-17T11:31:46.5081951Z             if left.shape != right.shape:
2025-01-17T11:31:46.5082031Z                 raise_assert_detail(
2025-01-17T11:31:46.5082165Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5082232Z                 )
2025-01-17T11:31:46.5082300Z     
2025-01-17T11:31:46.5082370Z             diff = 0
2025-01-17T11:31:46.5082475Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5082729Z                 # count up differences
2025-01-17T11:31:46.5082922Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5082997Z                     diff += 1
2025-01-17T11:31:46.5083060Z     
2025-01-17T11:31:46.5083142Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5083268Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5083428Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5083535Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5083599Z E           
2025-01-17T11:31:46.5083704Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5083962Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5084224Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5084229Z 
2025-01-17T11:31:46.5084526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5084530Z 
2025-01-17T11:31:46.5084694Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5084698Z 
2025-01-17T11:31:46.5084917Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8485c0>
2025-01-17T11:31:46.5085078Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5085150Z attr = 'j_blues'
2025-01-17T11:31:46.5085154Z 
2025-01-17T11:31:46.5085283Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5085393Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5085467Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5085534Z         try:
2025-01-17T11:31:46.5085665Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5085744Z         except KeyError:
2025-01-17T11:31:46.5085872Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5085937Z     
2025-01-17T11:31:46.5086017Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5086103Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5086187Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5086328Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5086638Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5086723Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5086833Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5086898Z             else:
2025-01-17T11:31:46.5086988Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5087089Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5087093Z 
2025-01-17T11:31:46.5087212Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5087320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5087463Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5087526Z     ???
2025-01-17T11:31:46.5087628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5087634Z 
2025-01-17T11:31:46.5087705Z >   ???
2025-01-17T11:31:46.5087829Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5087892Z E   
2025-01-17T11:31:46.5088019Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5088126Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5088192Z E          ...
2025-01-17T11:31:46.5088274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5088395Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5088505Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5088569Z E          ...
2025-01-17T11:31:46.5088649Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5088765Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5088864Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5088868Z 
2025-01-17T11:31:46.5088949Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5089149Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-17T11:31:46.5089161Z 
2025-01-17T11:31:46.5089285Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5089412Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5089501Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5089627Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5089745Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5089832Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5089899Z err_msg = None
2025-01-17T11:31:46.5089903Z 
2025-01-17T11:31:46.5090009Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5090084Z         if err_msg is None:
2025-01-17T11:31:46.5090178Z             if left.shape != right.shape:
2025-01-17T11:31:46.5090260Z                 raise_assert_detail(
2025-01-17T11:31:46.5090401Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5090470Z                 )
2025-01-17T11:31:46.5090532Z     
2025-01-17T11:31:46.5090599Z             diff = 0
2025-01-17T11:31:46.5090705Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5090790Z                 # count up differences
2025-01-17T11:31:46.5090955Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5091027Z                     diff += 1
2025-01-17T11:31:46.5091089Z     
2025-01-17T11:31:46.5091173Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5091299Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5091464Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5091568Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5091724Z E           
2025-01-17T11:31:46.5091899Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5092161Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5092416Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5092421Z 
2025-01-17T11:31:46.5092828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5092839Z 
2025-01-17T11:31:46.5093012Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5093016Z 
2025-01-17T11:31:46.5093232Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849340>
2025-01-17T11:31:46.5093389Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5093460Z attr = 'lines'
2025-01-17T11:31:46.5093464Z 
2025-01-17T11:31:46.5093591Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5093703Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5093778Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5093845Z         try:
2025-01-17T11:31:46.5093977Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5094052Z         except KeyError:
2025-01-17T11:31:46.5094182Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5094247Z     
2025-01-17T11:31:46.5094331Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5094507Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5094654Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5094867Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5094995Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5095136Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5095303Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5095410Z             else:
2025-01-17T11:31:46.5095559Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5095708Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5095712Z 
2025-01-17T11:31:46.5095838Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5095951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5096093Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5096167Z     ???
2025-01-17T11:31:46.5096281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5096285Z 
2025-01-17T11:31:46.5096348Z >   ???
2025-01-17T11:31:46.5096472Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5096535Z E   
2025-01-17T11:31:46.5096665Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5096768Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5096838Z E          ...
2025-01-17T11:31:46.5096921Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5097045Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5097151Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5097219Z E          ...
2025-01-17T11:31:46.5097298Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5097416Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5097667Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5097767Z 
2025-01-17T11:31:46.5097857Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5098112Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-17T11:31:46.5098116Z 
2025-01-17T11:31:46.5098334Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849400>
2025-01-17T11:31:46.5098488Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5098572Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5098576Z 
2025-01-17T11:31:46.5098704Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5098810Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5098889Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5098955Z         try:
2025-01-17T11:31:46.5099089Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5099167Z         except KeyError:
2025-01-17T11:31:46.5099305Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5099369Z     
2025-01-17T11:31:46.5099455Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5099543Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5099627Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5099752Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5099835Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5099915Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5100019Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5100023Z 
2025-01-17T11:31:46.5100139Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5100249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5100252Z 
2025-01-17T11:31:46.5100382Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5100469Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5100577Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5100652Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5100782Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5100859Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5100956Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5101030Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5101099Z err_msg = None
2025-01-17T11:31:46.5101102Z 
2025-01-17T11:31:46.5101202Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5101277Z         if err_msg is None:
2025-01-17T11:31:46.5101362Z             if left.shape != right.shape:
2025-01-17T11:31:46.5101445Z                 raise_assert_detail(
2025-01-17T11:31:46.5101578Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5101657Z                 )
2025-01-17T11:31:46.5101718Z     
2025-01-17T11:31:46.5101786Z             diff = 0
2025-01-17T11:31:46.5101889Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5101970Z                 # count up differences
2025-01-17T11:31:46.5102131Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5102204Z                     diff += 1
2025-01-17T11:31:46.5102265Z     
2025-01-17T11:31:46.5102345Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5102472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5102750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5102848Z E           AssertionError: Series are different
2025-01-17T11:31:46.5102916Z E           
2025-01-17T11:31:46.5103010Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5103599Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5103928Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5104259Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5104269Z 
2025-01-17T11:31:46.5104571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5104817Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-17T11:31:46.5104822Z 
2025-01-17T11:31:46.5105036Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8494c0>
2025-01-17T11:31:46.5105195Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5105277Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5105281Z 
2025-01-17T11:31:46.5105413Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5105518Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5105601Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5105671Z         try:
2025-01-17T11:31:46.5105804Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5105877Z         except KeyError:
2025-01-17T11:31:46.5106006Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5106068Z     
2025-01-17T11:31:46.5106150Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5106233Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5106315Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5106439Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5106518Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5106599Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5106702Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5106706Z 
2025-01-17T11:31:46.5106822Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5106943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5106947Z 
2025-01-17T11:31:46.5107076Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5107156Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5107257Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5107333Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5107462Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5107539Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5107635Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5107707Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5107779Z err_msg = None
2025-01-17T11:31:46.5107782Z 
2025-01-17T11:31:46.5107880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5108050Z         if err_msg is None:
2025-01-17T11:31:46.5108205Z             if left.shape != right.shape:
2025-01-17T11:31:46.5108286Z                 raise_assert_detail(
2025-01-17T11:31:46.5108417Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5108484Z                 )
2025-01-17T11:31:46.5108545Z     
2025-01-17T11:31:46.5108613Z             diff = 0
2025-01-17T11:31:46.5108715Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5108795Z                 # count up differences
2025-01-17T11:31:46.5108954Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5109026Z                     diff += 1
2025-01-17T11:31:46.5109087Z     
2025-01-17T11:31:46.5109167Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5109292Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5109459Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5109557Z E           AssertionError: Series are different
2025-01-17T11:31:46.5109621Z E           
2025-01-17T11:31:46.5109717Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5110081Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5110450Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5110824Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5110829Z 
2025-01-17T11:31:46.5111122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5111324Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-17T11:31:46.5111329Z 
2025-01-17T11:31:46.5111448Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5111580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5111671Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5111807Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5112022Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5112185Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5112300Z err_msg = None
2025-01-17T11:31:46.5112307Z 
2025-01-17T11:31:46.5112477Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5112724Z         if err_msg is None:
2025-01-17T11:31:46.5112874Z             if left.shape != right.shape:
2025-01-17T11:31:46.5113000Z                 raise_assert_detail(
2025-01-17T11:31:46.5113235Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5113448Z                 )
2025-01-17T11:31:46.5113514Z     
2025-01-17T11:31:46.5113713Z             diff = 0
2025-01-17T11:31:46.5113826Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5113904Z                 # count up differences
2025-01-17T11:31:46.5114068Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5114137Z                     diff += 1
2025-01-17T11:31:46.5114201Z     
2025-01-17T11:31:46.5114282Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5114408Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5114569Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5114672Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5114739Z E           
2025-01-17T11:31:46.5114842Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5115102Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5115364Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5115369Z 
2025-01-17T11:31:46.5115660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5115664Z 
2025-01-17T11:31:46.5115825Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5115829Z 
2025-01-17T11:31:46.5116045Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849700>
2025-01-17T11:31:46.5116238Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>, attr = 'nu'
2025-01-17T11:31:46.5116242Z 
2025-01-17T11:31:46.5116370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5116479Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5116558Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5116624Z         try:
2025-01-17T11:31:46.5116760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5116835Z         except KeyError:
2025-01-17T11:31:46.5116967Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5117032Z     
2025-01-17T11:31:46.5117112Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5117196Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5117280Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5117407Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5117499Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5117581Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5117688Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5117692Z 
2025-01-17T11:31:46.5117808Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5117917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5118058Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5118125Z     ???
2025-01-17T11:31:46.5118227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5118230Z 
2025-01-17T11:31:46.5118297Z >   ???
2025-01-17T11:31:46.5118416Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5118482Z E   
2025-01-17T11:31:46.5118601Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5118797Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5118936Z E          ...
2025-01-17T11:31:46.5119022Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5119142Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5119251Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5119317Z E          ...
2025-01-17T11:31:46.5119396Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5119515Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5119612Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5119615Z 
2025-01-17T11:31:46.5119700Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5119918Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-17T11:31:46.5119922Z 
2025-01-17T11:31:46.5120047Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5120179Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5120272Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5120396Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5120549Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5120635Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5120707Z err_msg = None
2025-01-17T11:31:46.5120711Z 
2025-01-17T11:31:46.5120812Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5120890Z         if err_msg is None:
2025-01-17T11:31:46.5120976Z             if left.shape != right.shape:
2025-01-17T11:31:46.5121058Z                 raise_assert_detail(
2025-01-17T11:31:46.5121195Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5121270Z                 )
2025-01-17T11:31:46.5121332Z     
2025-01-17T11:31:46.5121405Z             diff = 0
2025-01-17T11:31:46.5121508Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5121590Z                 # count up differences
2025-01-17T11:31:46.5121751Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5121823Z                     diff += 1
2025-01-17T11:31:46.5121885Z     
2025-01-17T11:31:46.5121965Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5122092Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5122250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5122356Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5122419Z E           
2025-01-17T11:31:46.5122522Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5122987Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5123255Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5123260Z 
2025-01-17T11:31:46.5123561Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5123564Z 
2025-01-17T11:31:46.5123723Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5123727Z 
2025-01-17T11:31:46.5124071Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8497c0>
2025-01-17T11:31:46.5124331Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5124410Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5124415Z 
2025-01-17T11:31:46.5124544Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5124652Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5124728Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5124794Z         try:
2025-01-17T11:31:46.5124925Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5125000Z         except KeyError:
2025-01-17T11:31:46.5125129Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5125192Z     
2025-01-17T11:31:46.5125274Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5125359Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5125442Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5125570Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5125656Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5125737Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5125840Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5125844Z 
2025-01-17T11:31:46.5125958Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5126065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5126200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5126266Z     ???
2025-01-17T11:31:46.5126367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5126371Z 
2025-01-17T11:31:46.5126437Z >   ???
2025-01-17T11:31:46.5126555Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5126621Z E   
2025-01-17T11:31:46.5126740Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5126852Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5126921Z E          ...
2025-01-17T11:31:46.5127003Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5127121Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5127226Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5127290Z E          ...
2025-01-17T11:31:46.5127368Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5127487Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5127591Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5127595Z 
2025-01-17T11:31:46.5127678Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5127979Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-17T11:31:46.5127987Z 
2025-01-17T11:31:46.5128205Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5128421Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5128572Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5128779Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5128988Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5129080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5129153Z err_msg = None
2025-01-17T11:31:46.5129156Z 
2025-01-17T11:31:46.5129260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5129338Z         if err_msg is None:
2025-01-17T11:31:46.5129424Z             if left.shape != right.shape:
2025-01-17T11:31:46.5129504Z                 raise_assert_detail(
2025-01-17T11:31:46.5129640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5129825Z                 )
2025-01-17T11:31:46.5129887Z     
2025-01-17T11:31:46.5130029Z             diff = 0
2025-01-17T11:31:46.5130136Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5130219Z                 # count up differences
2025-01-17T11:31:46.5130380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5130454Z                     diff += 1
2025-01-17T11:31:46.5130517Z     
2025-01-17T11:31:46.5130596Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5130726Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5130885Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5130991Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5131055Z E           
2025-01-17T11:31:46.5131163Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5131425Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5131683Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5131687Z 
2025-01-17T11:31:46.5131984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5131989Z 
2025-01-17T11:31:46.5132146Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5132150Z 
2025-01-17T11:31:46.5132371Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849880>
2025-01-17T11:31:46.5132673Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>, attr = 'f_lu'
2025-01-17T11:31:46.5132678Z 
2025-01-17T11:31:46.5132813Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5132921Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5133001Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5133065Z         try:
2025-01-17T11:31:46.5133196Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5133269Z         except KeyError:
2025-01-17T11:31:46.5133399Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5133461Z     
2025-01-17T11:31:46.5133541Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5133628Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5133708Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5133841Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5133922Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5134008Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5134110Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5134114Z 
2025-01-17T11:31:46.5134233Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5134338Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5134476Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5134538Z     ???
2025-01-17T11:31:46.5134643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5134646Z 
2025-01-17T11:31:46.5134709Z >   ???
2025-01-17T11:31:46.5134827Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5134888Z E   
2025-01-17T11:31:46.5135011Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5135240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5135426Z E          ...
2025-01-17T11:31:46.5135507Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5135628Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5135731Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5135795Z E          ...
2025-01-17T11:31:46.5135876Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5135992Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5136090Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5136094Z 
2025-01-17T11:31:46.5136175Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5136389Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-17T11:31:46.5136393Z 
2025-01-17T11:31:46.5136511Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5136646Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5136735Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5136861Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5136976Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5137063Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5137132Z err_msg = None
2025-01-17T11:31:46.5137136Z 
2025-01-17T11:31:46.5137241Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5137315Z         if err_msg is None:
2025-01-17T11:31:46.5137404Z             if left.shape != right.shape:
2025-01-17T11:31:46.5137480Z                 raise_assert_detail(
2025-01-17T11:31:46.5137618Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5137696Z                 )
2025-01-17T11:31:46.5137761Z     
2025-01-17T11:31:46.5137832Z             diff = 0
2025-01-17T11:31:46.5137939Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5138019Z                 # count up differences
2025-01-17T11:31:46.5138184Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5138258Z                     diff += 1
2025-01-17T11:31:46.5138325Z     
2025-01-17T11:31:46.5138405Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5138535Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5138696Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5138799Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5138869Z E           
2025-01-17T11:31:46.5138977Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5139242Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5139500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5139504Z 
2025-01-17T11:31:46.5139793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5139797Z 
2025-01-17T11:31:46.5139963Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5139966Z 
2025-01-17T11:31:46.5140270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84a000>
2025-01-17T11:31:46.5140505Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5140579Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5140583Z 
2025-01-17T11:31:46.5140715Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5140819Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5140901Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5140966Z         try:
2025-01-17T11:31:46.5141100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5141171Z         except KeyError:
2025-01-17T11:31:46.5141299Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5141366Z     
2025-01-17T11:31:46.5141444Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5141532Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5141611Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5141742Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5141825Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5141910Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5142010Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5142078Z             else:
2025-01-17T11:31:46.5142166Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5142270Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5142274Z 
2025-01-17T11:31:46.5142391Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5142499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5142731Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5142800Z     ???
2025-01-17T11:31:46.5142902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5142910Z 
2025-01-17T11:31:46.5142976Z >   ???
2025-01-17T11:31:46.5143097Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5143167Z E   
2025-01-17T11:31:46.5143286Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5143387Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5143457Z E          ...
2025-01-17T11:31:46.5143537Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5143662Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5143765Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5143832Z E          ...
2025-01-17T11:31:46.5143908Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5144026Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5144121Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5144125Z 
2025-01-17T11:31:46.5144207Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5144425Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-17T11:31:46.5144429Z 
2025-01-17T11:31:46.5144552Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5144671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5144759Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5144882Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5145000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5145087Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5145158Z err_msg = None
2025-01-17T11:31:46.5145161Z 
2025-01-17T11:31:46.5145262Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5145338Z         if err_msg is None:
2025-01-17T11:31:46.5145612Z             if left.shape != right.shape:
2025-01-17T11:31:46.5145791Z                 raise_assert_detail(
2025-01-17T11:31:46.5146018Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5146142Z                 )
2025-01-17T11:31:46.5146251Z     
2025-01-17T11:31:46.5146373Z             diff = 0
2025-01-17T11:31:46.5146543Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5146677Z                 # count up differences
2025-01-17T11:31:46.5146956Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5147072Z                     diff += 1
2025-01-17T11:31:46.5147182Z     
2025-01-17T11:31:46.5147314Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5147529Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5147805Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5147990Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5148109Z E           
2025-01-17T11:31:46.5148283Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5148734Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5149202Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5149208Z 
2025-01-17T11:31:46.5149508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5149522Z 
2025-01-17T11:31:46.5149690Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5149694Z 
2025-01-17T11:31:46.5149912Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84a0c0>
2025-01-17T11:31:46.5150066Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5150145Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5150149Z 
2025-01-17T11:31:46.5150277Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5150385Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5150461Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5150527Z         try:
2025-01-17T11:31:46.5150660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5150733Z         except KeyError:
2025-01-17T11:31:46.5150864Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5150931Z     
2025-01-17T11:31:46.5151015Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5151102Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5151184Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5151307Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5151388Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5151468Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5151574Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5151640Z             else:
2025-01-17T11:31:46.5151729Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5151827Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5151831Z 
2025-01-17T11:31:46.5151948Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5152052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5152291Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5152354Z     ???
2025-01-17T11:31:46.5152676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5152692Z 
2025-01-17T11:31:46.5152796Z >   ???
2025-01-17T11:31:46.5152921Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5152991Z E   
2025-01-17T11:31:46.5153110Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5153218Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5153283Z E          ...
2025-01-17T11:31:46.5153364Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5153483Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5153590Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5153654Z E          ...
2025-01-17T11:31:46.5153736Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5153858Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5153966Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5153970Z 
2025-01-17T11:31:46.5154054Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5154256Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-17T11:31:46.5154260Z 
2025-01-17T11:31:46.5154379Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5154504Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5154591Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5154717Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5154833Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5154918Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5154991Z err_msg = None
2025-01-17T11:31:46.5154995Z 
2025-01-17T11:31:46.5155103Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5155177Z         if err_msg is None:
2025-01-17T11:31:46.5155266Z             if left.shape != right.shape:
2025-01-17T11:31:46.5155342Z                 raise_assert_detail(
2025-01-17T11:31:46.5155482Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5155549Z                 )
2025-01-17T11:31:46.5155611Z     
2025-01-17T11:31:46.5155680Z             diff = 0
2025-01-17T11:31:46.5155782Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5155865Z                 # count up differences
2025-01-17T11:31:46.5156026Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5156099Z                     diff += 1
2025-01-17T11:31:46.5156160Z     
2025-01-17T11:31:46.5156243Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5156380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5156543Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5156644Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5156711Z E           
2025-01-17T11:31:46.5156812Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5157064Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5157466Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5157567Z 
2025-01-17T11:31:46.5157876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5157880Z 
2025-01-17T11:31:46.5158039Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5158042Z 
2025-01-17T11:31:46.5158257Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84a240>
2025-01-17T11:31:46.5158410Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5158481Z attr = 'j_blues'
2025-01-17T11:31:46.5158485Z 
2025-01-17T11:31:46.5158612Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5158721Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5158796Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5158863Z         try:
2025-01-17T11:31:46.5159001Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5159082Z         except KeyError:
2025-01-17T11:31:46.5159212Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5159279Z     
2025-01-17T11:31:46.5159358Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5159445Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5159523Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5159649Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5159726Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5159811Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5159913Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5159980Z             else:
2025-01-17T11:31:46.5160071Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5160171Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5160179Z 
2025-01-17T11:31:46.5160300Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5160409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5160550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5160614Z     ???
2025-01-17T11:31:46.5160720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5160724Z 
2025-01-17T11:31:46.5160787Z >   ???
2025-01-17T11:31:46.5160907Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5160970Z E   
2025-01-17T11:31:46.5161092Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5161196Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5161265Z E          ...
2025-01-17T11:31:46.5161345Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5161468Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5161578Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5161649Z E          ...
2025-01-17T11:31:46.5161730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5161851Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5161947Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5161951Z 
2025-01-17T11:31:46.5162035Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5162232Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-17T11:31:46.5162235Z 
2025-01-17T11:31:46.5162357Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5162479Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5162739Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5162889Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5163237Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5163340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5163473Z err_msg = None
2025-01-17T11:31:46.5163488Z 
2025-01-17T11:31:46.5163670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5163801Z         if err_msg is None:
2025-01-17T11:31:46.5163955Z             if left.shape != right.shape:
2025-01-17T11:31:46.5164080Z                 raise_assert_detail(
2025-01-17T11:31:46.5164314Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5164424Z                 )
2025-01-17T11:31:46.5164534Z     
2025-01-17T11:31:46.5164647Z             diff = 0
2025-01-17T11:31:46.5164825Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5164959Z                 # count up differences
2025-01-17T11:31:46.5165250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5165376Z                     diff += 1
2025-01-17T11:31:46.5165485Z     
2025-01-17T11:31:46.5165619Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5165835Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5166111Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5166285Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5166395Z E           
2025-01-17T11:31:46.5166573Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5167025Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5167504Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5167511Z 
2025-01-17T11:31:46.5168028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5168035Z 
2025-01-17T11:31:46.5168313Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5168319Z 
2025-01-17T11:31:46.5168685Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84afc0>
2025-01-17T11:31:46.5168916Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5168986Z attr = 'lines'
2025-01-17T11:31:46.5168989Z 
2025-01-17T11:31:46.5169122Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5169239Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5169317Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5169382Z         try:
2025-01-17T11:31:46.5169515Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5169588Z         except KeyError:
2025-01-17T11:31:46.5169719Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5169781Z     
2025-01-17T11:31:46.5169863Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5169949Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5170030Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5170156Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5170234Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5170317Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5170419Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5170590Z             else:
2025-01-17T11:31:46.5170748Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5170855Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5170859Z 
2025-01-17T11:31:46.5170976Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5171086Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5171221Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5171288Z     ???
2025-01-17T11:31:46.5171389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5171393Z 
2025-01-17T11:31:46.5171466Z >   ???
2025-01-17T11:31:46.5171583Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5171651Z E   
2025-01-17T11:31:46.5171771Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5171878Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5171948Z E          ...
2025-01-17T11:31:46.5172036Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5172156Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5172263Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5172330Z E          ...
2025-01-17T11:31:46.5172409Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5172638Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5172736Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5172740Z 
2025-01-17T11:31:46.5172826Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5173080Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-17T11:31:46.5173084Z 
2025-01-17T11:31:46.5173299Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b080>
2025-01-17T11:31:46.5173452Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5173542Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5173550Z 
2025-01-17T11:31:46.5173683Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5173790Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5173866Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5173934Z         try:
2025-01-17T11:31:46.5174064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5174141Z         except KeyError:
2025-01-17T11:31:46.5174269Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5174333Z     
2025-01-17T11:31:46.5174411Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5174498Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5174579Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5174707Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5174784Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5174873Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5174978Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5174982Z 
2025-01-17T11:31:46.5175103Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5175205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5175209Z 
2025-01-17T11:31:46.5175339Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5175415Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5175519Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5175592Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5175722Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5175802Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5175899Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5176200Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5176273Z err_msg = None
2025-01-17T11:31:46.5176276Z 
2025-01-17T11:31:46.5176380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5176452Z         if err_msg is None:
2025-01-17T11:31:46.5176539Z             if left.shape != right.shape:
2025-01-17T11:31:46.5176615Z                 raise_assert_detail(
2025-01-17T11:31:46.5176753Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5176818Z                 )
2025-01-17T11:31:46.5176883Z     
2025-01-17T11:31:46.5176950Z             diff = 0
2025-01-17T11:31:46.5177056Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5177134Z                 # count up differences
2025-01-17T11:31:46.5177298Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5177370Z                     diff += 1
2025-01-17T11:31:46.5177442Z     
2025-01-17T11:31:46.5177524Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5177651Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5177816Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5177910Z E           AssertionError: Series are different
2025-01-17T11:31:46.5177978Z E           
2025-01-17T11:31:46.5178070Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5178439Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5178765Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5179093Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5179098Z 
2025-01-17T11:31:46.5179398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5179650Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-17T11:31:46.5179661Z 
2025-01-17T11:31:46.5179881Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b140>
2025-01-17T11:31:46.5180036Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5180119Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5180123Z 
2025-01-17T11:31:46.5180250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5180357Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5180434Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5180564Z         try:
2025-01-17T11:31:46.5180798Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5180927Z         except KeyError:
2025-01-17T11:31:46.5181141Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5181250Z     
2025-01-17T11:31:46.5181381Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5181675Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5181877Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5182015Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5182095Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5182182Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5182284Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5182288Z 
2025-01-17T11:31:46.5182405Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5182513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5182517Z 
2025-01-17T11:31:46.5182745Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5182824Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5182925Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5183000Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5183143Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5183223Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5183319Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5183395Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5183468Z err_msg = None
2025-01-17T11:31:46.5183472Z 
2025-01-17T11:31:46.5183574Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5183645Z         if err_msg is None:
2025-01-17T11:31:46.5183734Z             if left.shape != right.shape:
2025-01-17T11:31:46.5183810Z                 raise_assert_detail(
2025-01-17T11:31:46.5183946Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5184010Z                 )
2025-01-17T11:31:46.5184075Z     
2025-01-17T11:31:46.5184141Z             diff = 0
2025-01-17T11:31:46.5184247Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5184332Z                 # count up differences
2025-01-17T11:31:46.5184498Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5184569Z                     diff += 1
2025-01-17T11:31:46.5184635Z     
2025-01-17T11:31:46.5184718Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5184843Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5185004Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5185097Z E           AssertionError: Series are different
2025-01-17T11:31:46.5185166Z E           
2025-01-17T11:31:46.5185258Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5185629Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5186011Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5186377Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5186613Z 
2025-01-17T11:31:46.5186918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5187113Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-17T11:31:46.5187117Z 
2025-01-17T11:31:46.5187239Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5187360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5187454Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5187576Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5187700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5187795Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5187868Z err_msg = None
2025-01-17T11:31:46.5187876Z 
2025-01-17T11:31:46.5187973Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5188051Z         if err_msg is None:
2025-01-17T11:31:46.5188136Z             if left.shape != right.shape:
2025-01-17T11:31:46.5188214Z                 raise_assert_detail(
2025-01-17T11:31:46.5188345Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5188412Z                 )
2025-01-17T11:31:46.5188473Z     
2025-01-17T11:31:46.5188542Z             diff = 0
2025-01-17T11:31:46.5188643Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5188725Z                 # count up differences
2025-01-17T11:31:46.5188882Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5188951Z                     diff += 1
2025-01-17T11:31:46.5189015Z     
2025-01-17T11:31:46.5189099Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5189231Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5189390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5189496Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5189564Z E           
2025-01-17T11:31:46.5189672Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5189924Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5190184Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5190192Z 
2025-01-17T11:31:46.5190482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5190486Z 
2025-01-17T11:31:46.5190646Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5190650Z 
2025-01-17T11:31:46.5190868Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b380>
2025-01-17T11:31:46.5191056Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>, attr = 'nu'
2025-01-17T11:31:46.5191060Z 
2025-01-17T11:31:46.5191191Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5191299Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5191378Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5191442Z         try:
2025-01-17T11:31:46.5191665Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5191811Z         except KeyError:
2025-01-17T11:31:46.5191941Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5192004Z     
2025-01-17T11:31:46.5192082Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5192172Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5192253Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5192378Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5192455Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5192636Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5192741Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5192744Z 
2025-01-17T11:31:46.5192867Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5192978Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5193129Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5193204Z     ???
2025-01-17T11:31:46.5193316Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5193321Z 
2025-01-17T11:31:46.5193385Z >   ???
2025-01-17T11:31:46.5193504Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5193567Z E   
2025-01-17T11:31:46.5193689Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5193793Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5193861Z E          ...
2025-01-17T11:31:46.5193939Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5194060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5194166Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5194230Z E          ...
2025-01-17T11:31:46.5194313Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5194433Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5194538Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5194542Z 
2025-01-17T11:31:46.5194624Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5194846Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-17T11:31:46.5194850Z 
2025-01-17T11:31:46.5194970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5195092Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5195179Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5195303Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5195419Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5195514Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5195587Z err_msg = None
2025-01-17T11:31:46.5195595Z 
2025-01-17T11:31:46.5195701Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5195772Z         if err_msg is None:
2025-01-17T11:31:46.5195861Z             if left.shape != right.shape:
2025-01-17T11:31:46.5195936Z                 raise_assert_detail(
2025-01-17T11:31:46.5196071Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5196136Z                 )
2025-01-17T11:31:46.5196202Z     
2025-01-17T11:31:46.5196268Z             diff = 0
2025-01-17T11:31:46.5196376Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5196456Z                 # count up differences
2025-01-17T11:31:46.5196622Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5196691Z                     diff += 1
2025-01-17T11:31:46.5196752Z     
2025-01-17T11:31:46.5196954Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5197199Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5197447Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5197636Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5197751Z E           
2025-01-17T11:31:46.5197923Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5198379Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5198735Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5198749Z 
2025-01-17T11:31:46.5199045Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5199049Z 
2025-01-17T11:31:46.5199213Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5199217Z 
2025-01-17T11:31:46.5199428Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b440>
2025-01-17T11:31:46.5199586Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5199659Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5199662Z 
2025-01-17T11:31:46.5199795Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5199902Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5199987Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5200057Z         try:
2025-01-17T11:31:46.5200194Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5200270Z         except KeyError:
2025-01-17T11:31:46.5200401Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5200467Z     
2025-01-17T11:31:46.5200546Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5200632Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5200712Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5200835Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5200913Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5200998Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5201100Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5201104Z 
2025-01-17T11:31:46.5201220Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5201324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5201475Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5201538Z     ???
2025-01-17T11:31:46.5201643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5201646Z 
2025-01-17T11:31:46.5201708Z >   ???
2025-01-17T11:31:46.5201832Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5201894Z E   
2025-01-17T11:31:46.5202017Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5202119Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5202189Z E          ...
2025-01-17T11:31:46.5202269Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5202390Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5202500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5202741Z E          ...
2025-01-17T11:31:46.5202844Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5203201Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5203307Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5203311Z 
2025-01-17T11:31:46.5203393Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5203594Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-17T11:31:46.5203597Z 
2025-01-17T11:31:46.5203716Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5203841Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5203929Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5204055Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5204171Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5204267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5204340Z err_msg = None
2025-01-17T11:31:46.5204344Z 
2025-01-17T11:31:46.5204450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5204524Z         if err_msg is None:
2025-01-17T11:31:46.5204612Z             if left.shape != right.shape:
2025-01-17T11:31:46.5204690Z                 raise_assert_detail(
2025-01-17T11:31:46.5204827Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5204892Z                 )
2025-01-17T11:31:46.5204958Z     
2025-01-17T11:31:46.5205025Z             diff = 0
2025-01-17T11:31:46.5205135Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5205215Z                 # count up differences
2025-01-17T11:31:46.5205375Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5205450Z                     diff += 1
2025-01-17T11:31:46.5205518Z     
2025-01-17T11:31:46.5205601Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5205733Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5205897Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5206002Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5206071Z E           
2025-01-17T11:31:46.5206172Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5206426Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5206686Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5206701Z 
2025-01-17T11:31:46.5206992Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5206996Z 
2025-01-17T11:31:46.5207163Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5207167Z 
2025-01-17T11:31:46.5207382Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b500>
2025-01-17T11:31:46.5207573Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>, attr = 'f_lu'
2025-01-17T11:31:46.5207577Z 
2025-01-17T11:31:46.5207705Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5207812Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5207888Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5208051Z         try:
2025-01-17T11:31:46.5208253Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5208329Z         except KeyError:
2025-01-17T11:31:46.5208461Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5208523Z     
2025-01-17T11:31:46.5208608Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5208692Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5208774Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5208896Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5208976Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5209056Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5209158Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5209162Z 
2025-01-17T11:31:46.5209277Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5209385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5209526Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5209596Z     ???
2025-01-17T11:31:46.5209696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5209700Z 
2025-01-17T11:31:46.5209765Z >   ???
2025-01-17T11:31:46.5209883Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5209949Z E   
2025-01-17T11:31:46.5210066Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5210170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5210235Z E          ...
2025-01-17T11:31:46.5210314Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5210438Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5210542Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5210610Z E          ...
2025-01-17T11:31:46.5210687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5210814Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5210911Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5210915Z 
2025-01-17T11:31:46.5211000Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5211217Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-17T11:31:46.5211222Z 
2025-01-17T11:31:46.5211346Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5211468Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5211560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5211686Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5211804Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5211896Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5211974Z err_msg = None
2025-01-17T11:31:46.5211977Z 
2025-01-17T11:31:46.5212080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5212157Z         if err_msg is None:
2025-01-17T11:31:46.5212243Z             if left.shape != right.shape:
2025-01-17T11:31:46.5212322Z                 raise_assert_detail(
2025-01-17T11:31:46.5212459Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5212623Z                 )
2025-01-17T11:31:46.5212690Z     
2025-01-17T11:31:46.5212761Z             diff = 0
2025-01-17T11:31:46.5212869Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5212956Z                 # count up differences
2025-01-17T11:31:46.5213117Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5213188Z                     diff += 1
2025-01-17T11:31:46.5213254Z     
2025-01-17T11:31:46.5213458Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5213739Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5214186Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5214312Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5214382Z E           
2025-01-17T11:31:46.5214489Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5214745Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5215187Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5215204Z 
2025-01-17T11:31:46.5215723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5215730Z 
2025-01-17T11:31:46.5216007Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5216013Z 
2025-01-17T11:31:46.5216385Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84bc80>
2025-01-17T11:31:46.5216657Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5216801Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5216807Z 
2025-01-17T11:31:46.5217035Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5217223Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5217352Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5217478Z         try:
2025-01-17T11:31:46.5217708Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5217834Z         except KeyError:
2025-01-17T11:31:46.5218067Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5218175Z     
2025-01-17T11:31:46.5218317Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5218463Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5218607Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5218815Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5218950Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5219092Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5219266Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5219378Z             else:
2025-01-17T11:31:46.5219532Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5219702Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5219715Z 
2025-01-17T11:31:46.5219931Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5220089Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5220235Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5220301Z     ???
2025-01-17T11:31:46.5220410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5220414Z 
2025-01-17T11:31:46.5220480Z >   ???
2025-01-17T11:31:46.5220637Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5220702Z E   
2025-01-17T11:31:46.5220826Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5220938Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5221005Z E          ...
2025-01-17T11:31:46.5267002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5267298Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5267967Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5268107Z E          ...
2025-01-17T11:31:46.5268252Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5268474Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5268646Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5268654Z 
2025-01-17T11:31:46.5268797Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5269175Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-17T11:31:46.5269182Z 
2025-01-17T11:31:46.5269393Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5269583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5269725Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5269928Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5270133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5270279Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5270401Z err_msg = None
2025-01-17T11:31:46.5270407Z 
2025-01-17T11:31:46.5270575Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5270696Z         if err_msg is None:
2025-01-17T11:31:46.5270841Z             if left.shape != right.shape:
2025-01-17T11:31:46.5270971Z                 raise_assert_detail(
2025-01-17T11:31:46.5271202Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5271311Z                 )
2025-01-17T11:31:46.5271418Z     
2025-01-17T11:31:46.5271526Z             diff = 0
2025-01-17T11:31:46.5271704Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5271827Z                 # count up differences
2025-01-17T11:31:46.5272096Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5272210Z                     diff += 1
2025-01-17T11:31:46.5272316Z     
2025-01-17T11:31:46.5272447Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5272862Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5273125Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5273297Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5273403Z E           
2025-01-17T11:31:46.5273580Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5274026Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5274480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5274488Z 
2025-01-17T11:31:46.5274977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5274983Z 
2025-01-17T11:31:46.5275240Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5275246Z 
2025-01-17T11:31:46.5275601Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84bd40>
2025-01-17T11:31:46.5275856Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5275971Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5276149Z 
2025-01-17T11:31:46.5276372Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5276669Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5276798Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5276896Z         try:
2025-01-17T11:31:46.5277116Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5277228Z         except KeyError:
2025-01-17T11:31:46.5277443Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5277535Z     
2025-01-17T11:31:46.5277663Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5277806Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5277943Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5278122Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5278249Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5278386Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5278568Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5278681Z             else:
2025-01-17T11:31:46.5278825Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5278974Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5278981Z 
2025-01-17T11:31:46.5279149Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5279304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5279500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5279593Z     ???
2025-01-17T11:31:46.5279737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5279742Z 
2025-01-17T11:31:46.5279832Z >   ???
2025-01-17T11:31:46.5280002Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5280093Z E   
2025-01-17T11:31:46.5280262Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5280417Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5280509Z E          ...
2025-01-17T11:31:46.5280630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5280804Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5280951Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5281040Z E          ...
2025-01-17T11:31:46.5281151Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5281314Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5281453Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5281459Z 
2025-01-17T11:31:46.5281573Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5281877Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-17T11:31:46.5281882Z 
2025-01-17T11:31:46.5282056Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5282252Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5282383Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5282728Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5282918Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5283059Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5283160Z err_msg = None
2025-01-17T11:31:46.5283165Z 
2025-01-17T11:31:46.5283335Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5283449Z         if err_msg is None:
2025-01-17T11:31:46.5283578Z             if left.shape != right.shape:
2025-01-17T11:31:46.5283708Z                 raise_assert_detail(
2025-01-17T11:31:46.5283922Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5284189Z                 )
2025-01-17T11:31:46.5284299Z     
2025-01-17T11:31:46.5284410Z             diff = 0
2025-01-17T11:31:46.5284691Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5284826Z                 # count up differences
2025-01-17T11:31:46.5285065Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5285173Z                     diff += 1
2025-01-17T11:31:46.5285263Z     
2025-01-17T11:31:46.5285384Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5285571Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5285817Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5285968Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5286066Z E           
2025-01-17T11:31:46.5286218Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5286634Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5287044Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5287050Z 
2025-01-17T11:31:46.5287500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5287506Z 
2025-01-17T11:31:46.5287750Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5287756Z 
2025-01-17T11:31:46.5288083Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84bec0>
2025-01-17T11:31:46.5288333Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5288437Z attr = 'j_blues'
2025-01-17T11:31:46.5288443Z 
2025-01-17T11:31:46.5288642Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5288825Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5288938Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5289036Z         try:
2025-01-17T11:31:46.5289228Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5289337Z         except KeyError:
2025-01-17T11:31:46.5289566Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5289662Z     
2025-01-17T11:31:46.5289798Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5289929Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5290049Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5290275Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5290411Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5290546Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5290707Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5290804Z             else:
2025-01-17T11:31:46.5290931Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5291069Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5291076Z 
2025-01-17T11:31:46.5291248Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5291395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5291595Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5291684Z     ???
2025-01-17T11:31:46.5291832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5291837Z 
2025-01-17T11:31:46.5291932Z >   ???
2025-01-17T11:31:46.5292229Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5292460Z E   
2025-01-17T11:31:46.5292948Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5293126Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5293237Z E          ...
2025-01-17T11:31:46.5293368Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5293571Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5293743Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5293845Z E          ...
2025-01-17T11:31:46.5293959Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5294131Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5294285Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5294291Z 
2025-01-17T11:31:46.5294416Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5294745Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-17T11:31:46.5294761Z 
2025-01-17T11:31:46.5294957Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5295150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5295287Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5295483Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5295665Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5295800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5295901Z err_msg = None
2025-01-17T11:31:46.5295906Z 
2025-01-17T11:31:46.5296065Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5296177Z         if err_msg is None:
2025-01-17T11:31:46.5296313Z             if left.shape != right.shape:
2025-01-17T11:31:46.5296439Z                 raise_assert_detail(
2025-01-17T11:31:46.5296662Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5296761Z                 )
2025-01-17T11:31:46.5296859Z     
2025-01-17T11:31:46.5296961Z             diff = 0
2025-01-17T11:31:46.5297128Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5297245Z                 # count up differences
2025-01-17T11:31:46.5297495Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5297597Z                     diff += 1
2025-01-17T11:31:46.5297693Z     
2025-01-17T11:31:46.5297812Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5298002Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5298252Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5298408Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5298518Z E           
2025-01-17T11:31:46.5298675Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5299101Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5299527Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5299534Z 
2025-01-17T11:31:46.5299994Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5300158Z 
2025-01-17T11:31:46.5300554Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5300562Z 
2025-01-17T11:31:46.5300906Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e874c80>
2025-01-17T11:31:46.5301158Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5301265Z attr = 'lines'
2025-01-17T11:31:46.5301271Z 
2025-01-17T11:31:46.5301475Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5301642Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5301766Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5301865Z         try:
2025-01-17T11:31:46.5302075Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5302188Z         except KeyError:
2025-01-17T11:31:46.5302393Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5302489Z     
2025-01-17T11:31:46.5302772Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5302921Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5303047Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5303243Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5303361Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5303491Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5303648Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5303742Z             else:
2025-01-17T11:31:46.5303864Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5304013Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5304019Z 
2025-01-17T11:31:46.5304190Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5304348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5304545Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5304648Z     ???
2025-01-17T11:31:46.5304802Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5304807Z 
2025-01-17T11:31:46.5304901Z >   ???
2025-01-17T11:31:46.5305070Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5305161Z E   
2025-01-17T11:31:46.5305342Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5305498Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5305597Z E          ...
2025-01-17T11:31:46.5305717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5305915Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5306080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5306186Z E          ...
2025-01-17T11:31:46.5306310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5306498Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5306662Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5306675Z 
2025-01-17T11:31:46.5306808Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5307221Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-17T11:31:46.5307227Z 
2025-01-17T11:31:46.5307564Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e874d40>
2025-01-17T11:31:46.5307814Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5307938Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5307944Z 
2025-01-17T11:31:46.5308141Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5308310Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5308426Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5308527Z         try:
2025-01-17T11:31:46.5308737Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5309012Z         except KeyError:
2025-01-17T11:31:46.5309331Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5309437Z     
2025-01-17T11:31:46.5309570Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5309713Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5309842Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5310052Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5310191Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5310329Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5310502Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5310508Z 
2025-01-17T11:31:46.5310702Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5310886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5310891Z 
2025-01-17T11:31:46.5311103Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5311248Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5311402Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5311521Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5311733Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5311858Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5312012Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5312131Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5312243Z err_msg = None
2025-01-17T11:31:46.5312248Z 
2025-01-17T11:31:46.5312417Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5312775Z         if err_msg is None:
2025-01-17T11:31:46.5312923Z             if left.shape != right.shape:
2025-01-17T11:31:46.5313043Z                 raise_assert_detail(
2025-01-17T11:31:46.5313277Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5313389Z                 )
2025-01-17T11:31:46.5313495Z     
2025-01-17T11:31:46.5313602Z             diff = 0
2025-01-17T11:31:46.5313774Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5313904Z                 # count up differences
2025-01-17T11:31:46.5314186Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5314301Z                     diff += 1
2025-01-17T11:31:46.5314400Z     
2025-01-17T11:31:46.5314523Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5314714Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5314977Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5315132Z E           AssertionError: Series are different
2025-01-17T11:31:46.5315234Z E           
2025-01-17T11:31:46.5315374Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5316030Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5316560Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5317295Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5317427Z 
2025-01-17T11:31:46.5317919Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5318323Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-17T11:31:46.5318328Z 
2025-01-17T11:31:46.5318668Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e874e00>
2025-01-17T11:31:46.5318906Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5319035Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5319041Z 
2025-01-17T11:31:46.5319244Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5319423Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5319539Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5319660Z         try:
2025-01-17T11:31:46.5319886Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5320013Z         except KeyError:
2025-01-17T11:31:46.5320225Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5320330Z     
2025-01-17T11:31:46.5320459Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5320651Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5320790Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5320989Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5321115Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5321236Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5321400Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5321406Z 
2025-01-17T11:31:46.5321577Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5321750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5321756Z 
2025-01-17T11:31:46.5321944Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5322070Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5322223Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5322333Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5322522Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5322788Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5322940Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5323059Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5323171Z err_msg = None
2025-01-17T11:31:46.5323177Z 
2025-01-17T11:31:46.5323341Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5323462Z         if err_msg is None:
2025-01-17T11:31:46.5323607Z             if left.shape != right.shape:
2025-01-17T11:31:46.5323723Z                 raise_assert_detail(
2025-01-17T11:31:46.5323939Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5324041Z                 )
2025-01-17T11:31:46.5324146Z     
2025-01-17T11:31:46.5324244Z             diff = 0
2025-01-17T11:31:46.5324402Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5324530Z                 # count up differences
2025-01-17T11:31:46.5324797Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5324915Z                     diff += 1
2025-01-17T11:31:46.5325019Z     
2025-01-17T11:31:46.5325156Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5325356Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5325814Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5326094Z E           AssertionError: Series are different
2025-01-17T11:31:46.5326207Z E           
2025-01-17T11:31:46.5326360Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5327009Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5327673Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5328354Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5328361Z 
2025-01-17T11:31:46.5328812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5329123Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-17T11:31:46.5329128Z 
2025-01-17T11:31:46.5329315Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5329530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5329675Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5329884Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5330071Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5330210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5330324Z err_msg = None
2025-01-17T11:31:46.5330330Z 
2025-01-17T11:31:46.5330500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5330619Z         if err_msg is None:
2025-01-17T11:31:46.5330767Z             if left.shape != right.shape:
2025-01-17T11:31:46.5330892Z                 raise_assert_detail(
2025-01-17T11:31:46.5331114Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5331227Z                 )
2025-01-17T11:31:46.5331334Z     
2025-01-17T11:31:46.5331452Z             diff = 0
2025-01-17T11:31:46.5331618Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5331750Z                 # count up differences
2025-01-17T11:31:46.5332020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5332139Z                     diff += 1
2025-01-17T11:31:46.5332237Z     
2025-01-17T11:31:46.5332369Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5332705Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5332983Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5333150Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5333259Z E           
2025-01-17T11:31:46.5333426Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5334153Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5334605Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5334612Z 
2025-01-17T11:31:46.5335097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5335103Z 
2025-01-17T11:31:46.5335370Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5335382Z 
2025-01-17T11:31:46.5335737Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875040>
2025-01-17T11:31:46.5336066Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>, attr = 'nu'
2025-01-17T11:31:46.5336072Z 
2025-01-17T11:31:46.5336289Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5336473Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5336590Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5336690Z         try:
2025-01-17T11:31:46.5336901Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5337020Z         except KeyError:
2025-01-17T11:31:46.5337239Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5337341Z     
2025-01-17T11:31:46.5337473Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5337607Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5337739Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5337950Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5338088Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5338218Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5338380Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5338386Z 
2025-01-17T11:31:46.5338569Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5338740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5338958Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5339064Z     ???
2025-01-17T11:31:46.5339218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5339224Z 
2025-01-17T11:31:46.5339320Z >   ???
2025-01-17T11:31:46.5339491Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5339586Z E   
2025-01-17T11:31:46.5339775Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5339931Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5340038Z E          ...
2025-01-17T11:31:46.5340152Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5340330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5340488Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5340591Z E          ...
2025-01-17T11:31:46.5340711Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5340903Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5341061Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5341067Z 
2025-01-17T11:31:46.5341205Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5341570Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-17T11:31:46.5341575Z 
2025-01-17T11:31:46.5341766Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5342157Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5342296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5342489Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5342823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5342965Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5343084Z err_msg = None
2025-01-17T11:31:46.5343090Z 
2025-01-17T11:31:46.5343250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5343374Z         if err_msg is None:
2025-01-17T11:31:46.5343513Z             if left.shape != right.shape:
2025-01-17T11:31:46.5343646Z                 raise_assert_detail(
2025-01-17T11:31:46.5343874Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5343983Z                 )
2025-01-17T11:31:46.5344085Z     
2025-01-17T11:31:46.5344207Z             diff = 0
2025-01-17T11:31:46.5344380Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5344511Z                 # count up differences
2025-01-17T11:31:46.5344785Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5344899Z                     diff += 1
2025-01-17T11:31:46.5345006Z     
2025-01-17T11:31:46.5345135Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5345348Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5345620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5345796Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5345902Z E           
2025-01-17T11:31:46.5346076Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5346541Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5347002Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5347009Z 
2025-01-17T11:31:46.5347504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5347516Z 
2025-01-17T11:31:46.5347786Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5347791Z 
2025-01-17T11:31:46.5348170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875100>
2025-01-17T11:31:46.5348436Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5348550Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5348556Z 
2025-01-17T11:31:46.5348746Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5348907Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5349023Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5349115Z         try:
2025-01-17T11:31:46.5349311Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5349418Z         except KeyError:
2025-01-17T11:31:46.5349616Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5349709Z     
2025-01-17T11:31:46.5349839Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5349980Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5350116Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5350473Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5350720Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5350853Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5351021Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5351027Z 
2025-01-17T11:31:46.5351220Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5351391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5351609Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5351718Z     ???
2025-01-17T11:31:46.5351886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5351892Z 
2025-01-17T11:31:46.5352000Z >   ???
2025-01-17T11:31:46.5352191Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5352291Z E   
2025-01-17T11:31:46.5352492Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5352818Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5352926Z E          ...
2025-01-17T11:31:46.5353052Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5353250Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5353419Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5353528Z E          ...
2025-01-17T11:31:46.5353649Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5353845Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5354003Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5354008Z 
2025-01-17T11:31:46.5354145Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5354481Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-17T11:31:46.5354487Z 
2025-01-17T11:31:46.5354693Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5354899Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5355036Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5355222Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5355398Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5355528Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5355645Z err_msg = None
2025-01-17T11:31:46.5355650Z 
2025-01-17T11:31:46.5355809Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5355921Z         if err_msg is None:
2025-01-17T11:31:46.5356047Z             if left.shape != right.shape:
2025-01-17T11:31:46.5356163Z                 raise_assert_detail(
2025-01-17T11:31:46.5356371Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5356487Z                 )
2025-01-17T11:31:46.5356595Z     
2025-01-17T11:31:46.5356705Z             diff = 0
2025-01-17T11:31:46.5356880Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5356994Z                 # count up differences
2025-01-17T11:31:46.5357238Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5357339Z                     diff += 1
2025-01-17T11:31:46.5357435Z     
2025-01-17T11:31:46.5357554Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5357750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5358013Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5358179Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5358283Z E           
2025-01-17T11:31:46.5358454Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5359208Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5359673Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5359680Z 
2025-01-17T11:31:46.5360170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5360181Z 
2025-01-17T11:31:46.5360443Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5360457Z 
2025-01-17T11:31:46.5360829Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8751c0>
2025-01-17T11:31:46.5361149Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>, attr = 'f_lu'
2025-01-17T11:31:46.5361155Z 
2025-01-17T11:31:46.5361371Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5361546Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5361670Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5361785Z         try:
2025-01-17T11:31:46.5362002Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5362126Z         except KeyError:
2025-01-17T11:31:46.5362339Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5362448Z     
2025-01-17T11:31:46.5362710Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5362865Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5362999Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5363221Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5363354Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5363496Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5363662Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5363668Z 
2025-01-17T11:31:46.5363870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5364041Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5364272Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5364376Z     ???
2025-01-17T11:31:46.5364546Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5364551Z 
2025-01-17T11:31:46.5364650Z >   ???
2025-01-17T11:31:46.5364843Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5364945Z E   
2025-01-17T11:31:46.5365140Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5365317Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5365429Z E          ...
2025-01-17T11:31:46.5365564Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5365759Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5365932Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5366035Z E          ...
2025-01-17T11:31:46.5366162Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5366342Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5366505Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5366511Z 
2025-01-17T11:31:46.5366644Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5367021Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-17T11:31:46.5367026Z 
2025-01-17T11:31:46.5367223Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5367702Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5367850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5368069Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5368267Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5368414Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5368524Z err_msg = None
2025-01-17T11:31:46.5368530Z 
2025-01-17T11:31:46.5368697Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5368814Z         if err_msg is None:
2025-01-17T11:31:46.5368958Z             if left.shape != right.shape:
2025-01-17T11:31:46.5369081Z                 raise_assert_detail(
2025-01-17T11:31:46.5369307Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5369424Z                 )
2025-01-17T11:31:46.5369531Z     
2025-01-17T11:31:46.5369650Z             diff = 0
2025-01-17T11:31:46.5369823Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5369961Z                 # count up differences
2025-01-17T11:31:46.5370232Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5370351Z                     diff += 1
2025-01-17T11:31:46.5370454Z     
2025-01-17T11:31:46.5370594Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5370805Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5371083Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5371259Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5371388Z E           
2025-01-17T11:31:46.5371558Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5372033Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5372804Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5372812Z 
2025-01-17T11:31:46.5373317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5373324Z 
2025-01-17T11:31:46.5373640Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5373682Z 
2025-01-17T11:31:46.5374050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875940>
2025-01-17T11:31:46.5374315Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5374433Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5374439Z 
2025-01-17T11:31:46.5374647Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5374830Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5374955Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5375070Z         try:
2025-01-17T11:31:46.5375287Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5375415Z         except KeyError:
2025-01-17T11:31:46.5375628Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5375738Z     
2025-01-17T11:31:46.5375868Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5376011Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5376146Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5376657Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5376775Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5376904Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5377067Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5377181Z             else:
2025-01-17T11:31:46.5377315Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5377480Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5377486Z 
2025-01-17T11:31:46.5377680Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5377860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5378089Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5378197Z     ???
2025-01-17T11:31:46.5378380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5378394Z 
2025-01-17T11:31:46.5378498Z >   ???
2025-01-17T11:31:46.5378706Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5378806Z E   
2025-01-17T11:31:46.5379013Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5379177Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5379294Z E          ...
2025-01-17T11:31:46.5379426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5379631Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5379798Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5379899Z E          ...
2025-01-17T11:31:46.5380014Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5380196Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5380356Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5380362Z 
2025-01-17T11:31:46.5380501Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5380876Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-17T11:31:46.5380882Z 
2025-01-17T11:31:46.5381071Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5381569Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5381721Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5381925Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5382122Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5382258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5382376Z err_msg = None
2025-01-17T11:31:46.5382382Z 
2025-01-17T11:31:46.5382692Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5382823Z         if err_msg is None:
2025-01-17T11:31:46.5382956Z             if left.shape != right.shape:
2025-01-17T11:31:46.5383076Z                 raise_assert_detail(
2025-01-17T11:31:46.5383289Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5383394Z                 )
2025-01-17T11:31:46.5383501Z     
2025-01-17T11:31:46.5383608Z             diff = 0
2025-01-17T11:31:46.5383780Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5383908Z                 # count up differences
2025-01-17T11:31:46.5384172Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5384283Z                     diff += 1
2025-01-17T11:31:46.5384388Z     
2025-01-17T11:31:46.5384519Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5384734Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5385007Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5385342Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5385600Z E           
2025-01-17T11:31:46.5385779Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5386229Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5386679Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5386686Z 
2025-01-17T11:31:46.5387178Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5387202Z 
2025-01-17T11:31:46.5387476Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5387483Z 
2025-01-17T11:31:46.5387841Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875a00>
2025-01-17T11:31:46.5388116Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5388234Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5388239Z 
2025-01-17T11:31:46.5388453Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5388627Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5388760Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5388867Z         try:
2025-01-17T11:31:46.5389088Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5389207Z         except KeyError:
2025-01-17T11:31:46.5389430Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5389541Z     
2025-01-17T11:31:46.5389684Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5389826Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5389961Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5390163Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5390295Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5390427Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5390593Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5390702Z             else:
2025-01-17T11:31:46.5390844Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5391010Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5391016Z 
2025-01-17T11:31:46.5391208Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5391384Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5391618Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5391736Z     ???
2025-01-17T11:31:46.5391906Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5391911Z 
2025-01-17T11:31:46.5392019Z >   ???
2025-01-17T11:31:46.5392215Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5392322Z E   
2025-01-17T11:31:46.5392518Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5392840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5392949Z E          ...
2025-01-17T11:31:46.5393079Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5393276Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5393450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5393558Z E          ...
2025-01-17T11:31:46.5393688Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5394038Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5394327Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5394341Z 
2025-01-17T11:31:46.5394477Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5394806Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-17T11:31:46.5394820Z 
2025-01-17T11:31:46.5395017Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5395221Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5395364Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5395573Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5395771Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5395908Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5396036Z err_msg = None
2025-01-17T11:31:46.5396049Z 
2025-01-17T11:31:46.5396215Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5396343Z         if err_msg is None:
2025-01-17T11:31:46.5396484Z             if left.shape != right.shape:
2025-01-17T11:31:46.5396614Z                 raise_assert_detail(
2025-01-17T11:31:46.5396837Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5396951Z                 )
2025-01-17T11:31:46.5397056Z     
2025-01-17T11:31:46.5397174Z             diff = 0
2025-01-17T11:31:46.5397342Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5397480Z                 # count up differences
2025-01-17T11:31:46.5397755Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5397877Z                     diff += 1
2025-01-17T11:31:46.5397987Z     
2025-01-17T11:31:46.5398125Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5398350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5398631Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5398802Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5398907Z E           
2025-01-17T11:31:46.5399082Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5399538Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5400001Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5400015Z 
2025-01-17T11:31:46.5400520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5400526Z 
2025-01-17T11:31:46.5400789Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5400794Z 
2025-01-17T11:31:46.5401152Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875b80>
2025-01-17T11:31:46.5401406Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5401524Z attr = 'j_blues'
2025-01-17T11:31:46.5401531Z 
2025-01-17T11:31:46.5401744Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5401932Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5402052Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5402165Z         try:
2025-01-17T11:31:46.5402500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5402900Z         except KeyError:
2025-01-17T11:31:46.5403115Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5403222Z     
2025-01-17T11:31:46.5403348Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5403483Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5403608Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5403790Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5403910Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5404033Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5404199Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5404303Z             else:
2025-01-17T11:31:46.5404455Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5404614Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5404628Z 
2025-01-17T11:31:46.5404837Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5405000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5405215Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5405317Z     ???
2025-01-17T11:31:46.5405494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5405499Z 
2025-01-17T11:31:46.5405602Z >   ???
2025-01-17T11:31:46.5405803Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5405904Z E   
2025-01-17T11:31:46.5406107Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5406272Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5406387Z E          ...
2025-01-17T11:31:46.5406517Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5406720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5406898Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5407013Z E          ...
2025-01-17T11:31:46.5407148Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5407336Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5407500Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5407506Z 
2025-01-17T11:31:46.5407640Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5407989Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-17T11:31:46.5407994Z 
2025-01-17T11:31:46.5408195Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5408401Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5408549Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5408761Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5408973Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5409105Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5409208Z err_msg = None
2025-01-17T11:31:46.5409213Z 
2025-01-17T11:31:46.5409373Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5409487Z         if err_msg is None:
2025-01-17T11:31:46.5409624Z             if left.shape != right.shape:
2025-01-17T11:31:46.5409744Z                 raise_assert_detail(
2025-01-17T11:31:46.5409964Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5410070Z                 )
2025-01-17T11:31:46.5410175Z     
2025-01-17T11:31:46.5410285Z             diff = 0
2025-01-17T11:31:46.5410465Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5410596Z                 # count up differences
2025-01-17T11:31:46.5411029Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5411233Z                     diff += 1
2025-01-17T11:31:46.5411338Z     
2025-01-17T11:31:46.5411473Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5411682Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5411959Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5412128Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5412241Z E           
2025-01-17T11:31:46.5412411Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5413009Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5413480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5413493Z 
2025-01-17T11:31:46.5413983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5413989Z 
2025-01-17T11:31:46.5414259Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5414265Z 
2025-01-17T11:31:46.5414622Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876900>
2025-01-17T11:31:46.5414886Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5414997Z attr = 'lines'
2025-01-17T11:31:46.5415002Z 
2025-01-17T11:31:46.5415218Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5415411Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5415541Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5415649Z         try:
2025-01-17T11:31:46.5415870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5415991Z         except KeyError:
2025-01-17T11:31:46.5416202Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5416312Z     
2025-01-17T11:31:46.5416443Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5416590Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5416722Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5416928Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5417055Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5417191Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5417357Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5417478Z             else:
2025-01-17T11:31:46.5417626Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5417795Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5417801Z 
2025-01-17T11:31:46.5417995Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5418176Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5418405Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5418520Z     ???
2025-01-17T11:31:46.5418692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5418698Z 
2025-01-17T11:31:46.5418804Z >   ???
2025-01-17T11:31:46.5418991Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5419098Z E   
2025-01-17T11:31:46.5419299Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5419467Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5419735Z E          ...
2025-01-17T11:31:46.5420015Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5420228Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5420399Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5420512Z E          ...
2025-01-17T11:31:46.5420683Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5420885Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5421047Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5421053Z 
2025-01-17T11:31:46.5421194Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5421634Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-17T11:31:46.5421640Z 
2025-01-17T11:31:46.5422005Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8769c0>
2025-01-17T11:31:46.5422263Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5422415Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5422421Z 
2025-01-17T11:31:46.5422760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5422942Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5423067Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5423180Z         try:
2025-01-17T11:31:46.5423396Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5423522Z         except KeyError:
2025-01-17T11:31:46.5423736Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5423844Z     
2025-01-17T11:31:46.5423975Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5424117Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5424257Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5424460Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5424600Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5424734Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5424914Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5424920Z 
2025-01-17T11:31:46.5425111Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5425289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5425294Z 
2025-01-17T11:31:46.5425507Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5425636Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5425803Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5425930Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5426153Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5426280Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5426444Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5426578Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5426687Z err_msg = None
2025-01-17T11:31:46.5426693Z 
2025-01-17T11:31:46.5426847Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5426954Z         if err_msg is None:
2025-01-17T11:31:46.5427087Z             if left.shape != right.shape:
2025-01-17T11:31:46.5427198Z                 raise_assert_detail(
2025-01-17T11:31:46.5427401Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5427494Z                 )
2025-01-17T11:31:46.5427590Z     
2025-01-17T11:31:46.5427688Z             diff = 0
2025-01-17T11:31:46.5427837Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5427957Z                 # count up differences
2025-01-17T11:31:46.5428194Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5428462Z                     diff += 1
2025-01-17T11:31:46.5428553Z     
2025-01-17T11:31:46.5428798Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5428984Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5429230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5429364Z E           AssertionError: Series are different
2025-01-17T11:31:46.5429462Z E           
2025-01-17T11:31:46.5429593Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5430150Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5430654Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5431159Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5431165Z 
2025-01-17T11:31:46.5431625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5432017Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-17T11:31:46.5432030Z 
2025-01-17T11:31:46.5432367Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876a80>
2025-01-17T11:31:46.5432731Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5432861Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5432866Z 
2025-01-17T11:31:46.5433055Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5433221Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5433337Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5433437Z         try:
2025-01-17T11:31:46.5433633Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5433745Z         except KeyError:
2025-01-17T11:31:46.5433937Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5434035Z     
2025-01-17T11:31:46.5434167Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5434309Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5434444Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5434635Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5434760Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5434889Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5435048Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5435054Z 
2025-01-17T11:31:46.5435235Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5435404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5435409Z 
2025-01-17T11:31:46.5435610Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5435736Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5435889Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5436162Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5436501Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5436625Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5436779Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5436895Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5437004Z err_msg = None
2025-01-17T11:31:46.5437010Z 
2025-01-17T11:31:46.5437175Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5437293Z         if err_msg is None:
2025-01-17T11:31:46.5437438Z             if left.shape != right.shape:
2025-01-17T11:31:46.5437563Z                 raise_assert_detail(
2025-01-17T11:31:46.5437785Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5437886Z                 )
2025-01-17T11:31:46.5437992Z     
2025-01-17T11:31:46.5438098Z             diff = 0
2025-01-17T11:31:46.5438274Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5438423Z                 # count up differences
2025-01-17T11:31:46.5438688Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5438806Z                     diff += 1
2025-01-17T11:31:46.5438907Z     
2025-01-17T11:31:46.5439038Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5439241Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5439517Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5439668Z E           AssertionError: Series are different
2025-01-17T11:31:46.5439777Z E           
2025-01-17T11:31:46.5439927Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5440565Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5441210Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5441877Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5441890Z 
2025-01-17T11:31:46.5442382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5442845Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-17T11:31:46.5442852Z 
2025-01-17T11:31:46.5443051Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5443243Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5443389Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5443592Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5443787Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5444082Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5444328Z err_msg = None
2025-01-17T11:31:46.5444336Z 
2025-01-17T11:31:46.5444503Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5444626Z         if err_msg is None:
2025-01-17T11:31:46.5444766Z             if left.shape != right.shape:
2025-01-17T11:31:46.5444897Z                 raise_assert_detail(
2025-01-17T11:31:46.5445115Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5445230Z                 )
2025-01-17T11:31:46.5445337Z     
2025-01-17T11:31:46.5445446Z             diff = 0
2025-01-17T11:31:46.5445616Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5445749Z                 # count up differences
2025-01-17T11:31:46.5446026Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5446142Z                     diff += 1
2025-01-17T11:31:46.5446248Z     
2025-01-17T11:31:46.5446387Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5446602Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5446873Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5447045Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5447150Z E           
2025-01-17T11:31:46.5447324Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5447772Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5448249Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5448263Z 
2025-01-17T11:31:46.5448746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5448752Z 
2025-01-17T11:31:46.5449026Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5449033Z 
2025-01-17T11:31:46.5449387Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876cc0>
2025-01-17T11:31:46.5449710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>, attr = 'nu'
2025-01-17T11:31:46.5449717Z 
2025-01-17T11:31:46.5449934Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5450114Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5450234Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5450356Z         try:
2025-01-17T11:31:46.5450568Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5450702Z         except KeyError:
2025-01-17T11:31:46.5450907Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5451005Z     
2025-01-17T11:31:46.5451124Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5451257Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5451374Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5451568Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5451679Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5451808Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5451964Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5451970Z 
2025-01-17T11:31:46.5452160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5452329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5452863Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5453106Z     ???
2025-01-17T11:31:46.5453280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5453286Z 
2025-01-17T11:31:46.5453389Z >   ???
2025-01-17T11:31:46.5453575Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5453685Z E   
2025-01-17T11:31:46.5453885Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5454053Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5454158Z E          ...
2025-01-17T11:31:46.5454284Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5454480Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5454652Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5454756Z E          ...
2025-01-17T11:31:46.5454890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5455092Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5455259Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5455265Z 
2025-01-17T11:31:46.5455397Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5455762Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-17T11:31:46.5455768Z 
2025-01-17T11:31:46.5455968Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5456168Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5456311Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5456515Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5456710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5456859Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5456975Z err_msg = None
2025-01-17T11:31:46.5456980Z 
2025-01-17T11:31:46.5457156Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5457277Z         if err_msg is None:
2025-01-17T11:31:46.5457422Z             if left.shape != right.shape:
2025-01-17T11:31:46.5457551Z                 raise_assert_detail(
2025-01-17T11:31:46.5457776Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5457884Z                 )
2025-01-17T11:31:46.5457987Z     
2025-01-17T11:31:46.5458105Z             diff = 0
2025-01-17T11:31:46.5458279Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5458426Z                 # count up differences
2025-01-17T11:31:46.5458689Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5458810Z                     diff += 1
2025-01-17T11:31:46.5458909Z     
2025-01-17T11:31:46.5459041Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5459249Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5459505Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5459662Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5459775Z E           
2025-01-17T11:31:46.5459936Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5460358Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5460931Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5461065Z 
2025-01-17T11:31:46.5461572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5461578Z 
2025-01-17T11:31:46.5461831Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5461837Z 
2025-01-17T11:31:46.5462181Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876d80>
2025-01-17T11:31:46.5462433Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5462693Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5462700Z 
2025-01-17T11:31:46.5462905Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5463070Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5463183Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5463296Z         try:
2025-01-17T11:31:46.5463508Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5463628Z         except KeyError:
2025-01-17T11:31:46.5463831Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5463935Z     
2025-01-17T11:31:46.5464054Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5464195Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5464321Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5464528Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5464656Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5464791Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5464956Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5464961Z 
2025-01-17T11:31:46.5465149Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5465313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5465548Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5465648Z     ???
2025-01-17T11:31:46.5465818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5465832Z 
2025-01-17T11:31:46.5465926Z >   ???
2025-01-17T11:31:46.5466105Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5466203Z E   
2025-01-17T11:31:46.5466381Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5466538Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5466635Z E          ...
2025-01-17T11:31:46.5466760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5466937Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5467113Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5467217Z E          ...
2025-01-17T11:31:46.5467358Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5467557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5467721Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5467727Z 
2025-01-17T11:31:46.5467862Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5468183Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-17T11:31:46.5468188Z 
2025-01-17T11:31:46.5468378Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5468581Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5468722Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5468922Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5469093Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5469395Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5469631Z err_msg = None
2025-01-17T11:31:46.5469638Z 
2025-01-17T11:31:46.5469803Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5469911Z         if err_msg is None:
2025-01-17T11:31:46.5470053Z             if left.shape != right.shape:
2025-01-17T11:31:46.5470169Z                 raise_assert_detail(
2025-01-17T11:31:46.5470478Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5470647Z                 )
2025-01-17T11:31:46.5470779Z     
2025-01-17T11:31:46.5470958Z             diff = 0
2025-01-17T11:31:46.5471278Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5471504Z                 # count up differences
2025-01-17T11:31:46.5471821Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5472016Z                     diff += 1
2025-01-17T11:31:46.5472163Z     
2025-01-17T11:31:46.5472409Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5472803Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5473180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5473390Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5473578Z E           
2025-01-17T11:31:46.5473759Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5474344Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5474828Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5474841Z 
2025-01-17T11:31:46.5475371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5475377Z 
2025-01-17T11:31:46.5475653Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5475659Z 
2025-01-17T11:31:46.5476053Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876e40>
2025-01-17T11:31:46.5476517Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>, attr = 'f_lu'
2025-01-17T11:31:46.5476607Z 
2025-01-17T11:31:46.5476835Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5477049Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5477307Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5477470Z         try:
2025-01-17T11:31:46.5477768Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5477950Z         except KeyError:
2025-01-17T11:31:46.5478243Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5478364Z     
2025-01-17T11:31:46.5478655Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5478828Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5479064Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5479294Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5479479Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5479701Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5479968Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5479974Z 
2025-01-17T11:31:46.5480226Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5480465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5481002Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5481234Z     ???
2025-01-17T11:31:46.5481486Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5481491Z 
2025-01-17T11:31:46.5481672Z >   ???
2025-01-17T11:31:46.5481897Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5482074Z E   
2025-01-17T11:31:46.5482285Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5482763Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5482907Z E          ...
2025-01-17T11:31:46.5483110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5483331Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5483530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5483778Z E          ...
2025-01-17T11:31:46.5483957Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5484241Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5484433Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5484440Z 
2025-01-17T11:31:46.5484650Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5485044Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-17T11:31:46.5485050Z 
2025-01-17T11:31:46.5485403Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5485632Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5485855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5486089Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5486360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5486598Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5486812Z err_msg = None
2025-01-17T11:31:46.5486817Z 
2025-01-17T11:31:46.5487520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5487733Z         if err_msg is None:
2025-01-17T11:31:46.5487931Z             if left.shape != right.shape:
2025-01-17T11:31:46.5488191Z                 raise_assert_detail(
2025-01-17T11:31:46.5488529Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5488714Z                 )
2025-01-17T11:31:46.5488852Z     
2025-01-17T11:31:46.5489059Z             diff = 0
2025-01-17T11:31:46.5489243Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5489534Z                 # count up differences
2025-01-17T11:31:46.5489825Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5490020Z                     diff += 1
2025-01-17T11:31:46.5490181Z     
2025-01-17T11:31:46.5490372Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5490683Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5491038Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5491232Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5491432Z E           
2025-01-17T11:31:46.5491631Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5492163Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5492940Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5493210Z 
2025-01-17T11:31:46.5493795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5493801Z 
2025-01-17T11:31:46.5494095Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5494101Z 
2025-01-17T11:31:46.5494523Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8775c0>
2025-01-17T11:31:46.5494793Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5495095Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5495101Z 
2025-01-17T11:31:46.5495335Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5495576Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5495729Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5495897Z         try:
2025-01-17T11:31:46.5496203Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5496430Z         except KeyError:
2025-01-17T11:31:46.5496661Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5496833Z     
2025-01-17T11:31:46.5496987Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5497262Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5497459Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5497723Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5497885Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5498088Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5498261Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5498537Z             else:
2025-01-17T11:31:46.5498703Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5498906Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5498958Z 
2025-01-17T11:31:46.5499174Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5499385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5499738Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5499897Z     ???
2025-01-17T11:31:46.5500144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5500150Z 
2025-01-17T11:31:46.5500294Z >   ???
2025-01-17T11:31:46.5500574Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5500717Z E   
2025-01-17T11:31:46.5501074Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5501276Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5501459Z E          ...
2025-01-17T11:31:46.5501623Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5501905Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5502180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5502389Z E          ...
2025-01-17T11:31:46.5502686Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5502955Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5503160Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5503166Z 
2025-01-17T11:31:46.5503700Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5504103Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-17T11:31:46.5504109Z 
2025-01-17T11:31:46.5504373Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5504596Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5504840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5505211Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5505678Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5505873Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5506127Z err_msg = None
2025-01-17T11:31:46.5506132Z 
2025-01-17T11:31:46.5506340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5506531Z         if err_msg is None:
2025-01-17T11:31:46.5506695Z             if left.shape != right.shape:
2025-01-17T11:31:46.5506913Z                 raise_assert_detail(
2025-01-17T11:31:46.5507146Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5507418Z                 )
2025-01-17T11:31:46.5507556Z     
2025-01-17T11:31:46.5507741Z             diff = 0
2025-01-17T11:31:46.5507935Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5508148Z                 # count up differences
2025-01-17T11:31:46.5508513Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5508731Z                     diff += 1
2025-01-17T11:31:46.5508863Z     
2025-01-17T11:31:46.5509032Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5509331Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5509602Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5509929Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5510067Z E           
2025-01-17T11:31:46.5510307Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5510787Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5511285Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5511292Z 
2025-01-17T11:31:46.5511907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5511914Z 
2025-01-17T11:31:46.5512203Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5512209Z 
2025-01-17T11:31:46.5512775Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e877680>
2025-01-17T11:31:46.5513055Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5513226Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5513241Z 
2025-01-17T11:31:46.5513551Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5513818Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5513973Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5514167Z         try:
2025-01-17T11:31:46.5514402Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5514633Z         except KeyError:
2025-01-17T11:31:46.5514877Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5515071Z     
2025-01-17T11:31:46.5515231Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5515399Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5515586Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5515882Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5516105Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5516284Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5516676Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5516947Z             else:
2025-01-17T11:31:46.5517233Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5517471Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5517477Z 
2025-01-17T11:31:46.5517743Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5517946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5518236Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5518352Z     ???
2025-01-17T11:31:46.5518717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5518723Z 
2025-01-17T11:31:46.5518860Z >   ???
2025-01-17T11:31:46.5519194Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5519352Z E   
2025-01-17T11:31:46.5519653Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5519872Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5520069Z E          ...
2025-01-17T11:31:46.5520222Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5520634Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5520849Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5521063Z E          ...
2025-01-17T11:31:46.5521230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5521492Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5521758Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5521765Z 
2025-01-17T11:31:46.5522037Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5522421Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-17T11:31:46.5522427Z 
2025-01-17T11:31:46.5522852Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5523110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5523388Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5523658Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5523961Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5524141Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5524340Z err_msg = None
2025-01-17T11:31:46.5524346Z 
2025-01-17T11:31:46.5524535Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5524855Z         if err_msg is None:
2025-01-17T11:31:46.5525183Z             if left.shape != right.shape:
2025-01-17T11:31:46.5525352Z                 raise_assert_detail(
2025-01-17T11:31:46.5525662Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5525821Z                 )
2025-01-17T11:31:46.5526060Z     
2025-01-17T11:31:46.5526261Z             diff = 0
2025-01-17T11:31:46.5526528Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5526731Z                 # count up differences
2025-01-17T11:31:46.5527149Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5527287Z                     diff += 1
2025-01-17T11:31:46.5527584Z     
2025-01-17T11:31:46.5527758Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5528054Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5528361Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5528587Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5528805Z E           
2025-01-17T11:31:46.5529069Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5529665Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5530309Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5530316Z 
2025-01-17T11:31:46.5530790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5530795Z 
2025-01-17T11:31:46.5531166Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5531172Z 
2025-01-17T11:31:46.5531567Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e877800>
2025-01-17T11:31:46.5531891Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5532030Z attr = 'j_blues'
2025-01-17T11:31:46.5532036Z 
2025-01-17T11:31:46.5532333Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5532511Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5532940Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5533085Z         try:
2025-01-17T11:31:46.5533401Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5533561Z         except KeyError:
2025-01-17T11:31:46.5533837Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5534028Z     
2025-01-17T11:31:46.5534253Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5534430Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5534659Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5534900Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5535154Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5535339Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5535604Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5535744Z             else:
2025-01-17T11:31:46.5535966Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5536413Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5536419Z 
2025-01-17T11:31:46.5536750Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5536949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5537262Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5537395Z     ???
2025-01-17T11:31:46.5537617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5537623Z 
2025-01-17T11:31:46.5537825Z >   ???
2025-01-17T11:31:46.5538146Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5538267Z E   
2025-01-17T11:31:46.5538591Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5538786Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5538918Z E          ...
2025-01-17T11:31:46.5539116Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5539350Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5551297Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5551451Z E          ...
2025-01-17T11:31:46.5551591Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5551802Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5551953Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5551960Z 
2025-01-17T11:31:46.5552087Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5553014Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-17T11:31:46.5553024Z 
2025-01-17T11:31:46.5553247Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5553448Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5553593Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5553786Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5553972Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5554099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5554207Z err_msg = None
2025-01-17T11:31:46.5554213Z 
2025-01-17T11:31:46.5554369Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5554483Z         if err_msg is None:
2025-01-17T11:31:46.5554623Z             if left.shape != right.shape:
2025-01-17T11:31:46.5554748Z                 raise_assert_detail(
2025-01-17T11:31:46.5554957Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5555060Z                 )
2025-01-17T11:31:46.5555151Z     
2025-01-17T11:31:46.5555254Z             diff = 0
2025-01-17T11:31:46.5555407Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5555523Z                 # count up differences
2025-01-17T11:31:46.5555773Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5555875Z                     diff += 1
2025-01-17T11:31:46.5555976Z     
2025-01-17T11:31:46.5556095Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5556290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5556534Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5556704Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5556807Z E           
2025-01-17T11:31:46.5556965Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5557366Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5557766Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5557772Z 
2025-01-17T11:31:46.5558218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5558229Z 
2025-01-17T11:31:46.5558476Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5558482Z 
2025-01-17T11:31:46.5558807Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c5c0>
2025-01-17T11:31:46.5559038Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5559144Z attr = 'lines'
2025-01-17T11:31:46.5559150Z 
2025-01-17T11:31:46.5559342Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5559507Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5559629Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5559731Z         try:
2025-01-17T11:31:46.5559937Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5560045Z         except KeyError:
2025-01-17T11:31:46.5560241Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5560489Z     
2025-01-17T11:31:46.5560613Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5560842Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5560973Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5561158Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5561278Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5561397Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5561550Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5561651Z             else:
2025-01-17T11:31:46.5561792Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5561937Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5561943Z 
2025-01-17T11:31:46.5562119Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5562276Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5562492Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5562723Z     ???
2025-01-17T11:31:46.5562894Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5562905Z 
2025-01-17T11:31:46.5562998Z >   ???
2025-01-17T11:31:46.5563179Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5563275Z E   
2025-01-17T11:31:46.5563449Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5563601Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5563700Z E          ...
2025-01-17T11:31:46.5563821Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5563995Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5564157Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5564249Z E          ...
2025-01-17T11:31:46.5564364Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5564551Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5564713Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5564719Z 
2025-01-17T11:31:46.5564846Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5565296Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-17T11:31:46.5565302Z 
2025-01-17T11:31:46.5565612Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c680>
2025-01-17T11:31:46.5565855Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5565975Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5565980Z 
2025-01-17T11:31:46.5566168Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5566336Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5566461Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5566560Z         try:
2025-01-17T11:31:46.5566755Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5566887Z         except KeyError:
2025-01-17T11:31:46.5567097Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5567198Z     
2025-01-17T11:31:46.5567324Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5567464Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5567588Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5567771Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5567889Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5568025Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5568180Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5568186Z 
2025-01-17T11:31:46.5568360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5568513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5568519Z 
2025-01-17T11:31:46.5568868Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5569133Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5569302Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5569418Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5569634Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5569754Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5569913Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5570021Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5570127Z err_msg = None
2025-01-17T11:31:46.5570132Z 
2025-01-17T11:31:46.5570277Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5570401Z         if err_msg is None:
2025-01-17T11:31:46.5570538Z             if left.shape != right.shape:
2025-01-17T11:31:46.5570676Z                 raise_assert_detail(
2025-01-17T11:31:46.5570896Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5571002Z                 )
2025-01-17T11:31:46.5571099Z     
2025-01-17T11:31:46.5571197Z             diff = 0
2025-01-17T11:31:46.5571366Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5571496Z                 # count up differences
2025-01-17T11:31:46.5571759Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5571865Z                     diff += 1
2025-01-17T11:31:46.5571962Z     
2025-01-17T11:31:46.5572076Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5572266Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5572504Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5572786Z E           AssertionError: Series are different
2025-01-17T11:31:46.5572889Z E           
2025-01-17T11:31:46.5573030Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5573602Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5574118Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5574658Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5574671Z 
2025-01-17T11:31:46.5575135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5575598Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-17T11:31:46.5575604Z 
2025-01-17T11:31:46.5575954Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c740>
2025-01-17T11:31:46.5576212Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5576348Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5576354Z 
2025-01-17T11:31:46.5576742Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5577045Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5577180Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5577287Z         try:
2025-01-17T11:31:46.5577512Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5577633Z         except KeyError:
2025-01-17T11:31:46.5577845Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5577944Z     
2025-01-17T11:31:46.5578067Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5578206Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5578328Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5578519Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5578636Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5578761Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5578912Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5578926Z 
2025-01-17T11:31:46.5579111Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5579271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5579275Z 
2025-01-17T11:31:46.5579469Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5579588Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5579741Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5579853Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5580061Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5580178Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5580336Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5580447Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5580563Z err_msg = None
2025-01-17T11:31:46.5580568Z 
2025-01-17T11:31:46.5580722Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5580839Z         if err_msg is None:
2025-01-17T11:31:46.5580971Z             if left.shape != right.shape:
2025-01-17T11:31:46.5581093Z                 raise_assert_detail(
2025-01-17T11:31:46.5581289Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5581382Z                 )
2025-01-17T11:31:46.5581479Z     
2025-01-17T11:31:46.5581575Z             diff = 0
2025-01-17T11:31:46.5581734Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5581852Z                 # count up differences
2025-01-17T11:31:46.5582102Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5582210Z                     diff += 1
2025-01-17T11:31:46.5582308Z     
2025-01-17T11:31:46.5582425Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5582758Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5583016Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5583161Z E           AssertionError: Series are different
2025-01-17T11:31:46.5583260Z E           
2025-01-17T11:31:46.5583408Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5583993Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5584722Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5585445Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5585459Z 
2025-01-17T11:31:46.5585907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5586313Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-17T11:31:46.5586326Z 
2025-01-17T11:31:46.5586519Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5586717Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5586855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5587056Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5587244Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5587383Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5587498Z err_msg = None
2025-01-17T11:31:46.5587504Z 
2025-01-17T11:31:46.5587681Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5587786Z         if err_msg is None:
2025-01-17T11:31:46.5587928Z             if left.shape != right.shape:
2025-01-17T11:31:46.5588045Z                 raise_assert_detail(
2025-01-17T11:31:46.5588288Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5588401Z                 )
2025-01-17T11:31:46.5588500Z     
2025-01-17T11:31:46.5588620Z             diff = 0
2025-01-17T11:31:46.5588792Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5588929Z                 # count up differences
2025-01-17T11:31:46.5589199Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5589327Z                     diff += 1
2025-01-17T11:31:46.5589438Z     
2025-01-17T11:31:46.5589583Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5589814Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5590114Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5590308Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5590433Z E           
2025-01-17T11:31:46.5590636Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5591130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5591611Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5591621Z 
2025-01-17T11:31:46.5592159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5592166Z 
2025-01-17T11:31:46.5592722Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5592728Z 
2025-01-17T11:31:46.5593207Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c980>
2025-01-17T11:31:46.5593495Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>, attr = 'nu'
2025-01-17T11:31:46.5593501Z 
2025-01-17T11:31:46.5593698Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5593860Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5593982Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5594081Z         try:
2025-01-17T11:31:46.5594279Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5594384Z         except KeyError:
2025-01-17T11:31:46.5594580Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5594669Z     
2025-01-17T11:31:46.5594787Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5594908Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5595042Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5595231Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5595353Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5595471Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5595630Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5595636Z 
2025-01-17T11:31:46.5595809Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5595972Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5596175Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5596267Z     ???
2025-01-17T11:31:46.5596430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5596436Z 
2025-01-17T11:31:46.5596527Z >   ???
2025-01-17T11:31:46.5596707Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5596809Z E   
2025-01-17T11:31:46.5596995Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5597155Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5597263Z E          ...
2025-01-17T11:31:46.5597393Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5597593Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5597764Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5597876Z E          ...
2025-01-17T11:31:46.5597994Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5598176Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5598337Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5598343Z 
2025-01-17T11:31:46.5598483Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5598934Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-17T11:31:46.5598947Z 
2025-01-17T11:31:46.5599164Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5599376Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5599531Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5599743Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5599921Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5600013Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5600090Z err_msg = None
2025-01-17T11:31:46.5600094Z 
2025-01-17T11:31:46.5600200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5600278Z         if err_msg is None:
2025-01-17T11:31:46.5600365Z             if left.shape != right.shape:
2025-01-17T11:31:46.5600445Z                 raise_assert_detail(
2025-01-17T11:31:46.5600826Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5600895Z                 )
2025-01-17T11:31:46.5600965Z     
2025-01-17T11:31:46.5601033Z             diff = 0
2025-01-17T11:31:46.5601144Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5601225Z                 # count up differences
2025-01-17T11:31:46.5601394Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5601465Z                     diff += 1
2025-01-17T11:31:46.5601532Z     
2025-01-17T11:31:46.5601616Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5601753Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5601912Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5602026Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5602097Z E           
2025-01-17T11:31:46.5602207Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5602464Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5602967Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5602974Z 
2025-01-17T11:31:46.5603286Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5603290Z 
2025-01-17T11:31:46.5603467Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5603477Z 
2025-01-17T11:31:46.5603707Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ca40>
2025-01-17T11:31:46.5603873Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5603946Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5603950Z 
2025-01-17T11:31:46.5604086Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5604197Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5604278Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5604344Z         try:
2025-01-17T11:31:46.5604485Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5604561Z         except KeyError:
2025-01-17T11:31:46.5604697Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5604761Z     
2025-01-17T11:31:46.5604849Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5604944Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5605042Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5605170Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5605254Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5605337Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5605446Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5605451Z 
2025-01-17T11:31:46.5605570Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5605686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5605827Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5605891Z     ???
2025-01-17T11:31:46.5606000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5606004Z 
2025-01-17T11:31:46.5606065Z >   ???
2025-01-17T11:31:46.5606195Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5606399Z E   
2025-01-17T11:31:46.5606628Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5606738Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5606805Z E          ...
2025-01-17T11:31:46.5606899Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5607020Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5607129Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5607194Z E          ...
2025-01-17T11:31:46.5607280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5607396Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5607504Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5607508Z 
2025-01-17T11:31:46.5607594Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5607856Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-17T11:31:46.5607869Z 
2025-01-17T11:31:46.5608000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5608132Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5608231Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5608364Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5608479Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5608568Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5608637Z err_msg = None
2025-01-17T11:31:46.5608641Z 
2025-01-17T11:31:46.5608756Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5608832Z         if err_msg is None:
2025-01-17T11:31:46.5608924Z             if left.shape != right.shape:
2025-01-17T11:31:46.5609007Z                 raise_assert_detail(
2025-01-17T11:31:46.5609164Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5609232Z                 )
2025-01-17T11:31:46.5609299Z     
2025-01-17T11:31:46.5609366Z             diff = 0
2025-01-17T11:31:46.5609479Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5609561Z                 # count up differences
2025-01-17T11:31:46.5609725Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5609802Z                     diff += 1
2025-01-17T11:31:46.5609868Z     
2025-01-17T11:31:46.5609956Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5610085Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5610253Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5610359Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5610436Z E           
2025-01-17T11:31:46.5610543Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5610804Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5611062Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5611075Z 
2025-01-17T11:31:46.5611376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5611476Z 
2025-01-17T11:31:46.5611725Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5611730Z 
2025-01-17T11:31:46.5611948Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89cb00>
2025-01-17T11:31:46.5612146Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>, attr = 'f_lu'
2025-01-17T11:31:46.5612150Z 
2025-01-17T11:31:46.5612281Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5612393Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5612471Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5612711Z         try:
2025-01-17T11:31:46.5612861Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5612938Z         except KeyError:
2025-01-17T11:31:46.5613078Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5613145Z     
2025-01-17T11:31:46.5613230Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5613324Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5613416Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5613543Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5613628Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5613710Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5613823Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5613828Z 
2025-01-17T11:31:46.5613950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5614066Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5614206Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5614277Z     ???
2025-01-17T11:31:46.5614379Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5614383Z 
2025-01-17T11:31:46.5614451Z >   ???
2025-01-17T11:31:46.5614577Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5614645Z E   
2025-01-17T11:31:46.5614770Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5614879Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5614946Z E          ...
2025-01-17T11:31:46.5615030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5615157Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5615263Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5615334Z E          ...
2025-01-17T11:31:46.5615415Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5615539Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5615638Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5615641Z 
2025-01-17T11:31:46.5615730Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5616044Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-17T11:31:46.5616056Z 
2025-01-17T11:31:46.5616281Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d100>
2025-01-17T11:31:46.5616440Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5616532Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.5616536Z 
2025-01-17T11:31:46.5616670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5616783Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5616861Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5616933Z         try:
2025-01-17T11:31:46.5617066Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5617147Z         except KeyError:
2025-01-17T11:31:46.5617277Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5617346Z     
2025-01-17T11:31:46.5617424Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5617638Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5617818Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5617952Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5618030Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5618113Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5618222Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5618290Z             else:
2025-01-17T11:31:46.5618384Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5618496Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5618500Z 
2025-01-17T11:31:46.5618622Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5618728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5618868Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5618938Z     ???
2025-01-17T11:31:46.5619048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5619052Z 
2025-01-17T11:31:46.5619114Z >   ???
2025-01-17T11:31:46.5619288Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.5619350Z E   
2025-01-17T11:31:46.5619510Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.5619870Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5624638Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.5629335Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.5629618Z E   At positional index 183, first diff: 0.9714108054153513 != 0.9713105029025074
2025-01-17T11:31:46.5629623Z 
2025-01-17T11:31:46.5629705Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5630005Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-17T11:31:46.5630009Z 
2025-01-17T11:31:46.5630131Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5630258Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5630358Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5630491Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5630608Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5630701Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5630772Z err_msg = None
2025-01-17T11:31:46.5630775Z 
2025-01-17T11:31:46.5630879Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5630959Z         if err_msg is None:
2025-01-17T11:31:46.5631049Z             if left.shape != right.shape:
2025-01-17T11:31:46.5631131Z                 raise_assert_detail(
2025-01-17T11:31:46.5631272Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5631343Z                 )
2025-01-17T11:31:46.5631407Z     
2025-01-17T11:31:46.5631484Z             diff = 0
2025-01-17T11:31:46.5631593Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5631687Z                 # count up differences
2025-01-17T11:31:46.5631848Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5631926Z                     diff += 1
2025-01-17T11:31:46.5631990Z     
2025-01-17T11:31:46.5632077Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5632207Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5632372Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5632479Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5632708Z E           
2025-01-17T11:31:46.5632842Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5633230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5633596Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5633601Z 
2025-01-17T11:31:46.5633901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5633904Z 
2025-01-17T11:31:46.5634064Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5634067Z 
2025-01-17T11:31:46.5634287Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d1c0>
2025-01-17T11:31:46.5634443Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5634541Z attr = 'previous_beta_sobolev'
2025-01-17T11:31:46.5634545Z 
2025-01-17T11:31:46.5634676Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5634791Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5634867Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5634938Z         try:
2025-01-17T11:31:46.5635069Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5635149Z         except KeyError:
2025-01-17T11:31:46.5635280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5635349Z     
2025-01-17T11:31:46.5635428Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5635522Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5635605Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5635725Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5635815Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5635897Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5636008Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5636074Z             else:
2025-01-17T11:31:46.5636170Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5636270Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5636274Z 
2025-01-17T11:31:46.5636398Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5636504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5636648Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5636715Z     ???
2025-01-17T11:31:46.5636825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5636828Z 
2025-01-17T11:31:46.5636892Z >   ???
2025-01-17T11:31:46.5637021Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5637087Z E   
2025-01-17T11:31:46.5637217Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5637328Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5637406Z E          ...
2025-01-17T11:31:46.5637489Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5637618Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5637724Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5637790Z E          ...
2025-01-17T11:31:46.5637876Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5637991Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5638098Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5638102Z 
2025-01-17T11:31:46.5638183Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5638452Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-17T11:31:46.5638558Z 
2025-01-17T11:31:46.5638779Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5638906Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5638994Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5639125Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5639238Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5639330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5639401Z err_msg = None
2025-01-17T11:31:46.5639405Z 
2025-01-17T11:31:46.5639514Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5639590Z         if err_msg is None:
2025-01-17T11:31:46.5639684Z             if left.shape != right.shape:
2025-01-17T11:31:46.5639763Z                 raise_assert_detail(
2025-01-17T11:31:46.5639916Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5639980Z                 )
2025-01-17T11:31:46.5640043Z     
2025-01-17T11:31:46.5640107Z             diff = 0
2025-01-17T11:31:46.5640209Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5640289Z                 # count up differences
2025-01-17T11:31:46.5640456Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5640527Z                     diff += 1
2025-01-17T11:31:46.5640596Z     
2025-01-17T11:31:46.5640677Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5640802Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5640967Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5641071Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5641147Z E           
2025-01-17T11:31:46.5641249Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5641508Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5641770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5641774Z 
2025-01-17T11:31:46.5642063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5642067Z 
2025-01-17T11:31:46.5642235Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5642242Z 
2025-01-17T11:31:46.5642457Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d280>
2025-01-17T11:31:46.5642815Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5642896Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5642901Z 
2025-01-17T11:31:46.5643037Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5643145Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5643226Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5643291Z         try:
2025-01-17T11:31:46.5643425Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5643499Z         except KeyError:
2025-01-17T11:31:46.5643634Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5643699Z     
2025-01-17T11:31:46.5643778Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5644008Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5644191Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5644324Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5644403Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5644492Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5644593Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5644666Z             else:
2025-01-17T11:31:46.5644757Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5644861Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5644865Z 
2025-01-17T11:31:46.5644982Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5645093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5645227Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5645298Z     ???
2025-01-17T11:31:46.5645413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5645422Z 
2025-01-17T11:31:46.5645493Z >   ???
2025-01-17T11:31:46.5645611Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5645680Z E   
2025-01-17T11:31:46.5645804Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5645916Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5645983Z E          ...
2025-01-17T11:31:46.5646068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5646196Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5646305Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5646378Z E          ...
2025-01-17T11:31:46.5646455Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5646573Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5646669Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5646678Z 
2025-01-17T11:31:46.5646771Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5647037Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-17T11:31:46.5647041Z 
2025-01-17T11:31:46.5647171Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5647291Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5647386Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5647513Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5647634Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5647722Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5647798Z err_msg = None
2025-01-17T11:31:46.5647806Z 
2025-01-17T11:31:46.5647909Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5647992Z         if err_msg is None:
2025-01-17T11:31:46.5648081Z             if left.shape != right.shape:
2025-01-17T11:31:46.5648166Z                 raise_assert_detail(
2025-01-17T11:31:46.5648301Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5648372Z                 )
2025-01-17T11:31:46.5648435Z     
2025-01-17T11:31:46.5648509Z             diff = 0
2025-01-17T11:31:46.5648616Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5648703Z                 # count up differences
2025-01-17T11:31:46.5648865Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5648937Z                     diff += 1
2025-01-17T11:31:46.5649005Z     
2025-01-17T11:31:46.5649086Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5649221Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5649567Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5649682Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5649748Z E           
2025-01-17T11:31:46.5649859Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5650114Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5650375Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5650387Z 
2025-01-17T11:31:46.5650692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5650696Z 
2025-01-17T11:31:46.5650858Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5650862Z 
2025-01-17T11:31:46.5651082Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d340>
2025-01-17T11:31:46.5651242Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5651318Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5651322Z 
2025-01-17T11:31:46.5651452Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5651562Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5651641Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5651707Z         try:
2025-01-17T11:31:46.5651845Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5651924Z         except KeyError:
2025-01-17T11:31:46.5652066Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5652128Z     
2025-01-17T11:31:46.5652211Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5652297Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5652383Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5652507Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5652697Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5652783Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5652888Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5652954Z             else:
2025-01-17T11:31:46.5653049Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5653149Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5653153Z 
2025-01-17T11:31:46.5653278Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5653396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5653538Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5653603Z     ???
2025-01-17T11:31:46.5653711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5653715Z 
2025-01-17T11:31:46.5653779Z >   ???
2025-01-17T11:31:46.5653902Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5653966Z E   
2025-01-17T11:31:46.5654088Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5654198Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5654265Z E          ...
2025-01-17T11:31:46.5654352Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5654472Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5654581Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5654772Z E          ...
2025-01-17T11:31:46.5654974Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5655093Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5655191Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5655195Z 
2025-01-17T11:31:46.5655276Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5655534Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-17T11:31:46.5655538Z 
2025-01-17T11:31:46.5655658Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5655784Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5655874Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5656003Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5656126Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5656218Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5656294Z err_msg = None
2025-01-17T11:31:46.5656297Z 
2025-01-17T11:31:46.5656405Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5656481Z         if err_msg is None:
2025-01-17T11:31:46.5656573Z             if left.shape != right.shape:
2025-01-17T11:31:46.5656653Z                 raise_assert_detail(
2025-01-17T11:31:46.5656794Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5656859Z                 )
2025-01-17T11:31:46.5656927Z     
2025-01-17T11:31:46.5656994Z             diff = 0
2025-01-17T11:31:46.5657096Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5657181Z                 # count up differences
2025-01-17T11:31:46.5657342Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5657427Z                     diff += 1
2025-01-17T11:31:46.5657495Z     
2025-01-17T11:31:46.5657581Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5657708Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5657874Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5657977Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5658047Z E           
2025-01-17T11:31:46.5658149Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5658404Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5658667Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5658676Z 
2025-01-17T11:31:46.5658970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5658974Z 
2025-01-17T11:31:46.5659136Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5659145Z 
2025-01-17T11:31:46.5659360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d4c0>
2025-01-17T11:31:46.5659514Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5659585Z attr = 'j_blues'
2025-01-17T11:31:46.5659589Z 
2025-01-17T11:31:46.5659713Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5659915Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5660067Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5660139Z         try:
2025-01-17T11:31:46.5660271Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5660352Z         except KeyError:
2025-01-17T11:31:46.5660481Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5660549Z     
2025-01-17T11:31:46.5660627Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5660716Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5660798Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5660925Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5661003Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5661094Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5661195Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5661264Z             else:
2025-01-17T11:31:46.5661358Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5661463Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5661472Z 
2025-01-17T11:31:46.5661589Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5661695Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5661835Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5661900Z     ???
2025-01-17T11:31:46.5662007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5662011Z 
2025-01-17T11:31:46.5662075Z >   ???
2025-01-17T11:31:46.5662199Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5662263Z E   
2025-01-17T11:31:46.5662388Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5662489Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5662663Z E          ...
2025-01-17T11:31:46.5662756Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5662885Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5662986Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5663055Z E          ...
2025-01-17T11:31:46.5663134Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5663254Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5663351Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5663355Z 
2025-01-17T11:31:46.5663441Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5663687Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-17T11:31:46.5663690Z 
2025-01-17T11:31:46.5663813Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5663931Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5664033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5664159Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5664276Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5664363Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5664436Z err_msg = None
2025-01-17T11:31:46.5664440Z 
2025-01-17T11:31:46.5664543Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5664622Z         if err_msg is None:
2025-01-17T11:31:46.5664708Z             if left.shape != right.shape:
2025-01-17T11:31:46.5664785Z                 raise_assert_detail(
2025-01-17T11:31:46.5664922Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5664986Z                 )
2025-01-17T11:31:46.5665054Z     
2025-01-17T11:31:46.5665121Z             diff = 0
2025-01-17T11:31:46.5665350Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5665549Z                 # count up differences
2025-01-17T11:31:46.5665717Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5665787Z                     diff += 1
2025-01-17T11:31:46.5665858Z     
2025-01-17T11:31:46.5665937Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5666069Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5666227Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5666335Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5666403Z E           
2025-01-17T11:31:46.5666511Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5666770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5667040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5667044Z 
2025-01-17T11:31:46.5667332Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5667336Z 
2025-01-17T11:31:46.5667500Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5667504Z 
2025-01-17T11:31:46.5667717Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e240>
2025-01-17T11:31:46.5667883Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5667955Z attr = 'lines'
2025-01-17T11:31:46.5667959Z 
2025-01-17T11:31:46.5668092Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5668198Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5668282Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5668347Z         try:
2025-01-17T11:31:46.5668482Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5668559Z         except KeyError:
2025-01-17T11:31:46.5668692Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5668756Z     
2025-01-17T11:31:46.5668843Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5668931Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5669017Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5669138Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5669231Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5669314Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5669418Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5669489Z             else:
2025-01-17T11:31:46.5669578Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5669682Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5669685Z 
2025-01-17T11:31:46.5669802Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5669911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5670047Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5670112Z     ???
2025-01-17T11:31:46.5670212Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5670216Z 
2025-01-17T11:31:46.5670281Z >   ???
2025-01-17T11:31:46.5670396Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5670552Z E   
2025-01-17T11:31:46.5670670Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5670848Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5670917Z E          ...
2025-01-17T11:31:46.5671001Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5671121Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5671230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5671297Z E          ...
2025-01-17T11:31:46.5671383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5671499Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5671593Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5671602Z 
2025-01-17T11:31:46.5671683Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5671963Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-17T11:31:46.5671977Z 
2025-01-17T11:31:46.5672192Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e300>
2025-01-17T11:31:46.5672350Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5672431Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5672434Z 
2025-01-17T11:31:46.5673105Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5673236Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5673313Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5673385Z         try:
2025-01-17T11:31:46.5673514Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5673592Z         except KeyError:
2025-01-17T11:31:46.5673718Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5673785Z     
2025-01-17T11:31:46.5673866Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5673955Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5674044Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5674176Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5674255Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5674340Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5674441Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5674445Z 
2025-01-17T11:31:46.5674565Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5674668Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5674672Z 
2025-01-17T11:31:46.5674804Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5674885Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5674990Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5675064Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5675205Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5675285Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5675388Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5675461Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5675531Z err_msg = None
2025-01-17T11:31:46.5675539Z 
2025-01-17T11:31:46.5675641Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5675714Z         if err_msg is None:
2025-01-17T11:31:46.5675812Z             if left.shape != right.shape:
2025-01-17T11:31:46.5675888Z                 raise_assert_detail(
2025-01-17T11:31:46.5676024Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5676090Z                 )
2025-01-17T11:31:46.5676159Z     
2025-01-17T11:31:46.5676226Z             diff = 0
2025-01-17T11:31:46.5676334Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5676543Z                 # count up differences
2025-01-17T11:31:46.5676818Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5676894Z                     diff += 1
2025-01-17T11:31:46.5676962Z     
2025-01-17T11:31:46.5677040Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5677173Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5677331Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5677435Z E           AssertionError: Series are different
2025-01-17T11:31:46.5677500Z E           
2025-01-17T11:31:46.5677594Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5677962Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5678301Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5678621Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5678629Z 
2025-01-17T11:31:46.5678929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5679210Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-17T11:31:46.5679214Z 
2025-01-17T11:31:46.5679431Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e3c0>
2025-01-17T11:31:46.5679587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5679676Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5679680Z 
2025-01-17T11:31:46.5679805Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5679916Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5679994Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5680064Z         try:
2025-01-17T11:31:46.5680195Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5680272Z         except KeyError:
2025-01-17T11:31:46.5680407Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5680477Z     
2025-01-17T11:31:46.5680557Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5680650Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5680730Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5680857Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5680935Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5681023Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5681124Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5681128Z 
2025-01-17T11:31:46.5681248Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5681352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5681356Z 
2025-01-17T11:31:46.5681485Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5681650Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5681828Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5681906Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5682035Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5682116Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5682212Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5682288Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5682357Z err_msg = None
2025-01-17T11:31:46.5682361Z 
2025-01-17T11:31:46.5682466Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5682698Z         if err_msg is None:
2025-01-17T11:31:46.5682834Z             if left.shape != right.shape:
2025-01-17T11:31:46.5682913Z                 raise_assert_detail(
2025-01-17T11:31:46.5683048Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5683126Z                 )
2025-01-17T11:31:46.5683201Z     
2025-01-17T11:31:46.5683269Z             diff = 0
2025-01-17T11:31:46.5683381Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5683461Z                 # count up differences
2025-01-17T11:31:46.5683623Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5683694Z                     diff += 1
2025-01-17T11:31:46.5683761Z     
2025-01-17T11:31:46.5683841Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5683969Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5684131Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5684227Z E           AssertionError: Series are different
2025-01-17T11:31:46.5684299Z E           
2025-01-17T11:31:46.5684392Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5684783Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5685152Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5685880Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5685896Z 
2025-01-17T11:31:46.5686403Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5686750Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-17T11:31:46.5686755Z 
2025-01-17T11:31:46.5686884Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5687003Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5687099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5687369Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5687607Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5687698Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5687775Z err_msg = None
2025-01-17T11:31:46.5687779Z 
2025-01-17T11:31:46.5687881Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5687962Z         if err_msg is None:
2025-01-17T11:31:46.5688049Z             if left.shape != right.shape:
2025-01-17T11:31:46.5688134Z                 raise_assert_detail(
2025-01-17T11:31:46.5688266Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5688335Z                 )
2025-01-17T11:31:46.5688398Z     
2025-01-17T11:31:46.5688469Z             diff = 0
2025-01-17T11:31:46.5688572Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5688656Z                 # count up differences
2025-01-17T11:31:46.5688826Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5688901Z                     diff += 1
2025-01-17T11:31:46.5688965Z     
2025-01-17T11:31:46.5689045Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5689177Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5689338Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5689449Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5689515Z E           
2025-01-17T11:31:46.5689629Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5689883Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5690150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5690155Z 
2025-01-17T11:31:46.5690444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5690448Z 
2025-01-17T11:31:46.5690609Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5690614Z 
2025-01-17T11:31:46.5690832Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e600>
2025-01-17T11:31:46.5691022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>, attr = 'nu'
2025-01-17T11:31:46.5691026Z 
2025-01-17T11:31:46.5691163Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5691277Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5691360Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5691427Z         try:
2025-01-17T11:31:46.5691565Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5691638Z         except KeyError:
2025-01-17T11:31:46.5691770Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5691834Z     
2025-01-17T11:31:46.5691915Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5692007Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5692089Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5692217Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5692295Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5692385Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5692489Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5692715Z 
2025-01-17T11:31:46.5692970Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5693088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5693236Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5693301Z     ???
2025-01-17T11:31:46.5693411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5693415Z 
2025-01-17T11:31:46.5693477Z >   ???
2025-01-17T11:31:46.5693607Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5693670Z E   
2025-01-17T11:31:46.5693804Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5693913Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5693987Z E          ...
2025-01-17T11:31:46.5694070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5694200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5694320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5694392Z E          ...
2025-01-17T11:31:46.5694471Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5694588Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5694691Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5694695Z 
2025-01-17T11:31:46.5694778Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5695043Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-17T11:31:46.5695048Z 
2025-01-17T11:31:46.5695168Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5695291Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5695378Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5695510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5695628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5695720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5695790Z err_msg = None
2025-01-17T11:31:46.5695793Z 
2025-01-17T11:31:46.5695902Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5695976Z         if err_msg is None:
2025-01-17T11:31:46.5696071Z             if left.shape != right.shape:
2025-01-17T11:31:46.5696150Z                 raise_assert_detail(
2025-01-17T11:31:46.5696290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5696357Z                 )
2025-01-17T11:31:46.5696425Z     
2025-01-17T11:31:46.5696492Z             diff = 0
2025-01-17T11:31:46.5696601Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5696687Z                 # count up differences
2025-01-17T11:31:46.5696855Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5696926Z                     diff += 1
2025-01-17T11:31:46.5696999Z     
2025-01-17T11:31:46.5697081Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5697211Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5697379Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5697484Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5697557Z E           
2025-01-17T11:31:46.5697662Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5697921Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5698365Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5698370Z 
2025-01-17T11:31:46.5698667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5698671Z 
2025-01-17T11:31:46.5698846Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5698850Z 
2025-01-17T11:31:46.5699067Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e6c0>
2025-01-17T11:31:46.5699229Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5699303Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5699312Z 
2025-01-17T11:31:46.5699451Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5699559Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5699640Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5699706Z         try:
2025-01-17T11:31:46.5699844Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5699918Z         except KeyError:
2025-01-17T11:31:46.5700051Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5700114Z     
2025-01-17T11:31:46.5700194Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5700286Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5700762Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5700890Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5700968Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5701057Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5701165Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5701170Z 
2025-01-17T11:31:46.5701296Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5701402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5701543Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5701610Z     ???
2025-01-17T11:31:46.5701719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5701723Z 
2025-01-17T11:31:46.5701787Z >   ???
2025-01-17T11:31:46.5701914Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5701977Z E   
2025-01-17T11:31:46.5702105Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5702208Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5702279Z E          ...
2025-01-17T11:31:46.5702359Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5702485Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5702695Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5702769Z E          ...
2025-01-17T11:31:46.5702853Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5702971Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5703072Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5703076Z 
2025-01-17T11:31:46.5703161Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5703558Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-17T11:31:46.5703566Z 
2025-01-17T11:31:46.5703777Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5703997Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5704146Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5704680Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5704885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5705037Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5705160Z err_msg = None
2025-01-17T11:31:46.5705166Z 
2025-01-17T11:31:46.5705342Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5705469Z         if err_msg is None:
2025-01-17T11:31:46.5705622Z             if left.shape != right.shape:
2025-01-17T11:31:46.5705751Z                 raise_assert_detail(
2025-01-17T11:31:46.5705986Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5706095Z                 )
2025-01-17T11:31:46.5706207Z     
2025-01-17T11:31:46.5706318Z             diff = 0
2025-01-17T11:31:46.5706497Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5706636Z                 # count up differences
2025-01-17T11:31:46.5706923Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5707042Z                     diff += 1
2025-01-17T11:31:46.5707156Z     
2025-01-17T11:31:46.5707301Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5707445Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5707606Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5707711Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5707783Z E           
2025-01-17T11:31:46.5707887Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5708151Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5708417Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5708422Z 
2025-01-17T11:31:46.5708716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5708720Z 
2025-01-17T11:31:46.5708884Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5708888Z 
2025-01-17T11:31:46.5709102Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e780>
2025-01-17T11:31:46.5709305Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>, attr = 'f_lu'
2025-01-17T11:31:46.5709314Z 
2025-01-17T11:31:46.5709447Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5709559Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5709637Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5709708Z         try:
2025-01-17T11:31:46.5709840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5709919Z         except KeyError:
2025-01-17T11:31:46.5710050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5710117Z     
2025-01-17T11:31:46.5710198Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5710288Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5710386Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5710514Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5710598Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5710681Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5710905Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5710985Z 
2025-01-17T11:31:46.5711105Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5711215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5711350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5711426Z     ???
2025-01-17T11:31:46.5711525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5711529Z 
2025-01-17T11:31:46.5711597Z >   ???
2025-01-17T11:31:46.5711716Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5711784Z E   
2025-01-17T11:31:46.5711906Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5712013Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5712081Z E          ...
2025-01-17T11:31:46.5712168Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5712297Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5712410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5712476Z E          ...
2025-01-17T11:31:46.5712669Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5712790Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5712889Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5712903Z 
2025-01-17T11:31:46.5712985Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5713282Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-17T11:31:46.5713292Z 
2025-01-17T11:31:46.5713504Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ed80>
2025-01-17T11:31:46.5713668Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5713754Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.5713763Z 
2025-01-17T11:31:46.5713893Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5714002Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5714079Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5714150Z         try:
2025-01-17T11:31:46.5714280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5714359Z         except KeyError:
2025-01-17T11:31:46.5714488Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5714557Z     
2025-01-17T11:31:46.5714635Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5714726Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5714807Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5714935Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5715013Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5715099Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5715206Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5715280Z             else:
2025-01-17T11:31:46.5715367Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5715472Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5715475Z 
2025-01-17T11:31:46.5715591Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5715698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5715833Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5715901Z     ???
2025-01-17T11:31:46.5716005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5716009Z 
2025-01-17T11:31:46.5716071Z >   ???
2025-01-17T11:31:46.5716245Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.5716306Z E   
2025-01-17T11:31:46.5716467Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.5717050Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5721936Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5727124Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5727418Z E   At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.5727424Z 
2025-01-17T11:31:46.5727507Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5727787Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-17T11:31:46.5727792Z 
2025-01-17T11:31:46.5727912Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5728038Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5728131Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5728262Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5728392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5728484Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5728556Z err_msg = None
2025-01-17T11:31:46.5728560Z 
2025-01-17T11:31:46.5728677Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5728752Z         if err_msg is None:
2025-01-17T11:31:46.5728844Z             if left.shape != right.shape:
2025-01-17T11:31:46.5728921Z                 raise_assert_detail(
2025-01-17T11:31:46.5729064Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5729129Z                 )
2025-01-17T11:31:46.5729200Z     
2025-01-17T11:31:46.5729268Z             diff = 0
2025-01-17T11:31:46.5729371Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5729457Z                 # count up differences
2025-01-17T11:31:46.5729619Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5729702Z                     diff += 1
2025-01-17T11:31:46.5729766Z     
2025-01-17T11:31:46.5729852Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5729980Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5730144Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5730251Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5730322Z E           
2025-01-17T11:31:46.5730427Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5730690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5730951Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5730955Z 
2025-01-17T11:31:46.5731253Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5731257Z 
2025-01-17T11:31:46.5731424Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5731428Z 
2025-01-17T11:31:46.5731642Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ee40>
2025-01-17T11:31:46.5731804Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5731886Z attr = 'previous_beta_sobolev'
2025-01-17T11:31:46.5731890Z 
2025-01-17T11:31:46.5732023Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5732297Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5732376Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5732447Z         try:
2025-01-17T11:31:46.5732684Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5732765Z         except KeyError:
2025-01-17T11:31:46.5732895Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5732962Z     
2025-01-17T11:31:46.5733041Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5733132Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5733213Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5733339Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5733418Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5733505Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5733607Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5733684Z             else:
2025-01-17T11:31:46.5733777Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5733881Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5733885Z 
2025-01-17T11:31:46.5734003Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5734114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5734252Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5734316Z     ???
2025-01-17T11:31:46.5734423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5734427Z 
2025-01-17T11:31:46.5734491Z >   ???
2025-01-17T11:31:46.5734615Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5734679Z E   
2025-01-17T11:31:46.5734804Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5734906Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5734983Z E          ...
2025-01-17T11:31:46.5735069Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5735194Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5735308Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5735380Z E          ...
2025-01-17T11:31:46.5735466Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5735592Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5735689Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5735693Z 
2025-01-17T11:31:46.5735781Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5736040Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-17T11:31:46.5736044Z 
2025-01-17T11:31:46.5736173Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5736298Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5736405Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5736531Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5736653Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5736740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5736817Z err_msg = None
2025-01-17T11:31:46.5736820Z 
2025-01-17T11:31:46.5736925Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5737005Z         if err_msg is None:
2025-01-17T11:31:46.5737095Z             if left.shape != right.shape:
2025-01-17T11:31:46.5737177Z                 raise_assert_detail(
2025-01-17T11:31:46.5737318Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5737383Z                 )
2025-01-17T11:31:46.5737590Z     
2025-01-17T11:31:46.5737658Z             diff = 0
2025-01-17T11:31:46.5737873Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5737957Z                 # count up differences
2025-01-17T11:31:46.5738128Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5738200Z                     diff += 1
2025-01-17T11:31:46.5738267Z     
2025-01-17T11:31:46.5738351Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5738485Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5738646Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5738756Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5738822Z E           
2025-01-17T11:31:46.5738941Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5739202Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5739465Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5739470Z 
2025-01-17T11:31:46.5739763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5739767Z 
2025-01-17T11:31:46.5739936Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5739940Z 
2025-01-17T11:31:46.5740153Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ef00>
2025-01-17T11:31:46.5740327Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5740403Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5740407Z 
2025-01-17T11:31:46.5740547Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5740656Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5740740Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5740820Z         try:
2025-01-17T11:31:46.5741069Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5741198Z         except KeyError:
2025-01-17T11:31:46.5741419Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5741524Z     
2025-01-17T11:31:46.5741662Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5741805Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5741945Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5742153Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5742249Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5742338Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5742449Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5742516Z             else:
2025-01-17T11:31:46.5742704Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5742811Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5742815Z 
2025-01-17T11:31:46.5742934Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5743049Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5743188Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5743260Z     ???
2025-01-17T11:31:46.5743360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5743364Z 
2025-01-17T11:31:46.5743429Z >   ???
2025-01-17T11:31:46.5743554Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5743761Z E   
2025-01-17T11:31:46.5743985Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5744097Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5744164Z E          ...
2025-01-17T11:31:46.5744250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5744373Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5744482Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5744546Z E          ...
2025-01-17T11:31:46.5744632Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5744749Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5744855Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5744860Z 
2025-01-17T11:31:46.5744943Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5745207Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-17T11:31:46.5745216Z 
2025-01-17T11:31:46.5745345Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5745469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5745558Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5745686Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5745801Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5745891Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5745959Z err_msg = None
2025-01-17T11:31:46.5745963Z 
2025-01-17T11:31:46.5746070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5746144Z         if err_msg is None:
2025-01-17T11:31:46.5746232Z             if left.shape != right.shape:
2025-01-17T11:31:46.5746319Z                 raise_assert_detail(
2025-01-17T11:31:46.5746462Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5746533Z                 )
2025-01-17T11:31:46.5746594Z     
2025-01-17T11:31:46.5746665Z             diff = 0
2025-01-17T11:31:46.5746769Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5746856Z                 # count up differences
2025-01-17T11:31:46.5747018Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5747094Z                     diff += 1
2025-01-17T11:31:46.5747157Z     
2025-01-17T11:31:46.5747244Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5747371Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5747538Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5747643Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5747719Z E           
2025-01-17T11:31:46.5747827Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5748088Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5748342Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5748346Z 
2025-01-17T11:31:46.5748642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5748733Z 
2025-01-17T11:31:46.5748975Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5748980Z 
2025-01-17T11:31:46.5749200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89efc0>
2025-01-17T11:31:46.5749356Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5749435Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5749439Z 
2025-01-17T11:31:46.5749566Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5749680Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5749759Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5749828Z         try:
2025-01-17T11:31:46.5749960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5750041Z         except KeyError:
2025-01-17T11:31:46.5750171Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5750240Z     
2025-01-17T11:31:46.5750324Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5750421Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5750505Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5750628Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5750712Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5750796Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5750904Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5751181Z             else:
2025-01-17T11:31:46.5751342Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5751514Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5751518Z 
2025-01-17T11:31:46.5751668Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5751845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5752000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5752224Z     ???
2025-01-17T11:31:46.5752368Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5752373Z 
2025-01-17T11:31:46.5752505Z >   ???
2025-01-17T11:31:46.5752814Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5752932Z E   
2025-01-17T11:31:46.5753154Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5753342Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5753442Z E          ...
2025-01-17T11:31:46.5753596Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5753752Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5753973Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5754088Z E          ...
2025-01-17T11:31:46.5754235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5754385Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5754584Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5754593Z 
2025-01-17T11:31:46.5754695Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5755078Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-17T11:31:46.5755082Z 
2025-01-17T11:31:46.5755237Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5755427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5755550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5755747Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5756018Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5756159Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5762849Z err_msg = None
2025-01-17T11:31:46.5762864Z 
2025-01-17T11:31:46.5763276Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5763417Z         if err_msg is None:
2025-01-17T11:31:46.5763568Z             if left.shape != right.shape:
2025-01-17T11:31:46.5763701Z                 raise_assert_detail(
2025-01-17T11:31:46.5763939Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5764021Z                 )
2025-01-17T11:31:46.5764083Z     
2025-01-17T11:31:46.5764152Z             diff = 0
2025-01-17T11:31:46.5764266Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5764351Z                 # count up differences
2025-01-17T11:31:46.5764524Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5764595Z                     diff += 1
2025-01-17T11:31:46.5764663Z     
2025-01-17T11:31:46.5764748Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5764896Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5765070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5765189Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5765257Z E           
2025-01-17T11:31:46.5765368Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5765627Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5765892Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5765905Z 
2025-01-17T11:31:46.5766217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5766221Z 
2025-01-17T11:31:46.5766397Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5766401Z 
2025-01-17T11:31:46.5766621Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89f140>
2025-01-17T11:31:46.5766784Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5766857Z attr = 'j_blues'
2025-01-17T11:31:46.5766861Z 
2025-01-17T11:31:46.5766999Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5767110Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5767193Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5767259Z         try:
2025-01-17T11:31:46.5767400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5767480Z         except KeyError:
2025-01-17T11:31:46.5767628Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5767693Z     
2025-01-17T11:31:46.5767780Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5767868Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5767956Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5768082Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5768166Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5768249Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5768355Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5768421Z             else:
2025-01-17T11:31:46.5768509Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5768614Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5768618Z 
2025-01-17T11:31:46.5768879Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5769090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5769232Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5769300Z     ???
2025-01-17T11:31:46.5769404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5769408Z 
2025-01-17T11:31:46.5769476Z >   ???
2025-01-17T11:31:46.5769596Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5769661Z E   
2025-01-17T11:31:46.5769782Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5769888Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5769954Z E          ...
2025-01-17T11:31:46.5770040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5770159Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5770268Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5770339Z E          ...
2025-01-17T11:31:46.5770425Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5770544Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5770648Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5770652Z 
2025-01-17T11:31:46.5770735Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5770927Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-17T11:31:46.5770931Z 
2025-01-17T11:31:46.5771056Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5771189Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5771280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5771415Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5771540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5771631Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5771700Z err_msg = None
2025-01-17T11:31:46.5771704Z 
2025-01-17T11:31:46.5771815Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5771892Z         if err_msg is None:
2025-01-17T11:31:46.5771983Z             if left.shape != right.shape:
2025-01-17T11:31:46.5772067Z                 raise_assert_detail(
2025-01-17T11:31:46.5772212Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5772282Z                 )
2025-01-17T11:31:46.5772345Z     
2025-01-17T11:31:46.5772420Z             diff = 0
2025-01-17T11:31:46.5772523Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5772841Z                 # count up differences
2025-01-17T11:31:46.5773012Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5773095Z                     diff += 1
2025-01-17T11:31:46.5773164Z     
2025-01-17T11:31:46.5773249Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5773377Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5773546Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5773651Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5773722Z E           
2025-01-17T11:31:46.5773825Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5774087Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5774581Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5774587Z 
2025-01-17T11:31:46.5774895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5774899Z 
2025-01-17T11:31:46.5775063Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5775067Z 
2025-01-17T11:31:46.5775288Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89fec0>
2025-01-17T11:31:46.5775446Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5775518Z attr = 'lines'
2025-01-17T11:31:46.5775522Z 
2025-01-17T11:31:46.5775651Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5775770Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5775851Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5775924Z         try:
2025-01-17T11:31:46.5776059Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5776139Z         except KeyError:
2025-01-17T11:31:46.5776272Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5776339Z     
2025-01-17T11:31:46.5776419Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5776511Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5776593Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5776719Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5776799Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5776881Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5776985Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5777051Z             else:
2025-01-17T11:31:46.5777151Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5777256Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5777260Z 
2025-01-17T11:31:46.5777383Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5777490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5777639Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5777703Z     ???
2025-01-17T11:31:46.5777811Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5777815Z 
2025-01-17T11:31:46.5777877Z >   ???
2025-01-17T11:31:46.5778003Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5778065Z E   
2025-01-17T11:31:46.5778189Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5778291Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5778362Z E          ...
2025-01-17T11:31:46.5778446Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5778576Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5778681Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5778750Z E          ...
2025-01-17T11:31:46.5778829Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5778945Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5779046Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5779050Z 
2025-01-17T11:31:46.5779132Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5779361Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-17T11:31:46.5779366Z 
2025-01-17T11:31:46.5779579Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ff80>
2025-01-17T11:31:46.5779743Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5779913Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5779917Z 
2025-01-17T11:31:46.5780125Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5780234Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5780315Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5780381Z         try:
2025-01-17T11:31:46.5780518Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5780594Z         except KeyError:
2025-01-17T11:31:46.5780727Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5780790Z     
2025-01-17T11:31:46.5780873Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5780959Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5781044Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5781168Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5781253Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5781342Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5781452Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5781456Z 
2025-01-17T11:31:46.5781571Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5781678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5781682Z 
2025-01-17T11:31:46.5781813Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5781895Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5781996Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5782074Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5782206Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5782288Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5782475Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5782739Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5782880Z err_msg = None
2025-01-17T11:31:46.5782887Z 
2025-01-17T11:31:46.5783061Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5783198Z         if err_msg is None:
2025-01-17T11:31:46.5783345Z             if left.shape != right.shape:
2025-01-17T11:31:46.5783480Z                 raise_assert_detail(
2025-01-17T11:31:46.5783704Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5783820Z                 )
2025-01-17T11:31:46.5783925Z     
2025-01-17T11:31:46.5784043Z             diff = 0
2025-01-17T11:31:46.5784214Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5784352Z                 # count up differences
2025-01-17T11:31:46.5784627Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5784749Z                     diff += 1
2025-01-17T11:31:46.5784863Z     
2025-01-17T11:31:46.5785001Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5785216Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5785505Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5785665Z E           AssertionError: Series are different
2025-01-17T11:31:46.5785776Z E           
2025-01-17T11:31:46.5785940Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5786351Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5786815Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5787251Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5787257Z 
2025-01-17T11:31:46.5787564Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5787794Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-17T11:31:46.5787802Z 
2025-01-17T11:31:46.5788023Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4080>
2025-01-17T11:31:46.5788184Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5788269Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5788273Z 
2025-01-17T11:31:46.5788407Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5788517Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5788597Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5788660Z         try:
2025-01-17T11:31:46.5788794Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5788867Z         except KeyError:
2025-01-17T11:31:46.5789001Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5789061Z     
2025-01-17T11:31:46.5789142Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5789226Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5789316Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5789447Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5789531Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5789613Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5789716Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5789726Z 
2025-01-17T11:31:46.5789846Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5789953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5789962Z 
2025-01-17T11:31:46.5790092Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5790178Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5790277Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5790352Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5790494Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5790574Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5790675Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5790747Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5790823Z err_msg = None
2025-01-17T11:31:46.5790826Z 
2025-01-17T11:31:46.5790930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5791012Z         if err_msg is None:
2025-01-17T11:31:46.5791104Z             if left.shape != right.shape:
2025-01-17T11:31:46.5791188Z                 raise_assert_detail(
2025-01-17T11:31:46.5791325Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5791395Z                 )
2025-01-17T11:31:46.5791459Z     
2025-01-17T11:31:46.5791533Z             diff = 0
2025-01-17T11:31:46.5791641Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5791820Z                 # count up differences
2025-01-17T11:31:46.5792075Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5792153Z                     diff += 1
2025-01-17T11:31:46.5792216Z     
2025-01-17T11:31:46.5792295Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5792425Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5792784Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5792895Z E           AssertionError: Series are different
2025-01-17T11:31:46.5792961Z E           
2025-01-17T11:31:46.5793060Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5793469Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5793877Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5794246Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5794257Z 
2025-01-17T11:31:46.5794558Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5794746Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-17T11:31:46.5794749Z 
2025-01-17T11:31:46.5794869Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5794993Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5795085Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5795213Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5795325Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5795415Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5795488Z err_msg = None
2025-01-17T11:31:46.5795491Z 
2025-01-17T11:31:46.5795604Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5795677Z         if err_msg is None:
2025-01-17T11:31:46.5795770Z             if left.shape != right.shape:
2025-01-17T11:31:46.5795846Z                 raise_assert_detail(
2025-01-17T11:31:46.5795987Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5796050Z                 )
2025-01-17T11:31:46.5796116Z     
2025-01-17T11:31:46.5796183Z             diff = 0
2025-01-17T11:31:46.5796290Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5796385Z                 # count up differences
2025-01-17T11:31:46.5796548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5796618Z                     diff += 1
2025-01-17T11:31:46.5796681Z     
2025-01-17T11:31:46.5796764Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5797015Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5797280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5797389Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5797458Z E           
2025-01-17T11:31:46.5797561Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5797823Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5798086Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5798100Z 
2025-01-17T11:31:46.5798385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5798389Z 
2025-01-17T11:31:46.5798556Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5798560Z 
2025-01-17T11:31:46.5798777Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c42c0>
2025-01-17T11:31:46.5798970Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>, attr = 'nu'
2025-01-17T11:31:46.5798974Z 
2025-01-17T11:31:46.5799104Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5799216Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5799299Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5799370Z         try:
2025-01-17T11:31:46.5799499Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5799582Z         except KeyError:
2025-01-17T11:31:46.5799716Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5799778Z     
2025-01-17T11:31:46.5799862Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5799949Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5800034Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5800157Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5800241Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5800326Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5800430Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5800434Z 
2025-01-17T11:31:46.5800551Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5800663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5800813Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5800883Z     ???
2025-01-17T11:31:46.5800993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5800997Z 
2025-01-17T11:31:46.5801059Z >   ???
2025-01-17T11:31:46.5801181Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5801243Z E   
2025-01-17T11:31:46.5801367Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5801467Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5801534Z E          ...
2025-01-17T11:31:46.5801613Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5801737Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5801840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5801908Z E          ...
2025-01-17T11:31:46.5801984Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5802100Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5802354Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5802359Z 
2025-01-17T11:31:46.5802443Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5802815Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-17T11:31:46.5802821Z 
2025-01-17T11:31:46.5802951Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5803070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5803162Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5803283Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5803398Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5803483Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5803558Z err_msg = None
2025-01-17T11:31:46.5803565Z 
2025-01-17T11:31:46.5803671Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5803745Z         if err_msg is None:
2025-01-17T11:31:46.5803834Z             if left.shape != right.shape:
2025-01-17T11:31:46.5803909Z                 raise_assert_detail(
2025-01-17T11:31:46.5804042Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5804106Z                 )
2025-01-17T11:31:46.5804171Z     
2025-01-17T11:31:46.5804236Z             diff = 0
2025-01-17T11:31:46.5804341Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5804421Z                 # count up differences
2025-01-17T11:31:46.5804583Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5804653Z                     diff += 1
2025-01-17T11:31:46.5804718Z     
2025-01-17T11:31:46.5804798Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5804931Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5805092Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5805199Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5805264Z E           
2025-01-17T11:31:46.5805367Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5805622Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5805878Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5805891Z 
2025-01-17T11:31:46.5806179Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5806183Z 
2025-01-17T11:31:46.5806344Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5806349Z 
2025-01-17T11:31:46.5806561Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4380>
2025-01-17T11:31:46.5806721Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5806795Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5806799Z 
2025-01-17T11:31:46.5806930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5807035Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5807115Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5807187Z         try:
2025-01-17T11:31:46.5807613Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5807875Z         except KeyError:
2025-01-17T11:31:46.5808102Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5808204Z     
2025-01-17T11:31:46.5808342Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5808491Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5808579Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5808709Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5808787Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5808878Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5808982Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5808986Z 
2025-01-17T11:31:46.5809106Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5809210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5809358Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5809420Z     ???
2025-01-17T11:31:46.5809528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5809532Z 
2025-01-17T11:31:46.5809594Z >   ???
2025-01-17T11:31:46.5809714Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5809776Z E   
2025-01-17T11:31:46.5809897Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5809997Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5810065Z E          ...
2025-01-17T11:31:46.5810143Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5810264Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5810365Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5810440Z E          ...
2025-01-17T11:31:46.5810519Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5810639Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5810743Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5810747Z 
2025-01-17T11:31:46.5810829Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5811017Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-17T11:31:46.5811021Z 
2025-01-17T11:31:46.5811138Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5811258Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5811344Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5811470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5811584Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5811672Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5811747Z err_msg = None
2025-01-17T11:31:46.5811750Z 
2025-01-17T11:31:46.5811862Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5811936Z         if err_msg is None:
2025-01-17T11:31:46.5812026Z             if left.shape != right.shape:
2025-01-17T11:31:46.5812103Z                 raise_assert_detail(
2025-01-17T11:31:46.5812242Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5812305Z                 )
2025-01-17T11:31:46.5812370Z     
2025-01-17T11:31:46.5812435Z             diff = 0
2025-01-17T11:31:46.5812694Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5812809Z                 # count up differences
2025-01-17T11:31:46.5812978Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5813049Z                     diff += 1
2025-01-17T11:31:46.5813111Z     
2025-01-17T11:31:46.5813191Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5813584Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5813748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5813858Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5813926Z E           
2025-01-17T11:31:46.5814031Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5814287Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5814549Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5814558Z 
2025-01-17T11:31:46.5814856Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5814860Z 
2025-01-17T11:31:46.5815024Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5815028Z 
2025-01-17T11:31:46.5815244Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4440>
2025-01-17T11:31:46.5815442Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>, attr = 'f_lu'
2025-01-17T11:31:46.5815446Z 
2025-01-17T11:31:46.5815574Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5815686Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5815763Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5815832Z         try:
2025-01-17T11:31:46.5815966Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5816054Z         except KeyError:
2025-01-17T11:31:46.5816187Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5816257Z     
2025-01-17T11:31:46.5816337Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5816422Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5816506Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5816630Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5816710Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5816790Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5816896Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5816900Z 
2025-01-17T11:31:46.5817018Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5817124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5817258Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5817327Z     ???
2025-01-17T11:31:46.5817432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5817435Z 
2025-01-17T11:31:46.5817501Z >   ???
2025-01-17T11:31:46.5817619Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5817682Z E   
2025-01-17T11:31:46.5817798Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5817902Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5817965Z E          ...
2025-01-17T11:31:46.5818047Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5818167Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5818272Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5818338Z E          ...
2025-01-17T11:31:46.5818417Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5818643Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5818816Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5818824Z 
2025-01-17T11:31:46.5818906Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5819137Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-17T11:31:46.5819145Z 
2025-01-17T11:31:46.5819356Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4a40>
2025-01-17T11:31:46.5819511Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5819598Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.5819602Z 
2025-01-17T11:31:46.5819727Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5819834Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5819908Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5819973Z         try:
2025-01-17T11:31:46.5820102Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5820184Z         except KeyError:
2025-01-17T11:31:46.5820321Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5820386Z     
2025-01-17T11:31:46.5820465Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5820553Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5820664Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5820791Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5820866Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5820951Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5821050Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5821118Z             else:
2025-01-17T11:31:46.5821204Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5821301Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5821307Z 
2025-01-17T11:31:46.5821421Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5821531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5821669Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5821732Z     ???
2025-01-17T11:31:46.5821835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5821839Z 
2025-01-17T11:31:46.5821900Z >   ???
2025-01-17T11:31:46.5822073Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.5822133Z E   
2025-01-17T11:31:46.5822291Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.5822751Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5828458Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5834086Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5834286Z E   At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.5834292Z 
2025-01-17T11:31:46.5834380Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5834612Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-17T11:31:46.5834618Z 
2025-01-17T11:31:46.5834743Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5834870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5834963Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5835092Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5835207Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5835298Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5835368Z err_msg = None
2025-01-17T11:31:46.5835372Z 
2025-01-17T11:31:46.5835480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5835689Z         if err_msg is None:
2025-01-17T11:31:46.5835881Z             if left.shape != right.shape:
2025-01-17T11:31:46.5835963Z                 raise_assert_detail(
2025-01-17T11:31:46.5836103Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5836167Z                 )
2025-01-17T11:31:46.5836232Z     
2025-01-17T11:31:46.5836297Z             diff = 0
2025-01-17T11:31:46.5836401Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5836485Z                 # count up differences
2025-01-17T11:31:46.5836645Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5836718Z                     diff += 1
2025-01-17T11:31:46.5836779Z     
2025-01-17T11:31:46.5836863Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5836990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5837154Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5837273Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5837342Z E           
2025-01-17T11:31:46.5837447Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5837705Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5837957Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5837962Z 
2025-01-17T11:31:46.5838268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5838272Z 
2025-01-17T11:31:46.5838433Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5838441Z 
2025-01-17T11:31:46.5838653Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4b00>
2025-01-17T11:31:46.5838814Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5838899Z attr = 'previous_beta_sobolev'
2025-01-17T11:31:46.5838903Z 
2025-01-17T11:31:46.5839042Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5839153Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5839227Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5839300Z         try:
2025-01-17T11:31:46.5839432Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5839509Z         except KeyError:
2025-01-17T11:31:46.5839641Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5839704Z     
2025-01-17T11:31:46.5839787Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5839876Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5839955Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5840079Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5840159Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5840243Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5840343Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5840411Z             else:
2025-01-17T11:31:46.5840498Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5840599Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5840604Z 
2025-01-17T11:31:46.5840722Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5840831Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5841154Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5841219Z     ???
2025-01-17T11:31:46.5841322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5841326Z 
2025-01-17T11:31:46.5841386Z >   ???
2025-01-17T11:31:46.5841507Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5841568Z E   
2025-01-17T11:31:46.5841690Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5841793Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5841862Z E          ...
2025-01-17T11:31:46.5841942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5842066Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5842168Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5842234Z E          ...
2025-01-17T11:31:46.5842311Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5842443Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5842727Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5842735Z 
2025-01-17T11:31:46.5842837Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5843032Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-17T11:31:46.5843036Z 
2025-01-17T11:31:46.5843158Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5843278Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5843370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5843494Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5843611Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5843702Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5843778Z err_msg = None
2025-01-17T11:31:46.5843782Z 
2025-01-17T11:31:46.5843885Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5843960Z         if err_msg is None:
2025-01-17T11:31:46.5844048Z             if left.shape != right.shape:
2025-01-17T11:31:46.5844124Z                 raise_assert_detail(
2025-01-17T11:31:46.5844259Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5844322Z                 )
2025-01-17T11:31:46.5844385Z     
2025-01-17T11:31:46.5844450Z             diff = 0
2025-01-17T11:31:46.5844553Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5844633Z                 # count up differences
2025-01-17T11:31:46.5844796Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5844868Z                     diff += 1
2025-01-17T11:31:46.5844938Z     
2025-01-17T11:31:46.5845020Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5845153Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5845312Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5845418Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5845482Z E           
2025-01-17T11:31:46.5845588Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5845838Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5846221Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5846462Z 
2025-01-17T11:31:46.5846758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5846763Z 
2025-01-17T11:31:46.5846922Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5846927Z 
2025-01-17T11:31:46.5847140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4bc0>
2025-01-17T11:31:46.5847299Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5847374Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5847378Z 
2025-01-17T11:31:46.5847510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5847617Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5847697Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5847767Z         try:
2025-01-17T11:31:46.5847903Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5847977Z         except KeyError:
2025-01-17T11:31:46.5848106Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5848168Z     
2025-01-17T11:31:46.5848249Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5848334Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5848416Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5848538Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5848617Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5848697Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5848797Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5848864Z             else:
2025-01-17T11:31:46.5848950Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5849050Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5849058Z 
2025-01-17T11:31:46.5849187Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5849292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5849425Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5849490Z     ???
2025-01-17T11:31:46.5849588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5849592Z 
2025-01-17T11:31:46.5849656Z >   ???
2025-01-17T11:31:46.5849770Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5849834Z E   
2025-01-17T11:31:46.5849952Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5850054Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5850120Z E          ...
2025-01-17T11:31:46.5850201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5850318Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5850431Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5850495Z E          ...
2025-01-17T11:31:46.5850574Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5850688Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5850782Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5850789Z 
2025-01-17T11:31:46.5850873Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5851061Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-17T11:31:46.5851067Z 
2025-01-17T11:31:46.5851185Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5851304Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5851391Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5851603Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5851789Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5851882Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5851956Z err_msg = None
2025-01-17T11:31:46.5851959Z 
2025-01-17T11:31:46.5852060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5852139Z         if err_msg is None:
2025-01-17T11:31:46.5852225Z             if left.shape != right.shape:
2025-01-17T11:31:46.5852308Z                 raise_assert_detail(
2025-01-17T11:31:46.5852443Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5852513Z                 )
2025-01-17T11:31:46.5852747Z     
2025-01-17T11:31:46.5852825Z             diff = 0
2025-01-17T11:31:46.5852929Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5853014Z                 # count up differences
2025-01-17T11:31:46.5853192Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5853269Z                     diff += 1
2025-01-17T11:31:46.5853331Z     
2025-01-17T11:31:46.5853417Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5853543Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5853704Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5853809Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5853874Z E           
2025-01-17T11:31:46.5853985Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5854235Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5854500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5854504Z 
2025-01-17T11:31:46.5854800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5854804Z 
2025-01-17T11:31:46.5854960Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5854964Z 
2025-01-17T11:31:46.5855180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4c80>
2025-01-17T11:31:46.5855333Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5855407Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5855415Z 
2025-01-17T11:31:46.5855541Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5855654Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5855730Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5855813Z         try:
2025-01-17T11:31:46.5856052Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5856187Z         except KeyError:
2025-01-17T11:31:46.5856406Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5856514Z     
2025-01-17T11:31:46.5856644Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5856785Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5856926Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5857111Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5857197Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5857280Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5857530Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5857715Z             else:
2025-01-17T11:31:46.5857811Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5857910Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5857914Z 
2025-01-17T11:31:46.5858038Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5858141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5858281Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5858344Z     ???
2025-01-17T11:31:46.5858448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5858451Z 
2025-01-17T11:31:46.5858513Z >   ???
2025-01-17T11:31:46.5858634Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5858696Z E   
2025-01-17T11:31:46.5858816Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5858923Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5859004Z E          ...
2025-01-17T11:31:46.5859083Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5859204Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5859306Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5859370Z E          ...
2025-01-17T11:31:46.5859451Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5859569Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5859671Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5859675Z 
2025-01-17T11:31:46.5859758Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5859952Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-17T11:31:46.5859956Z 
2025-01-17T11:31:46.5860070Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5860200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5860290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5860417Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5860530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5860620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5860688Z err_msg = None
2025-01-17T11:31:46.5860691Z 
2025-01-17T11:31:46.5860797Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5860874Z         if err_msg is None:
2025-01-17T11:31:46.5860963Z             if left.shape != right.shape:
2025-01-17T11:31:46.5861041Z                 raise_assert_detail(
2025-01-17T11:31:46.5861179Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5861248Z                 )
2025-01-17T11:31:46.5861318Z     
2025-01-17T11:31:46.5861384Z             diff = 0
2025-01-17T11:31:46.5861494Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5861574Z                 # count up differences
2025-01-17T11:31:46.5861740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5861810Z                     diff += 1
2025-01-17T11:31:46.5861873Z     
2025-01-17T11:31:46.5861962Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5862088Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5862247Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5862350Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5862416Z E           
2025-01-17T11:31:46.5862517Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5863002Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5863362Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5863372Z 
2025-01-17T11:31:46.5863666Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5863669Z 
2025-01-17T11:31:46.5863834Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5863838Z 
2025-01-17T11:31:46.5864051Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4e00>
2025-01-17T11:31:46.5864219Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5864288Z attr = 'j_blues'
2025-01-17T11:31:46.5864291Z 
2025-01-17T11:31:46.5864427Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5864534Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5864617Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5864681Z         try:
2025-01-17T11:31:46.5864817Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5864890Z         except KeyError:
2025-01-17T11:31:46.5865018Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5865084Z     
2025-01-17T11:31:46.5865163Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5865254Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5865334Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5865467Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5865549Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5865637Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5865739Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5865806Z             else:
2025-01-17T11:31:46.5865962Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5866145Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5866151Z 
2025-01-17T11:31:46.5866356Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5866534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5866766Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5866879Z     ???
2025-01-17T11:31:46.5867052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5867058Z 
2025-01-17T11:31:46.5867169Z >   ???
2025-01-17T11:31:46.5867375Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5867492Z E   
2025-01-17T11:31:46.5867732Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5867924Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5868040Z E          ...
2025-01-17T11:31:46.5868171Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5868375Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5868552Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5868670Z E          ...
2025-01-17T11:31:46.5868804Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5869010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5869171Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5869177Z 
2025-01-17T11:31:46.5869321Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5869671Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-17T11:31:46.5869805Z 
2025-01-17T11:31:46.5870117Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5870321Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5870472Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5870682Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5870885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5871027Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5871148Z err_msg = None
2025-01-17T11:31:46.5871153Z 
2025-01-17T11:31:46.5871323Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5871451Z         if err_msg is None:
2025-01-17T11:31:46.5871595Z             if left.shape != right.shape:
2025-01-17T11:31:46.5871739Z                 raise_assert_detail(
2025-01-17T11:31:46.5871968Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5872084Z                 )
2025-01-17T11:31:46.5872189Z     
2025-01-17T11:31:46.5872306Z             diff = 0
2025-01-17T11:31:46.5872477Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5872740Z                 # count up differences
2025-01-17T11:31:46.5873007Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5873086Z                     diff += 1
2025-01-17T11:31:46.5873153Z     
2025-01-17T11:31:46.5873235Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5873368Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5873533Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5873645Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5873721Z E           
2025-01-17T11:31:46.5873837Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5874092Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5874348Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5874353Z 
2025-01-17T11:31:46.5874652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5874665Z 
2025-01-17T11:31:46.5874830Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5874835Z 
2025-01-17T11:31:46.5875058Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5b80>
2025-01-17T11:31:46.5875215Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5875288Z attr = 'lines'
2025-01-17T11:31:46.5875292Z 
2025-01-17T11:31:46.5875424Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5875537Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5875614Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5875679Z         try:
2025-01-17T11:31:46.5875817Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5875891Z         except KeyError:
2025-01-17T11:31:46.5876026Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5876088Z     
2025-01-17T11:31:46.5876309Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5876515Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5876603Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5876726Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5876812Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5876894Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5877002Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5877071Z             else:
2025-01-17T11:31:46.5877165Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5877265Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5877269Z 
2025-01-17T11:31:46.5877391Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5877499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5877643Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5877713Z     ???
2025-01-17T11:31:46.5877824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5877832Z 
2025-01-17T11:31:46.5877894Z >   ???
2025-01-17T11:31:46.5878015Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5878081Z E   
2025-01-17T11:31:46.5878201Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5878306Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5878371Z E          ...
2025-01-17T11:31:46.5878456Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5878577Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5878685Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5878750Z E          ...
2025-01-17T11:31:46.5878832Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5878946Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5879051Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5879059Z 
2025-01-17T11:31:46.5879141Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5879362Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-17T11:31:46.5879366Z 
2025-01-17T11:31:46.5879574Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5c40>
2025-01-17T11:31:46.5879731Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5879811Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5879815Z 
2025-01-17T11:31:46.5879945Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5880050Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5880131Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5880196Z         try:
2025-01-17T11:31:46.5880333Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5880410Z         except KeyError:
2025-01-17T11:31:46.5880541Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5880607Z     
2025-01-17T11:31:46.5880686Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5880775Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5880857Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5880982Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5881059Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5881145Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5881243Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5881247Z 
2025-01-17T11:31:46.5881364Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5881465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5881469Z 
2025-01-17T11:31:46.5881596Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5881764Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5881965Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5882041Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5882176Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5882253Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5882355Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5882425Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5882499Z err_msg = None
2025-01-17T11:31:46.5882503Z 
2025-01-17T11:31:46.5882799Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5882941Z         if err_msg is None:
2025-01-17T11:31:46.5883098Z             if left.shape != right.shape:
2025-01-17T11:31:46.5883244Z                 raise_assert_detail(
2025-01-17T11:31:46.5883476Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5883592Z                 )
2025-01-17T11:31:46.5883703Z     
2025-01-17T11:31:46.5883813Z             diff = 0
2025-01-17T11:31:46.5883993Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5884129Z                 # count up differences
2025-01-17T11:31:46.5884411Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5884530Z                     diff += 1
2025-01-17T11:31:46.5884641Z     
2025-01-17T11:31:46.5884775Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5884991Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5885267Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5885439Z E           AssertionError: Series are different
2025-01-17T11:31:46.5885548Z E           
2025-01-17T11:31:46.5885711Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5886277Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5886608Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5886933Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5886947Z 
2025-01-17T11:31:46.5887247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5887466Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-17T11:31:46.5887470Z 
2025-01-17T11:31:46.5887684Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5d00>
2025-01-17T11:31:46.5887844Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5887926Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5887929Z 
2025-01-17T11:31:46.5888061Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5888167Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5888392Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5888555Z         try:
2025-01-17T11:31:46.5888692Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5888770Z         except KeyError:
2025-01-17T11:31:46.5888900Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5888966Z     
2025-01-17T11:31:46.5889046Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5889135Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5889216Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5889343Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5889423Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5889509Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5889611Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5889614Z 
2025-01-17T11:31:46.5889735Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5889853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5889857Z 
2025-01-17T11:31:46.5889985Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5890063Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5890164Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5890238Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5890371Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5890446Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5890555Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5890625Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5890698Z err_msg = None
2025-01-17T11:31:46.5890702Z 
2025-01-17T11:31:46.5890802Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5890885Z         if err_msg is None:
2025-01-17T11:31:46.5890975Z             if left.shape != right.shape:
2025-01-17T11:31:46.5891050Z                 raise_assert_detail(
2025-01-17T11:31:46.5891186Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5891251Z                 )
2025-01-17T11:31:46.5891317Z     
2025-01-17T11:31:46.5891383Z             diff = 0
2025-01-17T11:31:46.5891488Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5891567Z                 # count up differences
2025-01-17T11:31:46.5891730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5891800Z                     diff += 1
2025-01-17T11:31:46.5891864Z     
2025-01-17T11:31:46.5891942Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5892069Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5892231Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5892332Z E           AssertionError: Series are different
2025-01-17T11:31:46.5892397Z E           
2025-01-17T11:31:46.5892497Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5892981Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5893474Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5893942Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5893951Z 
2025-01-17T11:31:46.5894249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5894435Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-17T11:31:46.5894438Z 
2025-01-17T11:31:46.5894554Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5894685Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5894776Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5894901Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5895014Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5895103Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5895172Z err_msg = None
2025-01-17T11:31:46.5895176Z 
2025-01-17T11:31:46.5895280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5895353Z         if err_msg is None:
2025-01-17T11:31:46.5895439Z             if left.shape != right.shape:
2025-01-17T11:31:46.5895518Z                 raise_assert_detail(
2025-01-17T11:31:46.5895650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5895728Z                 )
2025-01-17T11:31:46.5895792Z     
2025-01-17T11:31:46.5895870Z             diff = 0
2025-01-17T11:31:46.5895972Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5896056Z                 # count up differences
2025-01-17T11:31:46.5896217Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5896292Z                     diff += 1
2025-01-17T11:31:46.5896354Z     
2025-01-17T11:31:46.5896439Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5896564Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5896730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5896836Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5896906Z E           
2025-01-17T11:31:46.5897009Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5897277Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5897534Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5897538Z 
2025-01-17T11:31:46.5897831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5897835Z 
2025-01-17T11:31:46.5897996Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5898000Z 
2025-01-17T11:31:46.5898405Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5f40>
2025-01-17T11:31:46.5898680Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>, attr = 'nu'
2025-01-17T11:31:46.5898684Z 
2025-01-17T11:31:46.5898822Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5898930Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5899019Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5899084Z         try:
2025-01-17T11:31:46.5899223Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5899296Z         except KeyError:
2025-01-17T11:31:46.5899429Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5899494Z     
2025-01-17T11:31:46.5899579Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5899666Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5899754Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5899879Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5899976Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5900059Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5900161Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5900172Z 
2025-01-17T11:31:46.5900287Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5900399Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5900545Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5900610Z     ???
2025-01-17T11:31:46.5900720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5900724Z 
2025-01-17T11:31:46.5900787Z >   ???
2025-01-17T11:31:46.5900915Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5900983Z E   
2025-01-17T11:31:46.5901114Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5901225Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5901302Z E          ...
2025-01-17T11:31:46.5901386Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5901514Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5901617Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5901686Z E          ...
2025-01-17T11:31:46.5901765Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5901883Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5901983Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5901987Z 
2025-01-17T11:31:46.5902075Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5902268Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-17T11:31:46.5902272Z 
2025-01-17T11:31:46.5902397Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5902631Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5902734Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5902858Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5902980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5903067Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5903141Z err_msg = None
2025-01-17T11:31:46.5903145Z 
2025-01-17T11:31:46.5903248Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5903330Z         if err_msg is None:
2025-01-17T11:31:46.5903420Z             if left.shape != right.shape:
2025-01-17T11:31:46.5903499Z                 raise_assert_detail(
2025-01-17T11:31:46.5903640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5903862Z                 )
2025-01-17T11:31:46.5903930Z     
2025-01-17T11:31:46.5904096Z             diff = 0
2025-01-17T11:31:46.5904208Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5904288Z                 # count up differences
2025-01-17T11:31:46.5904452Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5904523Z                     diff += 1
2025-01-17T11:31:46.5904592Z     
2025-01-17T11:31:46.5904676Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5904807Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5904969Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5905081Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5905147Z E           
2025-01-17T11:31:46.5905257Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5905522Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5905786Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5905790Z 
2025-01-17T11:31:46.5906082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5906086Z 
2025-01-17T11:31:46.5906254Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5906257Z 
2025-01-17T11:31:46.5906474Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6000>
2025-01-17T11:31:46.5906648Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5906724Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5906728Z 
2025-01-17T11:31:46.5906867Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5906976Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5907063Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5907127Z         try:
2025-01-17T11:31:46.5907262Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5907335Z         except KeyError:
2025-01-17T11:31:46.5907469Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5907534Z     
2025-01-17T11:31:46.5907620Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5907709Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5907799Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5907931Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5908016Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5908104Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5908208Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5908212Z 
2025-01-17T11:31:46.5908338Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5908445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5908586Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5908650Z     ???
2025-01-17T11:31:46.5908758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5908762Z 
2025-01-17T11:31:46.5908825Z >   ???
2025-01-17T11:31:46.5908947Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5909019Z E   
2025-01-17T11:31:46.5909142Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5909333Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5909474Z E          ...
2025-01-17T11:31:46.5909557Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5909681Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5909784Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5909852Z E          ...
2025-01-17T11:31:46.5909929Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5910048Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5910146Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5910149Z 
2025-01-17T11:31:46.5910239Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5910419Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-17T11:31:46.5910423Z 
2025-01-17T11:31:46.5910551Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5910678Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5910772Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5910894Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5911015Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5911099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5911168Z err_msg = None
2025-01-17T11:31:46.5911175Z 
2025-01-17T11:31:46.5911278Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5911354Z         if err_msg is None:
2025-01-17T11:31:46.5911446Z             if left.shape != right.shape:
2025-01-17T11:31:46.5911521Z                 raise_assert_detail(
2025-01-17T11:31:46.5911658Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5911726Z                 )
2025-01-17T11:31:46.5911791Z     
2025-01-17T11:31:46.5911861Z             diff = 0
2025-01-17T11:31:46.5911967Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5912046Z                 # count up differences
2025-01-17T11:31:46.5912215Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5912289Z                     diff += 1
2025-01-17T11:31:46.5912355Z     
2025-01-17T11:31:46.5912438Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5912670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5912835Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5912948Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5913014Z E           
2025-01-17T11:31:46.5913120Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5913391Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5913650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5913654Z 
2025-01-17T11:31:46.5913950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5913954Z 
2025-01-17T11:31:46.5914121Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5914125Z 
2025-01-17T11:31:46.5914465Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c60c0>
2025-01-17T11:31:46.5914937Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>, attr = 'f_lu'
2025-01-17T11:31:46.5914946Z 
2025-01-17T11:31:46.5915175Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5915362Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5915489Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5915601Z         try:
2025-01-17T11:31:46.5915821Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5915908Z         except KeyError:
2025-01-17T11:31:46.5916040Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5916109Z     
2025-01-17T11:31:46.5916191Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5916283Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5916365Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5916499Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5916592Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5916676Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5916787Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5916790Z 
2025-01-17T11:31:46.5916910Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5917021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5917161Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5917232Z     ???
2025-01-17T11:31:46.5917336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5917340Z 
2025-01-17T11:31:46.5917410Z >   ???
2025-01-17T11:31:46.5917529Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5917597Z E   
2025-01-17T11:31:46.5917717Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5917832Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5917902Z E          ...
2025-01-17T11:31:46.5917989Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5918112Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5918222Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5918290Z E          ...
2025-01-17T11:31:46.5918375Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5918492Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5918593Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5918597Z 
2025-01-17T11:31:46.5918680Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5918877Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-17T11:31:46.5918881Z 
2025-01-17T11:31:46.5919000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5919138Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5919227Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5919356Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5919472Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5919562Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5919633Z err_msg = None
2025-01-17T11:31:46.5919637Z 
2025-01-17T11:31:46.5919741Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5919820Z         if err_msg is None:
2025-01-17T11:31:46.5919908Z             if left.shape != right.shape:
2025-01-17T11:31:46.5919991Z                 raise_assert_detail(
2025-01-17T11:31:46.5920126Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5920292Z                 )
2025-01-17T11:31:46.5920354Z     
2025-01-17T11:31:46.5920495Z             diff = 0
2025-01-17T11:31:46.5920602Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5920720Z                 # count up differences
2025-01-17T11:31:46.5920882Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5920960Z                     diff += 1
2025-01-17T11:31:46.5921021Z     
2025-01-17T11:31:46.5921105Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5921235Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5921397Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5921501Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5921570Z E           
2025-01-17T11:31:46.5921672Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5921933Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5922191Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5922196Z 
2025-01-17T11:31:46.5922491Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5922495Z 
2025-01-17T11:31:46.5922842Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5922848Z 
2025-01-17T11:31:46.5923078Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6840>
2025-01-17T11:31:46.5923242Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5923318Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5923322Z 
2025-01-17T11:31:46.5923451Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5923563Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5923640Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5923710Z         try:
2025-01-17T11:31:46.5923840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5923917Z         except KeyError:
2025-01-17T11:31:46.5924046Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5924112Z     
2025-01-17T11:31:46.5924193Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5924284Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5924366Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5924497Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5924586Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5924668Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5924776Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5924843Z             else:
2025-01-17T11:31:46.5924939Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5925037Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5925041Z 
2025-01-17T11:31:46.5925163Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5925271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5925415Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5925478Z     ???
2025-01-17T11:31:46.5925586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5925590Z 
2025-01-17T11:31:46.5925801Z >   ???
2025-01-17T11:31:46.5926027Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5926091Z E   
2025-01-17T11:31:46.5926217Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5926319Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5926389Z E          ...
2025-01-17T11:31:46.5926471Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5926595Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5926700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5926766Z E          ...
2025-01-17T11:31:46.5926848Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5926964Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5927066Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5927070Z 
2025-01-17T11:31:46.5927151Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5927357Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-17T11:31:46.5927367Z 
2025-01-17T11:31:46.5927486Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5927608Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5927698Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5927827Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5927943Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5928033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5928104Z err_msg = None
2025-01-17T11:31:46.5928108Z 
2025-01-17T11:31:46.5928215Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5928289Z         if err_msg is None:
2025-01-17T11:31:46.5928383Z             if left.shape != right.shape:
2025-01-17T11:31:46.5928465Z                 raise_assert_detail(
2025-01-17T11:31:46.5928610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5928675Z                 )
2025-01-17T11:31:46.5928743Z     
2025-01-17T11:31:46.5928810Z             diff = 0
2025-01-17T11:31:46.5928917Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5928996Z                 # count up differences
2025-01-17T11:31:46.5929165Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5929236Z                     diff += 1
2025-01-17T11:31:46.5929304Z     
2025-01-17T11:31:46.5929383Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5929510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5929672Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5929782Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5929856Z E           
2025-01-17T11:31:46.5929960Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5930214Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5930471Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5930476Z 
2025-01-17T11:31:46.5930764Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5930855Z 
2025-01-17T11:31:46.5931129Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5931134Z 
2025-01-17T11:31:46.5931349Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6900>
2025-01-17T11:31:46.5931509Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5931582Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5931587Z 
2025-01-17T11:31:46.5931717Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5931827Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5931910Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5931977Z         try:
2025-01-17T11:31:46.5932115Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5932189Z         except KeyError:
2025-01-17T11:31:46.5932321Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5932394Z     
2025-01-17T11:31:46.5932477Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5932740Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5932832Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5932963Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5933041Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5933127Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5933230Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5933299Z             else:
2025-01-17T11:31:46.5933385Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5933490Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5933494Z 
2025-01-17T11:31:46.5933609Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5933722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5933862Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5933938Z     ???
2025-01-17T11:31:46.5934044Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5934048Z 
2025-01-17T11:31:46.5934115Z >   ???
2025-01-17T11:31:46.5934233Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5934301Z E   
2025-01-17T11:31:46.5934422Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5934525Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5934594Z E          ...
2025-01-17T11:31:46.5934676Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5934810Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5934914Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5934985Z E          ...
2025-01-17T11:31:46.5935065Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5935185Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5935291Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5935295Z 
2025-01-17T11:31:46.5935382Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5935569Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-17T11:31:46.5935573Z 
2025-01-17T11:31:46.5935697Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5935819Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5935911Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5936035Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5936157Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5936242Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5936446Z err_msg = None
2025-01-17T11:31:46.5936450Z 
2025-01-17T11:31:46.5936651Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5936737Z         if err_msg is None:
2025-01-17T11:31:46.5936825Z             if left.shape != right.shape:
2025-01-17T11:31:46.5937057Z                 raise_assert_detail(
2025-01-17T11:31:46.5937304Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5937407Z                 )
2025-01-17T11:31:46.5937538Z     
2025-01-17T11:31:46.5937639Z             diff = 0
2025-01-17T11:31:46.5937852Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5938004Z                 # count up differences
2025-01-17T11:31:46.5938203Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5938345Z                     diff += 1
2025-01-17T11:31:46.5938443Z     
2025-01-17T11:31:46.5938579Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5938810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5939063Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5939202Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5939344Z E           
2025-01-17T11:31:46.5939481Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5939855Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5940168Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5940214Z 
2025-01-17T11:31:46.5940546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5940550Z 
2025-01-17T11:31:46.5940783Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5940787Z 
2025-01-17T11:31:46.5941304Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6a80>
2025-01-17T11:31:46.5941576Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5941703Z attr = 'j_blues'
2025-01-17T11:31:46.5941707Z 
2025-01-17T11:31:46.5941906Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5942046Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5942208Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5942291Z         try:
2025-01-17T11:31:46.5942773Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5942906Z         except KeyError:
2025-01-17T11:31:46.5943125Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5943226Z     
2025-01-17T11:31:46.5943359Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5943555Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5943689Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5943888Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5944001Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5944179Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5944302Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5944502Z             else:
2025-01-17T11:31:46.5944623Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5944794Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5944947Z 
2025-01-17T11:31:46.5945107Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5945370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5945607Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5945777Z     ???
2025-01-17T11:31:46.5946003Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5946010Z 
2025-01-17T11:31:46.5953042Z >   ???
2025-01-17T11:31:46.5953314Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5953425Z E   
2025-01-17T11:31:46.5953646Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5953821Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5953935Z E          ...
2025-01-17T11:31:46.5954075Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5954242Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5954368Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5954445Z E          ...
2025-01-17T11:31:46.5954530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5954661Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5954764Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5954769Z 
2025-01-17T11:31:46.5954861Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5955057Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-17T11:31:46.5955062Z 
2025-01-17T11:31:46.5955192Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5955320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5955418Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5955550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5955686Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5955785Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5955857Z err_msg = None
2025-01-17T11:31:46.5955864Z 
2025-01-17T11:31:46.5955972Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5956045Z         if err_msg is None:
2025-01-17T11:31:46.5956143Z             if left.shape != right.shape:
2025-01-17T11:31:46.5956219Z                 raise_assert_detail(
2025-01-17T11:31:46.5956364Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5956429Z                 )
2025-01-17T11:31:46.5956493Z     
2025-01-17T11:31:46.5956561Z             diff = 0
2025-01-17T11:31:46.5956674Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5956755Z                 # count up differences
2025-01-17T11:31:46.5956927Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5957007Z                     diff += 1
2025-01-17T11:31:46.5957071Z     
2025-01-17T11:31:46.5957155Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5957290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5957450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5957562Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5957627Z E           
2025-01-17T11:31:46.5957736Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5957996Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5958530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5958536Z 
2025-01-17T11:31:46.5958849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5958852Z 
2025-01-17T11:31:46.5959031Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5959035Z 
2025-01-17T11:31:46.5959253Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7800>
2025-01-17T11:31:46.5959424Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5959493Z attr = 'lines'
2025-01-17T11:31:46.5959497Z 
2025-01-17T11:31:46.5959635Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5959754Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5959841Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5959906Z         try:
2025-01-17T11:31:46.5960044Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5960116Z         except KeyError:
2025-01-17T11:31:46.5960252Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5960314Z     
2025-01-17T11:31:46.5960401Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5960487Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5960568Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5960702Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5960781Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5960867Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5960969Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5961045Z             else:
2025-01-17T11:31:46.5961132Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5961238Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5961242Z 
2025-01-17T11:31:46.5961359Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5961469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5961609Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5961678Z     ???
2025-01-17T11:31:46.5961782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5961786Z 
2025-01-17T11:31:46.5961850Z >   ???
2025-01-17T11:31:46.5961971Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5962039Z E   
2025-01-17T11:31:46.5962157Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5962264Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5962333Z E          ...
2025-01-17T11:31:46.5962422Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5962720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5962852Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5962921Z E          ...
2025-01-17T11:31:46.5962999Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5963118Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5963214Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5963217Z 
2025-01-17T11:31:46.5963304Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5963517Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-17T11:31:46.5963521Z 
2025-01-17T11:31:46.5963735Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c78c0>
2025-01-17T11:31:46.5963893Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5964107Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5964112Z 
2025-01-17T11:31:46.5964347Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5964462Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5964538Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5964603Z         try:
2025-01-17T11:31:46.5964737Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5964814Z         except KeyError:
2025-01-17T11:31:46.5964944Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5965007Z     
2025-01-17T11:31:46.5965086Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5965174Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5965255Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5965382Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5965459Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5965548Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5965662Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5965666Z 
2025-01-17T11:31:46.5965786Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5965897Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5965901Z 
2025-01-17T11:31:46.5966036Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5966115Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5966215Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5966293Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5966423Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5966504Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5966600Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5966680Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5966751Z err_msg = None
2025-01-17T11:31:46.5966756Z 
2025-01-17T11:31:46.5966865Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5966939Z         if err_msg is None:
2025-01-17T11:31:46.5967030Z             if left.shape != right.shape:
2025-01-17T11:31:46.5967107Z                 raise_assert_detail(
2025-01-17T11:31:46.5967249Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5967314Z                 )
2025-01-17T11:31:46.5967379Z     
2025-01-17T11:31:46.5967446Z             diff = 0
2025-01-17T11:31:46.5967554Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5967635Z                 # count up differences
2025-01-17T11:31:46.5967807Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5967879Z                     diff += 1
2025-01-17T11:31:46.5967947Z     
2025-01-17T11:31:46.5968032Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5968163Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5968330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5968427Z E           AssertionError: Series are different
2025-01-17T11:31:46.5968498Z E           
2025-01-17T11:31:46.5968593Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5968962Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5969376Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5969798Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5969802Z 
2025-01-17T11:31:46.5970121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5970335Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-17T11:31:46.5970343Z 
2025-01-17T11:31:46.5970569Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7980>
2025-01-17T11:31:46.5970727Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5970814Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5970818Z 
2025-01-17T11:31:46.5970948Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5971056Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5971134Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5971203Z         try:
2025-01-17T11:31:46.5971336Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5971412Z         except KeyError:
2025-01-17T11:31:46.5971541Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5971607Z     
2025-01-17T11:31:46.5971685Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5971775Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5971861Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5971993Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5972076Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5972158Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5972263Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5972267Z 
2025-01-17T11:31:46.5972385Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5972495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5972499Z 
2025-01-17T11:31:46.5972734Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5972817Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5972915Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5972990Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5973125Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5973208Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5973306Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5973379Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5973448Z err_msg = None
2025-01-17T11:31:46.5973453Z 
2025-01-17T11:31:46.5973556Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5973629Z         if err_msg is None:
2025-01-17T11:31:46.5973716Z             if left.shape != right.shape:
2025-01-17T11:31:46.5973792Z                 raise_assert_detail(
2025-01-17T11:31:46.5973929Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5973995Z                 )
2025-01-17T11:31:46.5974059Z     
2025-01-17T11:31:46.5974126Z             diff = 0
2025-01-17T11:31:46.5974230Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5974439Z                 # count up differences
2025-01-17T11:31:46.5974699Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5974773Z                     diff += 1
2025-01-17T11:31:46.5974834Z     
2025-01-17T11:31:46.5974913Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5975040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5975201Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5975295Z E           AssertionError: Series are different
2025-01-17T11:31:46.5975363Z E           
2025-01-17T11:31:46.5975454Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5975825Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5976195Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5976567Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5976576Z 
2025-01-17T11:31:46.5976882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5977063Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-17T11:31:46.5977067Z 
2025-01-17T11:31:46.5977190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5977308Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5977423Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5977644Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5977856Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5978001Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5978129Z err_msg = None
2025-01-17T11:31:46.5978135Z 
2025-01-17T11:31:46.5978309Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5978435Z         if err_msg is None:
2025-01-17T11:31:46.5978578Z             if left.shape != right.shape:
2025-01-17T11:31:46.5978724Z                 raise_assert_detail(
2025-01-17T11:31:46.5978866Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5978938Z                 )
2025-01-17T11:31:46.5979000Z     
2025-01-17T11:31:46.5979072Z             diff = 0
2025-01-17T11:31:46.5979176Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5979256Z                 # count up differences
2025-01-17T11:31:46.5979420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5979491Z                     diff += 1
2025-01-17T11:31:46.5979556Z     
2025-01-17T11:31:46.5979635Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5979936Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5980098Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5980206Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5980271Z E           
2025-01-17T11:31:46.5980379Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5980634Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5980895Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5980905Z 
2025-01-17T11:31:46.5981194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5981202Z 
2025-01-17T11:31:46.5981365Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5981369Z 
2025-01-17T11:31:46.5981584Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7bc0>
2025-01-17T11:31:46.5981773Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>, attr = 'nu'
2025-01-17T11:31:46.5981777Z 
2025-01-17T11:31:46.5981910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5982018Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5982099Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5982162Z         try:
2025-01-17T11:31:46.5982294Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5982378Z         except KeyError:
2025-01-17T11:31:46.5982513Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5982773Z     
2025-01-17T11:31:46.5982859Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5982952Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5983032Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5983156Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5983235Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5983320Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5983421Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5983425Z 
2025-01-17T11:31:46.5983547Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5983650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5983790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5983861Z     ???
2025-01-17T11:31:46.5983969Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5983973Z 
2025-01-17T11:31:46.5984034Z >   ???
2025-01-17T11:31:46.5984162Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5984226Z E   
2025-01-17T11:31:46.5984351Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5984454Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5984519Z E          ...
2025-01-17T11:31:46.5984602Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5984722Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5984828Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5984893Z E          ...
2025-01-17T11:31:46.5984974Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5985089Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5985417Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5985422Z 
2025-01-17T11:31:46.5985505Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5985700Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-17T11:31:46.5985704Z 
2025-01-17T11:31:46.5985822Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5985945Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5986033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5986159Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5986272Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5986359Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5986432Z err_msg = None
2025-01-17T11:31:46.5986436Z 
2025-01-17T11:31:46.5986546Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5986619Z         if err_msg is None:
2025-01-17T11:31:46.5986710Z             if left.shape != right.shape:
2025-01-17T11:31:46.5986787Z                 raise_assert_detail(
2025-01-17T11:31:46.5986927Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5987003Z                 )
2025-01-17T11:31:46.5987066Z     
2025-01-17T11:31:46.5987133Z             diff = 0
2025-01-17T11:31:46.5987241Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5987318Z                 # count up differences
2025-01-17T11:31:46.5987483Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5987553Z                     diff += 1
2025-01-17T11:31:46.5987619Z     
2025-01-17T11:31:46.5987698Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5987834Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5987998Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5988189Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5988304Z E           
2025-01-17T11:31:46.5988488Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5988937Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5989373Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5989385Z 
2025-01-17T11:31:46.5989687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5989696Z 
2025-01-17T11:31:46.5989857Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5989861Z 
2025-01-17T11:31:46.5990079Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7c80>
2025-01-17T11:31:46.5990236Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5990311Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5990319Z 
2025-01-17T11:31:46.5990446Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5990556Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5990636Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5990703Z         try:
2025-01-17T11:31:46.5990943Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5991109Z         except KeyError:
2025-01-17T11:31:46.5991244Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5991306Z     
2025-01-17T11:31:46.5991389Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5991475Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5991561Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5991685Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5991766Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5991847Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5991953Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5991956Z 
2025-01-17T11:31:46.5992074Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5992183Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5992324Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5992399Z     ???
2025-01-17T11:31:46.5992500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5992504Z 
2025-01-17T11:31:46.5992721Z >   ???
2025-01-17T11:31:46.5992841Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5992904Z E   
2025-01-17T11:31:46.5993029Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5993131Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5993201Z E          ...
2025-01-17T11:31:46.5993279Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5993401Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5993502Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5993573Z E          ...
2025-01-17T11:31:46.5993650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5993776Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5993879Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5993883Z 
2025-01-17T11:31:46.5993967Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5994149Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-17T11:31:46.5994153Z 
2025-01-17T11:31:46.5994271Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5994386Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5994480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5994604Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5994721Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5994806Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5994884Z err_msg = None
2025-01-17T11:31:46.5994892Z 
2025-01-17T11:31:46.5994993Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5995073Z         if err_msg is None:
2025-01-17T11:31:46.5995161Z             if left.shape != right.shape:
2025-01-17T11:31:46.5995254Z                 raise_assert_detail(
2025-01-17T11:31:46.5995409Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5995477Z                 )
2025-01-17T11:31:46.5995537Z     
2025-01-17T11:31:46.5995603Z             diff = 0
2025-01-17T11:31:46.5995707Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5995788Z                 # count up differences
2025-01-17T11:31:46.5995970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5996044Z                     diff += 1
2025-01-17T11:31:46.5996124Z     
2025-01-17T11:31:46.5996206Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5996583Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5996746Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5996853Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5996919Z E           
2025-01-17T11:31:46.5997027Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5997281Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5997543Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5997553Z 
2025-01-17T11:31:46.5997995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5998003Z 
2025-01-17T11:31:46.5998284Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5998290Z 
2025-01-17T11:31:46.5998653Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7d40>
2025-01-17T11:31:46.5998987Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>, attr = 'f_lu'
2025-01-17T11:31:46.5998993Z 
2025-01-17T11:31:46.5999130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5999245Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5999320Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5999389Z         try:
2025-01-17T11:31:46.5999528Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5999610Z         except KeyError:
2025-01-17T11:31:46.5999739Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5999806Z     
2025-01-17T11:31:46.5999886Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5999976Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6000056Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6000185Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6000263Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6000349Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6000454Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6000458Z 
2025-01-17T11:31:46.6000575Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6000677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6000821Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6000884Z     ???
2025-01-17T11:31:46.6000992Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6000996Z 
2025-01-17T11:31:46.6001057Z >   ???
2025-01-17T11:31:46.6001176Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6001238Z E   
2025-01-17T11:31:46.6001356Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6001462Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6001527Z E          ...
2025-01-17T11:31:46.6001609Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6001726Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6001831Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6001898Z E          ...
2025-01-17T11:31:46.6001975Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6002193Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6002364Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6002368Z 
2025-01-17T11:31:46.6002451Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6002844Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-17T11:31:46.6002850Z 
2025-01-17T11:31:46.6002970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6003091Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6003178Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6003304Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6003424Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6003512Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6003590Z err_msg = None
2025-01-17T11:31:46.6003594Z 
2025-01-17T11:31:46.6003700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6003773Z         if err_msg is None:
2025-01-17T11:31:46.6003861Z             if left.shape != right.shape:
2025-01-17T11:31:46.6003937Z                 raise_assert_detail(
2025-01-17T11:31:46.6004074Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6004138Z                 )
2025-01-17T11:31:46.6004203Z     
2025-01-17T11:31:46.6004268Z             diff = 0
2025-01-17T11:31:46.6004371Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6004452Z                 # count up differences
2025-01-17T11:31:46.6004611Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6004684Z                     diff += 1
2025-01-17T11:31:46.6004747Z     
2025-01-17T11:31:46.6004832Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6004963Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6005129Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6005229Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6005298Z E           
2025-01-17T11:31:46.6005399Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6005651Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6005906Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6005913Z 
2025-01-17T11:31:46.6006205Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6006209Z 
2025-01-17T11:31:46.6006368Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6006377Z 
2025-01-17T11:31:46.6006587Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e8500>
2025-01-17T11:31:46.6006742Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.6006816Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6006819Z 
2025-01-17T11:31:46.6006947Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6007055Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6007131Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6007199Z         try:
2025-01-17T11:31:46.6007463Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6007640Z         except KeyError:
2025-01-17T11:31:46.6007770Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6007835Z     
2025-01-17T11:31:46.6007913Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6008003Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6008082Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6008208Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6008286Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6008372Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6008474Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6008542Z             else:
2025-01-17T11:31:46.6008628Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6008726Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6008739Z 
2025-01-17T11:31:46.6008855Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6008964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6009102Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6009165Z     ???
2025-01-17T11:31:46.6009269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6009273Z 
2025-01-17T11:31:46.6009335Z >   ???
2025-01-17T11:31:46.6009464Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6009527Z E   
2025-01-17T11:31:46.6009654Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6009754Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6009821Z E          ...
2025-01-17T11:31:46.6009899Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6010019Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6010126Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6010198Z E          ...
2025-01-17T11:31:46.6010274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6010391Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6010486Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6010490Z 
2025-01-17T11:31:46.6010573Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6010761Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-17T11:31:46.6010764Z 
2025-01-17T11:31:46.6010887Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6011001Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6011090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6011211Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6011333Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6011418Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6011487Z err_msg = None
2025-01-17T11:31:46.6011491Z 
2025-01-17T11:31:46.6011591Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6011665Z         if err_msg is None:
2025-01-17T11:31:46.6011751Z             if left.shape != right.shape:
2025-01-17T11:31:46.6011827Z                 raise_assert_detail(
2025-01-17T11:31:46.6011967Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6012031Z                 )
2025-01-17T11:31:46.6012097Z     
2025-01-17T11:31:46.6012162Z             diff = 0
2025-01-17T11:31:46.6012266Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6012344Z                 # count up differences
2025-01-17T11:31:46.6012723Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6012905Z                     diff += 1
2025-01-17T11:31:46.6012973Z     
2025-01-17T11:31:46.6013054Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6013183Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6013343Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6013464Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6013588Z E           
2025-01-17T11:31:46.6013782Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6014235Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6014716Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6014722Z 
2025-01-17T11:31:46.6015024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6015028Z 
2025-01-17T11:31:46.6015192Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6015196Z 
2025-01-17T11:31:46.6015408Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e85c0>
2025-01-17T11:31:46.6015569Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.6015641Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6015645Z 
2025-01-17T11:31:46.6015777Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6015890Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6015970Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6016034Z         try:
2025-01-17T11:31:46.6016170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6016245Z         except KeyError:
2025-01-17T11:31:46.6016375Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6016437Z     
2025-01-17T11:31:46.6016518Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6016603Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6016687Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6016809Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6016892Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6016975Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6017076Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6017148Z             else:
2025-01-17T11:31:46.6017240Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6017341Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6017344Z 
2025-01-17T11:31:46.6017459Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6017566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6017700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6017766Z     ???
2025-01-17T11:31:46.6017866Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6017870Z 
2025-01-17T11:31:46.6017938Z >   ???
2025-01-17T11:31:46.6018057Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6018121Z E   
2025-01-17T11:31:46.6018238Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6018342Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6018539Z E          ...
2025-01-17T11:31:46.6018696Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6018816Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6018922Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6018987Z E          ...
2025-01-17T11:31:46.6019067Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6019182Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6019278Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6019285Z 
2025-01-17T11:31:46.6019367Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6019552Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-17T11:31:46.6019559Z 
2025-01-17T11:31:46.6019676Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6019791Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6019894Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6020016Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6020135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6020221Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6020293Z err_msg = None
2025-01-17T11:31:46.6020296Z 
2025-01-17T11:31:46.6020397Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6020472Z         if err_msg is None:
2025-01-17T11:31:46.6020556Z             if left.shape != right.shape:
2025-01-17T11:31:46.6020634Z                 raise_assert_detail(
2025-01-17T11:31:46.6020805Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6020872Z                 )
2025-01-17T11:31:46.6020938Z     
2025-01-17T11:31:46.6021005Z             diff = 0
2025-01-17T11:31:46.6021111Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6021191Z                 # count up differences
2025-01-17T11:31:46.6021350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6021423Z                     diff += 1
2025-01-17T11:31:46.6021484Z     
2025-01-17T11:31:46.6021567Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6021693Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6021857Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6021958Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6022023Z E           
2025-01-17T11:31:46.6022126Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6022379Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6022877Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6022885Z 
2025-01-17T11:31:46.6023410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6023418Z 
2025-01-17T11:31:46.6023692Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6023699Z 
2025-01-17T11:31:46.6024065Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e8740>
2025-01-17T11:31:46.6024580Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.6024661Z attr = 'j_blues'
2025-01-17T11:31:46.6024666Z 
2025-01-17T11:31:46.6024799Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6024908Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6024985Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6025051Z         try:
2025-01-17T11:31:46.6025183Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6025258Z         except KeyError:
2025-01-17T11:31:46.6025386Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6025452Z     
2025-01-17T11:31:46.6025532Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6025619Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6025704Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6025827Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6025916Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6026004Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6026110Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6026176Z             else:
2025-01-17T11:31:46.6026265Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6026363Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6026367Z 
2025-01-17T11:31:46.6026485Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6026589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6026728Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6026791Z     ???
2025-01-17T11:31:46.6026895Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6026899Z 
2025-01-17T11:31:46.6026961Z >   ???
2025-01-17T11:31:46.6027081Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6027147Z E   
2025-01-17T11:31:46.6027272Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6027373Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6027441Z E          ...
2025-01-17T11:31:46.6027520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6027638Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6027745Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6027809Z E          ...
2025-01-17T11:31:46.6027888Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6028003Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6028100Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6028104Z 
2025-01-17T11:31:46.6028185Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6028389Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-17T11:31:46.6028398Z 
2025-01-17T11:31:46.6028518Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6028642Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6028729Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6028857Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6028971Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6029058Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6029127Z err_msg = None
2025-01-17T11:31:46.6029130Z 
2025-01-17T11:31:46.6029237Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6029309Z         if err_msg is None:
2025-01-17T11:31:46.6029398Z             if left.shape != right.shape:
2025-01-17T11:31:46.6029562Z                 raise_assert_detail(
2025-01-17T11:31:46.6029775Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6029840Z                 )
2025-01-17T11:31:46.6029904Z     
2025-01-17T11:31:46.6029969Z             diff = 0
2025-01-17T11:31:46.6030074Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6030151Z                 # count up differences
2025-01-17T11:31:46.6030313Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6030382Z                     diff += 1
2025-01-17T11:31:46.6030443Z     
2025-01-17T11:31:46.6030528Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6030653Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6030818Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6030922Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6030996Z E           
2025-01-17T11:31:46.6031103Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6031358Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6031609Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6031620Z 
2025-01-17T11:31:46.6031908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6031923Z 
2025-01-17T11:31:46.6032085Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6032093Z 
2025-01-17T11:31:46.6032305Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e94c0>
2025-01-17T11:31:46.6032462Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6032681Z attr = 'lines'
2025-01-17T11:31:46.6032687Z 
2025-01-17T11:31:46.6032825Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6032931Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6033013Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6033077Z         try:
2025-01-17T11:31:46.6033208Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6033284Z         except KeyError:
2025-01-17T11:31:46.6033411Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6033476Z     
2025-01-17T11:31:46.6033554Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6033652Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6033738Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6033863Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6033940Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6034024Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6034124Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6034193Z             else:
2025-01-17T11:31:46.6034279Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6034378Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6034382Z 
2025-01-17T11:31:46.6034497Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6034602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6034738Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6034807Z     ???
2025-01-17T11:31:46.6035151Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6035156Z 
2025-01-17T11:31:46.6035223Z >   ???
2025-01-17T11:31:46.6035340Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6035405Z E   
2025-01-17T11:31:46.6035529Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6035632Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6035699Z E          ...
2025-01-17T11:31:46.6035776Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6035895Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6035998Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6036066Z E          ...
2025-01-17T11:31:46.6036141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6036256Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6036354Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6036358Z 
2025-01-17T11:31:46.6036447Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6036687Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-17T11:31:46.6036691Z 
2025-01-17T11:31:46.6036903Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9580>
2025-01-17T11:31:46.6037056Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6037141Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.6037145Z 
2025-01-17T11:31:46.6037270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6037375Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6037450Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6037518Z         try:
2025-01-17T11:31:46.6037648Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6037724Z         except KeyError:
2025-01-17T11:31:46.6037857Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6037926Z     
2025-01-17T11:31:46.6038004Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6038089Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6038174Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6038297Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6038377Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6038461Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6038564Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6038568Z 
2025-01-17T11:31:46.6038683Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6038789Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6038793Z 
2025-01-17T11:31:46.6038916Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6039002Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6039104Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6039180Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6039309Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6039387Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6039490Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6039567Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6039635Z err_msg = None
2025-01-17T11:31:46.6039639Z 
2025-01-17T11:31:46.6039743Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6039816Z         if err_msg is None:
2025-01-17T11:31:46.6039905Z             if left.shape != right.shape:
2025-01-17T11:31:46.6039983Z                 raise_assert_detail(
2025-01-17T11:31:46.6040120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6040274Z                 )
2025-01-17T11:31:46.6040428Z     
2025-01-17T11:31:46.6040495Z             diff = 0
2025-01-17T11:31:46.6040598Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6040682Z                 # count up differences
2025-01-17T11:31:46.6040842Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6040916Z                     diff += 1
2025-01-17T11:31:46.6040978Z     
2025-01-17T11:31:46.6041058Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6041182Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6041341Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6041435Z E           AssertionError: Series are different
2025-01-17T11:31:46.6041501Z E           
2025-01-17T11:31:46.6041591Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.6041968Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6042291Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6042810Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6042821Z 
2025-01-17T11:31:46.6043128Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6043368Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-17T11:31:46.6043372Z 
2025-01-17T11:31:46.6043592Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9640>
2025-01-17T11:31:46.6043754Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6043841Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.6043845Z 
2025-01-17T11:31:46.6043971Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6044078Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6044158Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6044226Z         try:
2025-01-17T11:31:46.6044363Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6044437Z         except KeyError:
2025-01-17T11:31:46.6044565Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6044626Z     
2025-01-17T11:31:46.6044707Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6044789Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6044871Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6044994Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6045072Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6045152Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6045253Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6045257Z 
2025-01-17T11:31:46.6045374Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6045607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6045712Z 
2025-01-17T11:31:46.6045839Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6045918Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6046013Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6046087Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6046214Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6046291Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6046387Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6046460Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6046527Z err_msg = None
2025-01-17T11:31:46.6046530Z 
2025-01-17T11:31:46.6046635Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6046715Z         if err_msg is None:
2025-01-17T11:31:46.6046807Z             if left.shape != right.shape:
2025-01-17T11:31:46.6046885Z                 raise_assert_detail(
2025-01-17T11:31:46.6047021Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6047085Z                 )
2025-01-17T11:31:46.6047145Z     
2025-01-17T11:31:46.6047214Z             diff = 0
2025-01-17T11:31:46.6047316Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6047443Z                 # count up differences
2025-01-17T11:31:46.6047730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6047856Z                     diff += 1
2025-01-17T11:31:46.6047964Z     
2025-01-17T11:31:46.6048110Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6048323Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6048602Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6048770Z E           AssertionError: Series are different
2025-01-17T11:31:46.6048882Z E           
2025-01-17T11:31:46.6049035Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.6049413Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6049780Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6050155Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6050160Z 
2025-01-17T11:31:46.6050455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6050646Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-17T11:31:46.6050650Z 
2025-01-17T11:31:46.6050771Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6050888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6051192Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6051318Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6051434Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6051519Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6051591Z err_msg = None
2025-01-17T11:31:46.6051594Z 
2025-01-17T11:31:46.6051694Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6051770Z         if err_msg is None:
2025-01-17T11:31:46.6051853Z             if left.shape != right.shape:
2025-01-17T11:31:46.6051931Z                 raise_assert_detail(
2025-01-17T11:31:46.6052064Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6052132Z                 )
2025-01-17T11:31:46.6052203Z     
2025-01-17T11:31:46.6052269Z             diff = 0
2025-01-17T11:31:46.6052381Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6052462Z                 # count up differences
2025-01-17T11:31:46.6052740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6052812Z                     diff += 1
2025-01-17T11:31:46.6052878Z     
2025-01-17T11:31:46.6052956Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6053083Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6053239Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6053344Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6053407Z E           
2025-01-17T11:31:46.6053513Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6053773Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6054035Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6054039Z 
2025-01-17T11:31:46.6054328Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6054332Z 
2025-01-17T11:31:46.6054496Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6054500Z 
2025-01-17T11:31:46.6054716Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9880>
2025-01-17T11:31:46.6054914Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>, attr = 'nu'
2025-01-17T11:31:46.6054917Z 
2025-01-17T11:31:46.6055044Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6055153Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6055231Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6055298Z         try:
2025-01-17T11:31:46.6055428Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6055504Z         except KeyError:
2025-01-17T11:31:46.6055631Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6055695Z     
2025-01-17T11:31:46.6055772Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6055862Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6055940Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6056064Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6056266Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6056450Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6056555Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6056559Z 
2025-01-17T11:31:46.6056678Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6056781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6056920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6056984Z     ???
2025-01-17T11:31:46.6057085Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6057093Z 
2025-01-17T11:31:46.6057154Z >   ???
2025-01-17T11:31:46.6057271Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6057335Z E   
2025-01-17T11:31:46.6057450Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6057556Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6057629Z E          ...
2025-01-17T11:31:46.6057712Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6057830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6057934Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6057997Z E          ...
2025-01-17T11:31:46.6058075Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6058189Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6058290Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6058294Z 
2025-01-17T11:31:46.6058378Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6058591Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-17T11:31:46.6058595Z 
2025-01-17T11:31:46.6058712Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6058831Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6058929Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6059053Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6059164Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6059252Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6059321Z err_msg = None
2025-01-17T11:31:46.6059325Z 
2025-01-17T11:31:46.6059428Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6059500Z         if err_msg is None:
2025-01-17T11:31:46.6059591Z             if left.shape != right.shape:
2025-01-17T11:31:46.6059667Z                 raise_assert_detail(
2025-01-17T11:31:46.6059802Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6059871Z                 )
2025-01-17T11:31:46.6059938Z     
2025-01-17T11:31:46.6060008Z             diff = 0
2025-01-17T11:31:46.6060113Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6060197Z                 # count up differences
2025-01-17T11:31:46.6060358Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6060430Z                     diff += 1
2025-01-17T11:31:46.6060491Z     
2025-01-17T11:31:46.6060574Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6060704Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6060865Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6060969Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6061039Z E           
2025-01-17T11:31:46.6061142Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6061488Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6061818Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6061823Z 
2025-01-17T11:31:46.6062116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6062119Z 
2025-01-17T11:31:46.6062278Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6062282Z 
2025-01-17T11:31:46.6062500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9940>
2025-01-17T11:31:46.6062849Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6062929Z attr = 'wavelength_cm'
2025-01-17T11:31:46.6062933Z 
2025-01-17T11:31:46.6063064Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6063180Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6063258Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6063328Z         try:
2025-01-17T11:31:46.6063459Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6063536Z         except KeyError:
2025-01-17T11:31:46.6063665Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6063733Z     
2025-01-17T11:31:46.6063809Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6063896Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6063975Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6064101Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6064183Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6064271Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6064370Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6064374Z 
2025-01-17T11:31:46.6064492Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6064595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6064731Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6064802Z     ???
2025-01-17T11:31:46.6064901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6064905Z 
2025-01-17T11:31:46.6064970Z >   ???
2025-01-17T11:31:46.6065086Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6065150Z E   
2025-01-17T11:31:46.6065266Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6065376Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6065442Z E          ...
2025-01-17T11:31:46.6065527Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6065646Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6065749Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6065813Z E          ...
2025-01-17T11:31:46.6065891Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6066005Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6066102Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6066106Z 
2025-01-17T11:31:46.6066186Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6066378Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-17T11:31:46.6066382Z 
2025-01-17T11:31:46.6066498Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6066854Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6066944Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6067067Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6067185Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6067275Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6067342Z err_msg = None
2025-01-17T11:31:46.6067346Z 
2025-01-17T11:31:46.6067450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6067523Z         if err_msg is None:
2025-01-17T11:31:46.6067607Z             if left.shape != right.shape:
2025-01-17T11:31:46.6067686Z                 raise_assert_detail(
2025-01-17T11:31:46.6067822Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6067896Z                 )
2025-01-17T11:31:46.6067958Z     
2025-01-17T11:31:46.6068027Z             diff = 0
2025-01-17T11:31:46.6068139Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6068219Z                 # count up differences
2025-01-17T11:31:46.6068380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6068453Z                     diff += 1
2025-01-17T11:31:46.6068514Z     
2025-01-17T11:31:46.6068597Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6068723Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6068890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6068998Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6069067Z E           
2025-01-17T11:31:46.6069170Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6069431Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6069697Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6069700Z 
2025-01-17T11:31:46.6070003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6070007Z 
2025-01-17T11:31:46.6070171Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6070175Z 
2025-01-17T11:31:46.6070391Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9a00>
2025-01-17T11:31:46.6070593Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>, attr = 'f_lu'
2025-01-17T11:31:46.6070596Z 
2025-01-17T11:31:46.6070730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6070837Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6070919Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6070984Z         try:
2025-01-17T11:31:46.6071119Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6071195Z         except KeyError:
2025-01-17T11:31:46.6071327Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6071389Z     
2025-01-17T11:31:46.6071471Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6071557Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6071639Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6071760Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6072080Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6072378Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6072719Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6072727Z 
2025-01-17T11:31:46.6072885Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6072997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6073135Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6073198Z     ???
2025-01-17T11:31:46.6073303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6073307Z 
2025-01-17T11:31:46.6073368Z >   ???
2025-01-17T11:31:46.6073488Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6073550Z E   
2025-01-17T11:31:46.6073671Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6073770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6073845Z E          ...
2025-01-17T11:31:46.6073930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6074051Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6074153Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6074223Z E          ...
2025-01-17T11:31:46.6074299Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6074415Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6074511Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6074514Z 
2025-01-17T11:31:46.6074599Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6074800Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-17T11:31:46.6074804Z 
2025-01-17T11:31:46.6074923Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6075046Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6075142Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6075266Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6075382Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6075468Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6075538Z err_msg = None
2025-01-17T11:31:46.6075542Z 
2025-01-17T11:31:46.6075646Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6075722Z         if err_msg is None:
2025-01-17T11:31:46.6075807Z             if left.shape != right.shape:
2025-01-17T11:31:46.6075883Z                 raise_assert_detail(
2025-01-17T11:31:46.6076021Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6076085Z                 )
2025-01-17T11:31:46.6076152Z     
2025-01-17T11:31:46.6076217Z             diff = 0
2025-01-17T11:31:46.6076325Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6076404Z                 # count up differences
2025-01-17T11:31:46.6076567Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6076636Z                     diff += 1
2025-01-17T11:31:46.6076699Z     
2025-01-17T11:31:46.6076777Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6076905Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6077065Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6077170Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6077235Z E           
2025-01-17T11:31:46.6077337Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6077719Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6078081Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6078086Z 
2025-01-17T11:31:46.6078380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6078383Z 
2025-01-17T11:31:46.6078548Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6078552Z 
2025-01-17T11:31:46.6078765Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ea180>
2025-01-17T11:31:46.6078932Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6079003Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6079007Z 
2025-01-17T11:31:46.6079136Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6079241Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6079318Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6079381Z         try:
2025-01-17T11:31:46.6079514Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6079587Z         except KeyError:
2025-01-17T11:31:46.6079719Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6079782Z     
2025-01-17T11:31:46.6079863Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6079948Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6080033Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6080153Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6080244Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6080326Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6080425Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6080494Z             else:
2025-01-17T11:31:46.6080581Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6080680Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6080684Z 
2025-01-17T11:31:46.6080799Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6080905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6081040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6081105Z     ???
2025-01-17T11:31:46.6081205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6081208Z 
2025-01-17T11:31:46.6081275Z >   ???
2025-01-17T11:31:46.6081396Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6081462Z E   
2025-01-17T11:31:46.6081585Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6081690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6081756Z E          ...
2025-01-17T11:31:46.6081838Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6081953Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6082061Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6082124Z E          ...
2025-01-17T11:31:46.6082204Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6082317Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6082412Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6082418Z 
2025-01-17T11:31:46.6082500Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6082892Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-17T11:31:46.6083023Z 
2025-01-17T11:31:46.6083253Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6083382Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6083471Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6083594Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6083713Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6083798Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6083869Z err_msg = None
2025-01-17T11:31:46.6083872Z 
2025-01-17T11:31:46.6083972Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6084047Z         if err_msg is None:
2025-01-17T11:31:46.6084134Z             if left.shape != right.shape:
2025-01-17T11:31:46.6084219Z                 raise_assert_detail(
2025-01-17T11:31:46.6084358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6084424Z                 )
2025-01-17T11:31:46.6084484Z     
2025-01-17T11:31:46.6084553Z             diff = 0
2025-01-17T11:31:46.6084655Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6084737Z                 # count up differences
2025-01-17T11:31:46.6084896Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6084967Z                     diff += 1
2025-01-17T11:31:46.6085029Z     
2025-01-17T11:31:46.6085112Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6085241Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6085401Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6085502Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6085571Z E           
2025-01-17T11:31:46.6085677Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6085928Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6086184Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6086188Z 
2025-01-17T11:31:46.6086481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6086489Z 
2025-01-17T11:31:46.6086655Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6086659Z 
2025-01-17T11:31:46.6086875Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ea240>
2025-01-17T11:31:46.6087030Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6087104Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6087108Z 
2025-01-17T11:31:46.6087235Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6087342Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6087417Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6087482Z         try:
2025-01-17T11:31:46.6087611Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6087686Z         except KeyError:
2025-01-17T11:31:46.6087815Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6087879Z     
2025-01-17T11:31:46.6088044Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6088203Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6088289Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6088413Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6088491Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6088573Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6088674Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6088737Z             else:
2025-01-17T11:31:46.6088826Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6088923Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6088927Z 
2025-01-17T11:31:46.6089044Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6089148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6089283Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6089350Z     ???
2025-01-17T11:31:46.6089460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6089464Z 
2025-01-17T11:31:46.6089538Z >   ???
2025-01-17T11:31:46.6089656Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6089720Z E   
2025-01-17T11:31:46.6089840Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6089965Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6090091Z E          ...
2025-01-17T11:31:46.6090229Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6090435Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6090622Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6090734Z E          ...
2025-01-17T11:31:46.6090867Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6091061Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6091235Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6091249Z 
2025-01-17T11:31:46.6091382Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6091640Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-17T11:31:46.6091645Z 
2025-01-17T11:31:46.6091766Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6091884Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6091971Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6092098Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6092209Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6092298Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6092371Z err_msg = None
2025-01-17T11:31:46.6092374Z 
2025-01-17T11:31:46.6092488Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6092672Z         if err_msg is None:
2025-01-17T11:31:46.6092767Z             if left.shape != right.shape:
2025-01-17T11:31:46.6092845Z                 raise_assert_detail(
2025-01-17T11:31:46.6092980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6093044Z                 )
2025-01-17T11:31:46.6093108Z     
2025-01-17T11:31:46.6093174Z             diff = 0
2025-01-17T11:31:46.6093279Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6093359Z                 # count up differences
2025-01-17T11:31:46.6093522Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6093593Z                     diff += 1
2025-01-17T11:31:46.6093654Z     
2025-01-17T11:31:46.6093739Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6094024Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6094288Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6094395Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6094464Z E           
2025-01-17T11:31:46.6094563Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6094816Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6095069Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6095083Z 
2025-01-17T11:31:46.6095375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6095379Z 
2025-01-17T11:31:46.6095544Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6095548Z 
2025-01-17T11:31:46.6095758Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ea3c0>
2025-01-17T11:31:46.6095917Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6095983Z attr = 'j_blues'
2025-01-17T11:31:46.6095986Z 
2025-01-17T11:31:46.6096117Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6096224Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6096303Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6096365Z         try:
2025-01-17T11:31:46.6096496Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6096576Z         except KeyError:
2025-01-17T11:31:46.6096708Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6096774Z     
2025-01-17T11:31:46.6096853Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6096945Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6097027Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6097162Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6097241Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6097326Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6097430Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6097497Z             else:
2025-01-17T11:31:46.6097583Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6097685Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6097689Z 
2025-01-17T11:31:46.6097808Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6097928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6098065Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6098132Z     ???
2025-01-17T11:31:46.6098233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6098237Z 
2025-01-17T11:31:46.6098300Z >   ???
2025-01-17T11:31:46.6098419Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6098480Z E   
2025-01-17T11:31:46.6098603Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6098703Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6098771Z E          ...
2025-01-17T11:31:46.6098852Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6098975Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6099077Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6099233Z E          ...
2025-01-17T11:31:46.6099408Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6099528Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6099626Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6099630Z 
2025-01-17T11:31:46.6099716Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6099965Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-17T11:31:46.6099969Z 
2025-01-17T11:31:46.6100094Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6100216Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6100309Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6100434Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6100564Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6100648Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6100718Z err_msg = None
2025-01-17T11:31:46.6100722Z 
2025-01-17T11:31:46.6100828Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6100903Z         if err_msg is None:
2025-01-17T11:31:46.6100991Z             if left.shape != right.shape:
2025-01-17T11:31:46.6101074Z                 raise_assert_detail(
2025-01-17T11:31:46.6101210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6101280Z                 )
2025-01-17T11:31:46.6101343Z     
2025-01-17T11:31:46.6101410Z             diff = 0
2025-01-17T11:31:46.6101519Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6101598Z                 # count up differences
2025-01-17T11:31:46.6101762Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6101839Z                     diff += 1
2025-01-17T11:31:46.6101911Z     
2025-01-17T11:31:46.6101994Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6102123Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6102282Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6102389Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6102457Z E           
2025-01-17T11:31:46.6102730Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6103012Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6103275Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6103283Z 
2025-01-17T11:31:46.6103577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6103584Z 
2025-01-17T11:31:46.6103745Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6103749Z 
2025-01-17T11:31:46.6103965Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb140>
2025-01-17T11:31:46.6104119Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6104188Z attr = 'lines'
2025-01-17T11:31:46.6104194Z 
2025-01-17T11:31:46.6104326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6104563Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6104743Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6104810Z         try:
2025-01-17T11:31:46.6104947Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6105019Z         except KeyError:
2025-01-17T11:31:46.6105152Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6105213Z     
2025-01-17T11:31:46.6105298Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6105383Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6105467Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6105586Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6105666Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6105746Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6105851Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6105916Z             else:
2025-01-17T11:31:46.6106010Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6106111Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6106114Z 
2025-01-17T11:31:46.6106233Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6106336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6106471Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6106538Z     ???
2025-01-17T11:31:46.6106639Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6106643Z 
2025-01-17T11:31:46.6106711Z >   ???
2025-01-17T11:31:46.6106827Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6106891Z E   
2025-01-17T11:31:46.6107008Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6107111Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6107175Z E          ...
2025-01-17T11:31:46.6107260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6107382Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6107488Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6107551Z E          ...
2025-01-17T11:31:46.6107632Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6107747Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6107844Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6107847Z 
2025-01-17T11:31:46.6107929Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6108233Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-17T11:31:46.6108238Z 
2025-01-17T11:31:46.6108449Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb200>
2025-01-17T11:31:46.6108608Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6108692Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.6108696Z 
2025-01-17T11:31:46.6108827Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6108931Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6109008Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6109073Z         try:
2025-01-17T11:31:46.6109204Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6109276Z         except KeyError:
2025-01-17T11:31:46.6109404Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6109469Z     
2025-01-17T11:31:46.6109547Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6109634Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6109714Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6109843Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6109921Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6110098Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6110277Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6110281Z 
2025-01-17T11:31:46.6110403Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6110510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6110514Z 
2025-01-17T11:31:46.6110643Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6110722Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6110831Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6110906Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6111040Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6111116Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6111219Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6111300Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6111375Z err_msg = None
2025-01-17T11:31:46.6111379Z 
2025-01-17T11:31:46.6111482Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6111561Z         if err_msg is None:
2025-01-17T11:31:46.6111648Z             if left.shape != right.shape:
2025-01-17T11:31:46.6111730Z                 raise_assert_detail(
2025-01-17T11:31:46.6111863Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6111929Z                 )
2025-01-17T11:31:46.6111994Z     
2025-01-17T11:31:46.6112062Z             diff = 0
2025-01-17T11:31:46.6112171Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6112252Z                 # count up differences
2025-01-17T11:31:46.6112418Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6112489Z                     diff += 1
2025-01-17T11:31:46.6112663Z     
2025-01-17T11:31:46.6112745Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6112884Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6113045Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6113145Z E           AssertionError: Series are different
2025-01-17T11:31:46.6113211Z E           
2025-01-17T11:31:46.6113309Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.6113673Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6114001Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6114331Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6114340Z 
2025-01-17T11:31:46.6114821Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6115377Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-17T11:31:46.6115576Z 
2025-01-17T11:31:46.6116100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb2c0>
2025-01-17T11:31:46.6116300Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6116388Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.6116392Z 
2025-01-17T11:31:46.6116526Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6116637Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6116718Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6116824Z         try:
2025-01-17T11:31:46.6116997Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6117248Z         except KeyError:
2025-01-17T11:31:46.6117416Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6117569Z     
2025-01-17T11:31:46.6117686Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6117842Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6118010Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6118230Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6118362Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6118515Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6118656Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6118660Z 
2025-01-17T11:31:46.6118885Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6119045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6119049Z 
2025-01-17T11:31:46.6119266Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6119377Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6119557Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6119652Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6120339Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6120469Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6120602Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6128551Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6128655Z err_msg = None
2025-01-17T11:31:46.6128661Z 
2025-01-17T11:31:46.6128784Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6128860Z         if err_msg is None:
2025-01-17T11:31:46.6128956Z             if left.shape != right.shape:
2025-01-17T11:31:46.6129039Z                 raise_assert_detail(
2025-01-17T11:31:46.6129191Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6129257Z                 )
2025-01-17T11:31:46.6129318Z     
2025-01-17T11:31:46.6129385Z             diff = 0
2025-01-17T11:31:46.6129491Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6129585Z                 # count up differences
2025-01-17T11:31:46.6129765Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6129839Z                     diff += 1
2025-01-17T11:31:46.6129900Z     
2025-01-17T11:31:46.6129985Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6130116Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6130281Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6130379Z E           AssertionError: Series are different
2025-01-17T11:31:46.6130446Z E           
2025-01-17T11:31:46.6130541Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.6131080Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6131559Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6131935Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6131950Z 
2025-01-17T11:31:46.6132301Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6132877Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-17T11:31:46.6132886Z 
2025-01-17T11:31:46.6133111Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6133315Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6133468Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6133676Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6133879Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6134026Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6134105Z err_msg = None
2025-01-17T11:31:46.6134115Z 
2025-01-17T11:31:46.6134224Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6134298Z         if err_msg is None:
2025-01-17T11:31:46.6134388Z             if left.shape != right.shape:
2025-01-17T11:31:46.6134464Z                 raise_assert_detail(
2025-01-17T11:31:46.6134607Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6134671Z                 )
2025-01-17T11:31:46.6134734Z     
2025-01-17T11:31:46.6134799Z             diff = 0
2025-01-17T11:31:46.6134907Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6134988Z                 # count up differences
2025-01-17T11:31:46.6135158Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6135228Z                     diff += 1
2025-01-17T11:31:46.6135292Z     
2025-01-17T11:31:46.6135377Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6135514Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6135676Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6135783Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6135847Z E           
2025-01-17T11:31:46.6135955Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6136210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6136598Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6136703Z 
2025-01-17T11:31:46.6137005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6137009Z 
2025-01-17T11:31:46.6137176Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6137181Z 
2025-01-17T11:31:46.6137399Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb500>
2025-01-17T11:31:46.6137590Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>, attr = 'nu'
2025-01-17T11:31:46.6137594Z 
2025-01-17T11:31:46.6137726Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6137837Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6137913Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6137982Z         try:
2025-01-17T11:31:46.6138122Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6138203Z         except KeyError:
2025-01-17T11:31:46.6138336Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6138399Z     
2025-01-17T11:31:46.6138479Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6138566Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6138647Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6138775Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6138852Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6138932Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6139036Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6139040Z 
2025-01-17T11:31:46.6139158Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6139267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6139418Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6139489Z     ???
2025-01-17T11:31:46.6139591Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6139595Z 
2025-01-17T11:31:46.6139658Z >   ???
2025-01-17T11:31:46.6139777Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6139845Z E   
2025-01-17T11:31:46.6139962Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6140065Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6140130Z E          ...
2025-01-17T11:31:46.6140212Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6140332Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6140438Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6140501Z E          ...
2025-01-17T11:31:46.6140580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6140698Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6140803Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6140808Z 
2025-01-17T11:31:46.6140889Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6141165Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-17T11:31:46.6141170Z 
2025-01-17T11:31:46.6141290Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6141412Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6141500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6141624Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6141739Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6141914Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6142079Z err_msg = None
2025-01-17T11:31:46.6142083Z 
2025-01-17T11:31:46.6142193Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6142266Z         if err_msg is None:
2025-01-17T11:31:46.6142354Z             if left.shape != right.shape:
2025-01-17T11:31:46.6142433Z                 raise_assert_detail(
2025-01-17T11:31:46.6142801Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6142893Z                 )
2025-01-17T11:31:46.6142959Z     
2025-01-17T11:31:46.6143027Z             diff = 0
2025-01-17T11:31:46.6143130Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6143215Z                 # count up differences
2025-01-17T11:31:46.6143375Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6143451Z                     diff += 1
2025-01-17T11:31:46.6143511Z     
2025-01-17T11:31:46.6143603Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6143732Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6143894Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6143996Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6144063Z E           
2025-01-17T11:31:46.6144164Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6144418Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6144677Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6144685Z 
2025-01-17T11:31:46.6144986Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6144990Z 
2025-01-17T11:31:46.6145148Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6145153Z 
2025-01-17T11:31:46.6145370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb5c0>
2025-01-17T11:31:46.6145525Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6145600Z attr = 'wavelength_cm'
2025-01-17T11:31:46.6145603Z 
2025-01-17T11:31:46.6145731Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6145839Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6145915Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6145983Z         try:
2025-01-17T11:31:46.6146121Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6146195Z         except KeyError:
2025-01-17T11:31:46.6146323Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6146386Z     
2025-01-17T11:31:46.6146464Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6146550Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6146632Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6146756Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6146834Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6146915Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6147018Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6147022Z 
2025-01-17T11:31:46.6147139Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6147247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6147611Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6147679Z     ???
2025-01-17T11:31:46.6147781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6147785Z 
2025-01-17T11:31:46.6147849Z >   ???
2025-01-17T11:31:46.6147964Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6148028Z E   
2025-01-17T11:31:46.6148146Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6148254Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6148319Z E          ...
2025-01-17T11:31:46.6148401Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6148520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6148623Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6148687Z E          ...
2025-01-17T11:31:46.6148772Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6148890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6148987Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6148992Z 
2025-01-17T11:31:46.6149074Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6149319Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-17T11:31:46.6149324Z 
2025-01-17T11:31:46.6149443Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6149563Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6149649Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6149773Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6149887Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6149979Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6150051Z err_msg = None
2025-01-17T11:31:46.6150055Z 
2025-01-17T11:31:46.6150163Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6150237Z         if err_msg is None:
2025-01-17T11:31:46.6150333Z             if left.shape != right.shape:
2025-01-17T11:31:46.6150474Z                 raise_assert_detail(
2025-01-17T11:31:46.6150714Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6150833Z                 )
2025-01-17T11:31:46.6150947Z     
2025-01-17T11:31:46.6151104Z             diff = 0
2025-01-17T11:31:46.6151330Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6151465Z                 # count up differences
2025-01-17T11:31:46.6151734Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6151859Z                     diff += 1
2025-01-17T11:31:46.6151987Z     
2025-01-17T11:31:46.6152134Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6152282Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6152469Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6152781Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6152851Z E           
2025-01-17T11:31:46.6152952Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6153206Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6153594Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6153699Z 
2025-01-17T11:31:46.6154011Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6154015Z 
2025-01-17T11:31:46.6154174Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6154178Z 
2025-01-17T11:31:46.6154396Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb680>
2025-01-17T11:31:46.6154586Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>, attr = 'f_lu'
2025-01-17T11:31:46.6154590Z 
2025-01-17T11:31:46.6154722Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6154828Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6154907Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6154977Z         try:
2025-01-17T11:31:46.6155115Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6155187Z         except KeyError:
2025-01-17T11:31:46.6155320Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6155383Z     
2025-01-17T11:31:46.6155465Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6155550Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6155632Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6155755Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6155832Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6155914Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6156015Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6156019Z 
2025-01-17T11:31:46.6156136Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6156239Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6156387Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6156450Z     ???
2025-01-17T11:31:46.6156553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6156557Z 
2025-01-17T11:31:46.6156618Z >   ???
2025-01-17T11:31:46.6156736Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6156798Z E   
2025-01-17T11:31:46.6156915Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6157018Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6157087Z E          ...
2025-01-17T11:31:46.6157165Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6157285Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6157387Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6157452Z E          ...
2025-01-17T11:31:46.6157534Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6157656Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6157752Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6157756Z 
2025-01-17T11:31:46.6157838Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6158105Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-17T11:31:46.6158109Z 
2025-01-17T11:31:46.6158229Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6158346Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6158435Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6158556Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6158671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6158918Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6158990Z err_msg = None
2025-01-17T11:31:46.6158994Z 
2025-01-17T11:31:46.6159095Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6159170Z         if err_msg is None:
2025-01-17T11:31:46.6159257Z             if left.shape != right.shape:
2025-01-17T11:31:46.6159333Z                 raise_assert_detail(
2025-01-17T11:31:46.6159470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6159532Z                 )
2025-01-17T11:31:46.6159595Z     
2025-01-17T11:31:46.6159660Z             diff = 0
2025-01-17T11:31:46.6159765Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6159843Z                 # count up differences
2025-01-17T11:31:46.6160002Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6160072Z                     diff += 1
2025-01-17T11:31:46.6160139Z     
2025-01-17T11:31:46.6160224Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6160352Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6160509Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6160611Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6160674Z E           
2025-01-17T11:31:46.6160778Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6161027Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6161284Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6161293Z 
2025-01-17T11:31:46.6161583Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6161587Z 
2025-01-17T11:31:46.6161745Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6161749Z 
2025-01-17T11:31:46.6161958Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ebe00>
2025-01-17T11:31:46.6162114Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6162185Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6162189Z 
2025-01-17T11:31:46.6162317Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6162422Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6162508Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6162759Z         try:
2025-01-17T11:31:46.6162916Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6162991Z         except KeyError:
2025-01-17T11:31:46.6163121Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6163182Z     
2025-01-17T11:31:46.6163263Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6163347Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6163428Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6163549Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6163623Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6163706Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6163805Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6163871Z             else:
2025-01-17T11:31:46.6163957Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6164187Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6164327Z 
2025-01-17T11:31:46.6164448Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6164555Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6164688Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6164753Z     ???
2025-01-17T11:31:46.6164852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6164856Z 
2025-01-17T11:31:46.6164920Z >   ???
2025-01-17T11:31:46.6165034Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6165096Z E   
2025-01-17T11:31:46.6165214Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6165317Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6165381Z E          ...
2025-01-17T11:31:46.6165460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6165584Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6165694Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6165757Z E          ...
2025-01-17T11:31:46.6165833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6165949Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6166044Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6166048Z 
2025-01-17T11:31:46.6166133Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6166398Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-17T11:31:46.6166403Z 
2025-01-17T11:31:46.6166521Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6166639Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6166727Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6166857Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6166972Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6167056Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6167126Z err_msg = None
2025-01-17T11:31:46.6167130Z 
2025-01-17T11:31:46.6167233Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6167309Z         if err_msg is None:
2025-01-17T11:31:46.6167395Z             if left.shape != right.shape:
2025-01-17T11:31:46.6167473Z                 raise_assert_detail(
2025-01-17T11:31:46.6167608Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6167674Z                 )
2025-01-17T11:31:46.6167734Z     
2025-01-17T11:31:46.6167801Z             diff = 0
2025-01-17T11:31:46.6167902Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6167988Z                 # count up differences
2025-01-17T11:31:46.6168152Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6168223Z                     diff += 1
2025-01-17T11:31:46.6168283Z     
2025-01-17T11:31:46.6168364Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6168490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6168648Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6168754Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6168817Z E           
2025-01-17T11:31:46.6168922Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6169528Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6170830Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6170839Z 
2025-01-17T11:31:46.6171283Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6171289Z 
2025-01-17T11:31:46.6171453Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6171458Z 
2025-01-17T11:31:46.6171683Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ebec0>
2025-01-17T11:31:46.6171840Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6171925Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6171929Z 
2025-01-17T11:31:46.6172065Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6172173Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6172249Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6172314Z         try:
2025-01-17T11:31:46.6172444Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6172520Z         except KeyError:
2025-01-17T11:31:46.6172826Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6172894Z     
2025-01-17T11:31:46.6172975Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6173064Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6173143Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6173266Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6173346Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6173434Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6173543Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6173607Z             else:
2025-01-17T11:31:46.6173697Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6173795Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6173799Z 
2025-01-17T11:31:46.6173916Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6174024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6174170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6174234Z     ???
2025-01-17T11:31:46.6174342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6174346Z 
2025-01-17T11:31:46.6174408Z >   ???
2025-01-17T11:31:46.6174531Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6174593Z E   
2025-01-17T11:31:46.6174718Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6174830Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6174898Z E          ...
2025-01-17T11:31:46.6174978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6175099Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6175202Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6175266Z E          ...
2025-01-17T11:31:46.6175349Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6175464Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6175565Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6175569Z 
2025-01-17T11:31:46.6175651Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6175908Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-17T11:31:46.6175912Z 
2025-01-17T11:31:46.6176036Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6176403Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6176496Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6176626Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6176742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6176830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6176897Z err_msg = None
2025-01-17T11:31:46.6176901Z 
2025-01-17T11:31:46.6177011Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6177084Z         if err_msg is None:
2025-01-17T11:31:46.6177176Z             if left.shape != right.shape:
2025-01-17T11:31:46.6177252Z                 raise_assert_detail(
2025-01-17T11:31:46.6177387Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6177457Z                 )
2025-01-17T11:31:46.6177528Z     
2025-01-17T11:31:46.6177595Z             diff = 0
2025-01-17T11:31:46.6177703Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6177783Z                 # count up differences
2025-01-17T11:31:46.6177946Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6178018Z                     diff += 1
2025-01-17T11:31:46.6178083Z     
2025-01-17T11:31:46.6178163Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6178292Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6178460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6178566Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6178632Z E           
2025-01-17T11:31:46.6178735Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6179001Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6179256Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6179260Z 
2025-01-17T11:31:46.6179557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6179561Z 
2025-01-17T11:31:46.6179726Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6179735Z 
2025-01-17T11:31:46.6179951Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e710080>
2025-01-17T11:31:46.6180112Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6180181Z attr = 'j_blues'
2025-01-17T11:31:46.6180184Z 
2025-01-17T11:31:46.6180317Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6180423Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6180501Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6180565Z         try:
2025-01-17T11:31:46.6180698Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6180772Z         except KeyError:
2025-01-17T11:31:46.6180900Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6180963Z     
2025-01-17T11:31:46.6181041Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6181132Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6181302Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6181502Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6181582Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6181668Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6181770Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6181839Z             else:
2025-01-17T11:31:46.6181926Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6182025Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6182029Z 
2025-01-17T11:31:46.6182145Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6182251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6182386Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6182450Z     ???
2025-01-17T11:31:46.6182704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6182719Z 
2025-01-17T11:31:46.6182793Z >   ???
2025-01-17T11:31:46.6182920Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6182987Z E   
2025-01-17T11:31:46.6183104Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6183209Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6183276Z E          ...
2025-01-17T11:31:46.6183358Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6183482Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6183589Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6183658Z E          ...
2025-01-17T11:31:46.6183735Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6183851Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6183946Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6183949Z 
2025-01-17T11:31:46.6184037Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6184198Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-17T11:31:46.6184202Z 
2025-01-17T11:31:46.6184426Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6184510Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.6184772Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8178478e00>
2025-01-17T11:31:46.6184776Z 
2025-01-17T11:31:46.6184913Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6185074Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6185187Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6185311Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6185417Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6185499Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6185588Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6185688Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6185692Z 
2025-01-17T11:31:46.6185787Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6185891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6185894Z 
2025-01-17T11:31:46.6186196Z args = (<function assert_allclose.<locals>.compare at 0x7f8151d9b060>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-01-17T11:31:46.6186266Z         0.01476858],
2025-01-17T11:31:46.6186393Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-17T11:31:46.6186461Z         0.01473787]]))
2025-01-17T11:31:46.6186708Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6186712Z 
2025-01-17T11:31:46.6186781Z     @wraps(func)
2025-01-17T11:31:46.6187000Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6187081Z         with self._recreate_cm():
2025-01-17T11:31:46.6187259Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6187342Z E           AssertionError: 
2025-01-17T11:31:46.6187443Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6187506Z E           
2025-01-17T11:31:46.6187603Z E           Mismatched elements: 160 / 584480 (0.0274%)
2025-01-17T11:31:46.6187708Z E           Max absolute difference among violations: 1.
2025-01-17T11:31:46.6187811Z E           Max relative difference among violations: 1.
2025-01-17T11:31:46.6187948Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188046Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188142Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.6188281Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188384Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188479Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.6188484Z 
2025-01-17T11:31:46.6188677Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6188831Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-17T11:31:46.6188835Z 
2025-01-17T11:31:46.6189050Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6189132Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.6189387Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8178097ec0>
2025-01-17T11:31:46.6189391Z 
2025-01-17T11:31:46.6189528Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6189688Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6189806Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6189925Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6190035Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6190113Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6190198Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6190291Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6190295Z 
2025-01-17T11:31:46.6190392Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6190494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6190498Z 
2025-01-17T11:31:46.6190880Z args = (<function assert_allclose.<locals>.compare at 0x7f8151d99760>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-17T11:31:46.6191129Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6191133Z 
2025-01-17T11:31:46.6191203Z     @wraps(func)
2025-01-17T11:31:46.6191278Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6191356Z         with self._recreate_cm():
2025-01-17T11:31:46.6191432Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6191512Z E           AssertionError: 
2025-01-17T11:31:46.6191609Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6191677Z E           
2025-01-17T11:31:46.6191771Z E           Mismatched elements: 777 / 29224 (2.66%)
2025-01-17T11:31:46.6191884Z E           Max absolute difference among violations: 3371
2025-01-17T11:31:46.6191992Z E           Max relative difference among violations: 415.5
2025-01-17T11:31:46.6192111Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.6192227Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.6192323Z 
2025-01-17T11:31:46.6192782Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6192961Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-17T11:31:46.6192966Z 
2025-01-17T11:31:46.6193193Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6193276Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.6193540Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814be31ac0>
2025-01-17T11:31:46.6193545Z 
2025-01-17T11:31:46.6193681Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6193962Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6194159Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6194384Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6194553Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6194641Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6194729Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6194825Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6194829Z 
2025-01-17T11:31:46.6194928Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6195034Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6195038Z 
2025-01-17T11:31:46.6195423Z args = (<function assert_allclose.<locals>.compare at 0x7f8154fd6c00>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-17T11:31:46.6195668Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6195672Z 
2025-01-17T11:31:46.6195739Z     @wraps(func)
2025-01-17T11:31:46.6195815Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6195907Z         with self._recreate_cm():
2025-01-17T11:31:46.6195986Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6196071Z E           AssertionError: 
2025-01-17T11:31:46.6196172Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6196241Z E           
2025-01-17T11:31:46.6196333Z E           Mismatched elements: 1817 / 29224 (6.22%)
2025-01-17T11:31:46.6196449Z E           Max absolute difference among violations: 3443
2025-01-17T11:31:46.6196573Z E           Max relative difference among violations: 54.65079365
2025-01-17T11:31:46.6196693Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.6196810Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.6196814Z 
2025-01-17T11:31:46.6197012Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6197154Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-17T11:31:46.6197162Z 
2025-01-17T11:31:46.6197388Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6197460Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6197720Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814be30140>
2025-01-17T11:31:46.6197723Z 
2025-01-17T11:31:46.6197860Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6198014Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6198126Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6198253Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6198365Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6198446Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6198527Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6198624Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6198760Z 
2025-01-17T11:31:46.6198861Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6199050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6199055Z 
2025-01-17T11:31:46.6199313Z args = (<function assert_allclose.<locals>.compare at 0x7f8154fd6660>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6199380Z        [1., 1., .....,
2025-01-17T11:31:46.6199449Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6199518Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6199588Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-17T11:31:46.6199831Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6199835Z 
2025-01-17T11:31:46.6199903Z     @wraps(func)
2025-01-17T11:31:46.6199982Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6200058Z         with self._recreate_cm():
2025-01-17T11:31:46.6200134Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6200219Z E           AssertionError: 
2025-01-17T11:31:46.6200322Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6200390Z E           
2025-01-17T11:31:46.6200485Z E           Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.6200606Z E           Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.6200727Z E           Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.6200824Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6200903Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6200986Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.6201080Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6201158Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6201232Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.6201236Z 
2025-01-17T11:31:46.6201433Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6201572Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-17T11:31:46.6201576Z 
2025-01-17T11:31:46.6201793Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6201862Z attr = 'lines'
2025-01-17T11:31:46.6202122Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f817e8eb860>
2025-01-17T11:31:46.6202126Z 
2025-01-17T11:31:46.6202264Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6202419Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6202682Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6202866Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6202980Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6203067Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6203150Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6203252Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6203256Z 
2025-01-17T11:31:46.6203353Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6203458Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6203461Z 
2025-01-17T11:31:46.6203903Z args = (<function assert_allclose.<locals>.compare at 0x7f814e20f920>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-17T11:31:46.6204002Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-17T11:31:46.6204244Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6204248Z 
2025-01-17T11:31:46.6204316Z     @wraps(func)
2025-01-17T11:31:46.6204391Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6204594Z         with self._recreate_cm():
2025-01-17T11:31:46.6204771Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6204856Z E           AssertionError: 
2025-01-17T11:31:46.6204953Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6205016Z E           
2025-01-17T11:31:46.6205113Z E           Mismatched elements: 13241 / 263016 (5.03%)
2025-01-17T11:31:46.6205241Z E           Max absolute difference among violations: 2.93004431e+13
2025-01-17T11:31:46.6205368Z E           Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.6205529Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.6205614Z E                   4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.6205746Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.6205910Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.6205997Z E                   4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.6206128Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.6206132Z 
2025-01-17T11:31:46.6206325Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6206460Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-17T11:31:46.6206465Z 
2025-01-17T11:31:46.6206678Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6206748Z attr = 'f_lu'
2025-01-17T11:31:46.6207002Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814be32a50>
2025-01-17T11:31:46.6207007Z 
2025-01-17T11:31:46.6207141Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6207294Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6207409Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6207538Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6207650Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6207730Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6207815Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6207907Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6207911Z 
2025-01-17T11:31:46.6208009Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6208111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6208114Z 
2025-01-17T11:31:46.6208573Z args = (<function assert_allclose.<locals>.compare at 0x7f814e20e3e0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-17T11:31:46.6208671Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-17T11:31:46.6208913Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6208925Z 
2025-01-17T11:31:46.6208993Z     @wraps(func)
2025-01-17T11:31:46.6209071Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6209148Z         with self._recreate_cm():
2025-01-17T11:31:46.6209230Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6209306Z E           AssertionError: 
2025-01-17T11:31:46.6209404Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6209467Z E           
2025-01-17T11:31:46.6209562Z E           Mismatched elements: 2205 / 29224 (7.55%)
2025-01-17T11:31:46.6209682Z E           Max absolute difference among violations: 2.92703899
2025-01-17T11:31:46.6209808Z E           Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.6209966Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.6210047Z E                  1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.6210385Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.6210466Z E                  1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.6210470Z 
2025-01-17T11:31:46.6210660Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6210799Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-17T11:31:46.6210809Z 
2025-01-17T11:31:46.6211022Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6211093Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6211348Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8178097320>
2025-01-17T11:31:46.6211352Z 
2025-01-17T11:31:46.6211484Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6211639Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6211747Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6211880Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6211988Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6212071Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6212153Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6212246Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6212250Z 
2025-01-17T11:31:46.6212347Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6212452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6212456Z 
2025-01-17T11:31:46.6213038Z args = (<function assert_allclose.<locals>.compare at 0x7f8154fd6840>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-17T11:31:46.6213143Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-17T11:31:46.6213395Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6213398Z 
2025-01-17T11:31:46.6213469Z     @wraps(func)
2025-01-17T11:31:46.6213545Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6213624Z         with self._recreate_cm():
2025-01-17T11:31:46.6213701Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6213780Z E           AssertionError: 
2025-01-17T11:31:46.6213874Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6213939Z E           
2025-01-17T11:31:46.6214033Z E           Mismatched elements: 39240 / 584480 (6.71%)
2025-01-17T11:31:46.6214170Z E           Max absolute difference among violations: 604603.16180317
2025-01-17T11:31:46.6214294Z E           Max relative difference among violations: 4.15650719e+25
2025-01-17T11:31:46.6214455Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.6214534Z E                   0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.6214674Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.6214831Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.6214910Z E                   0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.6215034Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.6215038Z 
2025-01-17T11:31:46.6215237Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6215395Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-17T11:31:46.6215399Z 
2025-01-17T11:31:46.6215608Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6215680Z attr = 'iterations_w'
2025-01-17T11:31:46.6215938Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f816867c920>
2025-01-17T11:31:46.6216060Z 
2025-01-17T11:31:46.6216149Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6216318Z         "attr",
2025-01-17T11:31:46.6216384Z         [
2025-01-17T11:31:46.6216457Z             "iterations_w",
2025-01-17T11:31:46.6216536Z             "iterations_t_rad",
2025-01-17T11:31:46.6216625Z             "iterations_electron_densities",
2025-01-17T11:31:46.6216704Z             "iterations_t_inner",
2025-01-17T11:31:46.6216767Z         ],
2025-01-17T11:31:46.6216832Z     )
2025-01-17T11:31:46.6217019Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6217125Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6217205Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6217287Z             actual = actual.value
2025-01-17T11:31:46.6217369Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6217487Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6217654Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6217663Z 
2025-01-17T11:31:46.6217783Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6217887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6218028Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6218092Z     ???
2025-01-17T11:31:46.6218193Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6218197Z 
2025-01-17T11:31:46.6218258Z >   ???
2025-01-17T11:31:46.6218429Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6218492Z E   
2025-01-17T11:31:46.6218641Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6218714Z E   [index]: [0, 1]
2025-01-17T11:31:46.6218807Z E   [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-17T11:31:46.6218905Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-01-17T11:31:46.6219069Z E   At positional index 1, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.6219073Z 
2025-01-17T11:31:46.6219158Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6219302Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6219711Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6220150Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6220296Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:31:46.6220300Z 
2025-01-17T11:31:46.6220303Z 
2025-01-17T11:31:46.6220528Z Packets:                                                                                   4031/? [04:57<00:00,  7.35it/s] [A
2025-01-17T11:31:46.6220535Z 
2025-01-17T11:31:46.6220778Z Packets:                                                                                   14251/? [04:57<00:00, 57.01it/s][A
2025-01-17T11:31:46.6220787Z 
2025-01-17T11:31:46.6221009Z Packets:                                                                                   24451/? [04:57<00:00, 127.74it/s][A
2025-01-17T11:31:46.6221013Z 
2025-01-17T11:31:46.6221221Z Packets:                                                                                   34881/? [04:57<00:00, 230.87it/s][A
2025-01-17T11:31:46.6221719Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:58<00:00, 104.74s/it]
2025-01-17T11:31:46.6221725Z 
2025-01-17T11:31:46.6221948Z Packets:                                                                                   44030/? [04:58<00:00, 230.87it/s][A
2025-01-17T11:31:46.6221953Z 
2025-01-17T11:31:46.6222172Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-17T11:31:46.6222176Z 
2025-01-17T11:31:46.6222782Z Packets:   ██████████████████▋                                                             9342/40000 [00:00<00:00, 35029.50it/s][A
2025-01-17T11:31:46.6222789Z 
2025-01-17T11:31:46.6223063Z Packets:   █████████████████████████▋                                                      12874/40000 [00:00<00:00, 35129.32it/s][A
2025-01-17T11:31:46.6223068Z 
2025-01-17T11:31:46.6223326Z Packets:   ████████████████████████████████▊                                               16410/40000 [00:00<00:00, 35205.60it/s][A
2025-01-17T11:31:46.6223333Z 
2025-01-17T11:31:46.6223600Z Packets:   ███████████████████████████████████████▉                                        19938/40000 [00:00<00:00, 35094.43it/s][A
2025-01-17T11:31:46.6223604Z 
2025-01-17T11:31:46.6223883Z Packets:   ██████████████████████████████████████████████▉                                 23492/40000 [00:00<00:00, 35228.22it/s][A
2025-01-17T11:31:46.6223886Z 
2025-01-17T11:31:46.6224168Z Packets:   ██████████████████████████████████████████████████████▏                         27070/40000 [00:00<00:00, 35398.06it/s][A
2025-01-17T11:31:46.6224203Z 
2025-01-17T11:31:46.6224569Z Packets:   █████████████████████████████████████████████████████████████▏                  30614/40000 [00:00<00:00, 35390.10it/s][A
2025-01-17T11:31:46.6224576Z 
2025-01-17T11:31:46.6225154Z Packets:   ████████████████████████████████████████████████████████████████████▎           34156/40000 [00:00<00:00, 35120.11it/s][A
2025-01-17T11:31:46.6225163Z 
2025-01-17T11:31:46.6225739Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    37731/40000 [00:01<00:00, 35308.46it/s][A
2025-01-17T11:31:46.6225977Z Iterations:                                                                                6/? [05:00<00:00, 69.92s/it] 
2025-01-17T11:31:46.6225983Z 
2025-01-17T11:31:46.6226414Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35308.46it/s][A
2025-01-17T11:31:46.6226592Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6227104Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6227270Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-17T11:31:46.6227274Z 
2025-01-17T11:31:46.6227485Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6227564Z attr = 'iterations_t_rad'
2025-01-17T11:31:46.6227826Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170e633b0>
2025-01-17T11:31:46.6227830Z 
2025-01-17T11:31:46.6227916Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6227985Z         "attr",
2025-01-17T11:31:46.6228049Z         [
2025-01-17T11:31:46.6228126Z             "iterations_w",
2025-01-17T11:31:46.6228199Z             "iterations_t_rad",
2025-01-17T11:31:46.6228440Z             "iterations_electron_densities",
2025-01-17T11:31:46.6228612Z             "iterations_t_inner",
2025-01-17T11:31:46.6228683Z         ],
2025-01-17T11:31:46.6228750Z     )
2025-01-17T11:31:46.6228941Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6229047Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6229132Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6229208Z             actual = actual.value
2025-01-17T11:31:46.6229292Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6229415Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6229586Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6229593Z 
2025-01-17T11:31:46.6229710Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6229816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6229971Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6230035Z     ???
2025-01-17T11:31:46.6230143Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6230147Z 
2025-01-17T11:31:46.6230209Z >   ???
2025-01-17T11:31:46.6230384Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6230446Z E   
2025-01-17T11:31:46.6230596Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6230664Z E   [index]: [0, 1]
2025-01-17T11:31:46.6230761Z E   [left]:  [9967.488442185557, 10090.337237980311]
2025-01-17T11:31:46.6230851Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-01-17T11:31:46.6231017Z E   At positional index 1, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.6231021Z 
2025-01-17T11:31:46.6231104Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6231281Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-17T11:31:46.6231292Z 
2025-01-17T11:31:46.6231498Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6231594Z attr = 'iterations_electron_densities'
2025-01-17T11:31:46.6231851Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c9bbf0>
2025-01-17T11:31:46.6231854Z 
2025-01-17T11:31:46.6231942Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6232007Z         "attr",
2025-01-17T11:31:46.6232072Z         [
2025-01-17T11:31:46.6232143Z             "iterations_w",
2025-01-17T11:31:46.6232225Z             "iterations_t_rad",
2025-01-17T11:31:46.6232315Z             "iterations_electron_densities",
2025-01-17T11:31:46.6232389Z             "iterations_t_inner",
2025-01-17T11:31:46.6232458Z         ],
2025-01-17T11:31:46.6232519Z     )
2025-01-17T11:31:46.6232931Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6233037Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6233127Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6233207Z             actual = actual.value
2025-01-17T11:31:46.6233293Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6233409Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6233575Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6233579Z 
2025-01-17T11:31:46.6233688Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6233790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6233927Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6233993Z     ???
2025-01-17T11:31:46.6234092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6234096Z 
2025-01-17T11:31:46.6234160Z >   ???
2025-01-17T11:31:46.6234324Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6234517Z E   
2025-01-17T11:31:46.6234771Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6234844Z E   [index]: [0, 1]
2025-01-17T11:31:46.6234936Z E   [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-17T11:31:46.6235031Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-01-17T11:31:46.6235191Z E   At positional index 1, first diff: 2880937482.0686474 != 2880986026.9779425
2025-01-17T11:31:46.6235196Z 
2025-01-17T11:31:46.6235279Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6235439Z _______________ test_plasma_state_iterations[iterations_t_inner] _______________
2025-01-17T11:31:46.6235442Z 
2025-01-17T11:31:46.6235652Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6235729Z attr = 'iterations_t_inner'
2025-01-17T11:31:46.6235983Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170cafcb0>
2025-01-17T11:31:46.6235995Z 
2025-01-17T11:31:46.6236078Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6236149Z         "attr",
2025-01-17T11:31:46.6236215Z         [
2025-01-17T11:31:46.6236286Z             "iterations_w",
2025-01-17T11:31:46.6236363Z             "iterations_t_rad",
2025-01-17T11:31:46.6236452Z             "iterations_electron_densities",
2025-01-17T11:31:46.6236531Z             "iterations_t_inner",
2025-01-17T11:31:46.6236593Z         ],
2025-01-17T11:31:46.6236658Z     )
2025-01-17T11:31:46.6236838Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6236940Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6237021Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6237102Z             actual = actual.value
2025-01-17T11:31:46.6237183Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6237301Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6237464Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6237473Z 
2025-01-17T11:31:46.6237586Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6237687Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6237824Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6237888Z     ???
2025-01-17T11:31:46.6237986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6237993Z 
2025-01-17T11:31:46.6238054Z >   ???
2025-01-17T11:31:46.6238217Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6238284Z E   
2025-01-17T11:31:46.6238432Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6238501Z E   [index]: [0, 1]
2025-01-17T11:31:46.6238588Z E   [left]:  [9974.969233778693, 10755.649243810945]
2025-01-17T11:31:46.6238681Z E   [right]: [9974.969233778693, 10754.991494633894]
2025-01-17T11:31:46.6238841Z E   At positional index 1, first diff: 10755.649243810945 != 10754.991494633894
2025-01-17T11:31:46.6238850Z 
2025-01-17T11:31:46.6238934Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6239085Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-17T11:31:46.6239088Z 
2025-01-17T11:31:46.6239292Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6239369Z attr = 'nu_bar_estimator'
2025-01-17T11:31:46.6239631Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c22a20>
2025-01-17T11:31:46.6239634Z 
2025-01-17T11:31:46.6239719Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6239789Z         "attr",
2025-01-17T11:31:46.6239860Z         [
2025-01-17T11:31:46.6239938Z             "nu_bar_estimator",
2025-01-17T11:31:46.6240009Z             "j_estimator",
2025-01-17T11:31:46.6240083Z             "t_radiative",
2025-01-17T11:31:46.6240159Z             "dilution_factor",
2025-01-17T11:31:46.6240323Z             "output_nus",
2025-01-17T11:31:46.6240467Z             "output_energies",
2025-01-17T11:31:46.6240532Z         ],
2025-01-17T11:31:46.6240598Z     )
2025-01-17T11:31:46.6240769Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6240877Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6240950Z             actual = getattr(
2025-01-17T11:31:46.6241135Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6241203Z                 attr,
2025-01-17T11:31:46.6241271Z             )
2025-01-17T11:31:46.6241379Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6241522Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6241626Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6241697Z             actual = getattr(
2025-01-17T11:31:46.6241857Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6241935Z                 attr,
2025-01-17T11:31:46.6241998Z             )
2025-01-17T11:31:46.6242063Z         else:
2025-01-17T11:31:46.6242189Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6242254Z     
2025-01-17T11:31:46.6242334Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6242410Z             actual = actual.value
2025-01-17T11:31:46.6242491Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6242801Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6242982Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6242986Z 
2025-01-17T11:31:46.6243094Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6243200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6243344Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6243416Z     ???
2025-01-17T11:31:46.6243519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6243523Z 
2025-01-17T11:31:46.6243587Z >   ???
2025-01-17T11:31:46.6243681Z E   AssertionError: Series are different
2025-01-17T11:31:46.6243745Z E   
2025-01-17T11:31:46.6243833Z E   Series values are different (100.0 %)
2025-01-17T11:31:46.6243959Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6245142Z E   [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-17T11:31:46.6246327Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-17T11:31:46.6246515Z E   At positional index 0, first diff: 1.0165718020021351e+29 != 1.0190851489144414e+29
2025-01-17T11:31:46.6246520Z 
2025-01-17T11:31:46.6246603Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6246753Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-17T11:31:46.6246757Z 
2025-01-17T11:31:46.6246965Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6247041Z attr = 'j_estimator'
2025-01-17T11:31:46.6247424Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c34fb0>
2025-01-17T11:31:46.6247530Z 
2025-01-17T11:31:46.6247622Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6247687Z         "attr",
2025-01-17T11:31:46.6247748Z         [
2025-01-17T11:31:46.6247825Z             "nu_bar_estimator",
2025-01-17T11:31:46.6247895Z             "j_estimator",
2025-01-17T11:31:46.6247967Z             "t_radiative",
2025-01-17T11:31:46.6248040Z             "dilution_factor",
2025-01-17T11:31:46.6248114Z             "output_nus",
2025-01-17T11:31:46.6248186Z             "output_energies",
2025-01-17T11:31:46.6248253Z         ],
2025-01-17T11:31:46.6248315Z     )
2025-01-17T11:31:46.6248489Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6248595Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6248670Z             actual = getattr(
2025-01-17T11:31:46.6248851Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6248931Z                 attr,
2025-01-17T11:31:46.6249057Z             )
2025-01-17T11:31:46.6249244Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6249507Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6249704Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6249834Z             actual = getattr(
2025-01-17T11:31:46.6250121Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6250234Z                 attr,
2025-01-17T11:31:46.6250339Z             )
2025-01-17T11:31:46.6250452Z         else:
2025-01-17T11:31:46.6250666Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6250784Z     
2025-01-17T11:31:46.6250872Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6250952Z             actual = actual.value
2025-01-17T11:31:46.6251034Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6251159Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6251335Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6251340Z 
2025-01-17T11:31:46.6251455Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6251557Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6251701Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6251764Z     ???
2025-01-17T11:31:46.6251869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6251873Z 
2025-01-17T11:31:46.6251935Z >   ???
2025-01-17T11:31:46.6252030Z E   AssertionError: Series are different
2025-01-17T11:31:46.6252093Z E   
2025-01-17T11:31:46.6252183Z E   Series values are different (100.0 %)
2025-01-17T11:31:46.6252306Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6253375Z E   [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-17T11:31:46.6254325Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-17T11:31:46.6254487Z E   At positional index 0, first diff: 116384046125782.77 != 116548101693134.0
2025-01-17T11:31:46.6254491Z 
2025-01-17T11:31:46.6254573Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6254982Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-17T11:31:46.6254987Z 
2025-01-17T11:31:46.6255196Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6255271Z attr = 't_radiative'
2025-01-17T11:31:46.6255530Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c34f80>
2025-01-17T11:31:46.6255534Z 
2025-01-17T11:31:46.6255622Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6255686Z         "attr",
2025-01-17T11:31:46.6255752Z         [
2025-01-17T11:31:46.6255826Z             "nu_bar_estimator",
2025-01-17T11:31:46.6255899Z             "j_estimator",
2025-01-17T11:31:46.6255968Z             "t_radiative",
2025-01-17T11:31:46.6256041Z             "dilution_factor",
2025-01-17T11:31:46.6256115Z             "output_nus",
2025-01-17T11:31:46.6256189Z             "output_energies",
2025-01-17T11:31:46.6256254Z         ],
2025-01-17T11:31:46.6256324Z     )
2025-01-17T11:31:46.6256499Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6256605Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6256680Z             actual = getattr(
2025-01-17T11:31:46.6256861Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6256931Z                 attr,
2025-01-17T11:31:46.6256996Z             )
2025-01-17T11:31:46.6257106Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6257245Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6257351Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6257423Z             actual = getattr(
2025-01-17T11:31:46.6257588Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6257655Z                 attr,
2025-01-17T11:31:46.6257716Z             )
2025-01-17T11:31:46.6257791Z         else:
2025-01-17T11:31:46.6257923Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6257988Z     
2025-01-17T11:31:46.6258073Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6258150Z             actual = actual.value
2025-01-17T11:31:46.6258228Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6258345Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6258514Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6258517Z 
2025-01-17T11:31:46.6258632Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6258734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6258874Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6258939Z     ???
2025-01-17T11:31:46.6259041Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6259049Z 
2025-01-17T11:31:46.6259110Z >   ???
2025-01-17T11:31:46.6259203Z E   AssertionError: Series are different
2025-01-17T11:31:46.6259270Z E   
2025-01-17T11:31:46.6259358Z E   Series values are different (95.0 %)
2025-01-17T11:31:46.6259475Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6260464Z E   [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-17T11:31:46.6261543Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-17T11:31:46.6261788Z E   At positional index 0, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.6261793Z 
2025-01-17T11:31:46.6261875Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6262031Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-17T11:31:46.6262035Z 
2025-01-17T11:31:46.6262238Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6262318Z attr = 'dilution_factor'
2025-01-17T11:31:46.6262674Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c37020>
2025-01-17T11:31:46.6262678Z 
2025-01-17T11:31:46.6262769Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6262835Z         "attr",
2025-01-17T11:31:46.6262903Z         [
2025-01-17T11:31:46.6262976Z             "nu_bar_estimator",
2025-01-17T11:31:46.6263057Z             "j_estimator",
2025-01-17T11:31:46.6263131Z             "t_radiative",
2025-01-17T11:31:46.6263209Z             "dilution_factor",
2025-01-17T11:31:46.6263280Z             "output_nus",
2025-01-17T11:31:46.6263355Z             "output_energies",
2025-01-17T11:31:46.6263418Z         ],
2025-01-17T11:31:46.6263480Z     )
2025-01-17T11:31:46.6263651Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6263755Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6263831Z             actual = getattr(
2025-01-17T11:31:46.6264012Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6264082Z                 attr,
2025-01-17T11:31:46.6264145Z             )
2025-01-17T11:31:46.6264256Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6264396Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6264506Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6264582Z             actual = getattr(
2025-01-17T11:31:46.6264747Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6264812Z                 attr,
2025-01-17T11:31:46.6264883Z             )
2025-01-17T11:31:46.6264946Z         else:
2025-01-17T11:31:46.6265072Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6265133Z     
2025-01-17T11:31:46.6265211Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6265288Z             actual = actual.value
2025-01-17T11:31:46.6265365Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6265480Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6265647Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6265651Z 
2025-01-17T11:31:46.6265761Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6265867Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6266010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6266072Z     ???
2025-01-17T11:31:46.6266173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6266176Z 
2025-01-17T11:31:46.6266236Z >   ???
2025-01-17T11:31:46.6266327Z E   AssertionError: Series are different
2025-01-17T11:31:46.6266387Z E   
2025-01-17T11:31:46.6266475Z E   Series values are different (100.0 %)
2025-01-17T11:31:46.6266591Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6267778Z E   [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-17T11:31:46.6268951Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-17T11:31:46.6269112Z E   At positional index 0, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.6269116Z 
2025-01-17T11:31:46.6269198Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6269341Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-17T11:31:46.6269345Z 
2025-01-17T11:31:46.6269547Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6269623Z attr = 'output_nus'
2025-01-17T11:31:46.6269891Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c36300>
2025-01-17T11:31:46.6269895Z 
2025-01-17T11:31:46.6269977Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6270042Z         "attr",
2025-01-17T11:31:46.6270106Z         [
2025-01-17T11:31:46.6270178Z             "nu_bar_estimator",
2025-01-17T11:31:46.6270249Z             "j_estimator",
2025-01-17T11:31:46.6270317Z             "t_radiative",
2025-01-17T11:31:46.6270392Z             "dilution_factor",
2025-01-17T11:31:46.6270461Z             "output_nus",
2025-01-17T11:31:46.6270536Z             "output_energies",
2025-01-17T11:31:46.6270597Z         ],
2025-01-17T11:31:46.6270662Z     )
2025-01-17T11:31:46.6270829Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6270933Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6271008Z             actual = getattr(
2025-01-17T11:31:46.6271197Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6271266Z                 attr,
2025-01-17T11:31:46.6271332Z             )
2025-01-17T11:31:46.6271439Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6271577Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6271679Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6271749Z             actual = getattr(
2025-01-17T11:31:46.6271911Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6271975Z                 attr,
2025-01-17T11:31:46.6272041Z             )
2025-01-17T11:31:46.6272103Z         else:
2025-01-17T11:31:46.6272228Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6272289Z     
2025-01-17T11:31:46.6272368Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6272442Z             actual = actual.value
2025-01-17T11:31:46.6272525Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6272836Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6273012Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6273016Z 
2025-01-17T11:31:46.6273123Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6273225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6273388Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6273511Z     ???
2025-01-17T11:31:46.6273693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6273699Z 
2025-01-17T11:31:46.6273813Z >   ???
2025-01-17T11:31:46.6273974Z E   AssertionError: Series are different
2025-01-17T11:31:46.6274079Z E   
2025-01-17T11:31:46.6274233Z E   Series values are different (94.14 %)
2025-01-17T11:31:46.6275071Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6280317Z E   [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-17T11:31:46.6285756Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-17T11:31:46.6286042Z E   At positional index 0, first diff: 1806608624563428.5 != 1806497964363691.5
2025-01-17T11:31:46.6286048Z 
2025-01-17T11:31:46.6286133Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6286294Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-17T11:31:46.6286297Z 
2025-01-17T11:31:46.6286504Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6286585Z attr = 'output_energies'
2025-01-17T11:31:46.6286842Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c35f40>
2025-01-17T11:31:46.6286846Z 
2025-01-17T11:31:46.6286937Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6287008Z         "attr",
2025-01-17T11:31:46.6287075Z         [
2025-01-17T11:31:46.6287153Z             "nu_bar_estimator",
2025-01-17T11:31:46.6287226Z             "j_estimator",
2025-01-17T11:31:46.6287296Z             "t_radiative",
2025-01-17T11:31:46.6287375Z             "dilution_factor",
2025-01-17T11:31:46.6287446Z             "output_nus",
2025-01-17T11:31:46.6287522Z             "output_energies",
2025-01-17T11:31:46.6287585Z         ],
2025-01-17T11:31:46.6287647Z     )
2025-01-17T11:31:46.6287822Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6287928Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6288005Z             actual = getattr(
2025-01-17T11:31:46.6288188Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6288260Z                 attr,
2025-01-17T11:31:46.6288324Z             )
2025-01-17T11:31:46.6288436Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6288587Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6288705Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6288781Z             actual = getattr(
2025-01-17T11:31:46.6288949Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6289016Z                 attr,
2025-01-17T11:31:46.6289083Z             )
2025-01-17T11:31:46.6289147Z         else:
2025-01-17T11:31:46.6289279Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6289343Z     
2025-01-17T11:31:46.6289427Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6289503Z             actual = actual.value
2025-01-17T11:31:46.6289581Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6289702Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6289874Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6289885Z 
2025-01-17T11:31:46.6290000Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6290113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6290256Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6290318Z     ???
2025-01-17T11:31:46.6290426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6290430Z 
2025-01-17T11:31:46.6290500Z >   ???
2025-01-17T11:31:46.6290595Z E   AssertionError: Series are different
2025-01-17T11:31:46.6290656Z E   
2025-01-17T11:31:46.6290750Z E   Series values are different (6.1925 %)
2025-01-17T11:31:46.6291112Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6297781Z E   [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.6304926Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.6305251Z E   At positional index 23, first diff: -2.49312723626409e-05 != -2.4320523596905817e-05
2025-01-17T11:31:46.6305261Z 
2025-01-17T11:31:46.6305354Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6305544Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-17T11:31:46.6305547Z 
2025-01-17T11:31:46.6305804Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f817e636b10>
2025-01-17T11:31:46.6305989Z simulation = <tardis.simulation.base.Simulation object at 0x7f8156bbd970>
2025-01-17T11:31:46.6305993Z 
2025-01-17T11:31:46.6306113Z     def test_spectrum_real_packets(self, simulation):
2025-01-17T11:31:46.6306252Z         transport_state = simulation.transport.transport_state
2025-01-17T11:31:46.6306436Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:31:46.6306498Z     
2025-01-17T11:31:46.6306678Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:31:46.6306792Z         result = solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6306964Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:31:46.6307062Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6307130Z     
2025-01-17T11:31:46.6307232Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6307294Z     
2025-01-17T11:31:46.6307380Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6307447Z             result,
2025-01-17T11:31:46.6307521Z             luminosity,
2025-01-17T11:31:46.6307586Z         )
2025-01-17T11:31:46.6307590Z 
2025-01-17T11:31:46.6307711Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-17T11:31:46.6307818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6308157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6308248Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6308371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6308385Z 
2025-01-17T11:31:46.6308846Z args = (<function assert_allclose.<locals>.compare at 0x7f8152d387c0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-17T11:31:46.6308944Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6309206Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6309211Z 
2025-01-17T11:31:46.6309295Z     @wraps(func)
2025-01-17T11:31:46.6309377Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6309459Z         with self._recreate_cm():
2025-01-17T11:31:46.6309539Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6309619Z E           AssertionError: 
2025-01-17T11:31:46.6309720Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6309788Z E           
2025-01-17T11:31:46.6309881Z E           Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.6310184Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.6310291Z E           Max relative difference among violations: 1.
2025-01-17T11:31:46.6310459Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6310539Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6310703Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6310780Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6310784Z 
2025-01-17T11:31:46.6310982Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6311168Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-17T11:31:46.6311172Z 
2025-01-17T11:31:46.6311425Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f817e636db0>
2025-01-17T11:31:46.6311614Z simulation = <tardis.simulation.base.Simulation object at 0x7f8156bbd970>
2025-01-17T11:31:46.6311617Z 
2025-01-17T11:31:46.6311767Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-17T11:31:46.6311907Z         transport_state = simulation.transport.transport_state
2025-01-17T11:31:46.6312089Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:31:46.6312150Z     
2025-01-17T11:31:46.6312330Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:31:46.6312472Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-17T11:31:46.6312858Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-17T11:31:46.6312954Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6313015Z     
2025-01-17T11:31:46.6313116Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6313178Z     
2025-01-17T11:31:46.6313260Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6313334Z             result,
2025-01-17T11:31:46.6313414Z             luminosity,
2025-01-17T11:31:46.6313478Z         )
2025-01-17T11:31:46.6313481Z 
2025-01-17T11:31:46.6313600Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-17T11:31:46.6313703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6314033Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6314116Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6314226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6314229Z 
2025-01-17T11:31:46.6314682Z args = (<function assert_allclose.<locals>.compare at 0x7f8151dd11c0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-17T11:31:46.6314787Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6315039Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6315043Z 
2025-01-17T11:31:46.6315116Z     @wraps(func)
2025-01-17T11:31:46.6315193Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6315275Z         with self._recreate_cm():
2025-01-17T11:31:46.6315357Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6315440Z E           AssertionError: 
2025-01-17T11:31:46.6315607Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6315733Z E           
2025-01-17T11:31:46.6315898Z E           Mismatched elements: 462 / 10000 (4.62%)
2025-01-17T11:31:46.6316131Z E           Max absolute difference among violations: 6.26425326e+37
2025-01-17T11:31:46.6316344Z E           Max relative difference among violations: 1.00484475
2025-01-17T11:31:46.6316619Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6316948Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6317311Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6317402Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6317406Z 
2025-01-17T11:31:46.6317604Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6317765Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-17T11:31:46.6317768Z 
2025-01-17T11:31:46.6318021Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f817e637620>
2025-01-17T11:31:46.6318208Z simulation = <tardis.simulation.base.Simulation object at 0x7f8156bbd970>
2025-01-17T11:31:46.6318212Z 
2025-01-17T11:31:46.6318303Z     def test_solve(self, simulation):
2025-01-17T11:31:46.6318445Z         transport_state = simulation.transport.transport_state
2025-01-17T11:31:46.6318626Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:31:46.6318697Z     
2025-01-17T11:31:46.6318876Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:31:46.6319026Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-17T11:31:46.6319099Z             transport_state
2025-01-17T11:31:46.6319166Z         )
2025-01-17T11:31:46.6319337Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:31:46.6319457Z         expected_real = self.get_expected_data(key_real)
2025-01-17T11:31:46.6319519Z     
2025-01-17T11:31:46.6319648Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-17T11:31:46.6319710Z     
2025-01-17T11:31:46.6319791Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6319879Z             result_real.luminosity,
2025-01-17T11:31:46.6319958Z             luminosity_real,
2025-01-17T11:31:46.6320021Z         )
2025-01-17T11:31:46.6320025Z 
2025-01-17T11:31:46.6320148Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-17T11:31:46.6320262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6320585Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6320669Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6320804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6320809Z 
2025-01-17T11:31:46.6321258Z args = (<function assert_allclose.<locals>.compare at 0x7f814f590e00>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-17T11:31:46.6321355Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6321598Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6321602Z 
2025-01-17T11:31:46.6321672Z     @wraps(func)
2025-01-17T11:31:46.6321754Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6321838Z         with self._recreate_cm():
2025-01-17T11:31:46.6321917Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6321993Z E           AssertionError: 
2025-01-17T11:31:46.6322095Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6322159Z E           
2025-01-17T11:31:46.6322254Z E           Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.6322384Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.6322491Z E           Max relative difference among violations: 1.
2025-01-17T11:31:46.6322846Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6322937Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6323098Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6323179Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6323320Z 
2025-01-17T11:31:46.6323614Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6323794Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-17T11:31:46.6323798Z 
2025-01-17T11:31:46.6324005Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f817e638a10>
2025-01-17T11:31:46.6324196Z simulation = <tardis.simulation.base.Simulation object at 0x7f81481b7b30>
2025-01-17T11:31:46.6324200Z 
2025-01-17T11:31:46.6324304Z     def test_j_blue_estimators(self, simulation):
2025-01-17T11:31:46.6324450Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-17T11:31:46.6324544Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6324607Z     
2025-01-17T11:31:46.6324684Z >       npt.assert_allclose(
2025-01-17T11:31:46.6324895Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-17T11:31:46.6324976Z             expected.values,
2025-01-17T11:31:46.6325043Z         )
2025-01-17T11:31:46.6325047Z 
2025-01-17T11:31:46.6325142Z tardis/tests/test_tardis_full.py:70: 
2025-01-17T11:31:46.6325251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6325255Z 
2025-01-17T11:31:46.6325510Z args = (<function assert_allclose.<locals>.compare at 0x7f8152647d80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6325587Z        [0., 0., .....,
2025-01-17T11:31:46.6325662Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6325740Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6325813Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6326064Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6326068Z 
2025-01-17T11:31:46.6326140Z     @wraps(func)
2025-01-17T11:31:46.6326222Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6326300Z         with self._recreate_cm():
2025-01-17T11:31:46.6326385Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6326468Z E           AssertionError: 
2025-01-17T11:31:46.6326567Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6326635Z E           
2025-01-17T11:31:46.6326733Z E           Mismatched elements: 490644 / 584480 (83.9%)
2025-01-17T11:31:46.6326863Z E           Max absolute difference among violations: 2.30902188e-19
2025-01-17T11:31:46.6326983Z E           Max relative difference among violations: 8.02015845
2025-01-17T11:31:46.6327082Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327163Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327249Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6327347Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327427Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327505Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6327514Z 
2025-01-17T11:31:46.6327714Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6327859Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6328102Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6328168Z 	
2025-01-17T11:31:46.6328717Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-17T11:31:46.6328883Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6329306Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-17T11:31:46.6329462Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6329942Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-17T11:31:46.6330345Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6330780Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6330949Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6331154Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6331309Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6331372Z 	
2025-01-17T11:31:46.6331518Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6331670Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6331735Z 	
2025-01-17T11:31:46.6331822Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-17T11:31:46.6331910Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-17T11:31:46.6331992Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6332102Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6332257Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6332325Z 	
2025-01-17T11:31:46.6332465Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6332725Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6332787Z 	
2025-01-17T11:31:46.6332889Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-17T11:31:46.6332967Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-17T11:31:46.6333048Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-17T11:31:46.6333139Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-17T11:31:46.6333284Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-17T11:31:46.6333472Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6333754Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6333873Z 	
2025-01-17T11:31:46.6334007Z 	Current t_inner = 9974.969 K
2025-01-17T11:31:46.6334196Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-17T11:31:46.6334376Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6334652Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6334757Z 	
2025-01-17T11:31:46.6334975Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6335130Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6335195Z 	
2025-01-17T11:31:46.6335279Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-17T11:31:46.6335367Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-17T11:31:46.6335450Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6335549Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6335699Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6342367Z 	
2025-01-17T11:31:46.6342737Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6342919Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6342986Z 	
2025-01-17T11:31:46.6343095Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6343191Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-17T11:31:46.6343273Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-17T11:31:46.6343355Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-17T11:31:46.6343431Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-17T11:31:46.6343536Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6343697Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6343763Z 	
2025-01-17T11:31:46.6343843Z 	Current t_inner = 10736.784 K
2025-01-17T11:31:46.6343958Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-17T11:31:46.6344055Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6344214Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6344276Z 	
2025-01-17T11:31:46.6344418Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6344571Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6344632Z 	
2025-01-17T11:31:46.6344720Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-17T11:31:46.6344984Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-17T11:31:46.6345193Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6345298Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6345449Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6345661Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-17T11:31:46.6345819Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6345880Z 	
2025-01-17T11:31:46.6346020Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6346170Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6346233Z 	
2025-01-17T11:31:46.6346329Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6346407Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-17T11:31:46.6346484Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-17T11:31:46.6346560Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-17T11:31:46.6346643Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-17T11:31:46.6346745Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6346897Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6346959Z 	
2025-01-17T11:31:46.6347038Z 	Current t_inner = 10718.886 K
2025-01-17T11:31:46.6347146Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-17T11:31:46.6347243Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6347389Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6347451Z 	
2025-01-17T11:31:46.6347591Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6347739Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6347801Z 	
2025-01-17T11:31:46.6347887Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-17T11:31:46.6347970Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-17T11:31:46.6348051Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6348147Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6348298Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6348508Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-17T11:31:46.6348656Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6348720Z 	
2025-01-17T11:31:46.6348858Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6349016Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6349076Z 	
2025-01-17T11:31:46.6349177Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6349254Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-17T11:31:46.6349330Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-17T11:31:46.6349407Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-17T11:31:46.6349484Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-17T11:31:46.6349580Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6349735Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6349800Z 	
2025-01-17T11:31:46.6349875Z 	Current t_inner = 10695.170 K
2025-01-17T11:31:46.6349989Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-17T11:31:46.6350085Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6350233Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6350294Z 	
2025-01-17T11:31:46.6350383Z 	Simulation finished in 4 iterations 
2025-01-17T11:31:46.6350459Z 	Simulation took 13.14 s
2025-01-17T11:31:46.6350556Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6350704Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6350769Z 	
2025-01-17T11:31:46.6350909Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6351061Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6351122Z 	
2025-01-17T11:31:46.6351207Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-17T11:31:46.6351291Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-17T11:31:46.6351373Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6351565Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6351798Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:31:46.6351805Z 
2025-01-17T11:31:46.6351812Z 
2025-01-17T11:31:46.6352059Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-17T11:31:46.6352064Z 
2025-01-17T11:31:46.6352279Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-17T11:31:46.6352283Z 
2025-01-17T11:31:46.6352681Z Packets:   ████▏                                                                           10326/200000 [00:00<00:01, 103253.45it/s][A
2025-01-17T11:31:46.6352694Z 
2025-01-17T11:31:46.6353018Z Packets:   ████████▎                                                                       20652/200000 [00:00<00:01, 101479.81it/s][A
2025-01-17T11:31:46.6353024Z 
2025-01-17T11:31:46.6353264Z Packets:   ████████████▌                                                                   31250/200000 [00:00<00:01, 103514.78it/s][A
2025-01-17T11:31:46.6353289Z 
2025-01-17T11:31:46.6353535Z Packets:   ████████████████▊                                                               41914/200000 [00:00<00:01, 104738.01it/s][A
2025-01-17T11:31:46.6353539Z 
2025-01-17T11:31:46.6353783Z Packets:   █████████████████████                                                           52582/200000 [00:00<00:01, 105433.95it/s][A
2025-01-17T11:31:46.6353787Z 
2025-01-17T11:31:46.6354037Z Packets:   █████████████████████████▎                                                      63259/200000 [00:00<00:01, 105885.33it/s][A
2025-01-17T11:31:46.6354041Z 
2025-01-17T11:31:46.6354296Z Packets:   █████████████████████████████▌                                                  73920/200000 [00:00<00:01, 106119.73it/s][A
2025-01-17T11:31:46.6354303Z 
2025-01-17T11:31:46.6354564Z Packets:   █████████████████████████████████▊                                              84533/200000 [00:00<00:01, 106011.07it/s][A
2025-01-17T11:31:46.6354582Z 
2025-01-17T11:31:46.6354865Z Packets:   ██████████████████████████████████████                                          95209/200000 [00:00<00:00, 106243.69it/s][A
2025-01-17T11:31:46.6354869Z 
2025-01-17T11:31:46.6355147Z Packets:   ██████████████████████████████████████████▎                                     105834/200000 [00:01<00:00, 106115.21it/s][A
2025-01-17T11:31:46.6355152Z 
2025-01-17T11:31:46.6355437Z Packets:   ██████████████████████████████████████████████▌                                 116446/200000 [00:01<00:00, 106030.73it/s][A
2025-01-17T11:31:46.6355441Z 
2025-01-17T11:31:46.6355720Z Packets:   ██████████████████████████████████████████████████▊                             127050/200000 [00:01<00:00, 104895.79it/s][A
2025-01-17T11:31:46.6355724Z 
2025-01-17T11:31:46.6356014Z Packets:   ███████████████████████████████████████████████████████                         137775/200000 [00:01<00:00, 105602.74it/s][A
2025-01-17T11:31:46.6356158Z 
2025-01-17T11:31:46.6356572Z Packets:   ███████████████████████████████████████████████████████████▍                    148546/200000 [00:01<00:00, 106234.12it/s][A
2025-01-17T11:31:46.6356577Z 
2025-01-17T11:31:46.6356880Z Packets:   ███████████████████████████████████████████████████████████████▋                159172/200000 [00:01<00:00, 105917.43it/s][A
2025-01-17T11:31:46.6356884Z 
2025-01-17T11:31:46.6357296Z Packets:   ███████████████████████████████████████████████████████████████████▉            169766/200000 [00:01<00:00, 105265.25it/s][A
2025-01-17T11:31:46.6357310Z 
2025-01-17T11:31:46.6357924Z Packets:   ████████████████████████████████████████████████████████████████████████        180295/200000 [00:01<00:00, 104779.24it/s][A
2025-01-17T11:31:46.6357932Z 
2025-01-17T11:31:46.6358523Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   190775/200000 [00:01<00:00, 103189.25it/s][A
2025-01-17T11:31:46.6358814Z Iterations:                                                                                13/? [06:01<00:00, 12.44s/it]
2025-01-17T11:31:46.6358821Z 
2025-01-17T11:31:46.6359222Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 103189.25it/s][A
2025-01-17T11:31:46.6359228Z 
2025-01-17T11:31:46.6359457Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6359462Z 
2025-01-17T11:31:46.6359696Z Packets:   ████▏                                                                           10614/200000 [00:00<00:01, 106138.58it/s][A
2025-01-17T11:31:46.6359701Z 
2025-01-17T11:31:46.6359940Z Packets:   ████████▌                                                                       21263/200000 [00:00<00:01, 106344.76it/s][A
2025-01-17T11:31:46.6359944Z 
2025-01-17T11:31:46.6360181Z Packets:   ████████████▊                                                                   32125/200000 [00:00<00:01, 107383.61it/s][A
2025-01-17T11:31:46.6360198Z 
2025-01-17T11:31:46.6360447Z Packets:   █████████████████▏                                                              42864/200000 [00:00<00:01, 106776.42it/s][A
2025-01-17T11:31:46.6360455Z 
2025-01-17T11:31:46.6360698Z Packets:   █████████████████████▍                                                          53625/200000 [00:00<00:01, 107075.68it/s][A
2025-01-17T11:31:46.6360702Z 
2025-01-17T11:31:46.6360954Z Packets:   █████████████████████████▋                                                      64334/200000 [00:00<00:01, 106626.16it/s][A
2025-01-17T11:31:46.6360958Z 
2025-01-17T11:31:46.6361209Z Packets:   █████████████████████████████▉                                                  74998/200000 [00:00<00:01, 106488.00it/s][A
2025-01-17T11:31:46.6361213Z 
2025-01-17T11:31:46.6361481Z Packets:   ██████████████████████████████████▎                                             85648/200000 [00:00<00:01, 105767.95it/s][A
2025-01-17T11:31:46.6361599Z 
2025-01-17T11:31:46.6361968Z Packets:   ██████████████████████████████████████▍                                         96226/200000 [00:00<00:00, 105667.91it/s][A
2025-01-17T11:31:46.6361973Z 
2025-01-17T11:31:46.6362254Z Packets:   ██████████████████████████████████████████▋                                     106794/200000 [00:01<00:00, 104122.40it/s][A
2025-01-17T11:31:46.6362258Z 
2025-01-17T11:31:46.6362709Z Packets:   ██████████████████████████████████████████████▉                                 117426/200000 [00:01<00:00, 104783.85it/s][A
2025-01-17T11:31:46.6362718Z 
2025-01-17T11:31:46.6363067Z Packets:   ███████████████████████████████████████████████████▏                            127909/200000 [00:01<00:00, 104426.90it/s][A
2025-01-17T11:31:46.6363072Z 
2025-01-17T11:31:46.6363367Z Packets:   ███████████████████████████████████████████████████████▍                        138568/200000 [00:01<00:00, 105075.13it/s][A
2025-01-17T11:31:46.6363391Z 
2025-01-17T11:31:46.6363701Z Packets:   ███████████████████████████████████████████████████████████▋                    149124/200000 [00:01<00:00, 105220.42it/s][A
2025-01-17T11:31:46.6363705Z 
2025-01-17T11:31:46.6364006Z Packets:   ███████████████████████████████████████████████████████████████▉                159743/200000 [00:01<00:00, 105508.65it/s][A
2025-01-17T11:31:46.6364010Z 
2025-01-17T11:31:46.6364314Z Packets:   ████████████████████████████████████████████████████████████████████▏           170488/200000 [00:01<00:00, 106088.24it/s][A
2025-01-17T11:31:46.6364318Z 
2025-01-17T11:31:46.6364629Z Packets:   ████████████████████████████████████████████████████████████████████████▍       181099/200000 [00:01<00:00, 106079.47it/s][A
2025-01-17T11:31:46.6364633Z 
2025-01-17T11:31:46.6364944Z Packets:   ████████████████████████████████████████████████████████████████████████████▋   191788/200000 [00:01<00:00, 106319.52it/s][A
2025-01-17T11:31:46.6365084Z Iterations:                                                                                14/? [06:04<00:00,  9.66s/it]
2025-01-17T11:31:46.6365120Z 
2025-01-17T11:31:46.6365436Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106319.52it/s][A
2025-01-17T11:31:46.6365441Z 
2025-01-17T11:31:46.6365666Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6365670Z 
2025-01-17T11:31:46.6365899Z Packets:   ████▎                                                                           10633/200000 [00:00<00:01, 105060.89it/s][A
2025-01-17T11:31:46.6365905Z 
2025-01-17T11:31:46.6366136Z Packets:   ████████▍                                                                       21140/200000 [00:00<00:01, 104895.75it/s][A
2025-01-17T11:31:46.6366140Z 
2025-01-17T11:31:46.6366382Z Packets:   ████████████▋                                                                   31630/200000 [00:00<00:01, 104219.85it/s][A
2025-01-17T11:31:46.6366531Z 
2025-01-17T11:31:46.6366904Z Packets:   ████████████████▊                                                               42072/200000 [00:00<00:01, 104296.86it/s][A
2025-01-17T11:31:46.6366909Z 
2025-01-17T11:31:46.6367162Z Packets:   █████████████████████                                                           52520/200000 [00:00<00:01, 104362.50it/s][A
2025-01-17T11:31:46.6367167Z 
2025-01-17T11:31:46.6367418Z Packets:   █████████████████████████▏                                                      63015/200000 [00:00<00:01, 104558.05it/s][A
2025-01-17T11:31:46.6367422Z 
2025-01-17T11:31:46.6367681Z Packets:   █████████████████████████████▍                                                  73556/200000 [00:00<00:01, 104834.40it/s][A
2025-01-17T11:31:46.6367685Z 
2025-01-17T11:31:46.6367943Z Packets:   █████████████████████████████████▌                                              84040/200000 [00:00<00:01, 103948.11it/s][A
2025-01-17T11:31:46.6367960Z 
2025-01-17T11:31:46.6368240Z Packets:   █████████████████████████████████████▊                                          94437/200000 [00:00<00:01, 103424.00it/s][A
2025-01-17T11:31:46.6368244Z 
2025-01-17T11:31:46.6368521Z Packets:   ██████████████████████████████████████████                                      105133/200000 [00:01<00:00, 104503.87it/s][A
2025-01-17T11:31:46.6368525Z 
2025-01-17T11:31:46.6368804Z Packets:   ██████████████████████████████████████████████▎                                 115870/200000 [00:01<00:00, 105374.41it/s][A
2025-01-17T11:31:46.6368808Z 
2025-01-17T11:31:46.6369093Z Packets:   ██████████████████████████████████████████████████▋                             126626/200000 [00:01<00:00, 106033.85it/s][A
2025-01-17T11:31:46.6369097Z 
2025-01-17T11:31:46.6369386Z Packets:   ██████████████████████████████████████████████████████▉                         137231/200000 [00:01<00:00, 105988.30it/s][A
2025-01-17T11:31:46.6369390Z 
2025-01-17T11:31:46.6369720Z Packets:   ███████████████████████████████████████████████████████████▏                    147831/200000 [00:01<00:00, 105858.37it/s][A
2025-01-17T11:31:46.6369723Z 
2025-01-17T11:31:46.6370017Z Packets:   ███████████████████████████████████████████████████████████████▍                158502/200000 [00:01<00:00, 106111.51it/s][A
2025-01-17T11:31:46.6370021Z 
2025-01-17T11:31:46.6370333Z Packets:   ███████████████████████████████████████████████████████████████████▋            169114/200000 [00:01<00:00, 104757.55it/s][A
2025-01-17T11:31:46.6370337Z 
2025-01-17T11:31:46.6370644Z Packets:   ███████████████████████████████████████████████████████████████████████▊        179611/200000 [00:01<00:00, 104819.77it/s][A
2025-01-17T11:31:46.6370651Z 
2025-01-17T11:31:46.6370966Z Packets:   ████████████████████████████████████████████████████████████████████████████▏   190320/200000 [00:01<00:00, 105490.94it/s][A
2025-01-17T11:31:46.6371107Z Iterations:                                                                                15/? [06:08<00:00,  7.73s/it]
2025-01-17T11:31:46.6371209Z 
2025-01-17T11:31:46.6371605Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105490.94it/s][A
2025-01-17T11:31:46.6371609Z 
2025-01-17T11:31:46.6371839Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6371843Z 
2025-01-17T11:31:46.6372075Z Packets:   ████▏                                                                           10552/200000 [00:00<00:01, 105071.19it/s][A
2025-01-17T11:31:46.6372078Z 
2025-01-17T11:31:46.6372312Z Packets:   ████████▍                                                                       21129/200000 [00:00<00:01, 105479.23it/s][A
2025-01-17T11:31:46.6372315Z 
2025-01-17T11:31:46.6372652Z Packets:   ████████████▋                                                                   31677/200000 [00:00<00:01, 105408.20it/s][A
2025-01-17T11:31:46.6372669Z 
2025-01-17T11:31:46.6372927Z Packets:   ████████████████▉                                                               42247/200000 [00:00<00:01, 105522.93it/s][A
2025-01-17T11:31:46.6372931Z 
2025-01-17T11:31:46.6373177Z Packets:   █████████████████████▏                                                          52831/200000 [00:00<00:01, 105635.05it/s][A
2025-01-17T11:31:46.6373181Z 
2025-01-17T11:31:46.6373433Z Packets:   █████████████████████████▎                                                      63395/200000 [00:00<00:01, 105315.06it/s][A
2025-01-17T11:31:46.6373437Z 
2025-01-17T11:31:46.6373695Z Packets:   █████████████████████████████▌                                                  73927/200000 [00:00<00:01, 105299.92it/s][A
2025-01-17T11:31:46.6373698Z 
2025-01-17T11:31:46.6373958Z Packets:   █████████████████████████████████▊                                              84458/200000 [00:00<00:01, 105035.98it/s][A
2025-01-17T11:31:46.6373962Z 
2025-01-17T11:31:46.6374255Z Packets:   █████████████████████████████████████▉                                          94992/200000 [00:00<00:00, 105129.52it/s][A
2025-01-17T11:31:46.6374259Z 
2025-01-17T11:31:46.6374532Z Packets:   ██████████████████████████████████████████▏                                     105506/200000 [00:01<00:00, 104975.09it/s][A
2025-01-17T11:31:46.6374536Z 
2025-01-17T11:31:46.6375033Z Packets:   ██████████████████████████████████████████████▍                                 116004/200000 [00:01<00:00, 104806.50it/s][A
2025-01-17T11:31:46.6375041Z 
2025-01-17T11:31:46.6375606Z Packets:   ██████████████████████████████████████████████████▌                             126485/200000 [00:01<00:00, 104587.85it/s][A
2025-01-17T11:31:46.6375613Z 
2025-01-17T11:31:46.6376146Z Packets:   ██████████████████████████████████████████████████████▊                         136958/200000 [00:01<00:00, 104629.97it/s][A
2025-01-17T11:31:46.6376152Z 
2025-01-17T11:31:46.6376562Z Packets:   ███████████████████████████████████████████████████████████                     147534/200000 [00:01<00:00, 104969.60it/s][A
2025-01-17T11:31:46.6376836Z 
2025-01-17T11:31:46.6377154Z Packets:   ███████████████████████████████████████████████████████████████▎                158127/200000 [00:01<00:00, 105255.91it/s][A
2025-01-17T11:31:46.6377159Z 
2025-01-17T11:31:46.6377465Z Packets:   ███████████████████████████████████████████████████████████████████▌            168796/200000 [00:01<00:00, 105686.33it/s][A
2025-01-17T11:31:46.6377469Z 
2025-01-17T11:31:46.6377776Z Packets:   ███████████████████████████████████████████████████████████████████████▋        179365/200000 [00:01<00:00, 105334.42it/s][A
2025-01-17T11:31:46.6377780Z 
2025-01-17T11:31:46.6378095Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    189899/200000 [00:01<00:00, 105194.18it/s][A
2025-01-17T11:31:46.6378234Z Iterations:                                                                                16/? [06:11<00:00,  6.40s/it]
2025-01-17T11:31:46.6378256Z 
2025-01-17T11:31:46.6378594Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105194.18it/s][A
2025-01-17T11:31:46.6378598Z 
2025-01-17T11:31:46.6378821Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6378825Z 
2025-01-17T11:31:46.6379056Z Packets:   █▋                                                                              10520/500000 [00:00<00:13, 34966.47it/s][A
2025-01-17T11:31:46.6379060Z 
2025-01-17T11:31:46.6379282Z Packets:   ██▏                                                                             14017/500000 [00:00<00:13, 34733.66it/s][A
2025-01-17T11:31:46.6379290Z 
2025-01-17T11:31:46.6379507Z Packets:   ██▊                                                                             17536/500000 [00:00<00:13, 34875.91it/s][A
2025-01-17T11:31:46.6379512Z 
2025-01-17T11:31:46.6379758Z Packets:   ███▎                                                                            21030/500000 [00:00<00:13, 34894.18it/s][A
2025-01-17T11:31:46.6379762Z 
2025-01-17T11:31:46.6379990Z Packets:   ███▉                                                                            24518/500000 [00:00<00:13, 34794.93it/s][A
2025-01-17T11:31:46.6379994Z 
2025-01-17T11:31:46.6380220Z Packets:   ████▍                                                                           27995/500000 [00:00<00:13, 34676.52it/s][A
2025-01-17T11:31:46.6380224Z 
2025-01-17T11:31:46.6380445Z Packets:   █████                                                                           31460/500000 [00:00<00:13, 34645.84it/s][A
2025-01-17T11:31:46.6380449Z 
2025-01-17T11:31:46.6380678Z Packets:   █████▌                                                                          34930/500000 [00:01<00:13, 34660.75it/s][A
2025-01-17T11:31:46.6380681Z 
2025-01-17T11:31:46.6380908Z Packets:   ██████▏                                                                         38395/500000 [00:01<00:13, 34625.65it/s][A
2025-01-17T11:31:46.6381075Z 
2025-01-17T11:31:46.6381310Z Packets:   ██████▋                                                                         41890/500000 [00:01<00:13, 34720.72it/s][A
2025-01-17T11:31:46.6381314Z 
2025-01-17T11:31:46.6381541Z Packets:   ███████▎                                                                        45390/500000 [00:01<00:13, 34801.91it/s][A
2025-01-17T11:31:46.6381547Z 
2025-01-17T11:31:46.6381772Z Packets:   ███████▊                                                                        48882/500000 [00:01<00:12, 34836.97it/s][A
2025-01-17T11:31:46.6381776Z 
2025-01-17T11:31:46.6382004Z Packets:   ████████▍                                                                       52430/500000 [00:01<00:12, 35029.09it/s][A
2025-01-17T11:31:46.6382008Z 
2025-01-17T11:31:46.6382234Z Packets:   ████████▉                                                                       55934/500000 [00:01<00:12, 34775.04it/s][A
2025-01-17T11:31:46.6382249Z 
2025-01-17T11:31:46.6382489Z Packets:   █████████▌                                                                      59423/500000 [00:01<00:12, 34803.60it/s][A
2025-01-17T11:31:46.6382493Z 
2025-01-17T11:31:46.6382842Z Packets:   ██████████                                                                      62904/500000 [00:01<00:12, 34777.34it/s][A
2025-01-17T11:31:46.6382846Z 
2025-01-17T11:31:46.6383080Z Packets:   ██████████▋                                                                     66426/500000 [00:01<00:12, 34908.97it/s][A
2025-01-17T11:31:46.6383084Z 
2025-01-17T11:31:46.6383314Z Packets:   ███████████▏                                                                    69918/500000 [00:02<00:12, 34671.46it/s][A
2025-01-17T11:31:46.6383318Z 
2025-01-17T11:31:46.6383551Z Packets:   ███████████▋                                                                    73386/500000 [00:02<00:12, 34624.28it/s][A
2025-01-17T11:31:46.6383568Z 
2025-01-17T11:31:46.6383810Z Packets:   ████████████▎                                                                   76889/500000 [00:02<00:12, 34744.50it/s][A
2025-01-17T11:31:46.6383816Z 
2025-01-17T11:31:46.6384047Z Packets:   ████████████▊                                                                   80364/500000 [00:02<00:12, 34533.69it/s][A
2025-01-17T11:31:46.6384051Z 
2025-01-17T11:31:46.6384285Z Packets:   █████████████▍                                                                  83820/500000 [00:02<00:12, 34539.33it/s][A
2025-01-17T11:31:46.6384289Z 
2025-01-17T11:31:46.6384523Z Packets:   █████████████▉                                                                  87275/500000 [00:02<00:11, 34508.48it/s][A
2025-01-17T11:31:46.6384526Z 
2025-01-17T11:31:46.6384765Z Packets:   ██████████████▌                                                                 90727/500000 [00:02<00:11, 34272.53it/s][A
2025-01-17T11:31:46.6384768Z 
2025-01-17T11:31:46.6385261Z Packets:   ███████████████                                                                 94155/500000 [00:02<00:11, 34264.43it/s][A
2025-01-17T11:31:46.6385266Z 
2025-01-17T11:31:46.6385512Z Packets:   ███████████████▌                                                                97582/500000 [00:02<00:11, 34162.81it/s][A
2025-01-17T11:31:46.6385516Z 
2025-01-17T11:31:46.6385759Z Packets:   ████████████████▏                                                               100999/500000 [00:02<00:11, 34144.48it/s][A
2025-01-17T11:31:46.6385763Z 
2025-01-17T11:31:46.6386006Z Packets:   ████████████████▋                                                               104500/500000 [00:03<00:11, 34402.44it/s][A
2025-01-17T11:31:46.6386010Z 
2025-01-17T11:31:46.6386250Z Packets:   █████████████████▎                                                              107964/500000 [00:03<00:11, 34470.61it/s][A
2025-01-17T11:31:46.6386254Z 
2025-01-17T11:31:46.6386493Z Packets:   █████████████████▊                                                              111447/500000 [00:03<00:11, 34577.69it/s][A
2025-01-17T11:31:46.6386519Z 
2025-01-17T11:31:46.6386762Z Packets:   ██████████████████▍                                                             114905/500000 [00:03<00:11, 34506.47it/s][A
2025-01-17T11:31:46.6386766Z 
2025-01-17T11:31:46.6387008Z Packets:   ██████████████████▉                                                             118381/500000 [00:03<00:11, 34581.10it/s][A
2025-01-17T11:31:46.6387012Z 
2025-01-17T11:31:46.6387258Z Packets:   ███████████████████▍                                                            121840/500000 [00:03<00:10, 34560.73it/s][A
2025-01-17T11:31:46.6387261Z 
2025-01-17T11:31:46.6387503Z Packets:   ████████████████████                                                            125326/500000 [00:03<00:10, 34648.88it/s][A
2025-01-17T11:31:46.6387508Z 
2025-01-17T11:31:46.6387754Z Packets:   ████████████████████▌                                                           128808/500000 [00:03<00:10, 34696.76it/s][A
2025-01-17T11:31:46.6387771Z 
2025-01-17T11:31:46.6388025Z Packets:   █████████████████████▏                                                          132278/500000 [00:03<00:10, 34606.27it/s][A
2025-01-17T11:31:46.6388033Z 
2025-01-17T11:31:46.6388276Z Packets:   █████████████████████▋                                                          135739/500000 [00:03<00:10, 34554.96it/s][A
2025-01-17T11:31:46.6388279Z 
2025-01-17T11:31:46.6388527Z Packets:   ██████████████████████▎                                                         139195/500000 [00:04<00:10, 34513.69it/s][A
2025-01-17T11:31:46.6388531Z 
2025-01-17T11:31:46.6388777Z Packets:   ██████████████████████▊                                                         142665/500000 [00:04<00:10, 34568.80it/s][A
2025-01-17T11:31:46.6388781Z 
2025-01-17T11:31:46.6389029Z Packets:   ███████████████████████▍                                                        146122/500000 [00:04<00:10, 34482.92it/s][A
2025-01-17T11:31:46.6389043Z 
2025-01-17T11:31:46.6389300Z Packets:   ███████████████████████▉                                                        149571/500000 [00:04<00:10, 33339.01it/s][A
2025-01-17T11:31:46.6389304Z 
2025-01-17T11:31:46.6389557Z Packets:   ████████████████████████▍                                                       153018/500000 [00:04<00:10, 33669.34it/s][A
2025-01-17T11:31:46.6389560Z 
2025-01-17T11:31:46.6389810Z Packets:   █████████████████████████                                                       156427/500000 [00:04<00:10, 33791.53it/s][A
2025-01-17T11:31:46.6389814Z 
2025-01-17T11:31:46.6390066Z Packets:   █████████████████████████▌                                                      159866/500000 [00:04<00:10, 33965.64it/s][A
2025-01-17T11:31:46.6390073Z 
2025-01-17T11:31:46.6390324Z Packets:   ██████████████████████████                                                      163267/500000 [00:04<00:09, 33956.46it/s][A
2025-01-17T11:31:46.6390332Z 
2025-01-17T11:31:46.6390759Z Packets:   ██████████████████████████▋                                                     166666/500000 [00:04<00:09, 33885.08it/s][A
2025-01-17T11:31:46.6390764Z 
2025-01-17T11:31:46.6391020Z Packets:   ███████████████████████████▏                                                    170168/500000 [00:04<00:09, 34223.00it/s][A
2025-01-17T11:31:46.6391025Z 
2025-01-17T11:31:46.6391277Z Packets:   ███████████████████████████▊                                                    173592/500000 [00:05<00:09, 34178.44it/s][A
2025-01-17T11:31:46.6391281Z 
2025-01-17T11:31:46.6391537Z Packets:   ████████████████████████████▎                                                   177011/500000 [00:05<00:09, 34145.40it/s][A
2025-01-17T11:31:46.6391541Z 
2025-01-17T11:31:46.6391793Z Packets:   ████████████████████████████▊                                                   180427/500000 [00:05<00:09, 34134.38it/s][A
2025-01-17T11:31:46.6391797Z 
2025-01-17T11:31:46.6392052Z Packets:   █████████████████████████████▍                                                  183841/500000 [00:05<00:09, 33015.78it/s][A
2025-01-17T11:31:46.6392079Z 
2025-01-17T11:31:46.6392338Z Packets:   █████████████████████████████▉                                                  187166/500000 [00:05<00:09, 33081.95it/s][A
2025-01-17T11:31:46.6392341Z 
2025-01-17T11:31:46.6392799Z Packets:   ██████████████████████████████▍                                                 190509/500000 [00:05<00:09, 33182.56it/s][A
2025-01-17T11:31:46.6392805Z 
2025-01-17T11:31:46.6393078Z Packets:   ███████████████████████████████                                                 193832/500000 [00:05<00:09, 33148.35it/s][A
2025-01-17T11:31:46.6393083Z 
2025-01-17T11:31:46.6393343Z Packets:   ███████████████████████████████▌                                                197150/500000 [00:05<00:09, 33133.33it/s][A
2025-01-17T11:31:46.6393347Z 
2025-01-17T11:31:46.6393607Z Packets:   ████████████████████████████████                                                200522/500000 [00:05<00:08, 33302.19it/s][A
2025-01-17T11:31:46.6393625Z 
2025-01-17T11:31:46.6393897Z Packets:   ████████████████████████████████▌                                               203854/500000 [00:05<00:08, 33125.82it/s][A
2025-01-17T11:31:46.6393901Z 
2025-01-17T11:31:46.6394165Z Packets:   █████████████████████████████████▏                                              207207/500000 [00:06<00:08, 33245.81it/s][A
2025-01-17T11:31:46.6394169Z 
2025-01-17T11:31:46.6394429Z Packets:   █████████████████████████████████▋                                              210589/500000 [00:06<00:08, 33416.16it/s][A
2025-01-17T11:31:46.6394432Z 
2025-01-17T11:31:46.6394697Z Packets:   ██████████████████████████████████▏                                             213932/500000 [00:06<00:08, 33324.07it/s][A
2025-01-17T11:31:46.6394701Z 
2025-01-17T11:31:46.6394962Z Packets:   ██████████████████████████████████▊                                             217265/500000 [00:06<00:08, 32455.37it/s][A
2025-01-17T11:31:46.6395105Z 
2025-01-17T11:31:46.6395489Z Packets:   ███████████████████████████████████▎                                            220532/500000 [00:06<00:08, 32514.62it/s][A
2025-01-17T11:31:46.6395493Z 
2025-01-17T11:31:46.6395763Z Packets:   ███████████████████████████████████▊                                            223788/500000 [00:06<00:08, 32486.80it/s][A
2025-01-17T11:31:46.6395767Z 
2025-01-17T11:31:46.6396031Z Packets:   ████████████████████████████████████▎                                           227170/500000 [00:06<00:08, 32881.85it/s][A
2025-01-17T11:31:46.6396034Z 
2025-01-17T11:31:46.6396302Z Packets:   ████████████████████████████████████▉                                           230525/500000 [00:06<00:08, 33080.00it/s][A
2025-01-17T11:31:46.6396306Z 
2025-01-17T11:31:46.6396571Z Packets:   █████████████████████████████████████▍                                          233961/500000 [00:06<00:07, 33461.66it/s][A
2025-01-17T11:31:46.6396575Z 
2025-01-17T11:31:46.6396869Z Packets:   █████████████████████████████████████▉                                          237318/500000 [00:06<00:07, 33492.39it/s][A
2025-01-17T11:31:46.6396874Z 
2025-01-17T11:31:46.6397140Z Packets:   ██████████████████████████████████████▌                                         240669/500000 [00:07<00:07, 33367.07it/s][A
2025-01-17T11:31:46.6397144Z 
2025-01-17T11:31:46.6397414Z Packets:   ███████████████████████████████████████                                         244104/500000 [00:07<00:07, 33659.38it/s][A
2025-01-17T11:31:46.6397418Z 
2025-01-17T11:31:46.6397686Z Packets:   ███████████████████████████████████████▌                                        247471/500000 [00:07<00:07, 33647.34it/s][A
2025-01-17T11:31:46.6397693Z 
2025-01-17T11:31:46.6397961Z Packets:   ████████████████████████████████████████▏                                       250837/500000 [00:07<00:07, 32559.70it/s][A
2025-01-17T11:31:46.6397966Z 
2025-01-17T11:31:46.6398242Z Packets:   ████████████████████████████████████████▋                                       254176/500000 [00:07<00:07, 32799.91it/s][A
2025-01-17T11:31:46.6398270Z 
2025-01-17T11:31:46.6398564Z Packets:   █████████████████████████████████████████▏                                      257508/500000 [00:07<00:07, 32948.56it/s][A
2025-01-17T11:31:46.6398570Z 
2025-01-17T11:31:46.6399101Z Packets:   █████████████████████████████████████████▋                                      260874/500000 [00:07<00:07, 33157.73it/s][A
2025-01-17T11:31:46.6399109Z 
2025-01-17T11:31:46.6399633Z Packets:   ██████████████████████████████████████████▎                                     264194/500000 [00:07<00:07, 33074.40it/s][A
2025-01-17T11:31:46.6399639Z 
2025-01-17T11:31:46.6400143Z Packets:   ██████████████████████████████████████████▊                                     267510/500000 [00:07<00:07, 33099.60it/s][A
2025-01-17T11:31:46.6400149Z 
2025-01-17T11:31:46.6400537Z Packets:   ███████████████████████████████████████████▎                                    270897/500000 [00:07<00:06, 33323.93it/s][A
2025-01-17T11:31:46.6400661Z 
2025-01-17T11:31:46.6401040Z Packets:   ███████████████████████████████████████████▉                                    274246/500000 [00:08<00:06, 33370.84it/s][A
2025-01-17T11:31:46.6401045Z 
2025-01-17T11:31:46.6401325Z Packets:   ████████████████████████████████████████████▍                                   277585/500000 [00:08<00:06, 33350.16it/s][A
2025-01-17T11:31:46.6401332Z 
2025-01-17T11:31:46.6401605Z Packets:   ████████████████████████████████████████████▉                                   281043/500000 [00:08<00:06, 33716.90it/s][A
2025-01-17T11:31:46.6401609Z 
2025-01-17T11:31:46.6401886Z Packets:   █████████████████████████████████████████████▌                                  284416/500000 [00:08<00:06, 33683.30it/s][A
2025-01-17T11:31:46.6401890Z 
2025-01-17T11:31:46.6402164Z Packets:   ██████████████████████████████████████████████                                  287785/500000 [00:08<00:06, 31995.32it/s][A
2025-01-17T11:31:46.6402182Z 
2025-01-17T11:31:46.6402474Z Packets:   ██████████████████████████████████████████████▌                                 291177/500000 [00:08<00:06, 32548.63it/s][A
2025-01-17T11:31:46.6402478Z 
2025-01-17T11:31:46.6402971Z Packets:   ███████████████████████████████████████████████▏                                294542/500000 [00:08<00:06, 32868.25it/s][A
2025-01-17T11:31:46.6402977Z 
2025-01-17T11:31:46.6403257Z Packets:   ███████████████████████████████████████████████▋                                297945/500000 [00:08<00:06, 33209.27it/s][A
2025-01-17T11:31:46.6403262Z 
2025-01-17T11:31:46.6403541Z Packets:   ████████████████████████████████████████████████▏                               301326/500000 [00:08<00:05, 33386.12it/s][A
2025-01-17T11:31:46.6403545Z 
2025-01-17T11:31:46.6403822Z Packets:   ████████████████████████████████████████████████▊                               304817/500000 [00:08<00:05, 33838.90it/s][A
2025-01-17T11:31:46.6403826Z 
2025-01-17T11:31:46.6404268Z Packets:   █████████████████████████████████████████████████▎                              308261/500000 [00:09<00:05, 34017.27it/s][A
2025-01-17T11:31:46.6404383Z 
2025-01-17T11:31:46.6404673Z Packets:   █████████████████████████████████████████████████▊                              311667/500000 [00:09<00:05, 33874.72it/s][A
2025-01-17T11:31:46.6404677Z 
2025-01-17T11:31:46.6404956Z Packets:   ██████████████████████████████████████████████████▍                             315125/500000 [00:09<00:05, 34084.21it/s][A
2025-01-17T11:31:46.6404960Z 
2025-01-17T11:31:46.6405240Z Packets:   ██████████████████████████████████████████████████▉                             318536/500000 [00:09<00:05, 34025.76it/s][A
2025-01-17T11:31:46.6405244Z 
2025-01-17T11:31:46.6405528Z Packets:   ███████████████████████████████████████████████████▌                            321940/500000 [00:09<00:05, 33060.25it/s][A
2025-01-17T11:31:46.6405532Z 
2025-01-17T11:31:46.6405812Z Packets:   ████████████████████████████████████████████████████                            325275/500000 [00:09<00:05, 33143.29it/s][A
2025-01-17T11:31:46.6405847Z 
2025-01-17T11:31:46.6406128Z Packets:   ████████████████████████████████████████████████████▌                           328669/500000 [00:09<00:05, 33377.87it/s][A
2025-01-17T11:31:46.6406132Z 
2025-01-17T11:31:46.6406415Z Packets:   █████████████████████████████████████████████████████▏                          332033/500000 [00:09<00:05, 33455.16it/s][A
2025-01-17T11:31:46.6406423Z 
2025-01-17T11:31:46.6406706Z Packets:   █████████████████████████████████████████████████████▋                          335449/500000 [00:09<00:04, 33663.47it/s][A
2025-01-17T11:31:46.6406710Z 
2025-01-17T11:31:46.6406995Z Packets:   ██████████████████████████████████████████████████████▏                         338837/500000 [00:10<00:04, 33728.04it/s][A
2025-01-17T11:31:46.6406999Z 
2025-01-17T11:31:46.6407278Z Packets:   ██████████████████████████████████████████████████████▊                         342267/500000 [00:10<00:04, 33897.33it/s][A
2025-01-17T11:31:46.6407298Z 
2025-01-17T11:31:46.6407595Z Packets:   ███████████████████████████████████████████████████████▎                        345701/500000 [00:10<00:04, 34028.33it/s][A
2025-01-17T11:31:46.6407599Z 
2025-01-17T11:31:46.6407883Z Packets:   ███████████████████████████████████████████████████████▊                        349105/500000 [00:10<00:04, 33941.08it/s][A
2025-01-17T11:31:46.6407887Z 
2025-01-17T11:31:46.6408177Z Packets:   ████████████████████████████████████████████████████████▍                       352500/500000 [00:10<00:04, 33778.92it/s][A
2025-01-17T11:31:46.6408180Z 
2025-01-17T11:31:46.6408467Z Packets:   ████████████████████████████████████████████████████████▉                       355879/500000 [00:10<00:04, 32669.45it/s][A
2025-01-17T11:31:46.6408471Z 
2025-01-17T11:31:46.6408761Z Packets:   █████████████████████████████████████████████████████████▍                      359318/500000 [00:10<00:04, 33170.62it/s][A
2025-01-17T11:31:46.6408862Z 
2025-01-17T11:31:46.6409249Z Packets:   ██████████████████████████████████████████████████████████                      362714/500000 [00:10<00:04, 33401.58it/s][A
2025-01-17T11:31:46.6409257Z 
2025-01-17T11:31:46.6409549Z Packets:   ██████████████████████████████████████████████████████████▌                     366098/500000 [00:10<00:03, 33526.20it/s][A
2025-01-17T11:31:46.6409553Z 
2025-01-17T11:31:46.6409846Z Packets:   ███████████████████████████████████████████████████████████                     369519/500000 [00:10<00:03, 33719.53it/s][A
2025-01-17T11:31:46.6409850Z 
2025-01-17T11:31:46.6410148Z Packets:   ███████████████████████████████████████████████████████████▋                    372936/500000 [00:11<00:03, 33852.94it/s][A
2025-01-17T11:31:46.6410152Z 
2025-01-17T11:31:46.6410446Z Packets:   ████████████████████████████████████████████████████████████▏                   376348/500000 [00:11<00:03, 33931.98it/s][A
2025-01-17T11:31:46.6410450Z 
2025-01-17T11:31:46.6410756Z Packets:   ████████████████████████████████████████████████████████████▊                   379743/500000 [00:11<00:03, 33867.17it/s][A
2025-01-17T11:31:46.6410775Z 
2025-01-17T11:31:46.6411065Z Packets:   █████████████████████████████████████████████████████████████▎                  383135/500000 [00:11<00:03, 33879.93it/s][A
2025-01-17T11:31:46.6411069Z 
2025-01-17T11:31:46.6411362Z Packets:   █████████████████████████████████████████████████████████████▊                  386524/500000 [00:11<00:03, 33857.74it/s][A
2025-01-17T11:31:46.6411365Z 
2025-01-17T11:31:46.6411660Z Packets:   ██████████████████████████████████████████████████████████████▍                 389911/500000 [00:11<00:03, 32533.55it/s][A
2025-01-17T11:31:46.6411664Z 
2025-01-17T11:31:46.6411956Z Packets:   ██████████████████████████████████████████████████████████████▉                 393311/500000 [00:11<00:03, 32958.10it/s][A
2025-01-17T11:31:46.6411962Z 
2025-01-17T11:31:46.6412256Z Packets:   ███████████████████████████████████████████████████████████████▍                396732/500000 [00:11<00:03, 33325.24it/s][A
2025-01-17T11:31:46.6412365Z 
2025-01-17T11:31:46.6412770Z Packets:   ████████████████████████████████████████████████████████████████                400139/500000 [00:11<00:02, 33545.15it/s][A
2025-01-17T11:31:46.6412774Z 
2025-01-17T11:31:46.6413077Z Packets:   ████████████████████████████████████████████████████████████████▌               403499/500000 [00:11<00:02, 33542.85it/s][A
2025-01-17T11:31:46.6413080Z 
2025-01-17T11:31:46.6413378Z Packets:   █████████████████████████████████████████████████████████████████               406907/500000 [00:12<00:02, 33702.51it/s][A
2025-01-17T11:31:46.6413382Z 
2025-01-17T11:31:46.6413681Z Packets:   █████████████████████████████████████████████████████████████████▋              410321/500000 [00:12<00:02, 33826.88it/s][A
2025-01-17T11:31:46.6413685Z 
2025-01-17T11:31:46.6413992Z Packets:   ██████████████████████████████████████████████████████████████████▏             413706/500000 [00:12<00:02, 33755.44it/s][A
2025-01-17T11:31:46.6414016Z 
2025-01-17T11:31:46.6414439Z Packets:   ██████████████████████████████████████████████████████████████████▋             417119/500000 [00:12<00:02, 33862.68it/s][A
2025-01-17T11:31:46.6414443Z 
2025-01-17T11:31:46.6414750Z Packets:   ███████████████████████████████████████████████████████████████████▎            420542/500000 [00:12<00:02, 33971.57it/s][A
2025-01-17T11:31:46.6414754Z 
2025-01-17T11:31:46.6415056Z Packets:   ███████████████████████████████████████████████████████████████████▊            423940/500000 [00:12<00:02, 32912.95it/s][A
2025-01-17T11:31:46.6415059Z 
2025-01-17T11:31:46.6415360Z Packets:   ████████████████████████████████████████████████████████████████████▎           427310/500000 [00:12<00:02, 33143.45it/s][A
2025-01-17T11:31:46.6415364Z 
2025-01-17T11:31:46.6415670Z Packets:   ████████████████████████████████████████████████████████████████████▉           430695/500000 [00:12<00:02, 33348.21it/s][A
2025-01-17T11:31:46.6415692Z 
2025-01-17T11:31:46.6416120Z Packets:   █████████████████████████████████████████████████████████████████████▍          434147/500000 [00:12<00:01, 33695.33it/s][A
2025-01-17T11:31:46.6416128Z 
2025-01-17T11:31:46.6416718Z Packets:   ██████████████████████████████████████████████████████████████████████          437560/500000 [00:12<00:01, 33820.61it/s][A
2025-01-17T11:31:46.6416726Z 
2025-01-17T11:31:46.6417291Z Packets:   ██████████████████████████████████████████████████████████████████████▌         440945/500000 [00:13<00:01, 33817.94it/s][A
2025-01-17T11:31:46.6417298Z 
2025-01-17T11:31:46.6417784Z Packets:   ███████████████████████████████████████████████████████████████████████         444329/500000 [00:13<00:01, 33662.46it/s][A
2025-01-17T11:31:46.6417790Z 
2025-01-17T11:31:46.6418100Z Packets:   ███████████████████████████████████████████████████████████████████████▋        447697/500000 [00:13<00:01, 33616.05it/s][A
2025-01-17T11:31:46.6418107Z 
2025-01-17T11:31:46.6418528Z Packets:   ████████████████████████████████████████████████████████████████████████▏       451127/500000 [00:13<00:01, 33819.45it/s][A
2025-01-17T11:31:46.6418671Z 
2025-01-17T11:31:46.6418991Z Packets:   ████████████████████████████████████████████████████████████████████████▋       454573/500000 [00:13<00:01, 34009.25it/s][A
2025-01-17T11:31:46.6418996Z 
2025-01-17T11:31:46.6419303Z Packets:   █████████████████████████████████████████████████████████████████████████▎      457975/500000 [00:13<00:01, 32866.73it/s][A
2025-01-17T11:31:46.6419307Z 
2025-01-17T11:31:46.6419616Z Packets:   █████████████████████████████████████████████████████████████████████████▊      461317/500000 [00:13<00:01, 33026.84it/s][A
2025-01-17T11:31:46.6419620Z 
2025-01-17T11:31:46.6419932Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     464701/500000 [00:13<00:01, 33264.19it/s][A
2025-01-17T11:31:46.6419936Z 
2025-01-17T11:31:46.6420242Z Packets:   ██████████████████████████████████████████████████████████████████████████▉     468086/500000 [00:13<00:00, 33436.48it/s][A
2025-01-17T11:31:46.6420267Z 
2025-01-17T11:31:46.6420594Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    471505/500000 [00:13<00:00, 33660.26it/s][A
2025-01-17T11:31:46.6420598Z 
2025-01-17T11:31:46.6420941Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    474911/500000 [00:14<00:00, 33778.71it/s][A
2025-01-17T11:31:46.6420949Z 
2025-01-17T11:31:46.6421259Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478291/500000 [00:14<00:00, 33686.04it/s][A
2025-01-17T11:31:46.6421264Z 
2025-01-17T11:31:46.6421573Z Packets:   █████████████████████████████████████████████████████████████████████████████   481731/500000 [00:14<00:00, 33898.64it/s][A
2025-01-17T11:31:46.6421577Z 
2025-01-17T11:31:46.6421886Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  485122/500000 [00:14<00:00, 33571.91it/s][A
2025-01-17T11:31:46.6421991Z 
2025-01-17T11:31:46.6422397Z Packets:   ██████████████████████████████████████████████████████████████████████████████▏ 488503/500000 [00:14<00:00, 33642.17it/s][A
2025-01-17T11:31:46.6422402Z 
2025-01-17T11:31:46.6422817Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 491869/500000 [00:14<00:00, 32822.17it/s][A
2025-01-17T11:31:46.6422821Z 
2025-01-17T11:31:46.6423142Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏495213/500000 [00:14<00:00, 33001.38it/s][A
2025-01-17T11:31:46.6423146Z 
2025-01-17T11:31:46.6423458Z Packets:   ███████████████████████████████████████████████████████████████████████████████▊498635/500000 [00:14<00:00, 33358.27it/s][A
2025-01-17T11:31:46.6423603Z Iterations:                                                                                17/? [06:28<00:00,  9.55s/it]
2025-01-17T11:31:46.6423606Z 
2025-01-17T11:31:46.6423960Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 33358.27it/s][A
2025-01-17T11:31:46.6424117Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6424270Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-17T11:31:46.6424606Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-17T11:31:46.6424978Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-17T11:31:46.6425400Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-17T11:31:46.6425885Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6426109Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6426213Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6426295Z 	Starting iteration 1 of 5
2025-01-17T11:31:46.6426391Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6426479Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-17T11:31:46.6426562Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-17T11:31:46.6426646Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6426650Z 
2025-01-17T11:31:46.6426744Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6426827Z 	Plasma stratification:
2025-01-17T11:31:46.6426926Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6427033Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-17T11:31:46.6427114Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-17T11:31:46.6427191Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-17T11:31:46.6427388Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-17T11:31:46.6427578Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-17T11:31:46.6427582Z 
2025-01-17T11:31:46.6427681Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6427762Z 	Current t_inner = 9974.969 K
2025-01-17T11:31:46.6427874Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-17T11:31:46.6427878Z 
2025-01-17T11:31:46.6427974Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6428051Z 	Starting iteration 2 of 5
2025-01-17T11:31:46.6428147Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6428229Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-17T11:31:46.6428312Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-17T11:31:46.6428394Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6428398Z 
2025-01-17T11:31:46.6428491Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6428570Z 	Plasma stratification:
2025-01-17T11:31:46.6428670Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6428777Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6428854Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-17T11:31:46.6428931Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-17T11:31:46.6429008Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-17T11:31:46.6429084Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-17T11:31:46.6429088Z 
2025-01-17T11:31:46.6429182Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6429262Z 	Current t_inner = 10736.784 K
2025-01-17T11:31:46.6429368Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-17T11:31:46.6429372Z 
2025-01-17T11:31:46.6429469Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6429545Z 	Starting iteration 3 of 5
2025-01-17T11:31:46.6429642Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6429723Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-17T11:31:46.6429812Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-17T11:31:46.6429896Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6429900Z 
2025-01-17T11:31:46.6430112Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-17T11:31:46.6430211Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6430289Z 	Plasma stratification:
2025-01-17T11:31:46.6430383Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6430479Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6430555Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-17T11:31:46.6430631Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-17T11:31:46.6430708Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-17T11:31:46.6430781Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-17T11:31:46.6430785Z 
2025-01-17T11:31:46.6430883Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6430958Z 	Current t_inner = 10718.886 K
2025-01-17T11:31:46.6431072Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-17T11:31:46.6431075Z 
2025-01-17T11:31:46.6431173Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6431252Z 	Starting iteration 4 of 5
2025-01-17T11:31:46.6431347Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6431432Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-17T11:31:46.6431514Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-17T11:31:46.6431598Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6431602Z 
2025-01-17T11:31:46.6431810Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-17T11:31:46.6431990Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6432126Z 	Plasma stratification:
2025-01-17T11:31:46.6432303Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6432477Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6432740Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-17T11:31:46.6433044Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-17T11:31:46.6433310Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-17T11:31:46.6433448Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-17T11:31:46.6433454Z 
2025-01-17T11:31:46.6433598Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6433676Z 	Current t_inner = 10695.170 K
2025-01-17T11:31:46.6433785Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-17T11:31:46.6433789Z 
2025-01-17T11:31:46.6433883Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6433971Z 	Simulation finished in 4 iterations 
2025-01-17T11:31:46.6434047Z 	Simulation took 13.14 s
2025-01-17T11:31:46.6434050Z 
2025-01-17T11:31:46.6434148Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6434225Z 	Starting iteration 5 of 5
2025-01-17T11:31:46.6434318Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6434405Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-17T11:31:46.6434497Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-17T11:31:46.6434591Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6434759Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-17T11:31:46.6434764Z 
2025-01-17T11:31:46.6434970Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f817e6380b0>
2025-01-17T11:31:46.6435157Z simulation = <tardis.simulation.base.Simulation object at 0x7f81481b7b30>
2025-01-17T11:31:46.6435161Z 
2025-01-17T11:31:46.6435253Z     def test_spectrum(self, simulation):
2025-01-17T11:31:46.6435416Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:31:46.6435511Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6435573Z     
2025-01-17T11:31:46.6435675Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6435737Z     
2025-01-17T11:31:46.6435820Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6435977Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-17T11:31:46.6436055Z             luminosity,
2025-01-17T11:31:46.6436122Z         )
2025-01-17T11:31:46.6436126Z 
2025-01-17T11:31:46.6436214Z tardis/tests/test_tardis_full.py:81: 
2025-01-17T11:31:46.6436324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6436656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6436738Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6436842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6436846Z 
2025-01-17T11:31:46.6437307Z args = (<function assert_allclose.<locals>.compare at 0x7f8170a76d40>, array([1.47106443e+39, 1.69486782e+39, 1.38661095e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-01-17T11:31:46.6437411Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6437665Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6437670Z 
2025-01-17T11:31:46.6437742Z     @wraps(func)
2025-01-17T11:31:46.6437817Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6437897Z         with self._recreate_cm():
2025-01-17T11:31:46.6437977Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6438057Z E           AssertionError: 
2025-01-17T11:31:46.6438158Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6438224Z E           
2025-01-17T11:31:46.6438319Z E           Mismatched elements: 4766 / 10000 (47.7%)
2025-01-17T11:31:46.6438452Z E           Max absolute difference among violations: 8.7789614e+38
2025-01-17T11:31:46.6438576Z E           Max relative difference among violations: 6.15158527
2025-01-17T11:31:46.6438739Z E            ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6438821Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6439168Z E            DESIRED: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6439252Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6439256Z 
2025-01-17T11:31:46.6439452Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6439628Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-17T11:31:46.6439631Z 
2025-01-17T11:31:46.6439835Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f817e6382f0>
2025-01-17T11:31:46.6440021Z simulation = <tardis.simulation.base.Simulation object at 0x7f81481b7b30>
2025-01-17T11:31:46.6440025Z 
2025-01-17T11:31:46.6440126Z     def test_virtual_spectrum(self, simulation):
2025-01-17T11:31:46.6440299Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-17T11:31:46.6440391Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6440461Z     
2025-01-17T11:31:46.6440560Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6440629Z     
2025-01-17T11:31:46.6440709Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6440876Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-17T11:31:46.6440945Z             luminosity,
2025-01-17T11:31:46.6441008Z         )
2025-01-17T11:31:46.6441013Z 
2025-01-17T11:31:46.6441099Z tardis/tests/test_tardis_full.py:92: 
2025-01-17T11:31:46.6441201Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6441524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6441608Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6441706Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6441710Z 
2025-01-17T11:31:46.6442168Z args = (<function assert_allclose.<locals>.compare at 0x7f811a473060>, array([1.43474324e+39, 1.36762963e+39, 1.39613134e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-01-17T11:31:46.6442268Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6442512Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6442515Z 
2025-01-17T11:31:46.6442777Z     @wraps(func)
2025-01-17T11:31:46.6442879Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6442959Z         with self._recreate_cm():
2025-01-17T11:31:46.6443042Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6443119Z E           AssertionError: 
2025-01-17T11:31:46.6443217Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6443284Z E           
2025-01-17T11:31:46.6443373Z E           Mismatched elements: 5913 / 10000 (59.1%)
2025-01-17T11:31:46.6443506Z E           Max absolute difference among violations: 3.37212146e+38
2025-01-17T11:31:46.6443636Z E           Max relative difference among violations: 18356.9353581
2025-01-17T11:31:46.6443807Z E            ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6443886Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6444046Z E            DESIRED: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6444122Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6444126Z 
2025-01-17T11:31:46.6444319Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6444548Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-17T11:31:46.6444552Z 
2025-01-17T11:31:46.6444868Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e638c50>
2025-01-17T11:31:46.6445050Z simulation = <tardis.simulation.base.Simulation object at 0x7f8169afbc80>
2025-01-17T11:31:46.6445370Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-17T11:31:46.6445476Z 
2025-01-17T11:31:46.6445602Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6445703Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6445780Z         j_blue_estimator = (
2025-01-17T11:31:46.6445987Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6446051Z         )
2025-01-17T11:31:46.6446189Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6446298Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6446302Z 
2025-01-17T11:31:46.6446429Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6446533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6446537Z 
2025-01-17T11:31:46.6446790Z args = (<function assert_allclose.<locals>.compare at 0x7f8169959d00>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6446863Z        [0., 0., .....,
2025-01-17T11:31:46.6446943Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6447013Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6447087Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6447327Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6447331Z 
2025-01-17T11:31:46.6447400Z     @wraps(func)
2025-01-17T11:31:46.6447475Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6447554Z         with self._recreate_cm():
2025-01-17T11:31:46.6447636Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6447715Z E           AssertionError: 
2025-01-17T11:31:46.6447812Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6447882Z E           
2025-01-17T11:31:46.6447982Z E           Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.6448111Z E           Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.6448245Z E           Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.6448342Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448424Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448507Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6448605Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448681Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448761Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6448765Z 
2025-01-17T11:31:46.6448952Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6449164Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-17T11:31:46.6449167Z 
2025-01-17T11:31:46.6449474Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639280>
2025-01-17T11:31:46.6449668Z simulation = <tardis.simulation.base.Simulation object at 0x7f8169afbc80>
2025-01-17T11:31:46.6449834Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-17T11:31:46.6449839Z 
2025-01-17T11:31:46.6449941Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6450034Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6450220Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6450370Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6450464Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6450573Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6450576Z 
2025-01-17T11:31:46.6450701Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6450802Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6451291Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6451375Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6451475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6451479Z 
2025-01-17T11:31:46.6451931Z args = (<function assert_allclose.<locals>.compare at 0x7f811a472fc0>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-01-17T11:31:46.6452029Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6452266Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6452270Z 
2025-01-17T11:31:46.6452342Z     @wraps(func)
2025-01-17T11:31:46.6452418Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6452498Z         with self._recreate_cm():
2025-01-17T11:31:46.6452683Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6452769Z E           AssertionError: 
2025-01-17T11:31:46.6452866Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6452934Z E           
2025-01-17T11:31:46.6453024Z E           Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.6453152Z E           Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.6453268Z E           Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.6453429Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6453506Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6453665Z E            DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6453740Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6453744Z 
2025-01-17T11:31:46.6453934Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6454165Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-17T11:31:46.6454169Z 
2025-01-17T11:31:46.6454483Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639a00>
2025-01-17T11:31:46.6454664Z simulation = <tardis.simulation.base.Simulation object at 0x7f8169afbc80>
2025-01-17T11:31:46.6454860Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-17T11:31:46.6454864Z 
2025-01-17T11:31:46.6454994Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6455092Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6455270Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6455422Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6455517Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6455633Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6455640Z 
2025-01-17T11:31:46.6455766Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6455867Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6456192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6456275Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6456378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6456382Z 
2025-01-17T11:31:46.6456837Z args = (<function assert_allclose.<locals>.compare at 0x7f811a470d60>, array([1.54239369e+39, 1.54471048e+39, 1.53959524e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-01-17T11:31:46.6456932Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-01-17T11:31:46.6457184Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6457307Z 
2025-01-17T11:31:46.6457477Z     @wraps(func)
2025-01-17T11:31:46.6457558Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6457635Z         with self._recreate_cm():
2025-01-17T11:31:46.6457714Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6457791Z E           AssertionError: 
2025-01-17T11:31:46.6457889Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6457960Z E           
2025-01-17T11:31:46.6458050Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6458180Z E           Max absolute difference among violations: 5.54140241e+37
2025-01-17T11:31:46.6458304Z E           Max relative difference among violations: 156.87686073
2025-01-17T11:31:46.6458467Z E            ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-17T11:31:46.6458546Z E                  2.268272e+31, 2.225999e+31])
2025-01-17T11:31:46.6458710Z E            DESIRED: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-17T11:31:46.6458798Z E                  2.292907e+31, 2.257206e+31])
2025-01-17T11:31:46.6458801Z 
2025-01-17T11:31:46.6458994Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6459141Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6459144Z 
2025-01-17T11:31:46.6459148Z 
2025-01-17T11:31:46.6459522Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 108884.86it/s][A
2025-01-17T11:31:46.6459739Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-17T11:31:46.6459743Z 
2025-01-17T11:31:46.6460056Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639460>
2025-01-17T11:31:46.6460241Z simulation = <tardis.simulation.base.Simulation object at 0x7f815310a000>
2025-01-17T11:31:46.6460440Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-17T11:31:46.6460454Z 
2025-01-17T11:31:46.6460574Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6460676Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6460749Z         j_blue_estimator = (
2025-01-17T11:31:46.6460957Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6461023Z         )
2025-01-17T11:31:46.6461160Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6461270Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6461274Z 
2025-01-17T11:31:46.6461400Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6461501Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6461505Z 
2025-01-17T11:31:46.6461762Z args = (<function assert_allclose.<locals>.compare at 0x7f814f592660>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6461834Z        [0., 0., .....,
2025-01-17T11:31:46.6461913Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6461981Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6462052Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6462294Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6462298Z 
2025-01-17T11:31:46.6462369Z     @wraps(func)
2025-01-17T11:31:46.6462443Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6462523Z         with self._recreate_cm():
2025-01-17T11:31:46.6462703Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6462784Z E           AssertionError: 
2025-01-17T11:31:46.6462882Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6462946Z E           
2025-01-17T11:31:46.6463046Z E           Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.6463359Z E           Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.6463583Z E           Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.6463682Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6463762Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6463841Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6463941Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6464015Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6464095Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6464099Z 
2025-01-17T11:31:46.6464315Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6464526Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-17T11:31:46.6464529Z 
2025-01-17T11:31:46.6464838Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639bb0>
2025-01-17T11:31:46.6465060Z simulation = <tardis.simulation.base.Simulation object at 0x7f815310a000>
2025-01-17T11:31:46.6465223Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-17T11:31:46.6465227Z 
2025-01-17T11:31:46.6465328Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6465422Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6465604Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6465749Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6465843Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6465953Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6465956Z 
2025-01-17T11:31:46.6466080Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6466182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6466510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6466593Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6466692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6466695Z 
2025-01-17T11:31:46.6467153Z args = (<function assert_allclose.<locals>.compare at 0x7f8169a00680>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-01-17T11:31:46.6467253Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6467498Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6467502Z 
2025-01-17T11:31:46.6467573Z     @wraps(func)
2025-01-17T11:31:46.6467648Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6467729Z         with self._recreate_cm():
2025-01-17T11:31:46.6467813Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6467893Z E           AssertionError: 
2025-01-17T11:31:46.6467988Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6468054Z E           
2025-01-17T11:31:46.6468145Z E           Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.6468274Z E           Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.6468395Z E           Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.6468560Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6468643Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6468811Z E            DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6468888Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6468892Z 
2025-01-17T11:31:46.6469084Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6469462Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-17T11:31:46.6469467Z 
2025-01-17T11:31:46.6469782Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e63a1e0>
2025-01-17T11:31:46.6469963Z simulation = <tardis.simulation.base.Simulation object at 0x7f815310a000>
2025-01-17T11:31:46.6470154Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-17T11:31:46.6470158Z 
2025-01-17T11:31:46.6470286Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6470395Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6470575Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6470725Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6470818Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6470935Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6470943Z 
2025-01-17T11:31:46.6471070Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6471171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6471498Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6471581Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6471681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6471685Z 
2025-01-17T11:31:46.6472137Z args = (<function assert_allclose.<locals>.compare at 0x7f8177f7d940>, array([1.54231806e+39, 1.55225124e+39, 1.54284817e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-01-17T11:31:46.6472236Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-01-17T11:31:46.6472480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6472494Z 
2025-01-17T11:31:46.6472669Z     @wraps(func)
2025-01-17T11:31:46.6472749Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6472835Z         with self._recreate_cm():
2025-01-17T11:31:46.6472914Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6472992Z E           AssertionError: 
2025-01-17T11:31:46.6473086Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6473152Z E           
2025-01-17T11:31:46.6473242Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6473374Z E           Max absolute difference among violations: 6.24012248e+37
2025-01-17T11:31:46.6473493Z E           Max relative difference among violations: 1.92154885
2025-01-17T11:31:46.6473657Z E            ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-17T11:31:46.6473735Z E                  1.315549e+31, 1.281291e+31])
2025-01-17T11:31:46.6473898Z E            DESIRED: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-17T11:31:46.6473983Z E                  1.375141e+31, 1.337928e+31])
2025-01-17T11:31:46.6473987Z 
2025-01-17T11:31:46.6474180Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6474394Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-17T11:31:46.6474398Z 
2025-01-17T11:31:46.6474709Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639700>
2025-01-17T11:31:46.6474890Z simulation = <tardis.simulation.base.Simulation object at 0x7f81783cdb50>
2025-01-17T11:31:46.6475075Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-17T11:31:46.6475078Z 
2025-01-17T11:31:46.6475196Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6475295Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6475369Z         j_blue_estimator = (
2025-01-17T11:31:46.6475800Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6475869Z         )
2025-01-17T11:31:46.6476009Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6476120Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6476124Z 
2025-01-17T11:31:46.6476247Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6476348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6476351Z 
2025-01-17T11:31:46.6476606Z args = (<function assert_allclose.<locals>.compare at 0x7f8170a3ade0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6476671Z        [0., 0., .....,
2025-01-17T11:31:46.6476748Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6476818Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6476889Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6477133Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6477137Z 
2025-01-17T11:31:46.6477208Z     @wraps(func)
2025-01-17T11:31:46.6477285Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6477364Z         with self._recreate_cm():
2025-01-17T11:31:46.6477443Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6477517Z E           AssertionError: 
2025-01-17T11:31:46.6477615Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6477691Z E           
2025-01-17T11:31:46.6477878Z E           Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.6478108Z E           Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.6478319Z E           Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.6478481Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6478614Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6478751Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6478924Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6479055Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6479194Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6479201Z 
2025-01-17T11:31:46.6479528Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6479902Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-17T11:31:46.6479909Z 
2025-01-17T11:31:46.6480461Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639df0>
2025-01-17T11:31:46.6480779Z simulation = <tardis.simulation.base.Simulation object at 0x7f81783cdb50>
2025-01-17T11:31:46.6481061Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-17T11:31:46.6481068Z 
2025-01-17T11:31:46.6481247Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6481424Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6481753Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6482009Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6482174Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6482358Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6482365Z 
2025-01-17T11:31:46.6482722Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6482909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6483511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6483640Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6483804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6483986Z 
2025-01-17T11:31:46.6484856Z args = (<function assert_allclose.<locals>.compare at 0x7f813bbcb920>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-01-17T11:31:46.6485016Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6485406Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6485413Z 
2025-01-17T11:31:46.6485526Z     @wraps(func)
2025-01-17T11:31:46.6485642Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6485769Z         with self._recreate_cm():
2025-01-17T11:31:46.6485891Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6486012Z E           AssertionError: 
2025-01-17T11:31:46.6486161Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6486266Z E           
2025-01-17T11:31:46.6486415Z E           Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.6486664Z E           Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.6486876Z E           Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.6487151Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6487292Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6487508Z E            DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6487594Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6487598Z 
2025-01-17T11:31:46.6487797Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6488023Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-17T11:31:46.6488027Z 
2025-01-17T11:31:46.6488347Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e63a3f0>
2025-01-17T11:31:46.6488546Z simulation = <tardis.simulation.base.Simulation object at 0x7f81783cdb50>
2025-01-17T11:31:46.6488752Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-17T11:31:46.6488761Z 
2025-01-17T11:31:46.6488894Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6488998Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6489185Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6489339Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6489441Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6489553Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6489557Z 
2025-01-17T11:31:46.6489686Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6489790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6490125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6490220Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6490333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6490337Z 
2025-01-17T11:31:46.6490794Z args = (<function assert_allclose.<locals>.compare at 0x7f8151dd3560>, array([1.54085030e+39, 1.54785895e+39, 1.54018958e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-01-17T11:31:46.6490897Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-01-17T11:31:46.6491149Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6491157Z 
2025-01-17T11:31:46.6491227Z     @wraps(func)
2025-01-17T11:31:46.6491304Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6491387Z         with self._recreate_cm():
2025-01-17T11:31:46.6491467Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6491668Z E           AssertionError: 
2025-01-17T11:31:46.6491848Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6491918Z E           
2025-01-17T11:31:46.6492010Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6492147Z E           Max absolute difference among violations: 5.47728087e+37
2025-01-17T11:31:46.6492269Z E           Max relative difference among violations: 2.00828984
2025-01-17T11:31:46.6492494Z E            ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-17T11:31:46.6492761Z E                  1.146857e+31, 1.117191e+31])
2025-01-17T11:31:46.6493057Z E            DESIRED: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-17T11:31:46.6493185Z E                  1.193005e+31, 1.164854e+31])
2025-01-17T11:31:46.6493190Z 
2025-01-17T11:31:46.6493522Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6493850Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-17T11:31:46.6493855Z 
2025-01-17T11:31:46.6494180Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639640>
2025-01-17T11:31:46.6494368Z simulation = <tardis.simulation.base.Simulation object at 0x7f811a7c39b0>
2025-01-17T11:31:46.6494560Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-17T11:31:46.6494565Z 
2025-01-17T11:31:46.6494690Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6494795Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6494874Z         j_blue_estimator = (
2025-01-17T11:31:46.6495084Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6495150Z         )
2025-01-17T11:31:46.6495291Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6495407Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6495416Z 
2025-01-17T11:31:46.6495549Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6495654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6495658Z 
2025-01-17T11:31:46.6495917Z args = (<function assert_allclose.<locals>.compare at 0x7f814ef78ae0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6495985Z        [0., 0., .....,
2025-01-17T11:31:46.6496061Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6496130Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6496206Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6496454Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6496458Z 
2025-01-17T11:31:46.6496531Z     @wraps(func)
2025-01-17T11:31:46.6496610Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6496689Z         with self._recreate_cm():
2025-01-17T11:31:46.6496777Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6496859Z E           AssertionError: 
2025-01-17T11:31:46.6496964Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6497029Z E           
2025-01-17T11:31:46.6497133Z E           Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.6497264Z E           Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.6497388Z E           Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.6497485Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497569Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497650Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6497750Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497826Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497909Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6498047Z 
2025-01-17T11:31:46.6498340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6498555Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-17T11:31:46.6498559Z 
2025-01-17T11:31:46.6499099Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639d30>
2025-01-17T11:31:46.6499428Z simulation = <tardis.simulation.base.Simulation object at 0x7f811a7c39b0>
2025-01-17T11:31:46.6499713Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-17T11:31:46.6499719Z 
2025-01-17T11:31:46.6499897Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6499999Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6500202Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6500353Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6500456Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6500572Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6500576Z 
2025-01-17T11:31:46.6500705Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6500810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6501141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6501226Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6501332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6501335Z 
2025-01-17T11:31:46.6501790Z args = (<function assert_allclose.<locals>.compare at 0x7f8169a034c0>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-01-17T11:31:46.6501891Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6502146Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6502150Z 
2025-01-17T11:31:46.6502221Z     @wraps(func)
2025-01-17T11:31:46.6502300Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6502385Z         with self._recreate_cm():
2025-01-17T11:31:46.6502467Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6502729Z E           AssertionError: 
2025-01-17T11:31:46.6502843Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6502911Z E           
2025-01-17T11:31:46.6503005Z E           Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.6503136Z E           Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.6503260Z E           Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.6503422Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6503515Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6503682Z E            DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6503763Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6503767Z 
2025-01-17T11:31:46.6503956Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6504181Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-17T11:31:46.6504184Z 
2025-01-17T11:31:46.6504498Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e63a330>
2025-01-17T11:31:46.6504687Z simulation = <tardis.simulation.base.Simulation object at 0x7f811a7c39b0>
2025-01-17T11:31:46.6504884Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-17T11:31:46.6504889Z 
2025-01-17T11:31:46.6505022Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6505263Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6505552Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6505706Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6505806Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6505916Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6505920Z 
2025-01-17T11:31:46.6506048Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6506150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6506474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6506557Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6506661Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6506665Z 
2025-01-17T11:31:46.6507128Z args = (<function assert_allclose.<locals>.compare at 0x7f812bbd0680>, array([1.54088344e+39, 1.54038935e+39, 1.53613853e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-01-17T11:31:46.6507231Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-01-17T11:31:46.6507476Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6507480Z 
2025-01-17T11:31:46.6507559Z     @wraps(func)
2025-01-17T11:31:46.6507636Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6507722Z         with self._recreate_cm():
2025-01-17T11:31:46.6507803Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6507885Z E           AssertionError: 
2025-01-17T11:31:46.6507982Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6508053Z E           
2025-01-17T11:31:46.6508144Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6508276Z E           Max absolute difference among violations: 5.25781438e+37
2025-01-17T11:31:46.6508407Z E           Max relative difference among violations: 18.28099979
2025-01-17T11:31:46.6508569Z E            ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-17T11:31:46.6508650Z E                  2.087889e+31, 2.059957e+31])
2025-01-17T11:31:46.6508814Z E            DESIRED: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-17T11:31:46.6508892Z E                  2.124305e+31, 2.101081e+31])
2025-01-17T11:31:46.6508896Z 
2025-01-17T11:31:46.6509090Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6509231Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-17T11:31:46.6509234Z 
2025-01-17T11:31:46.6510209Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:31:46.6510684Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f817e6b5280>
2025-01-17T11:31:46.6511095Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:31:46.6511101Z 
2025-01-17T11:31:46.6511189Z     def test_montecarlo_main_loop(
2025-01-17T11:31:46.6511281Z         montecarlo_main_loop_config,
2025-01-17T11:31:46.6511355Z         regression_data,
2025-01-17T11:31:46.6511429Z         atomic_dataset,
2025-01-17T11:31:46.6511494Z     ):
2025-01-17T11:31:46.6511600Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:31:46.6511742Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-17T11:31:46.6511833Z             montecarlo_main_loop_config,
2025-01-17T11:31:46.6511914Z             atom_data=atomic_dataset,
2025-01-17T11:31:46.6511999Z             virtual_packet_logging=False,
2025-01-17T11:31:46.6512187Z             legacy_mode_enabled=True,
2025-01-17T11:31:46.6512345Z         )
2025-01-17T11:31:46.6512473Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-17T11:31:46.6512768Z         montecarlo_main_loop_simulation.run_final()
2025-01-17T11:31:46.6512844Z     
2025-01-17T11:31:46.6512975Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-17T11:31:46.6513070Z             montecarlo_main_loop_simulation
2025-01-17T11:31:46.6513134Z         )
2025-01-17T11:31:46.6513200Z     
2025-01-17T11:31:46.6513286Z         # Load compare data from refdata
2025-01-17T11:31:46.6513353Z     
2025-01-17T11:31:46.6513437Z         expected_nu = expected_hdf_store[
2025-01-17T11:31:46.6513563Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:31:46.6513628Z         ]
2025-01-17T11:31:46.6513720Z         expected_energy = expected_hdf_store[
2025-01-17T11:31:46.6513943Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:31:46.6514072Z         ]
2025-01-17T11:31:46.6514275Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:31:46.6514504Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:31:46.6514613Z         ]
2025-01-17T11:31:46.6514777Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:31:46.6514979Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:31:46.6515048Z         ]
2025-01-17T11:31:46.6515142Z         expected_hdf_store.close()
2025-01-17T11:31:46.6515342Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-17T11:31:46.6515512Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:31:46.6515647Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:31:46.6515741Z         actual_nu_bar_estimator = (
2025-01-17T11:31:46.6515880Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-17T11:31:46.6515954Z         )
2025-01-17T11:31:46.6516130Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-17T11:31:46.6516196Z     
2025-01-17T11:31:46.6516264Z         # Compare
2025-01-17T11:31:46.6516350Z >       npt.assert_allclose(
2025-01-17T11:31:46.6516497Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-17T11:31:46.6516560Z         )
2025-01-17T11:31:46.6516568Z 
2025-01-17T11:31:46.6516746Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-17T11:31:46.6516853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6516860Z 
2025-01-17T11:31:46.6517289Z args = (<function assert_allclose.<locals>.compare at 0x7f814ee577e0>, array([9.40448351e+28, 8.06019278e+28, 7.19997537e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-01-17T11:31:46.6517423Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-01-17T11:31:46.6517695Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6517705Z 
2025-01-17T11:31:46.6517832Z     @wraps(func)
2025-01-17T11:31:46.6517971Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6518109Z         with self._recreate_cm():
2025-01-17T11:31:46.6518242Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6518369Z E           AssertionError: 
2025-01-17T11:31:46.6518536Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-17T11:31:46.6518644Z E           
2025-01-17T11:31:46.6518801Z E           Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.6518959Z E           Max absolute difference among violations: 6.13164664e+25
2025-01-17T11:31:46.6519085Z E           Max relative difference among violations: 0.00076015
2025-01-17T11:31:46.6519235Z E            ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-17T11:31:46.6519353Z E                  6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-17T11:31:46.6519723Z E                  4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-17T11:31:46.6519888Z E            DESIRED: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-17T11:31:46.6519995Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-17T11:31:46.6520111Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-17T11:31:46.6520115Z 
2025-01-17T11:31:46.6520309Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6520468Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:31:46.6520745Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6521220Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6521403Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6521614Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6521772Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6521841Z 	
2025-01-17T11:31:46.6521927Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6522007Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6522111Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6522267Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6522329Z 	
2025-01-17T11:31:46.6522474Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6522833Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6522900Z 	
2025-01-17T11:31:46.6522993Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6523077Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6523164Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6523268Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6523424Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6523433Z 
2025-01-17T11:31:46.6523437Z 
2025-01-17T11:31:46.6523667Z Packets:                                                                                   10748/? [00:10<00:00, 1004.27it/s][A
2025-01-17T11:31:46.6523671Z 
2025-01-17T11:31:46.6523997Z Packets:                                                                                   21265/? [00:10<00:00, 2376.40it/s][A
2025-01-17T11:31:46.6524005Z 
2025-01-17T11:31:46.6524408Z Packets:                                                                                   32093/? [00:10<00:00, 4332.46it/s][A
2025-01-17T11:31:46.6524421Z 
2025-01-17T11:31:46.6524799Z Packets:                                                                                   42958/? [00:11<00:00, 7014.23it/s][A
2025-01-17T11:31:46.6524805Z 
2025-01-17T11:31:46.6525126Z Packets:                                                                                   53734/? [00:11<00:00, 10580.94it/s][A
2025-01-17T11:31:46.6525138Z 
2025-01-17T11:31:46.6525360Z Packets:                                                                                   64493/? [00:11<00:00, 15252.80it/s][A
2025-01-17T11:31:46.6525365Z 
2025-01-17T11:31:46.6525580Z Packets:                                                                                   75267/? [00:11<00:00, 21206.16it/s][A
2025-01-17T11:31:46.6525584Z 
2025-01-17T11:31:46.6525797Z Packets:                                                                                   86067/? [00:11<00:00, 28515.31it/s][A
2025-01-17T11:31:46.6525801Z 
2025-01-17T11:31:46.6526012Z Packets:                                                                                   96929/? [00:11<00:00, 37117.26it/s][A
2025-01-17T11:31:46.6526150Z Iterations:                                                                                40/? [08:09<00:00,  5.65s/it]
2025-01-17T11:31:46.6526154Z 
2025-01-17T11:31:46.6526516Z Packets:                                                                                   104009/? [00:11<00:00, 37117.26it/s][A
2025-01-17T11:31:46.6526765Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:31:46.6527259Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6527471Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6527578Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6527700Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6527841Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6527848Z 
2025-01-17T11:31:46.6528024Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6528160Z 	Starting iteration 1 of 1
2025-01-17T11:31:46.6528325Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6528472Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6528620Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6528775Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6528977Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-17T11:31:46.6528981Z 
2025-01-17T11:31:46.6529659Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:31:46.6529921Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814f5c7170>
2025-01-17T11:31:46.6530262Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:31:46.6530266Z 
2025-01-17T11:31:46.6530366Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-17T11:31:46.6530467Z         montecarlo_main_loop_config,
2025-01-17T11:31:46.6530540Z         regression_data,
2025-01-17T11:31:46.6530621Z         atomic_dataset,
2025-01-17T11:31:46.6530687Z     ):
2025-01-17T11:31:46.6530791Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:31:46.6530953Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-17T11:31:46.6531018Z     
2025-01-17T11:31:46.6531159Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-17T11:31:46.6531250Z             montecarlo_main_loop_config,
2025-01-17T11:31:46.6531329Z             atom_data=atomic_dataset,
2025-01-17T11:31:46.6531411Z             virtual_packet_logging=True,
2025-01-17T11:31:46.6531496Z             legacy_mode_enabled=True,
2025-01-17T11:31:46.6531560Z         )
2025-01-17T11:31:46.6531687Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-17T11:31:46.6531790Z         montecarlo_main_loop_simulation.run_final()
2025-01-17T11:31:46.6531859Z     
2025-01-17T11:31:46.6531992Z         transport = montecarlo_main_loop_simulation.transport
2025-01-17T11:31:46.6532066Z     
2025-01-17T11:31:46.6532257Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-17T11:31:46.6532326Z     
2025-01-17T11:31:46.6532446Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-17T11:31:46.6532649Z             montecarlo_main_loop_simulation
2025-01-17T11:31:46.6532718Z         )
2025-01-17T11:31:46.6532787Z     
2025-01-17T11:31:46.6532871Z         expected_nu = expected_hdf_store[
2025-01-17T11:31:46.6532993Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:31:46.6533055Z         ]
2025-01-17T11:31:46.6533145Z         expected_energy = expected_hdf_store[
2025-01-17T11:31:46.6533272Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:31:46.6533336Z         ]
2025-01-17T11:31:46.6533452Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:31:46.6533911Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:31:46.6534030Z         ]
2025-01-17T11:31:46.6534343Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:31:46.6534555Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:31:46.6534663Z         ]
2025-01-17T11:31:46.6534827Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-17T11:31:46.6534967Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-17T11:31:46.6535036Z         ]
2025-01-17T11:31:46.6535152Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-17T11:31:46.6535304Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-17T11:31:46.6535366Z         ]
2025-01-17T11:31:46.6535432Z     
2025-01-17T11:31:46.6535535Z         transport_state = transport.transport_state
2025-01-17T11:31:46.6535598Z     
2025-01-17T11:31:46.6535766Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:31:46.6535907Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:31:46.6536051Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-17T11:31:46.6536165Z         actual_j_estimator = transport_state.j_estimator
2025-01-17T11:31:46.6536314Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-17T11:31:46.6536480Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-17T11:31:46.6536547Z     
2025-01-17T11:31:46.6536629Z         expected_hdf_store.close()
2025-01-17T11:31:46.6536700Z         # Compare
2025-01-17T11:31:46.6536778Z >       npt.assert_allclose(
2025-01-17T11:31:46.6536859Z             actual_nu_bar_estimator,
2025-01-17T11:31:46.6536938Z             expected_nu_bar_estimator,
2025-01-17T11:31:46.6537013Z             rtol=1e-12,
2025-01-17T11:31:46.6537080Z             atol=1e-15,
2025-01-17T11:31:46.6537148Z         )
2025-01-17T11:31:46.6537152Z 
2025-01-17T11:31:46.6537331Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-17T11:31:46.6537452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6537456Z 
2025-01-17T11:31:46.6537882Z args = (<function assert_allclose.<locals>.compare at 0x7f8172eee3e0>, array([9.39632189e+28, 8.06452049e+28, 7.18754600e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-01-17T11:31:46.6538014Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-01-17T11:31:46.6538282Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-17T11:31:46.6538286Z 
2025-01-17T11:31:46.6538358Z     @wraps(func)
2025-01-17T11:31:46.6538434Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6538516Z         with self._recreate_cm():
2025-01-17T11:31:46.6538595Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6538672Z E           AssertionError: 
2025-01-17T11:31:46.6538789Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-17T11:31:46.6538857Z E           
2025-01-17T11:31:46.6538959Z E           Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.6539085Z E           Max absolute difference among violations: 2.36529423e+25
2025-01-17T11:31:46.6539244Z E           Max relative difference among violations: 0.00039195
2025-01-17T11:31:46.6539509Z E            ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-17T11:31:46.6539708Z E                  6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-17T11:31:46.6539904Z E                  4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-17T11:31:46.6540163Z E            DESIRED: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-17T11:31:46.6540350Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-17T11:31:46.6540493Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-17T11:31:46.6540596Z 
2025-01-17T11:31:46.6540895Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6541049Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:31:46.6541315Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6541756Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6541929Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6542137Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6542295Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6542362Z 	
2025-01-17T11:31:46.6542450Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6542672Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6542779Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6542938Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6543007Z 	
2025-01-17T11:31:46.6543164Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6543318Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6543380Z 	
2025-01-17T11:31:46.6543472Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-17T11:31:46.6543561Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-17T11:31:46.6543651Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6543748Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6543896Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6543900Z 
2025-01-17T11:31:46.6543904Z 
2025-01-17T11:31:46.6544132Z Packets:                                                                                   107731/? [00:14<00:00, 10312.05it/s][A
2025-01-17T11:31:46.6544137Z 
2025-01-17T11:31:46.6544358Z Packets:                                                                                   115279/? [00:14<00:00, 12372.86it/s][A
2025-01-17T11:31:46.6544368Z 
2025-01-17T11:31:46.6544585Z Packets:                                                                                   121584/? [00:14<00:00, 14413.51it/s][A
2025-01-17T11:31:46.6544593Z 
2025-01-17T11:31:46.6544806Z Packets:                                                                                   127027/? [00:14<00:00, 16422.41it/s][A
2025-01-17T11:31:46.6544810Z 
2025-01-17T11:31:46.6545233Z Packets:                                                                                   131845/? [00:14<00:00, 18500.71it/s][A
2025-01-17T11:31:46.6545241Z 
2025-01-17T11:31:46.6545635Z Packets:                                                                                   136261/? [00:15<00:00, 20617.21it/s][A
2025-01-17T11:31:46.6545641Z 
2025-01-17T11:31:46.6546033Z Packets:                                                                                   140402/? [00:15<00:00, 22751.16it/s][A
2025-01-17T11:31:46.6546043Z 
2025-01-17T11:31:46.6546302Z Packets:                                                                                   144359/? [00:15<00:00, 24824.76it/s][A
2025-01-17T11:31:46.6546307Z 
2025-01-17T11:31:46.6546525Z Packets:                                                                                   148186/? [00:15<00:00, 26784.14it/s][A
2025-01-17T11:31:46.6546529Z 
2025-01-17T11:31:46.6546744Z Packets:                                                                                   151926/? [00:15<00:00, 28513.44it/s][A
2025-01-17T11:31:46.6546747Z 
2025-01-17T11:31:46.6546963Z Packets:                                                                                   155598/? [00:15<00:00, 29945.57it/s][A
2025-01-17T11:31:46.6546967Z 
2025-01-17T11:31:46.6547182Z Packets:                                                                                   159214/? [00:15<00:00, 31267.57it/s][A
2025-01-17T11:31:46.6547186Z 
2025-01-17T11:31:46.6547399Z Packets:                                                                                   162810/? [00:15<00:00, 32132.90it/s][A
2025-01-17T11:31:46.6547545Z 
2025-01-17T11:31:46.6547869Z Packets:                                                                                   166368/? [00:15<00:00, 33033.14it/s][A
2025-01-17T11:31:46.6547874Z 
2025-01-17T11:31:46.6548094Z Packets:                                                                                   169925/? [00:16<00:00, 33556.37it/s][A
2025-01-17T11:31:46.6548098Z 
2025-01-17T11:31:46.6548315Z Packets:                                                                                   173463/? [00:16<00:00, 33705.03it/s][A
2025-01-17T11:31:46.6548319Z 
2025-01-17T11:31:46.6548536Z Packets:                                                                                   176964/? [00:16<00:00, 34072.36it/s][A
2025-01-17T11:31:46.6548540Z 
2025-01-17T11:31:46.6548759Z Packets:                                                                                   180463/? [00:16<00:00, 34239.52it/s][A
2025-01-17T11:31:46.6548769Z 
2025-01-17T11:31:46.6548989Z Packets:                                                                                   183952/? [00:16<00:00, 34374.73it/s][A
2025-01-17T11:31:46.6548992Z 
2025-01-17T11:31:46.6549215Z Packets:                                                                                   187436/? [00:16<00:00, 34446.80it/s][A
2025-01-17T11:31:46.6549218Z 
2025-01-17T11:31:46.6549441Z Packets:                                                                                   190950/? [00:16<00:00, 34643.95it/s][A
2025-01-17T11:31:46.6549445Z 
2025-01-17T11:31:46.6549662Z Packets:                                                                                   194455/? [00:16<00:00, 34763.96it/s][A
2025-01-17T11:31:46.6549666Z 
2025-01-17T11:31:46.6549886Z Packets:                                                                                   197948/? [00:16<00:00, 34666.20it/s][A
2025-01-17T11:31:46.6549889Z 
2025-01-17T11:31:46.6550102Z Packets:                                                                                   201463/? [00:16<00:00, 34809.36it/s][A
2025-01-17T11:31:46.6550260Z Iterations:                                                                                41/? [08:14<00:00,  5.60s/it]
2025-01-17T11:31:46.6550265Z 
2025-01-17T11:31:46.6550480Z Packets:                                                                                   204009/? [00:17<00:00, 34809.36it/s][A
2025-01-17T11:31:46.6550626Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:31:46.6551298Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6551671Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6551839Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6551989Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6552127Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6552134Z 
2025-01-17T11:31:46.6552251Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6552333Z 	Starting iteration 1 of 1
2025-01-17T11:31:46.6552435Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6552519Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-17T11:31:46.6552810Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-17T11:31:46.6552902Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6553053Z __________________________ test_boundary_interactions __________________________
2025-01-17T11:31:46.6553057Z 
2025-01-17T11:31:46.6553823Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f8188c756a0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f8178787190>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f81787840a0>])
2025-01-17T11:31:46.6554088Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814053c290>
2025-01-17T11:31:46.6554232Z 
2025-01-17T11:31:46.6554497Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-17T11:31:46.6554595Z         no_of_packets = len(rpacket_tracker)
2025-01-17T11:31:46.6554658Z     
2025-01-17T11:31:46.6554753Z         # Hard coding the number of columns
2025-01-17T11:31:46.6554901Z         # Based on the largest size of boundary_interaction array (60)
2025-01-17T11:31:46.6555083Z         obtained_boundary_interaction = np.full(
2025-01-17T11:31:46.6555226Z             (no_of_packets, 64),
2025-01-17T11:31:46.6555344Z             [-1],
2025-01-17T11:31:46.6555559Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-17T11:31:46.6555664Z         )
2025-01-17T11:31:46.6555773Z     
2025-01-17T11:31:46.6555949Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-17T11:31:46.6556110Z >           obtained_boundary_interaction[
2025-01-17T11:31:46.6556232Z                 i, : tracker.boundary_interaction.size
2025-01-17T11:31:46.6556334Z             ] = tracker.boundary_interaction
2025-01-17T11:31:46.6556543Z E           ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-17T11:31:46.6556548Z 
2025-01-17T11:31:46.6556753Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:147: ValueError
2025-01-17T11:31:46.6556909Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-17T11:31:46.6556913Z 
2025-01-17T11:31:46.6557583Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:31:46.6557843Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814057d310>
2025-01-17T11:31:46.6558184Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:31:46.6558758Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f817e5326c0>
2025-01-17T11:31:46.6558771Z 
2025-01-17T11:31:46.6558929Z     def test_montecarlo_main_loop_weighted(
2025-01-17T11:31:46.6559064Z         montecarlo_main_loop_config,
2025-01-17T11:31:46.6559190Z         regression_data,
2025-01-17T11:31:46.6559307Z         atomic_dataset,
2025-01-17T11:31:46.6559455Z         simple_weighted_packet_source,
2025-01-17T11:31:46.6559552Z     ):
2025-01-17T11:31:46.6559658Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:31:46.6559826Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-17T11:31:46.6559917Z             montecarlo_main_loop_config,
2025-01-17T11:31:46.6559997Z             atom_data=atomic_dataset,
2025-01-17T11:31:46.6560086Z             virtual_packet_logging=False,
2025-01-17T11:31:46.6560163Z             legacy_mode_enabled=True,
2025-01-17T11:31:46.6560239Z         )
2025-01-17T11:31:46.6560389Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-17T11:31:46.6560485Z             simple_weighted_packet_source
2025-01-17T11:31:46.6560548Z         )
2025-01-17T11:31:46.6560691Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-17T11:31:46.6560822Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-17T11:31:46.6560883Z     
2025-01-17T11:31:46.6560988Z         # Get the montecarlo simple regression data
2025-01-17T11:31:46.6561068Z         regression_data_dir = (
2025-01-17T11:31:46.6561241Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-17T11:31:46.6561376Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-17T11:31:46.6561446Z         )
2025-01-17T11:31:46.6561598Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-17T11:31:46.6561665Z     
2025-01-17T11:31:46.6561853Z         # Load compare data from refdata
2025-01-17T11:31:46.6561920Z     
2025-01-17T11:31:46.6562076Z         expected_nu = expected_hdf_store[
2025-01-17T11:31:46.6562203Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:31:46.6562267Z         ]
2025-01-17T11:31:46.6562361Z         expected_energy = expected_hdf_store[
2025-01-17T11:31:46.6562486Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:31:46.6562727Z         ]
2025-01-17T11:31:46.6562884Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:31:46.6563024Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:31:46.6563093Z         ]
2025-01-17T11:31:46.6563195Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:31:46.6563323Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:31:46.6563389Z         ]
2025-01-17T11:31:46.6563477Z         expected_hdf_store.close()
2025-01-17T11:31:46.6563555Z         transport_state = (
2025-01-17T11:31:46.6563744Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-17T11:31:46.6563809Z         )
2025-01-17T11:31:46.6564027Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:31:46.6564267Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:31:46.6564410Z         actual_nu_bar_estimator = (
2025-01-17T11:31:46.6564639Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-17T11:31:46.6564750Z         )
2025-01-17T11:31:46.6565050Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-17T11:31:46.6565162Z     
2025-01-17T11:31:46.6565232Z         # Compare
2025-01-17T11:31:46.6565313Z         npt.assert_allclose(
2025-01-17T11:31:46.6565460Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-17T11:31:46.6565524Z         )
2025-01-17T11:31:46.6565704Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-17T11:31:46.6565865Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-17T11:31:46.6565869Z 
2025-01-17T11:31:46.6566098Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-17T11:31:46.6566200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6566204Z 
2025-01-17T11:31:46.6566662Z args = (<function assert_allclose.<locals>.compare at 0x7f817872cfe0>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-17T11:31:46.6566764Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-17T11:31:46.6567016Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6567020Z 
2025-01-17T11:31:46.6567089Z     @wraps(func)
2025-01-17T11:31:46.6567169Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6567252Z         with self._recreate_cm():
2025-01-17T11:31:46.6567344Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6567422Z E           AssertionError: 
2025-01-17T11:31:46.6567524Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-17T11:31:46.6567592Z E           
2025-01-17T11:31:46.6567764Z E           Mismatched elements: 75 / 100000 (0.075%)
2025-01-17T11:31:46.6567994Z E           Max absolute difference among violations: 2.01554089e-05
2025-01-17T11:31:46.6568204Z E           Max relative difference among violations: 2.08104546
2025-01-17T11:31:46.6568495Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.6568638Z E                  -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.6568877Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.6568965Z E                  -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.6568969Z 
2025-01-17T11:31:46.6569327Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6569576Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:31:46.6569843Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6570286Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6570466Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6570671Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6570828Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6570896Z 	
2025-01-17T11:31:46.6570982Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6571062Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6571161Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6571315Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6571392Z 	
2025-01-17T11:31:46.6571536Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6571695Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6571761Z 	
2025-01-17T11:31:46.6571854Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6571937Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6572031Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6572130Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6572279Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6572283Z 
2025-01-17T11:31:46.6572286Z 
2025-01-17T11:31:46.6572520Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-17T11:31:46.6572524Z 
2025-01-17T11:31:46.6572864Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-17T11:31:46.6572874Z 
2025-01-17T11:31:46.6573138Z Packets:   ████████▍                                                                       10578/100000 [00:00<00:00, 105772.28it/s][A
2025-01-17T11:31:46.6573143Z 
2025-01-17T11:31:46.6573406Z Packets:   █████████████████▏                                                              21438/100000 [00:00<00:00, 107433.40it/s][A
2025-01-17T11:31:46.6573410Z 
2025-01-17T11:31:46.6573663Z Packets:   █████████████████████████▊                                                      32247/100000 [00:00<00:00, 107732.20it/s][A
2025-01-17T11:31:46.6573675Z 
2025-01-17T11:31:46.6573939Z Packets:   ██████████████████████████████████▍                                             43021/100000 [00:00<00:00, 105618.07it/s][A
2025-01-17T11:31:46.6573943Z 
2025-01-17T11:31:46.6574296Z Packets:   ███████████████████████████████████████████▏                                    54003/100000 [00:00<00:00, 107112.79it/s][A
2025-01-17T11:31:46.6574302Z 
2025-01-17T11:31:46.6574871Z Packets:   ███████████████████████████████████████████████████▉                            64937/100000 [00:00<00:00, 107860.59it/s][A
2025-01-17T11:31:46.6575052Z 
2025-01-17T11:31:46.6575532Z Packets:   ████████████████████████████████████████████████████████████▋                   75841/100000 [00:00<00:00, 108241.32it/s][A
2025-01-17T11:31:46.6575537Z 
2025-01-17T11:31:46.6575844Z Packets:   █████████████████████████████████████████████████████████████████████▍          86819/100000 [00:00<00:00, 108727.23it/s][A
2025-01-17T11:31:46.6575848Z 
2025-01-17T11:31:46.6576175Z Packets:   ██████████████████████████████████████████████████████████████████████████████▏ 97783/100000 [00:00<00:00, 109010.14it/s][A
2025-01-17T11:31:46.6576316Z Iterations:                                                                                45/? [09:05<00:00,  8.19s/it]
2025-01-17T11:31:46.6576320Z 
2025-01-17T11:31:46.6576644Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 109010.14it/s][A
2025-01-17T11:31:46.6576936Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:31:46.6577442Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6577660Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6589799Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6590018Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6590168Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6590176Z 
2025-01-17T11:31:46.6590363Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6590502Z 	Starting iteration 1 of 1
2025-01-17T11:31:46.6590672Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6590816Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6590967Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6591125Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6591368Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-17T11:31:46.6591373Z 
2025-01-17T11:31:46.6591632Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f6960>
2025-01-17T11:31:46.6591907Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6592166Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-17T11:31:46.6592246Z attribute = 'plot_data'
2025-01-17T11:31:46.6592250Z 
2025-01-17T11:31:46.6592335Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6592407Z         "attribute",
2025-01-17T11:31:46.6592471Z         [
2025-01-17T11:31:46.6592763Z             "plot_data",
2025-01-17T11:31:46.6592849Z             "plot_colors",
2025-01-17T11:31:46.6592922Z             "new_bin_edges",
2025-01-17T11:31:46.6592994Z         ],
2025-01-17T11:31:46.6593057Z     )
2025-01-17T11:31:46.6593145Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6593216Z         self,
2025-01-17T11:31:46.6593304Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6593370Z         request,
2025-01-17T11:31:46.6593440Z         attribute,
2025-01-17T11:31:46.6593502Z     ):
2025-01-17T11:31:46.6593570Z         """
2025-01-17T11:31:46.6593706Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6593772Z     
2025-01-17T11:31:46.6593842Z         Parameters:
2025-01-17T11:31:46.6593911Z         -----------
2025-01-17T11:31:46.6594090Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6594185Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6594459Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6594575Z         """
2025-01-17T11:31:46.6594749Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6595174Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6595550Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6595720Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6595867Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6595985Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6596101Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6596214Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6596220Z 
2025-01-17T11:31:46.6596362Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6596470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6596474Z 
2025-01-17T11:31:46.6596941Z args = (<function assert_allclose.<locals>.compare at 0x7f817034e200>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-01-17T11:31:46.6597042Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-01-17T11:31:46.6597291Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6597295Z 
2025-01-17T11:31:46.6597363Z     @wraps(func)
2025-01-17T11:31:46.6597446Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6597524Z         with self._recreate_cm():
2025-01-17T11:31:46.6597609Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6597687Z E           AssertionError: 
2025-01-17T11:31:46.6597796Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6597861Z E           
2025-01-17T11:31:46.6597948Z E           (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.6598094Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.6598208Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.6598334Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.6598485Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.6598593Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.6598706Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.6598710Z 
2025-01-17T11:31:46.6598905Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6599060Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6599332Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6599666Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6599929Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6600453Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6600774Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-17T11:31:46.6600780Z 
2025-01-17T11:31:46.6601039Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f6de0>
2025-01-17T11:31:46.6601312Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6601573Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-17T11:31:46.6601649Z attribute = 'plot_data'
2025-01-17T11:31:46.6601653Z 
2025-01-17T11:31:46.6601739Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6601807Z         "attribute",
2025-01-17T11:31:46.6601870Z         [
2025-01-17T11:31:46.6601943Z             "plot_data",
2025-01-17T11:31:46.6602115Z             "plot_colors",
2025-01-17T11:31:46.6602188Z             "new_bin_edges",
2025-01-17T11:31:46.6602323Z         ],
2025-01-17T11:31:46.6602390Z     )
2025-01-17T11:31:46.6602469Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6602709Z         self,
2025-01-17T11:31:46.6602836Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6602909Z         request,
2025-01-17T11:31:46.6602977Z         attribute,
2025-01-17T11:31:46.6603046Z     ):
2025-01-17T11:31:46.6603109Z         """
2025-01-17T11:31:46.6603240Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6603308Z     
2025-01-17T11:31:46.6603377Z         Parameters:
2025-01-17T11:31:46.6603448Z         -----------
2025-01-17T11:31:46.6603621Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6603716Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6603870Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6603946Z         """
2025-01-17T11:31:46.6604047Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6604189Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6604327Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6604482Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6604622Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6604740Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6604902Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6605111Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6605118Z 
2025-01-17T11:31:46.6605347Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6605526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6605540Z 
2025-01-17T11:31:46.6606171Z args = (<function assert_allclose.<locals>.compare at 0x7f81702ed080>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-01-17T11:31:46.6606305Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-01-17T11:31:46.6606551Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6606555Z 
2025-01-17T11:31:46.6606628Z     @wraps(func)
2025-01-17T11:31:46.6606705Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6606785Z         with self._recreate_cm():
2025-01-17T11:31:46.6606864Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6606943Z E           AssertionError: 
2025-01-17T11:31:46.6607042Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6607113Z E           
2025-01-17T11:31:46.6607196Z E           (shapes (558,), (560,) mismatch)
2025-01-17T11:31:46.6607347Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.6607464Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.6607577Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.6607726Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.6607827Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.6607940Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.6607944Z 
2025-01-17T11:31:46.6608139Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6608346Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-17T11:31:46.6608350Z 
2025-01-17T11:31:46.6608648Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7020>
2025-01-17T11:31:46.6609487Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6609881Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-17T11:31:46.6609965Z attribute = 'plot_data'
2025-01-17T11:31:46.6609969Z 
2025-01-17T11:31:46.6610054Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6610126Z         "attribute",
2025-01-17T11:31:46.6610188Z         [
2025-01-17T11:31:46.6610259Z             "plot_data",
2025-01-17T11:31:46.6610328Z             "plot_colors",
2025-01-17T11:31:46.6610403Z             "new_bin_edges",
2025-01-17T11:31:46.6610464Z         ],
2025-01-17T11:31:46.6610527Z     )
2025-01-17T11:31:46.6610607Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6610673Z         self,
2025-01-17T11:31:46.6610757Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6610827Z         request,
2025-01-17T11:31:46.6610892Z         attribute,
2025-01-17T11:31:46.6610961Z     ):
2025-01-17T11:31:46.6611028Z         """
2025-01-17T11:31:46.6611161Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6611227Z     
2025-01-17T11:31:46.6611297Z         Parameters:
2025-01-17T11:31:46.6611366Z         -----------
2025-01-17T11:31:46.6611538Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6611629Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6611785Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6611848Z         """
2025-01-17T11:31:46.6611947Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6612079Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6612218Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6612371Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6612510Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6612760Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6612873Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6612986Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6612990Z 
2025-01-17T11:31:46.6613123Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6613232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6613235Z 
2025-01-17T11:31:46.6613657Z args = (<function assert_allclose.<locals>.compare at 0x7f811a656a20>, array([11193.08324978, 13536.93126023, 11647.60804688,...1064.78967159, 11163.13661084, 11172.32922889,
2025-01-17T11:31:46.6613797Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-01-17T11:31:46.6614230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6614245Z 
2025-01-17T11:31:46.6614365Z     @wraps(func)
2025-01-17T11:31:46.6614496Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6614632Z         with self._recreate_cm():
2025-01-17T11:31:46.6614762Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6614887Z E           AssertionError: 
2025-01-17T11:31:46.6615039Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6615106Z E           
2025-01-17T11:31:46.6615195Z E           (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.6615342Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.6615459Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.6615573Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.6615725Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.6615829Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.6616207Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.6616212Z 
2025-01-17T11:31:46.6616409Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6616616Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-17T11:31:46.6616620Z 
2025-01-17T11:31:46.6616869Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7260>
2025-01-17T11:31:46.6617141Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6617397Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-17T11:31:46.6617477Z attribute = 'plot_data'
2025-01-17T11:31:46.6617481Z 
2025-01-17T11:31:46.6617566Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6617645Z         "attribute",
2025-01-17T11:31:46.6617767Z         [
2025-01-17T11:31:46.6617897Z             "plot_data",
2025-01-17T11:31:46.6618032Z             "plot_colors",
2025-01-17T11:31:46.6618159Z             "new_bin_edges",
2025-01-17T11:31:46.6618264Z         ],
2025-01-17T11:31:46.6618372Z     )
2025-01-17T11:31:46.6618502Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6618611Z         self,
2025-01-17T11:31:46.6618751Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6618870Z         request,
2025-01-17T11:31:46.6618949Z         attribute,
2025-01-17T11:31:46.6619014Z     ):
2025-01-17T11:31:46.6619084Z         """
2025-01-17T11:31:46.6619215Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6619284Z     
2025-01-17T11:31:46.6619353Z         Parameters:
2025-01-17T11:31:46.6619427Z         -----------
2025-01-17T11:31:46.6619599Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6619697Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6619862Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6619935Z         """
2025-01-17T11:31:46.6620033Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6620164Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6620299Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6620459Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6620609Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6620728Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6620879Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6620990Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6620995Z 
2025-01-17T11:31:46.6621135Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6621245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6621254Z 
2025-01-17T11:31:46.6621631Z args = (<function assert_allclose.<locals>.compare at 0x7f811a654900>, array([11193.08324978, 13536.93126023, 11647.60804688,...210447, 12126.50399598,
2025-01-17T11:31:46.6621759Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-01-17T11:31:46.6621832Z        11042.97481792]))
2025-01-17T11:31:46.6622074Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6622083Z 
2025-01-17T11:31:46.6622150Z     @wraps(func)
2025-01-17T11:31:46.6622225Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6622307Z         with self._recreate_cm():
2025-01-17T11:31:46.6622386Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6622466Z E           AssertionError: 
2025-01-17T11:31:46.6622734Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6622959Z E           
2025-01-17T11:31:46.6623149Z E           (shapes (147,), (153,) mismatch)
2025-01-17T11:31:46.6623391Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.6623591Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.6623791Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.6624040Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.6624221Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.6624396Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.6624402Z 
2025-01-17T11:31:46.6624607Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6624813Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-17T11:31:46.6624823Z 
2025-01-17T11:31:46.6625085Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f74d0>
2025-01-17T11:31:46.6625354Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6625746Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-17T11:31:46.6625870Z attribute = 'plot_data'
2025-01-17T11:31:46.6625876Z 
2025-01-17T11:31:46.6625965Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6626033Z         "attribute",
2025-01-17T11:31:46.6626098Z         [
2025-01-17T11:31:46.6626167Z             "plot_data",
2025-01-17T11:31:46.6626241Z             "plot_colors",
2025-01-17T11:31:46.6626311Z             "new_bin_edges",
2025-01-17T11:31:46.6626373Z         ],
2025-01-17T11:31:46.6626436Z     )
2025-01-17T11:31:46.6626517Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6626583Z         self,
2025-01-17T11:31:46.6626665Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6626739Z         request,
2025-01-17T11:31:46.6626811Z         attribute,
2025-01-17T11:31:46.6626878Z     ):
2025-01-17T11:31:46.6626941Z         """
2025-01-17T11:31:46.6627075Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6627136Z     
2025-01-17T11:31:46.6627211Z         Parameters:
2025-01-17T11:31:46.6627279Z         -----------
2025-01-17T11:31:46.6627447Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6627539Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6627693Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6627759Z         """
2025-01-17T11:31:46.6627858Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6627989Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6628126Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6628285Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6628502Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6628713Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6628904Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6629090Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6629096Z 
2025-01-17T11:31:46.6629317Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6629507Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6629512Z 
2025-01-17T11:31:46.6630016Z args = (<function assert_allclose.<locals>.compare at 0x7f817034dda0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-01-17T11:31:46.6630117Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-01-17T11:31:46.6630559Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6630564Z 
2025-01-17T11:31:46.6630640Z     @wraps(func)
2025-01-17T11:31:46.6630715Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6630798Z         with self._recreate_cm():
2025-01-17T11:31:46.6630877Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6630958Z E           AssertionError: 
2025-01-17T11:31:46.6631058Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6631125Z E           
2025-01-17T11:31:46.6631210Z E           (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.6631360Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.6631471Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.6631588Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.6631742Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.6631854Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.6631965Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.6631969Z 
2025-01-17T11:31:46.6632164Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6632308Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6632737Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6633033Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6633181Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6633498Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6633828Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-17T11:31:46.6633836Z 
2025-01-17T11:31:46.6634276Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7710>
2025-01-17T11:31:46.6634743Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6635106Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-17T11:31:46.6635190Z attribute = 'plot_data'
2025-01-17T11:31:46.6635194Z 
2025-01-17T11:31:46.6635279Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6635349Z         "attribute",
2025-01-17T11:31:46.6635412Z         [
2025-01-17T11:31:46.6635481Z             "plot_data",
2025-01-17T11:31:46.6635554Z             "plot_colors",
2025-01-17T11:31:46.6635622Z             "new_bin_edges",
2025-01-17T11:31:46.6635688Z         ],
2025-01-17T11:31:46.6635750Z     )
2025-01-17T11:31:46.6635840Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6635904Z         self,
2025-01-17T11:31:46.6635993Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6636058Z         request,
2025-01-17T11:31:46.6636128Z         attribute,
2025-01-17T11:31:46.6636191Z     ):
2025-01-17T11:31:46.6636285Z         """
2025-01-17T11:31:46.6636502Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6636595Z     
2025-01-17T11:31:46.6636723Z         Parameters:
2025-01-17T11:31:46.6636808Z         -----------
2025-01-17T11:31:46.6636984Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6637072Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6637229Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6637291Z         """
2025-01-17T11:31:46.6637392Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6637520Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6637936Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6638096Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6638241Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6638357Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6638475Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6638588Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6638592Z 
2025-01-17T11:31:46.6638730Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6638837Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6638841Z 
2025-01-17T11:31:46.6639603Z args = (<function assert_allclose.<locals>.compare at 0x7f811a654720>, array([11061.80943238, 12248.18222883, 11489.53606278,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-01-17T11:31:46.6639778Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-01-17T11:31:46.6640185Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6640190Z 
2025-01-17T11:31:46.6640263Z     @wraps(func)
2025-01-17T11:31:46.6640343Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6640431Z         with self._recreate_cm():
2025-01-17T11:31:46.6640524Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6640604Z E           AssertionError: 
2025-01-17T11:31:46.6640711Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6640775Z E           
2025-01-17T11:31:46.6640868Z E           (shapes (1435,), (1481,) mismatch)
2025-01-17T11:31:46.6641028Z E            ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-17T11:31:46.6641108Z E                  11383.689745, 11102.237019])
2025-01-17T11:31:46.6641279Z E            DESIRED: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-17T11:31:46.6641363Z E                  11398.237865, 11111.204868])
2025-01-17T11:31:46.6641367Z 
2025-01-17T11:31:46.6641566Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6641712Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6641957Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6642284Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6642429Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6642937Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6643159Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-17T11:31:46.6643173Z 
2025-01-17T11:31:46.6643427Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f77d0>
2025-01-17T11:31:46.6643697Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6643966Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors]>>
2025-01-17T11:31:46.6644046Z attribute = 'plot_colors'
2025-01-17T11:31:46.6644050Z 
2025-01-17T11:31:46.6644135Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6644208Z         "attribute",
2025-01-17T11:31:46.6644271Z         [
2025-01-17T11:31:46.6644350Z             "plot_data",
2025-01-17T11:31:46.6644431Z             "plot_colors",
2025-01-17T11:31:46.6644566Z             "new_bin_edges",
2025-01-17T11:31:46.6644681Z         ],
2025-01-17T11:31:46.6644800Z     )
2025-01-17T11:31:46.6644939Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6645258Z         self,
2025-01-17T11:31:46.6645531Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6645661Z         request,
2025-01-17T11:31:46.6645735Z         attribute,
2025-01-17T11:31:46.6645800Z     ):
2025-01-17T11:31:46.6645872Z         """
2025-01-17T11:31:46.6646005Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6646075Z     
2025-01-17T11:31:46.6646146Z         Parameters:
2025-01-17T11:31:46.6646221Z         -----------
2025-01-17T11:31:46.6646390Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6646486Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6646645Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6646714Z         """
2025-01-17T11:31:46.6646814Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6646948Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6647094Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6647254Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6647397Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6647515Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6647629Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6647746Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6647750Z 
2025-01-17T11:31:46.6647884Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6647998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6648002Z 
2025-01-17T11:31:46.6648584Z args = (<function assert_allclose.<locals>.compare at 0x7f811a657060>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-17T11:31:46.6648742Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-17T11:31:46.6649175Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6649183Z 
2025-01-17T11:31:46.6649278Z     @wraps(func)
2025-01-17T11:31:46.6649358Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6649442Z         with self._recreate_cm():
2025-01-17T11:31:46.6649523Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6649614Z E           AssertionError: 
2025-01-17T11:31:46.6649715Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6649779Z E           
2025-01-17T11:31:46.6649862Z E           (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.6649997Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6650094Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6650202Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6650283Z E                  0.      , 1.      ])
2025-01-17T11:31:46.6650416Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6650506Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6650605Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6650701Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.6650705Z 
2025-01-17T11:31:46.6650900Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6651104Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-17T11:31:46.6651108Z 
2025-01-17T11:31:46.6651356Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7950>
2025-01-17T11:31:46.6651798Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6652374Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-17T11:31:46.6652509Z attribute = 'plot_data'
2025-01-17T11:31:46.6652515Z 
2025-01-17T11:31:46.6652783Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6652904Z         "attribute",
2025-01-17T11:31:46.6653145Z         [
2025-01-17T11:31:46.6653272Z             "plot_data",
2025-01-17T11:31:46.6653347Z             "plot_colors",
2025-01-17T11:31:46.6653424Z             "new_bin_edges",
2025-01-17T11:31:46.6653487Z         ],
2025-01-17T11:31:46.6653554Z     )
2025-01-17T11:31:46.6653634Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6653701Z         self,
2025-01-17T11:31:46.6653783Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6653848Z         request,
2025-01-17T11:31:46.6653920Z         attribute,
2025-01-17T11:31:46.6653982Z     ):
2025-01-17T11:31:46.6654059Z         """
2025-01-17T11:31:46.6654193Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6654260Z     
2025-01-17T11:31:46.6654331Z         Parameters:
2025-01-17T11:31:46.6654403Z         -----------
2025-01-17T11:31:46.6654570Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6654661Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6654815Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6654879Z         """
2025-01-17T11:31:46.6654979Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6655111Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6655251Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6655399Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6655541Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6655663Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6655773Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6655881Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6655886Z 
2025-01-17T11:31:46.6656025Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6656129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6656133Z 
2025-01-17T11:31:46.6656559Z args = (<function assert_allclose.<locals>.compare at 0x7f811a655c60>, array([11193.08324978, 13536.93126023, 11647.60804688,...1064.78967159, 11163.13661084, 11172.32922889,
2025-01-17T11:31:46.6656684Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-01-17T11:31:46.6656927Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6656938Z 
2025-01-17T11:31:46.6657009Z     @wraps(func)
2025-01-17T11:31:46.6657087Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6657163Z         with self._recreate_cm():
2025-01-17T11:31:46.6657247Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6657323Z E           AssertionError: 
2025-01-17T11:31:46.6657424Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6657491Z E           
2025-01-17T11:31:46.6657578Z E           (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.6657722Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.6657834Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.6657945Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.6658095Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.6658199Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.6658554Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.6658559Z 
2025-01-17T11:31:46.6658753Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6659068Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-17T11:31:46.6659076Z 
2025-01-17T11:31:46.6659516Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7b30>
2025-01-17T11:31:46.6659985Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6660297Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-17T11:31:46.6660381Z attribute = 'plot_data'
2025-01-17T11:31:46.6660385Z 
2025-01-17T11:31:46.6660469Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6660541Z         "attribute",
2025-01-17T11:31:46.6660612Z         [
2025-01-17T11:31:46.6660685Z             "plot_data",
2025-01-17T11:31:46.6660762Z             "plot_colors",
2025-01-17T11:31:46.6660834Z             "new_bin_edges",
2025-01-17T11:31:46.6660898Z         ],
2025-01-17T11:31:46.6660959Z     )
2025-01-17T11:31:46.6661046Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6661114Z         self,
2025-01-17T11:31:46.6661196Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6661261Z         request,
2025-01-17T11:31:46.6661332Z         attribute,
2025-01-17T11:31:46.6661395Z     ):
2025-01-17T11:31:46.6661466Z         """
2025-01-17T11:31:46.6661593Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6661661Z     
2025-01-17T11:31:46.6661730Z         Parameters:
2025-01-17T11:31:46.6661803Z         -----------
2025-01-17T11:31:46.6661969Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6662064Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6662222Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6662292Z         """
2025-01-17T11:31:46.6662401Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6662680Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6662943Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6663214Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6663456Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6663646Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6663834Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6664005Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6664011Z 
2025-01-17T11:31:46.6664155Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6664267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6664271Z 
2025-01-17T11:31:46.6664646Z args = (<function assert_allclose.<locals>.compare at 0x7f811a656020>, array([11107.03324206, 11193.08324978, 13536.93126023,...210447, 12126.50399598,
2025-01-17T11:31:46.6664772Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-01-17T11:31:46.6664847Z        11042.97481792]))
2025-01-17T11:31:46.6665087Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6665092Z 
2025-01-17T11:31:46.6665168Z     @wraps(func)
2025-01-17T11:31:46.6665244Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6665329Z         with self._recreate_cm():
2025-01-17T11:31:46.6665407Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6665491Z E           AssertionError: 
2025-01-17T11:31:46.6665592Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6665805Z E           
2025-01-17T11:31:46.6665891Z E           (shapes (367,), (381,) mismatch)
2025-01-17T11:31:46.6666143Z E            ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-17T11:31:46.6666257Z E                  11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-17T11:31:46.6666379Z E                  15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-17T11:31:46.6666525Z E            DESIRED: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-17T11:31:46.6666633Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-17T11:31:46.6666744Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-17T11:31:46.6666748Z 
2025-01-17T11:31:46.6666944Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6667090Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6667348Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6667600Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6667749Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6668038Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6668313Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-17T11:31:46.6668320Z 
2025-01-17T11:31:46.6668757Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7c20>
2025-01-17T11:31:46.6669227Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6669578Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors]>>
2025-01-17T11:31:46.6669667Z attribute = 'plot_colors'
2025-01-17T11:31:46.6669678Z 
2025-01-17T11:31:46.6669760Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6669837Z         "attribute",
2025-01-17T11:31:46.6669903Z         [
2025-01-17T11:31:46.6669973Z             "plot_data",
2025-01-17T11:31:46.6670050Z             "plot_colors",
2025-01-17T11:31:46.6670121Z             "new_bin_edges",
2025-01-17T11:31:46.6670191Z         ],
2025-01-17T11:31:46.6670253Z     )
2025-01-17T11:31:46.6670344Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6670410Z         self,
2025-01-17T11:31:46.6670498Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6670565Z         request,
2025-01-17T11:31:46.6670638Z         attribute,
2025-01-17T11:31:46.6670703Z     ):
2025-01-17T11:31:46.6670772Z         """
2025-01-17T11:31:46.6670898Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6670962Z     
2025-01-17T11:31:46.6671042Z         Parameters:
2025-01-17T11:31:46.6671111Z         -----------
2025-01-17T11:31:46.6671287Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6671386Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6671545Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6671608Z         """
2025-01-17T11:31:46.6671710Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6671906Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6672156Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6672410Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6672786Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6672980Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6673151Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6673265Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6673436Z 
2025-01-17T11:31:46.6673686Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6673794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6673798Z 
2025-01-17T11:31:46.6674141Z args = (<function assert_allclose.<locals>.compare at 0x7f811a656a20>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-17T11:31:46.6674229Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-17T11:31:46.6674478Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6674483Z 
2025-01-17T11:31:46.6674553Z     @wraps(func)
2025-01-17T11:31:46.6674634Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6674712Z         with self._recreate_cm():
2025-01-17T11:31:46.6674796Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6674874Z E           AssertionError: 
2025-01-17T11:31:46.6674985Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6675062Z E           
2025-01-17T11:31:46.6675149Z E           (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.6675282Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6675375Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6675485Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6675561Z E                  0.      , 1.      ])
2025-01-17T11:31:46.6675700Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6675789Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6675897Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6675988Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.6675996Z 
2025-01-17T11:31:46.6676194Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6676385Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-17T11:31:46.6676389Z 
2025-01-17T11:31:46.6676643Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cc290>
2025-01-17T11:31:46.6676936Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f816860f5f0>
2025-01-17T11:31:46.6677604Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6678015Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-17T11:31:46.6678022Z 
2025-01-17T11:31:46.6678154Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6678422Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:31:46.6678499Z     ):
2025-01-17T11:31:46.6678564Z         """
2025-01-17T11:31:46.6678693Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6678758Z     
2025-01-17T11:31:46.6678882Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6678946Z     
2025-01-17T11:31:46.6679023Z         Parameters:
2025-01-17T11:31:46.6679093Z         -----------
2025-01-17T11:31:46.6679248Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:31:46.6679388Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:31:46.6679482Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6679547Z         """
2025-01-17T11:31:46.6679638Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:31:46.6679736Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6679896Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:31:46.6680225Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6680325Z             expected_values = expected.get(
2025-01-17T11:31:46.6680407Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6680486Z             ).values.flatten()
2025-01-17T11:31:46.6680615Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:31:46.6680695Z     
2025-01-17T11:31:46.6680916Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6681067Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6681201Z                     expected_values,
2025-01-17T11:31:46.6681320Z                     actual_values,
2025-01-17T11:31:46.6681439Z                     rtol=0.3,
2025-01-17T11:31:46.6681550Z                     atol=3,
2025-01-17T11:31:46.6681663Z                 )
2025-01-17T11:31:46.6681670Z 
2025-01-17T11:31:46.6681899Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-17T11:31:46.6682025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6682029Z 
2025-01-17T11:31:46.6682435Z args = (<function assert_allclose.<locals>.compare at 0x7f8156b8cea0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6682513Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-17T11:31:46.6682957Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6682962Z 
2025-01-17T11:31:46.6683041Z     @wraps(func)
2025-01-17T11:31:46.6683119Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6683201Z         with self._recreate_cm():
2025-01-17T11:31:46.6683280Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6683366Z E           AssertionError: 
2025-01-17T11:31:46.6683463Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6683538Z E           
2025-01-17T11:31:46.6683635Z E           Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.6683736Z E           Max absolute difference among violations: 5
2025-01-17T11:31:46.6683850Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6684001Z E            ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.6684086Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.6684237Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6684321Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.6684325Z 
2025-01-17T11:31:46.6684518Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6684670Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6684918Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6685170Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6685312Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6685606Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6685796Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-17T11:31:46.6685800Z 
2025-01-17T11:31:46.6686052Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cc350>
2025-01-17T11:31:46.6686341Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f814f56f7a0>
2025-01-17T11:31:46.6686813Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6687188Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-17T11:31:46.6687301Z 
2025-01-17T11:31:46.6687388Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6687538Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:31:46.6687607Z     ):
2025-01-17T11:31:46.6687675Z         """
2025-01-17T11:31:46.6687801Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6687865Z     
2025-01-17T11:31:46.6687989Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6688050Z     
2025-01-17T11:31:46.6688126Z         Parameters:
2025-01-17T11:31:46.6688196Z         -----------
2025-01-17T11:31:46.6688352Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:31:46.6688499Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:31:46.6688596Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6688662Z         """
2025-01-17T11:31:46.6688760Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:31:46.6688864Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6689024Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:31:46.6689163Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6689252Z             expected_values = expected.get(
2025-01-17T11:31:46.6689342Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6689421Z             ).values.flatten()
2025-01-17T11:31:46.6689550Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:31:46.6689615Z     
2025-01-17T11:31:46.6689745Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6689834Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6689917Z                     expected_values,
2025-01-17T11:31:46.6689990Z                     actual_values,
2025-01-17T11:31:46.6690066Z                     rtol=0.3,
2025-01-17T11:31:46.6690146Z                     atol=3,
2025-01-17T11:31:46.6690224Z                 )
2025-01-17T11:31:46.6690292Z             else:
2025-01-17T11:31:46.6690425Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6690489Z     
2025-01-17T11:31:46.6690604Z         labels = expected["plot_data_hdf/scalars"]
2025-01-17T11:31:46.6690718Z         for index1, data in enumerate(fig.get_children()):
2025-01-17T11:31:46.6690810Z             if isinstance(data.get_label(), str):
2025-01-17T11:31:46.6690885Z                 assert (
2025-01-17T11:31:46.6691000Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-17T11:31:46.6691088Z                     == data.get_label()
2025-01-17T11:31:46.6691155Z                 )
2025-01-17T11:31:46.6691244Z             if isinstance(data, Line2D):
2025-01-17T11:31:46.6691330Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6691413Z                     data.get_xydata(),
2025-01-17T11:31:46.6691546Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-17T11:31:46.6691626Z                     rtol=0.3,
2025-01-17T11:31:46.6691695Z                     atol=3,
2025-01-17T11:31:46.6691763Z                 )
2025-01-17T11:31:46.6691767Z 
2025-01-17T11:31:46.6691904Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-17T11:31:46.6692017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6692021Z 
2025-01-17T11:31:46.6692260Z args = (<function assert_allclose.<locals>.compare at 0x7f815315dee0>, array([[1.10e+04, 1.50e+01],
2025-01-17T11:31:46.6692336Z        [1.19e+04, 1.50e+0...,
2025-01-17T11:31:46.6692409Z        [1.82e+04, 0.00e+00],
2025-01-17T11:31:46.6692484Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6692660Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6692737Z        [2.00e+04, 0.00e+00]]))
2025-01-17T11:31:46.6692976Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6693102Z 
2025-01-17T11:31:46.6693300Z     @wraps(func)
2025-01-17T11:31:46.6693383Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6693462Z         with self._recreate_cm():
2025-01-17T11:31:46.6693547Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6693624Z E           AssertionError: 
2025-01-17T11:31:46.6693727Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6693794Z E           
2025-01-17T11:31:46.6693888Z E           Mismatched elements: 2 / 40 (5%)
2025-01-17T11:31:46.6693999Z E           Max absolute difference among violations: 15.
2025-01-17T11:31:46.6694109Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6694196Z E            ACTUAL: array([[1.10e+04, 1.50e+01],
2025-01-17T11:31:46.6694279Z E                  [1.19e+04, 1.50e+01],
2025-01-17T11:31:46.6694354Z E                  [1.19e+04, 1.00e+00],...
2025-01-17T11:31:46.6694447Z E            DESIRED: array([[1.10e+04, 0.00e+00],
2025-01-17T11:31:46.6694530Z E                  [1.19e+04, 0.00e+00],
2025-01-17T11:31:46.6694610Z E                  [1.19e+04, 4.00e+00],...
2025-01-17T11:31:46.6694614Z 
2025-01-17T11:31:46.6694808Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6694957Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6695179Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6695516Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6695659Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6696008Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6696203Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _______
2025-01-17T11:31:46.6696211Z 
2025-01-17T11:31:46.6696465Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cc4d0>
2025-01-17T11:31:46.6696755Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f814bee71a0>
2025-01-17T11:31:46.6697227Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6697463Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl7]>>
2025-01-17T11:31:46.6697467Z 
2025-01-17T11:31:46.6697555Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6697713Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:31:46.6697785Z     ):
2025-01-17T11:31:46.6697851Z         """
2025-01-17T11:31:46.6698008Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6698127Z     
2025-01-17T11:31:46.6698353Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6698463Z     
2025-01-17T11:31:46.6698592Z         Parameters:
2025-01-17T11:31:46.6698718Z         -----------
2025-01-17T11:31:46.6698953Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:31:46.6699191Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:31:46.6699288Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6699358Z         """
2025-01-17T11:31:46.6699445Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:31:46.6699547Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6699703Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:31:46.6699847Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6699937Z             expected_values = expected.get(
2025-01-17T11:31:46.6700139Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6700292Z             ).values.flatten()
2025-01-17T11:31:46.6700424Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:31:46.6700488Z     
2025-01-17T11:31:46.6700618Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6700704Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6700781Z                     expected_values,
2025-01-17T11:31:46.6700857Z                     actual_values,
2025-01-17T11:31:46.6700926Z                     rtol=0.3,
2025-01-17T11:31:46.6701000Z                     atol=3,
2025-01-17T11:31:46.6701065Z                 )
2025-01-17T11:31:46.6701135Z             else:
2025-01-17T11:31:46.6701263Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6701331Z     
2025-01-17T11:31:46.6701431Z         labels = expected["plot_data_hdf/scalars"]
2025-01-17T11:31:46.6701550Z         for index1, data in enumerate(fig.get_children()):
2025-01-17T11:31:46.6701652Z             if isinstance(data.get_label(), str):
2025-01-17T11:31:46.6701726Z                 assert (
2025-01-17T11:31:46.6701839Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-17T11:31:46.6701920Z                     == data.get_label()
2025-01-17T11:31:46.6701986Z                 )
2025-01-17T11:31:46.6702075Z             if isinstance(data, Line2D):
2025-01-17T11:31:46.6702162Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6702243Z                     data.get_xydata(),
2025-01-17T11:31:46.6702381Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-17T11:31:46.6702452Z                     rtol=0.3,
2025-01-17T11:31:46.6702695Z                     atol=3,
2025-01-17T11:31:46.6702823Z                 )
2025-01-17T11:31:46.6702830Z 
2025-01-17T11:31:46.6702989Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-17T11:31:46.6703104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6703107Z 
2025-01-17T11:31:46.6703362Z args = (<function assert_allclose.<locals>.compare at 0x7f8156b08b80>, array([[1.10e+04, 6.00e+01],
2025-01-17T11:31:46.6703432Z        [1.19e+04, 6.00e+0...,
2025-01-17T11:31:46.6703507Z        [1.82e+04, 0.00e+00],
2025-01-17T11:31:46.6703575Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6703648Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6703716Z        [2.00e+04, 0.00e+00]]))
2025-01-17T11:31:46.6703967Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6703970Z 
2025-01-17T11:31:46.6704040Z     @wraps(func)
2025-01-17T11:31:46.6704120Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6704198Z         with self._recreate_cm():
2025-01-17T11:31:46.6704282Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6704361Z E           AssertionError: 
2025-01-17T11:31:46.6704467Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6704533Z E           
2025-01-17T11:31:46.6704627Z E           Mismatched elements: 12 / 40 (30%)
2025-01-17T11:31:46.6704742Z E           Max absolute difference among violations: 59.
2025-01-17T11:31:46.6704846Z E           Max relative difference among violations: 59.
2025-01-17T11:31:46.6704938Z E            ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-17T11:31:46.6705017Z E                  [1.19e+04, 6.00e+01],
2025-01-17T11:31:46.6705101Z E                  [1.19e+04, 3.10e+01],...
2025-01-17T11:31:46.6705191Z E            DESIRED: array([[1.10e+04, 1.00e+00],
2025-01-17T11:31:46.6705270Z E                  [1.19e+04, 1.00e+00],
2025-01-17T11:31:46.6705346Z E                  [1.19e+04, 0.00e+00],...
2025-01-17T11:31:46.6705350Z 
2025-01-17T11:31:46.6705556Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6705706Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6706199Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6706452Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6706599Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6706898Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6707094Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-17T11:31:46.6707098Z 
2025-01-17T11:31:46.6707350Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cd6d0>
2025-01-17T11:31:46.6707661Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8151856ae0>
2025-01-17T11:31:46.6707750Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6707896Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:31:46.6708038Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:31:46.6708234Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6708467Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-17T11:31:46.6708470Z 
2025-01-17T11:31:46.6708560Z     def test_generate_plot_ply(
2025-01-17T11:31:46.6708721Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6708791Z     ):
2025-01-17T11:31:46.6708857Z         """
2025-01-17T11:31:46.6708990Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6709054Z     
2025-01-17T11:31:46.6709184Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6709246Z     
2025-01-17T11:31:46.6709318Z         Parameters:
2025-01-17T11:31:46.6709392Z         ----------
2025-01-17T11:31:46.6709549Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:31:46.6709688Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:31:46.6709777Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6709848Z         """
2025-01-17T11:31:46.6709934Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6710040Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6710206Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6710276Z     
2025-01-17T11:31:46.6710418Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6710514Z             expected_values = expected.get(
2025-01-17T11:31:46.6710594Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6710677Z             ).values.flatten()
2025-01-17T11:31:46.6710809Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:31:46.6710878Z     
2025-01-17T11:31:46.6711005Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6711102Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6711181Z                     expected_values,
2025-01-17T11:31:46.6711257Z                     actual_values,
2025-01-17T11:31:46.6711333Z                     rtol=0.3,
2025-01-17T11:31:46.6711402Z                     atol=3,
2025-01-17T11:31:46.6711472Z                 )
2025-01-17T11:31:46.6711476Z 
2025-01-17T11:31:46.6711612Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-17T11:31:46.6711724Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6711728Z 
2025-01-17T11:31:46.6712135Z args = (<function assert_allclose.<locals>.compare at 0x7f811a6f1440>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6712215Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-17T11:31:46.6712838Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6712844Z 
2025-01-17T11:31:46.6712931Z     @wraps(func)
2025-01-17T11:31:46.6713010Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6713094Z         with self._recreate_cm():
2025-01-17T11:31:46.6713176Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6713259Z E           AssertionError: 
2025-01-17T11:31:46.6713362Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6713432Z E           
2025-01-17T11:31:46.6713522Z E           Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.6713634Z E           Max absolute difference among violations: 5
2025-01-17T11:31:46.6713743Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6713900Z E            ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.6713987Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.6714156Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6714235Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.6714239Z 
2025-01-17T11:31:46.6714439Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6714586Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6714813Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6715054Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6715202Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6715495Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6715688Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-17T11:31:46.6715697Z 
2025-01-17T11:31:46.6715952Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cd790>
2025-01-17T11:31:46.6716260Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8154210380>
2025-01-17T11:31:46.6716349Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6716493Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:31:46.6716618Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:31:46.6716820Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6717048Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-17T11:31:46.6717052Z 
2025-01-17T11:31:46.6717139Z     def test_generate_plot_ply(
2025-01-17T11:31:46.6717296Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6717369Z     ):
2025-01-17T11:31:46.6717434Z         """
2025-01-17T11:31:46.6717561Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6717632Z     
2025-01-17T11:31:46.6717751Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6717819Z     
2025-01-17T11:31:46.6717890Z         Parameters:
2025-01-17T11:31:46.6717967Z         ----------
2025-01-17T11:31:46.6718117Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:31:46.6718251Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:31:46.6718340Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6718410Z         """
2025-01-17T11:31:46.6718497Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6718602Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6718766Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6718836Z     
2025-01-17T11:31:46.6719117Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6719303Z             expected_values = expected.get(
2025-01-17T11:31:46.6719385Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6719467Z             ).values.flatten()
2025-01-17T11:31:46.6719603Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:31:46.6719667Z     
2025-01-17T11:31:46.6719792Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6719878Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6719962Z                     expected_values,
2025-01-17T11:31:46.6720037Z                     actual_values,
2025-01-17T11:31:46.6720114Z                     rtol=0.3,
2025-01-17T11:31:46.6720184Z                     atol=3,
2025-01-17T11:31:46.6720258Z                 )
2025-01-17T11:31:46.6720324Z             else:
2025-01-17T11:31:46.6720453Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6720562Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6720667Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6720746Z             if data.stackgroup:
2025-01-17T11:31:46.6720854Z                 assert (
2025-01-17T11:31:46.6720932Z                     data.stackgroup
2025-01-17T11:31:46.6721002Z                     == getattr(
2025-01-17T11:31:46.6721109Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6721202Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6721277Z                     ).decode()
2025-01-17T11:31:46.6721342Z                 )
2025-01-17T11:31:46.6721418Z             if data.name:
2025-01-17T11:31:46.6721489Z                 assert (
2025-01-17T11:31:46.6721564Z                     data.name
2025-01-17T11:31:46.6721633Z                     == getattr(
2025-01-17T11:31:46.6721735Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6721826Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6721899Z                     ).decode()
2025-01-17T11:31:46.6721968Z                 )
2025-01-17T11:31:46.6722059Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6722127Z                 data.x,
2025-01-17T11:31:46.6722229Z                 expected.get(group + "x").values.flatten(),
2025-01-17T11:31:46.6722304Z                 rtol=0.3,
2025-01-17T11:31:46.6722375Z                 atol=3,
2025-01-17T11:31:46.6722446Z             )
2025-01-17T11:31:46.6722679Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6722804Z                 data.y,
2025-01-17T11:31:46.6722911Z                 expected.get(group + "y").values.flatten(),
2025-01-17T11:31:46.6722985Z                 rtol=0.3,
2025-01-17T11:31:46.6723051Z                 atol=3,
2025-01-17T11:31:46.6723119Z             )
2025-01-17T11:31:46.6723123Z 
2025-01-17T11:31:46.6723257Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-17T11:31:46.6723373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6723383Z 
2025-01-17T11:31:46.6723704Z args = (<function assert_allclose.<locals>.compare at 0x7f811a657ba0>, array([15, 15,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,
2025-01-17T11:31:46.6723831Z         0,  0,  0]), array([0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
2025-01-17T11:31:46.6724078Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6724082Z 
2025-01-17T11:31:46.6724156Z     @wraps(func)
2025-01-17T11:31:46.6724232Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6724315Z         with self._recreate_cm():
2025-01-17T11:31:46.6724397Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6724479Z E           AssertionError: 
2025-01-17T11:31:46.6724579Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6724649Z E           
2025-01-17T11:31:46.6724867Z E           Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.6725078Z E           Max absolute difference among violations: 15
2025-01-17T11:31:46.6725195Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6725335Z E            ACTUAL: array([15, 15,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,
2025-01-17T11:31:46.6725411Z E                   0,  0,  0])
2025-01-17T11:31:46.6725546Z E            DESIRED: array([0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.6725550Z 
2025-01-17T11:31:46.6725747Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6725891Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6726123Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6726451Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6726614Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6726964Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6727157Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _______
2025-01-17T11:31:46.6727161Z 
2025-01-17T11:31:46.6727409Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cd940>
2025-01-17T11:31:46.6727717Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8169ddc1a0>
2025-01-17T11:31:46.6727807Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6727949Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:31:46.6728074Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:31:46.6728276Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6728509Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply7]>>
2025-01-17T11:31:46.6728513Z 
2025-01-17T11:31:46.6728602Z     def test_generate_plot_ply(
2025-01-17T11:31:46.6728759Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6728828Z     ):
2025-01-17T11:31:46.6728893Z         """
2025-01-17T11:31:46.6729020Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6729082Z     
2025-01-17T11:31:46.6729207Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6729269Z     
2025-01-17T11:31:46.6729343Z         Parameters:
2025-01-17T11:31:46.6729411Z         ----------
2025-01-17T11:31:46.6729564Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:31:46.6729691Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:31:46.6729790Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6729855Z         """
2025-01-17T11:31:46.6729953Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6730054Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6730219Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6730288Z     
2025-01-17T11:31:46.6730426Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6730521Z             expected_values = expected.get(
2025-01-17T11:31:46.6730601Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6730693Z             ).values.flatten()
2025-01-17T11:31:46.6730824Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:31:46.6730892Z     
2025-01-17T11:31:46.6731014Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6731106Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6731280Z                     expected_values,
2025-01-17T11:31:46.6731361Z                     actual_values,
2025-01-17T11:31:46.6731505Z                     rtol=0.3,
2025-01-17T11:31:46.6731581Z                     atol=3,
2025-01-17T11:31:46.6731645Z                 )
2025-01-17T11:31:46.6731719Z             else:
2025-01-17T11:31:46.6731845Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6731940Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6732042Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6732120Z             if data.stackgroup:
2025-01-17T11:31:46.6732195Z                 assert (
2025-01-17T11:31:46.6732271Z                     data.stackgroup
2025-01-17T11:31:46.6732346Z                     == getattr(
2025-01-17T11:31:46.6732446Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6732687Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6732779Z                     ).decode()
2025-01-17T11:31:46.6732850Z                 )
2025-01-17T11:31:46.6732928Z             if data.name:
2025-01-17T11:31:46.6733003Z                 assert (
2025-01-17T11:31:46.6733080Z                     data.name
2025-01-17T11:31:46.6733153Z                     == getattr(
2025-01-17T11:31:46.6733248Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6733337Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6733405Z                     ).decode()
2025-01-17T11:31:46.6733471Z                 )
2025-01-17T11:31:46.6733558Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6733624Z                 data.x,
2025-01-17T11:31:46.6733728Z                 expected.get(group + "x").values.flatten(),
2025-01-17T11:31:46.6733796Z                 rtol=0.3,
2025-01-17T11:31:46.6733865Z                 atol=3,
2025-01-17T11:31:46.6733930Z             )
2025-01-17T11:31:46.6734016Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6734089Z                 data.y,
2025-01-17T11:31:46.6734244Z                 expected.get(group + "y").values.flatten(),
2025-01-17T11:31:46.6734363Z                 rtol=0.3,
2025-01-17T11:31:46.6734463Z                 atol=3,
2025-01-17T11:31:46.6734529Z             )
2025-01-17T11:31:46.6734534Z 
2025-01-17T11:31:46.6734672Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-17T11:31:46.6734777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6734781Z 
2025-01-17T11:31:46.6735109Z args = (<function assert_allclose.<locals>.compare at 0x7f811a6f0fe0>, array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-17T11:31:46.6735229Z         1,  0,  0]), array([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
2025-01-17T11:31:46.6735478Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6735482Z 
2025-01-17T11:31:46.6735558Z     @wraps(func)
2025-01-17T11:31:46.6735639Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6735724Z         with self._recreate_cm():
2025-01-17T11:31:46.6735810Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6735887Z E           AssertionError: 
2025-01-17T11:31:46.6735983Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6736056Z E           
2025-01-17T11:31:46.6736146Z E           Mismatched elements: 12 / 20 (60%)
2025-01-17T11:31:46.6736263Z E           Max absolute difference among violations: 59
2025-01-17T11:31:46.6736372Z E           Max relative difference among violations: 59.
2025-01-17T11:31:46.6736519Z E            ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-17T11:31:46.6736592Z E                   1,  0,  0])
2025-01-17T11:31:46.6736734Z E            DESIRED: array([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.6736738Z 
2025-01-17T11:31:46.6736931Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6737319Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6737553Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6737799Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6737938Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6738235Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6738450Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-17T11:31:46.6738454Z 
2025-01-17T11:31:46.6738716Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e474ef0>
2025-01-17T11:31:46.6739019Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6739351Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814e91fbc0>
2025-01-17T11:31:46.6739622Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-17T11:31:46.6739626Z 
2025-01-17T11:31:46.6739719Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6739786Z         self,
2025-01-17T11:31:46.6739881Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6739963Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6740036Z         request,
2025-01-17T11:31:46.6740101Z     ):
2025-01-17T11:31:46.6740205Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6740376Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6740462Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6740630Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6740719Z             plot_object = getattr(
2025-01-17T11:31:46.6740841Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6740911Z             )
2025-01-17T11:31:46.6741003Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6741157Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6741259Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6741346Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6741470Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6741538Z                 )
2025-01-17T11:31:46.6741542Z 
2025-01-17T11:31:46.6741686Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6741790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6741794Z 
2025-01-17T11:31:46.6742263Z args = (<function assert_allclose.<locals>.compare at 0x7f816862bec0>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6742366Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6742786Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6742791Z 
2025-01-17T11:31:46.6742866Z     @wraps(func)
2025-01-17T11:31:46.6742952Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6743032Z         with self._recreate_cm():
2025-01-17T11:31:46.6743123Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6743204Z E           AssertionError: 
2025-01-17T11:31:46.6743312Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6743378Z E           
2025-01-17T11:31:46.6743477Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6743612Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6743906Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6744173Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6744264Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6744427Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6744512Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6744515Z 
2025-01-17T11:31:46.6744711Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6744932Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-17T11:31:46.6744936Z 
2025-01-17T11:31:46.6745194Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475610>
2025-01-17T11:31:46.6745502Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6745830Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8168ca2450>
2025-01-17T11:31:46.6746104Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-17T11:31:46.6746109Z 
2025-01-17T11:31:46.6746197Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6746270Z         self,
2025-01-17T11:31:46.6746360Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6746448Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6746514Z         request,
2025-01-17T11:31:46.6746586Z     ):
2025-01-17T11:31:46.6746687Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6746860Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6746947Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6747116Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6747204Z             plot_object = getattr(
2025-01-17T11:31:46.6747333Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6747404Z             )
2025-01-17T11:31:46.6747497Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6747658Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6747759Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6747854Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6747975Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6748048Z                 )
2025-01-17T11:31:46.6748051Z 
2025-01-17T11:31:46.6748190Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6748300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6748304Z 
2025-01-17T11:31:46.6748761Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41da0>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6748871Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6749911Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6749917Z 
2025-01-17T11:31:46.6750560Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5
2025-01-17T11:31:46.6750570Z 
2025-01-17T11:31:46.6750874Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6750878Z 
2025-01-17T11:31:46.6751517Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5
2025-01-17T11:31:46.6751610Z 
2025-01-17T11:31:46.6751990Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6751995Z 
2025-01-17T11:31:46.6752918Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-17T11:31:46.6752924Z 
2025-01-17T11:31:46.6753233Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6753236Z 
2025-01-17T11:31:46.6753881Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-17T11:31:46.6753886Z 
2025-01-17T11:31:46.6754185Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6754196Z 
2025-01-17T11:31:46.6754890Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-17T11:31:46.6754894Z 
2025-01-17T11:31:46.6755201Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6755205Z 
2025-01-17T11:31:46.6755845Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-17T11:31:46.6755849Z 
2025-01-17T11:31:46.6756150Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6756154Z 
2025-01-17T11:31:46.6756794Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-17T11:31:46.6756803Z 
2025-01-17T11:31:46.6757103Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6757107Z 
2025-01-17T11:31:46.6757745Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-17T11:31:46.6757749Z 
2025-01-17T11:31:46.6758051Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6758055Z 
2025-01-17T11:31:46.6758692Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-17T11:31:46.6758696Z 
2025-01-17T11:31:46.6759000Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6759004Z 
2025-01-17T11:31:46.6759688Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-17T11:31:46.6759692Z 
2025-01-17T11:31:46.6759991Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6759995Z 
2025-01-17T11:31:46.6760685Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-17T11:31:46.6760689Z 
2025-01-17T11:31:46.6760983Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6761111Z 
2025-01-17T11:31:46.6761858Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-17T11:31:46.6761863Z 
2025-01-17T11:31:46.6762169Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6762173Z 
2025-01-17T11:31:46.6763060Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-17T11:31:46.6763066Z 
2025-01-17T11:31:46.6763375Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6763380Z 
2025-01-17T11:31:46.6764013Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-17T11:31:46.6764028Z 
2025-01-17T11:31:46.6764331Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6764334Z 
2025-01-17T11:31:46.6765019Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-17T11:31:46.6765023Z 
2025-01-17T11:31:46.6765328Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6765331Z 
2025-01-17T11:31:46.6766011Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-17T11:31:46.6766015Z 
2025-01-17T11:31:46.6766321Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6766325Z 
2025-01-17T11:31:46.6767001Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-17T11:31:46.6767005Z 
2025-01-17T11:31:46.6767300Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6767303Z 
2025-01-17T11:31:46.6767983Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-17T11:31:46.6767986Z 
2025-01-17T11:31:46.6768284Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6768291Z 
2025-01-17T11:31:46.6768935Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-17T11:31:46.6768939Z 
2025-01-17T11:31:46.6769242Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6769246Z 
2025-01-17T11:31:46.6769883Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-17T11:31:46.6769887Z 
2025-01-17T11:31:46.6770188Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6770192Z 
2025-01-17T11:31:46.6770836Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-17T11:31:46.6770962Z 
2025-01-17T11:31:46.6771370Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6771374Z 
2025-01-17T11:31:46.6772052Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-17T11:31:46.6772056Z 
2025-01-17T11:31:46.6772360Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6772363Z 
2025-01-17T11:31:46.6773112Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-17T11:31:46.6773117Z 
2025-01-17T11:31:46.6773421Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6773436Z 
2025-01-17T11:31:46.6774125Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-17T11:31:46.6774129Z 
2025-01-17T11:31:46.6774427Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6774430Z 
2025-01-17T11:31:46.6775074Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-17T11:31:46.6775078Z 
2025-01-17T11:31:46.6775375Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6775378Z 
2025-01-17T11:31:46.6776032Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-17T11:31:46.6776036Z 
2025-01-17T11:31:46.6776342Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6776345Z 
2025-01-17T11:31:46.6776984Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-17T11:31:46.6776988Z 
2025-01-17T11:31:46.6777291Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6777295Z 
2025-01-17T11:31:46.6777920Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-17T11:31:46.6777928Z 
2025-01-17T11:31:46.6778237Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6778241Z 
2025-01-17T11:31:46.6778880Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-17T11:31:46.6778883Z 
2025-01-17T11:31:46.6779182Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6779185Z 
2025-01-17T11:31:46.6779870Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-17T11:31:46.6779874Z 
2025-01-17T11:31:46.6780171Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6780309Z 
2025-01-17T11:31:46.6781170Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-17T11:31:46.6781178Z 
2025-01-17T11:31:46.6781486Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6781490Z 
2025-01-17T11:31:46.6782127Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-17T11:31:46.6782132Z 
2025-01-17T11:31:46.6782430Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6782434Z 
2025-01-17T11:31:46.6783227Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-17T11:31:46.6783237Z 
2025-01-17T11:31:46.6783542Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6783545Z 
2025-01-17T11:31:46.6784182Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-17T11:31:46.6784186Z 
2025-01-17T11:31:46.6784490Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6784494Z 
2025-01-17T11:31:46.6785171Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-17T11:31:46.6785179Z 
2025-01-17T11:31:46.6785486Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6785490Z 
2025-01-17T11:31:46.6786123Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-17T11:31:46.6786127Z 
2025-01-17T11:31:46.6786431Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6786434Z 
2025-01-17T11:31:46.6787122Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-17T11:31:46.6787126Z 
2025-01-17T11:31:46.6787424Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6787431Z 
2025-01-17T11:31:46.6788069Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-17T11:31:46.6788074Z 
2025-01-17T11:31:46.6788328Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6788332Z 
2025-01-17T11:31:46.6788410Z     @wraps(func)
2025-01-17T11:31:46.6788490Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6788576Z         with self._recreate_cm():
2025-01-17T11:31:46.6788658Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6788742Z E           AssertionError: 
2025-01-17T11:31:46.6788849Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6788924Z E           
2025-01-17T11:31:46.6789018Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6789285Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6789509Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6789678Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6789769Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6789930Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6790017Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6790021Z 
2025-01-17T11:31:46.6790218Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6790443Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-17T11:31:46.6790447Z 
2025-01-17T11:31:46.6790705Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475a30>
2025-01-17T11:31:46.6791010Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6791335Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8154fcf230>
2025-01-17T11:31:46.6791615Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-17T11:31:46.6791620Z 
2025-01-17T11:31:46.6791712Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6791780Z         self,
2025-01-17T11:31:46.6791871Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6791962Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6792030Z         request,
2025-01-17T11:31:46.6792103Z     ):
2025-01-17T11:31:46.6792204Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6792382Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6792463Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6792734Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6792828Z             plot_object = getattr(
2025-01-17T11:31:46.6792954Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6793021Z             )
2025-01-17T11:31:46.6793117Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6793271Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6793378Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6793466Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6793591Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6793657Z                 )
2025-01-17T11:31:46.6793661Z 
2025-01-17T11:31:46.6793806Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6793912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6793916Z 
2025-01-17T11:31:46.6794388Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41760>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6794483Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6794739Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6794743Z 
2025-01-17T11:31:46.6794813Z     @wraps(func)
2025-01-17T11:31:46.6794897Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6794975Z         with self._recreate_cm():
2025-01-17T11:31:46.6795061Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6795141Z E           AssertionError: 
2025-01-17T11:31:46.6795243Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6795315Z E           
2025-01-17T11:31:46.6795411Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6795547Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6795889Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6796061Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6796142Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6796307Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6796385Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6796389Z 
2025-01-17T11:31:46.6796586Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6796801Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-17T11:31:46.6796805Z 
2025-01-17T11:31:46.6797067Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475af0>
2025-01-17T11:31:46.6797364Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6797697Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8154fcf770>
2025-01-17T11:31:46.6797964Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-17T11:31:46.6797967Z 
2025-01-17T11:31:46.6798062Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6798129Z         self,
2025-01-17T11:31:46.6798225Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6798309Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6798381Z         request,
2025-01-17T11:31:46.6798446Z     ):
2025-01-17T11:31:46.6798550Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6798721Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6798806Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6798969Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6799060Z             plot_object = getattr(
2025-01-17T11:31:46.6799183Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6799254Z             )
2025-01-17T11:31:46.6799347Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6799496Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6799601Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6799691Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6799815Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6799882Z                 )
2025-01-17T11:31:46.6799886Z 
2025-01-17T11:31:46.6800030Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6800139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6800142Z 
2025-01-17T11:31:46.6800607Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc20400>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6800708Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6800967Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6800972Z 
2025-01-17T11:31:46.6801042Z     @wraps(func)
2025-01-17T11:31:46.6801125Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6801203Z         with self._recreate_cm():
2025-01-17T11:31:46.6801292Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6801369Z E           AssertionError: 
2025-01-17T11:31:46.6801475Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6801543Z E           
2025-01-17T11:31:46.6801639Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6801772Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6801989Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6802240Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6802326Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6802484Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6802735Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6802742Z 
2025-01-17T11:31:46.6802957Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6803177Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-17T11:31:46.6803181Z 
2025-01-17T11:31:46.6803438Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475be0>
2025-01-17T11:31:46.6803740Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6804069Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170da6ae0>
2025-01-17T11:31:46.6804345Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-17T11:31:46.6804349Z 
2025-01-17T11:31:46.6804438Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6804510Z         self,
2025-01-17T11:31:46.6804600Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6804689Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6804758Z         request,
2025-01-17T11:31:46.6804828Z     ):
2025-01-17T11:31:46.6804928Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6805105Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6805186Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6805350Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6805442Z             plot_object = getattr(
2025-01-17T11:31:46.6805561Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6805633Z             )
2025-01-17T11:31:46.6805725Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6805882Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6805982Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6806075Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6806196Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6806270Z                 )
2025-01-17T11:31:46.6806275Z 
2025-01-17T11:31:46.6806416Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6806533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6806537Z 
2025-01-17T11:31:46.6806996Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc22ca0>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6807103Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6807352Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6807355Z 
2025-01-17T11:31:46.6807431Z     @wraps(func)
2025-01-17T11:31:46.6807509Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6807599Z         with self._recreate_cm():
2025-01-17T11:31:46.6807679Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6807764Z E           AssertionError: 
2025-01-17T11:31:46.6814382Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6814491Z E           
2025-01-17T11:31:46.6814602Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6814757Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6814886Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6815346Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6815445Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6815610Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6815697Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6815702Z 
2025-01-17T11:31:46.6815922Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6816147Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-17T11:31:46.6816151Z 
2025-01-17T11:31:46.6816418Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475cd0>
2025-01-17T11:31:46.6816718Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6817041Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8156ba53d0>
2025-01-17T11:31:46.6817323Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-17T11:31:46.6817328Z 
2025-01-17T11:31:46.6817422Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6817490Z         self,
2025-01-17T11:31:46.6817580Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6817673Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6817741Z         request,
2025-01-17T11:31:46.6817810Z     ):
2025-01-17T11:31:46.6817914Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6818095Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6818176Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6818352Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6818434Z             plot_object = getattr(
2025-01-17T11:31:46.6818566Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6818637Z             )
2025-01-17T11:31:46.6818739Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6818892Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6819000Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6819089Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6819215Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6819282Z                 )
2025-01-17T11:31:46.6819286Z 
2025-01-17T11:31:46.6819433Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6819542Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6819546Z 
2025-01-17T11:31:46.6820010Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc43f60>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6820121Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6820374Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6820378Z 
2025-01-17T11:31:46.6820451Z     @wraps(func)
2025-01-17T11:31:46.6820535Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6820615Z         with self._recreate_cm():
2025-01-17T11:31:46.6820701Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6820780Z E           AssertionError: 
2025-01-17T11:31:46.6820919Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6820993Z E           
2025-01-17T11:31:46.6821089Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6821229Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6821356Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6821693Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6821779Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6821944Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6822023Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6822027Z 
2025-01-17T11:31:46.6822227Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6822439Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-17T11:31:46.6822443Z 
2025-01-17T11:31:46.6822828Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475d90>
2025-01-17T11:31:46.6823141Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6823469Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8156ba7aa0>
2025-01-17T11:31:46.6823751Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-17T11:31:46.6823756Z 
2025-01-17T11:31:46.6823854Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6823920Z         self,
2025-01-17T11:31:46.6824015Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6824096Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6824172Z         request,
2025-01-17T11:31:46.6824236Z     ):
2025-01-17T11:31:46.6824341Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6824512Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6824595Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6824760Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6824843Z             plot_object = getattr(
2025-01-17T11:31:46.6824965Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6825040Z             )
2025-01-17T11:31:46.6825138Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6825291Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6825395Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6825484Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6825610Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6825677Z                 )
2025-01-17T11:31:46.6825681Z 
2025-01-17T11:31:46.6825826Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6825932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6825935Z 
2025-01-17T11:31:46.6826396Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc40900>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6826499Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6826752Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6826756Z 
2025-01-17T11:31:46.6826829Z     @wraps(func)
2025-01-17T11:31:46.6826911Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6826990Z         with self._recreate_cm():
2025-01-17T11:31:46.6827078Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6827158Z E           AssertionError: 
2025-01-17T11:31:46.6827266Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6827331Z E           
2025-01-17T11:31:46.6827434Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6827566Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6827697Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6827857Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6828188Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6828352Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6828435Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6828440Z 
2025-01-17T11:31:46.6828635Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6828853Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-17T11:31:46.6828857Z 
2025-01-17T11:31:46.6829114Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475e50>
2025-01-17T11:31:46.6829424Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6829738Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8169dfc9b0>
2025-01-17T11:31:46.6830023Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-17T11:31:46.6830027Z 
2025-01-17T11:31:46.6830114Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6830185Z         self,
2025-01-17T11:31:46.6830274Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6830361Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6830427Z         request,
2025-01-17T11:31:46.6830495Z     ):
2025-01-17T11:31:46.6830592Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6830774Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6830853Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6831023Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6831108Z             plot_object = getattr(
2025-01-17T11:31:46.6831224Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6831301Z             )
2025-01-17T11:31:46.6831395Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6831549Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6831647Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6831739Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6831858Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6831929Z                 )
2025-01-17T11:31:46.6831933Z 
2025-01-17T11:31:46.6832069Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6832178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6832181Z 
2025-01-17T11:31:46.6832740Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41b20>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6832847Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6833095Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6833100Z 
2025-01-17T11:31:46.6833175Z     @wraps(func)
2025-01-17T11:31:46.6833252Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6833336Z         with self._recreate_cm():
2025-01-17T11:31:46.6833416Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6833496Z E           AssertionError: 
2025-01-17T11:31:46.6833595Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6833664Z E           
2025-01-17T11:31:46.6833755Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6833890Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6834014Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6834178Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6834503Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6834669Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6834747Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6834751Z 
2025-01-17T11:31:46.6834947Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6835155Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-17T11:31:46.6835159Z 
2025-01-17T11:31:46.6835416Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475f10>
2025-01-17T11:31:46.6835712Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6836032Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81719fc800>
2025-01-17T11:31:46.6836309Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-17T11:31:46.6836313Z 
2025-01-17T11:31:46.6836404Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6836470Z         self,
2025-01-17T11:31:46.6836564Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6836645Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6836716Z         request,
2025-01-17T11:31:46.6836786Z     ):
2025-01-17T11:31:46.6836884Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6837056Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6837135Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6837300Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6837379Z             plot_object = getattr(
2025-01-17T11:31:46.6837500Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6837564Z             )
2025-01-17T11:31:46.6837662Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6837815Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6837917Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6838003Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6838125Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6838190Z                 )
2025-01-17T11:31:46.6838194Z 
2025-01-17T11:31:46.6838336Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6838441Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6838444Z 
2025-01-17T11:31:46.6838900Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc43ba0>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6838994Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6839256Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6839260Z 
2025-01-17T11:31:46.6839329Z     @wraps(func)
2025-01-17T11:31:46.6839421Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6839499Z         with self._recreate_cm():
2025-01-17T11:31:46.6839584Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6839663Z E           AssertionError: 
2025-01-17T11:31:46.6839767Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6839833Z E           
2025-01-17T11:31:46.6839926Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6840061Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6840182Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6840350Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6840518Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6840757Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6840838Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6840842Z 
2025-01-17T11:31:46.6841040Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6841260Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-17T11:31:46.6841264Z 
2025-01-17T11:31:46.6841525Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475fd0>
2025-01-17T11:31:46.6841819Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6842134Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170efa720>
2025-01-17T11:31:46.6842402Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-17T11:31:46.6842415Z 
2025-01-17T11:31:46.6842504Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6842747Z         self,
2025-01-17T11:31:46.6842885Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6842973Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6843045Z         request,
2025-01-17T11:31:46.6843108Z     ):
2025-01-17T11:31:46.6843211Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6843382Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6843466Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6843630Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6843713Z             plot_object = getattr(
2025-01-17T11:31:46.6843828Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6843897Z             )
2025-01-17T11:31:46.6843987Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6844156Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6844253Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6844345Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6844463Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6844530Z                 )
2025-01-17T11:31:46.6844539Z 
2025-01-17T11:31:46.6844677Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6844783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6844791Z 
2025-01-17T11:31:46.6845250Z args = (<function assert_allclose.<locals>.compare at 0x7f812bcea520>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6845349Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6845604Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6845608Z 
2025-01-17T11:31:46.6845682Z     @wraps(func)
2025-01-17T11:31:46.6845761Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6845844Z         with self._recreate_cm():
2025-01-17T11:31:46.6845924Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6846001Z E           AssertionError: 
2025-01-17T11:31:46.6846105Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6846171Z E           
2025-01-17T11:31:46.6846268Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6846398Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6846521Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6846679Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6846762Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6847150Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6847236Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6847240Z 
2025-01-17T11:31:46.6847433Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6847655Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-17T11:31:46.6847659Z 
2025-01-17T11:31:46.6847914Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476090>
2025-01-17T11:31:46.6848215Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6848528Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81766926c0>
2025-01-17T11:31:46.6848807Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-17T11:31:46.6848816Z 
2025-01-17T11:31:46.6848907Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6848978Z         self,
2025-01-17T11:31:46.6849065Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6849151Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6849218Z         request,
2025-01-17T11:31:46.6849286Z     ):
2025-01-17T11:31:46.6849385Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6849560Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6849639Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6849811Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6849890Z             plot_object = getattr(
2025-01-17T11:31:46.6850020Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6850086Z             )
2025-01-17T11:31:46.6850177Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6850339Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6850439Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6850532Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6850650Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6850721Z                 )
2025-01-17T11:31:46.6850725Z 
2025-01-17T11:31:46.6850861Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6850973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6850976Z 
2025-01-17T11:31:46.6851428Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc404a0>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6851528Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6851769Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6851781Z 
2025-01-17T11:31:46.6851855Z     @wraps(func)
2025-01-17T11:31:46.6851935Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6852020Z         with self._recreate_cm():
2025-01-17T11:31:46.6852101Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6852184Z E           AssertionError: 
2025-01-17T11:31:46.6852283Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6852354Z E           
2025-01-17T11:31:46.6852445Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6852687Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6852810Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6852975Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6853054Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6853343Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6853520Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6853525Z 
2025-01-17T11:31:46.6853723Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6853937Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-17T11:31:46.6853941Z 
2025-01-17T11:31:46.6854196Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476150>
2025-01-17T11:31:46.6854489Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6854806Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f817e8e8560>
2025-01-17T11:31:46.6855077Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-17T11:31:46.6855086Z 
2025-01-17T11:31:46.6855175Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6855245Z         self,
2025-01-17T11:31:46.6855337Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6855419Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6855491Z         request,
2025-01-17T11:31:46.6855555Z     ):
2025-01-17T11:31:46.6855651Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6855828Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6855906Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6856075Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6856154Z             plot_object = getattr(
2025-01-17T11:31:46.6856272Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6856337Z             )
2025-01-17T11:31:46.6856432Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6856582Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6856693Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6856779Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6856900Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6856965Z                 )
2025-01-17T11:31:46.6856969Z 
2025-01-17T11:31:46.6857109Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6857212Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6857216Z 
2025-01-17T11:31:46.6857670Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc20c20>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6857762Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6858012Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6858020Z 
2025-01-17T11:31:46.6858094Z     @wraps(func)
2025-01-17T11:31:46.6858175Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6858253Z         with self._recreate_cm():
2025-01-17T11:31:46.6858339Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6858416Z E           AssertionError: 
2025-01-17T11:31:46.6858520Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6858587Z E           
2025-01-17T11:31:46.6858682Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6858807Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6858931Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6859091Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6859170Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6859334Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6859597Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6859606Z 
2025-01-17T11:31:46.6859797Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6860010Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-17T11:31:46.6860019Z 
2025-01-17T11:31:46.6860272Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476210>
2025-01-17T11:31:46.6860574Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6860886Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8169dfde50>
2025-01-17T11:31:46.6861159Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-17T11:31:46.6861164Z 
2025-01-17T11:31:46.6861254Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6861325Z         self,
2025-01-17T11:31:46.6861416Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6861498Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6861571Z         request,
2025-01-17T11:31:46.6861634Z     ):
2025-01-17T11:31:46.6861737Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6861911Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6861993Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6862157Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6862240Z             plot_object = getattr(
2025-01-17T11:31:46.6862354Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6862423Z             )
2025-01-17T11:31:46.6862513Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6862787Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6862896Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6862993Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6863111Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6863185Z                 )
2025-01-17T11:31:46.6863189Z 
2025-01-17T11:31:46.6863323Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6863430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6863434Z 
2025-01-17T11:31:46.6863893Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41e40>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6863993Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6864239Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6864250Z 
2025-01-17T11:31:46.6864324Z     @wraps(func)
2025-01-17T11:31:46.6864406Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6864492Z         with self._recreate_cm():
2025-01-17T11:31:46.6864571Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6864654Z E           AssertionError: 
2025-01-17T11:31:46.6864754Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6864823Z E           
2025-01-17T11:31:46.6864913Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6865045Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6865168Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6865335Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6865414Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6865577Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6865780Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6865887Z 
2025-01-17T11:31:46.6866091Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6866309Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-17T11:31:46.6866313Z 
2025-01-17T11:31:46.6866577Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4762d0>
2025-01-17T11:31:46.6866876Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6867195Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814be32b70>
2025-01-17T11:31:46.6867463Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-17T11:31:46.6867467Z 
2025-01-17T11:31:46.6867556Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6867629Z         self,
2025-01-17T11:31:46.6867733Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6867817Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6867891Z         request,
2025-01-17T11:31:46.6867957Z     ):
2025-01-17T11:31:46.6868056Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6868230Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6868310Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6868479Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6868559Z             plot_object = getattr(
2025-01-17T11:31:46.6868679Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6868744Z             )
2025-01-17T11:31:46.6868841Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6868994Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6869102Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6869196Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6869319Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6869386Z                 )
2025-01-17T11:31:46.6869389Z 
2025-01-17T11:31:46.6869533Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6869639Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6869643Z 
2025-01-17T11:31:46.6870105Z args = (<function assert_allclose.<locals>.compare at 0x7f812bcea840>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6870200Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6870454Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6870462Z 
2025-01-17T11:31:46.6870532Z     @wraps(func)
2025-01-17T11:31:46.6870615Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6870698Z         with self._recreate_cm():
2025-01-17T11:31:46.6870791Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6870870Z E           AssertionError: 
2025-01-17T11:31:46.6870975Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6871042Z E           
2025-01-17T11:31:46.6871141Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6871270Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6871400Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6871561Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6871647Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6871810Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6871980Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6871989Z 
2025-01-17T11:31:46.6872252Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6872472Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-17T11:31:46.6872481Z 
2025-01-17T11:31:46.6872863Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476450>
2025-01-17T11:31:46.6873168Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6873486Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8172ba8dd0>
2025-01-17T11:31:46.6873761Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-17T11:31:46.6873765Z 
2025-01-17T11:31:46.6873851Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6873922Z         self,
2025-01-17T11:31:46.6874015Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6874102Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6874176Z         request,
2025-01-17T11:31:46.6874239Z     ):
2025-01-17T11:31:46.6874345Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6874515Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6874603Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6874766Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6874850Z             plot_object = getattr(
2025-01-17T11:31:46.6874965Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6875035Z             )
2025-01-17T11:31:46.6875125Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6875282Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6875381Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6875481Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6875603Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6875676Z                 )
2025-01-17T11:31:46.6875680Z 
2025-01-17T11:31:46.6875816Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6875927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6875931Z 
2025-01-17T11:31:46.6876384Z args = (<function assert_allclose.<locals>.compare at 0x7f812bceaf20>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6876486Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6876728Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6876733Z 
2025-01-17T11:31:46.6876806Z     @wraps(func)
2025-01-17T11:31:46.6876891Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6876983Z         with self._recreate_cm():
2025-01-17T11:31:46.6877063Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6877146Z E           AssertionError: 
2025-01-17T11:31:46.6877245Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6877312Z E           
2025-01-17T11:31:46.6877408Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6877538Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6877668Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6877828Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6877917Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6878076Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6878159Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6878287Z 
2025-01-17T11:31:46.6878580Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6878803Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-17T11:31:46.6878807Z 
2025-01-17T11:31:46.6879063Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476570>
2025-01-17T11:31:46.6879365Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6879679Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a81e80>
2025-01-17T11:31:46.6879952Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-17T11:31:46.6879956Z 
2025-01-17T11:31:46.6880042Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6880112Z         self,
2025-01-17T11:31:46.6880197Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6880287Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6880357Z         request,
2025-01-17T11:31:46.6880420Z     ):
2025-01-17T11:31:46.6880515Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6880688Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6880770Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6880938Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6881023Z             plot_object = getattr(
2025-01-17T11:31:46.6881144Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6881210Z             )
2025-01-17T11:31:46.6881304Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6881453Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6881555Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6881648Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6881771Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6881842Z                 )
2025-01-17T11:31:46.6881847Z 
2025-01-17T11:31:46.6881983Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6882090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6882094Z 
2025-01-17T11:31:46.6882697Z args = (<function assert_allclose.<locals>.compare at 0x7f812bce8fe0>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6882835Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6883088Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6883093Z 
2025-01-17T11:31:46.6883163Z     @wraps(func)
2025-01-17T11:31:46.6883239Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6883328Z         with self._recreate_cm():
2025-01-17T11:31:46.6883413Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6883497Z E           AssertionError: 
2025-01-17T11:31:46.6883596Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6883666Z E           
2025-01-17T11:31:46.6883758Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6883893Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6884018Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6884181Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6884260Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6884427Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6884505Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6884649Z 
2025-01-17T11:31:46.6884984Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6885183Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-17T11:31:46.6885186Z 
2025-01-17T11:31:46.6885449Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475550>
2025-01-17T11:31:46.6885754Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a836b0>
2025-01-17T11:31:46.6885849Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6885931Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6886033Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6886163Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6886374Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6886614Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-17T11:31:46.6886623Z 
2025-01-17T11:31:46.6886717Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6886880Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6886952Z     ):
2025-01-17T11:31:46.6887043Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6887149Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6887317Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6887388Z     
2025-01-17T11:31:46.6887491Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6887582Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6887725Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6887829Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6887901Z             )
2025-01-17T11:31:46.6887965Z     
2025-01-17T11:31:46.6888068Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6888179Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6888264Z             if data.stackgroup:
2025-01-17T11:31:46.6888335Z                 assert (
2025-01-17T11:31:46.6888419Z                     data.stackgroup
2025-01-17T11:31:46.6888489Z                     == getattr(
2025-01-17T11:31:46.6888595Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6888686Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6888763Z                     ).decode()
2025-01-17T11:31:46.6888830Z                 )
2025-01-17T11:31:46.6888903Z             if data.name:
2025-01-17T11:31:46.6888978Z                 assert (
2025-01-17T11:31:46.6889054Z                     data.name
2025-01-17T11:31:46.6889129Z                     == getattr(
2025-01-17T11:31:46.6889228Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6889318Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6889396Z                     ).decode()
2025-01-17T11:31:46.6889471Z                 )
2025-01-17T11:31:46.6889561Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6889688Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6889756Z             )
2025-01-17T11:31:46.6889843Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6889956Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6890025Z             )
2025-01-17T11:31:46.6890029Z 
2025-01-17T11:31:46.6890168Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6890285Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6890288Z 
2025-01-17T11:31:46.6890747Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc49620>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6890948Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6891277Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6891282Z 
2025-01-17T11:31:46.6891360Z     @wraps(func)
2025-01-17T11:31:46.6891437Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6891520Z         with self._recreate_cm():
2025-01-17T11:31:46.6891600Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6891684Z E           AssertionError: 
2025-01-17T11:31:46.6891787Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6891852Z E           
2025-01-17T11:31:46.6891949Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6892084Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6892210Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6892373Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6892469Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6892742Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6892826Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6892830Z 
2025-01-17T11:31:46.6893031Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6893232Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-17T11:31:46.6893236Z 
2025-01-17T11:31:46.6893497Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476960>
2025-01-17T11:31:46.6893808Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170a09f40>
2025-01-17T11:31:46.6893900Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6893986Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6894087Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6894187Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6894383Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6894622Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-17T11:31:46.6894625Z 
2025-01-17T11:31:46.6894706Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6894870Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6894936Z     ):
2025-01-17T11:31:46.6895031Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6895131Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6895303Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6895367Z     
2025-01-17T11:31:46.6895472Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6895561Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6895709Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6895807Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6895880Z             )
2025-01-17T11:31:46.6895944Z     
2025-01-17T11:31:46.6896037Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6896140Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6896220Z             if data.stackgroup:
2025-01-17T11:31:46.6896294Z                 assert (
2025-01-17T11:31:46.6896370Z                     data.stackgroup
2025-01-17T11:31:46.6896445Z                     == getattr(
2025-01-17T11:31:46.6896545Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6896640Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6896711Z                     ).decode()
2025-01-17T11:31:46.6896781Z                 )
2025-01-17T11:31:46.6896853Z             if data.name:
2025-01-17T11:31:46.6897052Z                 assert (
2025-01-17T11:31:46.6897223Z                     data.name
2025-01-17T11:31:46.6897301Z                     == getattr(
2025-01-17T11:31:46.6897397Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6897480Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6897559Z                     ).decode()
2025-01-17T11:31:46.6897625Z                 )
2025-01-17T11:31:46.6897716Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6897834Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6897904Z             )
2025-01-17T11:31:46.6897987Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6898104Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6898170Z             )
2025-01-17T11:31:46.6898174Z 
2025-01-17T11:31:46.6898317Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6898423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6898432Z 
2025-01-17T11:31:46.6898900Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4b1a0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6898997Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6899251Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6899255Z 
2025-01-17T11:31:46.6899325Z     @wraps(func)
2025-01-17T11:31:46.6899406Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6899484Z         with self._recreate_cm():
2025-01-17T11:31:46.6899568Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6899644Z E           AssertionError: 
2025-01-17T11:31:46.6899747Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6899813Z E           
2025-01-17T11:31:46.6899914Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6900050Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6900178Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6900337Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6900423Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6900581Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6900663Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6900667Z 
2025-01-17T11:31:46.6900865Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6901069Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-17T11:31:46.6901072Z 
2025-01-17T11:31:46.6901334Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476db0>
2025-01-17T11:31:46.6901654Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8154fc43e0>
2025-01-17T11:31:46.6901742Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6901828Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6901924Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6902013Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6902213Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6902448Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-17T11:31:46.6902457Z 
2025-01-17T11:31:46.6902632Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6902792Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6902862Z     ):
2025-01-17T11:31:46.6902950Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6903179Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6903456Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6903527Z     
2025-01-17T11:31:46.6903628Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6903720Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6903857Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6903960Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6904025Z             )
2025-01-17T11:31:46.6904095Z     
2025-01-17T11:31:46.6904187Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6904292Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6904370Z             if data.stackgroup:
2025-01-17T11:31:46.6904442Z                 assert (
2025-01-17T11:31:46.6904519Z                     data.stackgroup
2025-01-17T11:31:46.6904587Z                     == getattr(
2025-01-17T11:31:46.6904697Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6904790Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6904866Z                     ).decode()
2025-01-17T11:31:46.6904931Z                 )
2025-01-17T11:31:46.6905007Z             if data.name:
2025-01-17T11:31:46.6905074Z                 assert (
2025-01-17T11:31:46.6905151Z                     data.name
2025-01-17T11:31:46.6905220Z                     == getattr(
2025-01-17T11:31:46.6905320Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6905403Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6905476Z                     ).decode()
2025-01-17T11:31:46.6905540Z                 )
2025-01-17T11:31:46.6905629Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6905745Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6905811Z             )
2025-01-17T11:31:46.6905908Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6906024Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6906096Z             )
2025-01-17T11:31:46.6906100Z 
2025-01-17T11:31:46.6906237Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6906345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6906349Z 
2025-01-17T11:31:46.6906804Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc498a0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6906903Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6907151Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6907159Z 
2025-01-17T11:31:46.6907230Z     @wraps(func)
2025-01-17T11:31:46.6907306Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6907395Z         with self._recreate_cm():
2025-01-17T11:31:46.6907483Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6907564Z E           AssertionError: 
2025-01-17T11:31:46.6907667Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6907739Z E           
2025-01-17T11:31:46.6907828Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6907968Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6908089Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6908254Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6908334Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6908497Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6908575Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6908579Z 
2025-01-17T11:31:46.6908869Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6909136Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-17T11:31:46.6909140Z 
2025-01-17T11:31:46.6909407Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476e70>
2025-01-17T11:31:46.6909710Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170a095b0>
2025-01-17T11:31:46.6909803Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6909884Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6909983Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6910072Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6910272Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6910505Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-17T11:31:46.6910516Z 
2025-01-17T11:31:46.6910600Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6910764Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6910835Z     ):
2025-01-17T11:31:46.6910929Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6911036Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6911199Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6911263Z     
2025-01-17T11:31:46.6911368Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6911456Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6911593Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6911691Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6911760Z             )
2025-01-17T11:31:46.6911823Z     
2025-01-17T11:31:46.6911919Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6912022Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6912108Z             if data.stackgroup:
2025-01-17T11:31:46.6912182Z                 assert (
2025-01-17T11:31:46.6912264Z                     data.stackgroup
2025-01-17T11:31:46.6912333Z                     == getattr(
2025-01-17T11:31:46.6912434Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6912523Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6912702Z                     ).decode()
2025-01-17T11:31:46.6912769Z                 )
2025-01-17T11:31:46.6912839Z             if data.name:
2025-01-17T11:31:46.6912914Z                 assert (
2025-01-17T11:31:46.6912983Z                     data.name
2025-01-17T11:31:46.6913058Z                     == getattr(
2025-01-17T11:31:46.6913153Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6913241Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6913318Z                     ).decode()
2025-01-17T11:31:46.6913388Z                 )
2025-01-17T11:31:46.6913476Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6913597Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6913664Z             )
2025-01-17T11:31:46.6913750Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6913861Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6913931Z             )
2025-01-17T11:31:46.6913935Z 
2025-01-17T11:31:46.6914071Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6914182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6914185Z 
2025-01-17T11:31:46.6914640Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4a5c0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6914737Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6915208Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6915212Z 
2025-01-17T11:31:46.6915289Z     @wraps(func)
2025-01-17T11:31:46.6915365Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6915449Z         with self._recreate_cm():
2025-01-17T11:31:46.6915530Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6915613Z E           AssertionError: 
2025-01-17T11:31:46.6915710Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6915777Z E           
2025-01-17T11:31:46.6915871Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6916002Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6916126Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6916285Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6916375Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6916539Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6916623Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6916627Z 
2025-01-17T11:31:46.6916819Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6917018Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-17T11:31:46.6917022Z 
2025-01-17T11:31:46.6917278Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475310>
2025-01-17T11:31:46.6917590Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a8b9e0>
2025-01-17T11:31:46.6917678Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6917763Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6917858Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6917959Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6918156Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6918393Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-17T11:31:46.6918396Z 
2025-01-17T11:31:46.6918475Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6918640Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6918707Z     ):
2025-01-17T11:31:46.6918800Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6918898Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6919069Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6919131Z     
2025-01-17T11:31:46.6919237Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6919326Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6919468Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6919571Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6919638Z             )
2025-01-17T11:31:46.6919708Z     
2025-01-17T11:31:46.6919800Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6919904Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6919983Z             if data.stackgroup:
2025-01-17T11:31:46.6920058Z                 assert (
2025-01-17T11:31:46.6920133Z                     data.stackgroup
2025-01-17T11:31:46.6920208Z                     == getattr(
2025-01-17T11:31:46.6920305Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6920397Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6920468Z                     ).decode()
2025-01-17T11:31:46.6920537Z                 )
2025-01-17T11:31:46.6920609Z             if data.name:
2025-01-17T11:31:46.6920839Z                 assert (
2025-01-17T11:31:46.6920937Z                     data.name
2025-01-17T11:31:46.6921096Z                     == getattr(
2025-01-17T11:31:46.6921194Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6921278Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6921352Z                     ).decode()
2025-01-17T11:31:46.6921417Z                 )
2025-01-17T11:31:46.6921506Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6921622Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6921692Z             )
2025-01-17T11:31:46.6921775Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6921895Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6921959Z             )
2025-01-17T11:31:46.6921963Z 
2025-01-17T11:31:46.6922103Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6922209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6922219Z 
2025-01-17T11:31:46.6922886Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4aca0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6922985Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6923237Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6923241Z 
2025-01-17T11:31:46.6923310Z     @wraps(func)
2025-01-17T11:31:46.6923392Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6923470Z         with self._recreate_cm():
2025-01-17T11:31:46.6923559Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6923637Z E           AssertionError: 
2025-01-17T11:31:46.6923743Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6923809Z E           
2025-01-17T11:31:46.6923907Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6924048Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6924181Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6924338Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6924422Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6924579Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6924657Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6924666Z 
2025-01-17T11:31:46.6924858Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6925051Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-17T11:31:46.6925060Z 
2025-01-17T11:31:46.6925317Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4748c0>
2025-01-17T11:31:46.6925636Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a88470>
2025-01-17T11:31:46.6925725Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6925808Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6925907Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6925997Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6926199Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6926429Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-17T11:31:46.6926433Z 
2025-01-17T11:31:46.6926517Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6926675Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6926746Z     ):
2025-01-17T11:31:46.6926833Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6926937Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6927347Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6927422Z     
2025-01-17T11:31:46.6927524Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6927616Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6927750Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6927855Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6927922Z             )
2025-01-17T11:31:46.6927991Z     
2025-01-17T11:31:46.6928086Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6928189Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6928269Z             if data.stackgroup:
2025-01-17T11:31:46.6928338Z                 assert (
2025-01-17T11:31:46.6928420Z                     data.stackgroup
2025-01-17T11:31:46.6928491Z                     == getattr(
2025-01-17T11:31:46.6928601Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6928694Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6928770Z                     ).decode()
2025-01-17T11:31:46.6928839Z                 )
2025-01-17T11:31:46.6928915Z             if data.name:
2025-01-17T11:31:46.6928983Z                 assert (
2025-01-17T11:31:46.6929059Z                     data.name
2025-01-17T11:31:46.6929128Z                     == getattr(
2025-01-17T11:31:46.6929227Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6929311Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6929385Z                     ).decode()
2025-01-17T11:31:46.6929452Z                 )
2025-01-17T11:31:46.6929540Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6929655Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6929719Z             )
2025-01-17T11:31:46.6929807Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6929934Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6930005Z             )
2025-01-17T11:31:46.6930010Z 
2025-01-17T11:31:46.6930146Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6930258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6930262Z 
2025-01-17T11:31:46.6930716Z args = (<function assert_allclose.<locals>.compare at 0x7f812bceafc0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6930814Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6931066Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6931070Z 
2025-01-17T11:31:46.6931147Z     @wraps(func)
2025-01-17T11:31:46.6931223Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6931311Z         with self._recreate_cm():
2025-01-17T11:31:46.6931394Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6931482Z E           AssertionError: 
2025-01-17T11:31:46.6931581Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6931652Z E           
2025-01-17T11:31:46.6931745Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6931879Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6932005Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6932171Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6932252Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6932415Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6932492Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6932496Z 
2025-01-17T11:31:46.6932794Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6933296Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-17T11:31:46.6933301Z 
2025-01-17T11:31:46.6933569Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4771a0>
2025-01-17T11:31:46.6933875Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814ef44d40>
2025-01-17T11:31:46.6933969Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6934049Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6934148Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6934236Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6934437Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6934668Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-17T11:31:46.6934678Z 
2025-01-17T11:31:46.6934762Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6934926Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6934995Z     ):
2025-01-17T11:31:46.6935083Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6935182Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6935350Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6935414Z     
2025-01-17T11:31:46.6935519Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6935607Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6935745Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6935842Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6935913Z             )
2025-01-17T11:31:46.6935976Z     
2025-01-17T11:31:46.6936077Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6936180Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6936267Z             if data.stackgroup:
2025-01-17T11:31:46.6936336Z                 assert (
2025-01-17T11:31:46.6936418Z                     data.stackgroup
2025-01-17T11:31:46.6936488Z                     == getattr(
2025-01-17T11:31:46.6936589Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6936675Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6936747Z                     ).decode()
2025-01-17T11:31:46.6936818Z                 )
2025-01-17T11:31:46.6936889Z             if data.name:
2025-01-17T11:31:46.6936962Z                 assert (
2025-01-17T11:31:46.6937033Z                     data.name
2025-01-17T11:31:46.6937108Z                     == getattr(
2025-01-17T11:31:46.6937201Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6937291Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6937362Z                     ).decode()
2025-01-17T11:31:46.6937437Z                 )
2025-01-17T11:31:46.6937527Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6937647Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6937713Z             )
2025-01-17T11:31:46.6937800Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6937914Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6937986Z             )
2025-01-17T11:31:46.6937992Z 
2025-01-17T11:31:46.6938128Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6938238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6938242Z 
2025-01-17T11:31:46.6938696Z args = (<function assert_allclose.<locals>.compare at 0x7f81706599e0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6938795Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6939208Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6939213Z 
2025-01-17T11:31:46.6939289Z     @wraps(func)
2025-01-17T11:31:46.6939366Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6939453Z         with self._recreate_cm():
2025-01-17T11:31:46.6939536Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6939615Z E           AssertionError: 
2025-01-17T11:31:46.6939720Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6939785Z E           
2025-01-17T11:31:46.6939883Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6940014Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6940142Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6940300Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6940389Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6940554Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6940639Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6940643Z 
2025-01-17T11:31:46.6940834Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6941036Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-17T11:31:46.6941040Z 
2025-01-17T11:31:46.6941297Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477260>
2025-01-17T11:31:46.6941607Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f812bb81100>
2025-01-17T11:31:46.6941698Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6941784Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6941878Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6941976Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6942177Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6942416Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-17T11:31:46.6942420Z 
2025-01-17T11:31:46.6942501Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6942761Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6942827Z     ):
2025-01-17T11:31:46.6942920Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6943019Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6943188Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6943251Z     
2025-01-17T11:31:46.6943357Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6943446Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6943589Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6943695Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6943760Z             )
2025-01-17T11:31:46.6943827Z     
2025-01-17T11:31:46.6943921Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6944022Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6944101Z             if data.stackgroup:
2025-01-17T11:31:46.6944175Z                 assert (
2025-01-17T11:31:46.6944251Z                     data.stackgroup
2025-01-17T11:31:46.6944325Z                     == getattr(
2025-01-17T11:31:46.6944423Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6944516Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6944588Z                     ).decode()
2025-01-17T11:31:46.6944658Z                 )
2025-01-17T11:31:46.6944729Z             if data.name:
2025-01-17T11:31:46.6944802Z                 assert (
2025-01-17T11:31:46.6944996Z                     data.name
2025-01-17T11:31:46.6945179Z                     == getattr(
2025-01-17T11:31:46.6945284Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6945367Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6945441Z                     ).decode()
2025-01-17T11:31:46.6945506Z                 )
2025-01-17T11:31:46.6945595Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6945713Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6945782Z             )
2025-01-17T11:31:46.6945864Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6945984Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6946050Z             )
2025-01-17T11:31:46.6946056Z 
2025-01-17T11:31:46.6946198Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6946302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6946313Z 
2025-01-17T11:31:46.6946776Z args = (<function assert_allclose.<locals>.compare at 0x7f8170658720>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6946870Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6947124Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6947128Z 
2025-01-17T11:31:46.6947198Z     @wraps(func)
2025-01-17T11:31:46.6947279Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6947357Z         with self._recreate_cm():
2025-01-17T11:31:46.6947442Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6947519Z E           AssertionError: 
2025-01-17T11:31:46.6947622Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6947687Z E           
2025-01-17T11:31:46.6947784Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6947923Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6948047Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6948208Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6948287Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6948449Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6948527Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6948530Z 
2025-01-17T11:31:46.6948728Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6948920Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-17T11:31:46.6948929Z 
2025-01-17T11:31:46.6949185Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477320>
2025-01-17T11:31:46.6949500Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f812bb80830>
2025-01-17T11:31:46.6949595Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6949676Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6949784Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6949880Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6950091Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6950325Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-17T11:31:46.6950329Z 
2025-01-17T11:31:46.6950417Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6950576Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6950648Z     ):
2025-01-17T11:31:46.6950740Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6950845Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6951190Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6951263Z     
2025-01-17T11:31:46.6951366Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6951465Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6951600Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6951704Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6951770Z             )
2025-01-17T11:31:46.6951840Z     
2025-01-17T11:31:46.6951934Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6952044Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6952122Z             if data.stackgroup:
2025-01-17T11:31:46.6952192Z                 assert (
2025-01-17T11:31:46.6952275Z                     data.stackgroup
2025-01-17T11:31:46.6952345Z                     == getattr(
2025-01-17T11:31:46.6952448Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6952643Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6952723Z                     ).decode()
2025-01-17T11:31:46.6952787Z                 )
2025-01-17T11:31:46.6952864Z             if data.name:
2025-01-17T11:31:46.6952932Z                 assert (
2025-01-17T11:31:46.6953007Z                     data.name
2025-01-17T11:31:46.6953077Z                     == getattr(
2025-01-17T11:31:46.6953180Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6953266Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6953343Z                     ).decode()
2025-01-17T11:31:46.6953408Z                 )
2025-01-17T11:31:46.6953495Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6953621Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6953690Z             )
2025-01-17T11:31:46.6953781Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6953900Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6953974Z             )
2025-01-17T11:31:46.6953979Z 
2025-01-17T11:31:46.6954116Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6954227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6954230Z 
2025-01-17T11:31:46.6954686Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc425c0>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6954784Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6955034Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6955037Z 
2025-01-17T11:31:46.6955111Z     @wraps(func)
2025-01-17T11:31:46.6955190Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6955276Z         with self._recreate_cm():
2025-01-17T11:31:46.6955361Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6955449Z E           AssertionError: 
2025-01-17T11:31:46.6955549Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6955619Z E           
2025-01-17T11:31:46.6955710Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6955847Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6955967Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6956138Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6956216Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6956383Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6956463Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6956466Z 
2025-01-17T11:31:46.6956666Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6957080Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-17T11:31:46.6957084Z 
2025-01-17T11:31:46.6957355Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4773e0>
2025-01-17T11:31:46.6957657Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170e28560>
2025-01-17T11:31:46.6957750Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6957833Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6957932Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6958024Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6958225Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6958458Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-17T11:31:46.6958462Z 
2025-01-17T11:31:46.6958554Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6958718Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6958789Z     ):
2025-01-17T11:31:46.6958880Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6958979Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6959154Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6959218Z     
2025-01-17T11:31:46.6959327Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6959415Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6959556Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6959656Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6959728Z             )
2025-01-17T11:31:46.6959794Z     
2025-01-17T11:31:46.6959895Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6959992Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6960086Z             if data.stackgroup:
2025-01-17T11:31:46.6960160Z                 assert (
2025-01-17T11:31:46.6960245Z                     data.stackgroup
2025-01-17T11:31:46.6960316Z                     == getattr(
2025-01-17T11:31:46.6960418Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6960509Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6960580Z                     ).decode()
2025-01-17T11:31:46.6960653Z                 )
2025-01-17T11:31:46.6960726Z             if data.name:
2025-01-17T11:31:46.6960804Z                 assert (
2025-01-17T11:31:46.6960877Z                     data.name
2025-01-17T11:31:46.6960956Z                     == getattr(
2025-01-17T11:31:46.6961051Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6961141Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6961211Z                     ).decode()
2025-01-17T11:31:46.6961290Z                 )
2025-01-17T11:31:46.6961380Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6961507Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6961572Z             )
2025-01-17T11:31:46.6961662Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6961777Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6961844Z             )
2025-01-17T11:31:46.6961854Z 
2025-01-17T11:31:46.6961992Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6962096Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6962106Z 
2025-01-17T11:31:46.6962725Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc49580>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6962852Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6963340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6963345Z 
2025-01-17T11:31:46.6963424Z     @wraps(func)
2025-01-17T11:31:46.6963501Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6963587Z         with self._recreate_cm():
2025-01-17T11:31:46.6963671Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6963748Z E           AssertionError: 
2025-01-17T11:31:46.6963854Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6963923Z E           
2025-01-17T11:31:46.6964019Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6964151Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6964282Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6964444Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6964530Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6964704Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6964787Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6964791Z 
2025-01-17T11:31:46.6964984Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6965183Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-17T11:31:46.6965186Z 
2025-01-17T11:31:46.6965443Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4774a0>
2025-01-17T11:31:46.6965753Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81761d0e90>
2025-01-17T11:31:46.6965841Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6965927Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6966022Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6966123Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6966325Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6966567Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-17T11:31:46.6966571Z 
2025-01-17T11:31:46.6966650Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6966814Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6966878Z     ):
2025-01-17T11:31:46.6966972Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6967071Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6967241Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6967304Z     
2025-01-17T11:31:46.6967411Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6967499Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6967634Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6967748Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6967813Z             )
2025-01-17T11:31:46.6967883Z     
2025-01-17T11:31:46.6967976Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6968083Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6968161Z             if data.stackgroup:
2025-01-17T11:31:46.6968236Z                 assert (
2025-01-17T11:31:46.6968315Z                     data.stackgroup
2025-01-17T11:31:46.6968391Z                     == getattr(
2025-01-17T11:31:46.6968490Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6968588Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6968659Z                     ).decode()
2025-01-17T11:31:46.6968732Z                 )
2025-01-17T11:31:46.6968804Z             if data.name:
2025-01-17T11:31:46.6968883Z                 assert (
2025-01-17T11:31:46.6969044Z                     data.name
2025-01-17T11:31:46.6969116Z                     == getattr(
2025-01-17T11:31:46.6969297Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6969384Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6969464Z                     ).decode()
2025-01-17T11:31:46.6969529Z                 )
2025-01-17T11:31:46.6969624Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6969742Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6969812Z             )
2025-01-17T11:31:46.6969901Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6970020Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6970088Z             )
2025-01-17T11:31:46.6970092Z 
2025-01-17T11:31:46.6970238Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6970346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6970355Z 
2025-01-17T11:31:46.6970818Z args = (<function assert_allclose.<locals>.compare at 0x7f817065a5c0>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6970912Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6971169Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6971173Z 
2025-01-17T11:31:46.6971245Z     @wraps(func)
2025-01-17T11:31:46.6971331Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6971411Z         with self._recreate_cm():
2025-01-17T11:31:46.6971500Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6971581Z E           AssertionError: 
2025-01-17T11:31:46.6971685Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6971753Z E           
2025-01-17T11:31:46.6971845Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6971991Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6972118Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6972286Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6972368Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6972633Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6972715Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6972720Z 
2025-01-17T11:31:46.6972923Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6973118Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-17T11:31:46.6973122Z 
2025-01-17T11:31:46.6973388Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477560>
2025-01-17T11:31:46.6973693Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171bc6e40>
2025-01-17T11:31:46.6973799Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6973881Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6973983Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6974076Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6974276Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6974512Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-17T11:31:46.6974516Z 
2025-01-17T11:31:46.6974603Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6974761Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6974831Z     ):
2025-01-17T11:31:46.6974918Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6975023Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6975326Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6975494Z     
2025-01-17T11:31:46.6975599Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6975697Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6975829Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6975931Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6975997Z             )
2025-01-17T11:31:46.6976068Z     
2025-01-17T11:31:46.6976161Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6976258Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6976345Z             if data.stackgroup:
2025-01-17T11:31:46.6976416Z                 assert (
2025-01-17T11:31:46.6976499Z                     data.stackgroup
2025-01-17T11:31:46.6976568Z                     == getattr(
2025-01-17T11:31:46.6976671Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6976764Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6976845Z                     ).decode()
2025-01-17T11:31:46.6976911Z                 )
2025-01-17T11:31:46.6976990Z             if data.name:
2025-01-17T11:31:46.6977058Z                 assert (
2025-01-17T11:31:46.6977136Z                     data.name
2025-01-17T11:31:46.6977207Z                     == getattr(
2025-01-17T11:31:46.6977311Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6977394Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6977474Z                     ).decode()
2025-01-17T11:31:46.6977539Z                 )
2025-01-17T11:31:46.6977623Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6977748Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6977814Z             )
2025-01-17T11:31:46.6977904Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6978022Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6978095Z             )
2025-01-17T11:31:46.6978104Z 
2025-01-17T11:31:46.6978242Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6978355Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6978358Z 
2025-01-17T11:31:46.6978815Z args = (<function assert_allclose.<locals>.compare at 0x7f8170658a40>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6978913Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6979161Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6979166Z 
2025-01-17T11:31:46.6979246Z     @wraps(func)
2025-01-17T11:31:46.6979324Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6979413Z         with self._recreate_cm():
2025-01-17T11:31:46.6979501Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6979590Z E           AssertionError: 
2025-01-17T11:31:46.6979688Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6979763Z E           
2025-01-17T11:31:46.6979852Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6979992Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6980113Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6980282Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6980364Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6980531Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6980609Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6980612Z 
2025-01-17T11:31:46.6980815Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6981179Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-17T11:31:46.6981183Z 
2025-01-17T11:31:46.6981451Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477620>
2025-01-17T11:31:46.6981762Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81761d12e0>
2025-01-17T11:31:46.6981859Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6981941Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6982043Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6982133Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6982336Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6982665Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-17T11:31:46.6982669Z 
2025-01-17T11:31:46.6982771Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6982938Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6983004Z     ):
2025-01-17T11:31:46.6983102Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6983201Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6983370Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6983435Z     
2025-01-17T11:31:46.6983543Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6983633Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6983773Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6983872Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6983950Z             )
2025-01-17T11:31:46.6984012Z     
2025-01-17T11:31:46.6984107Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6984204Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6984297Z             if data.stackgroup:
2025-01-17T11:31:46.6984369Z                 assert (
2025-01-17T11:31:46.6984452Z                     data.stackgroup
2025-01-17T11:31:46.6984523Z                     == getattr(
2025-01-17T11:31:46.6984620Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6984718Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6984793Z                     ).decode()
2025-01-17T11:31:46.6984865Z                 )
2025-01-17T11:31:46.6984936Z             if data.name:
2025-01-17T11:31:46.6985013Z                 assert (
2025-01-17T11:31:46.6985083Z                     data.name
2025-01-17T11:31:46.6985161Z                     == getattr(
2025-01-17T11:31:46.6985255Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6985345Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6985415Z                     ).decode()
2025-01-17T11:31:46.6985489Z                 )
2025-01-17T11:31:46.6985578Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6985706Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6985771Z             )
2025-01-17T11:31:46.6985861Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6985976Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6986040Z             )
2025-01-17T11:31:46.6986044Z 
2025-01-17T11:31:46.6986186Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6986290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6986299Z 
2025-01-17T11:31:46.6986755Z args = (<function assert_allclose.<locals>.compare at 0x7f817065b880>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.6986854Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6987325Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6987332Z 
2025-01-17T11:31:46.6987410Z     @wraps(func)
2025-01-17T11:31:46.6987486Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6987567Z         with self._recreate_cm():
2025-01-17T11:31:46.6987654Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6987731Z E           AssertionError: 
2025-01-17T11:31:46.6987837Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6987905Z E           
2025-01-17T11:31:46.6988005Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6988136Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.6988267Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6988429Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6988516Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6988688Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6988774Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6988779Z 
2025-01-17T11:31:46.6988974Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6989178Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-17T11:31:46.6989181Z 
2025-01-17T11:31:46.6989437Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4776e0>
2025-01-17T11:31:46.6989747Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81719d3dd0>
2025-01-17T11:31:46.6989834Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6989921Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6990014Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6990111Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6990317Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6990561Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-17T11:31:46.6990564Z 
2025-01-17T11:31:46.6990646Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6990810Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6990874Z     ):
2025-01-17T11:31:46.6990968Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6991069Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6991239Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6991303Z     
2025-01-17T11:31:46.6991404Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6991504Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6991638Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6991760Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6991829Z             )
2025-01-17T11:31:46.6991903Z     
2025-01-17T11:31:46.6991999Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6992107Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6992187Z             if data.stackgroup:
2025-01-17T11:31:46.6995657Z                 assert (
2025-01-17T11:31:46.6995775Z                     data.stackgroup
2025-01-17T11:31:46.6995851Z                     == getattr(
2025-01-17T11:31:46.6995969Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6996067Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6996146Z                     ).decode()
2025-01-17T11:31:46.6996212Z                 )
2025-01-17T11:31:46.6996290Z             if data.name:
2025-01-17T11:31:46.6996360Z                 assert (
2025-01-17T11:31:46.6996436Z                     data.name
2025-01-17T11:31:46.6996679Z                     == getattr(
2025-01-17T11:31:46.6996918Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6997011Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6997083Z                     ).decode()
2025-01-17T11:31:46.6997154Z                 )
2025-01-17T11:31:46.6997245Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6997386Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6997451Z             )
2025-01-17T11:31:46.6997542Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6997657Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6997727Z             )
2025-01-17T11:31:46.6997732Z 
2025-01-17T11:31:46.6997882Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6998001Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6998011Z 
2025-01-17T11:31:46.6998489Z args = (<function assert_allclose.<locals>.compare at 0x7f812bceafc0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.6998594Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6998850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6998854Z 
2025-01-17T11:31:46.6998931Z     @wraps(func)
2025-01-17T11:31:46.6999009Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6999094Z         with self._recreate_cm():
2025-01-17T11:31:46.6999176Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6999261Z E           AssertionError: 
2025-01-17T11:31:46.6999364Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6999436Z E           
2025-01-17T11:31:46.6999530Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6999676Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.6999806Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6999977Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7000061Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7000228Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7000307Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7000310Z 
2025-01-17T11:31:46.7000522Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.7000724Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-17T11:31:46.7000729Z 
2025-01-17T11:31:46.7001003Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4777a0>
2025-01-17T11:31:46.7001311Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a55010>
2025-01-17T11:31:46.7001414Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.7001494Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.7001599Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.7001695Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.7001898Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.7002142Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-17T11:31:46.7002147Z 
2025-01-17T11:31:46.7002234Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.7002396Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.7002461Z     ):
2025-01-17T11:31:46.7002735Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.7002906Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.7003218Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.7003283Z     
2025-01-17T11:31:46.7003495Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.7003589Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.7003733Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.7003833Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.7003904Z             )
2025-01-17T11:31:46.7003965Z     
2025-01-17T11:31:46.7004063Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.7004162Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.7004246Z             if data.stackgroup:
2025-01-17T11:31:46.7004317Z                 assert (
2025-01-17T11:31:46.7004400Z                     data.stackgroup
2025-01-17T11:31:46.7004469Z                     == getattr(
2025-01-17T11:31:46.7004574Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7004674Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.7004752Z                     ).decode()
2025-01-17T11:31:46.7004826Z                 )
2025-01-17T11:31:46.7004899Z             if data.name:
2025-01-17T11:31:46.7004974Z                 assert (
2025-01-17T11:31:46.7005045Z                     data.name
2025-01-17T11:31:46.7005118Z                     == getattr(
2025-01-17T11:31:46.7005214Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7005305Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.7005374Z                     ).decode()
2025-01-17T11:31:46.7005444Z                 )
2025-01-17T11:31:46.7005532Z             np.testing.assert_allclose(
2025-01-17T11:31:46.7005662Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.7005729Z             )
2025-01-17T11:31:46.7005812Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.7005928Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.7005998Z             )
2025-01-17T11:31:46.7006007Z 
2025-01-17T11:31:46.7006152Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.7006261Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.7006271Z 
2025-01-17T11:31:46.7006731Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4b1a0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.7006832Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.7007081Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.7007085Z 
2025-01-17T11:31:46.7007160Z     @wraps(func)
2025-01-17T11:31:46.7007236Z     def inner(*args, **kwds):
2025-01-17T11:31:46.7007315Z         with self._recreate_cm():
2025-01-17T11:31:46.7007407Z >           return func(*args, **kwds)
2025-01-17T11:31:46.7007483Z E           AssertionError: 
2025-01-17T11:31:46.7007596Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7007662Z E           
2025-01-17T11:31:46.7007762Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7007896Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7008026Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7008186Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7008273Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7008432Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7008516Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7008519Z 
2025-01-17T11:31:46.7008716Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.7009100Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-17T11:31:46.7009105Z 
2025-01-17T11:31:46.7009366Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477860>
2025-01-17T11:31:46.7009677Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814be31550>
2025-01-17T11:31:46.7009766Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.7009849Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.7009945Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.7010042Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.7010236Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.7010479Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-17T11:31:46.7010483Z 
2025-01-17T11:31:46.7010562Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.7010740Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.7010803Z     ):
2025-01-17T11:31:46.7010895Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.7010996Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.7011168Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.7011231Z     
2025-01-17T11:31:46.7011334Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.7011426Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.7011565Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.7011665Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.7011731Z             )
2025-01-17T11:31:46.7011799Z     
2025-01-17T11:31:46.7011890Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.7011992Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.7012077Z             if data.stackgroup:
2025-01-17T11:31:46.7012155Z                 assert (
2025-01-17T11:31:46.7012233Z                     data.stackgroup
2025-01-17T11:31:46.7012305Z                     == getattr(
2025-01-17T11:31:46.7012406Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7012500Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.7012673Z                     ).decode()
2025-01-17T11:31:46.7012747Z                 )
2025-01-17T11:31:46.7012819Z             if data.name:
2025-01-17T11:31:46.7012886Z                 assert (
2025-01-17T11:31:46.7012961Z                     data.name
2025-01-17T11:31:46.7013031Z                     == getattr(
2025-01-17T11:31:46.7013131Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7013216Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.7013290Z                     ).decode()
2025-01-17T11:31:46.7013354Z                 )
2025-01-17T11:31:46.7013449Z             np.testing.assert_allclose(
2025-01-17T11:31:46.7013572Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.7013642Z             )
2025-01-17T11:31:46.7013725Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.7013840Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.7013903Z             )
2025-01-17T11:31:46.7013908Z 
2025-01-17T11:31:46.7014048Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.7014150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.7014154Z 
2025-01-17T11:31:46.7014616Z args = (<function assert_allclose.<locals>.compare at 0x7f8170659a80>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.7014708Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.7014960Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.7015187Z 
2025-01-17T11:31:46.7015263Z     @wraps(func)
2025-01-17T11:31:46.7015345Z     def inner(*args, **kwds):
2025-01-17T11:31:46.7015424Z         with self._recreate_cm():
2025-01-17T11:31:46.7015507Z >           return func(*args, **kwds)
2025-01-17T11:31:46.7015583Z E           AssertionError: 
2025-01-17T11:31:46.7015688Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7015754Z E           
2025-01-17T11:31:46.7015847Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7015984Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7016108Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7016277Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7016358Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7016534Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7016612Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7016616Z 
2025-01-17T11:31:46.7016819Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.7016927Z =============================== warnings summary ===============================
2025-01-17T11:31:46.7017039Z tardis/io/configuration/config_validator.py:6
2025-01-17T11:31:46.7017142Z tardis/io/configuration/config_validator.py:6
2025-01-17T11:31:46.7017442Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-17T11:31:46.7017510Z   
2025-01-17T11:31:46.7018635Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-17T11:31:46.7018643Z 
2025-01-17T11:31:46.7018866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-17T11:31:46.7019216Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-17T11:31:46.7019282Z   
2025-01-17T11:31:46.7019429Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-17T11:31:46.7019575Z   given by the platformdirs library.  To remove this warning and
2025-01-17T11:31:46.7019737Z   see the appropriate new directories, set the environment variable
2025-01-17T11:31:46.7019871Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-17T11:31:46.7020021Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-17T11:31:46.7020025Z 
2025-01-17T11:31:46.7020115Z tardis/plasma/properties/__init__.py:17
2025-01-17T11:31:46.7020394Z   /home/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-17T11:31:46.7020459Z   
2025-01-17T11:31:46.7021043Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-17T11:31:46.7021047Z 
2025-01-17T11:31:46.7026329Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-17T11:31:46.7026630Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7026842Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-17T11:31:46.7026916Z   
2025-01-17T11:31:46.7026980Z   
2025-01-17T11:31:46.7027186Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:31:46.7027436Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-17T11:31:46.7027617Z 
2025-01-17T11:31:46.7027935Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-17T11:31:46.7028158Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-17T11:31:46.7028387Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-17T11:31:46.7028558Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-17T11:31:46.7028875Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-17T11:31:46.7028938Z   
2025-01-17T11:31:46.7029054Z   The current CMFGEN model parser is deprecated
2025-01-17T11:31:46.7029058Z 
2025-01-17T11:31:46.7029164Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-17T11:31:46.7029341Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-17T11:31:46.7029646Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-17T11:31:46.7029720Z   
2025-01-17T11:31:46.7029829Z   The current CMFGEN model parser is deprecated
2025-01-17T11:31:46.7029833Z 
2025-01-17T11:31:46.7030038Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-17T11:31:46.7030397Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-17T11:31:46.7030461Z   
2025-01-17T11:31:46.7030880Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-17T11:31:46.7030884Z 
2025-01-17T11:31:46.7030989Z tardis/model/tests/test_base.py: 6 warnings
2025-01-17T11:31:46.7031102Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-17T11:31:46.7031280Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-17T11:31:46.7031541Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-17T11:31:46.7031609Z   
2025-01-17T11:31:46.7031713Z   v_inner_boundary < 0, assuming default value
2025-01-17T11:31:46.7031717Z 
2025-01-17T11:31:46.7031815Z tardis/model/tests/test_base.py: 6 warnings
2025-01-17T11:31:46.7031929Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-17T11:31:46.7032105Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-17T11:31:46.7032365Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-17T11:31:46.7032428Z   
2025-01-17T11:31:46.7032728Z   v_outer_boundary < 0, assuming default value
2025-01-17T11:31:46.7032734Z 
2025-01-17T11:31:46.7033056Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7033367Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7033665Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7033967Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7034499Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7035029Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7035546Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7035978Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7036332Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7036805Z   /home/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-17T11:31:46.7036875Z   
2025-01-17T11:31:46.7038252Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-17T11:31:46.7038257Z 
2025-01-17T11:31:46.7038694Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7038985Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-17T11:31:46.7039061Z   
2025-01-17T11:31:46.7039330Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-17T11:31:46.7039762Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-17T11:31:46.7039825Z   
2025-01-17T11:31:46.7040339Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-17T11:31:46.7040344Z 
2025-01-17T11:31:46.7040548Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-17T11:31:46.7040749Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-17T11:31:46.7040938Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-17T11:31:46.7041183Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-17T11:31:46.7041245Z   
2025-01-17T11:31:46.7041431Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-17T11:31:46.7041435Z 
2025-01-17T11:31:46.7041660Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-17T11:31:46.7041890Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-17T11:31:46.7042117Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-17T11:31:46.7042351Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-17T11:31:46.7042895Z   /home/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-17T11:31:46.7042967Z   
2025-01-17T11:31:46.7043250Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-17T11:31:46.7043259Z 
2025-01-17T11:31:46.7043471Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-17T11:31:46.7043660Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-17T11:31:46.7043729Z   
2025-01-17T11:31:46.7044039Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-17T11:31:46.7044043Z 
2025-01-17T11:31:46.7044243Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-17T11:31:46.7044430Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-17T11:31:46.7044496Z   
2025-01-17T11:31:46.7044825Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-17T11:31:46.7044829Z 
2025-01-17T11:31:46.7045026Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-17T11:31:46.7045442Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-17T11:31:46.7045650Z   /home/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-17T11:31:46.7045711Z   
2025-01-17T11:31:46.7045989Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-17T11:31:46.7045994Z 
2025-01-17T11:31:46.7046156Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:31:46.7046445Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-17T11:31:46.7046505Z   
2025-01-17T11:31:46.7046606Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:31:46.7046610Z 
2025-01-17T11:31:46.7046768Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:31:46.7047052Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-17T11:31:46.7047119Z   
2025-01-17T11:31:46.7047217Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:31:46.7047226Z 
2025-01-17T11:31:46.7047382Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:31:46.7047659Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-17T11:31:46.7047721Z   
2025-01-17T11:31:46.7047818Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:31:46.7047822Z 
2025-01-17T11:31:46.7048139Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-17T11:31:46.7048412Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-17T11:31:46.7048475Z   
2025-01-17T11:31:46.7049305Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-17T11:31:46.7049322Z 
2025-01-17T11:31:46.7049663Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7049998Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7050328Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7050659Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7050988Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7051322Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7051667Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:31:46.7051734Z   
2025-01-17T11:31:46.7051920Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-17T11:31:46.7052093Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:31:46.7052319Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:31:46.7052323Z 
2025-01-17T11:31:46.7052779Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7053109Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7053445Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:31:46.7053507Z   
2025-01-17T11:31:46.7053676Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-17T11:31:46.7054082Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:31:46.7054310Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:31:46.7054314Z 
2025-01-17T11:31:46.7054643Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7054972Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:31:46.7055036Z   
2025-01-17T11:31:46.7055207Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-17T11:31:46.7055364Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:31:46.7055586Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:31:46.7055590Z 
2025-01-17T11:31:46.7056012Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-17T11:31:46.7056329Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-17T11:31:46.7056392Z   
2025-01-17T11:31:46.7056665Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-17T11:31:46.7056670Z 
2025-01-17T11:31:46.7056918Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7057116Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-17T11:31:46.7057177Z   
2025-01-17T11:31:46.7057245Z   
2025-01-17T11:31:46.7057436Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:31:46.7057688Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-17T11:31:46.7057696Z 
2025-01-17T11:31:46.7057942Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7058138Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-17T11:31:46.7058200Z   
2025-01-17T11:31:46.7058261Z   
2025-01-17T11:31:46.7058454Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:31:46.7058618Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-17T11:31:46.7058622Z 
2025-01-17T11:31:46.7058866Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7059096Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-17T11:31:46.7059163Z   
2025-01-17T11:31:46.7059338Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-17T11:31:46.7059341Z 
2025-01-17T11:31:46.7059531Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-17T11:31:46.7059540Z 
2025-01-17T11:31:46.7059700Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-17T11:31:46.7059824Z Coverage HTML written to dir coverage_html_report
2025-01-17T11:31:46.7059917Z Coverage XML written to file coverage.xml
2025-01-17T11:31:46.7059920Z 
2025-01-17T11:31:46.7060039Z =========================== short test summary info ============================
2025-01-17T11:31:46.7060434Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-17T11:31:46.7060443Z 
2025-01-17T11:31:46.7060569Z MultiIndex level [0] values are different (0.08897 %)
2025-01-17T11:31:46.7060678Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.7060744Z        ...
2025-01-17T11:31:46.7060831Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.7060944Z       dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.7061143Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.7061278Z        ...
2025-01-17T11:31:46.7061360Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.7061467Z       dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.7061571Z At positional index 54, first diff: 14 != 12
2025-01-17T11:31:46.7061840Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-17T11:31:46.7061936Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7061940Z 
2025-01-17T11:31:46.7062025Z Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.7062140Z Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.7062263Z Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.7062353Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062431Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062501Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7062698Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062778Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062852Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7063335Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7063340Z 
2025-01-17T11:31:46.7063458Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7063556Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7063625Z        ...
2025-01-17T11:31:46.7063700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7063818Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7063916Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7063982Z        ...
2025-01-17T11:31:46.7064057Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7064179Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7064276Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7064776Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7064780Z 
2025-01-17T11:31:46.7064865Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7065235Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7065559Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7065889Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7066398Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7066403Z 
2025-01-17T11:31:46.7066488Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7066959Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7067418Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7067786Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7068255Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7068259Z 
2025-01-17T11:31:46.7068376Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7068485Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7068547Z        ...
2025-01-17T11:31:46.7068627Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7068744Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7068845Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7068913Z        ...
2025-01-17T11:31:46.7068986Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7069112Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7069206Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7069712Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7069716Z 
2025-01-17T11:31:46.7069830Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7069930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7069993Z        ...
2025-01-17T11:31:46.7070070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7070179Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7070284Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7070348Z        ...
2025-01-17T11:31:46.7070425Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7070538Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7070643Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7071103Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7071107Z 
2025-01-17T11:31:46.7071226Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7071322Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7071389Z        ...
2025-01-17T11:31:46.7071461Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7071575Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7071675Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7071741Z        ...
2025-01-17T11:31:46.7071814Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7071921Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7072107Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7072807Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7072818Z 
2025-01-17T11:31:46.7072936Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7073033Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7073103Z        ...
2025-01-17T11:31:46.7073177Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7073289Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7073387Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7073458Z        ...
2025-01-17T11:31:46.7073532Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7073648Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7073738Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7074246Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7074251Z 
2025-01-17T11:31:46.7074362Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7074461Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7074526Z        ...
2025-01-17T11:31:46.7074602Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7074712Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7074819Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7074881Z        ...
2025-01-17T11:31:46.7074957Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7075068Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7075164Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7075639Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7075648Z 
2025-01-17T11:31:46.7075765Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7075862Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7075928Z        ...
2025-01-17T11:31:46.7076004Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7076118Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7076216Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7076278Z        ...
2025-01-17T11:31:46.7076354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7076460Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7076554Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7077004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7077016Z 
2025-01-17T11:31:46.7077132Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7077225Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7077291Z        ...
2025-01-17T11:31:46.7077362Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7077474Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7077575Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7077641Z        ...
2025-01-17T11:31:46.7077712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7077825Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7077914Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7078386Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7078528Z 
2025-01-17T11:31:46.7078694Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7079060Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7079383Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7079707Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7080186Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7080190Z 
2025-01-17T11:31:46.7080274Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7080631Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7080998Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7081366Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7081816Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7081826Z 
2025-01-17T11:31:46.7081942Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7082043Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7082105Z        ...
2025-01-17T11:31:46.7082181Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7082294Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7082394Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7082457Z        ...
2025-01-17T11:31:46.7082710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7082879Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7082977Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7083474Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7083627Z 
2025-01-17T11:31:46.7083852Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7083960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7084024Z        ...
2025-01-17T11:31:46.7084102Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7084214Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7084317Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7084380Z        ...
2025-01-17T11:31:46.7084458Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7084566Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7084659Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7085104Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7085109Z 
2025-01-17T11:31:46.7085236Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7085337Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7085403Z        ...
2025-01-17T11:31:46.7085475Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7085588Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7085688Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7085758Z        ...
2025-01-17T11:31:46.7085833Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7085946Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7086037Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7086519Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7086523Z 
2025-01-17T11:31:46.7086637Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7086743Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7086811Z        ...
2025-01-17T11:31:46.7086883Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7086998Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7087100Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7087170Z        ...
2025-01-17T11:31:46.7087242Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7087356Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7087444Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7087922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7087926Z 
2025-01-17T11:31:46.7088040Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7088139Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7088209Z        ...
2025-01-17T11:31:46.7088293Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7088406Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7088511Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7088574Z        ...
2025-01-17T11:31:46.7088652Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7088761Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7088854Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7089310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7089314Z 
2025-01-17T11:31:46.7089436Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7089532Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7089690Z        ...
2025-01-17T11:31:46.7089764Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7089980Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7090084Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7090161Z        ...
2025-01-17T11:31:46.7090243Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7090351Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7090444Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7090907Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7090918Z 
2025-01-17T11:31:46.7091035Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7091132Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7091198Z        ...
2025-01-17T11:31:46.7091271Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7091400Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7091498Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7091566Z        ...
2025-01-17T11:31:46.7091639Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7091752Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7091842Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7092317Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7092321Z 
2025-01-17T11:31:46.7092404Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7092878Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7093217Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7093538Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7094028Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7094035Z 
2025-01-17T11:31:46.7094120Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7094474Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7094831Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7095462Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7095913Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7095917Z 
2025-01-17T11:31:46.7096029Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7096135Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7096198Z        ...
2025-01-17T11:31:46.7096277Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7096398Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7096506Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7096571Z        ...
2025-01-17T11:31:46.7096650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7096758Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7096847Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7097333Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7097336Z 
2025-01-17T11:31:46.7097454Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7097549Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7097612Z        ...
2025-01-17T11:31:46.7097692Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7097807Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7097920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7097985Z        ...
2025-01-17T11:31:46.7098064Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7098173Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7098269Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7098714Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7098718Z 
2025-01-17T11:31:46.7098835Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7098932Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7098998Z        ...
2025-01-17T11:31:46.7099072Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7099187Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7099288Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7099361Z        ...
2025-01-17T11:31:46.7099440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7099557Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7099644Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7100123Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7100127Z 
2025-01-17T11:31:46.7100241Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7100341Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7100403Z        ...
2025-01-17T11:31:46.7100482Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7100593Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7100695Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7100867Z        ...
2025-01-17T11:31:46.7101014Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7101133Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7101224Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7101699Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7101703Z 
2025-01-17T11:31:46.7101820Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7101929Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7101991Z        ...
2025-01-17T11:31:46.7102076Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7102189Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7102300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7102363Z        ...
2025-01-17T11:31:46.7102450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7102670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7102768Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7103233Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7103237Z 
2025-01-17T11:31:46.7103360Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7103458Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7103522Z        ...
2025-01-17T11:31:46.7103596Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7103711Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7103810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7103877Z        ...
2025-01-17T11:31:46.7103949Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7104076Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7104170Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7104661Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7104665Z 
2025-01-17T11:31:46.7104780Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7104881Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7104944Z        ...
2025-01-17T11:31:46.7105017Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7105134Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7105231Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7105301Z        ...
2025-01-17T11:31:46.7105375Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7105490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7105584Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7106095Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7106100Z 
2025-01-17T11:31:46.7106184Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7106549Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7106988Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7107408Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7107906Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7107910Z 
2025-01-17T11:31:46.7107993Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7108360Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7108729Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7109094Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7109569Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7109573Z 
2025-01-17T11:31:46.7109688Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7109790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7109852Z        ...
2025-01-17T11:31:46.7109931Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7110043Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7110149Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7110211Z        ...
2025-01-17T11:31:46.7110291Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7110403Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7110507Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7111013Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7111016Z 
2025-01-17T11:31:46.7111137Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7111232Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7111300Z        ...
2025-01-17T11:31:46.7111373Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7111489Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7111587Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7111650Z        ...
2025-01-17T11:31:46.7111729Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7111839Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7112021Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7112681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7112687Z 
2025-01-17T11:31:46.7112823Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7112924Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7112991Z        ...
2025-01-17T11:31:46.7113069Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7113197Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7113299Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7113370Z        ...
2025-01-17T11:31:46.7113447Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7113564Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7113660Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7114192Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7114197Z 
2025-01-17T11:31:46.7114314Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7114423Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7114486Z        ...
2025-01-17T11:31:46.7114574Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7114695Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7114802Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7114865Z        ...
2025-01-17T11:31:46.7114945Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7115056Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7115147Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7115666Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7115675Z 
2025-01-17T11:31:46.7115797Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7115894Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7115956Z        ...
2025-01-17T11:31:46.7116035Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7116147Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7116250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7116313Z        ...
2025-01-17T11:31:46.7116392Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7116501Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7116598Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7117087Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7117099Z 
2025-01-17T11:31:46.7117223Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7117321Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7117391Z        ...
2025-01-17T11:31:46.7117465Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7117584Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7117683Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7117751Z        ...
2025-01-17T11:31:46.7117827Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7117941Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7118033Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7118598Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7118720Z 
2025-01-17T11:31:46.7118944Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7119051Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7119114Z        ...
2025-01-17T11:31:46.7119192Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7119303Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7119411Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7119474Z        ...
2025-01-17T11:31:46.7119546Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7119663Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7119752Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7120324Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7120334Z 
2025-01-17T11:31:46.7120425Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7120793Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7121148Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7121475Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7122046Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7122049Z 
2025-01-17T11:31:46.7122134Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7122498Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7123072Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7123440Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7124103Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7124208Z 
2025-01-17T11:31:46.7124329Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7124438Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7124501Z        ...
2025-01-17T11:31:46.7124580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7124697Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7124802Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7124865Z        ...
2025-01-17T11:31:46.7124945Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7125055Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7125155Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7125737Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7125747Z 
2025-01-17T11:31:46.7125867Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7125964Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7126033Z        ...
2025-01-17T11:31:46.7126108Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7126227Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7126327Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7126396Z        ...
2025-01-17T11:31:46.7126469Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7126582Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7126674Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7127219Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7127233Z 
2025-01-17T11:31:46.7127349Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7127449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7127512Z        ...
2025-01-17T11:31:46.7127591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7127703Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7127803Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7127874Z        ...
2025-01-17T11:31:46.7127948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7128062Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7128151Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7128732Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7128741Z 
2025-01-17T11:31:46.7128861Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7128965Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7129029Z        ...
2025-01-17T11:31:46.7129110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7129224Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7129329Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7129392Z        ...
2025-01-17T11:31:46.7129471Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7129581Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7129677Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7130244Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7130336Z 
2025-01-17T11:31:46.7130531Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7130631Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7130699Z        ...
2025-01-17T11:31:46.7130773Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7130888Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7130990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7131057Z        ...
2025-01-17T11:31:46.7131130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7131246Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7131338Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7131889Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7131904Z 
2025-01-17T11:31:46.7132022Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7132123Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7132185Z        ...
2025-01-17T11:31:46.7132258Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7132372Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7132470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7132636Z        ...
2025-01-17T11:31:46.7132712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7132826Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7132916Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7133430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7133433Z 
2025-01-17T11:31:46.7133555Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7133662Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7133726Z        ...
2025-01-17T11:31:46.7133804Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7133915Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7134024Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7134087Z        ...
2025-01-17T11:31:46.7134164Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7134272Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7134372Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7134893Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7134897Z 
2025-01-17T11:31:46.7134986Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7135353Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7135677Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7136109Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7136755Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7136759Z 
2025-01-17T11:31:46.7136848Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7137202Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7137569Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7137937Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7138432Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7138439Z 
2025-01-17T11:31:46.7138560Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7138659Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7138727Z        ...
2025-01-17T11:31:46.7138801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7138919Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7139017Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7139080Z        ...
2025-01-17T11:31:46.7139160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7139269Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7139369Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7139897Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7139901Z 
2025-01-17T11:31:46.7140024Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7140124Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7140192Z        ...
2025-01-17T11:31:46.7140267Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7140386Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7140484Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7140554Z        ...
2025-01-17T11:31:46.7140627Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7140742Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7140834Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7141332Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7141337Z 
2025-01-17T11:31:46.7141451Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7141646Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7141805Z        ...
2025-01-17T11:31:46.7141889Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7142001Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7142105Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7142169Z        ...
2025-01-17T11:31:46.7142247Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7142357Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7142447Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7143071Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7143076Z 
2025-01-17T11:31:46.7143195Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7143292Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7143368Z        ...
2025-01-17T11:31:46.7143445Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7143555Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7143659Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7143722Z        ...
2025-01-17T11:31:46.7143800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7143909Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7144004Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7144531Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7144535Z 
2025-01-17T11:31:46.7144652Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7144747Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7144822Z        ...
2025-01-17T11:31:46.7144898Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7145014Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7145110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7145180Z        ...
2025-01-17T11:31:46.7145252Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7145369Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7145458Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7145971Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7145975Z 
2025-01-17T11:31:46.7146088Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7146190Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7146253Z        ...
2025-01-17T11:31:46.7146336Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7146450Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7146554Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7146618Z        ...
2025-01-17T11:31:46.7146693Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7146810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7146900Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7147415Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7147419Z 
2025-01-17T11:31:46.7147532Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7147632Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7147694Z        ...
2025-01-17T11:31:46.7147776Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7148131Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7148236Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7148299Z        ...
2025-01-17T11:31:46.7148376Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7148484Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7148580Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7149104Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7149109Z 
2025-01-17T11:31:46.7149204Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7149566Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7149894Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7150218Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7150743Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7150752Z 
2025-01-17T11:31:46.7150841Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7151196Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7151564Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7151937Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7152434Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7152439Z 
2025-01-17T11:31:46.7152655Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7152754Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7152821Z        ...
2025-01-17T11:31:46.7153016Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7153233Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7153337Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7153405Z        ...
2025-01-17T11:31:46.7153479Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7153595Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7153687Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7154229Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7154234Z 
2025-01-17T11:31:46.7154348Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7154449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7154510Z        ...
2025-01-17T11:31:46.7154584Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7154704Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7154808Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7154876Z        ...
2025-01-17T11:31:46.7154948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7155060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7155148Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7155651Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7155655Z 
2025-01-17T11:31:46.7155769Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7155870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7155933Z        ...
2025-01-17T11:31:46.7156010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7156126Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7156234Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7156297Z        ...
2025-01-17T11:31:46.7156374Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7156483Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7156578Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7157230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7157237Z 
2025-01-17T11:31:46.7157423Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7157584Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7157658Z        ...
2025-01-17T11:31:46.7157732Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7157847Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7157953Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7158027Z        ...
2025-01-17T11:31:46.7158101Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7158212Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7158308Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7158837Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7158846Z 
2025-01-17T11:31:46.7158959Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7159055Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7159125Z        ...
2025-01-17T11:31:46.7159198Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7159316Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7159518Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7159588Z        ...
2025-01-17T11:31:46.7159735Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7159853Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7159946Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7160469Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7160473Z 
2025-01-17T11:31:46.7160586Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7160688Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7160750Z        ...
2025-01-17T11:31:46.7160828Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7160937Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7161041Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7161112Z        ...
2025-01-17T11:31:46.7161194Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7161306Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7161403Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7161939Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7161943Z 
2025-01-17T11:31:46.7162062Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7162159Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7162227Z        ...
2025-01-17T11:31:46.7162299Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7162414Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7162513Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7162758Z        ...
2025-01-17T11:31:46.7162855Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7162974Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7163069Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7163624Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7163628Z 
2025-01-17T11:31:46.7163718Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7164077Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7164408Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7164732Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7165282Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7165286Z 
2025-01-17T11:31:46.7165524Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7165982Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7166351Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7166724Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7167245Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7167249Z 
2025-01-17T11:31:46.7167372Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7167469Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7167538Z        ...
2025-01-17T11:31:46.7167612Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7167728Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7167828Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7167900Z        ...
2025-01-17T11:31:46.7167978Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7168094Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7168185Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7168752Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7168756Z 
2025-01-17T11:31:46.7168870Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7168972Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7169034Z        ...
2025-01-17T11:31:46.7169112Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7169224Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7169328Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7169397Z        ...
2025-01-17T11:31:46.7169475Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7169588Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7169680Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7170209Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7170213Z 
2025-01-17T11:31:46.7170334Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7170429Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7170494Z        ...
2025-01-17T11:31:46.7170573Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7170683Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7170787Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7170851Z        ...
2025-01-17T11:31:46.7171019Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7171209Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7171307Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7171863Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7171867Z 
2025-01-17T11:31:46.7171986Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7172083Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7172151Z        ...
2025-01-17T11:31:46.7172224Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7172340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7172437Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7172509Z        ...
2025-01-17T11:31:46.7172683Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7172811Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7172900Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7173459Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7173463Z 
2025-01-17T11:31:46.7173576Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7173679Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7173740Z        ...
2025-01-17T11:31:46.7173817Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7173930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7174033Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7174096Z        ...
2025-01-17T11:31:46.7174170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7174290Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7174382Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7174924Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7174928Z 
2025-01-17T11:31:46.7175043Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7175146Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7175209Z        ...
2025-01-17T11:31:46.7175289Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7175398Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7175502Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7175565Z        ...
2025-01-17T11:31:46.7175643Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7175752Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7175857Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7176364Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7176368Z 
2025-01-17T11:31:46.7176487Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7176584Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7176652Z        ...
2025-01-17T11:31:46.7176726Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7176841Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7176938Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7177007Z        ...
2025-01-17T11:31:46.7177081Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7177198Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7177407Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7178031Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7178036Z 
2025-01-17T11:31:46.7178121Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7178483Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7178805Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7179131Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7179646Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7179655Z 
2025-01-17T11:31:46.7179737Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7180100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7180463Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7180834Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7181332Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7181335Z 
2025-01-17T11:31:46.7181450Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7181552Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7181615Z        ...
2025-01-17T11:31:46.7181690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7181808Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7181909Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7181978Z        ...
2025-01-17T11:31:46.7182055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7182170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7182352Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7183175Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7183181Z 
2025-01-17T11:31:46.7183300Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7183403Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7183469Z        ...
2025-01-17T11:31:46.7183551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7183663Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7183768Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7183830Z        ...
2025-01-17T11:31:46.7183908Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7184019Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7184118Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7184623Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7184627Z 
2025-01-17T11:31:46.7184745Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7184841Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7184908Z        ...
2025-01-17T11:31:46.7184981Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7185095Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7185195Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7185264Z        ...
2025-01-17T11:31:46.7185335Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7185443Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7185542Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7186075Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7186087Z 
2025-01-17T11:31:46.7186200Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7186297Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7186366Z        ...
2025-01-17T11:31:46.7186439Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7186554Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7186652Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7186721Z        ...
2025-01-17T11:31:46.7186795Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7186909Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7186997Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7187509Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7187517Z 
2025-01-17T11:31:46.7187631Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7187733Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7187796Z        ...
2025-01-17T11:31:46.7187874Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7187984Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7188090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7188153Z        ...
2025-01-17T11:31:46.7188233Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7188342Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7188437Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7189054Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7189160Z 
2025-01-17T11:31:46.7189282Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7189379Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7189449Z        ...
2025-01-17T11:31:46.7189522Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7189633Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7189737Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7189799Z        ...
2025-01-17T11:31:46.7189877Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7189985Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7190081Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7190603Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7190621Z 
2025-01-17T11:31:46.7190710Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7191067Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7191386Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7191718Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7192241Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7192245Z 
2025-01-17T11:31:46.7192336Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7192787Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7193162Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7193530Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7194140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7194260Z 
2025-01-17T11:31:46.7194384Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7194483Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7194555Z        ...
2025-01-17T11:31:46.7194632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7194751Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7194851Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7194922Z        ...
2025-01-17T11:31:46.7195001Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7195120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7195212Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7195765Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7195776Z 
2025-01-17T11:31:46.7195892Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7195995Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7196059Z        ...
2025-01-17T11:31:46.7196139Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7196252Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7196355Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7196424Z        ...
2025-01-17T11:31:46.7196497Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7196615Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7196705Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7197207Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7197216Z 
2025-01-17T11:31:46.7197335Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7197439Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7197501Z        ...
2025-01-17T11:31:46.7197578Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7197689Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7197793Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7197856Z        ...
2025-01-17T11:31:46.7197936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7198047Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7198141Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7198669Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7198680Z 
2025-01-17T11:31:46.7198802Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7198899Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7198967Z        ...
2025-01-17T11:31:46.7199041Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7199157Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7199255Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7199324Z        ...
2025-01-17T11:31:46.7199398Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7199515Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7199610Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7200154Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7200247Z 
2025-01-17T11:31:46.7200369Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7200552Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7200620Z        ...
2025-01-17T11:31:46.7200705Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7200822Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7200925Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7200996Z        ...
2025-01-17T11:31:46.7201072Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7201190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7201282Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7201810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7201814Z 
2025-01-17T11:31:46.7201937Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7202046Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7202110Z        ...
2025-01-17T11:31:46.7202193Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7202305Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7202408Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7202471Z        ...
2025-01-17T11:31:46.7202706Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7202853Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7202954Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7203471Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7203475Z 
2025-01-17T11:31:46.7203593Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7203696Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7203770Z        ...
2025-01-17T11:31:46.7203845Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7203959Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7204058Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7204126Z        ...
2025-01-17T11:31:46.7204199Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7204314Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7204404Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7204933Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7204943Z 
2025-01-17T11:31:46.7205028Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7205400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7205722Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7206168Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7206819Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7206828Z 
2025-01-17T11:31:46.7206912Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7207270Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7207637Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7208008Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7208510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7208519Z 
2025-01-17T11:31:46.7208638Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7208737Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7208809Z        ...
2025-01-17T11:31:46.7208884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7209006Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7209107Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7209174Z        ...
2025-01-17T11:31:46.7209248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7209363Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7209453Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7209996Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7210001Z 
2025-01-17T11:31:46.7210117Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7210222Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7210288Z        ...
2025-01-17T11:31:46.7210366Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7210476Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7210580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7210644Z        ...
2025-01-17T11:31:46.7210722Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7210832Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7210929Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7211431Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7211435Z 
2025-01-17T11:31:46.7211554Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7211741Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7211808Z        ...
2025-01-17T11:31:46.7211955Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7212074Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7212173Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7212237Z        ...
2025-01-17T11:31:46.7212318Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7212427Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7212522Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7213158Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7213162Z 
2025-01-17T11:31:46.7213281Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7213377Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7213452Z        ...
2025-01-17T11:31:46.7213533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7213648Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7213747Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7213816Z        ...
2025-01-17T11:31:46.7213888Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7214002Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7214090Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7214628Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7214632Z 
2025-01-17T11:31:46.7214746Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7214847Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7214917Z        ...
2025-01-17T11:31:46.7214994Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7215108Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7215210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7215273Z        ...
2025-01-17T11:31:46.7215351Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7215460Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7215555Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7216067Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7216071Z 
2025-01-17T11:31:46.7216190Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7216287Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7216353Z        ...
2025-01-17T11:31:46.7216431Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7216545Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7216649Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7216711Z        ...
2025-01-17T11:31:46.7216796Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7216904Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7216998Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7217507Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7217511Z 
2025-01-17T11:31:46.7217629Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7217724Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7217792Z        ...
2025-01-17T11:31:46.7217866Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7218101Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7218301Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7218370Z        ...
2025-01-17T11:31:46.7218442Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7218555Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7218643Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7219173Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7219177Z 
2025-01-17T11:31:46.7219264Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7219632Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7219954Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7220282Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7220816Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7220824Z 
2025-01-17T11:31:46.7220909Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7221297Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7221659Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7222034Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7222627Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7222631Z 
2025-01-17T11:31:46.7222748Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7222851Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7222913Z        ...
2025-01-17T11:31:46.7222992Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7223325Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7223432Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7223493Z        ...
2025-01-17T11:31:46.7223568Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7223682Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7223771Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7224312Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7224317Z 
2025-01-17T11:31:46.7224431Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7224533Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7224596Z        ...
2025-01-17T11:31:46.7224675Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7224788Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7224894Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7224956Z        ...
2025-01-17T11:31:46.7225034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7225142Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7225238Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7225742Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7225745Z 
2025-01-17T11:31:46.7225862Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7225958Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7226024Z        ...
2025-01-17T11:31:46.7226098Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7226213Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7226322Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7226389Z        ...
2025-01-17T11:31:46.7226462Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7226575Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7226662Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7227194Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7227198Z 
2025-01-17T11:31:46.7227312Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7227417Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7227482Z        ...
2025-01-17T11:31:46.7227558Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7227675Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7227781Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7231386Z        ...
2025-01-17T11:31:46.7231500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7231642Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7231749Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7232320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7232325Z 
2025-01-17T11:31:46.7232451Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7232705Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7232778Z        ...
2025-01-17T11:31:46.7232863Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7232986Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7233091Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7233330Z        ...
2025-01-17T11:31:46.7233533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7233657Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7233754Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7234303Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7234308Z 
2025-01-17T11:31:46.7234431Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7234540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7234605Z        ...
2025-01-17T11:31:46.7234687Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7234802Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7234913Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7234983Z        ...
2025-01-17T11:31:46.7235070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7235181Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7235281Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7235808Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7235813Z 
2025-01-17T11:31:46.7235937Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7236039Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7236108Z        ...
2025-01-17T11:31:46.7236185Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7236305Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7236406Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7236475Z        ...
2025-01-17T11:31:46.7236555Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7236671Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7236774Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7237320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7237330Z 
2025-01-17T11:31:46.7237419Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7237788Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7238115Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7238441Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7238975Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7238984Z 
2025-01-17T11:31:46.7239164Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7239603Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7239972Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7240343Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7240854Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7240868Z 
2025-01-17T11:31:46.7240987Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7241089Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7241163Z        ...
2025-01-17T11:31:46.7241242Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7241364Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7241465Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7241542Z        ...
2025-01-17T11:31:46.7241628Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7241745Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7241842Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7242392Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7242397Z 
2025-01-17T11:31:46.7242513Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7242843Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7242914Z        ...
2025-01-17T11:31:46.7243000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7243118Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7243225Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7243288Z        ...
2025-01-17T11:31:46.7243376Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7243493Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7243594Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7244107Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7244111Z 
2025-01-17T11:31:46.7244235Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7244337Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7244406Z        ...
2025-01-17T11:31:46.7244481Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7244595Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7244700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7244763Z        ...
2025-01-17T11:31:46.7244845Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7245255Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7245356Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7245899Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7245904Z 
2025-01-17T11:31:46.7246030Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7246128Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7246199Z        ...
2025-01-17T11:31:46.7246272Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7246388Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7246488Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7246557Z        ...
2025-01-17T11:31:46.7246632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7246755Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7246851Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7247393Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7247397Z 
2025-01-17T11:31:46.7247510Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7247613Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7247678Z        ...
2025-01-17T11:31:46.7247756Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7247865Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7247972Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7248037Z        ...
2025-01-17T11:31:46.7248118Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7248229Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7248330Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7248853Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7248857Z 
2025-01-17T11:31:46.7248975Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7249074Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7249138Z        ...
2025-01-17T11:31:46.7249218Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7249329Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7249432Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7249497Z        ...
2025-01-17T11:31:46.7249576Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7249687Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7249791Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7250348Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7250353Z 
2025-01-17T11:31:46.7250474Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7250572Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7250642Z        ...
2025-01-17T11:31:46.7250715Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7250831Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7250931Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7251000Z        ...
2025-01-17T11:31:46.7251074Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7251191Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7251381Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7252021Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7252026Z 
2025-01-17T11:31:46.7252113Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7252476Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7252904Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7253238Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7253800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7253805Z 
2025-01-17T11:31:46.7253890Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7254252Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7254616Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7254986Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7255531Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7255535Z 
2025-01-17T11:31:46.7255653Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7255755Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7255819Z        ...
2025-01-17T11:31:46.7255901Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7256014Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7256120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7256185Z        ...
2025-01-17T11:31:46.7256259Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7256534Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7256730Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7257311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7257315Z 
2025-01-17T11:31:46.7257431Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7257534Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7257598Z        ...
2025-01-17T11:31:46.7257676Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7257788Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7257890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7257954Z        ...
2025-01-17T11:31:46.7258032Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7258149Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7258249Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7258789Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7258794Z 
2025-01-17T11:31:46.7258914Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7259012Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7259081Z        ...
2025-01-17T11:31:46.7259152Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7259269Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7259368Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7259436Z        ...
2025-01-17T11:31:46.7259509Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7259629Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7259724Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7260410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7260414Z 
2025-01-17T11:31:46.7260575Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.7260937Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7265676Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.7270310Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.7270497Z At positional index 183, first diff: 0.9714108054153513 != 0.9713105029025074
2025-01-17T11:31:46.7271108Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7271118Z 
2025-01-17T11:31:46.7271237Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7271338Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7271412Z        ...
2025-01-17T11:31:46.7271494Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7271615Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7271720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7271790Z        ...
2025-01-17T11:31:46.7271866Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7271987Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7272081Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7272761Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7272766Z 
2025-01-17T11:31:46.7272885Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7272992Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7273175Z        ...
2025-01-17T11:31:46.7273355Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7273470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7273576Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7273640Z        ...
2025-01-17T11:31:46.7273720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7273831Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7273928Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7274493Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7274497Z 
2025-01-17T11:31:46.7274621Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7274718Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7274792Z        ...
2025-01-17T11:31:46.7274870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7274986Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7275086Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7275151Z        ...
2025-01-17T11:31:46.7275230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7275342Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7275441Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7275987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7275996Z 
2025-01-17T11:31:46.7276110Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7276207Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7276282Z        ...
2025-01-17T11:31:46.7276355Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7276474Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7276574Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7276644Z        ...
2025-01-17T11:31:46.7276717Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7276831Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7276923Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7277458Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7277462Z 
2025-01-17T11:31:46.7277576Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7277677Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7277742Z        ...
2025-01-17T11:31:46.7277826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7277940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7278046Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7278111Z        ...
2025-01-17T11:31:46.7278189Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7278300Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7278395Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7278935Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7278939Z 
2025-01-17T11:31:46.7279030Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7279474Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7279872Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7280190Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7280755Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7280759Z 
2025-01-17T11:31:46.7280851Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7281205Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7281571Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7281936Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7282460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7282464Z 
2025-01-17T11:31:46.7282762Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7282879Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7282951Z        ...
2025-01-17T11:31:46.7283034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7283150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7283255Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7283319Z        ...
2025-01-17T11:31:46.7283401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7283514Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7283611Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7284169Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7284174Z 
2025-01-17T11:31:46.7284297Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7284396Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7284617Z        ...
2025-01-17T11:31:46.7284790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7284911Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7285011Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7285082Z        ...
2025-01-17T11:31:46.7285158Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7285274Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7285366Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7285899Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7285903Z 
2025-01-17T11:31:46.7286019Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7286123Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7286193Z        ...
2025-01-17T11:31:46.7286277Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7286389Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7286494Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7286558Z        ...
2025-01-17T11:31:46.7286638Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7286750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7286847Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7287507Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7287511Z 
2025-01-17T11:31:46.7287675Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.7288041Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7293117Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7298099Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7298277Z At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.7298869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7298873Z 
2025-01-17T11:31:46.7298996Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7299098Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7299163Z        ...
2025-01-17T11:31:46.7299244Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7299361Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7299467Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7299531Z        ...
2025-01-17T11:31:46.7299614Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7299734Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7299832Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7300382Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7300387Z 
2025-01-17T11:31:46.7300512Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7300610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7300678Z        ...
2025-01-17T11:31:46.7300753Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7300870Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7300971Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7301040Z        ...
2025-01-17T11:31:46.7301206Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7301398Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7301493Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7302047Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7302051Z 
2025-01-17T11:31:46.7302165Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7302270Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7302335Z        ...
2025-01-17T11:31:46.7302414Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7302526Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7302726Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7302793Z        ...
2025-01-17T11:31:46.7302867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7302995Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7303087Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7303624Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7303628Z 
2025-01-17T11:31:46.7303749Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7303847Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7303910Z        ...
2025-01-17T11:31:46.7303990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7304102Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7304205Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7304268Z        ...
2025-01-17T11:31:46.7304346Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7304461Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7304564Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7305028Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7305033Z 
2025-01-17T11:31:46.7305152Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7305248Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7305316Z        ...
2025-01-17T11:31:46.7305389Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7305507Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7305607Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7305675Z        ...
2025-01-17T11:31:46.7305749Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7305865Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7305967Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7306448Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7306453Z 
2025-01-17T11:31:46.7306541Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7306905Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7307341Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7307779Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7308256Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7308260Z 
2025-01-17T11:31:46.7308345Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7308706Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7309072Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7309437Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7309893Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7309898Z 
2025-01-17T11:31:46.7310013Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7310115Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7310180Z        ...
2025-01-17T11:31:46.7310260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7310374Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7310478Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7310543Z        ...
2025-01-17T11:31:46.7310621Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7310735Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7310835Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7311319Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7311323Z 
2025-01-17T11:31:46.7311444Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7311541Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7311609Z        ...
2025-01-17T11:31:46.7311684Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7311800Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7311899Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7311967Z        ...
2025-01-17T11:31:46.7312043Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7312153Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7312343Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7312991Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7313001Z 
2025-01-17T11:31:46.7313119Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7313217Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7313286Z        ...
2025-01-17T11:31:46.7313361Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7313477Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7313575Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7313643Z        ...
2025-01-17T11:31:46.7313716Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7313831Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7313928Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7314523Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7314528Z 
2025-01-17T11:31:46.7314684Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.7315042Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7319881Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7325077Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7325368Z At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.7325890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7325894Z 
2025-01-17T11:31:46.7326014Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7326132Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7326201Z        ...
2025-01-17T11:31:46.7326284Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7326402Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7326511Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7326574Z        ...
2025-01-17T11:31:46.7326655Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7326766Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7326867Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7327351Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7327355Z 
2025-01-17T11:31:46.7327478Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7327579Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7327651Z        ...
2025-01-17T11:31:46.7327733Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7327844Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7327948Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7328011Z        ...
2025-01-17T11:31:46.7328092Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7328203Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7328303Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7328785Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7328789Z 
2025-01-17T11:31:46.7328914Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7329011Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7329183Z        ...
2025-01-17T11:31:46.7329258Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7329447Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7329549Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7329619Z        ...
2025-01-17T11:31:46.7329696Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7329812Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7329904Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7330376Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7330380Z 
2025-01-17T11:31:46.7330494Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7330593Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7330657Z        ...
2025-01-17T11:31:46.7330743Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7330860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7330963Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7331026Z        ...
2025-01-17T11:31:46.7331106Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7331220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7331312Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7331797Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7331802Z 
2025-01-17T11:31:46.7331923Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7332020Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7332084Z        ...
2025-01-17T11:31:46.7332166Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7332282Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7332390Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7332454Z        ...
2025-01-17T11:31:46.7332631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7332745Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7332841Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7333331Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7333334Z 
2025-01-17T11:31:46.7333427Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7333791Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7334119Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7334440Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7335043Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7335161Z 
2025-01-17T11:31:46.7335254Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7335610Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7335976Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7336351Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7336821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7336825Z 
2025-01-17T11:31:46.7336947Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7337047Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7337118Z        ...
2025-01-17T11:31:46.7337192Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7337315Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7337418Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7337484Z        ...
2025-01-17T11:31:46.7337564Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7337680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7337771Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7338277Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7338282Z 
2025-01-17T11:31:46.7338397Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7338499Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7338563Z        ...
2025-01-17T11:31:46.7338636Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7338753Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7338861Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7338931Z        ...
2025-01-17T11:31:46.7339004Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7339119Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7339214Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7339684Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7339688Z 
2025-01-17T11:31:46.7339802Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7339904Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7339969Z        ...
2025-01-17T11:31:46.7340047Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7340158Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7340350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7340483Z        ...
2025-01-17T11:31:46.7340564Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7340673Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7340767Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7341264Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7341268Z 
2025-01-17T11:31:46.7341385Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7341480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7341549Z        ...
2025-01-17T11:31:46.7341628Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7341748Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7341847Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7341920Z        ...
2025-01-17T11:31:46.7341999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7342112Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7342205Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7342793Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7342803Z 
2025-01-17T11:31:46.7342918Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7343014Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7343083Z        ...
2025-01-17T11:31:46.7343158Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7343274Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7343373Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7343447Z        ...
2025-01-17T11:31:46.7343520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7343638Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7343727Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7344209Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7344213Z 
2025-01-17T11:31:46.7344327Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7344431Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7344494Z        ...
2025-01-17T11:31:46.7344572Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7344683Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7344788Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7344851Z        ...
2025-01-17T11:31:46.7344935Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7345049Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7345145Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7345613Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7345617Z 
2025-01-17T11:31:46.7345738Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7345836Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7345907Z        ...
2025-01-17T11:31:46.7345983Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7346101Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7346205Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7346269Z        ...
2025-01-17T11:31:46.7346349Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7346587Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7346784Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7347278Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7347282Z 
2025-01-17T11:31:46.7347372Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7347729Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7348055Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7348382Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7348865Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7348869Z 
2025-01-17T11:31:46.7348959Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7349315Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7349688Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7350061Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7350519Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7350524Z 
2025-01-17T11:31:46.7350645Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7350744Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7350814Z        ...
2025-01-17T11:31:46.7350890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7351010Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7351111Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7351181Z        ...
2025-01-17T11:31:46.7351255Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7351464Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7351635Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7352144Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7352148Z 
2025-01-17T11:31:46.7352266Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7352368Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7352432Z        ...
2025-01-17T11:31:46.7352513Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7352726Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7352833Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7352897Z        ...
2025-01-17T11:31:46.7352974Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7353090Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7353187Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7353652Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7353657Z 
2025-01-17T11:31:46.7353771Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7353871Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7353935Z        ...
2025-01-17T11:31:46.7354014Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7354126Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7354228Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7354291Z        ...
2025-01-17T11:31:46.7354370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7354481Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7354580Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7355073Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7355077Z 
2025-01-17T11:31:46.7355199Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7355293Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7355360Z        ...
2025-01-17T11:31:46.7355434Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7355550Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7355651Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7355719Z        ...
2025-01-17T11:31:46.7355793Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7355910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7356000Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7356495Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7356499Z 
2025-01-17T11:31:46.7356612Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7356712Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7356777Z        ...
2025-01-17T11:31:46.7356857Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7356967Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7357067Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7357137Z        ...
2025-01-17T11:31:46.7357210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7357326Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7357417Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7358026Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7358128Z 
2025-01-17T11:31:46.7358247Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7358352Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7358417Z        ...
2025-01-17T11:31:46.7358495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7358606Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7358711Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7358775Z        ...
2025-01-17T11:31:46.7358854Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7358964Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7359062Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7359562Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7359575Z 
2025-01-17T11:31:46.7359693Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7359789Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7359856Z        ...
2025-01-17T11:31:46.7359929Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7360045Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7360143Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7360212Z        ...
2025-01-17T11:31:46.7360287Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7360396Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7360491Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7361005Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7361020Z 
2025-01-17T11:31:46.7361109Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7361475Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7361801Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7362130Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7362839Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7362849Z 
2025-01-17T11:31:46.7362939Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7363297Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7363885Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7364259Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7364756Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7364770Z 
2025-01-17T11:31:46.7364886Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7364984Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7365054Z        ...
2025-01-17T11:31:46.7365128Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7365245Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7365345Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7365412Z        ...
2025-01-17T11:31:46.7365488Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7365604Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7365694Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7366231Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7366247Z 
2025-01-17T11:31:46.7366364Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7366466Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7366529Z        ...
2025-01-17T11:31:46.7366607Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7366719Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7366821Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7366886Z        ...
2025-01-17T11:31:46.7366966Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7367077Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7367171Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7367660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7367667Z 
2025-01-17T11:31:46.7367791Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7367890Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7367961Z        ...
2025-01-17T11:31:46.7368035Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7368144Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7368247Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7368310Z        ...
2025-01-17T11:31:46.7368389Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7368498Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7368591Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7369113Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7369206Z 
2025-01-17T11:31:46.7369325Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7369492Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7369561Z        ...
2025-01-17T11:31:46.7369636Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7369752Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7369851Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7369923Z        ...
2025-01-17T11:31:46.7369997Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7370111Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7370199Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7370722Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7370726Z 
2025-01-17T11:31:46.7370845Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7370949Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7371014Z        ...
2025-01-17T11:31:46.7371091Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7371202Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7371302Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7371365Z        ...
2025-01-17T11:31:46.7371444Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7371558Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7371650Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7372167Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7372171Z 
2025-01-17T11:31:46.7372293Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7372397Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7372464Z        ...
2025-01-17T11:31:46.7372649Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7372763Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7372868Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7372931Z        ...
2025-01-17T11:31:46.7373010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7373121Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7373218Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7373783Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7373787Z 
2025-01-17T11:31:46.7373905Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7374007Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7374078Z        ...
2025-01-17T11:31:46.7374157Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7374276Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7374378Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7374447Z        ...
2025-01-17T11:31:46.7374522Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7374639Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7374729Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7375317Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7375321Z 
2025-01-17T11:31:46.7375407Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7375890Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7376313Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7376644Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7377230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7377234Z 
2025-01-17T11:31:46.7377318Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7377678Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7378044Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7378417Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7378975Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7378979Z 
2025-01-17T11:31:46.7379097Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7379209Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7379275Z        ...
2025-01-17T11:31:46.7379356Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7379470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7379571Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7379641Z        ...
2025-01-17T11:31:46.7379716Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7379833Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7379924Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7380520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7380524Z 
2025-01-17T11:31:46.7380643Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7380935Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7381002Z        ...
2025-01-17T11:31:46.7381083Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7381194Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7381295Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7381359Z        ...
2025-01-17T11:31:46.7381438Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7381548Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7381644Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7382194Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7382198Z 
2025-01-17T11:31:46.7382317Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7382420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7382497Z        ...
2025-01-17T11:31:46.7382667Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7382786Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7382886Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7382954Z        ...
2025-01-17T11:31:46.7383027Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7383144Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7383234Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7383820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7383824Z 
2025-01-17T11:31:46.7383938Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7384043Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7384111Z        ...
2025-01-17T11:31:46.7384186Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7384302Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7384401Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7384470Z        ...
2025-01-17T11:31:46.7384544Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7384660Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7384750Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7385342Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7385346Z 
2025-01-17T11:31:46.7385463Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7385567Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7385635Z        ...
2025-01-17T11:31:46.7385718Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7385830Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7385936Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7386000Z        ...
2025-01-17T11:31:46.7386079Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7386191Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7386286Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7386850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7386855Z 
2025-01-17T11:31:46.7386975Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7387072Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7387415Z        ...
2025-01-17T11:31:46.7387590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7387709Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7387809Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7387877Z        ...
2025-01-17T11:31:46.7387951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7388067Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7388159Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7388459Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-17T11:31:46.7388556Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7388560Z 
2025-01-17T11:31:46.7388648Z Mismatched elements: 160 / 584480 (0.0274%)
2025-01-17T11:31:46.7388754Z Max absolute difference among violations: 1.
2025-01-17T11:31:46.7388850Z Max relative difference among violations: 1.
2025-01-17T11:31:46.7389003Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389102Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389200Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.7389335Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389431Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389523Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.7389814Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-17T11:31:46.7389904Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7389908Z 
2025-01-17T11:31:46.7389997Z Mismatched elements: 777 / 29224 (2.66%)
2025-01-17T11:31:46.7390102Z Max absolute difference among violations: 3371
2025-01-17T11:31:46.7390216Z Max relative difference among violations: 415.5
2025-01-17T11:31:46.7390334Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.7390453Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.7390726Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-17T11:31:46.7390820Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7390824Z 
2025-01-17T11:31:46.7390906Z Mismatched elements: 1817 / 29224 (6.22%)
2025-01-17T11:31:46.7391012Z Max absolute difference among violations: 3443
2025-01-17T11:31:46.7391131Z Max relative difference among violations: 54.65079365
2025-01-17T11:31:46.7391247Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.7391359Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.7391615Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-17T11:31:46.7391711Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7391719Z 
2025-01-17T11:31:46.7391813Z Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.7391930Z Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.7392059Z Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.7392148Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392226Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392298Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7392389Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392463Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392631Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7392871Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-17T11:31:46.7392961Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7392965Z 
2025-01-17T11:31:46.7393178Z Mismatched elements: 13241 / 263016 (5.03%)
2025-01-17T11:31:46.7393402Z Max absolute difference among violations: 2.93004431e+13
2025-01-17T11:31:46.7393531Z Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.7393689Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.7393768Z         4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.7393896Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.7394056Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.7394128Z         4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.7394253Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.7394482Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-17T11:31:46.7394578Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7394582Z 
2025-01-17T11:31:46.7394676Z Mismatched elements: 2205 / 29224 (7.55%)
2025-01-17T11:31:46.7394800Z Max absolute difference among violations: 2.92703899
2025-01-17T11:31:46.7394920Z Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.7395077Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.7395150Z        1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.7395305Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.7395374Z        1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.7395633Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-17T11:31:46.7395723Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7395727Z 
2025-01-17T11:31:46.7395819Z Mismatched elements: 39240 / 584480 (6.71%)
2025-01-17T11:31:46.7395946Z Max absolute difference among violations: 604603.16180317
2025-01-17T11:31:46.7396072Z Max relative difference among violations: 4.15650719e+25
2025-01-17T11:31:46.7396233Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.7396308Z         0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.7396436Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.7396588Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.7396664Z         0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.7396784Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.7397270Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7397274Z 
2025-01-17T11:31:46.7397431Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7397505Z [index]: [0, 1]
2025-01-17T11:31:46.7397597Z [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-17T11:31:46.7397700Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-01-17T11:31:46.7397868Z At positional index 1, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.7398349Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7398353Z 
2025-01-17T11:31:46.7398503Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7398577Z [index]: [0, 1]
2025-01-17T11:31:46.7398665Z [left]:  [9967.488442185557, 10090.337237980311]
2025-01-17T11:31:46.7398757Z [right]: [9967.488442185557, 10090.925208074616]
2025-01-17T11:31:46.7398918Z At positional index 1, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.7399442Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7399533Z 
2025-01-17T11:31:46.7399684Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7399849Z [index]: [0, 1]
2025-01-17T11:31:46.7399941Z [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-17T11:31:46.7400034Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-01-17T11:31:46.7400189Z At positional index 1, first diff: 2880937482.0686474 != 2880986026.9779425
2025-01-17T11:31:46.7400673Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7400677Z 
2025-01-17T11:31:46.7400823Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7400902Z [index]: [0, 1]
2025-01-17T11:31:46.7400985Z [left]:  [9974.969233778693, 10755.649243810945]
2025-01-17T11:31:46.7401075Z [right]: [9974.969233778693, 10754.991494633894]
2025-01-17T11:31:46.7401229Z At positional index 1, first diff: 10755.649243810945 != 10754.991494633894
2025-01-17T11:31:46.7401604Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-17T11:31:46.7401609Z 
2025-01-17T11:31:46.7401694Z Series values are different (100.0 %)
2025-01-17T11:31:46.7401815Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7403251Z [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-17T11:31:46.7404439Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-17T11:31:46.7404629Z At positional index 0, first diff: 1.0165718020021351e+29 != 1.0190851489144414e+29
2025-01-17T11:31:46.7404979Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-17T11:31:46.7404983Z 
2025-01-17T11:31:46.7405074Z Series values are different (100.0 %)
2025-01-17T11:31:46.7405187Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7406140Z [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-17T11:31:46.7407082Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-17T11:31:46.7407245Z At positional index 0, first diff: 116384046125782.77 != 116548101693134.0
2025-01-17T11:31:46.7407590Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-17T11:31:46.7407594Z 
2025-01-17T11:31:46.7407683Z Series values are different (95.0 %)
2025-01-17T11:31:46.7407919Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7409001Z [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-17T11:31:46.7410002Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-17T11:31:46.7410160Z At positional index 0, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.7410531Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-17T11:31:46.7410535Z 
2025-01-17T11:31:46.7410620Z Series values are different (100.0 %)
2025-01-17T11:31:46.7410735Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7411805Z [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-17T11:31:46.7412975Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-17T11:31:46.7413144Z At positional index 0, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.7413493Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-17T11:31:46.7413497Z 
2025-01-17T11:31:46.7413586Z Series values are different (94.14 %)
2025-01-17T11:31:46.7413943Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7419160Z [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-17T11:31:46.7424495Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-17T11:31:46.7424669Z At positional index 0, first diff: 1806608624563428.5 != 1806497964363691.5
2025-01-17T11:31:46.7425047Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-17T11:31:46.7425052Z 
2025-01-17T11:31:46.7425142Z Series values are different (6.1925 %)
2025-01-17T11:31:46.7425508Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7431776Z [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.7438264Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.7438583Z At positional index 23, first diff: -2.49312723626409e-05 != -2.4320523596905817e-05
2025-01-17T11:31:46.7438936Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-17T11:31:46.7439035Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7439039Z 
2025-01-17T11:31:46.7439125Z Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.7439255Z Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.7439359Z Max relative difference among violations: 1.
2025-01-17T11:31:46.7439525Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7439598Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7439760Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7439831Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7440212Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-17T11:31:46.7440302Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7440306Z 
2025-01-17T11:31:46.7440393Z Mismatched elements: 462 / 10000 (4.62%)
2025-01-17T11:31:46.7440517Z Max absolute difference among violations: 6.26425326e+37
2025-01-17T11:31:46.7440640Z Max relative difference among violations: 1.00484475
2025-01-17T11:31:46.7440789Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7440869Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7441026Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7441101Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7441388Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-17T11:31:46.7441483Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7441487Z 
2025-01-17T11:31:46.7441570Z Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.7441695Z Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.7441793Z Max relative difference among violations: 1.
2025-01-17T11:31:46.7441956Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7442025Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7442182Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7442253Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7442694Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-17T11:31:46.7442827Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7442832Z 
2025-01-17T11:31:46.7442927Z Mismatched elements: 490644 / 584480 (83.9%)
2025-01-17T11:31:46.7443053Z Max absolute difference among violations: 2.30902188e-19
2025-01-17T11:31:46.7443167Z Max relative difference among violations: 8.02015845
2025-01-17T11:31:46.7443264Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443335Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443413Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7443506Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443581Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443651Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7443906Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-17T11:31:46.7444120Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7444222Z 
2025-01-17T11:31:46.7444315Z Mismatched elements: 4766 / 10000 (47.7%)
2025-01-17T11:31:46.7444439Z Max absolute difference among violations: 8.7789614e+38
2025-01-17T11:31:46.7444560Z Max relative difference among violations: 6.15158527
2025-01-17T11:31:46.7444711Z  ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7444791Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7444944Z  DESIRED: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7445019Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7445296Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-17T11:31:46.7445389Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7445393Z 
2025-01-17T11:31:46.7445477Z Mismatched elements: 5913 / 10000 (59.1%)
2025-01-17T11:31:46.7445607Z Max absolute difference among violations: 3.37212146e+38
2025-01-17T11:31:46.7445730Z Max relative difference among violations: 18356.9353581
2025-01-17T11:31:46.7445885Z  ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7445955Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7446102Z  DESIRED: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7446176Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7446614Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-17T11:31:46.7446707Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7446711Z 
2025-01-17T11:31:46.7446800Z Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.7446925Z Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.7447038Z Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.7447138Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447213Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447289Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7447382Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447458Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447528Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7447941Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-17T11:31:46.7448030Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7448034Z 
2025-01-17T11:31:46.7448122Z Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.7448241Z Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.7448358Z Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.7448507Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7448589Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7448742Z  DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7448819Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7449258Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-17T11:31:46.7449352Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7449356Z 
2025-01-17T11:31:46.7449439Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7449562Z Max absolute difference among violations: 5.54140241e+37
2025-01-17T11:31:46.7449680Z Max relative difference among violations: 156.87686073
2025-01-17T11:31:46.7449833Z  ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-17T11:31:46.7449903Z        2.268272e+31, 2.225999e+31])
2025-01-17T11:31:46.7450056Z  DESIRED: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-17T11:31:46.7450214Z        2.292907e+31, 2.257206e+31])
2025-01-17T11:31:46.7450720Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-17T11:31:46.7450811Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7450815Z 
2025-01-17T11:31:46.7450910Z Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.7451030Z Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.7451141Z Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.7451234Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451306Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451381Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7451471Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451546Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451615Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7452042Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-17T11:31:46.7452131Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7452134Z 
2025-01-17T11:31:46.7452222Z Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.7452343Z Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.7452460Z Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.7452710Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7452786Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7452939Z  DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7453014Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7453448Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-17T11:31:46.7453547Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7453551Z 
2025-01-17T11:31:46.7453640Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7453764Z Max absolute difference among violations: 6.24012248e+37
2025-01-17T11:31:46.7453877Z Max relative difference among violations: 1.92154885
2025-01-17T11:31:46.7454029Z  ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-17T11:31:46.7454100Z        1.315549e+31, 1.281291e+31])
2025-01-17T11:31:46.7454259Z  DESIRED: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-17T11:31:46.7454331Z        1.375141e+31, 1.337928e+31])
2025-01-17T11:31:46.7454761Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-17T11:31:46.7454849Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7454853Z 
2025-01-17T11:31:46.7454949Z Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.7455073Z Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.7455195Z Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.7455285Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455358Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455437Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7455530Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455606Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455679Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7456086Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-17T11:31:46.7456174Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7456178Z 
2025-01-17T11:31:46.7456267Z Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.7456388Z Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.7456632Z Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.7456909Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7456990Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7457142Z  DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7457222Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7457656Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-17T11:31:46.7457750Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7457754Z 
2025-01-17T11:31:46.7457837Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7457960Z Max absolute difference among violations: 5.47728087e+37
2025-01-17T11:31:46.7458071Z Max relative difference among violations: 2.00828984
2025-01-17T11:31:46.7458224Z  ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-17T11:31:46.7458299Z        1.146857e+31, 1.117191e+31])
2025-01-17T11:31:46.7458462Z  DESIRED: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-17T11:31:46.7458534Z        1.193005e+31, 1.164854e+31])
2025-01-17T11:31:46.7458966Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-17T11:31:46.7459057Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7459060Z 
2025-01-17T11:31:46.7459154Z Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.7459272Z Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.7459390Z Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.7459481Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459558Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459632Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7459727Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459809Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459880Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7460290Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-17T11:31:46.7460377Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7460381Z 
2025-01-17T11:31:46.7460471Z Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.7460591Z Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.7460707Z Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.7460857Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7460932Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7461083Z  DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7461158Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7461603Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-17T11:31:46.7461698Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7461702Z 
2025-01-17T11:31:46.7461787Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7461918Z Max absolute difference among violations: 5.25781438e+37
2025-01-17T11:31:46.7462035Z Max relative difference among violations: 18.28099979
2025-01-17T11:31:46.7462187Z  ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-17T11:31:46.7462257Z        2.087889e+31, 2.059957e+31])
2025-01-17T11:31:46.7462411Z  DESIRED: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-17T11:31:46.7462482Z        2.124305e+31, 2.101081e+31])
2025-01-17T11:31:46.7462924Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-17T11:31:46.7463157Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-17T11:31:46.7463258Z 
2025-01-17T11:31:46.7463346Z Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.7463467Z Max absolute difference among violations: 6.13164664e+25
2025-01-17T11:31:46.7463588Z Max relative difference among violations: 0.00076015
2025-01-17T11:31:46.7463737Z  ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-17T11:31:46.7463853Z        6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-17T11:31:46.7463967Z        4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-17T11:31:46.7464117Z  DESIRED: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-17T11:31:46.7464223Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-17T11:31:46.7464333Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-17T11:31:46.7464714Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-17T11:31:46.7464824Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-17T11:31:46.7464835Z 
2025-01-17T11:31:46.7464916Z Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.7465037Z Max absolute difference among violations: 2.36529423e+25
2025-01-17T11:31:46.7465157Z Max relative difference among violations: 0.00039195
2025-01-17T11:31:46.7465299Z  ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-17T11:31:46.7465409Z        6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-17T11:31:46.7465518Z        4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-17T11:31:46.7465668Z  DESIRED: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-17T11:31:46.7465771Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-17T11:31:46.7465884Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-17T11:31:46.7466393Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-17T11:31:46.7466816Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-17T11:31:46.7466907Z Not equal to tolerance rtol=0.01, atol=0
2025-01-17T11:31:46.7466912Z 
2025-01-17T11:31:46.7467006Z Mismatched elements: 75 / 100000 (0.075%)
2025-01-17T11:31:46.7467130Z Max absolute difference among violations: 2.01554089e-05
2025-01-17T11:31:46.7467250Z Max relative difference among violations: 2.08104546
2025-01-17T11:31:46.7467420Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.7467506Z        -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.7467672Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.7467756Z        -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.7468215Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-17T11:31:46.7468318Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7468321Z 
2025-01-17T11:31:46.7468402Z (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.7468558Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.7468663Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.7468780Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.7468923Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.7469031Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.7469139Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.7469589Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-17T11:31:46.7469843Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7469848Z 
2025-01-17T11:31:46.7469932Z (shapes (558,), (560,) mismatch)
2025-01-17T11:31:46.7470069Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.7470177Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.7470289Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.7470433Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.7470532Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.7470645Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.7471082Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-17T11:31:46.7471180Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7471183Z 
2025-01-17T11:31:46.7471260Z (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.7471399Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.7471499Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.7471611Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.7471752Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.7471856Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.7471962Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.7472410Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-17T11:31:46.7472505Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7472509Z 
2025-01-17T11:31:46.7472695Z (shapes (147,), (153,) mismatch)
2025-01-17T11:31:46.7472835Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.7472938Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.7473049Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.7473190Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.7473350Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.7473536Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.7474247Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-17T11:31:46.7474344Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7474349Z 
2025-01-17T11:31:46.7474432Z (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.7474572Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.7474693Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.7474804Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.7474953Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.7475054Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.7475168Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.7475608Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-17T11:31:46.7475704Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7475708Z 
2025-01-17T11:31:46.7475786Z (shapes (1435,), (1481,) mismatch)
2025-01-17T11:31:46.7475944Z  ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-17T11:31:46.7476015Z        11383.689745, 11102.237019])
2025-01-17T11:31:46.7476318Z  DESIRED: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-17T11:31:46.7476487Z        11398.237865, 11111.204868])
2025-01-17T11:31:46.7476946Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - AssertionError: 
2025-01-17T11:31:46.7477037Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7477041Z 
2025-01-17T11:31:46.7477124Z (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.7477253Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7477356Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7477458Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7477535Z        0.      , 1.      ])
2025-01-17T11:31:46.7477664Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7477762Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7477874Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7477977Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.7478424Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-17T11:31:46.7478520Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7478524Z 
2025-01-17T11:31:46.7478601Z (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.7478747Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.7478853Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.7478972Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.7479117Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.7479226Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.7479347Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.7479794Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-17T11:31:46.7479884Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7479888Z 
2025-01-17T11:31:46.7479970Z (shapes (367,), (381,) mismatch)
2025-01-17T11:31:46.7480107Z  ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-17T11:31:46.7480208Z        11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-17T11:31:46.7480321Z        15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-17T11:31:46.7480463Z  DESIRED: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-17T11:31:46.7480570Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-17T11:31:46.7480680Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-17T11:31:46.7481144Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - AssertionError: 
2025-01-17T11:31:46.7481236Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7481240Z 
2025-01-17T11:31:46.7481322Z (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.7481452Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7481548Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7481649Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7481727Z        0.      , 1.      ])
2025-01-17T11:31:46.7481854Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7481948Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7482049Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7482310Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.7482918Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-17T11:31:46.7483022Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7483026Z 
2025-01-17T11:31:46.7483109Z Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.7483216Z Max absolute difference among violations: 5
2025-01-17T11:31:46.7483318Z Max relative difference among violations: inf
2025-01-17T11:31:46.7483475Z  ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.7483549Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.7483702Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.7483777Z          1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.7484193Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-17T11:31:46.7484293Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7484298Z 
2025-01-17T11:31:46.7484387Z Mismatched elements: 2 / 40 (5%)
2025-01-17T11:31:46.7484487Z Max absolute difference among violations: 15.
2025-01-17T11:31:46.7484589Z Max relative difference among violations: inf
2025-01-17T11:31:46.7484670Z  ACTUAL: array([[1.10e+04, 1.50e+01],
2025-01-17T11:31:46.7484749Z        [1.19e+04, 1.50e+01],
2025-01-17T11:31:46.7484823Z        [1.19e+04, 1.00e+00],...
2025-01-17T11:31:46.7484904Z  DESIRED: array([[1.10e+04, 0.00e+00],
2025-01-17T11:31:46.7484980Z        [1.19e+04, 0.00e+00],
2025-01-17T11:31:46.7485050Z        [1.19e+04, 4.00e+00],...
2025-01-17T11:31:46.7485460Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - AssertionError: 
2025-01-17T11:31:46.7485544Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7485553Z 
2025-01-17T11:31:46.7485639Z Mismatched elements: 12 / 40 (30%)
2025-01-17T11:31:46.7485740Z Max absolute difference among violations: 59.
2025-01-17T11:31:46.7485844Z Max relative difference among violations: 59.
2025-01-17T11:31:46.7485925Z  ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-17T11:31:46.7486000Z        [1.19e+04, 6.00e+01],
2025-01-17T11:31:46.7486070Z        [1.19e+04, 3.10e+01],...
2025-01-17T11:31:46.7486154Z  DESIRED: array([[1.10e+04, 1.00e+00],
2025-01-17T11:31:46.7486224Z        [1.19e+04, 1.00e+00],
2025-01-17T11:31:46.7486300Z        [1.19e+04, 0.00e+00],...
2025-01-17T11:31:46.7486703Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-17T11:31:46.7486793Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7486797Z 
2025-01-17T11:31:46.7486878Z Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.7486979Z Max absolute difference among violations: 5
2025-01-17T11:31:46.7487083Z Max relative difference among violations: inf
2025-01-17T11:31:46.7487236Z  ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.7487310Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.7487461Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.7487537Z          1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.7487944Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-17T11:31:46.7488029Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7488033Z 
2025-01-17T11:31:46.7488117Z Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.7488218Z Max absolute difference among violations: 15
2025-01-17T11:31:46.7488317Z Max relative difference among violations: inf
2025-01-17T11:31:46.7488457Z  ACTUAL: array([15, 15,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,
2025-01-17T11:31:46.7488671Z         0,  0,  0])
2025-01-17T11:31:46.7488906Z  DESIRED: array([0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.7489311Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - AssertionError: 
2025-01-17T11:31:46.7489404Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7489408Z 
2025-01-17T11:31:46.7489488Z Mismatched elements: 12 / 20 (60%)
2025-01-17T11:31:46.7489593Z Max absolute difference among violations: 59
2025-01-17T11:31:46.7489692Z Max relative difference among violations: 59.
2025-01-17T11:31:46.7489834Z  ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-17T11:31:46.7489901Z         1,  0,  0])
2025-01-17T11:31:46.7490038Z  DESIRED: array([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.7490497Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-17T11:31:46.7490605Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7490609Z 
2025-01-17T11:31:46.7490692Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7490828Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7490946Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7491107Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7491184Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7491346Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7491418Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7491882Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-17T11:31:46.7491972Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7491980Z 
2025-01-17T11:31:46.7492073Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7492200Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7492322Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7492473Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7492650Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7492806Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7492886Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7493341Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-17T11:31:46.7493440Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7493444Z 
2025-01-17T11:31:46.7493527Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7493660Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7493784Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7493943Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7494014Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7494166Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7494244Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7494695Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-17T11:31:46.7494803Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7494807Z 
2025-01-17T11:31:46.7494890Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7495020Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7495134Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7495412Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7495582Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7495743Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7495813Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7496276Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-17T11:31:46.7496364Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7496368Z 
2025-01-17T11:31:46.7496459Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7496578Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7496703Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7496852Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7496929Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7497085Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7497165Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7497616Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-17T11:31:46.7497713Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7497717Z 
2025-01-17T11:31:46.7497798Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7497922Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7498040Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7498190Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7498260Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7498416Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7498487Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7498956Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-17T11:31:46.7499049Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7499052Z 
2025-01-17T11:31:46.7499139Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7499264Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7499383Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7499531Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7499606Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7499754Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7499830Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7500285Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-17T11:31:46.7500383Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7500396Z 
2025-01-17T11:31:46.7500479Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7500601Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7500722Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7500870Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7500946Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7501095Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7501171Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7501627Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-17T11:31:46.7501725Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7501729Z 
2025-01-17T11:31:46.7501899Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7502102Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7502218Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7502373Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7502444Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7502728Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7502801Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7503262Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-17T11:31:46.7503350Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7503353Z 
2025-01-17T11:31:46.7503441Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7503561Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7503689Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7503842Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7503920Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7504070Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7504146Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7504605Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-17T11:31:46.7504702Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7504706Z 
2025-01-17T11:31:46.7504789Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7504918Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7505031Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7505185Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7505259Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7505422Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7505492Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7505954Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-17T11:31:46.7506043Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7506047Z 
2025-01-17T11:31:46.7506135Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7506258Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7506377Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7506536Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7506608Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7506767Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7506842Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7511147Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-17T11:31:46.7511282Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7511288Z 
2025-01-17T11:31:46.7511385Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7511525Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7511658Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7511824Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7511907Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7512073Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7512145Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7512937Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-17T11:31:46.7513165Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7513174Z 
2025-01-17T11:31:46.7513262Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7513393Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7513517Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7513672Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7513749Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7513899Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7513972Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7514444Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-17T11:31:46.7514548Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7514552Z 
2025-01-17T11:31:46.7514640Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7514768Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7514885Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7515041Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7515112Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7515266Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7515335Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7515798Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-17T11:31:46.7515889Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7515893Z 
2025-01-17T11:31:46.7515982Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7516108Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7516231Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7516382Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7516460Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7516613Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7516687Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7517105Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-17T11:31:46.7517200Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7517204Z 
2025-01-17T11:31:46.7517286Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7517413Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7517528Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7517689Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7517765Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7517920Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7517990Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7518401Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-17T11:31:46.7518499Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7518503Z 
2025-01-17T11:31:46.7518591Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7518720Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7518834Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7518987Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7519057Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7519300Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7519442Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7519858Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-17T11:31:46.7519948Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7519952Z 
2025-01-17T11:31:46.7520043Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7520164Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7520284Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7520429Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7520505Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7520654Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7520728Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7521179Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-17T11:31:46.7521277Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7521281Z 
2025-01-17T11:31:46.7521360Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7521486Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7521598Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7521750Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7521819Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7521972Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7522041Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7522459Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-17T11:31:46.7522728Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7522735Z 
2025-01-17T11:31:46.7522888Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7523021Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7523145Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7523294Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7523368Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7523517Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7523592Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7524005Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-17T11:31:46.7524092Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7524101Z 
2025-01-17T11:31:46.7524185Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7524313Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7524437Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7524585Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7524662Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7524811Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7524886Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7525295Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-17T11:31:46.7525389Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7525394Z 
2025-01-17T11:31:46.7525477Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7525600Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7525713Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7526119Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7526193Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7526347Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7526416Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7526831Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-17T11:31:46.7526921Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7526925Z 
2025-01-17T11:31:46.7527014Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7527130Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7527250Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7527395Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7527470Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7527632Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7527707Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7528113Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-17T11:31:46.7528208Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7528211Z 
2025-01-17T11:31:46.7528294Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7528421Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7528534Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7528689Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7528758Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7528912Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7528980Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7529402Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-17T11:31:46.7529491Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7529495Z 
2025-01-17T11:31:46.7529581Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7529705Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7529818Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7529968Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7530039Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7530195Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7530263Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7530682Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-17T11:31:46.7530777Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7530784Z 
2025-01-17T11:31:46.7530870Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7530989Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7531106Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7531257Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7531332Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7531479Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7531554Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7531967Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-17T11:31:46.7532061Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7532064Z 
2025-01-17T11:31:46.7532145Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7532366Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7532667Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7532827Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7532898Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7533050Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7533122Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7533539Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-17T11:31:46.7533627Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7533630Z 
2025-01-17T11:31:46.7533716Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7533837Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7533955Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7534115Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7534190Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7534338Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7534413Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7534821Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-17T11:31:46.7534916Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7534920Z 
2025-01-17T11:31:46.7535002Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7535120Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7535238Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7535385Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7535461Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7535619Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7535695Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7536105Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-17T11:31:46.7536200Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7536204Z 
2025-01-17T11:31:46.7536284Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7536410Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7536525Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7536679Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7536750Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7536902Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7536972Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7537398Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-17T11:31:46.7537489Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7537493Z 
2025-01-17T11:31:46.7537580Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7537700Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7537818Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7537969Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7538044Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7538190Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7538267Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7538530Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 222 warnings in 773.62s (0:12:53) =
2025-01-17T11:31:48.7255512Z ##[error]Process completed with exit code 1.
2025-01-17T11:31:48.7327423Z Post job cleanup.
2025-01-17T11:31:48.7358041Z Post job cleanup.
2025-01-17T11:31:48.8695692Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-01-17T11:31:48.8703115Z Removing micromamba run shell ...
2025-01-17T11:31:48.8707001Z ##[group]Deinitialize micromamba for bash
2025-01-17T11:31:48.8725952Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:31:48.8827653Z Resetting RC file "/home/runner/.bashrc"
2025-01-17T11:31:48.8828170Z Deleting config for root prefix 
2025-01-17T11:31:48.8828669Z Clearing mamba executable environment variable
2025-01-17T11:31:48.8830474Z Removing the following in your "/home/runner/.bashrc" file
2025-01-17T11:31:48.8831018Z # >>> mamba initialize >>>
2025-01-17T11:31:48.8831355Z ...
2025-01-17T11:31:48.8831876Z # <<< mamba initialize <<<
2025-01-17T11:31:48.8860303Z Removing mamba initialize block from .bash_profile
2025-01-17T11:31:48.8875291Z ##[endgroup]
2025-01-17T11:31:48.8879776Z Removing environment tardis from auto-activate bash ...
2025-01-17T11:31:48.8997735Z Post job cleanup.
2025-01-17T11:31:48.9034736Z Post job cleanup.
2025-01-17T11:31:49.0058539Z [command]/usr/bin/git version
2025-01-17T11:31:49.0094488Z git version 2.47.1
2025-01-17T11:31:49.0144318Z Temporarily overriding HOME='/home/runner/work/_temp/7485c982-5c6a-48c8-8966-744da699b847' before making global git config changes
2025-01-17T11:31:49.0145609Z Adding repository directory to the temporary git global config as a safe directory
2025-01-17T11:31:49.0150475Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-17T11:31:49.0184618Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-17T11:31:49.0216902Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-17T11:31:49.0462870Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-17T11:31:49.0486784Z http.https://github.com/.extraheader
2025-01-17T11:31:49.0499388Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-17T11:31:49.0533427Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-17T11:31:49.0929633Z Post job cleanup.
2025-01-17T11:31:49.1867217Z [command]/usr/bin/git version
2025-01-17T11:31:49.1902966Z git version 2.47.1
2025-01-17T11:31:49.1953440Z Temporarily overriding HOME='/home/runner/work/_temp/12ff88dd-676d-4700-9628-1eff19b01ceb' before making global git config changes
2025-01-17T11:31:49.1954642Z Adding repository directory to the temporary git global config as a safe directory
2025-01-17T11:31:49.1958728Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-17T11:31:49.1992346Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-17T11:31:49.2024615Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-17T11:31:49.2253523Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-17T11:31:49.2274107Z http.https://github.com/.extraheader
2025-01-17T11:31:49.2286780Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-17T11:31:49.2326403Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-17T11:31:49.2645162Z Cleaning up orphan processes
