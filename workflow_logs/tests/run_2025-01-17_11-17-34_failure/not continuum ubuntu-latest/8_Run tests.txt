2025-01-17T11:18:45.5182789Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-17T11:18:45.5184072Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-17T11:18:45.5211435Z shell: /usr/bin/bash -l {0}
2025-01-17T11:18:45.5211678Z env:
2025-01-17T11:18:45.5211843Z   CACHE_NUMBER: 0
2025-01-17T11:18:45.5212446Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:18:45.5213360Z   CODECOV_TOKEN: 
2025-01-17T11:18:45.5213575Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-17T11:18:45.5213868Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-17T11:18:45.5214218Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:18:45.5214554Z ##[endgroup]
2025-01-17T11:18:54.7287637Z ============================= test session starts ==============================
2025-01-17T11:18:54.7288652Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-17T11:18:54.7289258Z rootdir: /home/runner/work/tardis/tardis
2025-01-17T11:18:54.7289713Z configfile: pyproject.toml
2025-01-17T11:18:54.7290259Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-17T11:18:54.7290907Z collected 1796 items / 2 deselected / 1794 selected
2025-01-17T11:18:54.7291226Z 
2025-01-17T11:19:00.0594633Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-17T11:19:01.6606652Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-17T11:19:03.3615281Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-17T11:19:05.3499750Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-17T11:19:05.3607568Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-17T11:19:06.7090761Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-17T11:19:07.0621297Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-17T11:19:07.0638450Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-17T11:19:10.8463992Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-17T11:19:10.8593222Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-17T11:19:10.8893838Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-17T11:19:52.1393796Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-17T11:19:52.1540548Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-17T11:19:52.1648941Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-17T11:19:52.1979395Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-17T11:19:52.2217074Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-17T11:19:52.5385370Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-17T11:19:52.8839166Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-17T11:19:52.9213193Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-17T11:19:53.1250771Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-17T11:19:53.1325341Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-17T11:20:55.3231092Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-17T11:20:56.3591900Z ............                                                             [ 10%]
2025-01-17T11:20:59.5625774Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-17T11:20:59.6141799Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-17T11:21:01.0006221Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-17T11:21:02.4076384Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-17T11:21:04.8043934Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-17T11:21:07.8568016Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-17T11:21:55.4948443Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-17T11:22:07.0842815Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-17T11:22:08.8408609Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-01-17T11:22:12.4832052Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-17T11:22:14.9475797Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-17T11:22:18.6195461Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-01-17T11:22:22.6296288Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-17T11:22:24.0274469Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-01-17T11:22:27.7891232Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-01-17T11:22:31.8025880Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-01-17T11:22:35.7993632Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-17T11:22:38.5488095Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-01-17T11:22:42.1231269Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-01-17T11:22:46.4538842Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-01-17T11:22:47.1657577Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-17T11:22:47.4510498Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-17T11:22:47.4637591Z ......                                                                   [ 62%]
2025-01-17T11:22:47.6077900Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-17T11:25:08.0550240Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-17T11:25:08.0577623Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-17T11:25:31.6273593Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-17T11:25:44.9723198Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-17T11:25:45.7318204Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-17T11:25:54.5415774Z tardis/simulation/tests/test_simulation.py FFFFFFFFFF...                 [ 65%]
2025-01-17T11:25:54.5614528Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-17T11:25:55.0295317Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-17T11:25:55.0369997Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-17T11:25:57.1673864Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-17T11:25:57.1866939Z ..........                                                               [ 69%]
2025-01-17T11:25:57.3569655Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-17T11:25:57.3896889Z .........                                                                [ 72%]
2025-01-17T11:26:16.0926216Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-17T11:27:19.5707368Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-17T11:28:46.2885888Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-17T11:28:46.3649516Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-17T11:28:49.0618428Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-17T11:28:56.5349762Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-17T11:28:56.7685312Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-17T11:28:56.7862271Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-17T11:28:56.8285665Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-17T11:29:05.7920214Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-17T11:29:05.7986935Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-17T11:29:12.2093666Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-17T11:29:12.6890564Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-17T11:29:13.7173891Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-17T11:29:13.8587453Z XX.........                                                              [ 84%]
2025-01-17T11:29:13.8862696Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-17T11:29:14.1947268Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-17T11:29:14.6190815Z .....                                                                    [ 85%]
2025-01-17T11:29:49.4805930Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-17T11:29:49.5100731Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-17T11:29:49.5132962Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-17T11:29:52.4871847Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-17T11:29:52.5043476Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-17T11:29:56.3441206Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-17T11:29:56.3442265Z                                                                          [ 86%]
2025-01-17T11:29:57.0746275Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-17T11:29:58.4204055Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-17T11:30:00.6371987Z ......                                                                   [ 88%]
2025-01-17T11:30:05.5629731Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..FF.F [ 90%]
2025-01-17T11:30:08.9076955Z ..FF.....FF.F............FF.F                                            [ 91%]
2025-01-17T11:30:11.8470558Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-17T11:30:18.9514263Z ....                                                                     [ 92%]
2025-01-17T11:30:25.0611923Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-17T11:30:33.3314057Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-17T11:30:33.7637506Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-17T11:30:33.8339478Z ....                                                                     [ 96%]
2025-01-17T11:30:34.8947940Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-17T11:30:35.5175124Z ..................                                                       [ 98%]
2025-01-17T11:31:39.0140544Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-17T11:31:46.4029114Z ......                                                                   [100%]
2025-01-17T11:31:46.4029537Z 
2025-01-17T11:31:46.4029724Z =================================== FAILURES ===================================
2025-01-17T11:31:46.4030386Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-17T11:31:46.4030834Z 
2025-01-17T11:31:46.4031024Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-17T11:31:46.4031662Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-17T11:31:46.4032151Z 
2025-01-17T11:31:46.4032409Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4033684Z         if err_msg is None:
2025-01-17T11:31:46.4034110Z             if left.shape != right.shape:
2025-01-17T11:31:46.4034612Z                 raise_assert_detail(
2025-01-17T11:31:46.4035257Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4035954Z                 )
2025-01-17T11:31:46.4036345Z     
2025-01-17T11:31:46.4036652Z             diff = 0
2025-01-17T11:31:46.4037039Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4037532Z                 # count up differences
2025-01-17T11:31:46.4038094Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4038542Z                     diff += 1
2025-01-17T11:31:46.4038780Z     
2025-01-17T11:31:46.4038977Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4039326Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4039794Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4040241Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4040552Z E           
2025-01-17T11:31:46.4040799Z E           numpy array values are different (0.08897 %)
2025-01-17T11:31:46.4041510Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-17T11:31:46.4042786Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-17T11:31:46.4043391Z 
2025-01-17T11:31:46.4043780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4044252Z 
2025-01-17T11:31:46.4044454Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4044752Z 
2025-01-17T11:31:46.4045033Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81765d6fc0>
2025-01-17T11:31:46.4045736Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f81546d0320>
2025-01-17T11:31:46.4046153Z 
2025-01-17T11:31:46.4046259Z     def test_calculate_sobolev_line_opacity(
2025-01-17T11:31:46.4046538Z         nb_simulation_verysimple, regression_data
2025-01-17T11:31:46.4046789Z     ):
2025-01-17T11:31:46.4046999Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-17T11:31:46.4047258Z     
2025-01-17T11:31:46.4047485Z         actual = calculate_sobolev_line_opacity(
2025-01-17T11:31:46.4048382Z             legacy_plasma.lines,
2025-01-17T11:31:46.4048799Z             legacy_plasma.level_number_density,
2025-01-17T11:31:46.4049466Z             legacy_plasma.time_explosion,
2025-01-17T11:31:46.4049811Z             legacy_plasma.stimulated_emission_factor,
2025-01-17T11:31:46.4050253Z         )
2025-01-17T11:31:46.4050613Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.4051118Z >       pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4051434Z 
2025-01-17T11:31:46.4051620Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-17T11:31:46.4053083Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4053703Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4054220Z     ???
2025-01-17T11:31:46.4054565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4054919Z 
2025-01-17T11:31:46.4055043Z >   ???
2025-01-17T11:31:46.4055393Z E   AssertionError: MultiIndex level [0] are different
2025-01-17T11:31:46.4055866Z E   
2025-01-17T11:31:46.4056236Z E   MultiIndex level [0] values are different (0.08897 %)
2025-01-17T11:31:46.4056778Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.4057216Z E          ...
2025-01-17T11:31:46.4057512Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.4057983Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.4058500Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.4058944Z E          ...
2025-01-17T11:31:46.4059247Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.4059716Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.4060216Z E   At positional index 54, first diff: 14 != 12
2025-01-17T11:31:46.4060539Z 
2025-01-17T11:31:46.4060678Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4061189Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.4062208Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.4063629Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.4064640Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:31:46.4065048Z 
2025-01-17T11:31:46.4065054Z 
2025-01-17T11:31:46.4065463Z Packets:                                                                                   4021/? [00:12<00:00, 243.67it/s]  [A
2025-01-17T11:31:46.4066393Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.84s/it]
2025-01-17T11:31:46.4066861Z 
2025-01-17T11:31:46.4067264Z Packets:                                                                                   4030/? [00:12<00:00, 243.67it/s][A
2025-01-17T11:31:46.4067908Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.4069189Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.4070475Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-17T11:31:46.4070880Z 
2025-01-17T11:31:46.4071281Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81765d6fc0>
2025-01-17T11:31:46.4072283Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f81763e9460>
2025-01-17T11:31:46.4073024Z 
2025-01-17T11:31:46.4073361Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-17T11:31:46.4074032Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-17T11:31:46.4074471Z     
2025-01-17T11:31:46.4074796Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-17T11:31:46.4075492Z             legacy_plasma.lines,
2025-01-17T11:31:46.4075904Z             legacy_plasma.level_number_density,
2025-01-17T11:31:46.4076504Z             legacy_plasma.time_explosion,
2025-01-17T11:31:46.4076960Z             legacy_plasma.stimulated_emission_factor,
2025-01-17T11:31:46.4077387Z         )
2025-01-17T11:31:46.4077713Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-17T11:31:46.4078212Z         expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.4078700Z >       npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.4079000Z 
2025-01-17T11:31:46.4079181Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-17T11:31:46.4079682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4080023Z 
2025-01-17T11:31:46.4080474Z args = (<function assert_allclose.<locals>.compare at 0x7f8169bf1080>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4081191Z        [1., 1., .....,
2025-01-17T11:31:46.4081513Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4081885Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4082256Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-17T11:31:46.4084231Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.4084827Z 
2025-01-17T11:31:46.4084959Z     @wraps(func)
2025-01-17T11:31:46.4085264Z     def inner(*args, **kwds):
2025-01-17T11:31:46.4085621Z         with self._recreate_cm():
2025-01-17T11:31:46.4086011Z >           return func(*args, **kwds)
2025-01-17T11:31:46.4086405Z E           AssertionError: 
2025-01-17T11:31:46.4086810Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.4087226Z E           
2025-01-17T11:31:46.4087544Z E           Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.4088049Z E           Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.4088492Z E           Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.4088804Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4089069Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4089311Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.4089582Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4089854Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.4090091Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.4090247Z 
2025-01-17T11:31:46.4090456Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.4090924Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-17T11:31:46.4091206Z 
2025-01-17T11:31:46.4091327Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4091658Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4091961Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4092260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4092810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4093112Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4093351Z err_msg = None
2025-01-17T11:31:46.4093463Z 
2025-01-17T11:31:46.4093569Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4093838Z         if err_msg is None:
2025-01-17T11:31:46.4094061Z             if left.shape != right.shape:
2025-01-17T11:31:46.4094302Z                 raise_assert_detail(
2025-01-17T11:31:46.4094589Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4094869Z                 )
2025-01-17T11:31:46.4095034Z     
2025-01-17T11:31:46.4095373Z             diff = 0
2025-01-17T11:31:46.4095591Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4095964Z                 # count up differences
2025-01-17T11:31:46.4096478Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4097035Z                     diff += 1
2025-01-17T11:31:46.4097372Z     
2025-01-17T11:31:46.4097644Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4098122Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4098860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4099466Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4099874Z E           
2025-01-17T11:31:46.4100079Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4100515Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4101126Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4101464Z 
2025-01-17T11:31:46.4101783Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4102164Z 
2025-01-17T11:31:46.4102334Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4102792Z 
2025-01-17T11:31:46.4103024Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e90cdd0>
2025-01-17T11:31:46.4103491Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4103800Z attr = 'lines'
2025-01-17T11:31:46.4103905Z 
2025-01-17T11:31:46.4104043Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4104353Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4104616Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4104819Z         try:
2025-01-17T11:31:46.4105050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4105336Z         except KeyError:
2025-01-17T11:31:46.4105589Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4105861Z     
2025-01-17T11:31:46.4106027Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4106258Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4106509Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4106800Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4107095Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4107328Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4107598Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4107851Z             else:
2025-01-17T11:31:46.4108042Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4108311Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4108494Z 
2025-01-17T11:31:46.4108614Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4108920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4109249Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4109530Z     ???
2025-01-17T11:31:46.4109725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4109910Z 
2025-01-17T11:31:46.4109979Z >   ???
2025-01-17T11:31:46.4110184Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4110646Z E   
2025-01-17T11:31:46.4110858Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4111271Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4111522Z E          ...
2025-01-17T11:31:46.4111702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4111985Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4112295Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4112707Z E          ...
2025-01-17T11:31:46.4112897Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4113175Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4113470Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4113642Z 
2025-01-17T11:31:46.4113732Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4114086Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-17T11:31:46.4114616Z 
2025-01-17T11:31:46.4114980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817ef3b9e0>
2025-01-17T11:31:46.4115799Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4116351Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4116600Z 
2025-01-17T11:31:46.4116814Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4117343Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4117788Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4118123Z         try:
2025-01-17T11:31:46.4118493Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4118784Z         except KeyError:
2025-01-17T11:31:46.4119036Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4119312Z     
2025-01-17T11:31:46.4119478Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4119703Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4119953Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4120236Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4120565Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4120791Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4121048Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4121243Z 
2025-01-17T11:31:46.4121363Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4121667Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4121865Z 
2025-01-17T11:31:46.4122005Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4122305Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4122732Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4123002Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4123290Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4123587Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4123836Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4124089Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4124310Z err_msg = None
2025-01-17T11:31:46.4124416Z 
2025-01-17T11:31:46.4124522Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4124780Z         if err_msg is None:
2025-01-17T11:31:46.4125004Z             if left.shape != right.shape:
2025-01-17T11:31:46.4125250Z                 raise_assert_detail(
2025-01-17T11:31:46.4125537Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4125829Z                 )
2025-01-17T11:31:46.4125996Z     
2025-01-17T11:31:46.4126144Z             diff = 0
2025-01-17T11:31:46.4126356Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4126772Z                 # count up differences
2025-01-17T11:31:46.4127089Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4127527Z                     diff += 1
2025-01-17T11:31:46.4127728Z     
2025-01-17T11:31:46.4127896Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4128189Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4128565Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4128917Z E           AssertionError: Series are different
2025-01-17T11:31:46.4129169Z E           
2025-01-17T11:31:46.4129366Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4129909Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4130682Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4131406Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4131815Z 
2025-01-17T11:31:46.4132125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4133191Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-17T11:31:46.4133715Z 
2025-01-17T11:31:46.4134078Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaea180>
2025-01-17T11:31:46.4134868Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4135413Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4135666Z 
2025-01-17T11:31:46.4135890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4136221Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4136491Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4136698Z         try:
2025-01-17T11:31:46.4136932Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4137217Z         except KeyError:
2025-01-17T11:31:46.4137486Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4137762Z     
2025-01-17T11:31:46.4137943Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4138176Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4138425Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4138715Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4139003Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4139230Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4139494Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4139678Z 
2025-01-17T11:31:46.4139802Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4140104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4140296Z 
2025-01-17T11:31:46.4140422Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4140897Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4141157Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4141519Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4141802Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4142096Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4142351Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4142836Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4143060Z err_msg = None
2025-01-17T11:31:46.4143160Z 
2025-01-17T11:31:46.4143270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4143522Z         if err_msg is None:
2025-01-17T11:31:46.4143741Z             if left.shape != right.shape:
2025-01-17T11:31:46.4143980Z                 raise_assert_detail(
2025-01-17T11:31:46.4144264Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4144552Z                 )
2025-01-17T11:31:46.4144721Z     
2025-01-17T11:31:46.4144870Z             diff = 0
2025-01-17T11:31:46.4145095Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4145358Z                 # count up differences
2025-01-17T11:31:46.4145673Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4145994Z                     diff += 1
2025-01-17T11:31:46.4146190Z     
2025-01-17T11:31:46.4146351Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4146637Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4147011Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4147349Z E           AssertionError: Series are different
2025-01-17T11:31:46.4147593Z E           
2025-01-17T11:31:46.4147785Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4148327Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4149144Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4150270Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4151097Z 
2025-01-17T11:31:46.4151613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4152354Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-17T11:31:46.4152722Z 
2025-01-17T11:31:46.4152851Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4153174Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4153471Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4153766Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4154236Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4154625Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4154860Z err_msg = None
2025-01-17T11:31:46.4154969Z 
2025-01-17T11:31:46.4155071Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4155326Z         if err_msg is None:
2025-01-17T11:31:46.4155547Z             if left.shape != right.shape:
2025-01-17T11:31:46.4155786Z                 raise_assert_detail(
2025-01-17T11:31:46.4156076Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4156360Z                 )
2025-01-17T11:31:46.4156526Z     
2025-01-17T11:31:46.4156675Z             diff = 0
2025-01-17T11:31:46.4156887Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4157150Z                 # count up differences
2025-01-17T11:31:46.4157468Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4157787Z                     diff += 1
2025-01-17T11:31:46.4157987Z     
2025-01-17T11:31:46.4158147Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4158430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4158800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4159154Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4159403Z E           
2025-01-17T11:31:46.4159602Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4160035Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4160633Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4160979Z 
2025-01-17T11:31:46.4161272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4161647Z 
2025-01-17T11:31:46.4161808Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4162051Z 
2025-01-17T11:31:46.4162272Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaeb290>
2025-01-17T11:31:46.4162869Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>, attr = 'nu'
2025-01-17T11:31:46.4163139Z 
2025-01-17T11:31:46.4163277Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4163599Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4163867Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4164074Z         try:
2025-01-17T11:31:46.4164300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4164584Z         except KeyError:
2025-01-17T11:31:46.4164838Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4165114Z     
2025-01-17T11:31:46.4165275Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4165508Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4165756Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4166040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4166324Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4166550Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4166812Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4167116Z 
2025-01-17T11:31:46.4167240Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4167542Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4168177Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4168669Z     ???
2025-01-17T11:31:46.4168988Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4169319Z 
2025-01-17T11:31:46.4169425Z >   ???
2025-01-17T11:31:46.4169764Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4170174Z E   
2025-01-17T11:31:46.4170382Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4170688Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4170938Z E          ...
2025-01-17T11:31:46.4171116Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4171398Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4171837Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4172226Z E          ...
2025-01-17T11:31:46.4172414Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4172874Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4173173Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4173351Z 
2025-01-17T11:31:46.4173434Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4173776Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-17T11:31:46.4174059Z 
2025-01-17T11:31:46.4174178Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4174502Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4174799Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4175099Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4175433Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4175727Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4175960Z err_msg = None
2025-01-17T11:31:46.4176062Z 
2025-01-17T11:31:46.4176168Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4176420Z         if err_msg is None:
2025-01-17T11:31:46.4176631Z             if left.shape != right.shape:
2025-01-17T11:31:46.4176879Z                 raise_assert_detail(
2025-01-17T11:31:46.4177165Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4177448Z                 )
2025-01-17T11:31:46.4177616Z     
2025-01-17T11:31:46.4177767Z             diff = 0
2025-01-17T11:31:46.4177982Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4178244Z                 # count up differences
2025-01-17T11:31:46.4178557Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4178887Z                     diff += 1
2025-01-17T11:31:46.4179083Z     
2025-01-17T11:31:46.4179241Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4179525Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4180118Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4180476Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4180724Z E           
2025-01-17T11:31:46.4180922Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4181359Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4182098Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4182724Z 
2025-01-17T11:31:46.4183183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4183572Z 
2025-01-17T11:31:46.4183732Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4183979Z 
2025-01-17T11:31:46.4184192Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaebf50>
2025-01-17T11:31:46.4184646Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4184960Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4185081Z 
2025-01-17T11:31:46.4185211Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4185535Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4185955Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4186324Z         try:
2025-01-17T11:31:46.4186704Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4187193Z         except KeyError:
2025-01-17T11:31:46.4187616Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4188077Z     
2025-01-17T11:31:46.4188352Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4188749Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4189165Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4189498Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4189781Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4190006Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4190269Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4190458Z 
2025-01-17T11:31:46.4190585Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4190886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4191221Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4191500Z     ???
2025-01-17T11:31:46.4191685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4191877Z 
2025-01-17T11:31:46.4191941Z >   ???
2025-01-17T11:31:46.4192144Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4192404Z E   
2025-01-17T11:31:46.4192822Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4193136Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4193383Z E          ...
2025-01-17T11:31:46.4193563Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4193850Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4194161Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4194411Z E          ...
2025-01-17T11:31:46.4194592Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4194864Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4195154Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4195340Z 
2025-01-17T11:31:46.4195426Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4195754Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-17T11:31:46.4196022Z 
2025-01-17T11:31:46.4196143Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4196469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4196765Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4197054Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4197534Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4197921Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4198153Z err_msg = None
2025-01-17T11:31:46.4198252Z 
2025-01-17T11:31:46.4198360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4198616Z         if err_msg is None:
2025-01-17T11:31:46.4198836Z             if left.shape != right.shape:
2025-01-17T11:31:46.4199078Z                 raise_assert_detail(
2025-01-17T11:31:46.4199358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4199644Z                 )
2025-01-17T11:31:46.4199812Z     
2025-01-17T11:31:46.4199962Z             diff = 0
2025-01-17T11:31:46.4200176Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4200437Z                 # count up differences
2025-01-17T11:31:46.4200761Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4201088Z                     diff += 1
2025-01-17T11:31:46.4201288Z     
2025-01-17T11:31:46.4201450Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4201735Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4202103Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4202456Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4202817Z E           
2025-01-17T11:31:46.4203025Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4203476Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4204575Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4205190Z 
2025-01-17T11:31:46.4205703Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4206374Z 
2025-01-17T11:31:46.4206645Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4207074Z 
2025-01-17T11:31:46.4207339Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaeb1d0>
2025-01-17T11:31:46.4207832Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>, attr = 'f_lu'
2025-01-17T11:31:46.4208112Z 
2025-01-17T11:31:46.4208245Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4208569Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4208834Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4209043Z         try:
2025-01-17T11:31:46.4209275Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4209563Z         except KeyError:
2025-01-17T11:31:46.4209820Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4210095Z     
2025-01-17T11:31:46.4210259Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4210494Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4210733Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4211016Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4211299Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4211533Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4211797Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4212131Z 
2025-01-17T11:31:46.4212250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4212660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4213108Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4213387Z     ???
2025-01-17T11:31:46.4213577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4213770Z 
2025-01-17T11:31:46.4213837Z >   ???
2025-01-17T11:31:46.4214038Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4214297Z E   
2025-01-17T11:31:46.4214498Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4214806Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4215056Z E          ...
2025-01-17T11:31:46.4215235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4215517Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4215831Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4216077Z E          ...
2025-01-17T11:31:46.4216259Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4216536Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4216826Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4217005Z 
2025-01-17T11:31:46.4217092Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4217432Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-17T11:31:46.4217703Z 
2025-01-17T11:31:46.4217829Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4218148Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4218446Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4218738Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4219070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4219364Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4219599Z err_msg = None
2025-01-17T11:31:46.4219703Z 
2025-01-17T11:31:46.4219807Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4220058Z         if err_msg is None:
2025-01-17T11:31:46.4220272Z             if left.shape != right.shape:
2025-01-17T11:31:46.4220550Z                 raise_assert_detail(
2025-01-17T11:31:46.4220840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4221121Z                 )
2025-01-17T11:31:46.4221288Z     
2025-01-17T11:31:46.4221432Z             diff = 0
2025-01-17T11:31:46.4221649Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4221911Z                 # count up differences
2025-01-17T11:31:46.4222240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4222650Z                     diff += 1
2025-01-17T11:31:46.4222850Z     
2025-01-17T11:31:46.4223014Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4223300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4223667Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4224018Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4224266Z E           
2025-01-17T11:31:46.4224466Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4224895Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4225612Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4226055Z 
2025-01-17T11:31:46.4226359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4226732Z 
2025-01-17T11:31:46.4226898Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4227272Z 
2025-01-17T11:31:46.4227645Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8b90>
2025-01-17T11:31:46.4228366Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4228680Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4228796Z 
2025-01-17T11:31:46.4228932Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4229382Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4229656Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4229859Z         try:
2025-01-17T11:31:46.4230088Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4230376Z         except KeyError:
2025-01-17T11:31:46.4230630Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4230900Z     
2025-01-17T11:31:46.4231065Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4231297Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4231541Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4231824Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4232103Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4232334Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4232803Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4233069Z             else:
2025-01-17T11:31:46.4233265Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4233533Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4233712Z 
2025-01-17T11:31:46.4233827Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4234132Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4234463Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4234743Z     ???
2025-01-17T11:31:46.4234932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4235120Z 
2025-01-17T11:31:46.4235189Z >   ???
2025-01-17T11:31:46.4235393Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4235646Z E   
2025-01-17T11:31:46.4235858Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4236162Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4236413Z E          ...
2025-01-17T11:31:46.4236596Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4236879Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4237188Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4237437Z E          ...
2025-01-17T11:31:46.4237617Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4237892Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4238183Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4238355Z 
2025-01-17T11:31:46.4238443Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4238771Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-17T11:31:46.4239049Z 
2025-01-17T11:31:46.4239170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4239491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4239957Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4240349Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4240673Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4240960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4241195Z err_msg = None
2025-01-17T11:31:46.4241299Z 
2025-01-17T11:31:46.4241400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4241649Z         if err_msg is None:
2025-01-17T11:31:46.4241863Z             if left.shape != right.shape:
2025-01-17T11:31:46.4242255Z                 raise_assert_detail(
2025-01-17T11:31:46.4242817Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4243285Z                 )
2025-01-17T11:31:46.4243557Z     
2025-01-17T11:31:46.4243809Z             diff = 0
2025-01-17T11:31:46.4244155Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4244570Z                 # count up differences
2025-01-17T11:31:46.4245065Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4245575Z                     diff += 1
2025-01-17T11:31:46.4245933Z     
2025-01-17T11:31:46.4246259Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4246786Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4247433Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4248064Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4248523Z E           
2025-01-17T11:31:46.4248885Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4249695Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4250848Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4251483Z 
2025-01-17T11:31:46.4252020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4252871Z 
2025-01-17T11:31:46.4253520Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4253957Z 
2025-01-17T11:31:46.4254194Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8c50>
2025-01-17T11:31:46.4254673Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4254993Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4255113Z 
2025-01-17T11:31:46.4255256Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4255576Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4255851Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4256070Z         try:
2025-01-17T11:31:46.4256306Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4271250Z         except KeyError:
2025-01-17T11:31:46.4271707Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4272198Z     
2025-01-17T11:31:46.4272476Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4273043Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4273312Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4273615Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4274115Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4274368Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4274756Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4275027Z             else:
2025-01-17T11:31:46.4275236Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4275511Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4275695Z 
2025-01-17T11:31:46.4275829Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4276157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4276513Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4276809Z     ???
2025-01-17T11:31:46.4277010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4277201Z 
2025-01-17T11:31:46.4277273Z >   ???
2025-01-17T11:31:46.4277479Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4277754Z E   
2025-01-17T11:31:46.4277968Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4278298Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4278556Z E          ...
2025-01-17T11:31:46.4278742Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4279040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4279362Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4279630Z E          ...
2025-01-17T11:31:46.4279817Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4280109Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4280421Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4280723Z 
2025-01-17T11:31:46.4280850Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4281204Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-17T11:31:46.4281506Z 
2025-01-17T11:31:46.4281634Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4281976Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4282293Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4282831Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4283180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4283481Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4283752Z err_msg = None
2025-01-17T11:31:46.4283954Z 
2025-01-17T11:31:46.4284141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4284578Z         if err_msg is None:
2025-01-17T11:31:46.4284944Z             if left.shape != right.shape:
2025-01-17T11:31:46.4285241Z                 raise_assert_detail(
2025-01-17T11:31:46.4285546Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4285847Z                 )
2025-01-17T11:31:46.4286026Z     
2025-01-17T11:31:46.4286176Z             diff = 0
2025-01-17T11:31:46.4286396Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4286660Z                 # count up differences
2025-01-17T11:31:46.4286987Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4287313Z                     diff += 1
2025-01-17T11:31:46.4287507Z     
2025-01-17T11:31:46.4287675Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4287975Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4288349Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4288704Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4289108Z E           
2025-01-17T11:31:46.4289311Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4289885Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4290488Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4290831Z 
2025-01-17T11:31:46.4291139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4291530Z 
2025-01-17T11:31:46.4291693Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4291946Z 
2025-01-17T11:31:46.4292170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8260>
2025-01-17T11:31:46.4292756Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81765b6630>
2025-01-17T11:31:46.4293070Z attr = 'j_blues'
2025-01-17T11:31:46.4293176Z 
2025-01-17T11:31:46.4293316Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4293638Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4293905Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4294114Z         try:
2025-01-17T11:31:46.4294348Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4294636Z         except KeyError:
2025-01-17T11:31:46.4294898Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4295180Z     
2025-01-17T11:31:46.4295347Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4295593Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4295847Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4296147Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4296443Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4296675Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4296940Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4297194Z             else:
2025-01-17T11:31:46.4297383Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4297662Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4297848Z 
2025-01-17T11:31:46.4297966Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4298273Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4298607Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4299053Z     ???
2025-01-17T11:31:46.4299390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4299651Z 
2025-01-17T11:31:46.4299716Z >   ???
2025-01-17T11:31:46.4299924Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4300191Z E   
2025-01-17T11:31:46.4300396Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4300847Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4301108Z E          ...
2025-01-17T11:31:46.4301319Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4301815Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4302332Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4302801Z E          ...
2025-01-17T11:31:46.4302984Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4303266Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4303718Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4303894Z 
2025-01-17T11:31:46.4303985Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4304414Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-17T11:31:46.4304683Z 
2025-01-17T11:31:46.4304811Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4305141Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4305446Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4305750Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4306082Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4306376Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4306611Z err_msg = None
2025-01-17T11:31:46.4306727Z 
2025-01-17T11:31:46.4306832Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4307092Z         if err_msg is None:
2025-01-17T11:31:46.4307318Z             if left.shape != right.shape:
2025-01-17T11:31:46.4307564Z                 raise_assert_detail(
2025-01-17T11:31:46.4307857Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4308145Z                 )
2025-01-17T11:31:46.4308310Z     
2025-01-17T11:31:46.4308460Z             diff = 0
2025-01-17T11:31:46.4308675Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4308941Z                 # count up differences
2025-01-17T11:31:46.4309257Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4309576Z                     diff += 1
2025-01-17T11:31:46.4309774Z     
2025-01-17T11:31:46.4309936Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4310227Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4310608Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4310973Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4311225Z E           
2025-01-17T11:31:46.4311419Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4311864Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4312467Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4312922Z 
2025-01-17T11:31:46.4313227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4313616Z 
2025-01-17T11:31:46.4313778Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4314037Z 
2025-01-17T11:31:46.4314260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae9a30>
2025-01-17T11:31:46.4314722Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4315029Z attr = 'lines'
2025-01-17T11:31:46.4315127Z 
2025-01-17T11:31:46.4315262Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4315583Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4315842Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4316046Z         try:
2025-01-17T11:31:46.4316278Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4316686Z         except KeyError:
2025-01-17T11:31:46.4316939Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4317314Z     
2025-01-17T11:31:46.4317477Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4317708Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4317955Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4318240Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4318523Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4318751Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4319086Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4319515Z             else:
2025-01-17T11:31:46.4319827Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4320208Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4320426Z 
2025-01-17T11:31:46.4320548Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4320858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4321189Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4321480Z     ???
2025-01-17T11:31:46.4321673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4321864Z 
2025-01-17T11:31:46.4321931Z >   ???
2025-01-17T11:31:46.4322138Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4322399Z E   
2025-01-17T11:31:46.4322797Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4323114Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4323366Z E          ...
2025-01-17T11:31:46.4323544Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4323827Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4324131Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4324386Z E          ...
2025-01-17T11:31:46.4324561Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4324841Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4325134Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4325309Z 
2025-01-17T11:31:46.4325397Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4325737Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-17T11:31:46.4326021Z 
2025-01-17T11:31:46.4326246Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae86b0>
2025-01-17T11:31:46.4326698Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4327019Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4327172Z 
2025-01-17T11:31:46.4327302Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4327618Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4327877Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4328087Z         try:
2025-01-17T11:31:46.4328314Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4328610Z         except KeyError:
2025-01-17T11:31:46.4328865Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4329140Z     
2025-01-17T11:31:46.4329302Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4329538Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4329779Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4330068Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4330353Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4330578Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4330837Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4331025Z 
2025-01-17T11:31:46.4331141Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4331442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4331781Z 
2025-01-17T11:31:46.4331910Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4332300Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4332663Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4332925Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4333213Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4333507Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4333754Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4334003Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4334218Z err_msg = None
2025-01-17T11:31:46.4334320Z 
2025-01-17T11:31:46.4334421Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4334672Z         if err_msg is None:
2025-01-17T11:31:46.4334893Z             if left.shape != right.shape:
2025-01-17T11:31:46.4335134Z                 raise_assert_detail(
2025-01-17T11:31:46.4335426Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4335711Z                 )
2025-01-17T11:31:46.4335881Z     
2025-01-17T11:31:46.4336038Z             diff = 0
2025-01-17T11:31:46.4336250Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4336512Z                 # count up differences
2025-01-17T11:31:46.4336832Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4337350Z                     diff += 1
2025-01-17T11:31:46.4337672Z     
2025-01-17T11:31:46.4337940Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4338274Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4338647Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4339007Z E           AssertionError: Series are different
2025-01-17T11:31:46.4339255Z E           
2025-01-17T11:31:46.4339449Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4339994Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4340771Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4341518Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4341935Z 
2025-01-17T11:31:46.4342239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4342923Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-17T11:31:46.4343214Z 
2025-01-17T11:31:46.4343432Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae9970>
2025-01-17T11:31:46.4343891Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4344212Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4344520Z 
2025-01-17T11:31:46.4344657Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4345081Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4345348Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4345557Z         try:
2025-01-17T11:31:46.4345793Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4346083Z         except KeyError:
2025-01-17T11:31:46.4346345Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4346618Z     
2025-01-17T11:31:46.4346778Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4347011Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4347257Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4347546Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4347830Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4348056Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4348326Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4348508Z 
2025-01-17T11:31:46.4348637Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4348939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4349133Z 
2025-01-17T11:31:46.4349266Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4349562Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4349821Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4350079Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4350361Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4350657Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4350912Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4351176Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4351553Z err_msg = None
2025-01-17T11:31:46.4351689Z 
2025-01-17T11:31:46.4351879Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4352176Z         if err_msg is None:
2025-01-17T11:31:46.4352402Z             if left.shape != right.shape:
2025-01-17T11:31:46.4352795Z                 raise_assert_detail(
2025-01-17T11:31:46.4353085Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4353494Z                 )
2025-01-17T11:31:46.4353663Z     
2025-01-17T11:31:46.4353810Z             diff = 0
2025-01-17T11:31:46.4354026Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4354296Z                 # count up differences
2025-01-17T11:31:46.4354614Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4354935Z                     diff += 1
2025-01-17T11:31:46.4355211Z     
2025-01-17T11:31:46.4355497Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4355970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4356520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4356871Z E           AssertionError: Series are different
2025-01-17T11:31:46.4357106Z E           
2025-01-17T11:31:46.4357295Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4357840Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4358663Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4359749Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4360202Z 
2025-01-17T11:31:46.4360507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4361068Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-17T11:31:46.4361333Z 
2025-01-17T11:31:46.4361458Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4361792Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4362090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4362388Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4362949Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4363243Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4363473Z err_msg = None
2025-01-17T11:31:46.4363580Z 
2025-01-17T11:31:46.4363682Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4363931Z         if err_msg is None:
2025-01-17T11:31:46.4364146Z             if left.shape != right.shape:
2025-01-17T11:31:46.4364391Z                 raise_assert_detail(
2025-01-17T11:31:46.4364674Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4364962Z                 )
2025-01-17T11:31:46.4365127Z     
2025-01-17T11:31:46.4365278Z             diff = 0
2025-01-17T11:31:46.4365490Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4365750Z                 # count up differences
2025-01-17T11:31:46.4366068Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4366388Z                     diff += 1
2025-01-17T11:31:46.4366580Z     
2025-01-17T11:31:46.4366742Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4367025Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4367407Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4367760Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4368017Z E           
2025-01-17T11:31:46.4368217Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4368665Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4369264Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4369609Z 
2025-01-17T11:31:46.4369905Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4370415Z 
2025-01-17T11:31:46.4370583Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4370941Z 
2025-01-17T11:31:46.4371161Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8a40>
2025-01-17T11:31:46.4371654Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>, attr = 'nu'
2025-01-17T11:31:46.4371927Z 
2025-01-17T11:31:46.4372064Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4372386Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4372758Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4372970Z         try:
2025-01-17T11:31:46.4373206Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4373710Z         except KeyError:
2025-01-17T11:31:46.4374127Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4374509Z     
2025-01-17T11:31:46.4374681Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4374925Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4375172Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4375465Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4375754Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4375986Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4376253Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4376439Z 
2025-01-17T11:31:46.4376563Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4376870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4377202Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4377479Z     ???
2025-01-17T11:31:46.4377671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4377866Z 
2025-01-17T11:31:46.4377930Z >   ???
2025-01-17T11:31:46.4378137Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4378405Z E   
2025-01-17T11:31:46.4378609Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4378920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4379173Z E          ...
2025-01-17T11:31:46.4379354Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4379640Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4379946Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4380199Z E          ...
2025-01-17T11:31:46.4380373Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4380654Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4380952Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4381133Z 
2025-01-17T11:31:46.4381216Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4381552Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-17T11:31:46.4381836Z 
2025-01-17T11:31:46.4381959Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4382292Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4382702Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4383001Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4383330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4383620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4383861Z err_msg = None
2025-01-17T11:31:46.4383960Z 
2025-01-17T11:31:46.4384072Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4384327Z         if err_msg is None:
2025-01-17T11:31:46.4384544Z             if left.shape != right.shape:
2025-01-17T11:31:46.4384916Z                 raise_assert_detail(
2025-01-17T11:31:46.4385209Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4385594Z                 )
2025-01-17T11:31:46.4385760Z     
2025-01-17T11:31:46.4385909Z             diff = 0
2025-01-17T11:31:46.4386136Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4386400Z                 # count up differences
2025-01-17T11:31:46.4386718Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4387047Z                     diff += 1
2025-01-17T11:31:46.4387243Z     
2025-01-17T11:31:46.4387409Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4387691Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4388064Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4388415Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4388670Z E           
2025-01-17T11:31:46.4388869Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4389320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4389920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4390495Z 
2025-01-17T11:31:46.4391007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4391445Z 
2025-01-17T11:31:46.4391609Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4391860Z 
2025-01-17T11:31:46.4392084Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8aa0>
2025-01-17T11:31:46.4392637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4392954Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4393079Z 
2025-01-17T11:31:46.4393211Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4393528Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4393795Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4394006Z         try:
2025-01-17T11:31:46.4394237Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4394524Z         except KeyError:
2025-01-17T11:31:46.4394779Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4395053Z     
2025-01-17T11:31:46.4395213Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4395453Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4395700Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4395989Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4396265Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4396498Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4396759Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4396942Z 
2025-01-17T11:31:46.4397066Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4397372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4397702Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4397983Z     ???
2025-01-17T11:31:46.4398178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4398367Z 
2025-01-17T11:31:46.4398432Z >   ???
2025-01-17T11:31:46.4398800Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4399059Z E   
2025-01-17T11:31:46.4399263Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4399673Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4399926Z E          ...
2025-01-17T11:31:46.4400106Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4400391Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4400701Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4400955Z E          ...
2025-01-17T11:31:46.4401133Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4401410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4401702Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4401935Z 
2025-01-17T11:31:46.4402020Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4402347Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-17T11:31:46.4402823Z 
2025-01-17T11:31:46.4402951Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4403288Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4403584Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4403879Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4404206Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4404498Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4404737Z err_msg = None
2025-01-17T11:31:46.4404836Z 
2025-01-17T11:31:46.4404945Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4405199Z         if err_msg is None:
2025-01-17T11:31:46.4405415Z             if left.shape != right.shape:
2025-01-17T11:31:46.4405665Z                 raise_assert_detail(
2025-01-17T11:31:46.4405956Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4406251Z                 )
2025-01-17T11:31:46.4406420Z     
2025-01-17T11:31:46.4406570Z             diff = 0
2025-01-17T11:31:46.4406786Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4407051Z                 # count up differences
2025-01-17T11:31:46.4407368Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4407692Z                     diff += 1
2025-01-17T11:31:46.4407889Z     
2025-01-17T11:31:46.4408172Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4408653Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4409196Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4409551Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4409802Z E           
2025-01-17T11:31:46.4410002Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4410450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4411047Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4411390Z 
2025-01-17T11:31:46.4411696Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4412213Z 
2025-01-17T11:31:46.4412379Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4412841Z 
2025-01-17T11:31:46.4413066Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaea900>
2025-01-17T11:31:46.4413558Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>, attr = 'f_lu'
2025-01-17T11:31:46.4413839Z 
2025-01-17T11:31:46.4413968Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4414288Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4414554Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4414758Z         try:
2025-01-17T11:31:46.4414985Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4415275Z         except KeyError:
2025-01-17T11:31:46.4415530Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4415805Z     
2025-01-17T11:31:46.4415968Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4416217Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4416462Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4416750Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4417037Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4417267Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4417532Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4417718Z 
2025-01-17T11:31:46.4417834Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4418138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4418470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4418752Z     ???
2025-01-17T11:31:46.4418942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4419134Z 
2025-01-17T11:31:46.4419204Z >   ???
2025-01-17T11:31:46.4419409Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4419675Z E   
2025-01-17T11:31:46.4419881Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4420190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4420477Z E          ...
2025-01-17T11:31:46.4420658Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4420944Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4421254Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4421505Z E          ...
2025-01-17T11:31:46.4421683Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4421961Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4422257Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4422431Z 
2025-01-17T11:31:46.4422522Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4422948Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-17T11:31:46.4423228Z 
2025-01-17T11:31:46.4423354Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4423690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4423986Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4424276Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4424607Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4424900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4425134Z err_msg = None
2025-01-17T11:31:46.4425238Z 
2025-01-17T11:31:46.4425344Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4425604Z         if err_msg is None:
2025-01-17T11:31:46.4425935Z             if left.shape != right.shape:
2025-01-17T11:31:46.4426507Z                 raise_assert_detail(
2025-01-17T11:31:46.4426932Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4427340Z                 )
2025-01-17T11:31:46.4427506Z     
2025-01-17T11:31:46.4427654Z             diff = 0
2025-01-17T11:31:46.4427866Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4428132Z                 # count up differences
2025-01-17T11:31:46.4428449Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4428770Z                     diff += 1
2025-01-17T11:31:46.4428969Z     
2025-01-17T11:31:46.4429132Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4429420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4429796Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4430147Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4430403Z E           
2025-01-17T11:31:46.4430602Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4431049Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4431648Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4431986Z 
2025-01-17T11:31:46.4432290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4432782Z 
2025-01-17T11:31:46.4432951Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4433202Z 
2025-01-17T11:31:46.4433422Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8f80>
2025-01-17T11:31:46.4433880Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4434194Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4434308Z 
2025-01-17T11:31:46.4434443Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4434763Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4435023Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4435227Z         try:
2025-01-17T11:31:46.4435457Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4435751Z         except KeyError:
2025-01-17T11:31:46.4436006Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4436279Z     
2025-01-17T11:31:46.4436453Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4436690Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4436939Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4437235Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4437520Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4437746Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4438017Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4438269Z             else:
2025-01-17T11:31:46.4438463Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4438728Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4438910Z 
2025-01-17T11:31:46.4439028Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4439333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4439667Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4440073Z     ???
2025-01-17T11:31:46.4440268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4440582Z 
2025-01-17T11:31:46.4440651Z >   ???
2025-01-17T11:31:46.4440855Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4441113Z E   
2025-01-17T11:31:46.4441312Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4441620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4441873Z E          ...
2025-01-17T11:31:46.4442055Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4442338Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4442853Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4443169Z E          ...
2025-01-17T11:31:46.4443477Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4443947Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4444428Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4444608Z 
2025-01-17T11:31:46.4444698Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4445037Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-17T11:31:46.4445310Z 
2025-01-17T11:31:46.4445438Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4445762Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4446057Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4446360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4446687Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4446976Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4447215Z err_msg = None
2025-01-17T11:31:46.4447325Z 
2025-01-17T11:31:46.4447427Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4447685Z         if err_msg is None:
2025-01-17T11:31:46.4447908Z             if left.shape != right.shape:
2025-01-17T11:31:46.4448152Z                 raise_assert_detail(
2025-01-17T11:31:46.4448447Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4448732Z                 )
2025-01-17T11:31:46.4448898Z     
2025-01-17T11:31:46.4449044Z             diff = 0
2025-01-17T11:31:46.4449259Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4449523Z                 # count up differences
2025-01-17T11:31:46.4449838Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4450160Z                     diff += 1
2025-01-17T11:31:46.4450356Z     
2025-01-17T11:31:46.4450520Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4450809Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4451188Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4451545Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4451789Z E           
2025-01-17T11:31:46.4451985Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4452422Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4453140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4453619Z 
2025-01-17T11:31:46.4453922Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4454400Z 
2025-01-17T11:31:46.4454567Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4454811Z 
2025-01-17T11:31:46.4455030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8e90>
2025-01-17T11:31:46.4455490Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4455801Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4455916Z 
2025-01-17T11:31:46.4456052Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4456371Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4456634Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4456838Z         try:
2025-01-17T11:31:46.4457067Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4457364Z         except KeyError:
2025-01-17T11:31:46.4457626Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4457908Z     
2025-01-17T11:31:46.4458072Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4458307Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4458553Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4458839Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4459118Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4459350Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4459617Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4459870Z             else:
2025-01-17T11:31:46.4460061Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4460530Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4460841Z 
2025-01-17T11:31:46.4461032Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4461490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4461830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4462114Z     ???
2025-01-17T11:31:46.4462306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4462498Z 
2025-01-17T11:31:46.4462664Z >   ???
2025-01-17T11:31:46.4462871Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4463128Z E   
2025-01-17T11:31:46.4463331Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4463638Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4463889Z E          ...
2025-01-17T11:31:46.4464068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4464351Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4464663Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4464925Z E          ...
2025-01-17T11:31:46.4465104Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4465386Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4465686Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4465861Z 
2025-01-17T11:31:46.4465952Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4466271Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-17T11:31:46.4466545Z 
2025-01-17T11:31:46.4466667Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4466994Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4467291Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4467585Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4467911Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4468332Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4468671Z err_msg = None
2025-01-17T11:31:46.4468774Z 
2025-01-17T11:31:46.4468875Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4469131Z         if err_msg is None:
2025-01-17T11:31:46.4469346Z             if left.shape != right.shape:
2025-01-17T11:31:46.4469592Z                 raise_assert_detail(
2025-01-17T11:31:46.4469879Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4470164Z                 )
2025-01-17T11:31:46.4470326Z     
2025-01-17T11:31:46.4470478Z             diff = 0
2025-01-17T11:31:46.4470693Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4470959Z                 # count up differences
2025-01-17T11:31:46.4471279Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4471617Z                     diff += 1
2025-01-17T11:31:46.4471812Z     
2025-01-17T11:31:46.4471979Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4472271Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4472748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4473103Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4473353Z E           
2025-01-17T11:31:46.4473547Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4473988Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4474584Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4474939Z 
2025-01-17T11:31:46.4475242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4475620Z 
2025-01-17T11:31:46.4475788Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4476031Z 
2025-01-17T11:31:46.4476251Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eae8cb0>
2025-01-17T11:31:46.4476710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151d120f0>
2025-01-17T11:31:46.4477011Z attr = 'j_blues'
2025-01-17T11:31:46.4477122Z 
2025-01-17T11:31:46.4477251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4477683Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4478146Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4478487Z         try:
2025-01-17T11:31:46.4478834Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4479133Z         except KeyError:
2025-01-17T11:31:46.4479387Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4479664Z     
2025-01-17T11:31:46.4479829Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4480064Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4480313Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4480599Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4480888Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4481121Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4481391Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4481648Z             else:
2025-01-17T11:31:46.4481974Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4482248Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4482678Z 
2025-01-17T11:31:46.4482858Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4497020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4497683Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4498169Z     ???
2025-01-17T11:31:46.4498502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4498715Z 
2025-01-17T11:31:46.4498785Z >   ???
2025-01-17T11:31:46.4499002Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4499264Z E   
2025-01-17T11:31:46.4499471Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4499774Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4500018Z E          ...
2025-01-17T11:31:46.4500211Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4500495Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4500806Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4501068Z E          ...
2025-01-17T11:31:46.4501249Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4501542Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4501858Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4502039Z 
2025-01-17T11:31:46.4502126Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4502460Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-17T11:31:46.4502857Z 
2025-01-17T11:31:46.4502984Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4503326Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4503628Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4503922Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4504251Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4504537Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4504770Z err_msg = None
2025-01-17T11:31:46.4504871Z 
2025-01-17T11:31:46.4504981Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4505233Z         if err_msg is None:
2025-01-17T11:31:46.4505448Z             if left.shape != right.shape:
2025-01-17T11:31:46.4505687Z                 raise_assert_detail(
2025-01-17T11:31:46.4505976Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4506257Z                 )
2025-01-17T11:31:46.4506421Z     
2025-01-17T11:31:46.4506568Z             diff = 0
2025-01-17T11:31:46.4506787Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4507054Z                 # count up differences
2025-01-17T11:31:46.4507377Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4507695Z                     diff += 1
2025-01-17T11:31:46.4507890Z     
2025-01-17T11:31:46.4508063Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4508353Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4508728Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4509087Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4509342Z E           
2025-01-17T11:31:46.4509548Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4509994Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4510873Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4511213Z 
2025-01-17T11:31:46.4511518Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4511901Z 
2025-01-17T11:31:46.4512066Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4512321Z 
2025-01-17T11:31:46.4512631Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903410>
2025-01-17T11:31:46.4513094Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4513410Z attr = 'lines'
2025-01-17T11:31:46.4513518Z 
2025-01-17T11:31:46.4513652Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4513980Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4514252Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4514458Z         try:
2025-01-17T11:31:46.4514691Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4514981Z         except KeyError:
2025-01-17T11:31:46.4515232Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4515509Z     
2025-01-17T11:31:46.4515677Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4515915Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4516166Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4516456Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4516751Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4516991Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4517259Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4517521Z             else:
2025-01-17T11:31:46.4517717Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4517984Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4518167Z 
2025-01-17T11:31:46.4518290Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4518600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4518929Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4519217Z     ???
2025-01-17T11:31:46.4519568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4519908Z 
2025-01-17T11:31:46.4520014Z >   ???
2025-01-17T11:31:46.4520353Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4520772Z E   
2025-01-17T11:31:46.4520999Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4521300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4521562Z E          ...
2025-01-17T11:31:46.4521745Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4522028Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4522337Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4522785Z E          ...
2025-01-17T11:31:46.4522973Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4523257Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4523557Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4523737Z 
2025-01-17T11:31:46.4523823Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4524165Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-17T11:31:46.4524451Z 
2025-01-17T11:31:46.4524813Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9035f0>
2025-01-17T11:31:46.4525270Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4525726Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4525875Z 
2025-01-17T11:31:46.4526011Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4526328Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4526593Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4526802Z         try:
2025-01-17T11:31:46.4527033Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4527326Z         except KeyError:
2025-01-17T11:31:46.4527574Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4527851Z     
2025-01-17T11:31:46.4528022Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4528255Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4528504Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4528797Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4529087Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4529324Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4529593Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4529775Z 
2025-01-17T11:31:46.4529897Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4530201Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4530390Z 
2025-01-17T11:31:46.4530526Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4530820Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4531074Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4531332Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4531616Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4531915Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4532165Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4532424Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4532749Z err_msg = None
2025-01-17T11:31:46.4532856Z 
2025-01-17T11:31:46.4532958Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4533214Z         if err_msg is None:
2025-01-17T11:31:46.4533435Z             if left.shape != right.shape:
2025-01-17T11:31:46.4533674Z                 raise_assert_detail(
2025-01-17T11:31:46.4533965Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4534248Z                 )
2025-01-17T11:31:46.4534408Z     
2025-01-17T11:31:46.4534557Z             diff = 0
2025-01-17T11:31:46.4534776Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4535041Z                 # count up differences
2025-01-17T11:31:46.4535369Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4535688Z                     diff += 1
2025-01-17T11:31:46.4535890Z     
2025-01-17T11:31:46.4536046Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4536336Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4536707Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4537312Z E           AssertionError: Series are different
2025-01-17T11:31:46.4537717Z E           
2025-01-17T11:31:46.4538024Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4538982Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4539902Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4540735Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4541136Z 
2025-01-17T11:31:46.4541447Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4542029Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-17T11:31:46.4542316Z 
2025-01-17T11:31:46.4542643Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903a40>
2025-01-17T11:31:46.4543106Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4543428Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4543576Z 
2025-01-17T11:31:46.4543713Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4544032Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4544292Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4544498Z         try:
2025-01-17T11:31:46.4544731Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4545024Z         except KeyError:
2025-01-17T11:31:46.4545279Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4545561Z     
2025-01-17T11:31:46.4545727Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4545960Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4546216Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4546506Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4546790Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4547014Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4547278Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4547464Z 
2025-01-17T11:31:46.4547583Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4547886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4548089Z 
2025-01-17T11:31:46.4548219Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4548510Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4548770Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4549029Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4549320Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4549613Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4549873Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4550126Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4550339Z err_msg = None
2025-01-17T11:31:46.4550441Z 
2025-01-17T11:31:46.4550541Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4550794Z         if err_msg is None:
2025-01-17T11:31:46.4551010Z             if left.shape != right.shape:
2025-01-17T11:31:46.4551248Z                 raise_assert_detail(
2025-01-17T11:31:46.4551533Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4551815Z                 )
2025-01-17T11:31:46.4552127Z     
2025-01-17T11:31:46.4552278Z             diff = 0
2025-01-17T11:31:46.4552496Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4552977Z                 # count up differences
2025-01-17T11:31:46.4553293Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4553616Z                     diff += 1
2025-01-17T11:31:46.4553811Z     
2025-01-17T11:31:46.4554037Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4554543Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4555180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4555768Z E           AssertionError: Series are different
2025-01-17T11:31:46.4556173Z E           
2025-01-17T11:31:46.4556402Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4556939Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4557747Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4558549Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4559002Z 
2025-01-17T11:31:46.4559315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4559870Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-17T11:31:46.4560132Z 
2025-01-17T11:31:46.4560258Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4560584Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4560878Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4561462Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4561787Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4562081Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4562325Z err_msg = None
2025-01-17T11:31:46.4562428Z 
2025-01-17T11:31:46.4562699Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4563008Z         if err_msg is None:
2025-01-17T11:31:46.4563232Z             if left.shape != right.shape:
2025-01-17T11:31:46.4563473Z                 raise_assert_detail(
2025-01-17T11:31:46.4563761Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4564039Z                 )
2025-01-17T11:31:46.4564204Z     
2025-01-17T11:31:46.4564355Z             diff = 0
2025-01-17T11:31:46.4564569Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4564831Z                 # count up differences
2025-01-17T11:31:46.4565150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4565619Z                     diff += 1
2025-01-17T11:31:46.4565815Z     
2025-01-17T11:31:46.4566088Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4566375Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4566744Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4567097Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4567341Z E           
2025-01-17T11:31:46.4567544Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4567986Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4568571Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4568917Z 
2025-01-17T11:31:46.4569223Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4569599Z 
2025-01-17T11:31:46.4569769Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4570014Z 
2025-01-17T11:31:46.4570239Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e901ca0>
2025-01-17T11:31:46.4570726Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>, attr = 'nu'
2025-01-17T11:31:46.4571004Z 
2025-01-17T11:31:46.4571136Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4571458Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4571739Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4572090Z         try:
2025-01-17T11:31:46.4572502Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4573114Z         except KeyError:
2025-01-17T11:31:46.4573545Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4574019Z     
2025-01-17T11:31:46.4574291Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4574679Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4575094Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4575565Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4575924Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4576150Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4576409Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4576601Z 
2025-01-17T11:31:46.4576721Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4577035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4577370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4577652Z     ???
2025-01-17T11:31:46.4577842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4578029Z 
2025-01-17T11:31:46.4578097Z >   ???
2025-01-17T11:31:46.4578215Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4578284Z E   
2025-01-17T11:31:46.4578408Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4578518Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4578584Z E          ...
2025-01-17T11:31:46.4578668Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4578791Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4578904Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4579114Z E          ...
2025-01-17T11:31:46.4579197Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4579414Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4579513Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4579524Z 
2025-01-17T11:31:46.4579609Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4579801Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-17T11:31:46.4579809Z 
2025-01-17T11:31:46.4579930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4580050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4580142Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4580268Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4580387Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4580478Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4580563Z err_msg = None
2025-01-17T11:31:46.4580567Z 
2025-01-17T11:31:46.4580671Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4580748Z         if err_msg is None:
2025-01-17T11:31:46.4580836Z             if left.shape != right.shape:
2025-01-17T11:31:46.4580918Z                 raise_assert_detail(
2025-01-17T11:31:46.4581056Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4581123Z                 )
2025-01-17T11:31:46.4581188Z     
2025-01-17T11:31:46.4581257Z             diff = 0
2025-01-17T11:31:46.4581361Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4581447Z                 # count up differences
2025-01-17T11:31:46.4581608Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4581689Z                     diff += 1
2025-01-17T11:31:46.4581752Z     
2025-01-17T11:31:46.4581836Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4581969Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4582133Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4582238Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4582303Z E           
2025-01-17T11:31:46.4582411Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4582888Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4583157Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4583176Z 
2025-01-17T11:31:46.4583502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4583507Z 
2025-01-17T11:31:46.4583670Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4583674Z 
2025-01-17T11:31:46.4583894Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903bc0>
2025-01-17T11:31:46.4584050Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4584125Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4584130Z 
2025-01-17T11:31:46.4584255Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4584362Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4584565Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4584634Z         try:
2025-01-17T11:31:46.4584888Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4584965Z         except KeyError:
2025-01-17T11:31:46.4585096Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4585162Z     
2025-01-17T11:31:46.4585241Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4585328Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4585413Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4585537Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4585620Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4585703Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4585810Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4585814Z 
2025-01-17T11:31:46.4585931Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4586045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4586185Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4586256Z     ???
2025-01-17T11:31:46.4586357Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4586362Z 
2025-01-17T11:31:46.4586427Z >   ???
2025-01-17T11:31:46.4586544Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4586609Z E   
2025-01-17T11:31:46.4586735Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4586842Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4586907Z E          ...
2025-01-17T11:31:46.4586994Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4587115Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4587225Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4587294Z E          ...
2025-01-17T11:31:46.4587372Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4587497Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4587593Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4587602Z 
2025-01-17T11:31:46.4587682Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4587858Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-17T11:31:46.4587866Z 
2025-01-17T11:31:46.4587990Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4588110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4588206Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4588331Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4588456Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4588546Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4588622Z err_msg = None
2025-01-17T11:31:46.4588626Z 
2025-01-17T11:31:46.4588725Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4588807Z         if err_msg is None:
2025-01-17T11:31:46.4588895Z             if left.shape != right.shape:
2025-01-17T11:31:46.4588977Z                 raise_assert_detail(
2025-01-17T11:31:46.4589112Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4589185Z                 )
2025-01-17T11:31:46.4589248Z     
2025-01-17T11:31:46.4589322Z             diff = 0
2025-01-17T11:31:46.4589423Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4589506Z                 # count up differences
2025-01-17T11:31:46.4589666Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4589843Z                     diff += 1
2025-01-17T11:31:46.4589906Z     
2025-01-17T11:31:46.4590065Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4590195Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4590354Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4590460Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4590524Z E           
2025-01-17T11:31:46.4590632Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4590886Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4591156Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4591174Z 
2025-01-17T11:31:46.4591472Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4591476Z 
2025-01-17T11:31:46.4591634Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4591638Z 
2025-01-17T11:31:46.4591853Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903920>
2025-01-17T11:31:46.4592046Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>, attr = 'f_lu'
2025-01-17T11:31:46.4592050Z 
2025-01-17T11:31:46.4592184Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4592291Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4592378Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4592444Z         try:
2025-01-17T11:31:46.4592686Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4592764Z         except KeyError:
2025-01-17T11:31:46.4592996Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4593089Z     
2025-01-17T11:31:46.4593181Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4593269Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4593350Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4593477Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4593555Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4593642Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4593742Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4593747Z 
2025-01-17T11:31:46.4593867Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4593977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4594123Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4594188Z     ???
2025-01-17T11:31:46.4594294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4594298Z 
2025-01-17T11:31:46.4594361Z >   ???
2025-01-17T11:31:46.4594482Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4594545Z E   
2025-01-17T11:31:46.4594667Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4594769Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4594837Z E          ...
2025-01-17T11:31:46.4594917Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4595042Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4595145Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4595338Z E          ...
2025-01-17T11:31:46.4595418Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4595637Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4595742Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4595747Z 
2025-01-17T11:31:46.4595828Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4596017Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-17T11:31:46.4596021Z 
2025-01-17T11:31:46.4596240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4596461Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4596607Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4596831Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4597035Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4597181Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4597305Z err_msg = None
2025-01-17T11:31:46.4597312Z 
2025-01-17T11:31:46.4597464Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4597543Z         if err_msg is None:
2025-01-17T11:31:46.4597635Z             if left.shape != right.shape:
2025-01-17T11:31:46.4597713Z                 raise_assert_detail(
2025-01-17T11:31:46.4597852Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4597916Z                 )
2025-01-17T11:31:46.4597982Z     
2025-01-17T11:31:46.4598047Z             diff = 0
2025-01-17T11:31:46.4598156Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4598235Z                 # count up differences
2025-01-17T11:31:46.4598400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4598476Z                     diff += 1
2025-01-17T11:31:46.4598543Z     
2025-01-17T11:31:46.4598625Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4598755Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4598918Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4599023Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4599097Z E           
2025-01-17T11:31:46.4599202Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4599460Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4599715Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4599734Z 
2025-01-17T11:31:46.4600028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4600033Z 
2025-01-17T11:31:46.4600198Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4600203Z 
2025-01-17T11:31:46.4600416Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903da0>
2025-01-17T11:31:46.4600578Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4600651Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4600656Z 
2025-01-17T11:31:46.4600787Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4601017Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4601099Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4601239Z         try:
2025-01-17T11:31:46.4601375Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4601449Z         except KeyError:
2025-01-17T11:31:46.4601585Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4601647Z     
2025-01-17T11:31:46.4601727Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4601823Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4601904Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4602028Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4602108Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4602197Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4602298Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4602372Z             else:
2025-01-17T11:31:46.4602467Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4602763Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4602780Z 
2025-01-17T11:31:46.4602905Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4603015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4603150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4603217Z     ???
2025-01-17T11:31:46.4603316Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4603320Z 
2025-01-17T11:31:46.4603391Z >   ???
2025-01-17T11:31:46.4603509Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4603582Z E   
2025-01-17T11:31:46.4603701Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4603809Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4603875Z E          ...
2025-01-17T11:31:46.4603965Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4604090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4604198Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4604267Z E          ...
2025-01-17T11:31:46.4604346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4604466Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4604563Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4604567Z 
2025-01-17T11:31:46.4604655Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4604843Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-17T11:31:46.4604848Z 
2025-01-17T11:31:46.4604973Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4605090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4605190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4605314Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4605440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4605526Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4605599Z err_msg = None
2025-01-17T11:31:46.4605604Z 
2025-01-17T11:31:46.4605704Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4605786Z         if err_msg is None:
2025-01-17T11:31:46.4605874Z             if left.shape != right.shape:
2025-01-17T11:31:46.4605956Z                 raise_assert_detail(
2025-01-17T11:31:46.4606089Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4606159Z                 )
2025-01-17T11:31:46.4606221Z     
2025-01-17T11:31:46.4606293Z             diff = 0
2025-01-17T11:31:46.4606528Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4606612Z                 # count up differences
2025-01-17T11:31:46.4606907Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4606981Z                     diff += 1
2025-01-17T11:31:46.4607049Z     
2025-01-17T11:31:46.4607130Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4607260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4607421Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4607530Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4607595Z E           
2025-01-17T11:31:46.4607704Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4607961Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4608234Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4608240Z 
2025-01-17T11:31:46.4608538Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4608542Z 
2025-01-17T11:31:46.4608700Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4608704Z 
2025-01-17T11:31:46.4608924Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e903fb0>
2025-01-17T11:31:46.4609077Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4609156Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4609160Z 
2025-01-17T11:31:46.4609293Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4609403Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4609479Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4609545Z         try:
2025-01-17T11:31:46.4609683Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4609756Z         except KeyError:
2025-01-17T11:31:46.4609893Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4609957Z     
2025-01-17T11:31:46.4610042Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4610127Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4610214Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4610337Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4610419Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4610506Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4610611Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4610682Z             else:
2025-01-17T11:31:46.4610774Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4610873Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4610877Z 
2025-01-17T11:31:46.4610997Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4611100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4611238Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4611303Z     ???
2025-01-17T11:31:46.4611413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4611417Z 
2025-01-17T11:31:46.4611480Z >   ???
2025-01-17T11:31:46.4611596Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4611753Z E   
2025-01-17T11:31:46.4611872Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4611979Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4612135Z E          ...
2025-01-17T11:31:46.4612220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4612342Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4612451Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4612516Z E          ...
2025-01-17T11:31:46.4612712Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4612829Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4612931Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4612935Z 
2025-01-17T11:31:46.4613017Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4613206Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-17T11:31:46.4613211Z 
2025-01-17T11:31:46.4613337Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4613460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4613557Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4613688Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4613803Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4613894Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4613963Z err_msg = None
2025-01-17T11:31:46.4613968Z 
2025-01-17T11:31:46.4614074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4614148Z         if err_msg is None:
2025-01-17T11:31:46.4614239Z             if left.shape != right.shape:
2025-01-17T11:31:46.4614316Z                 raise_assert_detail(
2025-01-17T11:31:46.4614462Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4614528Z                 )
2025-01-17T11:31:46.4614627Z     
2025-01-17T11:31:46.4614761Z             diff = 0
2025-01-17T11:31:46.4614947Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4615089Z                 # count up differences
2025-01-17T11:31:46.4615364Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4615486Z                     diff += 1
2025-01-17T11:31:46.4615591Z     
2025-01-17T11:31:46.4615735Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4615945Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4616226Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4616396Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4616518Z E           
2025-01-17T11:31:46.4616697Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4617152Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4617619Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4617626Z 
2025-01-17T11:31:46.4618075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4618082Z 
2025-01-17T11:31:46.4618241Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4618386Z 
2025-01-17T11:31:46.4618607Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e902fc0>
2025-01-17T11:31:46.4618870Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c0c3ad0>
2025-01-17T11:31:46.4618946Z attr = 'j_blues'
2025-01-17T11:31:46.4618950Z 
2025-01-17T11:31:46.4619079Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4619190Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4619267Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4619335Z         try:
2025-01-17T11:31:46.4619467Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4619550Z         except KeyError:
2025-01-17T11:31:46.4619681Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4619749Z     
2025-01-17T11:31:46.4619829Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4619920Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4620009Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4620140Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4620222Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4620308Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4620442Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4620514Z             else:
2025-01-17T11:31:46.4620602Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4620700Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4620712Z 
2025-01-17T11:31:46.4620827Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4620934Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4621076Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4621140Z     ???
2025-01-17T11:31:46.4621246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4621256Z 
2025-01-17T11:31:46.4621318Z >   ???
2025-01-17T11:31:46.4621447Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4621510Z E   
2025-01-17T11:31:46.4621636Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4621740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4621814Z E          ...
2025-01-17T11:31:46.4621892Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4622015Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4622118Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4622186Z E          ...
2025-01-17T11:31:46.4622265Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4622389Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4622484Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4622493Z 
2025-01-17T11:31:46.4622682Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4622875Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-17T11:31:46.4622884Z 
2025-01-17T11:31:46.4623010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4623128Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4623221Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4623346Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4623471Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4623557Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4623631Z err_msg = None
2025-01-17T11:31:46.4623635Z 
2025-01-17T11:31:46.4623737Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4623937Z         if err_msg is None:
2025-01-17T11:31:46.4624026Z             if left.shape != right.shape:
2025-01-17T11:31:46.4624207Z                 raise_assert_detail(
2025-01-17T11:31:46.4624346Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4624412Z                 )
2025-01-17T11:31:46.4624484Z     
2025-01-17T11:31:46.4624551Z             diff = 0
2025-01-17T11:31:46.4624658Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4624739Z                 # count up differences
2025-01-17T11:31:46.4624905Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4624978Z                     diff += 1
2025-01-17T11:31:46.4625045Z     
2025-01-17T11:31:46.4625126Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4625259Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4625421Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4625537Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4625610Z E           
2025-01-17T11:31:46.4625720Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4625972Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4626231Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4626241Z 
2025-01-17T11:31:46.4626530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4626538Z 
2025-01-17T11:31:46.4626701Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4626705Z 
2025-01-17T11:31:46.4626918Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900860>
2025-01-17T11:31:46.4627087Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4627156Z attr = 'lines'
2025-01-17T11:31:46.4627160Z 
2025-01-17T11:31:46.4627288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4627394Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4627482Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4627548Z         try:
2025-01-17T11:31:46.4627684Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4627757Z         except KeyError:
2025-01-17T11:31:46.4627895Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4627959Z     
2025-01-17T11:31:46.4628049Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4628133Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4628218Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4628343Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4628421Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4628507Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4628608Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4628681Z             else:
2025-01-17T11:31:46.4628768Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4628873Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4628877Z 
2025-01-17T11:31:46.4628994Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4629103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4629352Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4629498Z     ???
2025-01-17T11:31:46.4629603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4629607Z 
2025-01-17T11:31:46.4629674Z >   ???
2025-01-17T11:31:46.4629793Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4629861Z E   
2025-01-17T11:31:46.4629982Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4630091Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4630156Z E          ...
2025-01-17T11:31:46.4630239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4630358Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4630473Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4630541Z E          ...
2025-01-17T11:31:46.4630620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4630748Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4630850Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4630859Z 
2025-01-17T11:31:46.4630941Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4631313Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-17T11:31:46.4631332Z 
2025-01-17T11:31:46.4631689Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900920>
2025-01-17T11:31:46.4631949Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4632085Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4632091Z 
2025-01-17T11:31:46.4632273Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4632383Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4632460Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4632665Z         try:
2025-01-17T11:31:46.4632870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4632955Z         except KeyError:
2025-01-17T11:31:46.4633094Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4633162Z     
2025-01-17T11:31:46.4633243Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4633333Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4633417Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4633547Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4633624Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4633710Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4633810Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4633814Z 
2025-01-17T11:31:46.4633940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4634043Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4634051Z 
2025-01-17T11:31:46.4634185Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4634266Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4634377Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4634451Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4634589Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4634664Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4634761Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4634837Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4634903Z err_msg = None
2025-01-17T11:31:46.4634907Z 
2025-01-17T11:31:46.4635011Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4635087Z         if err_msg is None:
2025-01-17T11:31:46.4635176Z             if left.shape != right.shape:
2025-01-17T11:31:46.4635389Z                 raise_assert_detail(
2025-01-17T11:31:46.4635530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4635698Z                 )
2025-01-17T11:31:46.4635767Z     
2025-01-17T11:31:46.4635835Z             diff = 0
2025-01-17T11:31:46.4635946Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4636026Z                 # count up differences
2025-01-17T11:31:46.4636189Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4636260Z                     diff += 1
2025-01-17T11:31:46.4636329Z     
2025-01-17T11:31:46.4636409Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4636541Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4636707Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4636802Z E           AssertionError: Series are different
2025-01-17T11:31:46.4636879Z E           
2025-01-17T11:31:46.4636974Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4637348Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4637677Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4638006Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4638015Z 
2025-01-17T11:31:46.4638315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4638531Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-17T11:31:46.4638536Z 
2025-01-17T11:31:46.4638755Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900bf0>
2025-01-17T11:31:46.4638913Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4639000Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4639004Z 
2025-01-17T11:31:46.4639134Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4639244Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4639328Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4639400Z         try:
2025-01-17T11:31:46.4639530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4639607Z         except KeyError:
2025-01-17T11:31:46.4639736Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4639805Z     
2025-01-17T11:31:46.4639883Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4639973Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4640059Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4640191Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4640269Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4640355Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4640456Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4640544Z 
2025-01-17T11:31:46.4640663Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4640844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4640848Z 
2025-01-17T11:31:46.4640978Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4641055Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4641155Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4641232Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4641363Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4641442Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4641547Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4641623Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4641697Z err_msg = None
2025-01-17T11:31:46.4641701Z 
2025-01-17T11:31:46.4641805Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4641884Z         if err_msg is None:
2025-01-17T11:31:46.4641974Z             if left.shape != right.shape:
2025-01-17T11:31:46.4642052Z                 raise_assert_detail(
2025-01-17T11:31:46.4642189Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4642254Z                 )
2025-01-17T11:31:46.4642320Z     
2025-01-17T11:31:46.4642387Z             diff = 0
2025-01-17T11:31:46.4642500Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4642776Z                 # count up differences
2025-01-17T11:31:46.4642949Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4643022Z                     diff += 1
2025-01-17T11:31:46.4643088Z     
2025-01-17T11:31:46.4643166Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4643297Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4643461Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4643568Z E           AssertionError: Series are different
2025-01-17T11:31:46.4643639Z E           
2025-01-17T11:31:46.4643732Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4644107Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4644475Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4644857Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4644863Z 
2025-01-17T11:31:46.4645164Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4645348Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-17T11:31:46.4645472Z 
2025-01-17T11:31:46.4645602Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4645822Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4645918Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4646041Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4646159Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4646246Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4646318Z err_msg = None
2025-01-17T11:31:46.4646322Z 
2025-01-17T11:31:46.4646420Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4646496Z         if err_msg is None:
2025-01-17T11:31:46.4646587Z             if left.shape != right.shape:
2025-01-17T11:31:46.4646669Z                 raise_assert_detail(
2025-01-17T11:31:46.4646806Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4646875Z                 )
2025-01-17T11:31:46.4646943Z     
2025-01-17T11:31:46.4647017Z             diff = 0
2025-01-17T11:31:46.4647119Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4647202Z                 # count up differences
2025-01-17T11:31:46.4647359Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4647433Z                     diff += 1
2025-01-17T11:31:46.4647496Z     
2025-01-17T11:31:46.4647576Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4647705Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4647867Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4647976Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4648040Z E           
2025-01-17T11:31:46.4648155Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4648410Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4648681Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4648689Z 
2025-01-17T11:31:46.4649218Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4649228Z 
2025-01-17T11:31:46.4649658Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4649676Z 
2025-01-17T11:31:46.4650049Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9011f0>
2025-01-17T11:31:46.4650384Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>, attr = 'nu'
2025-01-17T11:31:46.4650392Z 
2025-01-17T11:31:46.4650611Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4650788Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4650919Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4651025Z         try:
2025-01-17T11:31:46.4651239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4651317Z         except KeyError:
2025-01-17T11:31:46.4651450Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4651517Z     
2025-01-17T11:31:46.4651596Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4651685Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4651889Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4652020Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4652177Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4652264Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4652368Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4652372Z 
2025-01-17T11:31:46.4652494Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4652780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4652931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4652996Z     ???
2025-01-17T11:31:46.4653105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4653109Z 
2025-01-17T11:31:46.4653172Z >   ???
2025-01-17T11:31:46.4653300Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4653371Z E   
2025-01-17T11:31:46.4653496Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4653601Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4653679Z E          ...
2025-01-17T11:31:46.4653761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4653885Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4653993Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4654058Z E          ...
2025-01-17T11:31:46.4654142Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4654258Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4654362Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4654367Z 
2025-01-17T11:31:46.4654449Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4654655Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-17T11:31:46.4654659Z 
2025-01-17T11:31:46.4654786Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4654915Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4655008Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4655138Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4655255Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4655347Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4655416Z err_msg = None
2025-01-17T11:31:46.4655420Z 
2025-01-17T11:31:46.4655528Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4655602Z         if err_msg is None:
2025-01-17T11:31:46.4655695Z             if left.shape != right.shape:
2025-01-17T11:31:46.4655773Z                 raise_assert_detail(
2025-01-17T11:31:46.4655915Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4655980Z                 )
2025-01-17T11:31:46.4656052Z     
2025-01-17T11:31:46.4656119Z             diff = 0
2025-01-17T11:31:46.4656227Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4656309Z                 # count up differences
2025-01-17T11:31:46.4656474Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4656546Z                     diff += 1
2025-01-17T11:31:46.4656608Z     
2025-01-17T11:31:46.4656701Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4656827Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4656991Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4657095Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4657166Z E           
2025-01-17T11:31:46.4657400Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4657663Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4658021Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4658031Z 
2025-01-17T11:31:46.4658323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4658327Z 
2025-01-17T11:31:46.4658492Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4658501Z 
2025-01-17T11:31:46.4658716Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9011c0>
2025-01-17T11:31:46.4658882Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4658956Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4658960Z 
2025-01-17T11:31:46.4659092Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4659202Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4659283Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4659347Z         try:
2025-01-17T11:31:46.4659478Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4659555Z         except KeyError:
2025-01-17T11:31:46.4659687Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4659752Z     
2025-01-17T11:31:46.4659836Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4659924Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4660010Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4660138Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4660224Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4660309Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4660411Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4660416Z 
2025-01-17T11:31:46.4660536Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4660640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4660779Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4660847Z     ???
2025-01-17T11:31:46.4660955Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4660959Z 
2025-01-17T11:31:46.4661022Z >   ???
2025-01-17T11:31:46.4661142Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4661211Z E   
2025-01-17T11:31:46.4661334Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4661440Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4661509Z E          ...
2025-01-17T11:31:46.4661589Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4661709Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4661815Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4661880Z E          ...
2025-01-17T11:31:46.4661961Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4662075Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4662172Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4662176Z 
2025-01-17T11:31:46.4662258Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4662451Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-17T11:31:46.4662643Z 
2025-01-17T11:31:46.4662769Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4663011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4663105Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4663240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4663359Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4663450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4663523Z err_msg = None
2025-01-17T11:31:46.4663527Z 
2025-01-17T11:31:46.4663636Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4663713Z         if err_msg is None:
2025-01-17T11:31:46.4663806Z             if left.shape != right.shape:
2025-01-17T11:31:46.4663884Z                 raise_assert_detail(
2025-01-17T11:31:46.4664033Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4664106Z                 )
2025-01-17T11:31:46.4664173Z     
2025-01-17T11:31:46.4664240Z             diff = 0
2025-01-17T11:31:46.4664349Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4664429Z                 # count up differences
2025-01-17T11:31:46.4664591Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4664669Z                     diff += 1
2025-01-17T11:31:46.4664731Z     
2025-01-17T11:31:46.4664822Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4664951Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4665119Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4665224Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4665295Z E           
2025-01-17T11:31:46.4665406Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4665669Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4665928Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4665938Z 
2025-01-17T11:31:46.4666237Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4666242Z 
2025-01-17T11:31:46.4666411Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4666415Z 
2025-01-17T11:31:46.4666635Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e901b50>
2025-01-17T11:31:46.4666837Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>, attr = 'f_lu'
2025-01-17T11:31:46.4666841Z 
2025-01-17T11:31:46.4666972Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4667147Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4667281Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4667400Z         try:
2025-01-17T11:31:46.4667622Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4667742Z         except KeyError:
2025-01-17T11:31:46.4667963Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4668066Z     
2025-01-17T11:31:46.4668203Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4668357Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4668602Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4668736Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4668921Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4669006Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4669117Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4669122Z 
2025-01-17T11:31:46.4669244Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4669355Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4669501Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4669569Z     ???
2025-01-17T11:31:46.4669671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4669675Z 
2025-01-17T11:31:46.4669741Z >   ???
2025-01-17T11:31:46.4669862Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4669935Z E   
2025-01-17T11:31:46.4670056Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4670170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4670242Z E          ...
2025-01-17T11:31:46.4670323Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4670452Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4670557Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4670627Z E          ...
2025-01-17T11:31:46.4670704Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4670824Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4670923Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4670927Z 
2025-01-17T11:31:46.4671016Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4671214Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-17T11:31:46.4671223Z 
2025-01-17T11:31:46.4671349Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4671477Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4671571Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4671697Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4671819Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4671906Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4671985Z err_msg = None
2025-01-17T11:31:46.4671990Z 
2025-01-17T11:31:46.4672092Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4672172Z         if err_msg is None:
2025-01-17T11:31:46.4672263Z             if left.shape != right.shape:
2025-01-17T11:31:46.4672344Z                 raise_assert_detail(
2025-01-17T11:31:46.4672488Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4672663Z                 )
2025-01-17T11:31:46.4672734Z     
2025-01-17T11:31:46.4672806Z             diff = 0
2025-01-17T11:31:46.4672910Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4672997Z                 # count up differences
2025-01-17T11:31:46.4673160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4673230Z                     diff += 1
2025-01-17T11:31:46.4673296Z     
2025-01-17T11:31:46.4673378Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4673509Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4673674Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4673783Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4673848Z E           
2025-01-17T11:31:46.4674083Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4674341Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4674706Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4674712Z 
2025-01-17T11:31:46.4675013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4675017Z 
2025-01-17T11:31:46.4675176Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4675186Z 
2025-01-17T11:31:46.4675407Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9018b0>
2025-01-17T11:31:46.4675572Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4675652Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4675657Z 
2025-01-17T11:31:46.4675783Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4675895Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4675969Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4676033Z         try:
2025-01-17T11:31:46.4676166Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4676237Z         except KeyError:
2025-01-17T11:31:46.4676375Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4676436Z     
2025-01-17T11:31:46.4676523Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4676614Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4676699Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4676826Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4676912Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4676995Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4677104Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4677169Z             else:
2025-01-17T11:31:46.4677264Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4677363Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4677368Z 
2025-01-17T11:31:46.4677488Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4677593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4677733Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4677797Z     ???
2025-01-17T11:31:46.4677903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4677912Z 
2025-01-17T11:31:46.4677975Z >   ???
2025-01-17T11:31:46.4678097Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4678168Z E   
2025-01-17T11:31:46.4678287Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4678395Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4678460Z E          ...
2025-01-17T11:31:46.4678545Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4678665Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4678772Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4678838Z E          ...
2025-01-17T11:31:46.4678919Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4679037Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4679143Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4679238Z 
2025-01-17T11:31:46.4679323Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4679524Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-17T11:31:46.4679603Z 
2025-01-17T11:31:46.4679725Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4679850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4679936Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4680062Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4680178Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4680270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4680338Z err_msg = None
2025-01-17T11:31:46.4680342Z 
2025-01-17T11:31:46.4680447Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4680529Z         if err_msg is None:
2025-01-17T11:31:46.4680621Z             if left.shape != right.shape:
2025-01-17T11:31:46.4680702Z                 raise_assert_detail(
2025-01-17T11:31:46.4680840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4680908Z                 )
2025-01-17T11:31:46.4680969Z     
2025-01-17T11:31:46.4681039Z             diff = 0
2025-01-17T11:31:46.4681140Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4681226Z                 # count up differences
2025-01-17T11:31:46.4681386Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4681462Z                     diff += 1
2025-01-17T11:31:46.4681524Z     
2025-01-17T11:31:46.4681607Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4681731Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4681901Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4682004Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4682077Z E           
2025-01-17T11:31:46.4682180Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4682434Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4682894Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4682906Z 
2025-01-17T11:31:46.4683210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4683220Z 
2025-01-17T11:31:46.4683380Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4683391Z 
2025-01-17T11:31:46.4683608Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e901b80>
2025-01-17T11:31:46.4683765Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4683843Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4683847Z 
2025-01-17T11:31:46.4683978Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4684089Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4684165Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4684233Z         try:
2025-01-17T11:31:46.4684363Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4692355Z         except KeyError:
2025-01-17T11:31:46.4692973Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4693100Z     
2025-01-17T11:31:46.4693411Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4693564Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4693698Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4693921Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4694063Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4694171Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4694284Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4694353Z             else:
2025-01-17T11:31:46.4694449Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4694554Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4694559Z 
2025-01-17T11:31:46.4694692Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4694806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4694973Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4695048Z     ???
2025-01-17T11:31:46.4695157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4695162Z 
2025-01-17T11:31:46.4695223Z >   ???
2025-01-17T11:31:46.4695348Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4695410Z E   
2025-01-17T11:31:46.4695533Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4695636Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4695704Z E          ...
2025-01-17T11:31:46.4695785Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4695911Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4696017Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4696083Z E          ...
2025-01-17T11:31:46.4696168Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4696291Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4696393Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4696397Z 
2025-01-17T11:31:46.4696483Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4696688Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-17T11:31:46.4696692Z 
2025-01-17T11:31:46.4696817Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4696949Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4697044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4697175Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4697293Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4697384Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4697459Z err_msg = None
2025-01-17T11:31:46.4697466Z 
2025-01-17T11:31:46.4697574Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4697648Z         if err_msg is None:
2025-01-17T11:31:46.4697742Z             if left.shape != right.shape:
2025-01-17T11:31:46.4697821Z                 raise_assert_detail(
2025-01-17T11:31:46.4697965Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4698029Z                 )
2025-01-17T11:31:46.4698093Z     
2025-01-17T11:31:46.4698159Z             diff = 0
2025-01-17T11:31:46.4698268Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4698347Z                 # count up differences
2025-01-17T11:31:46.4698518Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4698588Z                     diff += 1
2025-01-17T11:31:46.4698782Z     
2025-01-17T11:31:46.4698863Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4699093Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4699257Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4699370Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4699436Z E           
2025-01-17T11:31:46.4699542Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4699805Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4700069Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4700084Z 
2025-01-17T11:31:46.4700395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4700401Z 
2025-01-17T11:31:46.4700570Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4700575Z 
2025-01-17T11:31:46.4700795Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900d40>
2025-01-17T11:31:46.4700953Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81557f7ec0>
2025-01-17T11:31:46.4701023Z attr = 'j_blues'
2025-01-17T11:31:46.4701027Z 
2025-01-17T11:31:46.4701165Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4701275Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4701370Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4701435Z         try:
2025-01-17T11:31:46.4701576Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4701656Z         except KeyError:
2025-01-17T11:31:46.4701793Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4701856Z     
2025-01-17T11:31:46.4701942Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4702029Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4702111Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4702242Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4702323Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4702438Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4702746Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4702874Z             else:
2025-01-17T11:31:46.4703024Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4703210Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4703216Z 
2025-01-17T11:31:46.4703414Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4703605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4703849Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4703928Z     ???
2025-01-17T11:31:46.4704035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4704040Z 
2025-01-17T11:31:46.4704111Z >   ???
2025-01-17T11:31:46.4704234Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4704303Z E   
2025-01-17T11:31:46.4704423Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4704530Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4704597Z E          ...
2025-01-17T11:31:46.4704683Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4704949Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4705060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4705233Z E          ...
2025-01-17T11:31:46.4705316Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4705448Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4705551Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4705555Z 
2025-01-17T11:31:46.4705644Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4705886Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-17T11:31:46.4705891Z 
2025-01-17T11:31:46.4706022Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4706146Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4706244Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4706379Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4706510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4706596Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4706670Z err_msg = None
2025-01-17T11:31:46.4706674Z 
2025-01-17T11:31:46.4706788Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4706869Z         if err_msg is None:
2025-01-17T11:31:46.4706959Z             if left.shape != right.shape:
2025-01-17T11:31:46.4707042Z                 raise_assert_detail(
2025-01-17T11:31:46.4707185Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4707254Z                 )
2025-01-17T11:31:46.4707317Z     
2025-01-17T11:31:46.4707393Z             diff = 0
2025-01-17T11:31:46.4707502Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4707594Z                 # count up differences
2025-01-17T11:31:46.4707760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4707845Z                     diff += 1
2025-01-17T11:31:46.4707905Z     
2025-01-17T11:31:46.4707986Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4708120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4708278Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4708386Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4708451Z E           
2025-01-17T11:31:46.4708561Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4708815Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4709085Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4709091Z 
2025-01-17T11:31:46.4709399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4709404Z 
2025-01-17T11:31:46.4709568Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4709572Z 
2025-01-17T11:31:46.4709793Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900fb0>
2025-01-17T11:31:46.4709952Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4710111Z attr = 'lines'
2025-01-17T11:31:46.4710116Z 
2025-01-17T11:31:46.4710246Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4710437Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4710517Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4710589Z         try:
2025-01-17T11:31:46.4710725Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4710802Z         except KeyError:
2025-01-17T11:31:46.4710931Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4710994Z     
2025-01-17T11:31:46.4711076Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4711164Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4711251Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4711379Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4711465Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4711547Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4711659Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4711725Z             else:
2025-01-17T11:31:46.4711823Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4711922Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4711926Z 
2025-01-17T11:31:46.4712049Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4712156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4712297Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4712362Z     ???
2025-01-17T11:31:46.4712469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4712473Z 
2025-01-17T11:31:46.4712690Z >   ???
2025-01-17T11:31:46.4712862Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4712927Z E   
2025-01-17T11:31:46.4713055Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4713169Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4713236Z E          ...
2025-01-17T11:31:46.4713332Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4713455Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4713566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4713631Z E          ...
2025-01-17T11:31:46.4713714Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4713830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4713932Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4713937Z 
2025-01-17T11:31:46.4714020Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4714316Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-17T11:31:46.4714321Z 
2025-01-17T11:31:46.4714539Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e900dd0>
2025-01-17T11:31:46.4714704Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4714791Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4714795Z 
2025-01-17T11:31:46.4714928Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4715033Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4715117Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4715181Z         try:
2025-01-17T11:31:46.4715318Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4715393Z         except KeyError:
2025-01-17T11:31:46.4715526Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4715588Z     
2025-01-17T11:31:46.4715672Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4715757Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4715842Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4716095Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4716175Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4716363Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4716465Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4716470Z 
2025-01-17T11:31:46.4716590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4716694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4716699Z 
2025-01-17T11:31:46.4716830Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4716908Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4717015Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4717089Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4717225Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4717310Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4717411Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4717490Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4717565Z err_msg = None
2025-01-17T11:31:46.4717569Z 
2025-01-17T11:31:46.4717672Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4717750Z         if err_msg is None:
2025-01-17T11:31:46.4717836Z             if left.shape != right.shape:
2025-01-17T11:31:46.4717919Z                 raise_assert_detail(
2025-01-17T11:31:46.4718057Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4718128Z                 )
2025-01-17T11:31:46.4718190Z     
2025-01-17T11:31:46.4718261Z             diff = 0
2025-01-17T11:31:46.4718365Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4718450Z                 # count up differences
2025-01-17T11:31:46.4718615Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4718686Z                     diff += 1
2025-01-17T11:31:46.4718759Z     
2025-01-17T11:31:46.4718840Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4718973Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4719138Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4719239Z E           AssertionError: Series are different
2025-01-17T11:31:46.4719305Z E           
2025-01-17T11:31:46.4719478Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4720165Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4720745Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4721088Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4721095Z 
2025-01-17T11:31:46.4721398Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4721808Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-17T11:31:46.4721886Z 
2025-01-17T11:31:46.4722108Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e902c60>
2025-01-17T11:31:46.4722275Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4722356Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4722360Z 
2025-01-17T11:31:46.4722496Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4722793Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4722886Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4722952Z         try:
2025-01-17T11:31:46.4723090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4723163Z         except KeyError:
2025-01-17T11:31:46.4723294Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4723361Z     
2025-01-17T11:31:46.4723442Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4723528Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4723614Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4723744Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4723823Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4723907Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4724007Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4724011Z 
2025-01-17T11:31:46.4724132Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4724238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4724243Z 
2025-01-17T11:31:46.4724378Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4724456Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4724567Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4724641Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4724779Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4724857Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4724958Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4725029Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4725104Z err_msg = None
2025-01-17T11:31:46.4725108Z 
2025-01-17T11:31:46.4725210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4725288Z         if err_msg is None:
2025-01-17T11:31:46.4725373Z             if left.shape != right.shape:
2025-01-17T11:31:46.4725460Z                 raise_assert_detail(
2025-01-17T11:31:46.4725594Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4725663Z                 )
2025-01-17T11:31:46.4725732Z     
2025-01-17T11:31:46.4725805Z             diff = 0
2025-01-17T11:31:46.4725907Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4725992Z                 # count up differences
2025-01-17T11:31:46.4726160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4726230Z                     diff += 1
2025-01-17T11:31:46.4726297Z     
2025-01-17T11:31:46.4726375Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4726505Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4726667Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4726766Z E           AssertionError: Series are different
2025-01-17T11:31:46.4726832Z E           
2025-01-17T11:31:46.4726932Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4727300Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4727901Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4728277Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4728291Z 
2025-01-17T11:31:46.4728589Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4728815Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-17T11:31:46.4728819Z 
2025-01-17T11:31:46.4728941Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4729064Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4729158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4729284Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4729402Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4729497Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4729566Z err_msg = None
2025-01-17T11:31:46.4729570Z 
2025-01-17T11:31:46.4729673Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4729747Z         if err_msg is None:
2025-01-17T11:31:46.4729840Z             if left.shape != right.shape:
2025-01-17T11:31:46.4729920Z                 raise_assert_detail(
2025-01-17T11:31:46.4730059Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4730124Z                 )
2025-01-17T11:31:46.4730190Z     
2025-01-17T11:31:46.4730257Z             diff = 0
2025-01-17T11:31:46.4730358Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4730441Z                 # count up differences
2025-01-17T11:31:46.4730599Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4730680Z                     diff += 1
2025-01-17T11:31:46.4730743Z     
2025-01-17T11:31:46.4730835Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4730961Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4731124Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4731228Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4731294Z E           
2025-01-17T11:31:46.4731396Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4731654Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4731912Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4732093Z 
2025-01-17T11:31:46.4732394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4732399Z 
2025-01-17T11:31:46.4732665Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4732677Z 
2025-01-17T11:31:46.4732894Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6ba0>
2025-01-17T11:31:46.4733089Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>, attr = 'nu'
2025-01-17T11:31:46.4733093Z 
2025-01-17T11:31:46.4733221Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4733332Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4733424Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4733488Z         try:
2025-01-17T11:31:46.4733629Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4733702Z         except KeyError:
2025-01-17T11:31:46.4733836Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4733898Z     
2025-01-17T11:31:46.4733979Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4734065Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4734148Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4734270Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4734348Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4734432Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4734536Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4734541Z 
2025-01-17T11:31:46.4734659Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4734773Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4734918Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4734981Z     ???
2025-01-17T11:31:46.4735088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4735092Z 
2025-01-17T11:31:46.4735155Z >   ???
2025-01-17T11:31:46.4735278Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4735340Z E   
2025-01-17T11:31:46.4735465Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4735568Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4735639Z E          ...
2025-01-17T11:31:46.4735719Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4735843Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4735945Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4736017Z E          ...
2025-01-17T11:31:46.4736093Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4736219Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4736320Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4736324Z 
2025-01-17T11:31:46.4736409Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4736674Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-17T11:31:46.4736679Z 
2025-01-17T11:31:46.4736800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4736921Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4737011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4737236Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4737616Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4737930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4738052Z err_msg = None
2025-01-17T11:31:46.4738059Z 
2025-01-17T11:31:46.4738228Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4738348Z         if err_msg is None:
2025-01-17T11:31:46.4738493Z             if left.shape != right.shape:
2025-01-17T11:31:46.4738619Z                 raise_assert_detail(
2025-01-17T11:31:46.4738849Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4738955Z                 )
2025-01-17T11:31:46.4739062Z     
2025-01-17T11:31:46.4739172Z             diff = 0
2025-01-17T11:31:46.4739346Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4739478Z                 # count up differences
2025-01-17T11:31:46.4739756Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4739879Z                     diff += 1
2025-01-17T11:31:46.4739988Z     
2025-01-17T11:31:46.4740129Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4740346Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4740552Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4740662Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4740727Z E           
2025-01-17T11:31:46.4740834Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4741087Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4741343Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4741358Z 
2025-01-17T11:31:46.4741654Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4741658Z 
2025-01-17T11:31:46.4741818Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4741823Z 
2025-01-17T11:31:46.4742037Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa50a0>
2025-01-17T11:31:46.4742195Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4742269Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4742273Z 
2025-01-17T11:31:46.4742401Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4742510Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4742694Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4742769Z         try:
2025-01-17T11:31:46.4742901Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4742976Z         except KeyError:
2025-01-17T11:31:46.4743110Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4743173Z     
2025-01-17T11:31:46.4743254Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4743339Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4743423Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4743545Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4743623Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4743706Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4743808Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4743812Z 
2025-01-17T11:31:46.4744080Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4744185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4744432Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4744494Z     ???
2025-01-17T11:31:46.4744603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4744607Z 
2025-01-17T11:31:46.4744671Z >   ???
2025-01-17T11:31:46.4744792Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4744854Z E   
2025-01-17T11:31:46.4744979Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4745079Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4745147Z E          ...
2025-01-17T11:31:46.4745227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4745350Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4745459Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4745525Z E          ...
2025-01-17T11:31:46.4745602Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4745724Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4745825Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4745838Z 
2025-01-17T11:31:46.4745942Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4746170Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-17T11:31:46.4746175Z 
2025-01-17T11:31:46.4746296Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4746414Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4746505Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4746628Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4746747Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4746839Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4746906Z err_msg = None
2025-01-17T11:31:46.4746913Z 
2025-01-17T11:31:46.4747013Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4747084Z         if err_msg is None:
2025-01-17T11:31:46.4747175Z             if left.shape != right.shape:
2025-01-17T11:31:46.4747251Z                 raise_assert_detail(
2025-01-17T11:31:46.4747387Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4747452Z                 )
2025-01-17T11:31:46.4747518Z     
2025-01-17T11:31:46.4747584Z             diff = 0
2025-01-17T11:31:46.4747687Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4747765Z                 # count up differences
2025-01-17T11:31:46.4747929Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4748004Z                     diff += 1
2025-01-17T11:31:46.4748077Z     
2025-01-17T11:31:46.4748155Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4748285Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4748443Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4748549Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4748613Z E           
2025-01-17T11:31:46.4748716Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4748971Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4749321Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4749401Z 
2025-01-17T11:31:46.4749695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4749699Z 
2025-01-17T11:31:46.4749860Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4749865Z 
2025-01-17T11:31:46.4750078Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa70b0>
2025-01-17T11:31:46.4750273Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>, attr = 'f_lu'
2025-01-17T11:31:46.4750278Z 
2025-01-17T11:31:46.4750404Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4750516Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4750591Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4750661Z         try:
2025-01-17T11:31:46.4750788Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4750862Z         except KeyError:
2025-01-17T11:31:46.4750989Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4751053Z     
2025-01-17T11:31:46.4751130Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4751217Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4751297Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4751420Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4751501Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4751581Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4751685Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4751689Z 
2025-01-17T11:31:46.4751809Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4751914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4752052Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4752117Z     ???
2025-01-17T11:31:46.4752217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4752221Z 
2025-01-17T11:31:46.4752287Z >   ???
2025-01-17T11:31:46.4752405Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4752473Z E   
2025-01-17T11:31:46.4752691Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4752797Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4752861Z E          ...
2025-01-17T11:31:46.4752941Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4753058Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4753168Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4753232Z E          ...
2025-01-17T11:31:46.4753312Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4753430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4753529Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4753532Z 
2025-01-17T11:31:46.4753614Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4753874Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-17T11:31:46.4753881Z 
2025-01-17T11:31:46.4754001Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4754120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4754207Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4754333Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4754569Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4754863Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4754985Z err_msg = None
2025-01-17T11:31:46.4754992Z 
2025-01-17T11:31:46.4755168Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4755289Z         if err_msg is None:
2025-01-17T11:31:46.4755430Z             if left.shape != right.shape:
2025-01-17T11:31:46.4755563Z                 raise_assert_detail(
2025-01-17T11:31:46.4755788Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4755900Z                 )
2025-01-17T11:31:46.4756003Z     
2025-01-17T11:31:46.4756116Z             diff = 0
2025-01-17T11:31:46.4756283Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4756418Z                 # count up differences
2025-01-17T11:31:46.4756692Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4756821Z                     diff += 1
2025-01-17T11:31:46.4756931Z     
2025-01-17T11:31:46.4757068Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4757278Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4757559Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4757729Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4757840Z E           
2025-01-17T11:31:46.4758010Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4758355Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4758621Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4758630Z 
2025-01-17T11:31:46.4758931Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4758936Z 
2025-01-17T11:31:46.4759095Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4759099Z 
2025-01-17T11:31:46.4759319Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa4f20>
2025-01-17T11:31:46.4759474Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4759548Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4759553Z 
2025-01-17T11:31:46.4759681Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4759796Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4759877Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4759942Z         try:
2025-01-17T11:31:46.4760073Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4760148Z         except KeyError:
2025-01-17T11:31:46.4760277Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4760341Z     
2025-01-17T11:31:46.4760419Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4760508Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4760587Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4760709Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4760791Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4760871Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4760977Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4761137Z             else:
2025-01-17T11:31:46.4761228Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4761425Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4761429Z 
2025-01-17T11:31:46.4761548Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4761651Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4761791Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4761853Z     ???
2025-01-17T11:31:46.4761953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4761958Z 
2025-01-17T11:31:46.4762020Z >   ???
2025-01-17T11:31:46.4762140Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4762202Z E   
2025-01-17T11:31:46.4762324Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4762424Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4762496Z E          ...
2025-01-17T11:31:46.4762769Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4762937Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4763041Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4763106Z E          ...
2025-01-17T11:31:46.4763186Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4763302Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4763400Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4763404Z 
2025-01-17T11:31:46.4763484Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4763740Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-17T11:31:46.4763745Z 
2025-01-17T11:31:46.4763865Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4763985Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4764079Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4764209Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4764323Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4764409Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4764481Z err_msg = None
2025-01-17T11:31:46.4764485Z 
2025-01-17T11:31:46.4764588Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4764660Z         if err_msg is None:
2025-01-17T11:31:46.4764748Z             if left.shape != right.shape:
2025-01-17T11:31:46.4764824Z                 raise_assert_detail(
2025-01-17T11:31:46.4764960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4765024Z                 )
2025-01-17T11:31:46.4765094Z     
2025-01-17T11:31:46.4765161Z             diff = 0
2025-01-17T11:31:46.4765265Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4765350Z                 # count up differences
2025-01-17T11:31:46.4765512Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4765583Z                     diff += 1
2025-01-17T11:31:46.4765645Z     
2025-01-17T11:31:46.4765723Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4765849Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4766016Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4766118Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4766185Z E           
2025-01-17T11:31:46.4766286Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4766541Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4767026Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4767035Z 
2025-01-17T11:31:46.4767325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4767330Z 
2025-01-17T11:31:46.4767491Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4767496Z 
2025-01-17T11:31:46.4767706Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6990>
2025-01-17T11:31:46.4767869Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4767946Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4767951Z 
2025-01-17T11:31:46.4768081Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4768185Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4768266Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4768329Z         try:
2025-01-17T11:31:46.4768461Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4768534Z         except KeyError:
2025-01-17T11:31:46.4768663Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4768730Z     
2025-01-17T11:31:46.4768808Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4768897Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4768978Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4769103Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4769185Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4769270Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4769376Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4769448Z             else:
2025-01-17T11:31:46.4769536Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4769643Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4769647Z 
2025-01-17T11:31:46.4769760Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4769866Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4770002Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4770066Z     ???
2025-01-17T11:31:46.4770165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4770170Z 
2025-01-17T11:31:46.4770234Z >   ???
2025-01-17T11:31:46.4770350Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4770421Z E   
2025-01-17T11:31:46.4770541Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4770652Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4770716Z E          ...
2025-01-17T11:31:46.4770799Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4770921Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4771024Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4771089Z E          ...
2025-01-17T11:31:46.4771167Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4771284Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4771378Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4771383Z 
2025-01-17T11:31:46.4771466Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4771776Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-17T11:31:46.4771908Z 
2025-01-17T11:31:46.4772130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4772432Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4772703Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4772915Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4773098Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4773187Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4773260Z err_msg = None
2025-01-17T11:31:46.4773264Z 
2025-01-17T11:31:46.4773365Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4773439Z         if err_msg is None:
2025-01-17T11:31:46.4773526Z             if left.shape != right.shape:
2025-01-17T11:31:46.4773611Z                 raise_assert_detail(
2025-01-17T11:31:46.4773747Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4773820Z                 )
2025-01-17T11:31:46.4773881Z     
2025-01-17T11:31:46.4773948Z             diff = 0
2025-01-17T11:31:46.4774049Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4774126Z                 # count up differences
2025-01-17T11:31:46.4774290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4774359Z                     diff += 1
2025-01-17T11:31:46.4774424Z     
2025-01-17T11:31:46.4774503Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4774632Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4774792Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4774901Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4774969Z E           
2025-01-17T11:31:46.4775072Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4775337Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4775596Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4775601Z 
2025-01-17T11:31:46.4775901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4775911Z 
2025-01-17T11:31:46.4776069Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4776078Z 
2025-01-17T11:31:46.4776298Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa76e0>
2025-01-17T11:31:46.4776453Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817847ab10>
2025-01-17T11:31:46.4776528Z attr = 'j_blues'
2025-01-17T11:31:46.4776532Z 
2025-01-17T11:31:46.4776659Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4776767Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4776850Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4776915Z         try:
2025-01-17T11:31:46.4777052Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4777125Z         except KeyError:
2025-01-17T11:31:46.4777257Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4777318Z     
2025-01-17T11:31:46.4777527Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4777614Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4777701Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4777926Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4778007Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4778088Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4778196Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4778262Z             else:
2025-01-17T11:31:46.4778353Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4778451Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4778455Z 
2025-01-17T11:31:46.4778574Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4778677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4778816Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4778886Z     ???
2025-01-17T11:31:46.4778986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4778999Z 
2025-01-17T11:31:46.4779061Z >   ???
2025-01-17T11:31:46.4779176Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4779243Z E   
2025-01-17T11:31:46.4779361Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4779475Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4779540Z E          ...
2025-01-17T11:31:46.4779627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4779748Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4779858Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4779922Z E          ...
2025-01-17T11:31:46.4780004Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4780120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4780224Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4780228Z 
2025-01-17T11:31:46.4780309Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4780514Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-17T11:31:46.4780519Z 
2025-01-17T11:31:46.4780637Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4780760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4780846Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4780976Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4781091Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4781187Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4781256Z err_msg = None
2025-01-17T11:31:46.4781266Z 
2025-01-17T11:31:46.4781370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4781443Z         if err_msg is None:
2025-01-17T11:31:46.4781542Z             if left.shape != right.shape:
2025-01-17T11:31:46.4781619Z                 raise_assert_detail(
2025-01-17T11:31:46.4781758Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4781824Z                 )
2025-01-17T11:31:46.4781887Z     
2025-01-17T11:31:46.4781956Z             diff = 0
2025-01-17T11:31:46.4782057Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4782140Z                 # count up differences
2025-01-17T11:31:46.4782297Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4782370Z                     diff += 1
2025-01-17T11:31:46.4782435Z     
2025-01-17T11:31:46.4782520Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4782829Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4783124Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4783366Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4783435Z E           
2025-01-17T11:31:46.4783537Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4783796Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4784049Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4784060Z 
2025-01-17T11:31:46.4784353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4784362Z 
2025-01-17T11:31:46.4784519Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4784523Z 
2025-01-17T11:31:46.4784744Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6c60>
2025-01-17T11:31:46.4784904Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4784977Z attr = 'lines'
2025-01-17T11:31:46.4784981Z 
2025-01-17T11:31:46.4785107Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4785213Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4785288Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4785357Z         try:
2025-01-17T11:31:46.4785487Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4785569Z         except KeyError:
2025-01-17T11:31:46.4785697Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4785767Z     
2025-01-17T11:31:46.4785846Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4785934Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4786015Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4786141Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4786219Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4786302Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4786404Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4786473Z             else:
2025-01-17T11:31:46.4786560Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4786657Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4786665Z 
2025-01-17T11:31:46.4786780Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4786889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4787041Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4787103Z     ???
2025-01-17T11:31:46.4787208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4787212Z 
2025-01-17T11:31:46.4787275Z >   ???
2025-01-17T11:31:46.4787395Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4787458Z E   
2025-01-17T11:31:46.4787582Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4787683Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4787752Z E          ...
2025-01-17T11:31:46.4787831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4787952Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4788054Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4788210Z E          ...
2025-01-17T11:31:46.4788292Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4788486Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4788582Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4788586Z 
2025-01-17T11:31:46.4788671Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4788926Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-17T11:31:46.4788933Z 
2025-01-17T11:31:46.4789316Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa54f0>
2025-01-17T11:31:46.4789581Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4789718Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4789724Z 
2025-01-17T11:31:46.4789934Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4790114Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4790245Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4790314Z         try:
2025-01-17T11:31:46.4790450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4790530Z         except KeyError:
2025-01-17T11:31:46.4790663Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4790726Z     
2025-01-17T11:31:46.4790809Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4790893Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4790976Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4791098Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4791179Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4791258Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4791361Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4791365Z 
2025-01-17T11:31:46.4791479Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4791591Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4791595Z 
2025-01-17T11:31:46.4791724Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4791804Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4791904Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4791980Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4792107Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4792185Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4792279Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4792354Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4792420Z err_msg = None
2025-01-17T11:31:46.4792424Z 
2025-01-17T11:31:46.4792524Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4792709Z         if err_msg is None:
2025-01-17T11:31:46.4792795Z             if left.shape != right.shape:
2025-01-17T11:31:46.4792874Z                 raise_assert_detail(
2025-01-17T11:31:46.4793015Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4793084Z                 )
2025-01-17T11:31:46.4793147Z     
2025-01-17T11:31:46.4793218Z             diff = 0
2025-01-17T11:31:46.4793320Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4793404Z                 # count up differences
2025-01-17T11:31:46.4793566Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4793642Z                     diff += 1
2025-01-17T11:31:46.4793704Z     
2025-01-17T11:31:46.4793786Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4793911Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4794073Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4794299Z E           AssertionError: Series are different
2025-01-17T11:31:46.4794468Z E           
2025-01-17T11:31:46.4794562Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4794923Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4795251Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4795584Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4795594Z 
2025-01-17T11:31:46.4795894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4796138Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-17T11:31:46.4796143Z 
2025-01-17T11:31:46.4796358Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa73b0>
2025-01-17T11:31:46.4796515Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4796601Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4796609Z 
2025-01-17T11:31:46.4796736Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4796845Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4796923Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4796988Z         try:
2025-01-17T11:31:46.4797129Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4797200Z         except KeyError:
2025-01-17T11:31:46.4797330Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4797392Z     
2025-01-17T11:31:46.4797472Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4797556Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4797638Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4797760Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4797839Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4797925Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4798029Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4798038Z 
2025-01-17T11:31:46.4798153Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4798262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4798267Z 
2025-01-17T11:31:46.4798391Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4798473Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4798572Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4798650Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4798779Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4798856Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4798953Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4799114Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4799187Z err_msg = None
2025-01-17T11:31:46.4799264Z 
2025-01-17T11:31:46.4799364Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4799441Z         if err_msg is None:
2025-01-17T11:31:46.4799525Z             if left.shape != right.shape:
2025-01-17T11:31:46.4799605Z                 raise_assert_detail(
2025-01-17T11:31:46.4799736Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4799805Z                 )
2025-01-17T11:31:46.4799867Z     
2025-01-17T11:31:46.4799938Z             diff = 0
2025-01-17T11:31:46.4800040Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4800122Z                 # count up differences
2025-01-17T11:31:46.4800284Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4800357Z                     diff += 1
2025-01-17T11:31:46.4800425Z     
2025-01-17T11:31:46.4800508Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4800632Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4800802Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4800897Z E           AssertionError: Series are different
2025-01-17T11:31:46.4800965Z E           
2025-01-17T11:31:46.4801060Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4801420Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4801786Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4802166Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4802172Z 
2025-01-17T11:31:46.4802465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4802853Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-17T11:31:46.4802866Z 
2025-01-17T11:31:46.4802989Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4803119Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4803208Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4803335Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4803450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4803540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4803607Z err_msg = None
2025-01-17T11:31:46.4803611Z 
2025-01-17T11:31:46.4803713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4803784Z         if err_msg is None:
2025-01-17T11:31:46.4803872Z             if left.shape != right.shape:
2025-01-17T11:31:46.4804090Z                 raise_assert_detail(
2025-01-17T11:31:46.4804227Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4804397Z                 )
2025-01-17T11:31:46.4804462Z     
2025-01-17T11:31:46.4804529Z             diff = 0
2025-01-17T11:31:46.4804633Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4804712Z                 # count up differences
2025-01-17T11:31:46.4804876Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4804946Z                     diff += 1
2025-01-17T11:31:46.4805012Z     
2025-01-17T11:31:46.4805093Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4805220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4805381Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4805484Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4805558Z E           
2025-01-17T11:31:46.4805662Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4805924Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4806183Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4806189Z 
2025-01-17T11:31:46.4806478Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4806487Z 
2025-01-17T11:31:46.4806706Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4806721Z 
2025-01-17T11:31:46.4807095Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa5c10>
2025-01-17T11:31:46.4807439Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>, attr = 'nu'
2025-01-17T11:31:46.4807447Z 
2025-01-17T11:31:46.4807667Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4807859Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4807988Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4808101Z         try:
2025-01-17T11:31:46.4808327Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4808454Z         except KeyError:
2025-01-17T11:31:46.4808670Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4808779Z     
2025-01-17T11:31:46.4808911Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4809066Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4809202Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4809418Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4809555Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4809693Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4809869Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4809876Z 
2025-01-17T11:31:46.4810073Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4810257Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4810488Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4810601Z     ???
2025-01-17T11:31:46.4810774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4810780Z 
2025-01-17T11:31:46.4810896Z >   ???
2025-01-17T11:31:46.4811205Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4811279Z E   
2025-01-17T11:31:46.4811406Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4811600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4811665Z E          ...
2025-01-17T11:31:46.4811749Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4811872Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4811980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4812045Z E          ...
2025-01-17T11:31:46.4812129Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4812244Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4812341Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4812349Z 
2025-01-17T11:31:46.4812431Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4812757Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-17T11:31:46.4812772Z 
2025-01-17T11:31:46.4812895Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4813027Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4813123Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4813248Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4813369Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4813455Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4813526Z err_msg = None
2025-01-17T11:31:46.4813531Z 
2025-01-17T11:31:46.4813632Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4813710Z         if err_msg is None:
2025-01-17T11:31:46.4813794Z             if left.shape != right.shape:
2025-01-17T11:31:46.4813879Z                 raise_assert_detail(
2025-01-17T11:31:46.4814012Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4814086Z                 )
2025-01-17T11:31:46.4814149Z     
2025-01-17T11:31:46.4814218Z             diff = 0
2025-01-17T11:31:46.4814322Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4814405Z                 # count up differences
2025-01-17T11:31:46.4814565Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4814641Z                     diff += 1
2025-01-17T11:31:46.4814703Z     
2025-01-17T11:31:46.4814789Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4814915Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4815080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4815181Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4815252Z E           
2025-01-17T11:31:46.4815359Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4815623Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4815882Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4815888Z 
2025-01-17T11:31:46.4816182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4816309Z 
2025-01-17T11:31:46.4816477Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4816580Z 
2025-01-17T11:31:46.4816803Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6900>
2025-01-17T11:31:46.4816968Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4817045Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4817049Z 
2025-01-17T11:31:46.4817176Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4817286Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4817363Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4817429Z         try:
2025-01-17T11:31:46.4817560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4817640Z         except KeyError:
2025-01-17T11:31:46.4817769Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4817837Z     
2025-01-17T11:31:46.4817921Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4818007Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4818103Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4818228Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4818310Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4818392Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4818497Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4818501Z 
2025-01-17T11:31:46.4818617Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4818726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4818864Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4818932Z     ???
2025-01-17T11:31:46.4819033Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4819037Z 
2025-01-17T11:31:46.4819109Z >   ???
2025-01-17T11:31:46.4819228Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4819294Z E   
2025-01-17T11:31:46.4819417Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4819523Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4819588Z E          ...
2025-01-17T11:31:46.4819671Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4819790Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4819899Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4819970Z E          ...
2025-01-17T11:31:46.4820054Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4820178Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4820276Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4820281Z 
2025-01-17T11:31:46.4820368Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4820600Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-17T11:31:46.4820604Z 
2025-01-17T11:31:46.4820736Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4820858Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4820954Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4821080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4821204Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4821289Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4821363Z err_msg = None
2025-01-17T11:31:46.4821367Z 
2025-01-17T11:31:46.4821468Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4821544Z         if err_msg is None:
2025-01-17T11:31:46.4821721Z             if left.shape != right.shape:
2025-01-17T11:31:46.4821803Z                 raise_assert_detail(
2025-01-17T11:31:46.4822011Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4822084Z                 )
2025-01-17T11:31:46.4822147Z     
2025-01-17T11:31:46.4822216Z             diff = 0
2025-01-17T11:31:46.4822317Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4822401Z                 # count up differences
2025-01-17T11:31:46.4822653Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4822730Z                     diff += 1
2025-01-17T11:31:46.4822791Z     
2025-01-17T11:31:46.4822871Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4823002Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4823169Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4823286Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4823351Z E           
2025-01-17T11:31:46.4823460Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4823719Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4823978Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4823982Z 
2025-01-17T11:31:46.4824276Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4824285Z 
2025-01-17T11:31:46.4824445Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4824452Z 
2025-01-17T11:31:46.4824671Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa5310>
2025-01-17T11:31:46.4824864Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>, attr = 'f_lu'
2025-01-17T11:31:46.4824869Z 
2025-01-17T11:31:46.4825000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4825108Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4825187Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4825251Z         try:
2025-01-17T11:31:46.4825386Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4825460Z         except KeyError:
2025-01-17T11:31:46.4825591Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4825652Z     
2025-01-17T11:31:46.4825736Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4825824Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4825911Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4826038Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4826115Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4826202Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4826306Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4826310Z 
2025-01-17T11:31:46.4826431Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4826535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4826675Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4826740Z     ???
2025-01-17T11:31:46.4826843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4826847Z 
2025-01-17T11:31:46.4827049Z >   ???
2025-01-17T11:31:46.4827173Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4827237Z E   
2025-01-17T11:31:46.4827462Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4827566Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4827635Z E          ...
2025-01-17T11:31:46.4827716Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4827840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4827943Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4828015Z E          ...
2025-01-17T11:31:46.4828093Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4828209Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4828310Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4828314Z 
2025-01-17T11:31:46.4828397Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4828612Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-17T11:31:46.4828617Z 
2025-01-17T11:31:46.4828735Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4828866Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4828954Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4829083Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4829198Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4829288Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4829361Z err_msg = None
2025-01-17T11:31:46.4829366Z 
2025-01-17T11:31:46.4829469Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4829544Z         if err_msg is None:
2025-01-17T11:31:46.4829634Z             if left.shape != right.shape:
2025-01-17T11:31:46.4829715Z                 raise_assert_detail(
2025-01-17T11:31:46.4829856Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4829927Z                 )
2025-01-17T11:31:46.4829994Z     
2025-01-17T11:31:46.4830060Z             diff = 0
2025-01-17T11:31:46.4830165Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4830244Z                 # count up differences
2025-01-17T11:31:46.4830405Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4830474Z                     diff += 1
2025-01-17T11:31:46.4830540Z     
2025-01-17T11:31:46.4830619Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4830745Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4830963Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4831148Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4831285Z E           
2025-01-17T11:31:46.4831458Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4831933Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4832392Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4832405Z 
2025-01-17T11:31:46.4833032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4833205Z 
2025-01-17T11:31:46.4833488Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4833634Z 
2025-01-17T11:31:46.4834000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa5790>
2025-01-17T11:31:46.4834273Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4834352Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4834357Z 
2025-01-17T11:31:46.4834495Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4834599Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4834682Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4834747Z         try:
2025-01-17T11:31:46.4834879Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4834953Z         except KeyError:
2025-01-17T11:31:46.4835084Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4835155Z     
2025-01-17T11:31:46.4835234Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4835324Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4835410Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4835538Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4835618Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4835703Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4835805Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4835874Z             else:
2025-01-17T11:31:46.4835961Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4836066Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4836071Z 
2025-01-17T11:31:46.4836187Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4836296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4836432Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4836505Z     ???
2025-01-17T11:31:46.4836607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4836615Z 
2025-01-17T11:31:46.4836683Z >   ???
2025-01-17T11:31:46.4836801Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4836867Z E   
2025-01-17T11:31:46.4836985Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4837091Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4837156Z E          ...
2025-01-17T11:31:46.4837235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4837359Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4837464Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4837534Z E          ...
2025-01-17T11:31:46.4837611Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4837729Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4837831Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4837840Z 
2025-01-17T11:31:46.4837925Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4838129Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-17T11:31:46.4838134Z 
2025-01-17T11:31:46.4838254Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4838371Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4838462Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4838584Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4838704Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4838788Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4838953Z err_msg = None
2025-01-17T11:31:46.4838958Z 
2025-01-17T11:31:46.4839060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4839234Z         if err_msg is None:
2025-01-17T11:31:46.4839324Z             if left.shape != right.shape:
2025-01-17T11:31:46.4839407Z                 raise_assert_detail(
2025-01-17T11:31:46.4839541Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4839609Z                 )
2025-01-17T11:31:46.4839670Z     
2025-01-17T11:31:46.4839742Z             diff = 0
2025-01-17T11:31:46.4839843Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4839926Z                 # count up differences
2025-01-17T11:31:46.4840083Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4840153Z                     diff += 1
2025-01-17T11:31:46.4840221Z     
2025-01-17T11:31:46.4840300Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4840433Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4840595Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4840709Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4840774Z E           
2025-01-17T11:31:46.4840879Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4841132Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4841392Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4841401Z 
2025-01-17T11:31:46.4841699Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4841704Z 
2025-01-17T11:31:46.4841862Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4841866Z 
2025-01-17T11:31:46.4842082Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6a50>
2025-01-17T11:31:46.4842237Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4842315Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4842319Z 
2025-01-17T11:31:46.4842446Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4842730Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4842842Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4842910Z         try:
2025-01-17T11:31:46.4843046Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4843124Z         except KeyError:
2025-01-17T11:31:46.4843263Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4843325Z     
2025-01-17T11:31:46.4843411Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4843497Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4843585Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4843708Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4843789Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4843870Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4843973Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4844038Z             else:
2025-01-17T11:31:46.4844127Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4844225Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4844229Z 
2025-01-17T11:31:46.4844474Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4844579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4844842Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4844906Z     ???
2025-01-17T11:31:46.4845009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4845016Z 
2025-01-17T11:31:46.4845079Z >   ???
2025-01-17T11:31:46.4845196Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4845260Z E   
2025-01-17T11:31:46.4845377Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4845483Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4845547Z E          ...
2025-01-17T11:31:46.4845628Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4845748Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4845856Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4845928Z E          ...
2025-01-17T11:31:46.4846009Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4846128Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4846228Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4846232Z 
2025-01-17T11:31:46.4846312Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4846511Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-17T11:31:46.4846516Z 
2025-01-17T11:31:46.4846634Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4846757Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4846843Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4846969Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4847095Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4847188Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4847258Z err_msg = None
2025-01-17T11:31:46.4847262Z 
2025-01-17T11:31:46.4847365Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4847439Z         if err_msg is None:
2025-01-17T11:31:46.4847529Z             if left.shape != right.shape:
2025-01-17T11:31:46.4847611Z                 raise_assert_detail(
2025-01-17T11:31:46.4847749Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4847812Z                 )
2025-01-17T11:31:46.4847875Z     
2025-01-17T11:31:46.4847944Z             diff = 0
2025-01-17T11:31:46.4848046Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4848131Z                 # count up differences
2025-01-17T11:31:46.4848290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4848368Z                     diff += 1
2025-01-17T11:31:46.4848438Z     
2025-01-17T11:31:46.4848521Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4848664Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4848961Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4849133Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4849247Z E           
2025-01-17T11:31:46.4849415Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4849874Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4850259Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4850345Z 
2025-01-17T11:31:46.4850642Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4850647Z 
2025-01-17T11:31:46.4850805Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4850816Z 
2025-01-17T11:31:46.4851029Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817eaa6f60>
2025-01-17T11:31:46.4851185Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817eaa6c90>
2025-01-17T11:31:46.4851258Z attr = 'j_blues'
2025-01-17T11:31:46.4851262Z 
2025-01-17T11:31:46.4851390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4851506Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4851582Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4851661Z         try:
2025-01-17T11:31:46.4851792Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4851873Z         except KeyError:
2025-01-17T11:31:46.4852004Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4852074Z     
2025-01-17T11:31:46.4852154Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4852245Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4852325Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4852452Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4852649Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4852738Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4852841Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4852921Z             else:
2025-01-17T11:31:46.4853007Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4853105Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4853118Z 
2025-01-17T11:31:46.4853234Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4853339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4853484Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4853547Z     ???
2025-01-17T11:31:46.4853694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4853704Z 
2025-01-17T11:31:46.4853813Z >   ???
2025-01-17T11:31:46.4853999Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4854113Z E   
2025-01-17T11:31:46.4854315Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4854420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4854494Z E          ...
2025-01-17T11:31:46.4854573Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4854698Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4854807Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4854874Z E          ...
2025-01-17T11:31:46.4854951Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4855069Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4855163Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4855167Z 
2025-01-17T11:31:46.4855252Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4855449Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-17T11:31:46.4855453Z 
2025-01-17T11:31:46.4855576Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4855695Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4855923Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4856152Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4856273Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4856359Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4856433Z err_msg = None
2025-01-17T11:31:46.4856437Z 
2025-01-17T11:31:46.4856537Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4856613Z         if err_msg is None:
2025-01-17T11:31:46.4856700Z             if left.shape != right.shape:
2025-01-17T11:31:46.4856775Z                 raise_assert_detail(
2025-01-17T11:31:46.4856913Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4856977Z                 )
2025-01-17T11:31:46.4857051Z     
2025-01-17T11:31:46.4857122Z             diff = 0
2025-01-17T11:31:46.4857232Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4857312Z                 # count up differences
2025-01-17T11:31:46.4857479Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4857548Z                     diff += 1
2025-01-17T11:31:46.4857614Z     
2025-01-17T11:31:46.4857695Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4857827Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4857987Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4858095Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4858159Z E           
2025-01-17T11:31:46.4858262Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4858513Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4858782Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4858787Z 
2025-01-17T11:31:46.4859076Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4859081Z 
2025-01-17T11:31:46.4859241Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4859245Z 
2025-01-17T11:31:46.4859455Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e973cb0>
2025-01-17T11:31:46.4859622Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4859689Z attr = 'lines'
2025-01-17T11:31:46.4859698Z 
2025-01-17T11:31:46.4859828Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4859937Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4860021Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4860087Z         try:
2025-01-17T11:31:46.4860224Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4860298Z         except KeyError:
2025-01-17T11:31:46.4860435Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4860499Z     
2025-01-17T11:31:46.4860586Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4860673Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4860761Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4860886Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4861054Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4861145Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4861324Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4861396Z             else:
2025-01-17T11:31:46.4861484Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4861587Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4861592Z 
2025-01-17T11:31:46.4861709Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4861821Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4861957Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4862027Z     ???
2025-01-17T11:31:46.4869062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4869080Z 
2025-01-17T11:31:46.4869168Z >   ???
2025-01-17T11:31:46.4869381Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4869517Z E   
2025-01-17T11:31:46.4869738Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4869925Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4870033Z E          ...
2025-01-17T11:31:46.4870173Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4870375Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4870567Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4870637Z E          ...
2025-01-17T11:31:46.4870721Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4870839Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4870942Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4870946Z 
2025-01-17T11:31:46.4871030Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4871290Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-17T11:31:46.4871302Z 
2025-01-17T11:31:46.4871524Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e973d70>
2025-01-17T11:31:46.4871690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4871771Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4871775Z 
2025-01-17T11:31:46.4871909Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4872019Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4872099Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4872163Z         try:
2025-01-17T11:31:46.4872300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4872374Z         except KeyError:
2025-01-17T11:31:46.4872505Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4872683Z     
2025-01-17T11:31:46.4872768Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4872858Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4872946Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4873076Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4873161Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4873248Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4873356Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4873360Z 
2025-01-17T11:31:46.4873486Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4873596Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4873601Z 
2025-01-17T11:31:46.4873734Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4873816Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4873927Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4874001Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4874315Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4874392Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4874617Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4874689Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4874763Z err_msg = None
2025-01-17T11:31:46.4874767Z 
2025-01-17T11:31:46.4874876Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4874953Z         if err_msg is None:
2025-01-17T11:31:46.4875044Z             if left.shape != right.shape:
2025-01-17T11:31:46.4875124Z                 raise_assert_detail(
2025-01-17T11:31:46.4875263Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4875327Z                 )
2025-01-17T11:31:46.4875394Z     
2025-01-17T11:31:46.4875460Z             diff = 0
2025-01-17T11:31:46.4875570Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4875659Z                 # count up differences
2025-01-17T11:31:46.4875827Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4875907Z                     diff += 1
2025-01-17T11:31:46.4875974Z     
2025-01-17T11:31:46.4876052Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4876181Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4876341Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4876442Z E           AssertionError: Series are different
2025-01-17T11:31:46.4876508Z E           
2025-01-17T11:31:46.4876607Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4876974Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4877322Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4877646Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4877656Z 
2025-01-17T11:31:46.4877969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4878232Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-17T11:31:46.4878237Z 
2025-01-17T11:31:46.4878454Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e973e30>
2025-01-17T11:31:46.4878619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4878703Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4878708Z 
2025-01-17T11:31:46.4878841Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4878954Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4879036Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4879102Z         try:
2025-01-17T11:31:46.4879236Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4879314Z         except KeyError:
2025-01-17T11:31:46.4879535Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4879605Z     
2025-01-17T11:31:46.4879684Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4879851Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4879933Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4880066Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4880146Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4880231Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4880334Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4880338Z 
2025-01-17T11:31:46.4880463Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4880570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4880575Z 
2025-01-17T11:31:46.4880703Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4880786Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4880888Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4880964Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4881097Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4881172Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4881271Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4881343Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4881414Z err_msg = None
2025-01-17T11:31:46.4881418Z 
2025-01-17T11:31:46.4881521Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4881598Z         if err_msg is None:
2025-01-17T11:31:46.4881685Z             if left.shape != right.shape:
2025-01-17T11:31:46.4881762Z                 raise_assert_detail(
2025-01-17T11:31:46.4881904Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4881974Z                 )
2025-01-17T11:31:46.4882040Z     
2025-01-17T11:31:46.4882105Z             diff = 0
2025-01-17T11:31:46.4882215Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4882294Z                 # count up differences
2025-01-17T11:31:46.4882456Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4882525Z                     diff += 1
2025-01-17T11:31:46.4882790Z     
2025-01-17T11:31:46.4882877Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4883011Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4883175Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4883274Z E           AssertionError: Series are different
2025-01-17T11:31:46.4883339Z E           
2025-01-17T11:31:46.4883439Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4884076Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4884773Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4885449Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4885753Z 
2025-01-17T11:31:46.4886198Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4886401Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-17T11:31:46.4886407Z 
2025-01-17T11:31:46.4886529Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4886654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4886747Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4886874Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4887007Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4887102Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4887171Z err_msg = None
2025-01-17T11:31:46.4887175Z 
2025-01-17T11:31:46.4887276Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4887355Z         if err_msg is None:
2025-01-17T11:31:46.4887442Z             if left.shape != right.shape:
2025-01-17T11:31:46.4887527Z                 raise_assert_detail(
2025-01-17T11:31:46.4887662Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4887731Z                 )
2025-01-17T11:31:46.4887793Z     
2025-01-17T11:31:46.4887864Z             diff = 0
2025-01-17T11:31:46.4887965Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4888047Z                 # count up differences
2025-01-17T11:31:46.4888211Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4888286Z                     diff += 1
2025-01-17T11:31:46.4888353Z     
2025-01-17T11:31:46.4888437Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4888565Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4888726Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4888829Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4888897Z E           
2025-01-17T11:31:46.4889001Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4889255Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4889522Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4889530Z 
2025-01-17T11:31:46.4889825Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4889829Z 
2025-01-17T11:31:46.4889990Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4889994Z 
2025-01-17T11:31:46.4890211Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e974440>
2025-01-17T11:31:46.4890402Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>, attr = 'nu'
2025-01-17T11:31:46.4890407Z 
2025-01-17T11:31:46.4890537Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4890739Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4890820Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4890959Z         try:
2025-01-17T11:31:46.4891098Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4891172Z         except KeyError:
2025-01-17T11:31:46.4891307Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4891369Z     
2025-01-17T11:31:46.4891449Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4891535Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4891618Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4891742Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4891819Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4891906Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4892009Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4892019Z 
2025-01-17T11:31:46.4892140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4892245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4892394Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4892458Z     ???
2025-01-17T11:31:46.4892676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4892682Z 
2025-01-17T11:31:46.4892747Z >   ???
2025-01-17T11:31:46.4892870Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4892932Z E   
2025-01-17T11:31:46.4893057Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4893162Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4893232Z E          ...
2025-01-17T11:31:46.4893313Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4893438Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4893547Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4893615Z E          ...
2025-01-17T11:31:46.4893700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4893821Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4893916Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4893920Z 
2025-01-17T11:31:46.4894005Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4894222Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-17T11:31:46.4894227Z 
2025-01-17T11:31:46.4894350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4894469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4894562Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4894685Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4894809Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4894901Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4894972Z err_msg = None
2025-01-17T11:31:46.4894976Z 
2025-01-17T11:31:46.4895079Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4895153Z         if err_msg is None:
2025-01-17T11:31:46.4895246Z             if left.shape != right.shape:
2025-01-17T11:31:46.4895324Z                 raise_assert_detail(
2025-01-17T11:31:46.4895460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4895527Z                 )
2025-01-17T11:31:46.4895591Z     
2025-01-17T11:31:46.4895656Z             diff = 0
2025-01-17T11:31:46.4895764Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4896139Z                 # count up differences
2025-01-17T11:31:46.4896306Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4896523Z                     diff += 1
2025-01-17T11:31:46.4896687Z     
2025-01-17T11:31:46.4896769Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4896901Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4897062Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4897177Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4897242Z E           
2025-01-17T11:31:46.4897347Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4897599Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4897869Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4897879Z 
2025-01-17T11:31:46.4898169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4898174Z 
2025-01-17T11:31:46.4898335Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4898339Z 
2025-01-17T11:31:46.4898550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e976990>
2025-01-17T11:31:46.4898710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4898782Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4898787Z 
2025-01-17T11:31:46.4898918Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4899031Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4899121Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4899186Z         try:
2025-01-17T11:31:46.4899321Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4899396Z         except KeyError:
2025-01-17T11:31:46.4899528Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4899590Z     
2025-01-17T11:31:46.4899673Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4899761Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4899847Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4899970Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4900048Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4900135Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4900240Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4900253Z 
2025-01-17T11:31:46.4900369Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4900481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4900623Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4900688Z     ???
2025-01-17T11:31:46.4900794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4900798Z 
2025-01-17T11:31:46.4900861Z >   ???
2025-01-17T11:31:46.4900982Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4901045Z E   
2025-01-17T11:31:46.4901166Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4901269Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4901346Z E          ...
2025-01-17T11:31:46.4901448Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4901571Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4901781Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4901876Z E          ...
2025-01-17T11:31:46.4902150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4902374Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4902678Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4902686Z 
2025-01-17T11:31:46.4902832Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4903171Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-17T11:31:46.4903178Z 
2025-01-17T11:31:46.4903384Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4903588Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4903740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4903951Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4904161Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4904310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4904429Z err_msg = None
2025-01-17T11:31:46.4904436Z 
2025-01-17T11:31:46.4904601Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4904726Z         if err_msg is None:
2025-01-17T11:31:46.4904879Z             if left.shape != right.shape:
2025-01-17T11:31:46.4905007Z                 raise_assert_detail(
2025-01-17T11:31:46.4905239Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4905348Z                 )
2025-01-17T11:31:46.4905456Z     
2025-01-17T11:31:46.4905567Z             diff = 0
2025-01-17T11:31:46.4905742Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4905875Z                 # count up differences
2025-01-17T11:31:46.4906165Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4906283Z                     diff += 1
2025-01-17T11:31:46.4906399Z     
2025-01-17T11:31:46.4906533Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4906745Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4907024Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4907199Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4907309Z E           
2025-01-17T11:31:46.4907482Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4907882Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4908148Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4908160Z 
2025-01-17T11:31:46.4908457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4908462Z 
2025-01-17T11:31:46.4908624Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4908628Z 
2025-01-17T11:31:46.4908849Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9740e0>
2025-01-17T11:31:46.4909044Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>, attr = 'f_lu'
2025-01-17T11:31:46.4909049Z 
2025-01-17T11:31:46.4909177Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4909429Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4909506Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4909677Z         try:
2025-01-17T11:31:46.4909807Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4909878Z         except KeyError:
2025-01-17T11:31:46.4910010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4910071Z     
2025-01-17T11:31:46.4910152Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4910238Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4910322Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4910445Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4910528Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4910608Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4910712Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4910722Z 
2025-01-17T11:31:46.4910835Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4910940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4911081Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4911146Z     ???
2025-01-17T11:31:46.4911246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4911250Z 
2025-01-17T11:31:46.4911314Z >   ???
2025-01-17T11:31:46.4911430Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4911496Z E   
2025-01-17T11:31:46.4911613Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4911717Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4911781Z E          ...
2025-01-17T11:31:46.4911860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4911984Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4912091Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4912159Z E          ...
2025-01-17T11:31:46.4912241Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4912357Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4912456Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4912460Z 
2025-01-17T11:31:46.4912699Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4912968Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-17T11:31:46.4912974Z 
2025-01-17T11:31:46.4913094Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4913212Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4913305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4913425Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4913549Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4913637Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4913709Z err_msg = None
2025-01-17T11:31:46.4913714Z 
2025-01-17T11:31:46.4913814Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4913891Z         if err_msg is None:
2025-01-17T11:31:46.4913977Z             if left.shape != right.shape:
2025-01-17T11:31:46.4914057Z                 raise_assert_detail(
2025-01-17T11:31:46.4914190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4914259Z                 )
2025-01-17T11:31:46.4914320Z     
2025-01-17T11:31:46.4914387Z             diff = 0
2025-01-17T11:31:46.4914489Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4914570Z                 # count up differences
2025-01-17T11:31:46.4914858Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4914929Z                     diff += 1
2025-01-17T11:31:46.4915101Z     
2025-01-17T11:31:46.4915181Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4915308Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4915465Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4915570Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4915633Z E           
2025-01-17T11:31:46.4915735Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4915985Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4916244Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4916254Z 
2025-01-17T11:31:46.4916546Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4916551Z 
2025-01-17T11:31:46.4916708Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4916712Z 
2025-01-17T11:31:46.4916927Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9748c0>
2025-01-17T11:31:46.4917080Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4917154Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4917158Z 
2025-01-17T11:31:46.4917288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4917395Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4917475Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4917538Z         try:
2025-01-17T11:31:46.4917670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4917741Z         except KeyError:
2025-01-17T11:31:46.4917872Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4917933Z     
2025-01-17T11:31:46.4918014Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4918098Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4918179Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4918302Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4918383Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4918465Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4918568Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4918638Z             else:
2025-01-17T11:31:46.4918729Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4918831Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4918835Z 
2025-01-17T11:31:46.4918953Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4919057Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4919196Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4919259Z     ???
2025-01-17T11:31:46.4919360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4919365Z 
2025-01-17T11:31:46.4919426Z >   ???
2025-01-17T11:31:46.4919543Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4919608Z E   
2025-01-17T11:31:46.4919727Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4919834Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4920006Z E          ...
2025-01-17T11:31:46.4920089Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4920332Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4920566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4920681Z E          ...
2025-01-17T11:31:46.4920817Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4921014Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4921176Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4921183Z 
2025-01-17T11:31:46.4921315Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4921642Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-17T11:31:46.4921648Z 
2025-01-17T11:31:46.4921770Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4921892Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4921988Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4922117Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4922232Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4922319Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4922389Z err_msg = None
2025-01-17T11:31:46.4922393Z 
2025-01-17T11:31:46.4922495Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4922745Z         if err_msg is None:
2025-01-17T11:31:46.4922853Z             if left.shape != right.shape:
2025-01-17T11:31:46.4922931Z                 raise_assert_detail(
2025-01-17T11:31:46.4923069Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4923133Z                 )
2025-01-17T11:31:46.4923203Z     
2025-01-17T11:31:46.4923268Z             diff = 0
2025-01-17T11:31:46.4923373Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4923460Z                 # count up differences
2025-01-17T11:31:46.4923620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4923693Z                     diff += 1
2025-01-17T11:31:46.4923756Z     
2025-01-17T11:31:46.4923838Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4923961Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4924122Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4924225Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4924290Z E           
2025-01-17T11:31:46.4924390Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4924645Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4924909Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4924915Z 
2025-01-17T11:31:46.4925212Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4925216Z 
2025-01-17T11:31:46.4925374Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4925381Z 
2025-01-17T11:31:46.4925592Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e974980>
2025-01-17T11:31:46.4925886Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4926060Z attr = 'beta_sobolev'
2025-01-17T11:31:46.4926065Z 
2025-01-17T11:31:46.4926192Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4926301Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4926377Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4926444Z         try:
2025-01-17T11:31:46.4926582Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4926660Z         except KeyError:
2025-01-17T11:31:46.4926792Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4926858Z     
2025-01-17T11:31:46.4926937Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4927025Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4927107Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4927244Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4927329Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4927413Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4927525Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4927596Z             else:
2025-01-17T11:31:46.4927683Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4927783Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4927790Z 
2025-01-17T11:31:46.4927907Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4928018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4928160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4928225Z     ???
2025-01-17T11:31:46.4928331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4928336Z 
2025-01-17T11:31:46.4928399Z >   ???
2025-01-17T11:31:46.4928519Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4928588Z E   
2025-01-17T11:31:46.4928711Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4928817Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4928886Z E          ...
2025-01-17T11:31:46.4928968Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4929095Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4929204Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4929272Z E          ...
2025-01-17T11:31:46.4929351Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4929470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4929570Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4929574Z 
2025-01-17T11:31:46.4929660Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4929865Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-17T11:31:46.4929875Z 
2025-01-17T11:31:46.4930000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4930129Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4930223Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4930350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4930470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4930556Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4930630Z err_msg = None
2025-01-17T11:31:46.4930635Z 
2025-01-17T11:31:46.4930738Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4930815Z         if err_msg is None:
2025-01-17T11:31:46.4930903Z             if left.shape != right.shape:
2025-01-17T11:31:46.4931067Z                 raise_assert_detail(
2025-01-17T11:31:46.4931205Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4931343Z                 )
2025-01-17T11:31:46.4931408Z     
2025-01-17T11:31:46.4931474Z             diff = 0
2025-01-17T11:31:46.4931580Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4931660Z                 # count up differences
2025-01-17T11:31:46.4931826Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4931896Z                     diff += 1
2025-01-17T11:31:46.4931965Z     
2025-01-17T11:31:46.4932045Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4932175Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4932335Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4932443Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4932513Z E           
2025-01-17T11:31:46.4932725Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4932988Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4933245Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4933249Z 
2025-01-17T11:31:46.4933545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4933559Z 
2025-01-17T11:31:46.4933724Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4933731Z 
2025-01-17T11:31:46.4933946Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e974b30>
2025-01-17T11:31:46.4934107Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814bca5520>
2025-01-17T11:31:46.4934176Z attr = 'j_blues'
2025-01-17T11:31:46.4934180Z 
2025-01-17T11:31:46.4934310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4934419Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4934500Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4934565Z         try:
2025-01-17T11:31:46.4934700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4934772Z         except KeyError:
2025-01-17T11:31:46.4934903Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4934966Z     
2025-01-17T11:31:46.4935046Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4935136Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4935218Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4935347Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4935425Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4935511Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4935614Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4935682Z             else:
2025-01-17T11:31:46.4935769Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4935870Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4935875Z 
2025-01-17T11:31:46.4935992Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4936101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4936238Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4936427Z     ???
2025-01-17T11:31:46.4936528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4936695Z 
2025-01-17T11:31:46.4936819Z >   ???
2025-01-17T11:31:46.4937033Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4937142Z E   
2025-01-17T11:31:46.4937343Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4937517Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4937625Z E          ...
2025-01-17T11:31:46.4937763Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4937935Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4938046Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4938112Z E          ...
2025-01-17T11:31:46.4938189Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4938307Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4938413Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4938420Z 
2025-01-17T11:31:46.4938502Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4938726Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-17T11:31:46.4938734Z 
2025-01-17T11:31:46.4938855Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4938975Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4939069Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4939194Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4939311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4939396Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4939468Z err_msg = None
2025-01-17T11:31:46.4939477Z 
2025-01-17T11:31:46.4939580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4939660Z         if err_msg is None:
2025-01-17T11:31:46.4939750Z             if left.shape != right.shape:
2025-01-17T11:31:46.4939831Z                 raise_assert_detail(
2025-01-17T11:31:46.4939967Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4940033Z                 )
2025-01-17T11:31:46.4940096Z     
2025-01-17T11:31:46.4940165Z             diff = 0
2025-01-17T11:31:46.4940266Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4940347Z                 # count up differences
2025-01-17T11:31:46.4940510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4940584Z                     diff += 1
2025-01-17T11:31:46.4940648Z     
2025-01-17T11:31:46.4940735Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4940864Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4941031Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4941146Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4941212Z E           
2025-01-17T11:31:46.4941319Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4941573Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4941832Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4941930Z 
2025-01-17T11:31:46.4942233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4942310Z 
2025-01-17T11:31:46.4942475Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4942479Z 
2025-01-17T11:31:46.4942808Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975910>
2025-01-17T11:31:46.4942965Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4943038Z attr = 'lines'
2025-01-17T11:31:46.4943042Z 
2025-01-17T11:31:46.4943172Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4943284Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4943361Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4943429Z         try:
2025-01-17T11:31:46.4943560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4943643Z         except KeyError:
2025-01-17T11:31:46.4943772Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4943844Z     
2025-01-17T11:31:46.4943922Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4944007Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4944091Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4944215Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4944296Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4944377Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4944483Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4944549Z             else:
2025-01-17T11:31:46.4944637Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4944736Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4944740Z 
2025-01-17T11:31:46.4944859Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4944968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4945109Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4945172Z     ???
2025-01-17T11:31:46.4945275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4945279Z 
2025-01-17T11:31:46.4945342Z >   ???
2025-01-17T11:31:46.4945461Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4945522Z E   
2025-01-17T11:31:46.4945643Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4945746Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4945813Z E          ...
2025-01-17T11:31:46.4945893Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4946012Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4946117Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4946187Z E          ...
2025-01-17T11:31:46.4946268Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4946390Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4946489Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4946493Z 
2025-01-17T11:31:46.4946573Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4946850Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-17T11:31:46.4946856Z 
2025-01-17T11:31:46.4947067Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9759d0>
2025-01-17T11:31:46.4947231Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4947311Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.4947315Z 
2025-01-17T11:31:46.4947443Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4947549Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4947756Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4947825Z         try:
2025-01-17T11:31:46.4947957Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4948134Z         except KeyError:
2025-01-17T11:31:46.4948266Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4948328Z     
2025-01-17T11:31:46.4948409Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4948493Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4948576Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4948698Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4948778Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4948862Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4948962Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4948972Z 
2025-01-17T11:31:46.4949092Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4949203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4949211Z 
2025-01-17T11:31:46.4949345Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4949423Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4949529Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4949601Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4949734Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.4949809Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.4949909Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4949980Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.4950055Z err_msg = None
2025-01-17T11:31:46.4950059Z 
2025-01-17T11:31:46.4950159Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4950240Z         if err_msg is None:
2025-01-17T11:31:46.4950327Z             if left.shape != right.shape:
2025-01-17T11:31:46.4950406Z                 raise_assert_detail(
2025-01-17T11:31:46.4950543Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4950611Z                 )
2025-01-17T11:31:46.4950674Z     
2025-01-17T11:31:46.4950744Z             diff = 0
2025-01-17T11:31:46.4950846Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4950929Z                 # count up differences
2025-01-17T11:31:46.4951087Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4951158Z                     diff += 1
2025-01-17T11:31:46.4951226Z     
2025-01-17T11:31:46.4951306Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4951434Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4951594Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4951697Z E           AssertionError: Series are different
2025-01-17T11:31:46.4951769Z E           
2025-01-17T11:31:46.4951866Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.4952226Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4952648Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4953099Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4953205Z 
2025-01-17T11:31:46.4953505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4953778Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-17T11:31:46.4953783Z 
2025-01-17T11:31:46.4953995Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975a90>
2025-01-17T11:31:46.4954156Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4954258Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.4954266Z 
2025-01-17T11:31:46.4954501Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4954701Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4954833Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4954947Z         try:
2025-01-17T11:31:46.4955173Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4955299Z         except KeyError:
2025-01-17T11:31:46.4955522Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4955628Z     
2025-01-17T11:31:46.4955766Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4955911Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4956048Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4956263Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4956395Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4956546Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4956716Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4956729Z 
2025-01-17T11:31:46.4956931Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4957110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4957117Z 
2025-01-17T11:31:46.4957337Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4957473Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4957644Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4957766Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4957991Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.4958117Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.4958290Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.4958418Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.4958539Z err_msg = None
2025-01-17T11:31:46.4958551Z 
2025-01-17T11:31:46.4958719Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4958844Z         if err_msg is None:
2025-01-17T11:31:46.4958990Z             if left.shape != right.shape:
2025-01-17T11:31:46.4959124Z                 raise_assert_detail(
2025-01-17T11:31:46.4959352Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4959467Z                 )
2025-01-17T11:31:46.4959575Z     
2025-01-17T11:31:46.4959694Z             diff = 0
2025-01-17T11:31:46.4959874Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4959970Z                 # count up differences
2025-01-17T11:31:46.4960138Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4960210Z                     diff += 1
2025-01-17T11:31:46.4960388Z     
2025-01-17T11:31:46.4960468Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4960598Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4960857Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4960970Z E           AssertionError: Series are different
2025-01-17T11:31:46.4961042Z E           
2025-01-17T11:31:46.4961146Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.4961507Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.4961883Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4962264Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.4962271Z 
2025-01-17T11:31:46.4962753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4962987Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-17T11:31:46.4962992Z 
2025-01-17T11:31:46.4963113Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4963247Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4963339Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4963465Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4963581Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4963670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4963738Z err_msg = None
2025-01-17T11:31:46.4963743Z 
2025-01-17T11:31:46.4963852Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4963927Z         if err_msg is None:
2025-01-17T11:31:46.4964024Z             if left.shape != right.shape:
2025-01-17T11:31:46.4964101Z                 raise_assert_detail(
2025-01-17T11:31:46.4964242Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4964312Z                 )
2025-01-17T11:31:46.4964379Z     
2025-01-17T11:31:46.4964449Z             diff = 0
2025-01-17T11:31:46.4964555Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4964640Z                 # count up differences
2025-01-17T11:31:46.4964798Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4964872Z                     diff += 1
2025-01-17T11:31:46.4964935Z     
2025-01-17T11:31:46.4965017Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4965144Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4965308Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4965415Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4965614Z E           
2025-01-17T11:31:46.4965718Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4966076Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4966336Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4966345Z 
2025-01-17T11:31:46.4966638Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4966648Z 
2025-01-17T11:31:46.4966816Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4966826Z 
2025-01-17T11:31:46.4967043Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975d00>
2025-01-17T11:31:46.4967240Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>, attr = 'nu'
2025-01-17T11:31:46.4967244Z 
2025-01-17T11:31:46.4967375Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4967488Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4967567Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4967632Z         try:
2025-01-17T11:31:46.4967768Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4967844Z         except KeyError:
2025-01-17T11:31:46.4967979Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4968042Z     
2025-01-17T11:31:46.4968130Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4968217Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4968300Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4968429Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4968511Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4968594Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4968697Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4968702Z 
2025-01-17T11:31:46.4968817Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4968924Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4969064Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4969131Z     ???
2025-01-17T11:31:46.4969233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4969237Z 
2025-01-17T11:31:46.4969303Z >   ???
2025-01-17T11:31:46.4969428Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4969497Z E   
2025-01-17T11:31:46.4969619Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4969722Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4969793Z E          ...
2025-01-17T11:31:46.4969875Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4969999Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4970282Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4970390Z E          ...
2025-01-17T11:31:46.4970512Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4970711Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4970876Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4970885Z 
2025-01-17T11:31:46.4970978Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4971223Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-17T11:31:46.4971328Z 
2025-01-17T11:31:46.4971458Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4971655Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4971746Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4971938Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4972163Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4972313Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4972433Z err_msg = None
2025-01-17T11:31:46.4972439Z 
2025-01-17T11:31:46.4972738Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4972869Z         if err_msg is None:
2025-01-17T11:31:46.4973012Z             if left.shape != right.shape:
2025-01-17T11:31:46.4973157Z                 raise_assert_detail(
2025-01-17T11:31:46.4973384Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4973508Z                 )
2025-01-17T11:31:46.4973612Z     
2025-01-17T11:31:46.4973732Z             diff = 0
2025-01-17T11:31:46.4973904Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4974038Z                 # count up differences
2025-01-17T11:31:46.4974316Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4974436Z                     diff += 1
2025-01-17T11:31:46.4974545Z     
2025-01-17T11:31:46.4974678Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4974897Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4975175Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4975358Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4975437Z E           
2025-01-17T11:31:46.4975545Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4975803Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4976061Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4976066Z 
2025-01-17T11:31:46.4976362Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4976373Z 
2025-01-17T11:31:46.4976533Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4976542Z 
2025-01-17T11:31:46.4976758Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975dc0>
2025-01-17T11:31:46.4976915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4976993Z attr = 'wavelength_cm'
2025-01-17T11:31:46.4976997Z 
2025-01-17T11:31:46.4977125Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4977236Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4977313Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4977379Z         try:
2025-01-17T11:31:46.4977515Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4977589Z         except KeyError:
2025-01-17T11:31:46.4977722Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4977942Z     
2025-01-17T11:31:46.4978026Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4978113Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4978299Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4978424Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4978507Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4978594Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4978701Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4978705Z 
2025-01-17T11:31:46.4978820Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4978928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4979067Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4979134Z     ???
2025-01-17T11:31:46.4979236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4979240Z 
2025-01-17T11:31:46.4979315Z >   ???
2025-01-17T11:31:46.4979433Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4979505Z E   
2025-01-17T11:31:46.4979624Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4979726Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4979793Z E          ...
2025-01-17T11:31:46.4979873Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4979994Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4980100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4980167Z E          ...
2025-01-17T11:31:46.4980245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4980364Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4980460Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4980464Z 
2025-01-17T11:31:46.4980550Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4980763Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-17T11:31:46.4980767Z 
2025-01-17T11:31:46.4980890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4981011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4981102Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4981225Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4981344Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4981428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4981499Z err_msg = None
2025-01-17T11:31:46.4981503Z 
2025-01-17T11:31:46.4981604Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4981679Z         if err_msg is None:
2025-01-17T11:31:46.4981769Z             if left.shape != right.shape:
2025-01-17T11:31:46.4981848Z                 raise_assert_detail(
2025-01-17T11:31:46.4981986Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4982053Z                 )
2025-01-17T11:31:46.4982119Z     
2025-01-17T11:31:46.4982185Z             diff = 0
2025-01-17T11:31:46.4982292Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4982371Z                 # count up differences
2025-01-17T11:31:46.4982721Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4982812Z                     diff += 1
2025-01-17T11:31:46.4982884Z     
2025-01-17T11:31:46.4982967Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4983099Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4983256Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4983514Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4983579Z E           
2025-01-17T11:31:46.4983787Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4984038Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4984298Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4984302Z 
2025-01-17T11:31:46.4984595Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4984608Z 
2025-01-17T11:31:46.4984766Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4984776Z 
2025-01-17T11:31:46.4984992Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e975eb0>
2025-01-17T11:31:46.4985182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>, attr = 'f_lu'
2025-01-17T11:31:46.4985186Z 
2025-01-17T11:31:46.4985317Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4985421Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4985497Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4985565Z         try:
2025-01-17T11:31:46.4985695Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4985772Z         except KeyError:
2025-01-17T11:31:46.4985902Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4985969Z     
2025-01-17T11:31:46.4986053Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4986144Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4986228Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4986361Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4986441Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4986530Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4986633Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4986637Z 
2025-01-17T11:31:46.4986760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.4986865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4987010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4987073Z     ???
2025-01-17T11:31:46.4987178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4987184Z 
2025-01-17T11:31:46.4987257Z >   ???
2025-01-17T11:31:46.4987382Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4987446Z E   
2025-01-17T11:31:46.4987571Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4987682Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4987748Z E          ...
2025-01-17T11:31:46.4987835Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4987955Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4988063Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4988128Z E          ...
2025-01-17T11:31:46.4988209Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4988326Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4988425Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4988429Z 
2025-01-17T11:31:46.4988513Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4988841Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-17T11:31:46.4988847Z 
2025-01-17T11:31:46.4989040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4989164Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4989260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4989492Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4989703Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4989853Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4989967Z err_msg = None
2025-01-17T11:31:46.4989974Z 
2025-01-17T11:31:46.4990145Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4990264Z         if err_msg is None:
2025-01-17T11:31:46.4990416Z             if left.shape != right.shape:
2025-01-17T11:31:46.4990550Z                 raise_assert_detail(
2025-01-17T11:31:46.4990714Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4990781Z                 )
2025-01-17T11:31:46.4990845Z     
2025-01-17T11:31:46.4990911Z             diff = 0
2025-01-17T11:31:46.4991016Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4991102Z                 # count up differences
2025-01-17T11:31:46.4991264Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4991338Z                     diff += 1
2025-01-17T11:31:46.4991401Z     
2025-01-17T11:31:46.4991486Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.4991615Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.4991780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.4991891Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.4991958Z E           
2025-01-17T11:31:46.4992067Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.4992327Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4992769Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.4992777Z 
2025-01-17T11:31:46.4993088Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.4993099Z 
2025-01-17T11:31:46.4993263Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.4993277Z 
2025-01-17T11:31:46.4993494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e976630>
2025-01-17T11:31:46.4993655Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.4993732Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.4993736Z 
2025-01-17T11:31:46.4993869Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.4993977Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.4994052Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.4994119Z         try:
2025-01-17T11:31:46.4994253Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.4994330Z         except KeyError:
2025-01-17T11:31:46.4994459Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.4994664Z     
2025-01-17T11:31:46.4994746Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.4994837Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.4995023Z             if attr == "selected_atoms":
2025-01-17T11:31:46.4995151Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.4995229Z             elif actual.ndim == 1:
2025-01-17T11:31:46.4995322Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.4995426Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.4995499Z             else:
2025-01-17T11:31:46.4995586Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.4995692Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.4995697Z 
2025-01-17T11:31:46.4995813Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.4995924Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4996063Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.4996138Z     ???
2025-01-17T11:31:46.4996244Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.4996259Z 
2025-01-17T11:31:46.4996320Z >   ???
2025-01-17T11:31:46.4996443Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.4996507Z E   
2025-01-17T11:31:46.4996628Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.4996732Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4996800Z E          ...
2025-01-17T11:31:46.4996883Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4997009Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4997115Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.4997186Z E          ...
2025-01-17T11:31:46.4997264Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.4997396Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.4997491Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.4997499Z 
2025-01-17T11:31:46.4997582Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.4997820Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-17T11:31:46.4997825Z 
2025-01-17T11:31:46.4997947Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4998070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4998162Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4998288Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.4998410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.4998495Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.4998570Z err_msg = None
2025-01-17T11:31:46.4998574Z 
2025-01-17T11:31:46.4998677Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.4998758Z         if err_msg is None:
2025-01-17T11:31:46.4998845Z             if left.shape != right.shape:
2025-01-17T11:31:46.4998927Z                 raise_assert_detail(
2025-01-17T11:31:46.4999061Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.4999125Z                 )
2025-01-17T11:31:46.4999189Z     
2025-01-17T11:31:46.4999255Z             diff = 0
2025-01-17T11:31:46.4999363Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.4999443Z                 # count up differences
2025-01-17T11:31:46.4999607Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.4999677Z                     diff += 1
2025-01-17T11:31:46.4999743Z     
2025-01-17T11:31:46.4999824Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5000048Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5000285Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5000393Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5000458Z E           
2025-01-17T11:31:46.5000564Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5000818Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5001082Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5001096Z 
2025-01-17T11:31:46.5001389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5001394Z 
2025-01-17T11:31:46.5001556Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5001560Z 
2025-01-17T11:31:46.5001775Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e9766f0>
2025-01-17T11:31:46.5001934Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.5002006Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5002010Z 
2025-01-17T11:31:46.5002139Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5002247Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5002326Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5002392Z         try:
2025-01-17T11:31:46.5002757Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5002846Z         except KeyError:
2025-01-17T11:31:46.5002986Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5003048Z     
2025-01-17T11:31:46.5003131Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5003275Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5003424Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5003623Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5003769Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5003912Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5004088Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5004202Z             else:
2025-01-17T11:31:46.5004347Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5004526Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5004548Z 
2025-01-17T11:31:46.5004692Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5004807Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5004954Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5005024Z     ???
2025-01-17T11:31:46.5005127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5005132Z 
2025-01-17T11:31:46.5005203Z >   ???
2025-01-17T11:31:46.5005322Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5005391Z E   
2025-01-17T11:31:46.5005512Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5005619Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5005686Z E          ...
2025-01-17T11:31:46.5005771Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5005898Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5006167Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5006235Z E          ...
2025-01-17T11:31:46.5006422Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5006540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5006642Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5006647Z 
2025-01-17T11:31:46.5006730Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5006954Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-17T11:31:46.5006964Z 
2025-01-17T11:31:46.5007084Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5007213Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5007303Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5007432Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5007656Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5007828Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5007941Z err_msg = None
2025-01-17T11:31:46.5007947Z 
2025-01-17T11:31:46.5008116Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5008242Z         if err_msg is None:
2025-01-17T11:31:46.5008382Z             if left.shape != right.shape:
2025-01-17T11:31:46.5008512Z                 raise_assert_detail(
2025-01-17T11:31:46.5008745Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5008825Z                 )
2025-01-17T11:31:46.5008889Z     
2025-01-17T11:31:46.5008964Z             diff = 0
2025-01-17T11:31:46.5009069Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5009155Z                 # count up differences
2025-01-17T11:31:46.5009323Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5009398Z                     diff += 1
2025-01-17T11:31:46.5009466Z     
2025-01-17T11:31:46.5009551Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5009680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5009845Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5009954Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5010022Z E           
2025-01-17T11:31:46.5010125Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5010380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5010643Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5010653Z 
2025-01-17T11:31:46.5010951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5010956Z 
2025-01-17T11:31:46.5011120Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5011124Z 
2025-01-17T11:31:46.5011342Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e976870>
2025-01-17T11:31:46.5011498Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8151c818b0>
2025-01-17T11:31:46.5011572Z attr = 'j_blues'
2025-01-17T11:31:46.5011577Z 
2025-01-17T11:31:46.5011705Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5011912Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5012081Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5012148Z         try:
2025-01-17T11:31:46.5012282Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5012359Z         except KeyError:
2025-01-17T11:31:46.5012489Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5012668Z     
2025-01-17T11:31:46.5012751Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5012840Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5012923Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5013049Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5013133Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5013216Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5013323Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5013397Z             else:
2025-01-17T11:31:46.5013487Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5013593Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5013597Z 
2025-01-17T11:31:46.5013714Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5013817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5013958Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5014022Z     ???
2025-01-17T11:31:46.5014126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5014130Z 
2025-01-17T11:31:46.5014193Z >   ???
2025-01-17T11:31:46.5014317Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5014380Z E   
2025-01-17T11:31:46.5014500Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5014602Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5014676Z E          ...
2025-01-17T11:31:46.5014756Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5014881Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5014985Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5015049Z E          ...
2025-01-17T11:31:46.5015130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5015247Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5015349Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5015353Z 
2025-01-17T11:31:46.5015437Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5015640Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-17T11:31:46.5015645Z 
2025-01-17T11:31:46.5015763Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5015892Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5015988Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5016122Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5016239Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5016329Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5016399Z err_msg = None
2025-01-17T11:31:46.5016403Z 
2025-01-17T11:31:46.5016507Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5016581Z         if err_msg is None:
2025-01-17T11:31:46.5016671Z             if left.shape != right.shape:
2025-01-17T11:31:46.5016748Z                 raise_assert_detail(
2025-01-17T11:31:46.5016885Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5016949Z                 )
2025-01-17T11:31:46.5017137Z     
2025-01-17T11:31:46.5017212Z             diff = 0
2025-01-17T11:31:46.5017317Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5017496Z                 # count up differences
2025-01-17T11:31:46.5017660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5017730Z                     diff += 1
2025-01-17T11:31:46.5017797Z     
2025-01-17T11:31:46.5017878Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5018006Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5018170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5018273Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5018342Z E           
2025-01-17T11:31:46.5018445Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5018702Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5018967Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5018976Z 
2025-01-17T11:31:46.5019269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5019274Z 
2025-01-17T11:31:46.5019436Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5019440Z 
2025-01-17T11:31:46.5019653Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977680>
2025-01-17T11:31:46.5019816Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5019888Z attr = 'lines'
2025-01-17T11:31:46.5019892Z 
2025-01-17T11:31:46.5020022Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5020129Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5020211Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5020276Z         try:
2025-01-17T11:31:46.5020410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5020513Z         except KeyError:
2025-01-17T11:31:46.5020643Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5020711Z     
2025-01-17T11:31:46.5020790Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5020879Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5020958Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5021084Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5021169Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5021254Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5021362Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5021433Z             else:
2025-01-17T11:31:46.5021522Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5021627Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5021632Z 
2025-01-17T11:31:46.5021748Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5021858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5021996Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5022064Z     ???
2025-01-17T11:31:46.5022166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5022170Z 
2025-01-17T11:31:46.5022237Z >   ???
2025-01-17T11:31:46.5022356Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5022509Z E   
2025-01-17T11:31:46.5022717Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5022958Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5023027Z E          ...
2025-01-17T11:31:46.5023107Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5023231Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5023335Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5023402Z E          ...
2025-01-17T11:31:46.5023479Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5023598Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5023694Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5023699Z 
2025-01-17T11:31:46.5023781Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5024019Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-17T11:31:46.5024029Z 
2025-01-17T11:31:46.5024242Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977740>
2025-01-17T11:31:46.5024402Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5024570Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5024579Z 
2025-01-17T11:31:46.5024806Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5024989Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5025115Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5025229Z         try:
2025-01-17T11:31:46.5025452Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5025581Z         except KeyError:
2025-01-17T11:31:46.5025756Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5025827Z     
2025-01-17T11:31:46.5025908Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5025998Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5026084Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5026208Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5026295Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5026377Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5026484Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5026488Z 
2025-01-17T11:31:46.5026603Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5026710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5026714Z 
2025-01-17T11:31:46.5026839Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5026922Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5027024Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5027102Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5027236Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5027323Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5027420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5027496Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5027563Z err_msg = None
2025-01-17T11:31:46.5027567Z 
2025-01-17T11:31:46.5027671Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5027744Z         if err_msg is None:
2025-01-17T11:31:46.5027833Z             if left.shape != right.shape:
2025-01-17T11:31:46.5027912Z                 raise_assert_detail(
2025-01-17T11:31:46.5028054Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5028118Z                 )
2025-01-17T11:31:46.5028184Z     
2025-01-17T11:31:46.5028249Z             diff = 0
2025-01-17T11:31:46.5028353Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5028567Z                 # count up differences
2025-01-17T11:31:46.5028727Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5028877Z                     diff += 1
2025-01-17T11:31:46.5028940Z     
2025-01-17T11:31:46.5029022Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5029148Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5029313Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5029407Z E           AssertionError: Series are different
2025-01-17T11:31:46.5029476Z E           
2025-01-17T11:31:46.5029569Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5029937Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5030270Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5030599Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5030608Z 
2025-01-17T11:31:46.5030906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5031146Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-17T11:31:46.5031151Z 
2025-01-17T11:31:46.5031365Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977800>
2025-01-17T11:31:46.5031520Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5031606Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5031610Z 
2025-01-17T11:31:46.5031739Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5031850Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5031927Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5031995Z         try:
2025-01-17T11:31:46.5032126Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5032204Z         except KeyError:
2025-01-17T11:31:46.5032335Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5032405Z     
2025-01-17T11:31:46.5032483Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5032687Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5032773Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5032897Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5032977Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5033059Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5033161Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5033166Z 
2025-01-17T11:31:46.5033279Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5033388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5033392Z 
2025-01-17T11:31:46.5033516Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5033718Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5033818Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5033998Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5034130Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5034209Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5034306Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5034380Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5034447Z err_msg = None
2025-01-17T11:31:46.5034451Z 
2025-01-17T11:31:46.5034552Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5034625Z         if err_msg is None:
2025-01-17T11:31:46.5034712Z             if left.shape != right.shape:
2025-01-17T11:31:46.5034791Z                 raise_assert_detail(
2025-01-17T11:31:46.5034928Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5034998Z                 )
2025-01-17T11:31:46.5035063Z     
2025-01-17T11:31:46.5035135Z             diff = 0
2025-01-17T11:31:46.5035237Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5035319Z                 # count up differences
2025-01-17T11:31:46.5035481Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5035554Z                     diff += 1
2025-01-17T11:31:46.5035617Z     
2025-01-17T11:31:46.5035699Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5035825Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5035992Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5036087Z E           AssertionError: Series are different
2025-01-17T11:31:46.5036163Z E           
2025-01-17T11:31:46.5036258Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5036632Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5037007Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5037377Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5037391Z 
2025-01-17T11:31:46.5037692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5037886Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-17T11:31:46.5037890Z 
2025-01-17T11:31:46.5038013Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5038133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5038231Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5038356Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5038568Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5038729Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5038803Z err_msg = None
2025-01-17T11:31:46.5038807Z 
2025-01-17T11:31:46.5038908Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5038986Z         if err_msg is None:
2025-01-17T11:31:46.5039073Z             if left.shape != right.shape:
2025-01-17T11:31:46.5039155Z                 raise_assert_detail(
2025-01-17T11:31:46.5039290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5039363Z                 )
2025-01-17T11:31:46.5039427Z     
2025-01-17T11:31:46.5039495Z             diff = 0
2025-01-17T11:31:46.5039604Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5039688Z                 # count up differences
2025-01-17T11:31:46.5039860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5039936Z                     diff += 1
2025-01-17T11:31:46.5040010Z     
2025-01-17T11:31:46.5040090Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5040219Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5040381Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5040493Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5040560Z E           
2025-01-17T11:31:46.5040676Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5040930Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5041197Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5041206Z 
2025-01-17T11:31:46.5041497Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5041502Z 
2025-01-17T11:31:46.5041668Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5041672Z 
2025-01-17T11:31:46.5041972Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977a40>
2025-01-17T11:31:46.5042324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>, attr = 'nu'
2025-01-17T11:31:46.5042331Z 
2025-01-17T11:31:46.5050108Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5050371Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5050520Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5050637Z         try:
2025-01-17T11:31:46.5050875Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5051005Z         except KeyError:
2025-01-17T11:31:46.5051228Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5051337Z     
2025-01-17T11:31:46.5051471Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5051619Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5051756Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5051972Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5052103Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5052245Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5052419Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5052779Z 
2025-01-17T11:31:46.5053005Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5053326Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5053488Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5053559Z     ???
2025-01-17T11:31:46.5053674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5053678Z 
2025-01-17T11:31:46.5053750Z >   ???
2025-01-17T11:31:46.5053881Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5053943Z E   
2025-01-17T11:31:46.5054070Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5054176Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5054245Z E          ...
2025-01-17T11:31:46.5054335Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5054460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5054584Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5054650Z E          ...
2025-01-17T11:31:46.5054744Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5054865Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5054970Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5054974Z 
2025-01-17T11:31:46.5055059Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5055285Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-17T11:31:46.5055290Z 
2025-01-17T11:31:46.5055417Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5055549Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5055645Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5055776Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5055903Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5055998Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5056068Z err_msg = None
2025-01-17T11:31:46.5056073Z 
2025-01-17T11:31:46.5056185Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5056262Z         if err_msg is None:
2025-01-17T11:31:46.5056356Z             if left.shape != right.shape:
2025-01-17T11:31:46.5056436Z                 raise_assert_detail(
2025-01-17T11:31:46.5056583Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5056647Z                 )
2025-01-17T11:31:46.5056716Z     
2025-01-17T11:31:46.5056782Z             diff = 0
2025-01-17T11:31:46.5056891Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5056978Z                 # count up differences
2025-01-17T11:31:46.5057147Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5057228Z                     diff += 1
2025-01-17T11:31:46.5057291Z     
2025-01-17T11:31:46.5057377Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5057509Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5057690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5057798Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5057868Z E           
2025-01-17T11:31:46.5057971Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5058231Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5058597Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5058675Z 
2025-01-17T11:31:46.5058999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5059005Z 
2025-01-17T11:31:46.5059168Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5059177Z 
2025-01-17T11:31:46.5059392Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977b00>
2025-01-17T11:31:46.5059556Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5059639Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5059643Z 
2025-01-17T11:31:46.5059779Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5059949Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5060097Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5060217Z         try:
2025-01-17T11:31:46.5060440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5060568Z         except KeyError:
2025-01-17T11:31:46.5060786Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5060894Z     
2025-01-17T11:31:46.5061026Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5061178Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5061265Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5061396Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5061475Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5061558Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5061664Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5061675Z 
2025-01-17T11:31:46.5061798Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5061912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5062054Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5062119Z     ???
2025-01-17T11:31:46.5062224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5062228Z 
2025-01-17T11:31:46.5062294Z >   ???
2025-01-17T11:31:46.5062417Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5062479Z E   
2025-01-17T11:31:46.5062786Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5062902Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5062970Z E          ...
2025-01-17T11:31:46.5063055Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5063179Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5063291Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5063362Z E          ...
2025-01-17T11:31:46.5063442Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5063555Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5063654Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5063659Z 
2025-01-17T11:31:46.5063741Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5063941Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-17T11:31:46.5063946Z 
2025-01-17T11:31:46.5064065Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5064189Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5064280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5064549Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5064666Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5064858Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5064927Z err_msg = None
2025-01-17T11:31:46.5064931Z 
2025-01-17T11:31:46.5065040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5065114Z         if err_msg is None:
2025-01-17T11:31:46.5065202Z             if left.shape != right.shape:
2025-01-17T11:31:46.5065282Z                 raise_assert_detail(
2025-01-17T11:31:46.5065419Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5065491Z                 )
2025-01-17T11:31:46.5065553Z     
2025-01-17T11:31:46.5065625Z             diff = 0
2025-01-17T11:31:46.5065730Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5065814Z                 # count up differences
2025-01-17T11:31:46.5065984Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5066064Z                     diff += 1
2025-01-17T11:31:46.5066126Z     
2025-01-17T11:31:46.5066209Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5066335Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5066501Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5066605Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5066671Z E           
2025-01-17T11:31:46.5066773Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5067028Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5067290Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5067300Z 
2025-01-17T11:31:46.5067598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5067603Z 
2025-01-17T11:31:46.5067764Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5067768Z 
2025-01-17T11:31:46.5067992Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e977bc0>
2025-01-17T11:31:46.5068183Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>, attr = 'f_lu'
2025-01-17T11:31:46.5068187Z 
2025-01-17T11:31:46.5068322Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5068430Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5068517Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5068584Z         try:
2025-01-17T11:31:46.5068723Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5068798Z         except KeyError:
2025-01-17T11:31:46.5068932Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5068996Z     
2025-01-17T11:31:46.5069080Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5069166Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5069249Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5069378Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5069456Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5069544Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5069650Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5069743Z 
2025-01-17T11:31:46.5069863Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5070048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5070193Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5070259Z     ???
2025-01-17T11:31:46.5070364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5070368Z 
2025-01-17T11:31:46.5070430Z >   ???
2025-01-17T11:31:46.5070553Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5070618Z E   
2025-01-17T11:31:46.5070739Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5070840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5070909Z E          ...
2025-01-17T11:31:46.5070993Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5071116Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5071224Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5071304Z E          ...
2025-01-17T11:31:46.5071382Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5071501Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5071598Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5071602Z 
2025-01-17T11:31:46.5071688Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5071897Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-17T11:31:46.5071902Z 
2025-01-17T11:31:46.5072026Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5072152Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5072248Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5072371Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5072497Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5072777Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5072855Z err_msg = None
2025-01-17T11:31:46.5072860Z 
2025-01-17T11:31:46.5072967Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5073041Z         if err_msg is None:
2025-01-17T11:31:46.5073131Z             if left.shape != right.shape:
2025-01-17T11:31:46.5073207Z                 raise_assert_detail(
2025-01-17T11:31:46.5073346Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5073410Z                 )
2025-01-17T11:31:46.5073475Z     
2025-01-17T11:31:46.5073539Z             diff = 0
2025-01-17T11:31:46.5073645Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5073723Z                 # count up differences
2025-01-17T11:31:46.5073897Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5073972Z                     diff += 1
2025-01-17T11:31:46.5074037Z     
2025-01-17T11:31:46.5074118Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5074252Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5074412Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5074520Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5074586Z E           
2025-01-17T11:31:46.5074691Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5074948Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5075355Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5075481Z 
2025-01-17T11:31:46.5075779Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5075783Z 
2025-01-17T11:31:46.5075950Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5075954Z 
2025-01-17T11:31:46.5076166Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e848380>
2025-01-17T11:31:46.5076321Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5076394Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5076403Z 
2025-01-17T11:31:46.5076535Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5076641Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5076725Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5076790Z         try:
2025-01-17T11:31:46.5076924Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5076997Z         except KeyError:
2025-01-17T11:31:46.5077129Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5077192Z     
2025-01-17T11:31:46.5077274Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5077358Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5077473Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5077706Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5077844Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5077992Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5078162Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5078286Z             else:
2025-01-17T11:31:46.5078429Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5078605Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5078612Z 
2025-01-17T11:31:46.5078814Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5078936Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5079074Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5079145Z     ???
2025-01-17T11:31:46.5079246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5079250Z 
2025-01-17T11:31:46.5079318Z >   ???
2025-01-17T11:31:46.5079438Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5079505Z E   
2025-01-17T11:31:46.5079624Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5079729Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5079799Z E          ...
2025-01-17T11:31:46.5079885Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5080008Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5080116Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5080181Z E          ...
2025-01-17T11:31:46.5080259Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5080383Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5080479Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5080484Z 
2025-01-17T11:31:46.5080567Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5080762Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-17T11:31:46.5080766Z 
2025-01-17T11:31:46.5080888Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5081109Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5081281Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5081405Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5081524Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5081611Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5081682Z err_msg = None
2025-01-17T11:31:46.5081686Z 
2025-01-17T11:31:46.5081786Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5081862Z         if err_msg is None:
2025-01-17T11:31:46.5081949Z             if left.shape != right.shape:
2025-01-17T11:31:46.5082029Z                 raise_assert_detail(
2025-01-17T11:31:46.5082163Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5082230Z                 )
2025-01-17T11:31:46.5082299Z     
2025-01-17T11:31:46.5082368Z             diff = 0
2025-01-17T11:31:46.5082468Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5082724Z                 # count up differences
2025-01-17T11:31:46.5082919Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5082995Z                     diff += 1
2025-01-17T11:31:46.5083059Z     
2025-01-17T11:31:46.5083140Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5083266Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5083426Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5083533Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5083598Z E           
2025-01-17T11:31:46.5083702Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5083954Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5084222Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5084227Z 
2025-01-17T11:31:46.5084524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5084529Z 
2025-01-17T11:31:46.5084692Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5084697Z 
2025-01-17T11:31:46.5084915Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8485c0>
2025-01-17T11:31:46.5085073Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8152ca4f20>
2025-01-17T11:31:46.5085148Z attr = 'j_blues'
2025-01-17T11:31:46.5085152Z 
2025-01-17T11:31:46.5085281Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5085391Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5085466Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5085532Z         try:
2025-01-17T11:31:46.5085663Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5085742Z         except KeyError:
2025-01-17T11:31:46.5085870Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5085932Z     
2025-01-17T11:31:46.5086015Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5086101Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5086185Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5086326Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5086538Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5086721Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5086831Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5086896Z             else:
2025-01-17T11:31:46.5086986Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5087087Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5087091Z 
2025-01-17T11:31:46.5087210Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5087318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5087457Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5087525Z     ???
2025-01-17T11:31:46.5087625Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5087630Z 
2025-01-17T11:31:46.5087703Z >   ???
2025-01-17T11:31:46.5087827Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5087890Z E   
2025-01-17T11:31:46.5088011Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5088124Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5088190Z E          ...
2025-01-17T11:31:46.5088272Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5088393Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5088503Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5088567Z E          ...
2025-01-17T11:31:46.5088647Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5088763Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5088862Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5088866Z 
2025-01-17T11:31:46.5088947Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5089147Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-17T11:31:46.5089160Z 
2025-01-17T11:31:46.5089279Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5089410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5089499Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5089625Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5089743Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5089830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5089897Z err_msg = None
2025-01-17T11:31:46.5089902Z 
2025-01-17T11:31:46.5090007Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5090082Z         if err_msg is None:
2025-01-17T11:31:46.5090176Z             if left.shape != right.shape:
2025-01-17T11:31:46.5090258Z                 raise_assert_detail(
2025-01-17T11:31:46.5090394Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5090468Z                 )
2025-01-17T11:31:46.5090530Z     
2025-01-17T11:31:46.5090597Z             diff = 0
2025-01-17T11:31:46.5090703Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5090787Z                 # count up differences
2025-01-17T11:31:46.5090953Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5091025Z                     diff += 1
2025-01-17T11:31:46.5091087Z     
2025-01-17T11:31:46.5091171Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5091297Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5091462Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5091566Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5091722Z E           
2025-01-17T11:31:46.5091826Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5092159Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5092413Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5092419Z 
2025-01-17T11:31:46.5092826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5092837Z 
2025-01-17T11:31:46.5093000Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5093015Z 
2025-01-17T11:31:46.5093230Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849340>
2025-01-17T11:31:46.5093386Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5093458Z attr = 'lines'
2025-01-17T11:31:46.5093462Z 
2025-01-17T11:31:46.5093589Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5093701Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5093776Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5093844Z         try:
2025-01-17T11:31:46.5093975Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5094050Z         except KeyError:
2025-01-17T11:31:46.5094180Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5094245Z     
2025-01-17T11:31:46.5094329Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5094495Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5094650Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5094864Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5094992Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5095128Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5095300Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5095408Z             else:
2025-01-17T11:31:46.5095555Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5095705Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5095710Z 
2025-01-17T11:31:46.5095836Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5095949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5096091Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5096165Z     ???
2025-01-17T11:31:46.5096274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5096283Z 
2025-01-17T11:31:46.5096346Z >   ???
2025-01-17T11:31:46.5096469Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5096534Z E   
2025-01-17T11:31:46.5096663Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5096766Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5096836Z E          ...
2025-01-17T11:31:46.5096919Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5097043Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5097149Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5097217Z E          ...
2025-01-17T11:31:46.5097296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5097411Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5097664Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5097669Z 
2025-01-17T11:31:46.5097851Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5098109Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-17T11:31:46.5098115Z 
2025-01-17T11:31:46.5098332Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849400>
2025-01-17T11:31:46.5098486Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5098568Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5098574Z 
2025-01-17T11:31:46.5098702Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5098808Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5098888Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5098953Z         try:
2025-01-17T11:31:46.5099087Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5099165Z         except KeyError:
2025-01-17T11:31:46.5099297Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5099367Z     
2025-01-17T11:31:46.5099453Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5099541Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5099625Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5099750Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5099833Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5099913Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5100017Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5100021Z 
2025-01-17T11:31:46.5100137Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5100246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5100251Z 
2025-01-17T11:31:46.5100381Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5100467Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5100571Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5100650Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5100780Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5100858Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5100954Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5101025Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5101097Z err_msg = None
2025-01-17T11:31:46.5101101Z 
2025-01-17T11:31:46.5101200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5101275Z         if err_msg is None:
2025-01-17T11:31:46.5101361Z             if left.shape != right.shape:
2025-01-17T11:31:46.5101443Z                 raise_assert_detail(
2025-01-17T11:31:46.5101576Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5101650Z                 )
2025-01-17T11:31:46.5101716Z     
2025-01-17T11:31:46.5101784Z             diff = 0
2025-01-17T11:31:46.5101887Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5101968Z                 # count up differences
2025-01-17T11:31:46.5102129Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5102202Z                     diff += 1
2025-01-17T11:31:46.5102264Z     
2025-01-17T11:31:46.5102343Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5102470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5102748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5102846Z E           AssertionError: Series are different
2025-01-17T11:31:46.5102912Z E           
2025-01-17T11:31:46.5103008Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5103495Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5103924Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5104252Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5104268Z 
2025-01-17T11:31:46.5104568Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5104815Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-17T11:31:46.5104820Z 
2025-01-17T11:31:46.5105034Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8494c0>
2025-01-17T11:31:46.5105193Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5105275Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5105280Z 
2025-01-17T11:31:46.5105411Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5105517Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5105599Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5105664Z         try:
2025-01-17T11:31:46.5105803Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5105875Z         except KeyError:
2025-01-17T11:31:46.5106004Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5106066Z     
2025-01-17T11:31:46.5106148Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5106231Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5106313Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5106437Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5106516Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5106597Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5106701Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5106704Z 
2025-01-17T11:31:46.5106820Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5106935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5106945Z 
2025-01-17T11:31:46.5107074Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5107154Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5107255Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5107331Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5107460Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5107534Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5107633Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5107705Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5107777Z err_msg = None
2025-01-17T11:31:46.5107781Z 
2025-01-17T11:31:46.5107878Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5108048Z         if err_msg is None:
2025-01-17T11:31:46.5108132Z             if left.shape != right.shape:
2025-01-17T11:31:46.5108284Z                 raise_assert_detail(
2025-01-17T11:31:46.5108416Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5108482Z                 )
2025-01-17T11:31:46.5108543Z     
2025-01-17T11:31:46.5108611Z             diff = 0
2025-01-17T11:31:46.5108713Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5108793Z                 # count up differences
2025-01-17T11:31:46.5108952Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5109024Z                     diff += 1
2025-01-17T11:31:46.5109085Z     
2025-01-17T11:31:46.5109165Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5109290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5109454Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5109550Z E           AssertionError: Series are different
2025-01-17T11:31:46.5109619Z E           
2025-01-17T11:31:46.5109715Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5110078Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5110444Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5110821Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5110828Z 
2025-01-17T11:31:46.5111120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5111322Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-17T11:31:46.5111327Z 
2025-01-17T11:31:46.5111447Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5111574Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5111669Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5111804Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5112018Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5112181Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5112297Z err_msg = None
2025-01-17T11:31:46.5112304Z 
2025-01-17T11:31:46.5112474Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5112721Z         if err_msg is None:
2025-01-17T11:31:46.5112871Z             if left.shape != right.shape:
2025-01-17T11:31:46.5112997Z                 raise_assert_detail(
2025-01-17T11:31:46.5113231Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5113446Z                 )
2025-01-17T11:31:46.5113512Z     
2025-01-17T11:31:46.5113583Z             diff = 0
2025-01-17T11:31:46.5113823Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5113903Z                 # count up differences
2025-01-17T11:31:46.5114066Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5114135Z                     diff += 1
2025-01-17T11:31:46.5114200Z     
2025-01-17T11:31:46.5114280Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5114406Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5114567Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5114670Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5114737Z E           
2025-01-17T11:31:46.5114840Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5115095Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5115359Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5115367Z 
2025-01-17T11:31:46.5115658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5115662Z 
2025-01-17T11:31:46.5115823Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5115828Z 
2025-01-17T11:31:46.5116043Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849700>
2025-01-17T11:31:46.5116233Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>, attr = 'nu'
2025-01-17T11:31:46.5116240Z 
2025-01-17T11:31:46.5116368Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5116477Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5116556Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5116623Z         try:
2025-01-17T11:31:46.5116758Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5116833Z         except KeyError:
2025-01-17T11:31:46.5116965Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5117031Z     
2025-01-17T11:31:46.5117110Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5117195Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5117278Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5117405Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5117492Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5117579Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5117686Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5117691Z 
2025-01-17T11:31:46.5117806Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5117915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5118056Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5118123Z     ???
2025-01-17T11:31:46.5118225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5118229Z 
2025-01-17T11:31:46.5118295Z >   ???
2025-01-17T11:31:46.5118414Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5118481Z E   
2025-01-17T11:31:46.5118599Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5118795Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5118862Z E          ...
2025-01-17T11:31:46.5119020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5119140Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5119250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5119315Z E          ...
2025-01-17T11:31:46.5119395Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5119513Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5119610Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5119614Z 
2025-01-17T11:31:46.5119698Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5119916Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-17T11:31:46.5119921Z 
2025-01-17T11:31:46.5120045Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5120172Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5120270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5120394Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5120547Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5120633Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5120706Z err_msg = None
2025-01-17T11:31:46.5120709Z 
2025-01-17T11:31:46.5120811Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5120888Z         if err_msg is None:
2025-01-17T11:31:46.5120974Z             if left.shape != right.shape:
2025-01-17T11:31:46.5121056Z                 raise_assert_detail(
2025-01-17T11:31:46.5121193Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5121268Z                 )
2025-01-17T11:31:46.5121330Z     
2025-01-17T11:31:46.5121399Z             diff = 0
2025-01-17T11:31:46.5121506Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5121588Z                 # count up differences
2025-01-17T11:31:46.5121749Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5121821Z                     diff += 1
2025-01-17T11:31:46.5121883Z     
2025-01-17T11:31:46.5121961Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5122090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5122248Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5122354Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5122417Z E           
2025-01-17T11:31:46.5122521Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5122977Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5123252Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5123258Z 
2025-01-17T11:31:46.5123559Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5123563Z 
2025-01-17T11:31:46.5123722Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5123726Z 
2025-01-17T11:31:46.5124068Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8497c0>
2025-01-17T11:31:46.5124226Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5124408Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5124413Z 
2025-01-17T11:31:46.5124542Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5124650Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5124726Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5124792Z         try:
2025-01-17T11:31:46.5124923Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5124998Z         except KeyError:
2025-01-17T11:31:46.5125127Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5125190Z     
2025-01-17T11:31:46.5125272Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5125357Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5125440Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5125568Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5125649Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5125735Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5125838Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5125842Z 
2025-01-17T11:31:46.5125957Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5126063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5126198Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5126264Z     ???
2025-01-17T11:31:46.5126365Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5126369Z 
2025-01-17T11:31:46.5126435Z >   ???
2025-01-17T11:31:46.5126553Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5126619Z E   
2025-01-17T11:31:46.5126738Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5126850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5126914Z E          ...
2025-01-17T11:31:46.5127001Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5127119Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5127222Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5127288Z E          ...
2025-01-17T11:31:46.5127366Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5127485Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5127589Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5127594Z 
2025-01-17T11:31:46.5127676Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5127975Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-17T11:31:46.5127984Z 
2025-01-17T11:31:46.5128202Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5128411Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5128570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5128776Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5128984Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5129078Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5129151Z err_msg = None
2025-01-17T11:31:46.5129155Z 
2025-01-17T11:31:46.5129258Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5129336Z         if err_msg is None:
2025-01-17T11:31:46.5129422Z             if left.shape != right.shape:
2025-01-17T11:31:46.5129503Z                 raise_assert_detail(
2025-01-17T11:31:46.5129638Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5129823Z                 )
2025-01-17T11:31:46.5129886Z     
2025-01-17T11:31:46.5129955Z             diff = 0
2025-01-17T11:31:46.5130134Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5130217Z                 # count up differences
2025-01-17T11:31:46.5130378Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5130452Z                     diff += 1
2025-01-17T11:31:46.5130515Z     
2025-01-17T11:31:46.5130594Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5130724Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5130883Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5130989Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5131054Z E           
2025-01-17T11:31:46.5131161Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5131418Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5131680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5131685Z 
2025-01-17T11:31:46.5131982Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5131987Z 
2025-01-17T11:31:46.5132144Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5132148Z 
2025-01-17T11:31:46.5132369Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e849880>
2025-01-17T11:31:46.5132667Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>, attr = 'f_lu'
2025-01-17T11:31:46.5132676Z 
2025-01-17T11:31:46.5132811Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5132919Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5132999Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5133063Z         try:
2025-01-17T11:31:46.5133194Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5133267Z         except KeyError:
2025-01-17T11:31:46.5133394Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5133459Z     
2025-01-17T11:31:46.5133539Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5133626Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5133706Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5133839Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5133917Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5134006Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5134109Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5134113Z 
2025-01-17T11:31:46.5134231Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5134336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5134474Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5134537Z     ???
2025-01-17T11:31:46.5134641Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5134645Z 
2025-01-17T11:31:46.5134707Z >   ???
2025-01-17T11:31:46.5134826Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5134887Z E   
2025-01-17T11:31:46.5135009Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5135238Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5135306Z E          ...
2025-01-17T11:31:46.5135505Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5135623Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5135729Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5135793Z E          ...
2025-01-17T11:31:46.5135874Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5135990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5136088Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5136092Z 
2025-01-17T11:31:46.5136173Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5136387Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-17T11:31:46.5136391Z 
2025-01-17T11:31:46.5136510Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5136640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5136733Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5136859Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5136974Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5137062Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5137130Z err_msg = None
2025-01-17T11:31:46.5137134Z 
2025-01-17T11:31:46.5137239Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5137313Z         if err_msg is None:
2025-01-17T11:31:46.5137402Z             if left.shape != right.shape:
2025-01-17T11:31:46.5137478Z                 raise_assert_detail(
2025-01-17T11:31:46.5137616Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5137693Z                 )
2025-01-17T11:31:46.5137760Z     
2025-01-17T11:31:46.5137826Z             diff = 0
2025-01-17T11:31:46.5137937Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5138017Z                 # count up differences
2025-01-17T11:31:46.5138182Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5138256Z                     diff += 1
2025-01-17T11:31:46.5138319Z     
2025-01-17T11:31:46.5138403Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5138533Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5138695Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5138797Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5138867Z E           
2025-01-17T11:31:46.5138975Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5139237Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5139494Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5139502Z 
2025-01-17T11:31:46.5139791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5139796Z 
2025-01-17T11:31:46.5139961Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5139965Z 
2025-01-17T11:31:46.5140267Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84a000>
2025-01-17T11:31:46.5140431Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5140577Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5140581Z 
2025-01-17T11:31:46.5140713Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5140817Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5140899Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5140964Z         try:
2025-01-17T11:31:46.5141098Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5141169Z         except KeyError:
2025-01-17T11:31:46.5141297Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5141364Z     
2025-01-17T11:31:46.5141442Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5141530Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5141610Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5141741Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5141819Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5141908Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5142009Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5142076Z             else:
2025-01-17T11:31:46.5142164Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5142268Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5142272Z 
2025-01-17T11:31:46.5142389Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5142497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5142728Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5142798Z     ???
2025-01-17T11:31:46.5142900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5142909Z 
2025-01-17T11:31:46.5142974Z >   ???
2025-01-17T11:31:46.5143092Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5143165Z E   
2025-01-17T11:31:46.5143284Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5143385Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5143455Z E          ...
2025-01-17T11:31:46.5143535Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5143660Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5143763Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5143830Z E          ...
2025-01-17T11:31:46.5143906Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5144024Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5144119Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5144124Z 
2025-01-17T11:31:46.5144205Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5144419Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-17T11:31:46.5144428Z 
2025-01-17T11:31:46.5144550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5144669Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5144757Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5144880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5144998Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5145085Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5145156Z err_msg = None
2025-01-17T11:31:46.5145160Z 
2025-01-17T11:31:46.5145260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5145336Z         if err_msg is None:
2025-01-17T11:31:46.5145609Z             if left.shape != right.shape:
2025-01-17T11:31:46.5145688Z                 raise_assert_detail(
2025-01-17T11:31:46.5146013Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5146139Z                 )
2025-01-17T11:31:46.5146248Z     
2025-01-17T11:31:46.5146370Z             diff = 0
2025-01-17T11:31:46.5146540Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5146674Z                 # count up differences
2025-01-17T11:31:46.5146953Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5147069Z                     diff += 1
2025-01-17T11:31:46.5147178Z     
2025-01-17T11:31:46.5147312Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5147526Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5147802Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5147987Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5148097Z E           
2025-01-17T11:31:46.5148280Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5148730Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5149198Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5149206Z 
2025-01-17T11:31:46.5149506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5149520Z 
2025-01-17T11:31:46.5149684Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5149692Z 
2025-01-17T11:31:46.5149910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84a0c0>
2025-01-17T11:31:46.5150064Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5150143Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5150148Z 
2025-01-17T11:31:46.5150275Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5150380Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5150459Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5150525Z         try:
2025-01-17T11:31:46.5150658Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5150731Z         except KeyError:
2025-01-17T11:31:46.5150862Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5150929Z     
2025-01-17T11:31:46.5151013Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5151097Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5151182Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5151305Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5151387Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5151466Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5151572Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5151638Z             else:
2025-01-17T11:31:46.5151727Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5151826Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5151830Z 
2025-01-17T11:31:46.5151947Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5152050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5152289Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5152352Z     ???
2025-01-17T11:31:46.5152455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5152689Z 
2025-01-17T11:31:46.5152793Z >   ???
2025-01-17T11:31:46.5152919Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5152989Z E   
2025-01-17T11:31:46.5153109Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5153216Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5153281Z E          ...
2025-01-17T11:31:46.5153363Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5153481Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5153588Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5153652Z E          ...
2025-01-17T11:31:46.5153735Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5153856Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5153957Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5153969Z 
2025-01-17T11:31:46.5154052Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5154254Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-17T11:31:46.5154259Z 
2025-01-17T11:31:46.5154377Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5154502Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5154589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5154715Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5154831Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5154916Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5154990Z err_msg = None
2025-01-17T11:31:46.5154994Z 
2025-01-17T11:31:46.5155098Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5155175Z         if err_msg is None:
2025-01-17T11:31:46.5155264Z             if left.shape != right.shape:
2025-01-17T11:31:46.5155341Z                 raise_assert_detail(
2025-01-17T11:31:46.5155476Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5155547Z                 )
2025-01-17T11:31:46.5155610Z     
2025-01-17T11:31:46.5155678Z             diff = 0
2025-01-17T11:31:46.5155780Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5155863Z                 # count up differences
2025-01-17T11:31:46.5156024Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5156097Z                     diff += 1
2025-01-17T11:31:46.5156159Z     
2025-01-17T11:31:46.5156241Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5156374Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5156541Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5156643Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5156709Z E           
2025-01-17T11:31:46.5156810Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5157061Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5157317Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5157565Z 
2025-01-17T11:31:46.5157873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5157878Z 
2025-01-17T11:31:46.5158037Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5158041Z 
2025-01-17T11:31:46.5158255Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84a240>
2025-01-17T11:31:46.5158408Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8178282ea0>
2025-01-17T11:31:46.5158479Z attr = 'j_blues'
2025-01-17T11:31:46.5158483Z 
2025-01-17T11:31:46.5158610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5158719Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5158794Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5158862Z         try:
2025-01-17T11:31:46.5159000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5159076Z         except KeyError:
2025-01-17T11:31:46.5159210Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5159277Z     
2025-01-17T11:31:46.5159356Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5159443Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5159521Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5159647Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5159725Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5159806Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5159912Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5159978Z             else:
2025-01-17T11:31:46.5160069Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5160169Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5160178Z 
2025-01-17T11:31:46.5160298Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5160403Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5160548Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5160613Z     ???
2025-01-17T11:31:46.5160719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5160723Z 
2025-01-17T11:31:46.5160785Z >   ???
2025-01-17T11:31:46.5160905Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5160968Z E   
2025-01-17T11:31:46.5161090Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5161194Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5161263Z E          ...
2025-01-17T11:31:46.5161343Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5161466Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5161576Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5161642Z E          ...
2025-01-17T11:31:46.5161728Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5161849Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5161946Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5161950Z 
2025-01-17T11:31:46.5162033Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5162230Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-17T11:31:46.5162234Z 
2025-01-17T11:31:46.5162356Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5162477Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5162735Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5162886Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5163131Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5163337Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5163468Z err_msg = None
2025-01-17T11:31:46.5163486Z 
2025-01-17T11:31:46.5163667Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5163797Z         if err_msg is None:
2025-01-17T11:31:46.5163951Z             if left.shape != right.shape:
2025-01-17T11:31:46.5164077Z                 raise_assert_detail(
2025-01-17T11:31:46.5164311Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5164420Z                 )
2025-01-17T11:31:46.5164532Z     
2025-01-17T11:31:46.5164644Z             diff = 0
2025-01-17T11:31:46.5164822Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5164956Z                 # count up differences
2025-01-17T11:31:46.5165247Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5165363Z                     diff += 1
2025-01-17T11:31:46.5165482Z     
2025-01-17T11:31:46.5165616Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5165831Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5166108Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5166282Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5166392Z E           
2025-01-17T11:31:46.5166565Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5167022Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5167494Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5167509Z 
2025-01-17T11:31:46.5168025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5168032Z 
2025-01-17T11:31:46.5168310Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5168317Z 
2025-01-17T11:31:46.5168681Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84afc0>
2025-01-17T11:31:46.5168913Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5168984Z attr = 'lines'
2025-01-17T11:31:46.5168988Z 
2025-01-17T11:31:46.5169120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5169232Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5169315Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5169381Z         try:
2025-01-17T11:31:46.5169513Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5169586Z         except KeyError:
2025-01-17T11:31:46.5169717Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5169779Z     
2025-01-17T11:31:46.5169861Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5169947Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5170028Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5170154Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5170233Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5170315Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5170417Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5170588Z             else:
2025-01-17T11:31:46.5170675Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5170852Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5170857Z 
2025-01-17T11:31:46.5170975Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5171084Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5171220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5171286Z     ???
2025-01-17T11:31:46.5171388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5171392Z 
2025-01-17T11:31:46.5171464Z >   ???
2025-01-17T11:31:46.5171582Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5171650Z E   
2025-01-17T11:31:46.5171769Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5171877Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5171946Z E          ...
2025-01-17T11:31:46.5172029Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5172155Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5172257Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5172328Z E          ...
2025-01-17T11:31:46.5172407Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5172635Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5172735Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5172739Z 
2025-01-17T11:31:46.5172824Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5173078Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-17T11:31:46.5173083Z 
2025-01-17T11:31:46.5173297Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b080>
2025-01-17T11:31:46.5173450Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5173540Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5173545Z 
2025-01-17T11:31:46.5173680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5173788Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5173864Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5173933Z         try:
2025-01-17T11:31:46.5174063Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5174139Z         except KeyError:
2025-01-17T11:31:46.5174268Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5174332Z     
2025-01-17T11:31:46.5174409Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5174497Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5174577Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5174706Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5174783Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5174871Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5174971Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5174980Z 
2025-01-17T11:31:46.5175101Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5175203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5175207Z 
2025-01-17T11:31:46.5175337Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5175413Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5175513Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5175590Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5175720Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5175800Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5175896Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5176099Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5176271Z err_msg = None
2025-01-17T11:31:46.5176275Z 
2025-01-17T11:31:46.5176378Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5176450Z         if err_msg is None:
2025-01-17T11:31:46.5176537Z             if left.shape != right.shape:
2025-01-17T11:31:46.5176613Z                 raise_assert_detail(
2025-01-17T11:31:46.5176751Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5176816Z                 )
2025-01-17T11:31:46.5176881Z     
2025-01-17T11:31:46.5176948Z             diff = 0
2025-01-17T11:31:46.5177054Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5177132Z                 # count up differences
2025-01-17T11:31:46.5177296Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5177368Z                     diff += 1
2025-01-17T11:31:46.5177440Z     
2025-01-17T11:31:46.5177518Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5177650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5177813Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5177908Z E           AssertionError: Series are different
2025-01-17T11:31:46.5177976Z E           
2025-01-17T11:31:46.5178069Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5178436Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5178757Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5179090Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5179097Z 
2025-01-17T11:31:46.5179396Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5179648Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-17T11:31:46.5179660Z 
2025-01-17T11:31:46.5179876Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b140>
2025-01-17T11:31:46.5180034Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5180117Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5180121Z 
2025-01-17T11:31:46.5180248Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5180355Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5180433Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5180560Z         try:
2025-01-17T11:31:46.5180795Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5180924Z         except KeyError:
2025-01-17T11:31:46.5181138Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5181247Z     
2025-01-17T11:31:46.5181378Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5181670Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5181794Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5182013Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5182093Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5182176Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5182282Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5182287Z 
2025-01-17T11:31:46.5182403Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5182511Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5182515Z 
2025-01-17T11:31:46.5182738Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5182822Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5182923Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5182998Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5183136Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5183222Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5183318Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5183393Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5183467Z err_msg = None
2025-01-17T11:31:46.5183470Z 
2025-01-17T11:31:46.5183572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5183644Z         if err_msg is None:
2025-01-17T11:31:46.5183732Z             if left.shape != right.shape:
2025-01-17T11:31:46.5183808Z                 raise_assert_detail(
2025-01-17T11:31:46.5183944Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5184008Z                 )
2025-01-17T11:31:46.5184073Z     
2025-01-17T11:31:46.5184139Z             diff = 0
2025-01-17T11:31:46.5184245Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5184330Z                 # count up differences
2025-01-17T11:31:46.5184491Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5184567Z                     diff += 1
2025-01-17T11:31:46.5184633Z     
2025-01-17T11:31:46.5184716Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5184841Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5185002Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5185095Z E           AssertionError: Series are different
2025-01-17T11:31:46.5185164Z E           
2025-01-17T11:31:46.5185257Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5185622Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5186002Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5186374Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5186517Z 
2025-01-17T11:31:46.5186916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5187111Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-17T11:31:46.5187115Z 
2025-01-17T11:31:46.5187237Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5187358Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5187452Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5187574Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5187699Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5187793Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5187866Z err_msg = None
2025-01-17T11:31:46.5187870Z 
2025-01-17T11:31:46.5187972Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5188049Z         if err_msg is None:
2025-01-17T11:31:46.5188134Z             if left.shape != right.shape:
2025-01-17T11:31:46.5188212Z                 raise_assert_detail(
2025-01-17T11:31:46.5188343Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5188410Z                 )
2025-01-17T11:31:46.5188471Z     
2025-01-17T11:31:46.5188540Z             diff = 0
2025-01-17T11:31:46.5188641Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5188723Z                 # count up differences
2025-01-17T11:31:46.5188880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5188949Z                     diff += 1
2025-01-17T11:31:46.5189014Z     
2025-01-17T11:31:46.5189097Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5189225Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5189388Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5189494Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5189562Z E           
2025-01-17T11:31:46.5189670Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5189922Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5190178Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5190191Z 
2025-01-17T11:31:46.5190480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5190484Z 
2025-01-17T11:31:46.5190644Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5190648Z 
2025-01-17T11:31:46.5190866Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b380>
2025-01-17T11:31:46.5191054Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>, attr = 'nu'
2025-01-17T11:31:46.5191059Z 
2025-01-17T11:31:46.5191189Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5191297Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5191377Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5191441Z         try:
2025-01-17T11:31:46.5191661Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5191738Z         except KeyError:
2025-01-17T11:31:46.5191939Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5192003Z     
2025-01-17T11:31:46.5192081Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5192170Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5192251Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5192376Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5192453Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5192634Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5192739Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5192743Z 
2025-01-17T11:31:46.5192865Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5192976Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5193127Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5193194Z     ???
2025-01-17T11:31:46.5193314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5193319Z 
2025-01-17T11:31:46.5193383Z >   ???
2025-01-17T11:31:46.5193502Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5193565Z E   
2025-01-17T11:31:46.5193687Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5193791Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5193859Z E          ...
2025-01-17T11:31:46.5193937Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5194058Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5194164Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5194229Z E          ...
2025-01-17T11:31:46.5194311Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5194431Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5194533Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5194541Z 
2025-01-17T11:31:46.5194622Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5194844Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-17T11:31:46.5194849Z 
2025-01-17T11:31:46.5194968Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5195090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5195177Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5195301Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5195417Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5195512Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5195584Z err_msg = None
2025-01-17T11:31:46.5195589Z 
2025-01-17T11:31:46.5195699Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5195771Z         if err_msg is None:
2025-01-17T11:31:46.5195859Z             if left.shape != right.shape:
2025-01-17T11:31:46.5195934Z                 raise_assert_detail(
2025-01-17T11:31:46.5196069Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5196134Z                 )
2025-01-17T11:31:46.5196200Z     
2025-01-17T11:31:46.5196266Z             diff = 0
2025-01-17T11:31:46.5196374Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5196454Z                 # count up differences
2025-01-17T11:31:46.5196613Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5196689Z                     diff += 1
2025-01-17T11:31:46.5196751Z     
2025-01-17T11:31:46.5196952Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5197079Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5197442Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5197632Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5197748Z E           
2025-01-17T11:31:46.5197920Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5198375Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5198725Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5198747Z 
2025-01-17T11:31:46.5199043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5199048Z 
2025-01-17T11:31:46.5199211Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5199216Z 
2025-01-17T11:31:46.5199426Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b440>
2025-01-17T11:31:46.5199584Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5199657Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5199661Z 
2025-01-17T11:31:46.5199793Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5199901Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5199985Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5200056Z         try:
2025-01-17T11:31:46.5200188Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5200268Z         except KeyError:
2025-01-17T11:31:46.5200399Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5200465Z     
2025-01-17T11:31:46.5200544Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5200630Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5200710Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5200834Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5200912Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5200996Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5201098Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5201102Z 
2025-01-17T11:31:46.5201218Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5201322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5201468Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5201537Z     ???
2025-01-17T11:31:46.5201641Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5201645Z 
2025-01-17T11:31:46.5201706Z >   ???
2025-01-17T11:31:46.5201830Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5201892Z E   
2025-01-17T11:31:46.5202015Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5202118Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5202184Z E          ...
2025-01-17T11:31:46.5202268Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5202388Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5202498Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5202736Z E          ...
2025-01-17T11:31:46.5202841Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5203101Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5203305Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5203310Z 
2025-01-17T11:31:46.5203391Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5203592Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-17T11:31:46.5203596Z 
2025-01-17T11:31:46.5203714Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5203839Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5203927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5204053Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5204168Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5204265Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5204334Z err_msg = None
2025-01-17T11:31:46.5204343Z 
2025-01-17T11:31:46.5204448Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5204522Z         if err_msg is None:
2025-01-17T11:31:46.5204610Z             if left.shape != right.shape:
2025-01-17T11:31:46.5204688Z                 raise_assert_detail(
2025-01-17T11:31:46.5204825Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5204890Z                 )
2025-01-17T11:31:46.5204956Z     
2025-01-17T11:31:46.5205023Z             diff = 0
2025-01-17T11:31:46.5205132Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5205213Z                 # count up differences
2025-01-17T11:31:46.5205373Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5205448Z                     diff += 1
2025-01-17T11:31:46.5205516Z     
2025-01-17T11:31:46.5205599Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5205726Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5205895Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5206001Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5206069Z E           
2025-01-17T11:31:46.5206170Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5206423Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5206679Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5206699Z 
2025-01-17T11:31:46.5206990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5206994Z 
2025-01-17T11:31:46.5207161Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5207165Z 
2025-01-17T11:31:46.5207380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84b500>
2025-01-17T11:31:46.5207571Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>, attr = 'f_lu'
2025-01-17T11:31:46.5207576Z 
2025-01-17T11:31:46.5207703Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5207810Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5207886Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5208049Z         try:
2025-01-17T11:31:46.5208181Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5208326Z         except KeyError:
2025-01-17T11:31:46.5208459Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5208521Z     
2025-01-17T11:31:46.5208606Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5208690Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5208772Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5208895Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5208974Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5209054Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5209156Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5209161Z 
2025-01-17T11:31:46.5209275Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5209383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5209524Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5209590Z     ???
2025-01-17T11:31:46.5209694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5209698Z 
2025-01-17T11:31:46.5209764Z >   ???
2025-01-17T11:31:46.5209881Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5209947Z E   
2025-01-17T11:31:46.5210064Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5210169Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5210234Z E          ...
2025-01-17T11:31:46.5210313Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5210436Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5210540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5210609Z E          ...
2025-01-17T11:31:46.5210685Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5210807Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5210909Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5210913Z 
2025-01-17T11:31:46.5210998Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5211216Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-17T11:31:46.5211220Z 
2025-01-17T11:31:46.5211344Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5211466Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5211558Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5211684Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5211803Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5211894Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5211968Z err_msg = None
2025-01-17T11:31:46.5211976Z 
2025-01-17T11:31:46.5212078Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5212155Z         if err_msg is None:
2025-01-17T11:31:46.5212241Z             if left.shape != right.shape:
2025-01-17T11:31:46.5212320Z                 raise_assert_detail(
2025-01-17T11:31:46.5212457Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5212525Z                 )
2025-01-17T11:31:46.5212688Z     
2025-01-17T11:31:46.5212759Z             diff = 0
2025-01-17T11:31:46.5212867Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5212949Z                 # count up differences
2025-01-17T11:31:46.5213115Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5213186Z                     diff += 1
2025-01-17T11:31:46.5213252Z     
2025-01-17T11:31:46.5213456Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5213603Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5214184Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5214310Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5214380Z E           
2025-01-17T11:31:46.5214487Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5214743Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5215173Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5215201Z 
2025-01-17T11:31:46.5215720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5215728Z 
2025-01-17T11:31:46.5216004Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5216011Z 
2025-01-17T11:31:46.5216382Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84bc80>
2025-01-17T11:31:46.5216650Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5216798Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5216804Z 
2025-01-17T11:31:46.5217032Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5217219Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5217349Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5217476Z         try:
2025-01-17T11:31:46.5217699Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5217831Z         except KeyError:
2025-01-17T11:31:46.5218063Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5218172Z     
2025-01-17T11:31:46.5218314Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5218460Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5218604Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5218812Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5218947Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5219089Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5219263Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5219375Z             else:
2025-01-17T11:31:46.5219529Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5219699Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5219712Z 
2025-01-17T11:31:46.5219918Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5220087Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5220233Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5220300Z     ???
2025-01-17T11:31:46.5220409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5220413Z 
2025-01-17T11:31:46.5220478Z >   ???
2025-01-17T11:31:46.5220635Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5220700Z E   
2025-01-17T11:31:46.5220824Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5220936Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5221004Z E          ...
2025-01-17T11:31:46.5266977Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5267292Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5267795Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5268102Z E          ...
2025-01-17T11:31:46.5268248Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5268470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5268642Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5268651Z 
2025-01-17T11:31:46.5268793Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5269172Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-17T11:31:46.5269180Z 
2025-01-17T11:31:46.5269390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5269580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5269722Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5269925Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5270122Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5270276Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5270398Z err_msg = None
2025-01-17T11:31:46.5270404Z 
2025-01-17T11:31:46.5270572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5270693Z         if err_msg is None:
2025-01-17T11:31:46.5270838Z             if left.shape != right.shape:
2025-01-17T11:31:46.5270968Z                 raise_assert_detail(
2025-01-17T11:31:46.5271198Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5271308Z                 )
2025-01-17T11:31:46.5271415Z     
2025-01-17T11:31:46.5271523Z             diff = 0
2025-01-17T11:31:46.5271701Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5271824Z                 # count up differences
2025-01-17T11:31:46.5272086Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5272206Z                     diff += 1
2025-01-17T11:31:46.5272313Z     
2025-01-17T11:31:46.5272444Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5272858Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5273122Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5273294Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5273401Z E           
2025-01-17T11:31:46.5273577Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5274021Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5274470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5274485Z 
2025-01-17T11:31:46.5274973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5274981Z 
2025-01-17T11:31:46.5275237Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5275244Z 
2025-01-17T11:31:46.5275598Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84bd40>
2025-01-17T11:31:46.5275853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5275968Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5276146Z 
2025-01-17T11:31:46.5276369Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5276535Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5276795Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5276893Z         try:
2025-01-17T11:31:46.5277114Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5277225Z         except KeyError:
2025-01-17T11:31:46.5277440Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5277532Z     
2025-01-17T11:31:46.5277660Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5277802Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5277940Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5278119Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5278246Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5278383Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5278561Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5278672Z             else:
2025-01-17T11:31:46.5278821Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5278971Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5278978Z 
2025-01-17T11:31:46.5279146Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5279301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5279497Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5279590Z     ???
2025-01-17T11:31:46.5279734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5279740Z 
2025-01-17T11:31:46.5279830Z >   ???
2025-01-17T11:31:46.5280000Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5280090Z E   
2025-01-17T11:31:46.5280259Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5280414Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5280506Z E          ...
2025-01-17T11:31:46.5280621Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5280801Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5280949Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5281037Z E          ...
2025-01-17T11:31:46.5281149Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5281311Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5281450Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5281456Z 
2025-01-17T11:31:46.5281571Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5281868Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-17T11:31:46.5281880Z 
2025-01-17T11:31:46.5282053Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5282243Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5282380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5282719Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5282915Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5283051Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5283158Z err_msg = None
2025-01-17T11:31:46.5283163Z 
2025-01-17T11:31:46.5283327Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5283446Z         if err_msg is None:
2025-01-17T11:31:46.5283575Z             if left.shape != right.shape:
2025-01-17T11:31:46.5283705Z                 raise_assert_detail(
2025-01-17T11:31:46.5283919Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5284186Z                 )
2025-01-17T11:31:46.5284296Z     
2025-01-17T11:31:46.5284407Z             diff = 0
2025-01-17T11:31:46.5284562Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5284824Z                 # count up differences
2025-01-17T11:31:46.5285062Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5285170Z                     diff += 1
2025-01-17T11:31:46.5285260Z     
2025-01-17T11:31:46.5285381Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5285568Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5285814Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5285966Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5286064Z E           
2025-01-17T11:31:46.5286215Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5286618Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5287040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5287048Z 
2025-01-17T11:31:46.5287496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5287504Z 
2025-01-17T11:31:46.5287747Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5287754Z 
2025-01-17T11:31:46.5288080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e84bec0>
2025-01-17T11:31:46.5288324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815267b530>
2025-01-17T11:31:46.5288435Z attr = 'j_blues'
2025-01-17T11:31:46.5288441Z 
2025-01-17T11:31:46.5288638Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5288821Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5288936Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5289033Z         try:
2025-01-17T11:31:46.5289225Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5289335Z         except KeyError:
2025-01-17T11:31:46.5289563Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5289659Z     
2025-01-17T11:31:46.5289795Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5289927Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5290046Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5290273Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5290402Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5290543Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5290704Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5290801Z             else:
2025-01-17T11:31:46.5290928Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5291067Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5291074Z 
2025-01-17T11:31:46.5291245Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5291392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5291592Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5291682Z     ???
2025-01-17T11:31:46.5291829Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5291835Z 
2025-01-17T11:31:46.5291930Z >   ???
2025-01-17T11:31:46.5292226Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5292316Z E   
2025-01-17T11:31:46.5292943Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5293123Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5293234Z E          ...
2025-01-17T11:31:46.5293365Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5293568Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5293740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5293837Z E          ...
2025-01-17T11:31:46.5293957Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5294129Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5294283Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5294289Z 
2025-01-17T11:31:46.5294413Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5294742Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-17T11:31:46.5294759Z 
2025-01-17T11:31:46.5294947Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5295147Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5295284Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5295480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5295662Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5295798Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5295898Z err_msg = None
2025-01-17T11:31:46.5295904Z 
2025-01-17T11:31:46.5296063Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5296175Z         if err_msg is None:
2025-01-17T11:31:46.5296310Z             if left.shape != right.shape:
2025-01-17T11:31:46.5296436Z                 raise_assert_detail(
2025-01-17T11:31:46.5296652Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5296759Z                 )
2025-01-17T11:31:46.5296857Z     
2025-01-17T11:31:46.5296958Z             diff = 0
2025-01-17T11:31:46.5297126Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5297243Z                 # count up differences
2025-01-17T11:31:46.5297492Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5297595Z                     diff += 1
2025-01-17T11:31:46.5297690Z     
2025-01-17T11:31:46.5297809Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5297999Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5298250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5298405Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5298515Z E           
2025-01-17T11:31:46.5298666Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5299097Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5299519Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5299531Z 
2025-01-17T11:31:46.5299990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5300155Z 
2025-01-17T11:31:46.5300422Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5300559Z 
2025-01-17T11:31:46.5300903Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e874c80>
2025-01-17T11:31:46.5301155Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5301262Z attr = 'lines'
2025-01-17T11:31:46.5301269Z 
2025-01-17T11:31:46.5301472Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5301639Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5301763Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5301862Z         try:
2025-01-17T11:31:46.5302072Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5302186Z         except KeyError:
2025-01-17T11:31:46.5302385Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5302486Z     
2025-01-17T11:31:46.5302768Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5302911Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5303044Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5303240Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5303358Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5303488Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5303645Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5303740Z             else:
2025-01-17T11:31:46.5303862Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5304011Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5304017Z 
2025-01-17T11:31:46.5304188Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5304345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5304542Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5304645Z     ???
2025-01-17T11:31:46.5304793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5304805Z 
2025-01-17T11:31:46.5304899Z >   ???
2025-01-17T11:31:46.5305067Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5305159Z E   
2025-01-17T11:31:46.5305339Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5305491Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5305594Z E          ...
2025-01-17T11:31:46.5305714Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5305912Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5306076Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5306183Z E          ...
2025-01-17T11:31:46.5306307Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5306495Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5306659Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5306666Z 
2025-01-17T11:31:46.5306805Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5307217Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-17T11:31:46.5307225Z 
2025-01-17T11:31:46.5307560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e874d40>
2025-01-17T11:31:46.5307811Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5307935Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5307942Z 
2025-01-17T11:31:46.5308138Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5308307Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5308423Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5308525Z         try:
2025-01-17T11:31:46.5308734Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5309009Z         except KeyError:
2025-01-17T11:31:46.5309200Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5309434Z     
2025-01-17T11:31:46.5309567Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5309710Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5309839Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5310048Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5310187Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5310326Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5310499Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5310506Z 
2025-01-17T11:31:46.5310699Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5310883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5310889Z 
2025-01-17T11:31:46.5311099Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5311239Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5311399Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5311518Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5311730Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5311856Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5312009Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5312128Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5312240Z err_msg = None
2025-01-17T11:31:46.5312246Z 
2025-01-17T11:31:46.5312414Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5312772Z         if err_msg is None:
2025-01-17T11:31:46.5312920Z             if left.shape != right.shape:
2025-01-17T11:31:46.5313041Z                 raise_assert_detail(
2025-01-17T11:31:46.5313274Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5313380Z                 )
2025-01-17T11:31:46.5313493Z     
2025-01-17T11:31:46.5313600Z             diff = 0
2025-01-17T11:31:46.5313771Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5313901Z                 # count up differences
2025-01-17T11:31:46.5314175Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5314298Z                     diff += 1
2025-01-17T11:31:46.5314398Z     
2025-01-17T11:31:46.5314520Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5314711Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5314973Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5315129Z E           AssertionError: Series are different
2025-01-17T11:31:46.5315231Z E           
2025-01-17T11:31:46.5315371Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5316019Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5316555Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5317128Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5317424Z 
2025-01-17T11:31:46.5317916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5318320Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-17T11:31:46.5318326Z 
2025-01-17T11:31:46.5318666Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e874e00>
2025-01-17T11:31:46.5318903Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5319032Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5319039Z 
2025-01-17T11:31:46.5319241Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5319420Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5319536Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5319649Z         try:
2025-01-17T11:31:46.5319883Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5320010Z         except KeyError:
2025-01-17T11:31:46.5320222Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5320328Z     
2025-01-17T11:31:46.5320456Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5320647Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5320787Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5320986Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5321112Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5321234Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5321397Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5321404Z 
2025-01-17T11:31:46.5321574Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5321742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5321754Z 
2025-01-17T11:31:46.5321941Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5322067Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5322220Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5322331Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5322520Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5322785Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5322937Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5323056Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5323168Z err_msg = None
2025-01-17T11:31:46.5323175Z 
2025-01-17T11:31:46.5323339Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5323459Z         if err_msg is None:
2025-01-17T11:31:46.5323598Z             if left.shape != right.shape:
2025-01-17T11:31:46.5323720Z                 raise_assert_detail(
2025-01-17T11:31:46.5323935Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5324038Z                 )
2025-01-17T11:31:46.5324143Z     
2025-01-17T11:31:46.5324241Z             diff = 0
2025-01-17T11:31:46.5324399Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5324527Z                 # count up differences
2025-01-17T11:31:46.5324794Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5324912Z                     diff += 1
2025-01-17T11:31:46.5325016Z     
2025-01-17T11:31:46.5325153Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5325353Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5325810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5325966Z E           AssertionError: Series are different
2025-01-17T11:31:46.5326205Z E           
2025-01-17T11:31:46.5326357Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5327005Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5327661Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5328339Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5328358Z 
2025-01-17T11:31:46.5328808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5329120Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-17T11:31:46.5329126Z 
2025-01-17T11:31:46.5329312Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5329520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5329672Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5329880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5330068Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5330207Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5330322Z err_msg = None
2025-01-17T11:31:46.5330328Z 
2025-01-17T11:31:46.5330497Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5330616Z         if err_msg is None:
2025-01-17T11:31:46.5330764Z             if left.shape != right.shape:
2025-01-17T11:31:46.5330890Z                 raise_assert_detail(
2025-01-17T11:31:46.5331111Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5331225Z                 )
2025-01-17T11:31:46.5331331Z     
2025-01-17T11:31:46.5331440Z             diff = 0
2025-01-17T11:31:46.5331615Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5331747Z                 # count up differences
2025-01-17T11:31:46.5332017Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5332136Z                     diff += 1
2025-01-17T11:31:46.5332235Z     
2025-01-17T11:31:46.5332366Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5332702Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5332980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5333147Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5333256Z E           
2025-01-17T11:31:46.5333424Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5334023Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5334602Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5334610Z 
2025-01-17T11:31:46.5335094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5335101Z 
2025-01-17T11:31:46.5335367Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5335380Z 
2025-01-17T11:31:46.5335734Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875040>
2025-01-17T11:31:46.5336047Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>, attr = 'nu'
2025-01-17T11:31:46.5336069Z 
2025-01-17T11:31:46.5336285Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5336464Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5336587Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5336687Z         try:
2025-01-17T11:31:46.5336898Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5337017Z         except KeyError:
2025-01-17T11:31:46.5337236Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5337338Z     
2025-01-17T11:31:46.5337470Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5337604Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5337737Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5337947Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5338078Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5338216Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5338377Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5338384Z 
2025-01-17T11:31:46.5338566Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5338737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5338955Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5339061Z     ???
2025-01-17T11:31:46.5339215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5339221Z 
2025-01-17T11:31:46.5339317Z >   ???
2025-01-17T11:31:46.5339488Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5339584Z E   
2025-01-17T11:31:46.5339772Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5339929Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5340029Z E          ...
2025-01-17T11:31:46.5340149Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5340327Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5340485Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5340588Z E          ...
2025-01-17T11:31:46.5340708Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5340900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5341058Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5341065Z 
2025-01-17T11:31:46.5341203Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5341567Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-17T11:31:46.5341574Z 
2025-01-17T11:31:46.5341763Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5342063Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5342293Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5342486Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5342819Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5342962Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5343081Z err_msg = None
2025-01-17T11:31:46.5343087Z 
2025-01-17T11:31:46.5343247Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5343372Z         if err_msg is None:
2025-01-17T11:31:46.5343511Z             if left.shape != right.shape:
2025-01-17T11:31:46.5343643Z                 raise_assert_detail(
2025-01-17T11:31:46.5343870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5343981Z                 )
2025-01-17T11:31:46.5344082Z     
2025-01-17T11:31:46.5344191Z             diff = 0
2025-01-17T11:31:46.5344376Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5344508Z                 # count up differences
2025-01-17T11:31:46.5344783Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5344896Z                     diff += 1
2025-01-17T11:31:46.5345003Z     
2025-01-17T11:31:46.5345132Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5345345Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5345618Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5345793Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5345899Z E           
2025-01-17T11:31:46.5346073Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5346528Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5346999Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5347007Z 
2025-01-17T11:31:46.5347501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5347514Z 
2025-01-17T11:31:46.5347783Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5347789Z 
2025-01-17T11:31:46.5348161Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875100>
2025-01-17T11:31:46.5348426Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5348542Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5348554Z 
2025-01-17T11:31:46.5348743Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5348905Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5349020Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5349113Z         try:
2025-01-17T11:31:46.5349308Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5349415Z         except KeyError:
2025-01-17T11:31:46.5349613Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5349707Z     
2025-01-17T11:31:46.5349836Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5349977Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5350113Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5350470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5350591Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5350850Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5351018Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5351025Z 
2025-01-17T11:31:46.5351218Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5351388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5351606Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5351715Z     ???
2025-01-17T11:31:46.5351883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5351890Z 
2025-01-17T11:31:46.5351997Z >   ???
2025-01-17T11:31:46.5352188Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5352289Z E   
2025-01-17T11:31:46.5352489Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5352808Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5352923Z E          ...
2025-01-17T11:31:46.5353050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5353247Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5353417Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5353525Z E          ...
2025-01-17T11:31:46.5353647Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5353842Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5354000Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5354006Z 
2025-01-17T11:31:46.5354143Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5354478Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-17T11:31:46.5354485Z 
2025-01-17T11:31:46.5354690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5354888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5355033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5355220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5355395Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5355526Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5355642Z err_msg = None
2025-01-17T11:31:46.5355648Z 
2025-01-17T11:31:46.5355807Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5355918Z         if err_msg is None:
2025-01-17T11:31:46.5356044Z             if left.shape != right.shape:
2025-01-17T11:31:46.5356161Z                 raise_assert_detail(
2025-01-17T11:31:46.5356368Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5356484Z                 )
2025-01-17T11:31:46.5356586Z     
2025-01-17T11:31:46.5356703Z             diff = 0
2025-01-17T11:31:46.5356877Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5356991Z                 # count up differences
2025-01-17T11:31:46.5357235Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5357337Z                     diff += 1
2025-01-17T11:31:46.5357432Z     
2025-01-17T11:31:46.5357551Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5357748Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5358010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5358176Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5358280Z E           
2025-01-17T11:31:46.5358452Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5359078Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5359670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5359678Z 
2025-01-17T11:31:46.5360166Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5360173Z 
2025-01-17T11:31:46.5360440Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5360454Z 
2025-01-17T11:31:46.5360809Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8751c0>
2025-01-17T11:31:46.5361146Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>, attr = 'f_lu'
2025-01-17T11:31:46.5361153Z 
2025-01-17T11:31:46.5361361Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5361543Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5361667Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5361782Z         try:
2025-01-17T11:31:46.5361999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5362124Z         except KeyError:
2025-01-17T11:31:46.5362336Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5362445Z     
2025-01-17T11:31:46.5362706Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5362862Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5362997Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5363219Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5363345Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5363493Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5363659Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5363666Z 
2025-01-17T11:31:46.5363867Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5364038Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5364269Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5364373Z     ???
2025-01-17T11:31:46.5364543Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5364549Z 
2025-01-17T11:31:46.5364648Z >   ???
2025-01-17T11:31:46.5364840Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5364942Z E   
2025-01-17T11:31:46.5365138Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5365314Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5365420Z E          ...
2025-01-17T11:31:46.5365561Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5365756Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5365929Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5366032Z E          ...
2025-01-17T11:31:46.5366159Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5366339Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5366503Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5366508Z 
2025-01-17T11:31:46.5366641Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5367018Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-17T11:31:46.5367024Z 
2025-01-17T11:31:46.5367220Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5367573Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5367847Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5368066Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5368264Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5368411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5368521Z err_msg = None
2025-01-17T11:31:46.5368527Z 
2025-01-17T11:31:46.5368694Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5368811Z         if err_msg is None:
2025-01-17T11:31:46.5368956Z             if left.shape != right.shape:
2025-01-17T11:31:46.5369078Z                 raise_assert_detail(
2025-01-17T11:31:46.5369304Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5369421Z                 )
2025-01-17T11:31:46.5369528Z     
2025-01-17T11:31:46.5369637Z             diff = 0
2025-01-17T11:31:46.5369820Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5369958Z                 # count up differences
2025-01-17T11:31:46.5370229Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5370348Z                     diff += 1
2025-01-17T11:31:46.5370451Z     
2025-01-17T11:31:46.5370591Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5370802Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5371080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5371256Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5371386Z E           
2025-01-17T11:31:46.5371555Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5372023Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5372799Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5372810Z 
2025-01-17T11:31:46.5373313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5373321Z 
2025-01-17T11:31:46.5373629Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5373680Z 
2025-01-17T11:31:46.5374038Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875940>
2025-01-17T11:31:46.5374307Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5374431Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5374437Z 
2025-01-17T11:31:46.5374644Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5374828Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5374953Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5375067Z         try:
2025-01-17T11:31:46.5375284Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5375412Z         except KeyError:
2025-01-17T11:31:46.5375625Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5375736Z     
2025-01-17T11:31:46.5375865Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5376009Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5376143Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5376502Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5376773Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5376902Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5377064Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5377178Z             else:
2025-01-17T11:31:46.5377312Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5377471Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5377483Z 
2025-01-17T11:31:46.5377677Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5377852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5378086Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5378193Z     ???
2025-01-17T11:31:46.5378378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5378392Z 
2025-01-17T11:31:46.5378496Z >   ???
2025-01-17T11:31:46.5378695Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5378803Z E   
2025-01-17T11:31:46.5379010Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5379175Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5379291Z E          ...
2025-01-17T11:31:46.5379423Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5379628Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5379795Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5379896Z E          ...
2025-01-17T11:31:46.5380012Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5380194Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5380354Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5380360Z 
2025-01-17T11:31:46.5380498Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5380867Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-17T11:31:46.5380880Z 
2025-01-17T11:31:46.5381068Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5381564Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5381718Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5381922Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5382119Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5382255Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5382374Z err_msg = None
2025-01-17T11:31:46.5382379Z 
2025-01-17T11:31:46.5382688Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5382819Z         if err_msg is None:
2025-01-17T11:31:46.5382953Z             if left.shape != right.shape:
2025-01-17T11:31:46.5383067Z                 raise_assert_detail(
2025-01-17T11:31:46.5383286Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5383391Z                 )
2025-01-17T11:31:46.5383498Z     
2025-01-17T11:31:46.5383605Z             diff = 0
2025-01-17T11:31:46.5383777Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5383905Z                 # count up differences
2025-01-17T11:31:46.5384170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5384280Z                     diff += 1
2025-01-17T11:31:46.5384386Z     
2025-01-17T11:31:46.5384516Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5384731Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5385004Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5385339Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5385447Z E           
2025-01-17T11:31:46.5385776Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5386225Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5386676Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5386683Z 
2025-01-17T11:31:46.5387174Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5387193Z 
2025-01-17T11:31:46.5387473Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5387481Z 
2025-01-17T11:31:46.5387838Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875a00>
2025-01-17T11:31:46.5388113Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5388231Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5388237Z 
2025-01-17T11:31:46.5388450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5388624Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5388757Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5388865Z         try:
2025-01-17T11:31:46.5389085Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5389204Z         except KeyError:
2025-01-17T11:31:46.5389427Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5389538Z     
2025-01-17T11:31:46.5389675Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5389823Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5389958Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5390160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5390287Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5390424Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5390590Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5390699Z             else:
2025-01-17T11:31:46.5390841Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5391008Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5391014Z 
2025-01-17T11:31:46.5391205Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5391381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5391615Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5391727Z     ???
2025-01-17T11:31:46.5391903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5391909Z 
2025-01-17T11:31:46.5392016Z >   ???
2025-01-17T11:31:46.5392212Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5392320Z E   
2025-01-17T11:31:46.5392515Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5392837Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5392946Z E          ...
2025-01-17T11:31:46.5393076Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5393273Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5393447Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5393555Z E          ...
2025-01-17T11:31:46.5393686Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5394035Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5394197Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5394339Z 
2025-01-17T11:31:46.5394474Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5394803Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-17T11:31:46.5394818Z 
2025-01-17T11:31:46.5395014Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5395212Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5395361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5395570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5395768Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5395906Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5396034Z err_msg = None
2025-01-17T11:31:46.5396040Z 
2025-01-17T11:31:46.5396211Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5396340Z         if err_msg is None:
2025-01-17T11:31:46.5396481Z             if left.shape != right.shape:
2025-01-17T11:31:46.5396611Z                 raise_assert_detail(
2025-01-17T11:31:46.5396834Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5396949Z                 )
2025-01-17T11:31:46.5397054Z     
2025-01-17T11:31:46.5397171Z             diff = 0
2025-01-17T11:31:46.5397339Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5397478Z                 # count up differences
2025-01-17T11:31:46.5397752Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5397875Z                     diff += 1
2025-01-17T11:31:46.5397982Z     
2025-01-17T11:31:46.5398123Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5398340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5398628Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5398799Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5398904Z E           
2025-01-17T11:31:46.5399079Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5399529Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5399990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5400012Z 
2025-01-17T11:31:46.5400517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5400524Z 
2025-01-17T11:31:46.5400786Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5400792Z 
2025-01-17T11:31:46.5401149Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e875b80>
2025-01-17T11:31:46.5401403Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f815519dfd0>
2025-01-17T11:31:46.5401521Z attr = 'j_blues'
2025-01-17T11:31:46.5401529Z 
2025-01-17T11:31:46.5401741Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5401929Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5402049Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5402162Z         try:
2025-01-17T11:31:46.5402497Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5402757Z         except KeyError:
2025-01-17T11:31:46.5403112Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5403219Z     
2025-01-17T11:31:46.5403345Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5403480Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5403605Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5403787Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5403907Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5404030Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5404196Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5404300Z             else:
2025-01-17T11:31:46.5404452Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5404611Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5404625Z 
2025-01-17T11:31:46.5404834Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5404989Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5405212Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5405314Z     ???
2025-01-17T11:31:46.5405490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5405497Z 
2025-01-17T11:31:46.5405600Z >   ???
2025-01-17T11:31:46.5405799Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5405901Z E   
2025-01-17T11:31:46.5406104Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5406269Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5406385Z E          ...
2025-01-17T11:31:46.5406514Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5406711Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5406895Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5407003Z E          ...
2025-01-17T11:31:46.5407145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5407333Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5407497Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5407504Z 
2025-01-17T11:31:46.5407637Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5407986Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-17T11:31:46.5407992Z 
2025-01-17T11:31:46.5408192Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5408398Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5408546Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5408759Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5408963Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5409103Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5409205Z err_msg = None
2025-01-17T11:31:46.5409211Z 
2025-01-17T11:31:46.5409370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5409484Z         if err_msg is None:
2025-01-17T11:31:46.5409621Z             if left.shape != right.shape:
2025-01-17T11:31:46.5409741Z                 raise_assert_detail(
2025-01-17T11:31:46.5409960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5410067Z                 )
2025-01-17T11:31:46.5410173Z     
2025-01-17T11:31:46.5410283Z             diff = 0
2025-01-17T11:31:46.5410462Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5410593Z                 # count up differences
2025-01-17T11:31:46.5411025Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5411142Z                     diff += 1
2025-01-17T11:31:46.5411335Z     
2025-01-17T11:31:46.5411471Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5411679Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5411957Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5412126Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5412238Z E           
2025-01-17T11:31:46.5412408Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5413004Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5413470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5413490Z 
2025-01-17T11:31:46.5413980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5413987Z 
2025-01-17T11:31:46.5414257Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5414263Z 
2025-01-17T11:31:46.5414619Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876900>
2025-01-17T11:31:46.5414883Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5414994Z attr = 'lines'
2025-01-17T11:31:46.5415000Z 
2025-01-17T11:31:46.5415214Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5415402Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5415539Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5415646Z         try:
2025-01-17T11:31:46.5415861Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5415988Z         except KeyError:
2025-01-17T11:31:46.5416199Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5416309Z     
2025-01-17T11:31:46.5416440Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5416587Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5416719Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5416925Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5417053Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5417188Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5417355Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5417474Z             else:
2025-01-17T11:31:46.5417616Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5417792Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5417799Z 
2025-01-17T11:31:46.5417992Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5418173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5418402Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5418517Z     ???
2025-01-17T11:31:46.5418689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5418696Z 
2025-01-17T11:31:46.5418802Z >   ???
2025-01-17T11:31:46.5418989Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5419090Z E   
2025-01-17T11:31:46.5419296Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5419464Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5419732Z E          ...
2025-01-17T11:31:46.5419861Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5420225Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5420396Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5420509Z E          ...
2025-01-17T11:31:46.5420680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5420882Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5421044Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5421051Z 
2025-01-17T11:31:46.5421191Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5421631Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-17T11:31:46.5421638Z 
2025-01-17T11:31:46.5422002Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8769c0>
2025-01-17T11:31:46.5422260Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5422406Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5422419Z 
2025-01-17T11:31:46.5422756Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5422940Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5423064Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5423177Z         try:
2025-01-17T11:31:46.5423393Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5423519Z         except KeyError:
2025-01-17T11:31:46.5423734Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5423842Z     
2025-01-17T11:31:46.5423972Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5424114Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5424254Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5424457Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5424598Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5424731Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5424904Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5424918Z 
2025-01-17T11:31:46.5425108Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5425286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5425292Z 
2025-01-17T11:31:46.5425504Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5425634Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5425800Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5425927Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5426150Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5426277Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5426441Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5426569Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5426685Z err_msg = None
2025-01-17T11:31:46.5426690Z 
2025-01-17T11:31:46.5426844Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5426951Z         if err_msg is None:
2025-01-17T11:31:46.5427084Z             if left.shape != right.shape:
2025-01-17T11:31:46.5427195Z                 raise_assert_detail(
2025-01-17T11:31:46.5427398Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5427491Z                 )
2025-01-17T11:31:46.5427588Z     
2025-01-17T11:31:46.5427685Z             diff = 0
2025-01-17T11:31:46.5427834Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5427955Z                 # count up differences
2025-01-17T11:31:46.5428191Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5428459Z                     diff += 1
2025-01-17T11:31:46.5428551Z     
2025-01-17T11:31:46.5428669Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5428982Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5429227Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5429361Z E           AssertionError: Series are different
2025-01-17T11:31:46.5429459Z E           
2025-01-17T11:31:46.5429591Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5430146Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5430644Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5431155Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5431163Z 
2025-01-17T11:31:46.5431622Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5432014Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-17T11:31:46.5432028Z 
2025-01-17T11:31:46.5432359Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876a80>
2025-01-17T11:31:46.5432728Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5432858Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5432864Z 
2025-01-17T11:31:46.5433052Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5433219Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5433334Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5433435Z         try:
2025-01-17T11:31:46.5433630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5433742Z         except KeyError:
2025-01-17T11:31:46.5433934Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5434033Z     
2025-01-17T11:31:46.5434165Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5434307Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5434435Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5434632Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5434758Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5434886Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5435045Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5435052Z 
2025-01-17T11:31:46.5435232Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5435401Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5435407Z 
2025-01-17T11:31:46.5435607Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5435733Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5435886Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5436159Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5436367Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5436623Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5436776Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5436892Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5437001Z err_msg = None
2025-01-17T11:31:46.5437007Z 
2025-01-17T11:31:46.5437172Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5437290Z         if err_msg is None:
2025-01-17T11:31:46.5437435Z             if left.shape != right.shape:
2025-01-17T11:31:46.5437560Z                 raise_assert_detail(
2025-01-17T11:31:46.5437782Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5437884Z                 )
2025-01-17T11:31:46.5437984Z     
2025-01-17T11:31:46.5438095Z             diff = 0
2025-01-17T11:31:46.5438271Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5438413Z                 # count up differences
2025-01-17T11:31:46.5438684Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5438803Z                     diff += 1
2025-01-17T11:31:46.5438904Z     
2025-01-17T11:31:46.5439035Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5439238Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5439514Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5439665Z E           AssertionError: Series are different
2025-01-17T11:31:46.5439774Z E           
2025-01-17T11:31:46.5439924Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5440553Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5441206Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5441866Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5441888Z 
2025-01-17T11:31:46.5442378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5442841Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-17T11:31:46.5442850Z 
2025-01-17T11:31:46.5443048Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5443240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5443386Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5443590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5443784Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5444079Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5444200Z err_msg = None
2025-01-17T11:31:46.5444334Z 
2025-01-17T11:31:46.5444500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5444624Z         if err_msg is None:
2025-01-17T11:31:46.5444763Z             if left.shape != right.shape:
2025-01-17T11:31:46.5444894Z                 raise_assert_detail(
2025-01-17T11:31:46.5445112Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5445217Z                 )
2025-01-17T11:31:46.5445334Z     
2025-01-17T11:31:46.5445443Z             diff = 0
2025-01-17T11:31:46.5445613Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5445746Z                 # count up differences
2025-01-17T11:31:46.5446023Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5446139Z                     diff += 1
2025-01-17T11:31:46.5446245Z     
2025-01-17T11:31:46.5446384Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5446591Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5446870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5447042Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5447147Z E           
2025-01-17T11:31:46.5447321Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5447767Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5448238Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5448261Z 
2025-01-17T11:31:46.5448742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5448750Z 
2025-01-17T11:31:46.5449023Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5449030Z 
2025-01-17T11:31:46.5449384Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876cc0>
2025-01-17T11:31:46.5449707Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>, attr = 'nu'
2025-01-17T11:31:46.5449714Z 
2025-01-17T11:31:46.5449930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5450111Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5450231Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5450353Z         try:
2025-01-17T11:31:46.5450565Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5450693Z         except KeyError:
2025-01-17T11:31:46.5450904Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5451002Z     
2025-01-17T11:31:46.5451121Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5451254Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5451371Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5451566Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5451676Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5451806Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5451960Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5451967Z 
2025-01-17T11:31:46.5452158Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5452326Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5452858Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5452968Z     ???
2025-01-17T11:31:46.5453271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5453284Z 
2025-01-17T11:31:46.5453386Z >   ???
2025-01-17T11:31:46.5453572Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5453682Z E   
2025-01-17T11:31:46.5453882Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5454050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5454156Z E          ...
2025-01-17T11:31:46.5454281Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5454477Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5454649Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5454753Z E          ...
2025-01-17T11:31:46.5454887Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5455088Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5455249Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5455263Z 
2025-01-17T11:31:46.5455394Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5455759Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-17T11:31:46.5455766Z 
2025-01-17T11:31:46.5455965Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5456165Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5456308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5456513Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5456707Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5456856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5456963Z err_msg = None
2025-01-17T11:31:46.5456978Z 
2025-01-17T11:31:46.5457153Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5457274Z         if err_msg is None:
2025-01-17T11:31:46.5457419Z             if left.shape != right.shape:
2025-01-17T11:31:46.5457548Z                 raise_assert_detail(
2025-01-17T11:31:46.5457773Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5457882Z                 )
2025-01-17T11:31:46.5457985Z     
2025-01-17T11:31:46.5458102Z             diff = 0
2025-01-17T11:31:46.5458276Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5458423Z                 # count up differences
2025-01-17T11:31:46.5458685Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5458807Z                     diff += 1
2025-01-17T11:31:46.5458907Z     
2025-01-17T11:31:46.5459039Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5459240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5459502Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5459659Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5459772Z E           
2025-01-17T11:31:46.5459933Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5460355Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5460802Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5461062Z 
2025-01-17T11:31:46.5461569Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5461575Z 
2025-01-17T11:31:46.5461828Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5461835Z 
2025-01-17T11:31:46.5462178Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876d80>
2025-01-17T11:31:46.5462430Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5462690Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5462698Z 
2025-01-17T11:31:46.5462902Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5463067Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5463180Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5463293Z         try:
2025-01-17T11:31:46.5463499Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5463625Z         except KeyError:
2025-01-17T11:31:46.5463828Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5463932Z     
2025-01-17T11:31:46.5464051Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5464192Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5464318Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5464525Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5464654Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5464788Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5464953Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5464959Z 
2025-01-17T11:31:46.5465146Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5465310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5465533Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5465645Z     ???
2025-01-17T11:31:46.5465815Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5465829Z 
2025-01-17T11:31:46.5465923Z >   ???
2025-01-17T11:31:46.5466102Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5466200Z E   
2025-01-17T11:31:46.5466379Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5466535Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5466632Z E          ...
2025-01-17T11:31:46.5466758Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5466934Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5467111Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5467214Z E          ...
2025-01-17T11:31:46.5467355Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5467547Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5467718Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5467724Z 
2025-01-17T11:31:46.5467859Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5468180Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-17T11:31:46.5468186Z 
2025-01-17T11:31:46.5468375Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5468578Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5468719Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5468920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5469090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5469392Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5469507Z err_msg = None
2025-01-17T11:31:46.5469636Z 
2025-01-17T11:31:46.5469801Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5469909Z         if err_msg is None:
2025-01-17T11:31:46.5470050Z             if left.shape != right.shape:
2025-01-17T11:31:46.5470167Z                 raise_assert_detail(
2025-01-17T11:31:46.5470426Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5470644Z                 )
2025-01-17T11:31:46.5470777Z     
2025-01-17T11:31:46.5470955Z             diff = 0
2025-01-17T11:31:46.5471274Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5471501Z                 # count up differences
2025-01-17T11:31:46.5471818Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5472013Z                     diff += 1
2025-01-17T11:31:46.5472161Z     
2025-01-17T11:31:46.5472406Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5472792Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5473176Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5473386Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5473575Z E           
2025-01-17T11:31:46.5473756Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5474340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5474817Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5474839Z 
2025-01-17T11:31:46.5475368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5475375Z 
2025-01-17T11:31:46.5475650Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5475657Z 
2025-01-17T11:31:46.5476050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e876e40>
2025-01-17T11:31:46.5476515Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>, attr = 'f_lu'
2025-01-17T11:31:46.5476604Z 
2025-01-17T11:31:46.5476831Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5477046Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5477304Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5477467Z         try:
2025-01-17T11:31:46.5477753Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5477947Z         except KeyError:
2025-01-17T11:31:46.5478239Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5478360Z     
2025-01-17T11:31:46.5478651Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5478825Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5479061Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5479291Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5479476Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5479697Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5479965Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5479972Z 
2025-01-17T11:31:46.5480223Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5480462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5480875Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5481231Z     ???
2025-01-17T11:31:46.5481483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5481489Z 
2025-01-17T11:31:46.5481669Z >   ???
2025-01-17T11:31:46.5481894Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5482071Z E   
2025-01-17T11:31:46.5482282Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5482758Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5482903Z E          ...
2025-01-17T11:31:46.5483066Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5483328Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5483527Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5483774Z E          ...
2025-01-17T11:31:46.5483954Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5484231Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5484430Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5484437Z 
2025-01-17T11:31:46.5484647Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5485041Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-17T11:31:46.5485047Z 
2025-01-17T11:31:46.5485400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5485628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5485852Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5486086Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5486357Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5486594Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5486802Z err_msg = None
2025-01-17T11:31:46.5486815Z 
2025-01-17T11:31:46.5487515Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5487730Z         if err_msg is None:
2025-01-17T11:31:46.5487928Z             if left.shape != right.shape:
2025-01-17T11:31:46.5488187Z                 raise_assert_detail(
2025-01-17T11:31:46.5488525Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5488711Z                 )
2025-01-17T11:31:46.5488849Z     
2025-01-17T11:31:46.5489055Z             diff = 0
2025-01-17T11:31:46.5489240Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5489531Z                 # count up differences
2025-01-17T11:31:46.5489822Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5490017Z                     diff += 1
2025-01-17T11:31:46.5490178Z     
2025-01-17T11:31:46.5490369Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5490672Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5491035Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5491229Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5491429Z E           
2025-01-17T11:31:46.5491627Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5492159Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5492776Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5493207Z 
2025-01-17T11:31:46.5493791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5493799Z 
2025-01-17T11:31:46.5494092Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5494099Z 
2025-01-17T11:31:46.5494520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8775c0>
2025-01-17T11:31:46.5494790Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5495091Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5495099Z 
2025-01-17T11:31:46.5495332Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5495573Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5495726Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5495894Z         try:
2025-01-17T11:31:46.5496191Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5496427Z         except KeyError:
2025-01-17T11:31:46.5496657Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5496830Z     
2025-01-17T11:31:46.5496985Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5497259Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5497456Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5497720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5497882Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5498085Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5498258Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5498534Z             else:
2025-01-17T11:31:46.5498700Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5498903Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5498956Z 
2025-01-17T11:31:46.5499165Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5499382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5499735Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5499894Z     ???
2025-01-17T11:31:46.5500141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5500148Z 
2025-01-17T11:31:46.5500291Z >   ???
2025-01-17T11:31:46.5500571Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5500714Z E   
2025-01-17T11:31:46.5501071Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5501273Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5501456Z E          ...
2025-01-17T11:31:46.5501620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5501902Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5502171Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5502386Z E          ...
2025-01-17T11:31:46.5502682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5502952Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5503157Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5503164Z 
2025-01-17T11:31:46.5503697Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5504100Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-17T11:31:46.5504107Z 
2025-01-17T11:31:46.5504371Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5504593Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5504838Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5505208Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5505543Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5505870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5506123Z err_msg = None
2025-01-17T11:31:46.5506130Z 
2025-01-17T11:31:46.5506337Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5506528Z         if err_msg is None:
2025-01-17T11:31:46.5506693Z             if left.shape != right.shape:
2025-01-17T11:31:46.5506910Z                 raise_assert_detail(
2025-01-17T11:31:46.5507143Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5507415Z                 )
2025-01-17T11:31:46.5507553Z     
2025-01-17T11:31:46.5507738Z             diff = 0
2025-01-17T11:31:46.5507933Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5508119Z                 # count up differences
2025-01-17T11:31:46.5508502Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5508683Z                     diff += 1
2025-01-17T11:31:46.5508861Z     
2025-01-17T11:31:46.5509029Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5509329Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5509599Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5509926Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5510064Z E           
2025-01-17T11:31:46.5510304Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5510783Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5511273Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5511290Z 
2025-01-17T11:31:46.5511904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5511912Z 
2025-01-17T11:31:46.5512200Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5512207Z 
2025-01-17T11:31:46.5512771Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e877680>
2025-01-17T11:31:46.5513052Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5513223Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5513239Z 
2025-01-17T11:31:46.5513540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5513815Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5513970Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5514164Z         try:
2025-01-17T11:31:46.5514399Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5514631Z         except KeyError:
2025-01-17T11:31:46.5514874Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5515068Z     
2025-01-17T11:31:46.5515228Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5515395Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5515584Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5515878Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5516102Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5516282Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5516673Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5516816Z             else:
2025-01-17T11:31:46.5517229Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5517468Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5517475Z 
2025-01-17T11:31:46.5517740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5517943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5518233Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5518349Z     ???
2025-01-17T11:31:46.5518713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5518720Z 
2025-01-17T11:31:46.5518857Z >   ???
2025-01-17T11:31:46.5519190Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5519349Z E   
2025-01-17T11:31:46.5519650Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5519869Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5520060Z E          ...
2025-01-17T11:31:46.5520219Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5520630Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5520846Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5521060Z E          ...
2025-01-17T11:31:46.5521227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5521463Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5521755Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5521763Z 
2025-01-17T11:31:46.5522034Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5522418Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-17T11:31:46.5522425Z 
2025-01-17T11:31:46.5522847Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5523099Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5523385Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5523655Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5523958Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5524137Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5524293Z err_msg = None
2025-01-17T11:31:46.5524344Z 
2025-01-17T11:31:46.5524532Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5524765Z         if err_msg is None:
2025-01-17T11:31:46.5525180Z             if left.shape != right.shape:
2025-01-17T11:31:46.5525349Z                 raise_assert_detail(
2025-01-17T11:31:46.5525658Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5525818Z                 )
2025-01-17T11:31:46.5526057Z     
2025-01-17T11:31:46.5526252Z             diff = 0
2025-01-17T11:31:46.5526525Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5526728Z                 # count up differences
2025-01-17T11:31:46.5527146Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5527284Z                     diff += 1
2025-01-17T11:31:46.5527580Z     
2025-01-17T11:31:46.5527755Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5528051Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5528358Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5528584Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5528802Z E           
2025-01-17T11:31:46.5529066Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5529510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5530305Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5530314Z 
2025-01-17T11:31:46.5530786Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5530793Z 
2025-01-17T11:31:46.5531163Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5531170Z 
2025-01-17T11:31:46.5531564Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e877800>
2025-01-17T11:31:46.5531882Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814c010620>
2025-01-17T11:31:46.5532027Z attr = 'j_blues'
2025-01-17T11:31:46.5532034Z 
2025-01-17T11:31:46.5532330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5532508Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5532937Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5533082Z         try:
2025-01-17T11:31:46.5533398Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5533558Z         except KeyError:
2025-01-17T11:31:46.5533834Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5534025Z     
2025-01-17T11:31:46.5534249Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5534427Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5534656Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5534897Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5535145Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5535336Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5535601Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5535741Z             else:
2025-01-17T11:31:46.5535963Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5536410Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5536417Z 
2025-01-17T11:31:46.5536747Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5536946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5537260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5537392Z     ???
2025-01-17T11:31:46.5537587Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5537621Z 
2025-01-17T11:31:46.5537823Z >   ???
2025-01-17T11:31:46.5538143Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5538257Z E   
2025-01-17T11:31:46.5538529Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5538783Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5538915Z E          ...
2025-01-17T11:31:46.5539113Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5539347Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5551284Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5551448Z E          ...
2025-01-17T11:31:46.5551588Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5551798Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5551950Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5551957Z 
2025-01-17T11:31:46.5552085Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5552866Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-17T11:31:46.5553021Z 
2025-01-17T11:31:46.5553243Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5553446Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5553590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5553783Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5553969Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5554096Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5554204Z err_msg = None
2025-01-17T11:31:46.5554211Z 
2025-01-17T11:31:46.5554366Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5554480Z         if err_msg is None:
2025-01-17T11:31:46.5554620Z             if left.shape != right.shape:
2025-01-17T11:31:46.5554738Z                 raise_assert_detail(
2025-01-17T11:31:46.5554954Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5555057Z                 )
2025-01-17T11:31:46.5555148Z     
2025-01-17T11:31:46.5555252Z             diff = 0
2025-01-17T11:31:46.5555404Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5555520Z                 # count up differences
2025-01-17T11:31:46.5555769Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5555872Z                     diff += 1
2025-01-17T11:31:46.5555973Z     
2025-01-17T11:31:46.5556092Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5556287Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5556531Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5556701Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5556798Z E           
2025-01-17T11:31:46.5556962Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5557362Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5557763Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5557770Z 
2025-01-17T11:31:46.5558209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5558227Z 
2025-01-17T11:31:46.5558468Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5558480Z 
2025-01-17T11:31:46.5558804Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c5c0>
2025-01-17T11:31:46.5559035Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5559141Z attr = 'lines'
2025-01-17T11:31:46.5559148Z 
2025-01-17T11:31:46.5559339Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5559504Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5559626Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5559728Z         try:
2025-01-17T11:31:46.5559935Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5560042Z         except KeyError:
2025-01-17T11:31:46.5560238Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5560486Z     
2025-01-17T11:31:46.5560610Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5560741Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5560970Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5561155Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5561275Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5561394Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5561547Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5561649Z             else:
2025-01-17T11:31:46.5561789Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5561934Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5561940Z 
2025-01-17T11:31:46.5562117Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5562273Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5562489Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5562719Z     ???
2025-01-17T11:31:46.5562883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5562903Z 
2025-01-17T11:31:46.5562996Z >   ???
2025-01-17T11:31:46.5563177Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5563272Z E   
2025-01-17T11:31:46.5563446Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5563599Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5563697Z E          ...
2025-01-17T11:31:46.5563818Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5563992Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5564155Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5564246Z E          ...
2025-01-17T11:31:46.5564362Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5564549Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5564704Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5564717Z 
2025-01-17T11:31:46.5564843Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5565293Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-17T11:31:46.5565300Z 
2025-01-17T11:31:46.5565609Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c680>
2025-01-17T11:31:46.5565853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5565972Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5565978Z 
2025-01-17T11:31:46.5566165Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5566333Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5566458Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5566557Z         try:
2025-01-17T11:31:46.5566753Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5566878Z         except KeyError:
2025-01-17T11:31:46.5567089Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5567195Z     
2025-01-17T11:31:46.5567321Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5567461Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5567585Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5567768Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5567886Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5568022Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5568177Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5568184Z 
2025-01-17T11:31:46.5568358Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5568510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5568517Z 
2025-01-17T11:31:46.5568865Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5568977Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5569299Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5569415Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5569631Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5569751Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5569910Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5570019Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5570125Z err_msg = None
2025-01-17T11:31:46.5570130Z 
2025-01-17T11:31:46.5570275Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5570398Z         if err_msg is None:
2025-01-17T11:31:46.5570535Z             if left.shape != right.shape:
2025-01-17T11:31:46.5570673Z                 raise_assert_detail(
2025-01-17T11:31:46.5570886Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5571000Z                 )
2025-01-17T11:31:46.5571097Z     
2025-01-17T11:31:46.5571194Z             diff = 0
2025-01-17T11:31:46.5571363Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5571493Z                 # count up differences
2025-01-17T11:31:46.5571755Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5571862Z                     diff += 1
2025-01-17T11:31:46.5571959Z     
2025-01-17T11:31:46.5572073Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5572263Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5572501Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5572783Z E           AssertionError: Series are different
2025-01-17T11:31:46.5572887Z E           
2025-01-17T11:31:46.5573027Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5573591Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5574113Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5574642Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5574668Z 
2025-01-17T11:31:46.5575131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5575594Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-17T11:31:46.5575601Z 
2025-01-17T11:31:46.5575952Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c740>
2025-01-17T11:31:46.5576209Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5576346Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5576352Z 
2025-01-17T11:31:46.5576739Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5576912Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5577178Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5577284Z         try:
2025-01-17T11:31:46.5577503Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5577630Z         except KeyError:
2025-01-17T11:31:46.5577842Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5577942Z     
2025-01-17T11:31:46.5578065Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5578204Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5578325Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5578516Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5578633Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5578758Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5578910Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5578923Z 
2025-01-17T11:31:46.5579102Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5579268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5579273Z 
2025-01-17T11:31:46.5579467Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5579585Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5579738Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5579850Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5580058Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5580175Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5580333Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5580445Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5580560Z err_msg = None
2025-01-17T11:31:46.5580566Z 
2025-01-17T11:31:46.5580713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5580836Z         if err_msg is None:
2025-01-17T11:31:46.5580968Z             if left.shape != right.shape:
2025-01-17T11:31:46.5581091Z                 raise_assert_detail(
2025-01-17T11:31:46.5581286Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5581379Z                 )
2025-01-17T11:31:46.5581476Z     
2025-01-17T11:31:46.5581572Z             diff = 0
2025-01-17T11:31:46.5581731Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5581849Z                 # count up differences
2025-01-17T11:31:46.5582099Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5582207Z                     diff += 1
2025-01-17T11:31:46.5582306Z     
2025-01-17T11:31:46.5582422Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5582754Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5583005Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5583158Z E           AssertionError: Series are different
2025-01-17T11:31:46.5583257Z E           
2025-01-17T11:31:46.5583405Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5583989Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5584570Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5585440Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5585456Z 
2025-01-17T11:31:46.5585904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5586309Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-17T11:31:46.5586324Z 
2025-01-17T11:31:46.5586509Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5586714Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5586852Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5587053Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5587240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5587380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5587495Z err_msg = None
2025-01-17T11:31:46.5587502Z 
2025-01-17T11:31:46.5587678Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5587783Z         if err_msg is None:
2025-01-17T11:31:46.5587925Z             if left.shape != right.shape:
2025-01-17T11:31:46.5588042Z                 raise_assert_detail(
2025-01-17T11:31:46.5588273Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5588398Z                 )
2025-01-17T11:31:46.5588496Z     
2025-01-17T11:31:46.5588616Z             diff = 0
2025-01-17T11:31:46.5588789Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5588926Z                 # count up differences
2025-01-17T11:31:46.5589194Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5589322Z                     diff += 1
2025-01-17T11:31:46.5589435Z     
2025-01-17T11:31:46.5589580Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5589808Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5590110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5590303Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5590430Z E           
2025-01-17T11:31:46.5590630Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5591117Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5591604Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5591618Z 
2025-01-17T11:31:46.5592154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5592164Z 
2025-01-17T11:31:46.5592717Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5592726Z 
2025-01-17T11:31:46.5593054Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89c980>
2025-01-17T11:31:46.5593492Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>, attr = 'nu'
2025-01-17T11:31:46.5593499Z 
2025-01-17T11:31:46.5593695Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5593857Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5593979Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5594078Z         try:
2025-01-17T11:31:46.5594276Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5594382Z         except KeyError:
2025-01-17T11:31:46.5594577Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5594667Z     
2025-01-17T11:31:46.5594784Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5594906Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5595039Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5595219Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5595350Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5595468Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5595620Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5595634Z 
2025-01-17T11:31:46.5595807Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5595964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5596172Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5596264Z     ???
2025-01-17T11:31:46.5596427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5596433Z 
2025-01-17T11:31:46.5596525Z >   ???
2025-01-17T11:31:46.5596704Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5596807Z E   
2025-01-17T11:31:46.5596992Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5597147Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5597260Z E          ...
2025-01-17T11:31:46.5597390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5597590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5597761Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5597873Z E          ...
2025-01-17T11:31:46.5597991Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5598173Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5598334Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5598340Z 
2025-01-17T11:31:46.5598480Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5598930Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-17T11:31:46.5598945Z 
2025-01-17T11:31:46.5599153Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5599373Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5599527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5599739Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5599918Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5600011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5600088Z err_msg = None
2025-01-17T11:31:46.5600092Z 
2025-01-17T11:31:46.5600198Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5600276Z         if err_msg is None:
2025-01-17T11:31:46.5600363Z             if left.shape != right.shape:
2025-01-17T11:31:46.5600439Z                 raise_assert_detail(
2025-01-17T11:31:46.5600730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5600893Z                 )
2025-01-17T11:31:46.5600963Z     
2025-01-17T11:31:46.5601031Z             diff = 0
2025-01-17T11:31:46.5601142Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5601223Z                 # count up differences
2025-01-17T11:31:46.5601392Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5601463Z                     diff += 1
2025-01-17T11:31:46.5601530Z     
2025-01-17T11:31:46.5601614Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5601750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5601910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5602024Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5602095Z E           
2025-01-17T11:31:46.5602205Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5602457Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5602963Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5602972Z 
2025-01-17T11:31:46.5603283Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5603289Z 
2025-01-17T11:31:46.5603465Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5603470Z 
2025-01-17T11:31:46.5603705Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ca40>
2025-01-17T11:31:46.5603871Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5603944Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5603948Z 
2025-01-17T11:31:46.5604084Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5604195Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5604276Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5604342Z         try:
2025-01-17T11:31:46.5604483Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5604560Z         except KeyError:
2025-01-17T11:31:46.5604695Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5604759Z     
2025-01-17T11:31:46.5604847Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5604942Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5605036Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5605168Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5605252Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5605335Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5605440Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5605449Z 
2025-01-17T11:31:46.5605569Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5605679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5605825Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5605889Z     ???
2025-01-17T11:31:46.5605998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5606002Z 
2025-01-17T11:31:46.5606064Z >   ???
2025-01-17T11:31:46.5606193Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5606397Z E   
2025-01-17T11:31:46.5606519Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5606736Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5606803Z E          ...
2025-01-17T11:31:46.5606897Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5607018Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5607127Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5607193Z E          ...
2025-01-17T11:31:46.5607278Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5607394Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5607502Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5607507Z 
2025-01-17T11:31:46.5607592Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5607854Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-17T11:31:46.5607868Z 
2025-01-17T11:31:46.5607993Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5608130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5608229Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5608362Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5608477Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5608567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5608635Z err_msg = None
2025-01-17T11:31:46.5608639Z 
2025-01-17T11:31:46.5608754Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5608829Z         if err_msg is None:
2025-01-17T11:31:46.5608922Z             if left.shape != right.shape:
2025-01-17T11:31:46.5609005Z                 raise_assert_detail(
2025-01-17T11:31:46.5609157Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5609229Z                 )
2025-01-17T11:31:46.5609297Z     
2025-01-17T11:31:46.5609364Z             diff = 0
2025-01-17T11:31:46.5609471Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5609558Z                 # count up differences
2025-01-17T11:31:46.5609723Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5609800Z                     diff += 1
2025-01-17T11:31:46.5609866Z     
2025-01-17T11:31:46.5609953Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5610082Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5610252Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5610358Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5610433Z E           
2025-01-17T11:31:46.5610536Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5610802Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5611060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5611074Z 
2025-01-17T11:31:46.5611373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5611474Z 
2025-01-17T11:31:46.5611648Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5611728Z 
2025-01-17T11:31:46.5611946Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89cb00>
2025-01-17T11:31:46.5612145Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>, attr = 'f_lu'
2025-01-17T11:31:46.5612149Z 
2025-01-17T11:31:46.5612279Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5612391Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5612469Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5612702Z         try:
2025-01-17T11:31:46.5612858Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5612935Z         except KeyError:
2025-01-17T11:31:46.5613076Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5613143Z     
2025-01-17T11:31:46.5613228Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5613322Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5613409Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5613541Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5613626Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5613708Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5613821Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5613826Z 
2025-01-17T11:31:46.5613948Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5614064Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5614204Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5614275Z     ???
2025-01-17T11:31:46.5614378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5614382Z 
2025-01-17T11:31:46.5614449Z >   ???
2025-01-17T11:31:46.5614575Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5614644Z E   
2025-01-17T11:31:46.5614764Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5614877Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5614944Z E          ...
2025-01-17T11:31:46.5615028Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5615155Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5615261Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5615332Z E          ...
2025-01-17T11:31:46.5615413Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5615537Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5615636Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5615640Z 
2025-01-17T11:31:46.5615728Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5616042Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-17T11:31:46.5616051Z 
2025-01-17T11:31:46.5616279Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d100>
2025-01-17T11:31:46.5616438Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5616530Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.5616535Z 
2025-01-17T11:31:46.5616669Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5616782Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5616859Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5616931Z         try:
2025-01-17T11:31:46.5617064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5617146Z         except KeyError:
2025-01-17T11:31:46.5617275Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5617344Z     
2025-01-17T11:31:46.5617422Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5617635Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5617719Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5617945Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5618028Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5618111Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5618220Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5618288Z             else:
2025-01-17T11:31:46.5618382Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5618494Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5618498Z 
2025-01-17T11:31:46.5618620Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5618726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5618866Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5618937Z     ???
2025-01-17T11:31:46.5619041Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5619050Z 
2025-01-17T11:31:46.5619112Z >   ???
2025-01-17T11:31:46.5619286Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.5619349Z E   
2025-01-17T11:31:46.5619508Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.5619867Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5624619Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.5629185Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.5629611Z E   At positional index 183, first diff: 0.9714108054153513 != 0.9713105029025074
2025-01-17T11:31:46.5629621Z 
2025-01-17T11:31:46.5629703Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5629997Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-17T11:31:46.5630008Z 
2025-01-17T11:31:46.5630129Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5630255Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5630356Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5630479Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5630606Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5630694Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5630769Z err_msg = None
2025-01-17T11:31:46.5630774Z 
2025-01-17T11:31:46.5630877Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5630957Z         if err_msg is None:
2025-01-17T11:31:46.5631047Z             if left.shape != right.shape:
2025-01-17T11:31:46.5631129Z                 raise_assert_detail(
2025-01-17T11:31:46.5631270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5631341Z                 )
2025-01-17T11:31:46.5631405Z     
2025-01-17T11:31:46.5631482Z             diff = 0
2025-01-17T11:31:46.5631591Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5631680Z                 # count up differences
2025-01-17T11:31:46.5631846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5631924Z                     diff += 1
2025-01-17T11:31:46.5631988Z     
2025-01-17T11:31:46.5632075Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5632205Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5632369Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5632477Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5632702Z E           
2025-01-17T11:31:46.5632839Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5633097Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5633593Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5633599Z 
2025-01-17T11:31:46.5633898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5633903Z 
2025-01-17T11:31:46.5634062Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5634066Z 
2025-01-17T11:31:46.5634285Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d1c0>
2025-01-17T11:31:46.5634441Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5634535Z attr = 'previous_beta_sobolev'
2025-01-17T11:31:46.5634544Z 
2025-01-17T11:31:46.5634674Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5634789Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5634865Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5634936Z         try:
2025-01-17T11:31:46.5635067Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5635147Z         except KeyError:
2025-01-17T11:31:46.5635278Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5635347Z     
2025-01-17T11:31:46.5635426Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5635515Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5635602Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5635724Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5635813Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5635895Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5636002Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5636072Z             else:
2025-01-17T11:31:46.5636168Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5636268Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5636272Z 
2025-01-17T11:31:46.5636396Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5636502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5636646Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5636713Z     ???
2025-01-17T11:31:46.5636823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5636827Z 
2025-01-17T11:31:46.5636891Z >   ???
2025-01-17T11:31:46.5637019Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5637086Z E   
2025-01-17T11:31:46.5637215Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5637321Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5637404Z E          ...
2025-01-17T11:31:46.5637486Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5637616Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5637722Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5637788Z E          ...
2025-01-17T11:31:46.5637874Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5637990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5638097Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5638101Z 
2025-01-17T11:31:46.5638181Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5638449Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-17T11:31:46.5638556Z 
2025-01-17T11:31:46.5638680Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5638904Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5638993Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5639123Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5639236Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5639329Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5639399Z err_msg = None
2025-01-17T11:31:46.5639404Z 
2025-01-17T11:31:46.5639512Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5639588Z         if err_msg is None:
2025-01-17T11:31:46.5639682Z             if left.shape != right.shape:
2025-01-17T11:31:46.5639762Z                 raise_assert_detail(
2025-01-17T11:31:46.5639910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5639977Z                 )
2025-01-17T11:31:46.5640041Z     
2025-01-17T11:31:46.5640105Z             diff = 0
2025-01-17T11:31:46.5640207Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5640287Z                 # count up differences
2025-01-17T11:31:46.5640454Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5640525Z                     diff += 1
2025-01-17T11:31:46.5640594Z     
2025-01-17T11:31:46.5640675Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5640800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5640965Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5641069Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5641145Z E           
2025-01-17T11:31:46.5641247Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5641501Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5641762Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5641772Z 
2025-01-17T11:31:46.5642061Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5642065Z 
2025-01-17T11:31:46.5642233Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5642237Z 
2025-01-17T11:31:46.5642455Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d280>
2025-01-17T11:31:46.5642811Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5642894Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5642899Z 
2025-01-17T11:31:46.5643035Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5643142Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5643224Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5643289Z         try:
2025-01-17T11:31:46.5643424Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5643497Z         except KeyError:
2025-01-17T11:31:46.5643627Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5643697Z     
2025-01-17T11:31:46.5643776Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5644006Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5644090Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5644322Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5644401Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5644490Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5644591Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5644664Z             else:
2025-01-17T11:31:46.5644755Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5644859Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5644864Z 
2025-01-17T11:31:46.5644981Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5645091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5645225Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5645297Z     ???
2025-01-17T11:31:46.5645411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5645416Z 
2025-01-17T11:31:46.5645491Z >   ???
2025-01-17T11:31:46.5645609Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5645678Z E   
2025-01-17T11:31:46.5645802Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5645910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5645981Z E          ...
2025-01-17T11:31:46.5646066Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5646194Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5646303Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5646376Z E          ...
2025-01-17T11:31:46.5646453Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5646571Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5646667Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5646676Z 
2025-01-17T11:31:46.5646764Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5647035Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-17T11:31:46.5647039Z 
2025-01-17T11:31:46.5647169Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5647288Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5647384Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5647511Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5647632Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5647720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5647796Z err_msg = None
2025-01-17T11:31:46.5647804Z 
2025-01-17T11:31:46.5647907Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5647985Z         if err_msg is None:
2025-01-17T11:31:46.5648079Z             if left.shape != right.shape:
2025-01-17T11:31:46.5648165Z                 raise_assert_detail(
2025-01-17T11:31:46.5648299Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5648370Z                 )
2025-01-17T11:31:46.5648433Z     
2025-01-17T11:31:46.5648507Z             diff = 0
2025-01-17T11:31:46.5648614Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5648697Z                 # count up differences
2025-01-17T11:31:46.5648863Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5648935Z                     diff += 1
2025-01-17T11:31:46.5649004Z     
2025-01-17T11:31:46.5649084Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5649219Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5649491Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5649680Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5649746Z E           
2025-01-17T11:31:46.5649858Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5650111Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5650372Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5650386Z 
2025-01-17T11:31:46.5650680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5650695Z 
2025-01-17T11:31:46.5650856Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5650861Z 
2025-01-17T11:31:46.5651080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d340>
2025-01-17T11:31:46.5651240Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5651316Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5651321Z 
2025-01-17T11:31:46.5651449Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5651560Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5651639Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5651705Z         try:
2025-01-17T11:31:46.5651843Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5651922Z         except KeyError:
2025-01-17T11:31:46.5652060Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5652126Z     
2025-01-17T11:31:46.5652209Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5652295Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5652381Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5652504Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5652694Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5652781Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5652886Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5652953Z             else:
2025-01-17T11:31:46.5653047Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5653147Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5653151Z 
2025-01-17T11:31:46.5653276Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5653389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5653536Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5653601Z     ???
2025-01-17T11:31:46.5653705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5653713Z 
2025-01-17T11:31:46.5653777Z >   ???
2025-01-17T11:31:46.5653896Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5653964Z E   
2025-01-17T11:31:46.5654086Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5654196Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5654263Z E          ...
2025-01-17T11:31:46.5654350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5654470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5654579Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5654769Z E          ...
2025-01-17T11:31:46.5654857Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5655091Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5655189Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5655193Z 
2025-01-17T11:31:46.5655274Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5655532Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-17T11:31:46.5655537Z 
2025-01-17T11:31:46.5655655Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5655782Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5655872Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5656001Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5656120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5656216Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5656292Z err_msg = None
2025-01-17T11:31:46.5656296Z 
2025-01-17T11:31:46.5656403Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5656479Z         if err_msg is None:
2025-01-17T11:31:46.5656571Z             if left.shape != right.shape:
2025-01-17T11:31:46.5656651Z                 raise_assert_detail(
2025-01-17T11:31:46.5656792Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5656857Z                 )
2025-01-17T11:31:46.5656920Z     
2025-01-17T11:31:46.5656992Z             diff = 0
2025-01-17T11:31:46.5657094Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5657179Z                 # count up differences
2025-01-17T11:31:46.5657341Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5657425Z                     diff += 1
2025-01-17T11:31:46.5657488Z     
2025-01-17T11:31:46.5657579Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5657706Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5657872Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5657975Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5658045Z E           
2025-01-17T11:31:46.5658147Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5658401Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5658662Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5658674Z 
2025-01-17T11:31:46.5658968Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5658973Z 
2025-01-17T11:31:46.5659134Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5659144Z 
2025-01-17T11:31:46.5659358Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89d4c0>
2025-01-17T11:31:46.5659512Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112fb0d70>
2025-01-17T11:31:46.5659583Z attr = 'j_blues'
2025-01-17T11:31:46.5659587Z 
2025-01-17T11:31:46.5659711Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5659913Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5659990Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5660137Z         try:
2025-01-17T11:31:46.5660269Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5660350Z         except KeyError:
2025-01-17T11:31:46.5660479Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5660547Z     
2025-01-17T11:31:46.5660626Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5660715Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5660796Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5660923Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5661001Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5661092Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5661193Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5661263Z             else:
2025-01-17T11:31:46.5661356Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5661457Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5661470Z 
2025-01-17T11:31:46.5661587Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5661693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5661833Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5661898Z     ???
2025-01-17T11:31:46.5662006Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5662010Z 
2025-01-17T11:31:46.5662073Z >   ???
2025-01-17T11:31:46.5662197Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5662261Z E   
2025-01-17T11:31:46.5662386Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5662487Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5662660Z E          ...
2025-01-17T11:31:46.5662754Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5662877Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5662984Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5663053Z E          ...
2025-01-17T11:31:46.5663132Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5663252Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5663349Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5663353Z 
2025-01-17T11:31:46.5663439Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5663684Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-17T11:31:46.5663689Z 
2025-01-17T11:31:46.5663811Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5663929Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5664026Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5664157Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5664274Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5664361Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5664434Z err_msg = None
2025-01-17T11:31:46.5664438Z 
2025-01-17T11:31:46.5664542Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5664620Z         if err_msg is None:
2025-01-17T11:31:46.5664706Z             if left.shape != right.shape:
2025-01-17T11:31:46.5664783Z                 raise_assert_detail(
2025-01-17T11:31:46.5664920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5664985Z                 )
2025-01-17T11:31:46.5665052Z     
2025-01-17T11:31:46.5665119Z             diff = 0
2025-01-17T11:31:46.5665347Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5665428Z                 # count up differences
2025-01-17T11:31:46.5665715Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5665785Z                     diff += 1
2025-01-17T11:31:46.5665856Z     
2025-01-17T11:31:46.5665935Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5666067Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5666225Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5666333Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5666401Z E           
2025-01-17T11:31:46.5666509Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5666763Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5667037Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5667043Z 
2025-01-17T11:31:46.5667330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5667335Z 
2025-01-17T11:31:46.5667498Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5667503Z 
2025-01-17T11:31:46.5667715Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e240>
2025-01-17T11:31:46.5667881Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5667950Z attr = 'lines'
2025-01-17T11:31:46.5667958Z 
2025-01-17T11:31:46.5668090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5668196Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5668279Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5668346Z         try:
2025-01-17T11:31:46.5668480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5668557Z         except KeyError:
2025-01-17T11:31:46.5668691Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5668755Z     
2025-01-17T11:31:46.5668842Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5668929Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5669015Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5669137Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5669221Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5669312Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5669412Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5669487Z             else:
2025-01-17T11:31:46.5669577Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5669680Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5669684Z 
2025-01-17T11:31:46.5669801Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5669909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5670045Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5670110Z     ???
2025-01-17T11:31:46.5670210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5670214Z 
2025-01-17T11:31:46.5670280Z >   ???
2025-01-17T11:31:46.5670394Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5670550Z E   
2025-01-17T11:31:46.5670669Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5670775Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5670915Z E          ...
2025-01-17T11:31:46.5671000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5671119Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5671228Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5671295Z E          ...
2025-01-17T11:31:46.5671375Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5671497Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5671592Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5671600Z 
2025-01-17T11:31:46.5671681Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5671960Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-17T11:31:46.5671976Z 
2025-01-17T11:31:46.5672186Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e300>
2025-01-17T11:31:46.5672344Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5672429Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5672433Z 
2025-01-17T11:31:46.5673099Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5673234Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5673311Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5673383Z         try:
2025-01-17T11:31:46.5673512Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5673590Z         except KeyError:
2025-01-17T11:31:46.5673717Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5673784Z     
2025-01-17T11:31:46.5673864Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5673953Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5674042Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5674170Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5674253Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5674338Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5674440Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5674444Z 
2025-01-17T11:31:46.5674563Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5674666Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5674671Z 
2025-01-17T11:31:46.5674802Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5674883Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5674988Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5675063Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5675203Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5675280Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5675381Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5675460Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5675529Z err_msg = None
2025-01-17T11:31:46.5675533Z 
2025-01-17T11:31:46.5675639Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5675713Z         if err_msg is None:
2025-01-17T11:31:46.5675810Z             if left.shape != right.shape:
2025-01-17T11:31:46.5675886Z                 raise_assert_detail(
2025-01-17T11:31:46.5676022Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5676088Z                 )
2025-01-17T11:31:46.5676157Z     
2025-01-17T11:31:46.5676224Z             diff = 0
2025-01-17T11:31:46.5676332Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5676541Z                 # count up differences
2025-01-17T11:31:46.5676711Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5676891Z                     diff += 1
2025-01-17T11:31:46.5676960Z     
2025-01-17T11:31:46.5677038Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5677171Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5677329Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5677424Z E           AssertionError: Series are different
2025-01-17T11:31:46.5677498Z E           
2025-01-17T11:31:46.5677592Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5677956Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5678298Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5678619Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5678627Z 
2025-01-17T11:31:46.5678923Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5679208Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-17T11:31:46.5679213Z 
2025-01-17T11:31:46.5679429Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e3c0>
2025-01-17T11:31:46.5679585Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5679674Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5679678Z 
2025-01-17T11:31:46.5679803Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5679914Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5679992Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5680062Z         try:
2025-01-17T11:31:46.5680193Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5680270Z         except KeyError:
2025-01-17T11:31:46.5680401Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5680476Z     
2025-01-17T11:31:46.5680555Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5680648Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5680729Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5680855Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5680933Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5681021Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5681122Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5681127Z 
2025-01-17T11:31:46.5681246Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5681350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5681355Z 
2025-01-17T11:31:46.5681483Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5681648Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5681747Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5681904Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5682033Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5682114Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5682210Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5682286Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5682355Z err_msg = None
2025-01-17T11:31:46.5682359Z 
2025-01-17T11:31:46.5682464Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5682693Z         if err_msg is None:
2025-01-17T11:31:46.5682831Z             if left.shape != right.shape:
2025-01-17T11:31:46.5682911Z                 raise_assert_detail(
2025-01-17T11:31:46.5683046Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5683124Z                 )
2025-01-17T11:31:46.5683193Z     
2025-01-17T11:31:46.5683267Z             diff = 0
2025-01-17T11:31:46.5683379Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5683459Z                 # count up differences
2025-01-17T11:31:46.5683621Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5683691Z                     diff += 1
2025-01-17T11:31:46.5683760Z     
2025-01-17T11:31:46.5683839Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5683967Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5684129Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5684224Z E           AssertionError: Series are different
2025-01-17T11:31:46.5684298Z E           
2025-01-17T11:31:46.5684390Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5684758Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5685144Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5685867Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5685893Z 
2025-01-17T11:31:46.5686400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5686746Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-17T11:31:46.5686753Z 
2025-01-17T11:31:46.5686881Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5687001Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5687097Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5687366Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5687485Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5687696Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5687773Z err_msg = None
2025-01-17T11:31:46.5687777Z 
2025-01-17T11:31:46.5687879Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5687960Z         if err_msg is None:
2025-01-17T11:31:46.5688047Z             if left.shape != right.shape:
2025-01-17T11:31:46.5688132Z                 raise_assert_detail(
2025-01-17T11:31:46.5688264Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5688333Z                 )
2025-01-17T11:31:46.5688396Z     
2025-01-17T11:31:46.5688467Z             diff = 0
2025-01-17T11:31:46.5688570Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5688654Z                 # count up differences
2025-01-17T11:31:46.5688819Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5688899Z                     diff += 1
2025-01-17T11:31:46.5688964Z     
2025-01-17T11:31:46.5689043Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5689175Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5689336Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5689447Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5689513Z E           
2025-01-17T11:31:46.5689627Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5689881Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5690144Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5690153Z 
2025-01-17T11:31:46.5690443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5690447Z 
2025-01-17T11:31:46.5690607Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5690612Z 
2025-01-17T11:31:46.5690830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e600>
2025-01-17T11:31:46.5691020Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>, attr = 'nu'
2025-01-17T11:31:46.5691025Z 
2025-01-17T11:31:46.5691161Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5691272Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5691357Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5691425Z         try:
2025-01-17T11:31:46.5691564Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5691636Z         except KeyError:
2025-01-17T11:31:46.5691768Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5691832Z     
2025-01-17T11:31:46.5691913Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5692005Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5692087Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5692216Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5692294Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5692383Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5692487Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5692712Z 
2025-01-17T11:31:46.5692850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5693085Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5693234Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5693300Z     ???
2025-01-17T11:31:46.5693409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5693413Z 
2025-01-17T11:31:46.5693475Z >   ???
2025-01-17T11:31:46.5693605Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5693668Z E   
2025-01-17T11:31:46.5693802Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5693911Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5693985Z E          ...
2025-01-17T11:31:46.5694068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5694198Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5694310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5694386Z E          ...
2025-01-17T11:31:46.5694469Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5694586Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5694689Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5694693Z 
2025-01-17T11:31:46.5694776Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5695041Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-17T11:31:46.5695046Z 
2025-01-17T11:31:46.5695166Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5695289Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5695376Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5695508Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5695621Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5695718Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5695788Z err_msg = None
2025-01-17T11:31:46.5695792Z 
2025-01-17T11:31:46.5695900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5695974Z         if err_msg is None:
2025-01-17T11:31:46.5696069Z             if left.shape != right.shape:
2025-01-17T11:31:46.5696148Z                 raise_assert_detail(
2025-01-17T11:31:46.5696288Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5696355Z                 )
2025-01-17T11:31:46.5696424Z     
2025-01-17T11:31:46.5696490Z             diff = 0
2025-01-17T11:31:46.5696599Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5696685Z                 # count up differences
2025-01-17T11:31:46.5696850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5696924Z                     diff += 1
2025-01-17T11:31:46.5696998Z     
2025-01-17T11:31:46.5697079Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5697209Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5697376Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5697482Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5697555Z E           
2025-01-17T11:31:46.5697660Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5697919Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5698284Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5698369Z 
2025-01-17T11:31:46.5698665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5698670Z 
2025-01-17T11:31:46.5698844Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5698849Z 
2025-01-17T11:31:46.5699065Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e6c0>
2025-01-17T11:31:46.5699227Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5699301Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5699311Z 
2025-01-17T11:31:46.5699445Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5699557Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5699639Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5699704Z         try:
2025-01-17T11:31:46.5699841Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5699917Z         except KeyError:
2025-01-17T11:31:46.5700045Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5700112Z     
2025-01-17T11:31:46.5700192Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5700284Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5700760Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5700888Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5700967Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5701055Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5701164Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5701168Z 
2025-01-17T11:31:46.5701289Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5701400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5701541Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5701608Z     ???
2025-01-17T11:31:46.5701717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5701722Z 
2025-01-17T11:31:46.5701785Z >   ???
2025-01-17T11:31:46.5701912Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5701976Z E   
2025-01-17T11:31:46.5702103Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5702206Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5702277Z E          ...
2025-01-17T11:31:46.5702357Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5702483Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5702688Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5702767Z E          ...
2025-01-17T11:31:46.5702851Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5702970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5703070Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5703075Z 
2025-01-17T11:31:46.5703159Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5703554Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-17T11:31:46.5703564Z 
2025-01-17T11:31:46.5703774Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5703994Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5704143Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5704537Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5704882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5705034Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5705157Z err_msg = None
2025-01-17T11:31:46.5705164Z 
2025-01-17T11:31:46.5705339Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5705466Z         if err_msg is None:
2025-01-17T11:31:46.5705619Z             if left.shape != right.shape:
2025-01-17T11:31:46.5705748Z                 raise_assert_detail(
2025-01-17T11:31:46.5705983Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5706092Z                 )
2025-01-17T11:31:46.5706205Z     
2025-01-17T11:31:46.5706316Z             diff = 0
2025-01-17T11:31:46.5706493Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5706633Z                 # count up differences
2025-01-17T11:31:46.5706913Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5707040Z                     diff += 1
2025-01-17T11:31:46.5707152Z     
2025-01-17T11:31:46.5707297Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5707435Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5707604Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5707709Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5707782Z E           
2025-01-17T11:31:46.5707885Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5708142Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5708410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5708420Z 
2025-01-17T11:31:46.5708714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5708718Z 
2025-01-17T11:31:46.5708882Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5708886Z 
2025-01-17T11:31:46.5709100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89e780>
2025-01-17T11:31:46.5709303Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>, attr = 'f_lu'
2025-01-17T11:31:46.5709313Z 
2025-01-17T11:31:46.5709442Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5709557Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5709635Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5709706Z         try:
2025-01-17T11:31:46.5709838Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5709917Z         except KeyError:
2025-01-17T11:31:46.5710048Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5710116Z     
2025-01-17T11:31:46.5710196Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5710286Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5710384Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5710512Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5710597Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5710680Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5710903Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5710908Z 
2025-01-17T11:31:46.5711103Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5711212Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5711348Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5711424Z     ???
2025-01-17T11:31:46.5711523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5711528Z 
2025-01-17T11:31:46.5711595Z >   ???
2025-01-17T11:31:46.5711714Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5711783Z E   
2025-01-17T11:31:46.5711904Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5712012Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5712079Z E          ...
2025-01-17T11:31:46.5712166Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5712295Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5712404Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5712474Z E          ...
2025-01-17T11:31:46.5712661Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5712788Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5712887Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5712901Z 
2025-01-17T11:31:46.5712983Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5713279Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-17T11:31:46.5713291Z 
2025-01-17T11:31:46.5713502Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ed80>
2025-01-17T11:31:46.5713661Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5713752Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.5713762Z 
2025-01-17T11:31:46.5713888Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5714000Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5714077Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5714148Z         try:
2025-01-17T11:31:46.5714278Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5714357Z         except KeyError:
2025-01-17T11:31:46.5714486Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5714555Z     
2025-01-17T11:31:46.5714633Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5714724Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5714805Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5714933Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5715011Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5715098Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5715204Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5715274Z             else:
2025-01-17T11:31:46.5715365Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5715465Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5715474Z 
2025-01-17T11:31:46.5715589Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5715691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5715831Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5715899Z     ???
2025-01-17T11:31:46.5716003Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5716007Z 
2025-01-17T11:31:46.5716069Z >   ???
2025-01-17T11:31:46.5716242Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.5716304Z E   
2025-01-17T11:31:46.5716465Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.5716946Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5721920Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5726991Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5727415Z E   At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.5727422Z 
2025-01-17T11:31:46.5727505Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5727785Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-17T11:31:46.5727790Z 
2025-01-17T11:31:46.5727909Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5728036Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5728130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5728260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5728382Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5728483Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5728554Z err_msg = None
2025-01-17T11:31:46.5728559Z 
2025-01-17T11:31:46.5728675Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5728750Z         if err_msg is None:
2025-01-17T11:31:46.5728842Z             if left.shape != right.shape:
2025-01-17T11:31:46.5728919Z                 raise_assert_detail(
2025-01-17T11:31:46.5729062Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5729127Z                 )
2025-01-17T11:31:46.5729199Z     
2025-01-17T11:31:46.5729266Z             diff = 0
2025-01-17T11:31:46.5729369Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5729455Z                 # count up differences
2025-01-17T11:31:46.5729616Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5729697Z                     diff += 1
2025-01-17T11:31:46.5729764Z     
2025-01-17T11:31:46.5729850Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5729978Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5730143Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5730249Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5730320Z E           
2025-01-17T11:31:46.5730425Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5730687Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5730945Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5730954Z 
2025-01-17T11:31:46.5731251Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5731255Z 
2025-01-17T11:31:46.5731417Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5731427Z 
2025-01-17T11:31:46.5731640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ee40>
2025-01-17T11:31:46.5731798Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5731884Z attr = 'previous_beta_sobolev'
2025-01-17T11:31:46.5731889Z 
2025-01-17T11:31:46.5732017Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5732219Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5732374Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5732445Z         try:
2025-01-17T11:31:46.5732681Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5732763Z         except KeyError:
2025-01-17T11:31:46.5732893Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5732961Z     
2025-01-17T11:31:46.5733039Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5733130Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5733211Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5733337Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5733416Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5733503Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5733605Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5733682Z             else:
2025-01-17T11:31:46.5733770Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5733879Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5733884Z 
2025-01-17T11:31:46.5734001Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5734107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5734250Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5734314Z     ???
2025-01-17T11:31:46.5734421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5734426Z 
2025-01-17T11:31:46.5734489Z >   ???
2025-01-17T11:31:46.5734613Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5734677Z E   
2025-01-17T11:31:46.5734802Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5734905Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5734981Z E          ...
2025-01-17T11:31:46.5735062Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5735193Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5735306Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5735378Z E          ...
2025-01-17T11:31:46.5735464Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5735590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5735688Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5735692Z 
2025-01-17T11:31:46.5735779Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5736037Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-17T11:31:46.5736042Z 
2025-01-17T11:31:46.5736171Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5736296Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5736399Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5736529Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5736651Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5736738Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5736815Z err_msg = None
2025-01-17T11:31:46.5736819Z 
2025-01-17T11:31:46.5736922Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5737003Z         if err_msg is None:
2025-01-17T11:31:46.5737093Z             if left.shape != right.shape:
2025-01-17T11:31:46.5737176Z                 raise_assert_detail(
2025-01-17T11:31:46.5737316Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5737381Z                 )
2025-01-17T11:31:46.5737588Z     
2025-01-17T11:31:46.5737656Z             diff = 0
2025-01-17T11:31:46.5737768Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5737955Z                 # count up differences
2025-01-17T11:31:46.5738125Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5738198Z                     diff += 1
2025-01-17T11:31:46.5738265Z     
2025-01-17T11:31:46.5738349Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5738483Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5738644Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5738754Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5738821Z E           
2025-01-17T11:31:46.5738939Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5739194Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5739463Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5739468Z 
2025-01-17T11:31:46.5739761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5739766Z 
2025-01-17T11:31:46.5739934Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5739938Z 
2025-01-17T11:31:46.5740151Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ef00>
2025-01-17T11:31:46.5740321Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5740401Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5740406Z 
2025-01-17T11:31:46.5740545Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5740654Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5740738Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5740816Z         try:
2025-01-17T11:31:46.5741065Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5741195Z         except KeyError:
2025-01-17T11:31:46.5741416Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5741522Z     
2025-01-17T11:31:46.5741659Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5741803Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5741942Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5742150Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5742247Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5742331Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5742441Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5742514Z             else:
2025-01-17T11:31:46.5742701Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5742808Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5742813Z 
2025-01-17T11:31:46.5742932Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5743047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5743186Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5743257Z     ???
2025-01-17T11:31:46.5743358Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5743362Z 
2025-01-17T11:31:46.5743427Z >   ???
2025-01-17T11:31:46.5743551Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5743759Z E   
2025-01-17T11:31:46.5743883Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5744095Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5744162Z E          ...
2025-01-17T11:31:46.5744248Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5744370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5744480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5744545Z E          ...
2025-01-17T11:31:46.5744630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5744747Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5744853Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5744858Z 
2025-01-17T11:31:46.5744941Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5745198Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-17T11:31:46.5745215Z 
2025-01-17T11:31:46.5745338Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5745466Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5745556Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5745684Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5745799Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5745889Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5745958Z err_msg = None
2025-01-17T11:31:46.5745961Z 
2025-01-17T11:31:46.5746063Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5746142Z         if err_msg is None:
2025-01-17T11:31:46.5746230Z             if left.shape != right.shape:
2025-01-17T11:31:46.5746317Z                 raise_assert_detail(
2025-01-17T11:31:46.5746454Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5746532Z                 )
2025-01-17T11:31:46.5746593Z     
2025-01-17T11:31:46.5746663Z             diff = 0
2025-01-17T11:31:46.5746767Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5746854Z                 # count up differences
2025-01-17T11:31:46.5747016Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5747092Z                     diff += 1
2025-01-17T11:31:46.5747156Z     
2025-01-17T11:31:46.5747242Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5747369Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5747536Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5747641Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5747717Z E           
2025-01-17T11:31:46.5747821Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5748079Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5748340Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5748345Z 
2025-01-17T11:31:46.5748640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5748731Z 
2025-01-17T11:31:46.5748902Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5748978Z 
2025-01-17T11:31:46.5749198Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89efc0>
2025-01-17T11:31:46.5749354Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5749433Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5749437Z 
2025-01-17T11:31:46.5749565Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5749678Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5749757Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5749827Z         try:
2025-01-17T11:31:46.5749959Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5750039Z         except KeyError:
2025-01-17T11:31:46.5750170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5750238Z     
2025-01-17T11:31:46.5750322Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5750410Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5750503Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5750626Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5750710Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5750794Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5750902Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5751178Z             else:
2025-01-17T11:31:46.5751340Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5751512Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5751517Z 
2025-01-17T11:31:46.5751666Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5751843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5751998Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5752222Z     ???
2025-01-17T11:31:46.5752361Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5752371Z 
2025-01-17T11:31:46.5752503Z >   ???
2025-01-17T11:31:46.5752811Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5752930Z E   
2025-01-17T11:31:46.5753152Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5753340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5753440Z E          ...
2025-01-17T11:31:46.5753594Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5753750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5753971Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5754086Z E          ...
2025-01-17T11:31:46.5754233Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5754383Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5754528Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5754587Z 
2025-01-17T11:31:46.5754693Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5755075Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-17T11:31:46.5755081Z 
2025-01-17T11:31:46.5755235Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5755425Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5755548Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5755745Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5756015Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5756157Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5762831Z err_msg = None
2025-01-17T11:31:46.5762861Z 
2025-01-17T11:31:46.5763068Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5763413Z         if err_msg is None:
2025-01-17T11:31:46.5763565Z             if left.shape != right.shape:
2025-01-17T11:31:46.5763697Z                 raise_assert_detail(
2025-01-17T11:31:46.5763936Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5764018Z                 )
2025-01-17T11:31:46.5764081Z     
2025-01-17T11:31:46.5764150Z             diff = 0
2025-01-17T11:31:46.5764264Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5764349Z                 # count up differences
2025-01-17T11:31:46.5764521Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5764593Z                     diff += 1
2025-01-17T11:31:46.5764661Z     
2025-01-17T11:31:46.5764746Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5764893Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5765062Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5765187Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5765254Z E           
2025-01-17T11:31:46.5765366Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5765624Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5765890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5765899Z 
2025-01-17T11:31:46.5766214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5766219Z 
2025-01-17T11:31:46.5766395Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5766399Z 
2025-01-17T11:31:46.5766619Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89f140>
2025-01-17T11:31:46.5766782Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817642ecc0>
2025-01-17T11:31:46.5766855Z attr = 'j_blues'
2025-01-17T11:31:46.5766859Z 
2025-01-17T11:31:46.5766997Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5767107Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5767191Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5767257Z         try:
2025-01-17T11:31:46.5767398Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5767478Z         except KeyError:
2025-01-17T11:31:46.5767619Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5767691Z     
2025-01-17T11:31:46.5767778Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5767866Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5767954Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5768080Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5768165Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5768247Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5768353Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5768419Z             else:
2025-01-17T11:31:46.5768507Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5768612Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5768616Z 
2025-01-17T11:31:46.5768877Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5768991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5769230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5769298Z     ???
2025-01-17T11:31:46.5769401Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5769406Z 
2025-01-17T11:31:46.5769475Z >   ???
2025-01-17T11:31:46.5769595Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5769659Z E   
2025-01-17T11:31:46.5769780Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5769886Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5769952Z E          ...
2025-01-17T11:31:46.5770039Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5770157Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5770267Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5770337Z E          ...
2025-01-17T11:31:46.5770419Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5770542Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5770646Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5770651Z 
2025-01-17T11:31:46.5770733Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5770925Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-17T11:31:46.5770929Z 
2025-01-17T11:31:46.5771054Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5771186Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5771278Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5771413Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5771533Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5771629Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5771698Z err_msg = None
2025-01-17T11:31:46.5771702Z 
2025-01-17T11:31:46.5771813Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5771890Z         if err_msg is None:
2025-01-17T11:31:46.5771981Z             if left.shape != right.shape:
2025-01-17T11:31:46.5772065Z                 raise_assert_detail(
2025-01-17T11:31:46.5772210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5772280Z                 )
2025-01-17T11:31:46.5772343Z     
2025-01-17T11:31:46.5772418Z             diff = 0
2025-01-17T11:31:46.5772522Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5772838Z                 # count up differences
2025-01-17T11:31:46.5773010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5773094Z                     diff += 1
2025-01-17T11:31:46.5773156Z     
2025-01-17T11:31:46.5773247Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5773375Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5773544Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5773649Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5773720Z E           
2025-01-17T11:31:46.5773823Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5774078Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5774475Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5774585Z 
2025-01-17T11:31:46.5774892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5774898Z 
2025-01-17T11:31:46.5775061Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5775066Z 
2025-01-17T11:31:46.5775286Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89fec0>
2025-01-17T11:31:46.5775444Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5775516Z attr = 'lines'
2025-01-17T11:31:46.5775520Z 
2025-01-17T11:31:46.5775649Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5775768Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5775845Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5775922Z         try:
2025-01-17T11:31:46.5776058Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5776137Z         except KeyError:
2025-01-17T11:31:46.5776269Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5776337Z     
2025-01-17T11:31:46.5776417Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5776509Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5776591Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5776717Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5776797Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5776878Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5776983Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5777049Z             else:
2025-01-17T11:31:46.5777149Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5777249Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5777258Z 
2025-01-17T11:31:46.5777381Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5777488Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5777638Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5777701Z     ???
2025-01-17T11:31:46.5777809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5777813Z 
2025-01-17T11:31:46.5777875Z >   ???
2025-01-17T11:31:46.5778001Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5778063Z E   
2025-01-17T11:31:46.5778187Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5778289Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5778360Z E          ...
2025-01-17T11:31:46.5778444Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5778569Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5778679Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5778744Z E          ...
2025-01-17T11:31:46.5778827Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5778943Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5779043Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5779048Z 
2025-01-17T11:31:46.5779129Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5779359Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-17T11:31:46.5779364Z 
2025-01-17T11:31:46.5779577Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e89ff80>
2025-01-17T11:31:46.5779741Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5779911Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5779915Z 
2025-01-17T11:31:46.5780046Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5780232Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5780313Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5780379Z         try:
2025-01-17T11:31:46.5780516Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5780592Z         except KeyError:
2025-01-17T11:31:46.5780725Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5780788Z     
2025-01-17T11:31:46.5780871Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5780957Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5781042Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5781166Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5781251Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5781341Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5781445Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5781454Z 
2025-01-17T11:31:46.5781569Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5781676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5781680Z 
2025-01-17T11:31:46.5781812Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5781893Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5781994Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5782068Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5782204Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5782285Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5782471Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5782735Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5782868Z err_msg = None
2025-01-17T11:31:46.5782885Z 
2025-01-17T11:31:46.5783058Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5783195Z         if err_msg is None:
2025-01-17T11:31:46.5783342Z             if left.shape != right.shape:
2025-01-17T11:31:46.5783476Z                 raise_assert_detail(
2025-01-17T11:31:46.5783701Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5783816Z                 )
2025-01-17T11:31:46.5783922Z     
2025-01-17T11:31:46.5784040Z             diff = 0
2025-01-17T11:31:46.5784211Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5784349Z                 # count up differences
2025-01-17T11:31:46.5784624Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5784746Z                     diff += 1
2025-01-17T11:31:46.5784860Z     
2025-01-17T11:31:46.5784998Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5785206Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5785491Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5785662Z E           AssertionError: Series are different
2025-01-17T11:31:46.5785773Z E           
2025-01-17T11:31:46.5785937Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5786348Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5786676Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5787248Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5787255Z 
2025-01-17T11:31:46.5787562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5787791Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-17T11:31:46.5787801Z 
2025-01-17T11:31:46.5788015Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4080>
2025-01-17T11:31:46.5788182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5788268Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5788272Z 
2025-01-17T11:31:46.5788405Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5788515Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5788595Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5788658Z         try:
2025-01-17T11:31:46.5788792Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5788865Z         except KeyError:
2025-01-17T11:31:46.5788999Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5789060Z     
2025-01-17T11:31:46.5789140Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5789224Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5789315Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5789441Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5789529Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5789611Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5789715Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5789724Z 
2025-01-17T11:31:46.5789845Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5789951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5789960Z 
2025-01-17T11:31:46.5790090Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5790171Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5790275Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5790350Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5790492Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5790568Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5790673Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5790745Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5790821Z err_msg = None
2025-01-17T11:31:46.5790825Z 
2025-01-17T11:31:46.5790928Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5791010Z         if err_msg is None:
2025-01-17T11:31:46.5791102Z             if left.shape != right.shape:
2025-01-17T11:31:46.5791186Z                 raise_assert_detail(
2025-01-17T11:31:46.5791323Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5791393Z                 )
2025-01-17T11:31:46.5791458Z     
2025-01-17T11:31:46.5791531Z             diff = 0
2025-01-17T11:31:46.5791639Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5791817Z                 # count up differences
2025-01-17T11:31:46.5791979Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5792151Z                     diff += 1
2025-01-17T11:31:46.5792214Z     
2025-01-17T11:31:46.5792293Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5792423Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5792780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5792893Z E           AssertionError: Series are different
2025-01-17T11:31:46.5792959Z E           
2025-01-17T11:31:46.5793058Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5793438Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5793874Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5794244Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5794256Z 
2025-01-17T11:31:46.5794553Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5794744Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-17T11:31:46.5794748Z 
2025-01-17T11:31:46.5794867Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5794991Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5795083Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5795210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5795323Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5795413Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5795486Z err_msg = None
2025-01-17T11:31:46.5795490Z 
2025-01-17T11:31:46.5795596Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5795676Z         if err_msg is None:
2025-01-17T11:31:46.5795768Z             if left.shape != right.shape:
2025-01-17T11:31:46.5795844Z                 raise_assert_detail(
2025-01-17T11:31:46.5795985Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5796048Z                 )
2025-01-17T11:31:46.5796114Z     
2025-01-17T11:31:46.5796181Z             diff = 0
2025-01-17T11:31:46.5796287Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5796383Z                 # count up differences
2025-01-17T11:31:46.5796542Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5796616Z                     diff += 1
2025-01-17T11:31:46.5796679Z     
2025-01-17T11:31:46.5796762Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5797013Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5797175Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5797387Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5797457Z E           
2025-01-17T11:31:46.5797559Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5797820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5798080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5798098Z 
2025-01-17T11:31:46.5798383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5798387Z 
2025-01-17T11:31:46.5798554Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5798559Z 
2025-01-17T11:31:46.5798774Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c42c0>
2025-01-17T11:31:46.5798968Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>, attr = 'nu'
2025-01-17T11:31:46.5798972Z 
2025-01-17T11:31:46.5799102Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5799215Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5799297Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5799368Z         try:
2025-01-17T11:31:46.5799497Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5799576Z         except KeyError:
2025-01-17T11:31:46.5799709Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5799776Z     
2025-01-17T11:31:46.5799861Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5799947Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5800032Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5800155Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5800239Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5800324Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5800429Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5800433Z 
2025-01-17T11:31:46.5800549Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5800661Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5800811Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5800881Z     ???
2025-01-17T11:31:46.5800985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5800996Z 
2025-01-17T11:31:46.5801057Z >   ???
2025-01-17T11:31:46.5801179Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5801241Z E   
2025-01-17T11:31:46.5801365Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5801465Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5801532Z E          ...
2025-01-17T11:31:46.5801612Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5801735Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5801838Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5801906Z E          ...
2025-01-17T11:31:46.5801982Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5802095Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5802280Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5802357Z 
2025-01-17T11:31:46.5802439Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5802812Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-17T11:31:46.5802819Z 
2025-01-17T11:31:46.5802941Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5803068Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5803157Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5803281Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5803393Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5803481Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5803556Z err_msg = None
2025-01-17T11:31:46.5803560Z 
2025-01-17T11:31:46.5803664Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5803743Z         if err_msg is None:
2025-01-17T11:31:46.5803832Z             if left.shape != right.shape:
2025-01-17T11:31:46.5803908Z                 raise_assert_detail(
2025-01-17T11:31:46.5804041Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5804104Z                 )
2025-01-17T11:31:46.5804169Z     
2025-01-17T11:31:46.5804234Z             diff = 0
2025-01-17T11:31:46.5804340Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5804419Z                 # count up differences
2025-01-17T11:31:46.5804581Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5804651Z                     diff += 1
2025-01-17T11:31:46.5804717Z     
2025-01-17T11:31:46.5804796Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5804929Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5805086Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5805193Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5805263Z E           
2025-01-17T11:31:46.5805365Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5805620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5805875Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5805885Z 
2025-01-17T11:31:46.5806177Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5806181Z 
2025-01-17T11:31:46.5806342Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5806347Z 
2025-01-17T11:31:46.5806558Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4380>
2025-01-17T11:31:46.5806719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5806793Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5806797Z 
2025-01-17T11:31:46.5806928Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5807033Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5807113Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5807184Z         try:
2025-01-17T11:31:46.5807608Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5807735Z         except KeyError:
2025-01-17T11:31:46.5808099Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5808201Z     
2025-01-17T11:31:46.5808331Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5808488Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5808577Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5808707Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5808785Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5808876Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5808980Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5808984Z 
2025-01-17T11:31:46.5809105Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5809208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5809356Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5809419Z     ???
2025-01-17T11:31:46.5809521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5809531Z 
2025-01-17T11:31:46.5809593Z >   ???
2025-01-17T11:31:46.5809712Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5809774Z E   
2025-01-17T11:31:46.5809895Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5809996Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5810063Z E          ...
2025-01-17T11:31:46.5810141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5810262Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5810363Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5810438Z E          ...
2025-01-17T11:31:46.5810517Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5810637Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5810737Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5810746Z 
2025-01-17T11:31:46.5810827Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5811015Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-17T11:31:46.5811019Z 
2025-01-17T11:31:46.5811136Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5811256Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5811342Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5811468Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5811582Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5811670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5811745Z err_msg = None
2025-01-17T11:31:46.5811748Z 
2025-01-17T11:31:46.5811857Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5811934Z         if err_msg is None:
2025-01-17T11:31:46.5812024Z             if left.shape != right.shape:
2025-01-17T11:31:46.5812101Z                 raise_assert_detail(
2025-01-17T11:31:46.5812240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5812304Z                 )
2025-01-17T11:31:46.5812368Z     
2025-01-17T11:31:46.5812433Z             diff = 0
2025-01-17T11:31:46.5812689Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5812806Z                 # count up differences
2025-01-17T11:31:46.5812976Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5813047Z                     diff += 1
2025-01-17T11:31:46.5813109Z     
2025-01-17T11:31:46.5813189Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5813468Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5813746Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5813856Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5813924Z E           
2025-01-17T11:31:46.5814029Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5814285Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5814539Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5814557Z 
2025-01-17T11:31:46.5814854Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5814859Z 
2025-01-17T11:31:46.5815022Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5815027Z 
2025-01-17T11:31:46.5815242Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4440>
2025-01-17T11:31:46.5815440Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>, attr = 'f_lu'
2025-01-17T11:31:46.5815445Z 
2025-01-17T11:31:46.5815572Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5815685Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5815761Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5815830Z         try:
2025-01-17T11:31:46.5815964Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5816048Z         except KeyError:
2025-01-17T11:31:46.5816184Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5816256Z     
2025-01-17T11:31:46.5816335Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5816420Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5816504Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5816628Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5816708Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5816789Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5816894Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5816898Z 
2025-01-17T11:31:46.5817016Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5817122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5817256Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5817325Z     ???
2025-01-17T11:31:46.5817425Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5817434Z 
2025-01-17T11:31:46.5817499Z >   ???
2025-01-17T11:31:46.5817617Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5817680Z E   
2025-01-17T11:31:46.5817796Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5817900Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5817964Z E          ...
2025-01-17T11:31:46.5818045Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5818165Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5818270Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5818336Z E          ...
2025-01-17T11:31:46.5818412Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5818641Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5818738Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5818822Z 
2025-01-17T11:31:46.5818904Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5819134Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-17T11:31:46.5819143Z 
2025-01-17T11:31:46.5819354Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4a40>
2025-01-17T11:31:46.5819509Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5819595Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.5819600Z 
2025-01-17T11:31:46.5819725Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5819832Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5819906Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5819972Z         try:
2025-01-17T11:31:46.5820101Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5820182Z         except KeyError:
2025-01-17T11:31:46.5820313Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5820384Z     
2025-01-17T11:31:46.5820463Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5820551Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5820662Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5820789Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5820865Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5820948Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5821048Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5821116Z             else:
2025-01-17T11:31:46.5821202Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5821299Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5821306Z 
2025-01-17T11:31:46.5821420Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5821525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5821667Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5821730Z     ???
2025-01-17T11:31:46.5821833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5821838Z 
2025-01-17T11:31:46.5821898Z >   ???
2025-01-17T11:31:46.5822071Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.5822132Z E   
2025-01-17T11:31:46.5822289Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.5822748Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5828307Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5834060Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.5834283Z E   At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.5834289Z 
2025-01-17T11:31:46.5834378Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5834606Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-17T11:31:46.5834616Z 
2025-01-17T11:31:46.5834741Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5834867Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5834960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5835090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5835206Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5835296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5835366Z err_msg = None
2025-01-17T11:31:46.5835371Z 
2025-01-17T11:31:46.5835478Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5835687Z         if err_msg is None:
2025-01-17T11:31:46.5835780Z             if left.shape != right.shape:
2025-01-17T11:31:46.5835961Z                 raise_assert_detail(
2025-01-17T11:31:46.5836101Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5836165Z                 )
2025-01-17T11:31:46.5836230Z     
2025-01-17T11:31:46.5836295Z             diff = 0
2025-01-17T11:31:46.5836399Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5836483Z                 # count up differences
2025-01-17T11:31:46.5836644Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5836716Z                     diff += 1
2025-01-17T11:31:46.5836777Z     
2025-01-17T11:31:46.5836861Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5836987Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5837152Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5837265Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5837341Z E           
2025-01-17T11:31:46.5837445Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5837702Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5837955Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5837960Z 
2025-01-17T11:31:46.5838261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5838270Z 
2025-01-17T11:31:46.5838431Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5838440Z 
2025-01-17T11:31:46.5838651Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4b00>
2025-01-17T11:31:46.5838806Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5838897Z attr = 'previous_beta_sobolev'
2025-01-17T11:31:46.5838901Z 
2025-01-17T11:31:46.5839040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5839151Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5839225Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5839299Z         try:
2025-01-17T11:31:46.5839429Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5839507Z         except KeyError:
2025-01-17T11:31:46.5839639Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5839702Z     
2025-01-17T11:31:46.5839781Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5839874Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5839953Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5840077Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5840157Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5840241Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5840341Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5840409Z             else:
2025-01-17T11:31:46.5840496Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5840594Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5840602Z 
2025-01-17T11:31:46.5840720Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5840826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5841078Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5841217Z     ???
2025-01-17T11:31:46.5841319Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5841324Z 
2025-01-17T11:31:46.5841385Z >   ???
2025-01-17T11:31:46.5841505Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5841566Z E   
2025-01-17T11:31:46.5841688Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5841791Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5841860Z E          ...
2025-01-17T11:31:46.5841940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5842064Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5842166Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5842232Z E          ...
2025-01-17T11:31:46.5842309Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5842436Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5842723Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5842733Z 
2025-01-17T11:31:46.5842835Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5843029Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-17T11:31:46.5843034Z 
2025-01-17T11:31:46.5843156Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5843276Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5843368Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5843492Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5843609Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5843700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5843771Z err_msg = None
2025-01-17T11:31:46.5843781Z 
2025-01-17T11:31:46.5843883Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5843958Z         if err_msg is None:
2025-01-17T11:31:46.5844046Z             if left.shape != right.shape:
2025-01-17T11:31:46.5844123Z                 raise_assert_detail(
2025-01-17T11:31:46.5844257Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5844320Z                 )
2025-01-17T11:31:46.5844383Z     
2025-01-17T11:31:46.5844448Z             diff = 0
2025-01-17T11:31:46.5844551Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5844631Z                 # count up differences
2025-01-17T11:31:46.5844794Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5844866Z                     diff += 1
2025-01-17T11:31:46.5844936Z     
2025-01-17T11:31:46.5845019Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5845148Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5845310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5845416Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5845480Z E           
2025-01-17T11:31:46.5845586Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5845836Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5846095Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5846460Z 
2025-01-17T11:31:46.5846756Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5846761Z 
2025-01-17T11:31:46.5846920Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5846925Z 
2025-01-17T11:31:46.5847138Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4bc0>
2025-01-17T11:31:46.5847297Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5847372Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5847377Z 
2025-01-17T11:31:46.5847508Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5847615Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5847695Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5847765Z         try:
2025-01-17T11:31:46.5847897Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5847975Z         except KeyError:
2025-01-17T11:31:46.5848104Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5848167Z     
2025-01-17T11:31:46.5848247Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5848332Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5848415Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5848536Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5848613Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5848695Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5848795Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5848862Z             else:
2025-01-17T11:31:46.5848948Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5849048Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5849057Z 
2025-01-17T11:31:46.5849181Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5849290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5849423Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5849488Z     ???
2025-01-17T11:31:46.5849586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5849590Z 
2025-01-17T11:31:46.5849654Z >   ???
2025-01-17T11:31:46.5849768Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5849832Z E   
2025-01-17T11:31:46.5849950Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5850052Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5850118Z E          ...
2025-01-17T11:31:46.5850199Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5850316Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5850426Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5850493Z E          ...
2025-01-17T11:31:46.5850572Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5850686Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5850780Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5850787Z 
2025-01-17T11:31:46.5850871Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5851059Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-17T11:31:46.5851066Z 
2025-01-17T11:31:46.5851183Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5851299Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5851389Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5851600Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5851715Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5851880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5851954Z err_msg = None
2025-01-17T11:31:46.5851958Z 
2025-01-17T11:31:46.5852058Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5852138Z         if err_msg is None:
2025-01-17T11:31:46.5852223Z             if left.shape != right.shape:
2025-01-17T11:31:46.5852306Z                 raise_assert_detail(
2025-01-17T11:31:46.5852441Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5852511Z                 )
2025-01-17T11:31:46.5852742Z     
2025-01-17T11:31:46.5852822Z             diff = 0
2025-01-17T11:31:46.5852927Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5853012Z                 # count up differences
2025-01-17T11:31:46.5853184Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5853266Z                     diff += 1
2025-01-17T11:31:46.5853329Z     
2025-01-17T11:31:46.5853415Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5853541Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5853699Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5853807Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5853872Z E           
2025-01-17T11:31:46.5853983Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5854233Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5854493Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5854502Z 
2025-01-17T11:31:46.5854798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5854802Z 
2025-01-17T11:31:46.5854958Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5854963Z 
2025-01-17T11:31:46.5855178Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4c80>
2025-01-17T11:31:46.5855331Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5855406Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5855414Z 
2025-01-17T11:31:46.5855539Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5855649Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5855729Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5855810Z         try:
2025-01-17T11:31:46.5856048Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5856184Z         except KeyError:
2025-01-17T11:31:46.5856403Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5856511Z     
2025-01-17T11:31:46.5856641Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5856783Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5856923Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5857109Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5857195Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5857278Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5857527Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5857593Z             else:
2025-01-17T11:31:46.5857809Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5857908Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5857913Z 
2025-01-17T11:31:46.5858036Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5858139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5858279Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5858342Z     ???
2025-01-17T11:31:46.5858446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5858450Z 
2025-01-17T11:31:46.5858511Z >   ???
2025-01-17T11:31:46.5858632Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5858694Z E   
2025-01-17T11:31:46.5858814Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5858921Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5858997Z E          ...
2025-01-17T11:31:46.5859081Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5859198Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5859304Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5859369Z E          ...
2025-01-17T11:31:46.5859450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5859567Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5859669Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5859673Z 
2025-01-17T11:31:46.5859756Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5859949Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-17T11:31:46.5859954Z 
2025-01-17T11:31:46.5860068Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5860194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5860288Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5860415Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5860528Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5860618Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5860686Z err_msg = None
2025-01-17T11:31:46.5860690Z 
2025-01-17T11:31:46.5860796Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5860872Z         if err_msg is None:
2025-01-17T11:31:46.5860961Z             if left.shape != right.shape:
2025-01-17T11:31:46.5861039Z                 raise_assert_detail(
2025-01-17T11:31:46.5861177Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5861246Z                 )
2025-01-17T11:31:46.5861316Z     
2025-01-17T11:31:46.5861383Z             diff = 0
2025-01-17T11:31:46.5861487Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5861572Z                 # count up differences
2025-01-17T11:31:46.5861738Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5861808Z                     diff += 1
2025-01-17T11:31:46.5861872Z     
2025-01-17T11:31:46.5861960Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5862085Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5862245Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5862348Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5862414Z E           
2025-01-17T11:31:46.5862515Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5862881Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5863359Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5863371Z 
2025-01-17T11:31:46.5863664Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5863668Z 
2025-01-17T11:31:46.5863832Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5863836Z 
2025-01-17T11:31:46.5864049Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c4e00>
2025-01-17T11:31:46.5864211Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81561456a0>
2025-01-17T11:31:46.5864286Z attr = 'j_blues'
2025-01-17T11:31:46.5864290Z 
2025-01-17T11:31:46.5864425Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5864532Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5864615Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5864679Z         try:
2025-01-17T11:31:46.5864811Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5864888Z         except KeyError:
2025-01-17T11:31:46.5865016Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5865082Z     
2025-01-17T11:31:46.5865161Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5865252Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5865333Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5865465Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5865542Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5865636Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5865737Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5865804Z             else:
2025-01-17T11:31:46.5865957Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5866141Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5866149Z 
2025-01-17T11:31:46.5866352Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5866531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5866763Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5866876Z     ???
2025-01-17T11:31:46.5867049Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5867055Z 
2025-01-17T11:31:46.5867166Z >   ???
2025-01-17T11:31:46.5867372Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5867477Z E   
2025-01-17T11:31:46.5867729Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5867921Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5868037Z E          ...
2025-01-17T11:31:46.5868169Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5868372Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5868549Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5868668Z E          ...
2025-01-17T11:31:46.5868801Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5869006Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5869167Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5869175Z 
2025-01-17T11:31:46.5869318Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5869668Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-17T11:31:46.5869802Z 
2025-01-17T11:31:46.5870014Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5870318Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5870469Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5870679Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5870882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5871024Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5871145Z err_msg = None
2025-01-17T11:31:46.5871151Z 
2025-01-17T11:31:46.5871320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5871448Z         if err_msg is None:
2025-01-17T11:31:46.5871592Z             if left.shape != right.shape:
2025-01-17T11:31:46.5871736Z                 raise_assert_detail(
2025-01-17T11:31:46.5871958Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5872081Z                 )
2025-01-17T11:31:46.5872186Z     
2025-01-17T11:31:46.5872298Z             diff = 0
2025-01-17T11:31:46.5872474Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5872736Z                 # count up differences
2025-01-17T11:31:46.5873004Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5873084Z                     diff += 1
2025-01-17T11:31:46.5873151Z     
2025-01-17T11:31:46.5873233Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5873366Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5873531Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5873643Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5873719Z E           
2025-01-17T11:31:46.5873829Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5874090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5874346Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5874351Z 
2025-01-17T11:31:46.5874650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5874664Z 
2025-01-17T11:31:46.5874825Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5874834Z 
2025-01-17T11:31:46.5875056Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5b80>
2025-01-17T11:31:46.5875213Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5875281Z attr = 'lines'
2025-01-17T11:31:46.5875291Z 
2025-01-17T11:31:46.5875422Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5875531Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5875612Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5875677Z         try:
2025-01-17T11:31:46.5875815Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5875889Z         except KeyError:
2025-01-17T11:31:46.5876024Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5876087Z     
2025-01-17T11:31:46.5876306Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5876395Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5876601Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5876725Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5876810Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5876892Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5877000Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5877069Z             else:
2025-01-17T11:31:46.5877163Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5877263Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5877267Z 
2025-01-17T11:31:46.5877389Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5877497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5877637Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5877711Z     ???
2025-01-17T11:31:46.5877812Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5877831Z 
2025-01-17T11:31:46.5877892Z >   ???
2025-01-17T11:31:46.5878013Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5878080Z E   
2025-01-17T11:31:46.5878198Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5878304Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5878370Z E          ...
2025-01-17T11:31:46.5878454Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5878575Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5878683Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5878748Z E          ...
2025-01-17T11:31:46.5878830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5878944Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5879049Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5879053Z 
2025-01-17T11:31:46.5879139Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5879360Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-17T11:31:46.5879364Z 
2025-01-17T11:31:46.5879571Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5c40>
2025-01-17T11:31:46.5879729Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5879809Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5879814Z 
2025-01-17T11:31:46.5879944Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5880049Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5880129Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5880194Z         try:
2025-01-17T11:31:46.5880327Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5880409Z         except KeyError:
2025-01-17T11:31:46.5880535Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5880605Z     
2025-01-17T11:31:46.5880684Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5880773Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5880855Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5880980Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5881057Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5881143Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5881241Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5881245Z 
2025-01-17T11:31:46.5881362Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5881463Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5881468Z 
2025-01-17T11:31:46.5881594Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5881762Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5881868Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5882039Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5882174Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5882251Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5882354Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5882424Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5882497Z err_msg = None
2025-01-17T11:31:46.5882501Z 
2025-01-17T11:31:46.5882795Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5882937Z         if err_msg is None:
2025-01-17T11:31:46.5883094Z             if left.shape != right.shape:
2025-01-17T11:31:46.5883241Z                 raise_assert_detail(
2025-01-17T11:31:46.5883473Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5883582Z                 )
2025-01-17T11:31:46.5883700Z     
2025-01-17T11:31:46.5883810Z             diff = 0
2025-01-17T11:31:46.5883990Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5884126Z                 # count up differences
2025-01-17T11:31:46.5884407Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5884526Z                     diff += 1
2025-01-17T11:31:46.5884639Z     
2025-01-17T11:31:46.5884772Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5884988Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5885264Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5885435Z E           AssertionError: Series are different
2025-01-17T11:31:46.5885545Z E           
2025-01-17T11:31:46.5885708Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5886268Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5886604Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5886926Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5886944Z 
2025-01-17T11:31:46.5887245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5887464Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-17T11:31:46.5887469Z 
2025-01-17T11:31:46.5887682Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5d00>
2025-01-17T11:31:46.5887842Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5887924Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5887928Z 
2025-01-17T11:31:46.5888059Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5888165Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5888389Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5888456Z         try:
2025-01-17T11:31:46.5888690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5888768Z         except KeyError:
2025-01-17T11:31:46.5888899Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5888964Z     
2025-01-17T11:31:46.5889044Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5889133Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5889214Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5889341Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5889421Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5889507Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5889609Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5889613Z 
2025-01-17T11:31:46.5889733Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5889844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5889856Z 
2025-01-17T11:31:46.5889983Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5890061Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5890162Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5890236Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5890369Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5890445Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5890553Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5890623Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5890696Z err_msg = None
2025-01-17T11:31:46.5890701Z 
2025-01-17T11:31:46.5890800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5890883Z         if err_msg is None:
2025-01-17T11:31:46.5890969Z             if left.shape != right.shape:
2025-01-17T11:31:46.5891048Z                 raise_assert_detail(
2025-01-17T11:31:46.5891183Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5891249Z                 )
2025-01-17T11:31:46.5891315Z     
2025-01-17T11:31:46.5891381Z             diff = 0
2025-01-17T11:31:46.5891486Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5891565Z                 # count up differences
2025-01-17T11:31:46.5891728Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5891798Z                     diff += 1
2025-01-17T11:31:46.5891863Z     
2025-01-17T11:31:46.5891940Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5892067Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5892229Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5892326Z E           AssertionError: Series are different
2025-01-17T11:31:46.5892395Z E           
2025-01-17T11:31:46.5892495Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5892978Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5893350Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5893939Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5893950Z 
2025-01-17T11:31:46.5894247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5894433Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-17T11:31:46.5894437Z 
2025-01-17T11:31:46.5894553Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5894678Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5894774Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5894899Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5895012Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5895101Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5895170Z err_msg = None
2025-01-17T11:31:46.5895174Z 
2025-01-17T11:31:46.5895274Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5895351Z         if err_msg is None:
2025-01-17T11:31:46.5895437Z             if left.shape != right.shape:
2025-01-17T11:31:46.5895516Z                 raise_assert_detail(
2025-01-17T11:31:46.5895648Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5895727Z                 )
2025-01-17T11:31:46.5895790Z     
2025-01-17T11:31:46.5895863Z             diff = 0
2025-01-17T11:31:46.5895971Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5896055Z                 # count up differences
2025-01-17T11:31:46.5896215Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5896290Z                     diff += 1
2025-01-17T11:31:46.5896353Z     
2025-01-17T11:31:46.5896437Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5896562Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5896728Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5896834Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5896904Z E           
2025-01-17T11:31:46.5897007Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5897262Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5897532Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5897537Z 
2025-01-17T11:31:46.5897829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5897833Z 
2025-01-17T11:31:46.5897994Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5897999Z 
2025-01-17T11:31:46.5898402Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c5f40>
2025-01-17T11:31:46.5898599Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>, attr = 'nu'
2025-01-17T11:31:46.5898683Z 
2025-01-17T11:31:46.5898820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5898928Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5899017Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5899083Z         try:
2025-01-17T11:31:46.5899221Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5899294Z         except KeyError:
2025-01-17T11:31:46.5899427Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5899493Z     
2025-01-17T11:31:46.5899577Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5899664Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5899752Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5899877Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5899964Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5900057Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5900159Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5900163Z 
2025-01-17T11:31:46.5900285Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5900396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5900543Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5900608Z     ???
2025-01-17T11:31:46.5900718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5900722Z 
2025-01-17T11:31:46.5900786Z >   ???
2025-01-17T11:31:46.5900913Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5900981Z E   
2025-01-17T11:31:46.5901112Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5901223Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5901296Z E          ...
2025-01-17T11:31:46.5901384Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5901512Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5901615Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5901684Z E          ...
2025-01-17T11:31:46.5901764Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5901882Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5901982Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5901986Z 
2025-01-17T11:31:46.5902073Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5902266Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-17T11:31:46.5902271Z 
2025-01-17T11:31:46.5902395Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5902525Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5902732Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5902856Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5902978Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5903065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5903134Z err_msg = None
2025-01-17T11:31:46.5903143Z 
2025-01-17T11:31:46.5903247Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5903324Z         if err_msg is None:
2025-01-17T11:31:46.5903418Z             if left.shape != right.shape:
2025-01-17T11:31:46.5903497Z                 raise_assert_detail(
2025-01-17T11:31:46.5903638Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5903860Z                 )
2025-01-17T11:31:46.5903928Z     
2025-01-17T11:31:46.5903995Z             diff = 0
2025-01-17T11:31:46.5904206Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5904286Z                 # count up differences
2025-01-17T11:31:46.5904450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5904521Z                     diff += 1
2025-01-17T11:31:46.5904591Z     
2025-01-17T11:31:46.5904674Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5904805Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5904967Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5905079Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5905145Z E           
2025-01-17T11:31:46.5905250Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5905514Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5905784Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5905789Z 
2025-01-17T11:31:46.5906080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5906085Z 
2025-01-17T11:31:46.5906252Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5906256Z 
2025-01-17T11:31:46.5906471Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6000>
2025-01-17T11:31:46.5906641Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5906722Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5906727Z 
2025-01-17T11:31:46.5906865Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5906974Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5907061Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5907126Z         try:
2025-01-17T11:31:46.5907260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5907333Z         except KeyError:
2025-01-17T11:31:46.5907467Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5907532Z     
2025-01-17T11:31:46.5907618Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5907707Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5907791Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5907929Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5908010Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5908102Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5908206Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5908210Z 
2025-01-17T11:31:46.5908335Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5908443Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5908584Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5908648Z     ???
2025-01-17T11:31:46.5908756Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5908761Z 
2025-01-17T11:31:46.5908823Z >   ???
2025-01-17T11:31:46.5908945Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5909017Z E   
2025-01-17T11:31:46.5909140Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5909331Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5909399Z E          ...
2025-01-17T11:31:46.5909555Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5909679Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5909782Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5909850Z E          ...
2025-01-17T11:31:46.5909927Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5910046Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5910144Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5910148Z 
2025-01-17T11:31:46.5910237Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5910417Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-17T11:31:46.5910422Z 
2025-01-17T11:31:46.5910548Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5910672Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5910770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5910892Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5911005Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5911098Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5911166Z err_msg = None
2025-01-17T11:31:46.5911174Z 
2025-01-17T11:31:46.5911276Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5911352Z         if err_msg is None:
2025-01-17T11:31:46.5911444Z             if left.shape != right.shape:
2025-01-17T11:31:46.5911519Z                 raise_assert_detail(
2025-01-17T11:31:46.5911656Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5911724Z                 )
2025-01-17T11:31:46.5911789Z     
2025-01-17T11:31:46.5911855Z             diff = 0
2025-01-17T11:31:46.5911965Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5912044Z                 # count up differences
2025-01-17T11:31:46.5912213Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5912287Z                     diff += 1
2025-01-17T11:31:46.5912353Z     
2025-01-17T11:31:46.5912436Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5912667Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5912833Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5912945Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5913012Z E           
2025-01-17T11:31:46.5913118Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5913384Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5913647Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5913653Z 
2025-01-17T11:31:46.5913948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5913953Z 
2025-01-17T11:31:46.5914119Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5914123Z 
2025-01-17T11:31:46.5914462Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c60c0>
2025-01-17T11:31:46.5914779Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>, attr = 'f_lu'
2025-01-17T11:31:46.5914944Z 
2025-01-17T11:31:46.5915171Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5915359Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5915486Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5915598Z         try:
2025-01-17T11:31:46.5915818Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5915905Z         except KeyError:
2025-01-17T11:31:46.5916038Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5916107Z     
2025-01-17T11:31:46.5916189Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5916281Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5916364Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5916497Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5916585Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5916674Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5916785Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5916789Z 
2025-01-17T11:31:46.5916908Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5917019Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5917159Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5917230Z     ???
2025-01-17T11:31:46.5917334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5917339Z 
2025-01-17T11:31:46.5917408Z >   ???
2025-01-17T11:31:46.5917527Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5917595Z E   
2025-01-17T11:31:46.5917715Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5917830Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5917896Z E          ...
2025-01-17T11:31:46.5917987Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5918110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5918220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5918288Z E          ...
2025-01-17T11:31:46.5918373Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5918490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5918587Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5918596Z 
2025-01-17T11:31:46.5918678Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5918871Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-17T11:31:46.5918880Z 
2025-01-17T11:31:46.5918998Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5919131Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5919226Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5919350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5919470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5919556Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5919631Z err_msg = None
2025-01-17T11:31:46.5919635Z 
2025-01-17T11:31:46.5919739Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5919818Z         if err_msg is None:
2025-01-17T11:31:46.5919906Z             if left.shape != right.shape:
2025-01-17T11:31:46.5919989Z                 raise_assert_detail(
2025-01-17T11:31:46.5920124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5920290Z                 )
2025-01-17T11:31:46.5920352Z     
2025-01-17T11:31:46.5920420Z             diff = 0
2025-01-17T11:31:46.5920600Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5920718Z                 # count up differences
2025-01-17T11:31:46.5920880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5920958Z                     diff += 1
2025-01-17T11:31:46.5921020Z     
2025-01-17T11:31:46.5921103Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5921233Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5921395Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5921498Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5921563Z E           
2025-01-17T11:31:46.5921670Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5921921Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5922189Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5922194Z 
2025-01-17T11:31:46.5922489Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5922493Z 
2025-01-17T11:31:46.5922839Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5922846Z 
2025-01-17T11:31:46.5923076Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6840>
2025-01-17T11:31:46.5923234Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5923316Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.5923321Z 
2025-01-17T11:31:46.5923449Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5923561Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5923639Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5923708Z         try:
2025-01-17T11:31:46.5923838Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5923916Z         except KeyError:
2025-01-17T11:31:46.5924044Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5924110Z     
2025-01-17T11:31:46.5924191Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5924278Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5924364Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5924495Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5924579Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5924666Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5924774Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5924841Z             else:
2025-01-17T11:31:46.5924937Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5925035Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5925040Z 
2025-01-17T11:31:46.5925161Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5925269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5925413Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5925477Z     ???
2025-01-17T11:31:46.5925585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5925589Z 
2025-01-17T11:31:46.5925798Z >   ???
2025-01-17T11:31:46.5925922Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5926089Z E   
2025-01-17T11:31:46.5926215Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5926317Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5926388Z E          ...
2025-01-17T11:31:46.5926469Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5926589Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5926698Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5926764Z E          ...
2025-01-17T11:31:46.5926846Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5926962Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5927064Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5927068Z 
2025-01-17T11:31:46.5927149Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5927355Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-17T11:31:46.5927359Z 
2025-01-17T11:31:46.5927484Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5927606Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5927696Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5927825Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5927940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5928031Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5928102Z err_msg = None
2025-01-17T11:31:46.5928107Z 
2025-01-17T11:31:46.5928214Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5928288Z         if err_msg is None:
2025-01-17T11:31:46.5928381Z             if left.shape != right.shape:
2025-01-17T11:31:46.5928459Z                 raise_assert_detail(
2025-01-17T11:31:46.5928608Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5928674Z                 )
2025-01-17T11:31:46.5928741Z     
2025-01-17T11:31:46.5928808Z             diff = 0
2025-01-17T11:31:46.5928915Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5928994Z                 # count up differences
2025-01-17T11:31:46.5929163Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5929234Z                     diff += 1
2025-01-17T11:31:46.5929296Z     
2025-01-17T11:31:46.5929381Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5929508Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5929670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5929780Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5929850Z E           
2025-01-17T11:31:46.5929958Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5930212Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5930464Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5930474Z 
2025-01-17T11:31:46.5930762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5930854Z 
2025-01-17T11:31:46.5931024Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5931132Z 
2025-01-17T11:31:46.5931348Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6900>
2025-01-17T11:31:46.5931507Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5931581Z attr = 'beta_sobolev'
2025-01-17T11:31:46.5931585Z 
2025-01-17T11:31:46.5931714Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5931825Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5931909Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5931975Z         try:
2025-01-17T11:31:46.5932110Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5932187Z         except KeyError:
2025-01-17T11:31:46.5932319Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5932392Z     
2025-01-17T11:31:46.5932475Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5932729Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5932830Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5932961Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5933039Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5933125Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5933228Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5933297Z             else:
2025-01-17T11:31:46.5933383Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5933488Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5933492Z 
2025-01-17T11:31:46.5933608Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5933719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5933860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5933936Z     ???
2025-01-17T11:31:46.5934038Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5934046Z 
2025-01-17T11:31:46.5934113Z >   ???
2025-01-17T11:31:46.5934231Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5934299Z E   
2025-01-17T11:31:46.5934421Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5934523Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5934592Z E          ...
2025-01-17T11:31:46.5934674Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5934808Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5934912Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5934983Z E          ...
2025-01-17T11:31:46.5935063Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5935183Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5935285Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5935294Z 
2025-01-17T11:31:46.5935380Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5935568Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-17T11:31:46.5935572Z 
2025-01-17T11:31:46.5935695Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5935817Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5935909Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5936033Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5936155Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5936240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5936444Z err_msg = None
2025-01-17T11:31:46.5936449Z 
2025-01-17T11:31:46.5936551Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5936735Z         if err_msg is None:
2025-01-17T11:31:46.5936822Z             if left.shape != right.shape:
2025-01-17T11:31:46.5937054Z                 raise_assert_detail(
2025-01-17T11:31:46.5937301Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5937405Z                 )
2025-01-17T11:31:46.5937536Z     
2025-01-17T11:31:46.5937637Z             diff = 0
2025-01-17T11:31:46.5937760Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5938002Z                 # count up differences
2025-01-17T11:31:46.5938201Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5938343Z                     diff += 1
2025-01-17T11:31:46.5938442Z     
2025-01-17T11:31:46.5938577Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5938808Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5939056Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5939200Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5939342Z E           
2025-01-17T11:31:46.5939479Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5939852Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5940160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5940213Z 
2025-01-17T11:31:46.5940543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5940548Z 
2025-01-17T11:31:46.5940781Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5940786Z 
2025-01-17T11:31:46.5941302Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c6a80>
2025-01-17T11:31:46.5941574Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f81761fd8e0>
2025-01-17T11:31:46.5941701Z attr = 'j_blues'
2025-01-17T11:31:46.5941706Z 
2025-01-17T11:31:46.5941904Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5942044Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5942206Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5942289Z         try:
2025-01-17T11:31:46.5942767Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5942897Z         except KeyError:
2025-01-17T11:31:46.5943086Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5943225Z     
2025-01-17T11:31:46.5943357Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5943553Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5943687Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5943886Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5943999Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5944177Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5944300Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5944500Z             else:
2025-01-17T11:31:46.5944621Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5944792Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5944945Z 
2025-01-17T11:31:46.5945105Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5945269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5945605Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5945775Z     ???
2025-01-17T11:31:46.5945998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5946008Z 
2025-01-17T11:31:46.5953027Z >   ???
2025-01-17T11:31:46.5953309Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5953422Z E   
2025-01-17T11:31:46.5953643Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5953818Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5953931Z E          ...
2025-01-17T11:31:46.5954071Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5954239Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5954365Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5954438Z E          ...
2025-01-17T11:31:46.5954528Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5954654Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5954762Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5954767Z 
2025-01-17T11:31:46.5954853Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5955055Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-17T11:31:46.5955060Z 
2025-01-17T11:31:46.5955186Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5955318Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5955411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5955548Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5955680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5955783Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5955854Z err_msg = None
2025-01-17T11:31:46.5955859Z 
2025-01-17T11:31:46.5955970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5956043Z         if err_msg is None:
2025-01-17T11:31:46.5956141Z             if left.shape != right.shape:
2025-01-17T11:31:46.5956217Z                 raise_assert_detail(
2025-01-17T11:31:46.5956362Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5956427Z                 )
2025-01-17T11:31:46.5956491Z     
2025-01-17T11:31:46.5956559Z             diff = 0
2025-01-17T11:31:46.5956672Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5956753Z                 # count up differences
2025-01-17T11:31:46.5956925Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5957000Z                     diff += 1
2025-01-17T11:31:46.5957069Z     
2025-01-17T11:31:46.5957152Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5957287Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5957448Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5957556Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5957626Z E           
2025-01-17T11:31:46.5957734Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5957993Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5958429Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5958534Z 
2025-01-17T11:31:46.5958847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5958851Z 
2025-01-17T11:31:46.5959029Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5959034Z 
2025-01-17T11:31:46.5959250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7800>
2025-01-17T11:31:46.5959422Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5959491Z attr = 'lines'
2025-01-17T11:31:46.5959495Z 
2025-01-17T11:31:46.5959633Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5959752Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5959834Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5959904Z         try:
2025-01-17T11:31:46.5960042Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5960114Z         except KeyError:
2025-01-17T11:31:46.5960250Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5960312Z     
2025-01-17T11:31:46.5960394Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5960484Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5960566Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5960699Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5960779Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5960865Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5960967Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5961043Z             else:
2025-01-17T11:31:46.5961130Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.5961231Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.5961240Z 
2025-01-17T11:31:46.5961357Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.5961467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5961607Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5961676Z     ???
2025-01-17T11:31:46.5961780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5961785Z 
2025-01-17T11:31:46.5961849Z >   ???
2025-01-17T11:31:46.5961968Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5962038Z E   
2025-01-17T11:31:46.5962155Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5962262Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5962331Z E          ...
2025-01-17T11:31:46.5962413Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5962715Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5962849Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5962919Z E          ...
2025-01-17T11:31:46.5962997Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5963116Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5963212Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5963216Z 
2025-01-17T11:31:46.5963302Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5963515Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-17T11:31:46.5963520Z 
2025-01-17T11:31:46.5963733Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c78c0>
2025-01-17T11:31:46.5963891Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5964105Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.5964110Z 
2025-01-17T11:31:46.5964241Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5964460Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5964536Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5964601Z         try:
2025-01-17T11:31:46.5964735Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5964812Z         except KeyError:
2025-01-17T11:31:46.5964943Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5965005Z     
2025-01-17T11:31:46.5965084Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5965172Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5965253Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5965380Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5965458Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5965546Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5965652Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5965664Z 
2025-01-17T11:31:46.5965784Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5965895Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5965900Z 
2025-01-17T11:31:46.5966027Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5966113Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5966213Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5966291Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5966421Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.5966502Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.5966599Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5966678Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.5966746Z err_msg = None
2025-01-17T11:31:46.5966754Z 
2025-01-17T11:31:46.5966863Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5966936Z         if err_msg is None:
2025-01-17T11:31:46.5967027Z             if left.shape != right.shape:
2025-01-17T11:31:46.5967105Z                 raise_assert_detail(
2025-01-17T11:31:46.5967246Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5967312Z                 )
2025-01-17T11:31:46.5967377Z     
2025-01-17T11:31:46.5967444Z             diff = 0
2025-01-17T11:31:46.5967552Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5967633Z                 # count up differences
2025-01-17T11:31:46.5967805Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5967877Z                     diff += 1
2025-01-17T11:31:46.5967945Z     
2025-01-17T11:31:46.5968029Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5968157Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5968328Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5968425Z E           AssertionError: Series are different
2025-01-17T11:31:46.5968496Z E           
2025-01-17T11:31:46.5968591Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.5968959Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5969284Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5969794Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5969801Z 
2025-01-17T11:31:46.5970119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5970333Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-17T11:31:46.5970341Z 
2025-01-17T11:31:46.5970563Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7980>
2025-01-17T11:31:46.5970725Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5970812Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.5970816Z 
2025-01-17T11:31:46.5970945Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5971054Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5971132Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5971201Z         try:
2025-01-17T11:31:46.5971334Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5971410Z         except KeyError:
2025-01-17T11:31:46.5971539Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5971605Z     
2025-01-17T11:31:46.5971683Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5971773Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5971859Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5971984Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5972075Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5972156Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5972261Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5972266Z 
2025-01-17T11:31:46.5972382Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5972493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5972497Z 
2025-01-17T11:31:46.5972731Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5972814Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5972913Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5972988Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5973123Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.5973203Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.5973303Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.5973378Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.5973446Z err_msg = None
2025-01-17T11:31:46.5973451Z 
2025-01-17T11:31:46.5973554Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5973627Z         if err_msg is None:
2025-01-17T11:31:46.5973714Z             if left.shape != right.shape:
2025-01-17T11:31:46.5973790Z                 raise_assert_detail(
2025-01-17T11:31:46.5973927Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5973992Z                 )
2025-01-17T11:31:46.5974057Z     
2025-01-17T11:31:46.5974124Z             diff = 0
2025-01-17T11:31:46.5974226Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5974437Z                 # count up differences
2025-01-17T11:31:46.5974596Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5974771Z                     diff += 1
2025-01-17T11:31:46.5974832Z     
2025-01-17T11:31:46.5974911Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5975038Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5975198Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5975293Z E           AssertionError: Series are different
2025-01-17T11:31:46.5975361Z E           
2025-01-17T11:31:46.5975452Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.5975817Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.5976192Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5976565Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.5976574Z 
2025-01-17T11:31:46.5976876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5977061Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-17T11:31:46.5977066Z 
2025-01-17T11:31:46.5977188Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5977306Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5977416Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5977640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5977853Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5977998Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5978126Z err_msg = None
2025-01-17T11:31:46.5978132Z 
2025-01-17T11:31:46.5978299Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5978432Z         if err_msg is None:
2025-01-17T11:31:46.5978575Z             if left.shape != right.shape:
2025-01-17T11:31:46.5978721Z                 raise_assert_detail(
2025-01-17T11:31:46.5978863Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5978936Z                 )
2025-01-17T11:31:46.5978999Z     
2025-01-17T11:31:46.5979065Z             diff = 0
2025-01-17T11:31:46.5979174Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5979253Z                 # count up differences
2025-01-17T11:31:46.5979418Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5979489Z                     diff += 1
2025-01-17T11:31:46.5979555Z     
2025-01-17T11:31:46.5979633Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5979861Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5980096Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5980204Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5980269Z E           
2025-01-17T11:31:46.5980377Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5980631Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5980888Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5980903Z 
2025-01-17T11:31:46.5981192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5981200Z 
2025-01-17T11:31:46.5981364Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5981368Z 
2025-01-17T11:31:46.5981583Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7bc0>
2025-01-17T11:31:46.5981771Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>, attr = 'nu'
2025-01-17T11:31:46.5981776Z 
2025-01-17T11:31:46.5981908Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5982016Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5982095Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5982160Z         try:
2025-01-17T11:31:46.5982292Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5982376Z         except KeyError:
2025-01-17T11:31:46.5982507Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5982768Z     
2025-01-17T11:31:46.5982857Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5982950Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5983030Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5983154Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5983233Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5983319Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5983419Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5983424Z 
2025-01-17T11:31:46.5983544Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5983648Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5983789Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5983859Z     ???
2025-01-17T11:31:46.5983962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5983971Z 
2025-01-17T11:31:46.5984033Z >   ???
2025-01-17T11:31:46.5984160Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5984224Z E   
2025-01-17T11:31:46.5984345Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5984452Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5984517Z E          ...
2025-01-17T11:31:46.5984600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5984720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5984826Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5984891Z E          ...
2025-01-17T11:31:46.5984972Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5985087Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5985314Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5985420Z 
2025-01-17T11:31:46.5985503Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5985698Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-17T11:31:46.5985702Z 
2025-01-17T11:31:46.5985820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5985943Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5986031Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5986157Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5986271Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5986357Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5986430Z err_msg = None
2025-01-17T11:31:46.5986434Z 
2025-01-17T11:31:46.5986540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5986617Z         if err_msg is None:
2025-01-17T11:31:46.5986708Z             if left.shape != right.shape:
2025-01-17T11:31:46.5986785Z                 raise_assert_detail(
2025-01-17T11:31:46.5986925Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5987001Z                 )
2025-01-17T11:31:46.5987064Z     
2025-01-17T11:31:46.5987132Z             diff = 0
2025-01-17T11:31:46.5987239Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5987316Z                 # count up differences
2025-01-17T11:31:46.5987481Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5987551Z                     diff += 1
2025-01-17T11:31:46.5987617Z     
2025-01-17T11:31:46.5987696Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5987832Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5987992Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5988185Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5988301Z E           
2025-01-17T11:31:46.5988486Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5988933Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5989364Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5989382Z 
2025-01-17T11:31:46.5989685Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5989695Z 
2025-01-17T11:31:46.5989855Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5989859Z 
2025-01-17T11:31:46.5990074Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7c80>
2025-01-17T11:31:46.5990234Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.5990309Z attr = 'wavelength_cm'
2025-01-17T11:31:46.5990317Z 
2025-01-17T11:31:46.5990445Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5990554Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5990635Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5990701Z         try:
2025-01-17T11:31:46.5990940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5991016Z         except KeyError:
2025-01-17T11:31:46.5991242Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5991305Z     
2025-01-17T11:31:46.5991387Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5991473Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.5991560Z             if attr == "selected_atoms":
2025-01-17T11:31:46.5991683Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.5991764Z             elif actual.ndim == 1:
2025-01-17T11:31:46.5991845Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.5991951Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.5991955Z 
2025-01-17T11:31:46.5992071Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.5992180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5992322Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.5992391Z     ???
2025-01-17T11:31:46.5992498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.5992502Z 
2025-01-17T11:31:46.5992719Z >   ???
2025-01-17T11:31:46.5992839Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.5992902Z E   
2025-01-17T11:31:46.5993027Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.5993129Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5993199Z E          ...
2025-01-17T11:31:46.5993277Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5993399Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5993500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.5993572Z E          ...
2025-01-17T11:31:46.5993648Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.5993774Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.5993871Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.5993881Z 
2025-01-17T11:31:46.5993965Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.5994147Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-17T11:31:46.5994152Z 
2025-01-17T11:31:46.5994270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5994384Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5994478Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5994602Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.5994719Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.5994804Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.5994882Z err_msg = None
2025-01-17T11:31:46.5994886Z 
2025-01-17T11:31:46.5994991Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.5995072Z         if err_msg is None:
2025-01-17T11:31:46.5995159Z             if left.shape != right.shape:
2025-01-17T11:31:46.5995252Z                 raise_assert_detail(
2025-01-17T11:31:46.5995407Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.5995475Z                 )
2025-01-17T11:31:46.5995535Z     
2025-01-17T11:31:46.5995601Z             diff = 0
2025-01-17T11:31:46.5995705Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.5995786Z                 # count up differences
2025-01-17T11:31:46.5995968Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.5996042Z                     diff += 1
2025-01-17T11:31:46.5996123Z     
2025-01-17T11:31:46.5996204Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.5996481Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.5996744Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.5996852Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.5996918Z E           
2025-01-17T11:31:46.5997025Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.5997278Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5997535Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.5997551Z 
2025-01-17T11:31:46.5997990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.5998001Z 
2025-01-17T11:31:46.5998280Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.5998287Z 
2025-01-17T11:31:46.5998650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8c7d40>
2025-01-17T11:31:46.5998983Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>, attr = 'f_lu'
2025-01-17T11:31:46.5998991Z 
2025-01-17T11:31:46.5999124Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.5999243Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.5999318Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.5999387Z         try:
2025-01-17T11:31:46.5999526Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.5999602Z         except KeyError:
2025-01-17T11:31:46.5999737Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.5999804Z     
2025-01-17T11:31:46.5999884Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.5999974Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6000055Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6000184Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6000262Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6000348Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6000452Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6000456Z 
2025-01-17T11:31:46.6000573Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6000675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6000819Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6000882Z     ???
2025-01-17T11:31:46.6000981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6000995Z 
2025-01-17T11:31:46.6001056Z >   ???
2025-01-17T11:31:46.6001171Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6001237Z E   
2025-01-17T11:31:46.6001354Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6001460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6001525Z E          ...
2025-01-17T11:31:46.6001607Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6001725Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6001829Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6001896Z E          ...
2025-01-17T11:31:46.6001973Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6002191Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6002289Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6002367Z 
2025-01-17T11:31:46.6002449Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6002841Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-17T11:31:46.6002849Z 
2025-01-17T11:31:46.6002968Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6003088Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6003176Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6003302Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6003422Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6003510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6003588Z err_msg = None
2025-01-17T11:31:46.6003592Z 
2025-01-17T11:31:46.6003693Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6003771Z         if err_msg is None:
2025-01-17T11:31:46.6003859Z             if left.shape != right.shape:
2025-01-17T11:31:46.6003935Z                 raise_assert_detail(
2025-01-17T11:31:46.6004072Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6004137Z                 )
2025-01-17T11:31:46.6004198Z     
2025-01-17T11:31:46.6004266Z             diff = 0
2025-01-17T11:31:46.6004369Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6004450Z                 # count up differences
2025-01-17T11:31:46.6004609Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6004682Z                     diff += 1
2025-01-17T11:31:46.6004745Z     
2025-01-17T11:31:46.6004830Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6004957Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6005127Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6005227Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6005296Z E           
2025-01-17T11:31:46.6005397Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6005648Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6005900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6005912Z 
2025-01-17T11:31:46.6006203Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6006207Z 
2025-01-17T11:31:46.6006366Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6006375Z 
2025-01-17T11:31:46.6006585Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e8500>
2025-01-17T11:31:46.6006740Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.6006814Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6006818Z 
2025-01-17T11:31:46.6006945Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6007053Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6007130Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6007197Z         try:
2025-01-17T11:31:46.6007461Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6007539Z         except KeyError:
2025-01-17T11:31:46.6007768Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6007834Z     
2025-01-17T11:31:46.6007911Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6008001Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6008081Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6008206Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6008285Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6008370Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6008472Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6008541Z             else:
2025-01-17T11:31:46.6008626Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6008724Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6008738Z 
2025-01-17T11:31:46.6008853Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6008957Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6009100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6009164Z     ???
2025-01-17T11:31:46.6009267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6009271Z 
2025-01-17T11:31:46.6009333Z >   ???
2025-01-17T11:31:46.6009462Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6009525Z E   
2025-01-17T11:31:46.6009652Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6009753Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6009820Z E          ...
2025-01-17T11:31:46.6009897Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6010017Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6010124Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6010191Z E          ...
2025-01-17T11:31:46.6010273Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6010389Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6010484Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6010489Z 
2025-01-17T11:31:46.6010572Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6010759Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-17T11:31:46.6010763Z 
2025-01-17T11:31:46.6010885Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6010999Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6011088Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6011209Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6011327Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6011416Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6011485Z err_msg = None
2025-01-17T11:31:46.6011489Z 
2025-01-17T11:31:46.6011589Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6011663Z         if err_msg is None:
2025-01-17T11:31:46.6011749Z             if left.shape != right.shape:
2025-01-17T11:31:46.6011825Z                 raise_assert_detail(
2025-01-17T11:31:46.6011965Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6012029Z                 )
2025-01-17T11:31:46.6012095Z     
2025-01-17T11:31:46.6012161Z             diff = 0
2025-01-17T11:31:46.6012265Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6012342Z                 # count up differences
2025-01-17T11:31:46.6012720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6012794Z                     diff += 1
2025-01-17T11:31:46.6012971Z     
2025-01-17T11:31:46.6013052Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6013181Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6013341Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6013460Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6013585Z E           
2025-01-17T11:31:46.6013779Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6014231Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6014708Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6014720Z 
2025-01-17T11:31:46.6015022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6015027Z 
2025-01-17T11:31:46.6015191Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6015195Z 
2025-01-17T11:31:46.6015406Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e85c0>
2025-01-17T11:31:46.6015567Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.6015639Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6015643Z 
2025-01-17T11:31:46.6015775Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6015885Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6015967Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6016032Z         try:
2025-01-17T11:31:46.6016169Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6016243Z         except KeyError:
2025-01-17T11:31:46.6016374Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6016435Z     
2025-01-17T11:31:46.6016515Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6016601Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6016685Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6016808Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6016887Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6016973Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6017074Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6017146Z             else:
2025-01-17T11:31:46.6017234Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6017339Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6017343Z 
2025-01-17T11:31:46.6017457Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6017564Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6017698Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6017764Z     ???
2025-01-17T11:31:46.6017864Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6017868Z 
2025-01-17T11:31:46.6017936Z >   ???
2025-01-17T11:31:46.6018055Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6018119Z E   
2025-01-17T11:31:46.6018236Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6018340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6018537Z E          ...
2025-01-17T11:31:46.6018620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6018814Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6018920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6018985Z E          ...
2025-01-17T11:31:46.6019062Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6019180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6019276Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6019284Z 
2025-01-17T11:31:46.6019365Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6019550Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-17T11:31:46.6019558Z 
2025-01-17T11:31:46.6019674Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6019789Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6019887Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6020014Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6020133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6020219Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6020291Z err_msg = None
2025-01-17T11:31:46.6020295Z 
2025-01-17T11:31:46.6020395Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6020470Z         if err_msg is None:
2025-01-17T11:31:46.6020554Z             if left.shape != right.shape:
2025-01-17T11:31:46.6020633Z                 raise_assert_detail(
2025-01-17T11:31:46.6020803Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6020870Z                 )
2025-01-17T11:31:46.6020936Z     
2025-01-17T11:31:46.6021003Z             diff = 0
2025-01-17T11:31:46.6021104Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6021189Z                 # count up differences
2025-01-17T11:31:46.6021348Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6021421Z                     diff += 1
2025-01-17T11:31:46.6021482Z     
2025-01-17T11:31:46.6021565Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6021691Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6021852Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6021956Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6022021Z E           
2025-01-17T11:31:46.6022124Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6022373Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6022870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6022883Z 
2025-01-17T11:31:46.6023404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6023415Z 
2025-01-17T11:31:46.6023689Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6023696Z 
2025-01-17T11:31:46.6024062Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e8740>
2025-01-17T11:31:46.6024468Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f814f5c5160>
2025-01-17T11:31:46.6024658Z attr = 'j_blues'
2025-01-17T11:31:46.6024664Z 
2025-01-17T11:31:46.6024796Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6024906Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6024983Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6025050Z         try:
2025-01-17T11:31:46.6025181Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6025256Z         except KeyError:
2025-01-17T11:31:46.6025384Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6025446Z     
2025-01-17T11:31:46.6025530Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6025617Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6025702Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6025825Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6025914Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6025997Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6026108Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6026174Z             else:
2025-01-17T11:31:46.6026263Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6026361Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6026366Z 
2025-01-17T11:31:46.6026484Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6026586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6026726Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6026789Z     ???
2025-01-17T11:31:46.6026893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6026898Z 
2025-01-17T11:31:46.6026959Z >   ???
2025-01-17T11:31:46.6027079Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6027145Z E   
2025-01-17T11:31:46.6027266Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6027371Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6027435Z E          ...
2025-01-17T11:31:46.6027518Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6027636Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6027743Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6027807Z E          ...
2025-01-17T11:31:46.6027886Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6028001Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6028098Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6028103Z 
2025-01-17T11:31:46.6028183Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6028387Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-17T11:31:46.6028396Z 
2025-01-17T11:31:46.6028513Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6028640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6028728Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6028855Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6028969Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6029056Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6029125Z err_msg = None
2025-01-17T11:31:46.6029129Z 
2025-01-17T11:31:46.6029235Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6029307Z         if err_msg is None:
2025-01-17T11:31:46.6029396Z             if left.shape != right.shape:
2025-01-17T11:31:46.6029560Z                 raise_assert_detail(
2025-01-17T11:31:46.6029702Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6029838Z                 )
2025-01-17T11:31:46.6029902Z     
2025-01-17T11:31:46.6029967Z             diff = 0
2025-01-17T11:31:46.6030072Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6030150Z                 # count up differences
2025-01-17T11:31:46.6030307Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6030380Z                     diff += 1
2025-01-17T11:31:46.6030441Z     
2025-01-17T11:31:46.6030526Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6030651Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6030816Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6030920Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6030994Z E           
2025-01-17T11:31:46.6031096Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6031355Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6031607Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6031618Z 
2025-01-17T11:31:46.6031906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6031922Z 
2025-01-17T11:31:46.6032083Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6032087Z 
2025-01-17T11:31:46.6032303Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e94c0>
2025-01-17T11:31:46.6032460Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6032527Z attr = 'lines'
2025-01-17T11:31:46.6032685Z 
2025-01-17T11:31:46.6032823Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6032929Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6033011Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6033075Z         try:
2025-01-17T11:31:46.6033206Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6033282Z         except KeyError:
2025-01-17T11:31:46.6033409Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6033474Z     
2025-01-17T11:31:46.6033552Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6033650Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6033731Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6033861Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6033937Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6034022Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6034122Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6034191Z             else:
2025-01-17T11:31:46.6034277Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6034376Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6034380Z 
2025-01-17T11:31:46.6034495Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6034600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6034736Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6034805Z     ???
2025-01-17T11:31:46.6035048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6035154Z 
2025-01-17T11:31:46.6035221Z >   ???
2025-01-17T11:31:46.6035338Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6035403Z E   
2025-01-17T11:31:46.6035527Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6035630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6035697Z E          ...
2025-01-17T11:31:46.6035775Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6035893Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6035996Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6036064Z E          ...
2025-01-17T11:31:46.6036139Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6036254Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6036352Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6036357Z 
2025-01-17T11:31:46.6036440Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6036685Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-17T11:31:46.6036690Z 
2025-01-17T11:31:46.6036901Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9580>
2025-01-17T11:31:46.6037054Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6037139Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.6037143Z 
2025-01-17T11:31:46.6037268Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6037373Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6037449Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6037516Z         try:
2025-01-17T11:31:46.6037646Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6037722Z         except KeyError:
2025-01-17T11:31:46.6037855Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6037917Z     
2025-01-17T11:31:46.6038002Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6038088Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6038172Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6038295Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6038375Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6038459Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6038562Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6038567Z 
2025-01-17T11:31:46.6038681Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6038787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6038792Z 
2025-01-17T11:31:46.6038914Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6039000Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6039099Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6039178Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6039307Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6039385Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6039488Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6039566Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6039634Z err_msg = None
2025-01-17T11:31:46.6039638Z 
2025-01-17T11:31:46.6039741Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6039815Z         if err_msg is None:
2025-01-17T11:31:46.6039903Z             if left.shape != right.shape:
2025-01-17T11:31:46.6039981Z                 raise_assert_detail(
2025-01-17T11:31:46.6040117Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6040272Z                 )
2025-01-17T11:31:46.6040333Z     
2025-01-17T11:31:46.6040494Z             diff = 0
2025-01-17T11:31:46.6040596Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6040680Z                 # count up differences
2025-01-17T11:31:46.6040839Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6040914Z                     diff += 1
2025-01-17T11:31:46.6040976Z     
2025-01-17T11:31:46.6041056Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6041180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6041339Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6041433Z E           AssertionError: Series are different
2025-01-17T11:31:46.6041499Z E           
2025-01-17T11:31:46.6041589Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.6041960Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6042288Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6042801Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6042820Z 
2025-01-17T11:31:46.6043126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6043366Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-17T11:31:46.6043371Z 
2025-01-17T11:31:46.6043590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9640>
2025-01-17T11:31:46.6043752Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6043839Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.6043843Z 
2025-01-17T11:31:46.6043969Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6044077Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6044156Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6044225Z         try:
2025-01-17T11:31:46.6044353Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6044433Z         except KeyError:
2025-01-17T11:31:46.6044563Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6044625Z     
2025-01-17T11:31:46.6044705Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6044788Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6044869Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6044992Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6045070Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6045150Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6045251Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6045255Z 
2025-01-17T11:31:46.6045372Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6045605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6045610Z 
2025-01-17T11:31:46.6045837Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6045916Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6046011Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6046085Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6046212Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6046289Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6046385Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6046458Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6046525Z err_msg = None
2025-01-17T11:31:46.6046529Z 
2025-01-17T11:31:46.6046633Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6046713Z         if err_msg is None:
2025-01-17T11:31:46.6046800Z             if left.shape != right.shape:
2025-01-17T11:31:46.6046883Z                 raise_assert_detail(
2025-01-17T11:31:46.6047013Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6047084Z                 )
2025-01-17T11:31:46.6047144Z     
2025-01-17T11:31:46.6047212Z             diff = 0
2025-01-17T11:31:46.6047314Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6047440Z                 # count up differences
2025-01-17T11:31:46.6047726Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6047852Z                     diff += 1
2025-01-17T11:31:46.6047960Z     
2025-01-17T11:31:46.6048105Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6048320Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6048599Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6048761Z E           AssertionError: Series are different
2025-01-17T11:31:46.6048879Z E           
2025-01-17T11:31:46.6049032Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.6049410Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6049773Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6050152Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6050159Z 
2025-01-17T11:31:46.6050453Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6050644Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-17T11:31:46.6050648Z 
2025-01-17T11:31:46.6050769Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6050886Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6051100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6051316Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6051432Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6051517Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6051589Z err_msg = None
2025-01-17T11:31:46.6051593Z 
2025-01-17T11:31:46.6051692Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6051768Z         if err_msg is None:
2025-01-17T11:31:46.6051851Z             if left.shape != right.shape:
2025-01-17T11:31:46.6051926Z                 raise_assert_detail(
2025-01-17T11:31:46.6052062Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6052130Z                 )
2025-01-17T11:31:46.6052201Z     
2025-01-17T11:31:46.6052267Z             diff = 0
2025-01-17T11:31:46.6052374Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6052460Z                 # count up differences
2025-01-17T11:31:46.6052738Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6052809Z                     diff += 1
2025-01-17T11:31:46.6052876Z     
2025-01-17T11:31:46.6052953Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6053081Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6053237Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6053342Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6053405Z E           
2025-01-17T11:31:46.6053511Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6053764Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6054033Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6054038Z 
2025-01-17T11:31:46.6054326Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6054331Z 
2025-01-17T11:31:46.6054494Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6054499Z 
2025-01-17T11:31:46.6054714Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9880>
2025-01-17T11:31:46.6054906Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>, attr = 'nu'
2025-01-17T11:31:46.6054916Z 
2025-01-17T11:31:46.6055042Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6055151Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6055229Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6055296Z         try:
2025-01-17T11:31:46.6055426Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6055502Z         except KeyError:
2025-01-17T11:31:46.6055629Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6055694Z     
2025-01-17T11:31:46.6055769Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6055860Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6055938Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6056062Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6056263Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6056348Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6056553Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6056557Z 
2025-01-17T11:31:46.6056676Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6056779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6056916Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6056982Z     ???
2025-01-17T11:31:46.6057083Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6057087Z 
2025-01-17T11:31:46.6057152Z >   ???
2025-01-17T11:31:46.6057269Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6057333Z E   
2025-01-17T11:31:46.6057448Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6057554Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6057627Z E          ...
2025-01-17T11:31:46.6057706Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6057829Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6057932Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6057995Z E          ...
2025-01-17T11:31:46.6058073Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6058187Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6058288Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6058293Z 
2025-01-17T11:31:46.6058376Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6058589Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-17T11:31:46.6058594Z 
2025-01-17T11:31:46.6058710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6058829Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6058922Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6059051Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6059162Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6059250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6059319Z err_msg = None
2025-01-17T11:31:46.6059323Z 
2025-01-17T11:31:46.6059426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6059498Z         if err_msg is None:
2025-01-17T11:31:46.6059589Z             if left.shape != right.shape:
2025-01-17T11:31:46.6059665Z                 raise_assert_detail(
2025-01-17T11:31:46.6059800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6059869Z                 )
2025-01-17T11:31:46.6059937Z     
2025-01-17T11:31:46.6060007Z             diff = 0
2025-01-17T11:31:46.6060108Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6060195Z                 # count up differences
2025-01-17T11:31:46.6060356Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6060428Z                     diff += 1
2025-01-17T11:31:46.6060489Z     
2025-01-17T11:31:46.6060572Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6060702Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6060863Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6060967Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6061037Z E           
2025-01-17T11:31:46.6061140Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6061395Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6061815Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6061821Z 
2025-01-17T11:31:46.6062113Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6062118Z 
2025-01-17T11:31:46.6062276Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6062280Z 
2025-01-17T11:31:46.6062498Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9940>
2025-01-17T11:31:46.6062841Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6062926Z attr = 'wavelength_cm'
2025-01-17T11:31:46.6062932Z 
2025-01-17T11:31:46.6063062Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6063177Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6063256Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6063326Z         try:
2025-01-17T11:31:46.6063457Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6063534Z         except KeyError:
2025-01-17T11:31:46.6063663Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6063731Z     
2025-01-17T11:31:46.6063807Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6063895Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6063974Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6064099Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6064181Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6064262Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6064369Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6064373Z 
2025-01-17T11:31:46.6064488Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6064594Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6064730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6064800Z     ???
2025-01-17T11:31:46.6064899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6064904Z 
2025-01-17T11:31:46.6064968Z >   ???
2025-01-17T11:31:46.6065084Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6065148Z E   
2025-01-17T11:31:46.6065264Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6065373Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6065440Z E          ...
2025-01-17T11:31:46.6065521Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6065644Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6065748Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6065812Z E          ...
2025-01-17T11:31:46.6065890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6066003Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6066100Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6066104Z 
2025-01-17T11:31:46.6066184Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6066376Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-17T11:31:46.6066381Z 
2025-01-17T11:31:46.6066496Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6066752Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6066942Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6067065Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6067183Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6067273Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6067340Z err_msg = None
2025-01-17T11:31:46.6067345Z 
2025-01-17T11:31:46.6067449Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6067521Z         if err_msg is None:
2025-01-17T11:31:46.6067605Z             if left.shape != right.shape:
2025-01-17T11:31:46.6067684Z                 raise_assert_detail(
2025-01-17T11:31:46.6067820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6067894Z                 )
2025-01-17T11:31:46.6067956Z     
2025-01-17T11:31:46.6068025Z             diff = 0
2025-01-17T11:31:46.6068132Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6068217Z                 # count up differences
2025-01-17T11:31:46.6068378Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6068451Z                     diff += 1
2025-01-17T11:31:46.6068512Z     
2025-01-17T11:31:46.6068595Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6068721Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6068888Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6068996Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6069065Z E           
2025-01-17T11:31:46.6069169Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6069421Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6069694Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6069699Z 
2025-01-17T11:31:46.6070001Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6070006Z 
2025-01-17T11:31:46.6070169Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6070174Z 
2025-01-17T11:31:46.6070390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8e9a00>
2025-01-17T11:31:46.6070587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>, attr = 'f_lu'
2025-01-17T11:31:46.6070595Z 
2025-01-17T11:31:46.6070728Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6070835Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6070917Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6070982Z         try:
2025-01-17T11:31:46.6071118Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6071193Z         except KeyError:
2025-01-17T11:31:46.6071324Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6071388Z     
2025-01-17T11:31:46.6071469Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6071555Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6071637Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6071758Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6072075Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6072226Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6072706Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6072724Z 
2025-01-17T11:31:46.6072882Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6072990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6073133Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6073197Z     ???
2025-01-17T11:31:46.6073301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6073305Z 
2025-01-17T11:31:46.6073367Z >   ???
2025-01-17T11:31:46.6073486Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6073548Z E   
2025-01-17T11:31:46.6073669Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6073769Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6073843Z E          ...
2025-01-17T11:31:46.6073923Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6074050Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6074151Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6074221Z E          ...
2025-01-17T11:31:46.6074297Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6074413Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6074509Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6074513Z 
2025-01-17T11:31:46.6074597Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6074798Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-17T11:31:46.6074802Z 
2025-01-17T11:31:46.6074921Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6075044Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6075136Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6075264Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6075380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6075465Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6075537Z err_msg = None
2025-01-17T11:31:46.6075541Z 
2025-01-17T11:31:46.6075644Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6075720Z         if err_msg is None:
2025-01-17T11:31:46.6075805Z             if left.shape != right.shape:
2025-01-17T11:31:46.6075882Z                 raise_assert_detail(
2025-01-17T11:31:46.6076019Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6076082Z                 )
2025-01-17T11:31:46.6076150Z     
2025-01-17T11:31:46.6076215Z             diff = 0
2025-01-17T11:31:46.6076319Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6076402Z                 # count up differences
2025-01-17T11:31:46.6076565Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6076634Z                     diff += 1
2025-01-17T11:31:46.6076697Z     
2025-01-17T11:31:46.6076775Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6076903Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6077063Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6077169Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6077234Z E           
2025-01-17T11:31:46.6077335Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6077587Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6078078Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6078084Z 
2025-01-17T11:31:46.6078378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6078382Z 
2025-01-17T11:31:46.6078546Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6078550Z 
2025-01-17T11:31:46.6078763Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ea180>
2025-01-17T11:31:46.6078925Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6079001Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6079006Z 
2025-01-17T11:31:46.6079134Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6079238Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6079316Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6079379Z         try:
2025-01-17T11:31:46.6079512Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6079585Z         except KeyError:
2025-01-17T11:31:46.6079717Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6079780Z     
2025-01-17T11:31:46.6079861Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6079946Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6080031Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6080151Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6080234Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6080324Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6080424Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6080492Z             else:
2025-01-17T11:31:46.6080579Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6080678Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6080682Z 
2025-01-17T11:31:46.6080797Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6080903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6081038Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6081104Z     ???
2025-01-17T11:31:46.6081203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6081207Z 
2025-01-17T11:31:46.6081274Z >   ???
2025-01-17T11:31:46.6081394Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6081461Z E   
2025-01-17T11:31:46.6081579Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6081688Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6081754Z E          ...
2025-01-17T11:31:46.6081836Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6081952Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6082059Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6082122Z E          ...
2025-01-17T11:31:46.6082199Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6082315Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6082410Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6082417Z 
2025-01-17T11:31:46.6082498Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6082889Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-17T11:31:46.6083021Z 
2025-01-17T11:31:46.6083151Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6083377Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6083469Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6083592Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6083711Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6083796Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6083867Z err_msg = None
2025-01-17T11:31:46.6083871Z 
2025-01-17T11:31:46.6083970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6084045Z         if err_msg is None:
2025-01-17T11:31:46.6084132Z             if left.shape != right.shape:
2025-01-17T11:31:46.6084218Z                 raise_assert_detail(
2025-01-17T11:31:46.6084351Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6084423Z                 )
2025-01-17T11:31:46.6084482Z     
2025-01-17T11:31:46.6084552Z             diff = 0
2025-01-17T11:31:46.6084653Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6084735Z                 # count up differences
2025-01-17T11:31:46.6084894Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6084966Z                     diff += 1
2025-01-17T11:31:46.6085027Z     
2025-01-17T11:31:46.6085109Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6085239Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6085395Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6085500Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6085569Z E           
2025-01-17T11:31:46.6085671Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6085925Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6086182Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6086187Z 
2025-01-17T11:31:46.6086479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6086488Z 
2025-01-17T11:31:46.6086649Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6086657Z 
2025-01-17T11:31:46.6086873Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ea240>
2025-01-17T11:31:46.6087028Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6087102Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6087107Z 
2025-01-17T11:31:46.6087233Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6087340Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6087415Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6087480Z         try:
2025-01-17T11:31:46.6087609Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6087684Z         except KeyError:
2025-01-17T11:31:46.6087813Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6087877Z     
2025-01-17T11:31:46.6088043Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6088128Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6088287Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6088411Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6088490Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6088571Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6088672Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6088735Z             else:
2025-01-17T11:31:46.6088824Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6088921Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6088926Z 
2025-01-17T11:31:46.6089042Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6089145Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6089281Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6089348Z     ???
2025-01-17T11:31:46.6089451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6089463Z 
2025-01-17T11:31:46.6089536Z >   ???
2025-01-17T11:31:46.6089654Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6089718Z E   
2025-01-17T11:31:46.6089838Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6089961Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6090087Z E          ...
2025-01-17T11:31:46.6090226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6090432Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6090618Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6090731Z E          ...
2025-01-17T11:31:46.6090865Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6091058Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6091231Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6091239Z 
2025-01-17T11:31:46.6091378Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6091638Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-17T11:31:46.6091643Z 
2025-01-17T11:31:46.6091764Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6091881Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6091969Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6092096Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6092207Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6092295Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6092369Z err_msg = None
2025-01-17T11:31:46.6092373Z 
2025-01-17T11:31:46.6092482Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6092670Z         if err_msg is None:
2025-01-17T11:31:46.6092765Z             if left.shape != right.shape:
2025-01-17T11:31:46.6092843Z                 raise_assert_detail(
2025-01-17T11:31:46.6092978Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6093042Z                 )
2025-01-17T11:31:46.6093107Z     
2025-01-17T11:31:46.6093172Z             diff = 0
2025-01-17T11:31:46.6093277Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6093357Z                 # count up differences
2025-01-17T11:31:46.6093516Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6093591Z                     diff += 1
2025-01-17T11:31:46.6093653Z     
2025-01-17T11:31:46.6093737Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6094021Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6094183Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6094393Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6094462Z E           
2025-01-17T11:31:46.6094561Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6094814Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6095067Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6095081Z 
2025-01-17T11:31:46.6095368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6095377Z 
2025-01-17T11:31:46.6095542Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6095546Z 
2025-01-17T11:31:46.6095756Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ea3c0>
2025-01-17T11:31:46.6095915Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8112f95190>
2025-01-17T11:31:46.6095981Z attr = 'j_blues'
2025-01-17T11:31:46.6095985Z 
2025-01-17T11:31:46.6096115Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6096222Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6096301Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6096364Z         try:
2025-01-17T11:31:46.6096494Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6096574Z         except KeyError:
2025-01-17T11:31:46.6096703Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6096772Z     
2025-01-17T11:31:46.6096851Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6096944Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6097026Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6097160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6097239Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6097324Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6097428Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6097495Z             else:
2025-01-17T11:31:46.6097581Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6097683Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6097688Z 
2025-01-17T11:31:46.6097807Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6097923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6098063Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6098130Z     ???
2025-01-17T11:31:46.6098231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6098235Z 
2025-01-17T11:31:46.6098299Z >   ???
2025-01-17T11:31:46.6098417Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6098478Z E   
2025-01-17T11:31:46.6098601Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6098701Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6098769Z E          ...
2025-01-17T11:31:46.6098850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6098974Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6099075Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6099231Z E          ...
2025-01-17T11:31:46.6099309Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6099527Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6099624Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6099628Z 
2025-01-17T11:31:46.6099714Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6099963Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-17T11:31:46.6099968Z 
2025-01-17T11:31:46.6100092Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6100214Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6100307Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6100432Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6100557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6100645Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6100716Z err_msg = None
2025-01-17T11:31:46.6100720Z 
2025-01-17T11:31:46.6100825Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6100901Z         if err_msg is None:
2025-01-17T11:31:46.6100989Z             if left.shape != right.shape:
2025-01-17T11:31:46.6101071Z                 raise_assert_detail(
2025-01-17T11:31:46.6101208Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6101278Z                 )
2025-01-17T11:31:46.6101341Z     
2025-01-17T11:31:46.6101408Z             diff = 0
2025-01-17T11:31:46.6101517Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6101596Z                 # count up differences
2025-01-17T11:31:46.6101760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6101837Z                     diff += 1
2025-01-17T11:31:46.6101903Z     
2025-01-17T11:31:46.6101992Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6102121Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6102280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6102387Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6102456Z E           
2025-01-17T11:31:46.6102724Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6103009Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6103266Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6103281Z 
2025-01-17T11:31:46.6103575Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6103579Z 
2025-01-17T11:31:46.6103742Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6103747Z 
2025-01-17T11:31:46.6103960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb140>
2025-01-17T11:31:46.6104117Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6104186Z attr = 'lines'
2025-01-17T11:31:46.6104193Z 
2025-01-17T11:31:46.6104324Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6104561Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6104641Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6104808Z         try:
2025-01-17T11:31:46.6104945Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6105017Z         except KeyError:
2025-01-17T11:31:46.6105150Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6105212Z     
2025-01-17T11:31:46.6105296Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6105381Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6105465Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6105584Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6105664Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6105744Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6105849Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6105914Z             else:
2025-01-17T11:31:46.6106004Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6106104Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6106113Z 
2025-01-17T11:31:46.6106228Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6106334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6106469Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6106536Z     ???
2025-01-17T11:31:46.6106637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6106642Z 
2025-01-17T11:31:46.6106709Z >   ???
2025-01-17T11:31:46.6106825Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6106890Z E   
2025-01-17T11:31:46.6107006Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6107109Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6107173Z E          ...
2025-01-17T11:31:46.6107258Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6107376Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6107486Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6107549Z E          ...
2025-01-17T11:31:46.6107630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6107745Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6107842Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6107846Z 
2025-01-17T11:31:46.6107926Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6108231Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-17T11:31:46.6108236Z 
2025-01-17T11:31:46.6108447Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb200>
2025-01-17T11:31:46.6108606Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6108690Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.6108695Z 
2025-01-17T11:31:46.6108822Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6108929Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6109006Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6109071Z         try:
2025-01-17T11:31:46.6109199Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6109274Z         except KeyError:
2025-01-17T11:31:46.6109402Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6109468Z     
2025-01-17T11:31:46.6109546Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6109632Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6109712Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6109841Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6109919Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6110096Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6110201Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6110280Z 
2025-01-17T11:31:46.6110401Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6110509Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6110513Z 
2025-01-17T11:31:46.6110641Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6110720Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6110829Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6110905Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6111038Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:31:46.6111114Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:31:46.6111217Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6111294Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:31:46.6111373Z err_msg = None
2025-01-17T11:31:46.6111377Z 
2025-01-17T11:31:46.6111481Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6111559Z         if err_msg is None:
2025-01-17T11:31:46.6111646Z             if left.shape != right.shape:
2025-01-17T11:31:46.6111722Z                 raise_assert_detail(
2025-01-17T11:31:46.6111861Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6111927Z                 )
2025-01-17T11:31:46.6111992Z     
2025-01-17T11:31:46.6112060Z             diff = 0
2025-01-17T11:31:46.6112169Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6112250Z                 # count up differences
2025-01-17T11:31:46.6112415Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6112487Z                     diff += 1
2025-01-17T11:31:46.6112660Z     
2025-01-17T11:31:46.6112743Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6112877Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6113043Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6113143Z E           AssertionError: Series are different
2025-01-17T11:31:46.6113209Z E           
2025-01-17T11:31:46.6113307Z E           Series values are different (1.61943 %)
2025-01-17T11:31:46.6113669Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6113995Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6114328Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6114339Z 
2025-01-17T11:31:46.6114816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6115372Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-17T11:31:46.6115573Z 
2025-01-17T11:31:46.6115949Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb2c0>
2025-01-17T11:31:46.6116297Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6116385Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.6116390Z 
2025-01-17T11:31:46.6116524Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6116635Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6116714Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6116821Z         try:
2025-01-17T11:31:46.6116994Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6117245Z         except KeyError:
2025-01-17T11:31:46.6117414Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6117567Z     
2025-01-17T11:31:46.6117684Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6117840Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6118007Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6118219Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6118360Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6118476Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6118653Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6118658Z 
2025-01-17T11:31:46.6118883Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6119043Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6119048Z 
2025-01-17T11:31:46.6119263Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6119375Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6119518Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6119650Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6120280Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:31:46.6120467Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:31:46.6120600Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:31:46.6128540Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:31:46.6128652Z err_msg = None
2025-01-17T11:31:46.6128659Z 
2025-01-17T11:31:46.6128781Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6128858Z         if err_msg is None:
2025-01-17T11:31:46.6128954Z             if left.shape != right.shape:
2025-01-17T11:31:46.6129037Z                 raise_assert_detail(
2025-01-17T11:31:46.6129188Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6129255Z                 )
2025-01-17T11:31:46.6129315Z     
2025-01-17T11:31:46.6129383Z             diff = 0
2025-01-17T11:31:46.6129488Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6129583Z                 # count up differences
2025-01-17T11:31:46.6129758Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6129837Z                     diff += 1
2025-01-17T11:31:46.6129898Z     
2025-01-17T11:31:46.6129983Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6130114Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6130279Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6130377Z E           AssertionError: Series are different
2025-01-17T11:31:46.6130444Z E           
2025-01-17T11:31:46.6130539Z E           Series values are different (3.23887 %)
2025-01-17T11:31:46.6130906Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6131556Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6131933Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.6131943Z 
2025-01-17T11:31:46.6132292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6132872Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-17T11:31:46.6132883Z 
2025-01-17T11:31:46.6133106Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6133311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6133464Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6133673Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6133876Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6134023Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6134100Z err_msg = None
2025-01-17T11:31:46.6134108Z 
2025-01-17T11:31:46.6134222Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6134296Z         if err_msg is None:
2025-01-17T11:31:46.6134386Z             if left.shape != right.shape:
2025-01-17T11:31:46.6134462Z                 raise_assert_detail(
2025-01-17T11:31:46.6134604Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6134669Z                 )
2025-01-17T11:31:46.6134733Z     
2025-01-17T11:31:46.6134798Z             diff = 0
2025-01-17T11:31:46.6134905Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6134986Z                 # count up differences
2025-01-17T11:31:46.6135156Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6135226Z                     diff += 1
2025-01-17T11:31:46.6135290Z     
2025-01-17T11:31:46.6135375Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6135508Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6135674Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6135781Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6135846Z E           
2025-01-17T11:31:46.6135950Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6136207Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6136459Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6136701Z 
2025-01-17T11:31:46.6137003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6137007Z 
2025-01-17T11:31:46.6137174Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6137179Z 
2025-01-17T11:31:46.6137397Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb500>
2025-01-17T11:31:46.6137587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>, attr = 'nu'
2025-01-17T11:31:46.6137592Z 
2025-01-17T11:31:46.6137723Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6137835Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6137911Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6137980Z         try:
2025-01-17T11:31:46.6138120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6138196Z         except KeyError:
2025-01-17T11:31:46.6138333Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6138397Z     
2025-01-17T11:31:46.6138477Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6138564Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6138645Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6138771Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6138850Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6138930Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6139034Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6139039Z 
2025-01-17T11:31:46.6139156Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6139265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6139416Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6139483Z     ???
2025-01-17T11:31:46.6139589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6139593Z 
2025-01-17T11:31:46.6139656Z >   ???
2025-01-17T11:31:46.6139775Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6139843Z E   
2025-01-17T11:31:46.6139960Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6140063Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6140128Z E          ...
2025-01-17T11:31:46.6140210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6140330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6140436Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6140500Z E          ...
2025-01-17T11:31:46.6140578Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6140696Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6140795Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6140806Z 
2025-01-17T11:31:46.6140887Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6141163Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-17T11:31:46.6141168Z 
2025-01-17T11:31:46.6141288Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6141410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6141498Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6141622Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6141737Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6141912Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6141979Z err_msg = None
2025-01-17T11:31:46.6142082Z 
2025-01-17T11:31:46.6142191Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6142264Z         if err_msg is None:
2025-01-17T11:31:46.6142352Z             if left.shape != right.shape:
2025-01-17T11:31:46.6142431Z                 raise_assert_detail(
2025-01-17T11:31:46.6142797Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6142890Z                 )
2025-01-17T11:31:46.6142956Z     
2025-01-17T11:31:46.6143025Z             diff = 0
2025-01-17T11:31:46.6143128Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6143213Z                 # count up differences
2025-01-17T11:31:46.6143373Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6143449Z                     diff += 1
2025-01-17T11:31:46.6143509Z     
2025-01-17T11:31:46.6143601Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6143725Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6143892Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6143995Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6144061Z E           
2025-01-17T11:31:46.6144162Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6144412Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6144671Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6144684Z 
2025-01-17T11:31:46.6144984Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6144988Z 
2025-01-17T11:31:46.6145146Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6145151Z 
2025-01-17T11:31:46.6145368Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb5c0>
2025-01-17T11:31:46.6145523Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6145598Z attr = 'wavelength_cm'
2025-01-17T11:31:46.6145602Z 
2025-01-17T11:31:46.6145729Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6145837Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6145912Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6145982Z         try:
2025-01-17T11:31:46.6146111Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6146193Z         except KeyError:
2025-01-17T11:31:46.6146321Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6146385Z     
2025-01-17T11:31:46.6146462Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6146548Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6146630Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6146752Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6146832Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6146913Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6147016Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6147020Z 
2025-01-17T11:31:46.6147137Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6147245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6147513Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6147677Z     ???
2025-01-17T11:31:46.6147779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6147783Z 
2025-01-17T11:31:46.6147847Z >   ???
2025-01-17T11:31:46.6147962Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6148026Z E   
2025-01-17T11:31:46.6148145Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6148252Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6148317Z E          ...
2025-01-17T11:31:46.6148399Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6148518Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6148622Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6148685Z E          ...
2025-01-17T11:31:46.6148770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6148883Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6148986Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6148990Z 
2025-01-17T11:31:46.6149072Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6149313Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-17T11:31:46.6149322Z 
2025-01-17T11:31:46.6149441Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6149561Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6149647Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6149769Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6149885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6149974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6150045Z err_msg = None
2025-01-17T11:31:46.6150053Z 
2025-01-17T11:31:46.6150155Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6150235Z         if err_msg is None:
2025-01-17T11:31:46.6150330Z             if left.shape != right.shape:
2025-01-17T11:31:46.6150470Z                 raise_assert_detail(
2025-01-17T11:31:46.6150710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6150830Z                 )
2025-01-17T11:31:46.6150944Z     
2025-01-17T11:31:46.6151098Z             diff = 0
2025-01-17T11:31:46.6151327Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6151462Z                 # count up differences
2025-01-17T11:31:46.6151731Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6151856Z                     diff += 1
2025-01-17T11:31:46.6151985Z     
2025-01-17T11:31:46.6152131Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6152273Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6152461Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6152778Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6152849Z E           
2025-01-17T11:31:46.6152950Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6153200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6153455Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6153697Z 
2025-01-17T11:31:46.6154008Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6154013Z 
2025-01-17T11:31:46.6154172Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6154177Z 
2025-01-17T11:31:46.6154394Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8eb680>
2025-01-17T11:31:46.6154584Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>, attr = 'f_lu'
2025-01-17T11:31:46.6154589Z 
2025-01-17T11:31:46.6154720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6154827Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6154905Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6154975Z         try:
2025-01-17T11:31:46.6155108Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6155185Z         except KeyError:
2025-01-17T11:31:46.6155318Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6155381Z     
2025-01-17T11:31:46.6155463Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6155548Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6155630Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6155753Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6155830Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6155912Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6156013Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6156017Z 
2025-01-17T11:31:46.6156134Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:31:46.6156237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6156382Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6156449Z     ???
2025-01-17T11:31:46.6156551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6156555Z 
2025-01-17T11:31:46.6156616Z >   ???
2025-01-17T11:31:46.6156734Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6156796Z E   
2025-01-17T11:31:46.6156913Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6157016Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6157086Z E          ...
2025-01-17T11:31:46.6157163Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6157283Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6157385Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6157450Z E          ...
2025-01-17T11:31:46.6157533Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6157650Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6157750Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6157754Z 
2025-01-17T11:31:46.6157836Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6158103Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-17T11:31:46.6158108Z 
2025-01-17T11:31:46.6158227Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6158344Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6158433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6158554Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6158669Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6158845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6158985Z err_msg = None
2025-01-17T11:31:46.6158993Z 
2025-01-17T11:31:46.6159093Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6159168Z         if err_msg is None:
2025-01-17T11:31:46.6159255Z             if left.shape != right.shape:
2025-01-17T11:31:46.6159331Z                 raise_assert_detail(
2025-01-17T11:31:46.6159468Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6159530Z                 )
2025-01-17T11:31:46.6159594Z     
2025-01-17T11:31:46.6159658Z             diff = 0
2025-01-17T11:31:46.6159763Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6159841Z                 # count up differences
2025-01-17T11:31:46.6160000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6160070Z                     diff += 1
2025-01-17T11:31:46.6160138Z     
2025-01-17T11:31:46.6160217Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6160350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6160507Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6160609Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6160672Z E           
2025-01-17T11:31:46.6160773Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6161024Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6161278Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6161291Z 
2025-01-17T11:31:46.6161581Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6161585Z 
2025-01-17T11:31:46.6161743Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6161747Z 
2025-01-17T11:31:46.6161956Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ebe00>
2025-01-17T11:31:46.6162112Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6162183Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6162187Z 
2025-01-17T11:31:46.6162314Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6162420Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6162506Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6162755Z         try:
2025-01-17T11:31:46.6162908Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6162989Z         except KeyError:
2025-01-17T11:31:46.6163119Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6163181Z     
2025-01-17T11:31:46.6163261Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6163346Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6163424Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6163547Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6163621Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6163704Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6163803Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6163869Z             else:
2025-01-17T11:31:46.6163955Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6164185Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6164190Z 
2025-01-17T11:31:46.6164445Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6164553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6164686Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6164751Z     ???
2025-01-17T11:31:46.6164850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6164854Z 
2025-01-17T11:31:46.6164918Z >   ???
2025-01-17T11:31:46.6165032Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6165095Z E   
2025-01-17T11:31:46.6165212Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6165315Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6165379Z E          ...
2025-01-17T11:31:46.6165458Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6165582Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6165687Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6165755Z E          ...
2025-01-17T11:31:46.6165831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6165947Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6166042Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6166046Z 
2025-01-17T11:31:46.6166130Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6166396Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-17T11:31:46.6166401Z 
2025-01-17T11:31:46.6166519Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6166636Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6166725Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6166852Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6166969Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6167054Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6167125Z err_msg = None
2025-01-17T11:31:46.6167129Z 
2025-01-17T11:31:46.6167231Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6167307Z         if err_msg is None:
2025-01-17T11:31:46.6167393Z             if left.shape != right.shape:
2025-01-17T11:31:46.6167471Z                 raise_assert_detail(
2025-01-17T11:31:46.6167606Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6167671Z                 )
2025-01-17T11:31:46.6167732Z     
2025-01-17T11:31:46.6167799Z             diff = 0
2025-01-17T11:31:46.6167900Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6167986Z                 # count up differences
2025-01-17T11:31:46.6168145Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6168221Z                     diff += 1
2025-01-17T11:31:46.6168282Z     
2025-01-17T11:31:46.6168360Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6168488Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6168646Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6168752Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6168816Z E           
2025-01-17T11:31:46.6168920Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6169389Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6170824Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6170836Z 
2025-01-17T11:31:46.6171279Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6171287Z 
2025-01-17T11:31:46.6171451Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6171456Z 
2025-01-17T11:31:46.6171680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e8ebec0>
2025-01-17T11:31:46.6171837Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6171923Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6171927Z 
2025-01-17T11:31:46.6172054Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6172171Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6172247Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6172312Z         try:
2025-01-17T11:31:46.6172442Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6172518Z         except KeyError:
2025-01-17T11:31:46.6172822Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6172892Z     
2025-01-17T11:31:46.6172973Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6173059Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6173141Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6173264Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6173345Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6173432Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6173536Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6173605Z             else:
2025-01-17T11:31:46.6173695Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6173793Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6173797Z 
2025-01-17T11:31:46.6173914Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6174022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6174168Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6174233Z     ???
2025-01-17T11:31:46.6174341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6174345Z 
2025-01-17T11:31:46.6174406Z >   ???
2025-01-17T11:31:46.6174529Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6174591Z E   
2025-01-17T11:31:46.6174715Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6174823Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6174896Z E          ...
2025-01-17T11:31:46.6174976Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6175097Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6175200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6175264Z E          ...
2025-01-17T11:31:46.6175347Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6175462Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6175563Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6175567Z 
2025-01-17T11:31:46.6175649Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6175905Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-17T11:31:46.6175911Z 
2025-01-17T11:31:46.6176034Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6176303Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6176494Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6176624Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:31:46.6176739Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:31:46.6176828Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:31:46.6176895Z err_msg = None
2025-01-17T11:31:46.6176900Z 
2025-01-17T11:31:46.6177009Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:31:46.6177082Z         if err_msg is None:
2025-01-17T11:31:46.6177174Z             if left.shape != right.shape:
2025-01-17T11:31:46.6177250Z                 raise_assert_detail(
2025-01-17T11:31:46.6177385Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:31:46.6177455Z                 )
2025-01-17T11:31:46.6177522Z     
2025-01-17T11:31:46.6177593Z             diff = 0
2025-01-17T11:31:46.6177701Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:31:46.6177781Z                 # count up differences
2025-01-17T11:31:46.6177944Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:31:46.6178016Z                     diff += 1
2025-01-17T11:31:46.6178081Z     
2025-01-17T11:31:46.6178161Z             diff = diff * 100.0 / left.size
2025-01-17T11:31:46.6178290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:31:46.6178458Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:31:46.6178564Z E           AssertionError: numpy array are different
2025-01-17T11:31:46.6178631Z E           
2025-01-17T11:31:46.6178733Z E           numpy array values are different (1.61943 %)
2025-01-17T11:31:46.6178994Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6179251Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.6179259Z 
2025-01-17T11:31:46.6179555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:31:46.6179559Z 
2025-01-17T11:31:46.6179724Z During handling of the above exception, another exception occurred:
2025-01-17T11:31:46.6179733Z 
2025-01-17T11:31:46.6179945Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f817e710080>
2025-01-17T11:31:46.6180110Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f817870ede0>
2025-01-17T11:31:46.6180179Z attr = 'j_blues'
2025-01-17T11:31:46.6180183Z 
2025-01-17T11:31:46.6180314Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:31:46.6180421Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:31:46.6180499Z         key = f"plasma/{attr}"
2025-01-17T11:31:46.6180563Z         try:
2025-01-17T11:31:46.6180696Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:31:46.6180770Z         except KeyError:
2025-01-17T11:31:46.6180898Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:31:46.6180961Z     
2025-01-17T11:31:46.6181039Z         if hasattr(plasma, attr):
2025-01-17T11:31:46.6181130Z             actual = getattr(plasma, attr)
2025-01-17T11:31:46.6181300Z             if attr == "selected_atoms":
2025-01-17T11:31:46.6181427Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:31:46.6181580Z             elif actual.ndim == 1:
2025-01-17T11:31:46.6181666Z                 actual = pd.Series(actual)
2025-01-17T11:31:46.6181768Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:31:46.6181837Z             else:
2025-01-17T11:31:46.6181925Z                 actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6182024Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:31:46.6182028Z 
2025-01-17T11:31:46.6182143Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:31:46.6182249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6182384Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6182448Z     ???
2025-01-17T11:31:46.6182700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6182717Z 
2025-01-17T11:31:46.6182791Z >   ???
2025-01-17T11:31:46.6182913Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.6182985Z E   
2025-01-17T11:31:46.6183102Z E   MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.6183203Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6183274Z E          ...
2025-01-17T11:31:46.6183356Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6183480Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6183587Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.6183656Z E          ...
2025-01-17T11:31:46.6183734Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.6183849Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.6183944Z E   At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.6183948Z 
2025-01-17T11:31:46.6184035Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6184193Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-17T11:31:46.6184201Z 
2025-01-17T11:31:46.6184424Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6184508Z attr = 'stimulated_emission_factor'
2025-01-17T11:31:46.6184770Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8178478e00>
2025-01-17T11:31:46.6184775Z 
2025-01-17T11:31:46.6184911Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6185071Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6185185Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6185309Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6185415Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6185497Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6185586Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6185682Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6185690Z 
2025-01-17T11:31:46.6185785Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6185889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6185893Z 
2025-01-17T11:31:46.6186194Z args = (<function assert_allclose.<locals>.compare at 0x7f8151d9b060>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-01-17T11:31:46.6186264Z         0.01476858],
2025-01-17T11:31:46.6186391Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-17T11:31:46.6186459Z         0.01473787]]))
2025-01-17T11:31:46.6186705Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6186711Z 
2025-01-17T11:31:46.6186780Z     @wraps(func)
2025-01-17T11:31:46.6186998Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6187079Z         with self._recreate_cm():
2025-01-17T11:31:46.6187156Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6187337Z E           AssertionError: 
2025-01-17T11:31:46.6187441Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6187504Z E           
2025-01-17T11:31:46.6187601Z E           Mismatched elements: 160 / 584480 (0.0274%)
2025-01-17T11:31:46.6187706Z E           Max absolute difference among violations: 1.
2025-01-17T11:31:46.6187809Z E           Max relative difference among violations: 1.
2025-01-17T11:31:46.6187946Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188044Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188140Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.6188279Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188377Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.6188477Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.6188482Z 
2025-01-17T11:31:46.6188675Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6188829Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-17T11:31:46.6188833Z 
2025-01-17T11:31:46.6189047Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6189130Z attr = 'lines_lower_level_index'
2025-01-17T11:31:46.6189385Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8178097ec0>
2025-01-17T11:31:46.6189390Z 
2025-01-17T11:31:46.6189526Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6189686Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6189800Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6189923Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6190033Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6190111Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6190196Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6190289Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6190293Z 
2025-01-17T11:31:46.6190390Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6190492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6190497Z 
2025-01-17T11:31:46.6190877Z args = (<function assert_allclose.<locals>.compare at 0x7f8151d99760>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-17T11:31:46.6191123Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6191131Z 
2025-01-17T11:31:46.6191201Z     @wraps(func)
2025-01-17T11:31:46.6191276Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6191354Z         with self._recreate_cm():
2025-01-17T11:31:46.6191431Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6191510Z E           AssertionError: 
2025-01-17T11:31:46.6191607Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6191674Z E           
2025-01-17T11:31:46.6191768Z E           Mismatched elements: 777 / 29224 (2.66%)
2025-01-17T11:31:46.6191883Z E           Max absolute difference among violations: 3371
2025-01-17T11:31:46.6191990Z E           Max relative difference among violations: 415.5
2025-01-17T11:31:46.6192109Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.6192225Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.6192321Z 
2025-01-17T11:31:46.6192518Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6192959Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-17T11:31:46.6192964Z 
2025-01-17T11:31:46.6193191Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6193274Z attr = 'lines_upper_level_index'
2025-01-17T11:31:46.6193535Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814be31ac0>
2025-01-17T11:31:46.6193543Z 
2025-01-17T11:31:46.6193679Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6193958Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6194155Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6194375Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6194550Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6194632Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6194727Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6194823Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6194827Z 
2025-01-17T11:31:46.6194926Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6195032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6195036Z 
2025-01-17T11:31:46.6195420Z args = (<function assert_allclose.<locals>.compare at 0x7f8154fd6c00>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-17T11:31:46.6195663Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6195671Z 
2025-01-17T11:31:46.6195737Z     @wraps(func)
2025-01-17T11:31:46.6195814Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6195905Z         with self._recreate_cm():
2025-01-17T11:31:46.6195984Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6196066Z E           AssertionError: 
2025-01-17T11:31:46.6196170Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6196239Z E           
2025-01-17T11:31:46.6196331Z E           Mismatched elements: 1817 / 29224 (6.22%)
2025-01-17T11:31:46.6196447Z E           Max absolute difference among violations: 3443
2025-01-17T11:31:46.6196571Z E           Max relative difference among violations: 54.65079365
2025-01-17T11:31:46.6196691Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.6196808Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.6196813Z 
2025-01-17T11:31:46.6197010Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6197152Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-17T11:31:46.6197161Z 
2025-01-17T11:31:46.6197382Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6197458Z attr = 'beta_sobolev'
2025-01-17T11:31:46.6197718Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814be30140>
2025-01-17T11:31:46.6197722Z 
2025-01-17T11:31:46.6197858Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6198012Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6198124Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6198251Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6198363Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6198444Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6198525Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6198622Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6198758Z 
2025-01-17T11:31:46.6198859Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6198964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6199054Z 
2025-01-17T11:31:46.6199311Z args = (<function assert_allclose.<locals>.compare at 0x7f8154fd6660>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6199378Z        [1., 1., .....,
2025-01-17T11:31:46.6199447Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6199517Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6199586Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-17T11:31:46.6199827Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6199834Z 
2025-01-17T11:31:46.6199901Z     @wraps(func)
2025-01-17T11:31:46.6199980Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6200057Z         with self._recreate_cm():
2025-01-17T11:31:46.6200132Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6200217Z E           AssertionError: 
2025-01-17T11:31:46.6200314Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6200388Z E           
2025-01-17T11:31:46.6200483Z E           Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.6200604Z E           Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.6200725Z E           Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.6200823Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6200901Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6200984Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.6201078Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6201156Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.6201230Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.6201234Z 
2025-01-17T11:31:46.6201431Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6201565Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-17T11:31:46.6201575Z 
2025-01-17T11:31:46.6201791Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6201860Z attr = 'lines'
2025-01-17T11:31:46.6202119Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f817e8eb860>
2025-01-17T11:31:46.6202125Z 
2025-01-17T11:31:46.6202262Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6202417Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6202525Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6202863Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6202978Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6203065Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6203148Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6203244Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6203255Z 
2025-01-17T11:31:46.6203351Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6203455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6203460Z 
2025-01-17T11:31:46.6203900Z args = (<function assert_allclose.<locals>.compare at 0x7f814e20f920>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-17T11:31:46.6204000Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-17T11:31:46.6204242Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6204246Z 
2025-01-17T11:31:46.6204314Z     @wraps(func)
2025-01-17T11:31:46.6204389Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6204591Z         with self._recreate_cm():
2025-01-17T11:31:46.6204670Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6204850Z E           AssertionError: 
2025-01-17T11:31:46.6204951Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6205014Z E           
2025-01-17T11:31:46.6205111Z E           Mismatched elements: 13241 / 263016 (5.03%)
2025-01-17T11:31:46.6205239Z E           Max absolute difference among violations: 2.93004431e+13
2025-01-17T11:31:46.6205366Z E           Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.6205527Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.6205612Z E                   4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.6205744Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.6205908Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.6205995Z E                   4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.6206121Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.6206130Z 
2025-01-17T11:31:46.6206324Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6206458Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-17T11:31:46.6206463Z 
2025-01-17T11:31:46.6206676Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6206746Z attr = 'f_lu'
2025-01-17T11:31:46.6207000Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814be32a50>
2025-01-17T11:31:46.6207005Z 
2025-01-17T11:31:46.6207139Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6207292Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6207407Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6207532Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6207648Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6207728Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6207813Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6207905Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6207910Z 
2025-01-17T11:31:46.6208007Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6208109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6208113Z 
2025-01-17T11:31:46.6208571Z args = (<function assert_allclose.<locals>.compare at 0x7f814e20e3e0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-17T11:31:46.6208669Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-17T11:31:46.6208910Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6208920Z 
2025-01-17T11:31:46.6208991Z     @wraps(func)
2025-01-17T11:31:46.6209069Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6209146Z         with self._recreate_cm():
2025-01-17T11:31:46.6209228Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6209304Z E           AssertionError: 
2025-01-17T11:31:46.6209402Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6209465Z E           
2025-01-17T11:31:46.6209560Z E           Mismatched elements: 2205 / 29224 (7.55%)
2025-01-17T11:31:46.6209679Z E           Max absolute difference among violations: 2.92703899
2025-01-17T11:31:46.6209803Z E           Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.6209963Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.6210044Z E                  1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.6210310Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.6210464Z E                  1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.6210469Z 
2025-01-17T11:31:46.6210658Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6210797Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-17T11:31:46.6210807Z 
2025-01-17T11:31:46.6211020Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f81510c6240>
2025-01-17T11:31:46.6211091Z attr = 'tau_sobolevs'
2025-01-17T11:31:46.6211346Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8178097320>
2025-01-17T11:31:46.6211350Z 
2025-01-17T11:31:46.6211482Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:31:46.6211637Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:31:46.6211745Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:31:46.6211874Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:31:46.6211986Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:31:46.6212069Z             if hasattr(actual, "cgs"):
2025-01-17T11:31:46.6212151Z                 actual = actual.cgs.value
2025-01-17T11:31:46.6212245Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:31:46.6212249Z 
2025-01-17T11:31:46.6212345Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:31:46.6212450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6212454Z 
2025-01-17T11:31:46.6213036Z args = (<function assert_allclose.<locals>.compare at 0x7f8154fd6840>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-17T11:31:46.6213140Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-17T11:31:46.6213387Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6213397Z 
2025-01-17T11:31:46.6213467Z     @wraps(func)
2025-01-17T11:31:46.6213543Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6213622Z         with self._recreate_cm():
2025-01-17T11:31:46.6213699Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6213778Z E           AssertionError: 
2025-01-17T11:31:46.6213872Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6213937Z E           
2025-01-17T11:31:46.6214031Z E           Mismatched elements: 39240 / 584480 (6.71%)
2025-01-17T11:31:46.6214168Z E           Max absolute difference among violations: 604603.16180317
2025-01-17T11:31:46.6214292Z E           Max relative difference among violations: 4.15650719e+25
2025-01-17T11:31:46.6214453Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.6214532Z E                   0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.6214667Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.6214828Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.6214908Z E                   0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.6215032Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.6215037Z 
2025-01-17T11:31:46.6215235Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6215393Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-17T11:31:46.6215397Z 
2025-01-17T11:31:46.6215607Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6215678Z attr = 'iterations_w'
2025-01-17T11:31:46.6215936Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f816867c920>
2025-01-17T11:31:46.6216059Z 
2025-01-17T11:31:46.6216148Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6216216Z         "attr",
2025-01-17T11:31:46.6216382Z         [
2025-01-17T11:31:46.6216455Z             "iterations_w",
2025-01-17T11:31:46.6216534Z             "iterations_t_rad",
2025-01-17T11:31:46.6216623Z             "iterations_electron_densities",
2025-01-17T11:31:46.6216702Z             "iterations_t_inner",
2025-01-17T11:31:46.6216765Z         ],
2025-01-17T11:31:46.6216830Z     )
2025-01-17T11:31:46.6217017Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6217123Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6217203Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6217285Z             actual = actual.value
2025-01-17T11:31:46.6217367Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6217485Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6217652Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6217662Z 
2025-01-17T11:31:46.6217774Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6217885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6218026Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6218090Z     ???
2025-01-17T11:31:46.6218192Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6218196Z 
2025-01-17T11:31:46.6218257Z >   ???
2025-01-17T11:31:46.6218426Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6218490Z E   
2025-01-17T11:31:46.6218639Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6218712Z E   [index]: [0, 1]
2025-01-17T11:31:46.6218805Z E   [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-17T11:31:46.6218903Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-01-17T11:31:46.6219063Z E   At positional index 1, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.6219072Z 
2025-01-17T11:31:46.6219156Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6219300Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6219708Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6220147Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6220294Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:31:46.6220299Z 
2025-01-17T11:31:46.6220302Z 
2025-01-17T11:31:46.6220526Z Packets:                                                                                   4031/? [04:57<00:00,  7.35it/s] [A
2025-01-17T11:31:46.6220534Z 
2025-01-17T11:31:46.6220776Z Packets:                                                                                   14251/? [04:57<00:00, 57.01it/s][A
2025-01-17T11:31:46.6220785Z 
2025-01-17T11:31:46.6221003Z Packets:                                                                                   24451/? [04:57<00:00, 127.74it/s][A
2025-01-17T11:31:46.6221012Z 
2025-01-17T11:31:46.6221219Z Packets:                                                                                   34881/? [04:57<00:00, 230.87it/s][A
2025-01-17T11:31:46.6221716Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:58<00:00, 104.74s/it]
2025-01-17T11:31:46.6221723Z 
2025-01-17T11:31:46.6221946Z Packets:                                                                                   44030/? [04:58<00:00, 230.87it/s][A
2025-01-17T11:31:46.6221951Z 
2025-01-17T11:31:46.6222170Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-17T11:31:46.6222174Z 
2025-01-17T11:31:46.6222660Z Packets:   ██████████████████▋                                                             9342/40000 [00:00<00:00, 35029.50it/s][A
2025-01-17T11:31:46.6222787Z 
2025-01-17T11:31:46.6223060Z Packets:   █████████████████████████▋                                                      12874/40000 [00:00<00:00, 35129.32it/s][A
2025-01-17T11:31:46.6223067Z 
2025-01-17T11:31:46.6223323Z Packets:   ████████████████████████████████▊                                               16410/40000 [00:00<00:00, 35205.60it/s][A
2025-01-17T11:31:46.6223328Z 
2025-01-17T11:31:46.6223598Z Packets:   ███████████████████████████████████████▉                                        19938/40000 [00:00<00:00, 35094.43it/s][A
2025-01-17T11:31:46.6223602Z 
2025-01-17T11:31:46.6223880Z Packets:   ██████████████████████████████████████████████▉                                 23492/40000 [00:00<00:00, 35228.22it/s][A
2025-01-17T11:31:46.6223885Z 
2025-01-17T11:31:46.6224166Z Packets:   ██████████████████████████████████████████████████████▏                         27070/40000 [00:00<00:00, 35398.06it/s][A
2025-01-17T11:31:46.6224187Z 
2025-01-17T11:31:46.6224564Z Packets:   █████████████████████████████████████████████████████████████▏                  30614/40000 [00:00<00:00, 35390.10it/s][A
2025-01-17T11:31:46.6224574Z 
2025-01-17T11:31:46.6225148Z Packets:   ████████████████████████████████████████████████████████████████████▎           34156/40000 [00:00<00:00, 35120.11it/s][A
2025-01-17T11:31:46.6225160Z 
2025-01-17T11:31:46.6225735Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    37731/40000 [00:01<00:00, 35308.46it/s][A
2025-01-17T11:31:46.6225972Z Iterations:                                                                                6/? [05:00<00:00, 69.92s/it] 
2025-01-17T11:31:46.6225981Z 
2025-01-17T11:31:46.6226411Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35308.46it/s][A
2025-01-17T11:31:46.6226589Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6227087Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6227267Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-17T11:31:46.6227272Z 
2025-01-17T11:31:46.6227482Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6227561Z attr = 'iterations_t_rad'
2025-01-17T11:31:46.6227823Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170e633b0>
2025-01-17T11:31:46.6227828Z 
2025-01-17T11:31:46.6227914Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6227983Z         "attr",
2025-01-17T11:31:46.6228047Z         [
2025-01-17T11:31:46.6228124Z             "iterations_w",
2025-01-17T11:31:46.6228197Z             "iterations_t_rad",
2025-01-17T11:31:46.6228437Z             "iterations_electron_densities",
2025-01-17T11:31:46.6228514Z             "iterations_t_inner",
2025-01-17T11:31:46.6228681Z         ],
2025-01-17T11:31:46.6228748Z     )
2025-01-17T11:31:46.6228938Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6229045Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6229130Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6229207Z             actual = actual.value
2025-01-17T11:31:46.6229290Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6229413Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6229582Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6229591Z 
2025-01-17T11:31:46.6229708Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6229814Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6229969Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6230033Z     ???
2025-01-17T11:31:46.6230135Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6230146Z 
2025-01-17T11:31:46.6230207Z >   ???
2025-01-17T11:31:46.6230382Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6230445Z E   
2025-01-17T11:31:46.6230594Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6230662Z E   [index]: [0, 1]
2025-01-17T11:31:46.6230759Z E   [left]:  [9967.488442185557, 10090.337237980311]
2025-01-17T11:31:46.6230849Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-01-17T11:31:46.6231015Z E   At positional index 1, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.6231019Z 
2025-01-17T11:31:46.6231102Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6231279Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-17T11:31:46.6231290Z 
2025-01-17T11:31:46.6231493Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6231592Z attr = 'iterations_electron_densities'
2025-01-17T11:31:46.6231849Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c9bbf0>
2025-01-17T11:31:46.6231853Z 
2025-01-17T11:31:46.6231940Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6232005Z         "attr",
2025-01-17T11:31:46.6232070Z         [
2025-01-17T11:31:46.6232142Z             "iterations_w",
2025-01-17T11:31:46.6232223Z             "iterations_t_rad",
2025-01-17T11:31:46.6232313Z             "iterations_electron_densities",
2025-01-17T11:31:46.6232387Z             "iterations_t_inner",
2025-01-17T11:31:46.6232456Z         ],
2025-01-17T11:31:46.6232517Z     )
2025-01-17T11:31:46.6232927Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6233034Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6233125Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6233200Z             actual = actual.value
2025-01-17T11:31:46.6233291Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6233407Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6233573Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6233578Z 
2025-01-17T11:31:46.6233686Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6233788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6233925Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6233991Z     ???
2025-01-17T11:31:46.6234090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6234094Z 
2025-01-17T11:31:46.6234158Z >   ???
2025-01-17T11:31:46.6234323Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6234515Z E   
2025-01-17T11:31:46.6234666Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6234843Z E   [index]: [0, 1]
2025-01-17T11:31:46.6234934Z E   [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-17T11:31:46.6235025Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-01-17T11:31:46.6235189Z E   At positional index 1, first diff: 2880937482.0686474 != 2880986026.9779425
2025-01-17T11:31:46.6235194Z 
2025-01-17T11:31:46.6235274Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6235437Z _______________ test_plasma_state_iterations[iterations_t_inner] _______________
2025-01-17T11:31:46.6235441Z 
2025-01-17T11:31:46.6235647Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6235727Z attr = 'iterations_t_inner'
2025-01-17T11:31:46.6235981Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170cafcb0>
2025-01-17T11:31:46.6235993Z 
2025-01-17T11:31:46.6236076Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6236141Z         "attr",
2025-01-17T11:31:46.6236213Z         [
2025-01-17T11:31:46.6236284Z             "iterations_w",
2025-01-17T11:31:46.6236362Z             "iterations_t_rad",
2025-01-17T11:31:46.6236450Z             "iterations_electron_densities",
2025-01-17T11:31:46.6236529Z             "iterations_t_inner",
2025-01-17T11:31:46.6236591Z         ],
2025-01-17T11:31:46.6236656Z     )
2025-01-17T11:31:46.6236836Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6236938Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:31:46.6237019Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6237100Z             actual = actual.value
2025-01-17T11:31:46.6237181Z         actual = pd.DataFrame(actual)
2025-01-17T11:31:46.6237299Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6237462Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6237471Z 
2025-01-17T11:31:46.6237580Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:31:46.6237685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6237822Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6237886Z     ???
2025-01-17T11:31:46.6237984Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6237992Z 
2025-01-17T11:31:46.6238052Z >   ???
2025-01-17T11:31:46.6238215Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.6238282Z E   
2025-01-17T11:31:46.6238430Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.6238499Z E   [index]: [0, 1]
2025-01-17T11:31:46.6238586Z E   [left]:  [9974.969233778693, 10755.649243810945]
2025-01-17T11:31:46.6238679Z E   [right]: [9974.969233778693, 10754.991494633894]
2025-01-17T11:31:46.6238839Z E   At positional index 1, first diff: 10755.649243810945 != 10754.991494633894
2025-01-17T11:31:46.6238844Z 
2025-01-17T11:31:46.6238932Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6239083Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-17T11:31:46.6239087Z 
2025-01-17T11:31:46.6239291Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6239367Z attr = 'nu_bar_estimator'
2025-01-17T11:31:46.6239629Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c22a20>
2025-01-17T11:31:46.6239633Z 
2025-01-17T11:31:46.6239717Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6239787Z         "attr",
2025-01-17T11:31:46.6239858Z         [
2025-01-17T11:31:46.6239936Z             "nu_bar_estimator",
2025-01-17T11:31:46.6240008Z             "j_estimator",
2025-01-17T11:31:46.6240082Z             "t_radiative",
2025-01-17T11:31:46.6240157Z             "dilution_factor",
2025-01-17T11:31:46.6240321Z             "output_nus",
2025-01-17T11:31:46.6240394Z             "output_energies",
2025-01-17T11:31:46.6240530Z         ],
2025-01-17T11:31:46.6240596Z     )
2025-01-17T11:31:46.6240767Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6240875Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6240948Z             actual = getattr(
2025-01-17T11:31:46.6241133Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6241201Z                 attr,
2025-01-17T11:31:46.6241269Z             )
2025-01-17T11:31:46.6241377Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6241520Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6241624Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6241695Z             actual = getattr(
2025-01-17T11:31:46.6241855Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6241929Z                 attr,
2025-01-17T11:31:46.6241996Z             )
2025-01-17T11:31:46.6242061Z         else:
2025-01-17T11:31:46.6242187Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6242249Z     
2025-01-17T11:31:46.6242332Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6242408Z             actual = actual.value
2025-01-17T11:31:46.6242489Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6242798Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6242979Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6242985Z 
2025-01-17T11:31:46.6243092Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6243198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6243342Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6243415Z     ???
2025-01-17T11:31:46.6243512Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6243522Z 
2025-01-17T11:31:46.6243585Z >   ???
2025-01-17T11:31:46.6243679Z E   AssertionError: Series are different
2025-01-17T11:31:46.6243743Z E   
2025-01-17T11:31:46.6243831Z E   Series values are different (100.0 %)
2025-01-17T11:31:46.6243957Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6245139Z E   [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-17T11:31:46.6246320Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-17T11:31:46.6246510Z E   At positional index 0, first diff: 1.0165718020021351e+29 != 1.0190851489144414e+29
2025-01-17T11:31:46.6246518Z 
2025-01-17T11:31:46.6246601Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6246748Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-17T11:31:46.6246756Z 
2025-01-17T11:31:46.6246963Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6247039Z attr = 'j_estimator'
2025-01-17T11:31:46.6247422Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c34fb0>
2025-01-17T11:31:46.6247427Z 
2025-01-17T11:31:46.6247620Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6247685Z         "attr",
2025-01-17T11:31:46.6247746Z         [
2025-01-17T11:31:46.6247824Z             "nu_bar_estimator",
2025-01-17T11:31:46.6247893Z             "j_estimator",
2025-01-17T11:31:46.6247966Z             "t_radiative",
2025-01-17T11:31:46.6248038Z             "dilution_factor",
2025-01-17T11:31:46.6248112Z             "output_nus",
2025-01-17T11:31:46.6248184Z             "output_energies",
2025-01-17T11:31:46.6248252Z         ],
2025-01-17T11:31:46.6248314Z     )
2025-01-17T11:31:46.6248486Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6248593Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6248668Z             actual = getattr(
2025-01-17T11:31:46.6248849Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6248929Z                 attr,
2025-01-17T11:31:46.6249045Z             )
2025-01-17T11:31:46.6249241Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6249501Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6249700Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6249831Z             actual = getattr(
2025-01-17T11:31:46.6250117Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6250231Z                 attr,
2025-01-17T11:31:46.6250336Z             )
2025-01-17T11:31:46.6250449Z         else:
2025-01-17T11:31:46.6250662Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6250781Z     
2025-01-17T11:31:46.6250870Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6250950Z             actual = actual.value
2025-01-17T11:31:46.6251032Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6251157Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6251328Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6251338Z 
2025-01-17T11:31:46.6251453Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6251555Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6251699Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6251763Z     ???
2025-01-17T11:31:46.6251863Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6251872Z 
2025-01-17T11:31:46.6251934Z >   ???
2025-01-17T11:31:46.6252023Z E   AssertionError: Series are different
2025-01-17T11:31:46.6252092Z E   
2025-01-17T11:31:46.6252181Z E   Series values are different (100.0 %)
2025-01-17T11:31:46.6252304Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6253365Z E   [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-17T11:31:46.6254322Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-17T11:31:46.6254484Z E   At positional index 0, first diff: 116384046125782.77 != 116548101693134.0
2025-01-17T11:31:46.6254489Z 
2025-01-17T11:31:46.6254571Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6254862Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-17T11:31:46.6254985Z 
2025-01-17T11:31:46.6255194Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6255269Z attr = 't_radiative'
2025-01-17T11:31:46.6255528Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c34f80>
2025-01-17T11:31:46.6255532Z 
2025-01-17T11:31:46.6255620Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6255685Z         "attr",
2025-01-17T11:31:46.6255750Z         [
2025-01-17T11:31:46.6255824Z             "nu_bar_estimator",
2025-01-17T11:31:46.6255897Z             "j_estimator",
2025-01-17T11:31:46.6255966Z             "t_radiative",
2025-01-17T11:31:46.6256040Z             "dilution_factor",
2025-01-17T11:31:46.6256114Z             "output_nus",
2025-01-17T11:31:46.6256187Z             "output_energies",
2025-01-17T11:31:46.6256253Z         ],
2025-01-17T11:31:46.6256322Z     )
2025-01-17T11:31:46.6256492Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6256603Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6256678Z             actual = getattr(
2025-01-17T11:31:46.6256859Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6256929Z                 attr,
2025-01-17T11:31:46.6256994Z             )
2025-01-17T11:31:46.6257104Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6257243Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6257349Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6257421Z             actual = getattr(
2025-01-17T11:31:46.6257586Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6257653Z                 attr,
2025-01-17T11:31:46.6257714Z             )
2025-01-17T11:31:46.6257789Z         else:
2025-01-17T11:31:46.6257917Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6257986Z     
2025-01-17T11:31:46.6258071Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6258148Z             actual = actual.value
2025-01-17T11:31:46.6258226Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6258343Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6258512Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6258516Z 
2025-01-17T11:31:46.6258630Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6258732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6258872Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6258937Z     ???
2025-01-17T11:31:46.6259039Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6259047Z 
2025-01-17T11:31:46.6259108Z >   ???
2025-01-17T11:31:46.6259202Z E   AssertionError: Series are different
2025-01-17T11:31:46.6259263Z E   
2025-01-17T11:31:46.6259356Z E   Series values are different (95.0 %)
2025-01-17T11:31:46.6259473Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6260461Z E   [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-17T11:31:46.6261456Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-17T11:31:46.6261785Z E   At positional index 0, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.6261791Z 
2025-01-17T11:31:46.6261873Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6262029Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-17T11:31:46.6262033Z 
2025-01-17T11:31:46.6262236Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6262315Z attr = 'dilution_factor'
2025-01-17T11:31:46.6262672Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c37020>
2025-01-17T11:31:46.6262677Z 
2025-01-17T11:31:46.6262767Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6262833Z         "attr",
2025-01-17T11:31:46.6262901Z         [
2025-01-17T11:31:46.6262974Z             "nu_bar_estimator",
2025-01-17T11:31:46.6263055Z             "j_estimator",
2025-01-17T11:31:46.6263124Z             "t_radiative",
2025-01-17T11:31:46.6263207Z             "dilution_factor",
2025-01-17T11:31:46.6263278Z             "output_nus",
2025-01-17T11:31:46.6263354Z             "output_energies",
2025-01-17T11:31:46.6263416Z         ],
2025-01-17T11:31:46.6263478Z     )
2025-01-17T11:31:46.6263649Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6263753Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6263829Z             actual = getattr(
2025-01-17T11:31:46.6264010Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6264080Z                 attr,
2025-01-17T11:31:46.6264143Z             )
2025-01-17T11:31:46.6264254Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6264394Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6264504Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6264576Z             actual = getattr(
2025-01-17T11:31:46.6264745Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6264810Z                 attr,
2025-01-17T11:31:46.6264881Z             )
2025-01-17T11:31:46.6264945Z         else:
2025-01-17T11:31:46.6265070Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6265131Z     
2025-01-17T11:31:46.6265209Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6265286Z             actual = actual.value
2025-01-17T11:31:46.6265363Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6265478Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6265645Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6265650Z 
2025-01-17T11:31:46.6265760Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6265865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6266004Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6266070Z     ???
2025-01-17T11:31:46.6266170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6266175Z 
2025-01-17T11:31:46.6266234Z >   ???
2025-01-17T11:31:46.6266325Z E   AssertionError: Series are different
2025-01-17T11:31:46.6266385Z E   
2025-01-17T11:31:46.6266473Z E   Series values are different (100.0 %)
2025-01-17T11:31:46.6266589Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.6267658Z E   [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-17T11:31:46.6268948Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-17T11:31:46.6269110Z E   At positional index 0, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.6269114Z 
2025-01-17T11:31:46.6269196Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6269339Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-17T11:31:46.6269343Z 
2025-01-17T11:31:46.6269545Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6269621Z attr = 'output_nus'
2025-01-17T11:31:46.6269882Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c36300>
2025-01-17T11:31:46.6269893Z 
2025-01-17T11:31:46.6269975Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6270040Z         "attr",
2025-01-17T11:31:46.6270104Z         [
2025-01-17T11:31:46.6270176Z             "nu_bar_estimator",
2025-01-17T11:31:46.6270247Z             "j_estimator",
2025-01-17T11:31:46.6270315Z             "t_radiative",
2025-01-17T11:31:46.6270390Z             "dilution_factor",
2025-01-17T11:31:46.6270459Z             "output_nus",
2025-01-17T11:31:46.6270535Z             "output_energies",
2025-01-17T11:31:46.6270595Z         ],
2025-01-17T11:31:46.6270660Z     )
2025-01-17T11:31:46.6270827Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6270932Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6271006Z             actual = getattr(
2025-01-17T11:31:46.6271195Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6271261Z                 attr,
2025-01-17T11:31:46.6271330Z             )
2025-01-17T11:31:46.6271437Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6271575Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6271677Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6271747Z             actual = getattr(
2025-01-17T11:31:46.6271909Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6271973Z                 attr,
2025-01-17T11:31:46.6272038Z             )
2025-01-17T11:31:46.6272101Z         else:
2025-01-17T11:31:46.6272226Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6272287Z     
2025-01-17T11:31:46.6272366Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6272440Z             actual = actual.value
2025-01-17T11:31:46.6272523Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6272828Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6273010Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6273014Z 
2025-01-17T11:31:46.6273122Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6273223Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6273385Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6273507Z     ???
2025-01-17T11:31:46.6273689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6273697Z 
2025-01-17T11:31:46.6273804Z >   ???
2025-01-17T11:31:46.6273970Z E   AssertionError: Series are different
2025-01-17T11:31:46.6274076Z E   
2025-01-17T11:31:46.6274230Z E   Series values are different (94.14 %)
2025-01-17T11:31:46.6274882Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6280297Z E   [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-17T11:31:46.6285608Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-17T11:31:46.6286039Z E   At positional index 0, first diff: 1806608624563428.5 != 1806497964363691.5
2025-01-17T11:31:46.6286045Z 
2025-01-17T11:31:46.6286131Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6286291Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-17T11:31:46.6286296Z 
2025-01-17T11:31:46.6286502Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f816867ca70>
2025-01-17T11:31:46.6286583Z attr = 'output_energies'
2025-01-17T11:31:46.6286840Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8170c35f40>
2025-01-17T11:31:46.6286845Z 
2025-01-17T11:31:46.6286934Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6287006Z         "attr",
2025-01-17T11:31:46.6287073Z         [
2025-01-17T11:31:46.6287146Z             "nu_bar_estimator",
2025-01-17T11:31:46.6287224Z             "j_estimator",
2025-01-17T11:31:46.6287295Z             "t_radiative",
2025-01-17T11:31:46.6287373Z             "dilution_factor",
2025-01-17T11:31:46.6287444Z             "output_nus",
2025-01-17T11:31:46.6287520Z             "output_energies",
2025-01-17T11:31:46.6287583Z         ],
2025-01-17T11:31:46.6287646Z     )
2025-01-17T11:31:46.6287819Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:31:46.6287925Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:31:46.6288004Z             actual = getattr(
2025-01-17T11:31:46.6288185Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:31:46.6288258Z                 attr,
2025-01-17T11:31:46.6288322Z             )
2025-01-17T11:31:46.6288434Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:31:46.6288584Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:31:46.6288699Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:31:46.6288779Z             actual = getattr(
2025-01-17T11:31:46.6288947Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:31:46.6289014Z                 attr,
2025-01-17T11:31:46.6289081Z             )
2025-01-17T11:31:46.6289145Z         else:
2025-01-17T11:31:46.6289276Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:31:46.6289341Z     
2025-01-17T11:31:46.6289420Z         if hasattr(actual, "value"):
2025-01-17T11:31:46.6289501Z             actual = actual.value
2025-01-17T11:31:46.6289579Z         actual = pd.Series(actual)
2025-01-17T11:31:46.6289699Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:31:46.6289872Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:31:46.6289883Z 
2025-01-17T11:31:46.6289998Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:31:46.6290108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6290254Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:31:46.6290316Z     ???
2025-01-17T11:31:46.6290424Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6290428Z 
2025-01-17T11:31:46.6290498Z >   ???
2025-01-17T11:31:46.6290593Z E   AssertionError: Series are different
2025-01-17T11:31:46.6290654Z E   
2025-01-17T11:31:46.6290748Z E   Series values are different (6.1925 %)
2025-01-17T11:31:46.6291108Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.6297597Z E   [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.6304783Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.6305248Z E   At positional index 23, first diff: -2.49312723626409e-05 != -2.4320523596905817e-05
2025-01-17T11:31:46.6305259Z 
2025-01-17T11:31:46.6305352Z testing.pyx:173: AssertionError
2025-01-17T11:31:46.6305537Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-17T11:31:46.6305546Z 
2025-01-17T11:31:46.6305801Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f817e636b10>
2025-01-17T11:31:46.6305987Z simulation = <tardis.simulation.base.Simulation object at 0x7f8156bbd970>
2025-01-17T11:31:46.6305992Z 
2025-01-17T11:31:46.6306110Z     def test_spectrum_real_packets(self, simulation):
2025-01-17T11:31:46.6306250Z         transport_state = simulation.transport.transport_state
2025-01-17T11:31:46.6306434Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:31:46.6306496Z     
2025-01-17T11:31:46.6306676Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:31:46.6306791Z         result = solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6306962Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:31:46.6307056Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6307128Z     
2025-01-17T11:31:46.6307230Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6307292Z     
2025-01-17T11:31:46.6307378Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6307445Z             result,
2025-01-17T11:31:46.6307519Z             luminosity,
2025-01-17T11:31:46.6307584Z         )
2025-01-17T11:31:46.6307588Z 
2025-01-17T11:31:46.6307709Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-17T11:31:46.6307816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6308154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6308246Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6308365Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6308384Z 
2025-01-17T11:31:46.6308841Z args = (<function assert_allclose.<locals>.compare at 0x7f8152d387c0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-17T11:31:46.6308942Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6309203Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6309210Z 
2025-01-17T11:31:46.6309293Z     @wraps(func)
2025-01-17T11:31:46.6309375Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6309457Z         with self._recreate_cm():
2025-01-17T11:31:46.6309537Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6309617Z E           AssertionError: 
2025-01-17T11:31:46.6309718Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6309786Z E           
2025-01-17T11:31:46.6309879Z E           Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.6310109Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.6310289Z E           Max relative difference among violations: 1.
2025-01-17T11:31:46.6310456Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6310537Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6310701Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6310778Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6310782Z 
2025-01-17T11:31:46.6310980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6311166Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-17T11:31:46.6311171Z 
2025-01-17T11:31:46.6311423Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f817e636db0>
2025-01-17T11:31:46.6311612Z simulation = <tardis.simulation.base.Simulation object at 0x7f8156bbd970>
2025-01-17T11:31:46.6311616Z 
2025-01-17T11:31:46.6311761Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-17T11:31:46.6311905Z         transport_state = simulation.transport.transport_state
2025-01-17T11:31:46.6312086Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:31:46.6312148Z     
2025-01-17T11:31:46.6312322Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:31:46.6312469Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-17T11:31:46.6312851Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-17T11:31:46.6312952Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6313013Z     
2025-01-17T11:31:46.6313114Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6313176Z     
2025-01-17T11:31:46.6313258Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6313332Z             result,
2025-01-17T11:31:46.6313407Z             luminosity,
2025-01-17T11:31:46.6313476Z         )
2025-01-17T11:31:46.6313480Z 
2025-01-17T11:31:46.6313598Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-17T11:31:46.6313701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6314031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6314114Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6314224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6314228Z 
2025-01-17T11:31:46.6314680Z args = (<function assert_allclose.<locals>.compare at 0x7f8151dd11c0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-17T11:31:46.6314785Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6315034Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6315042Z 
2025-01-17T11:31:46.6315114Z     @wraps(func)
2025-01-17T11:31:46.6315191Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6315273Z         with self._recreate_cm():
2025-01-17T11:31:46.6315355Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6315438Z E           AssertionError: 
2025-01-17T11:31:46.6315603Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6315729Z E           
2025-01-17T11:31:46.6315895Z E           Mismatched elements: 462 / 10000 (4.62%)
2025-01-17T11:31:46.6316122Z E           Max absolute difference among violations: 6.26425326e+37
2025-01-17T11:31:46.6316341Z E           Max relative difference among violations: 1.00484475
2025-01-17T11:31:46.6316611Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6316944Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6317195Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6317399Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6317405Z 
2025-01-17T11:31:46.6317602Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6317763Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-17T11:31:46.6317767Z 
2025-01-17T11:31:46.6318016Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f817e637620>
2025-01-17T11:31:46.6318206Z simulation = <tardis.simulation.base.Simulation object at 0x7f8156bbd970>
2025-01-17T11:31:46.6318211Z 
2025-01-17T11:31:46.6318297Z     def test_solve(self, simulation):
2025-01-17T11:31:46.6318443Z         transport_state = simulation.transport.transport_state
2025-01-17T11:31:46.6318624Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:31:46.6318695Z     
2025-01-17T11:31:46.6318868Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:31:46.6319024Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-17T11:31:46.6319097Z             transport_state
2025-01-17T11:31:46.6319164Z         )
2025-01-17T11:31:46.6319335Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:31:46.6319455Z         expected_real = self.get_expected_data(key_real)
2025-01-17T11:31:46.6319517Z     
2025-01-17T11:31:46.6319645Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-17T11:31:46.6319708Z     
2025-01-17T11:31:46.6319790Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6319877Z             result_real.luminosity,
2025-01-17T11:31:46.6319957Z             luminosity_real,
2025-01-17T11:31:46.6320019Z         )
2025-01-17T11:31:46.6320024Z 
2025-01-17T11:31:46.6320146Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-17T11:31:46.6320253Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6320583Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6320666Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6320799Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6320807Z 
2025-01-17T11:31:46.6321256Z args = (<function assert_allclose.<locals>.compare at 0x7f814f590e00>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-17T11:31:46.6321353Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6321596Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6321601Z 
2025-01-17T11:31:46.6321670Z     @wraps(func)
2025-01-17T11:31:46.6321752Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6321829Z         with self._recreate_cm():
2025-01-17T11:31:46.6321915Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6321991Z E           AssertionError: 
2025-01-17T11:31:46.6322093Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6322157Z E           
2025-01-17T11:31:46.6322252Z E           Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.6322382Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.6322489Z E           Max relative difference among violations: 1.
2025-01-17T11:31:46.6322843Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6322935Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6323096Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6323177Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6323318Z 
2025-01-17T11:31:46.6323513Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6323792Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-17T11:31:46.6323796Z 
2025-01-17T11:31:46.6324003Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f817e638a10>
2025-01-17T11:31:46.6324195Z simulation = <tardis.simulation.base.Simulation object at 0x7f81481b7b30>
2025-01-17T11:31:46.6324199Z 
2025-01-17T11:31:46.6324302Z     def test_j_blue_estimators(self, simulation):
2025-01-17T11:31:46.6324448Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-17T11:31:46.6324542Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6324606Z     
2025-01-17T11:31:46.6324682Z >       npt.assert_allclose(
2025-01-17T11:31:46.6324893Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-17T11:31:46.6324974Z             expected.values,
2025-01-17T11:31:46.6325041Z         )
2025-01-17T11:31:46.6325046Z 
2025-01-17T11:31:46.6325135Z tardis/tests/test_tardis_full.py:70: 
2025-01-17T11:31:46.6325249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6325253Z 
2025-01-17T11:31:46.6325507Z args = (<function assert_allclose.<locals>.compare at 0x7f8152647d80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6325584Z        [0., 0., .....,
2025-01-17T11:31:46.6325660Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6325738Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6325811Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6326057Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6326067Z 
2025-01-17T11:31:46.6326139Z     @wraps(func)
2025-01-17T11:31:46.6326220Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6326298Z         with self._recreate_cm():
2025-01-17T11:31:46.6326383Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6326462Z E           AssertionError: 
2025-01-17T11:31:46.6326564Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6326633Z E           
2025-01-17T11:31:46.6326731Z E           Mismatched elements: 490644 / 584480 (83.9%)
2025-01-17T11:31:46.6326861Z E           Max absolute difference among violations: 2.30902188e-19
2025-01-17T11:31:46.6326981Z E           Max relative difference among violations: 8.02015845
2025-01-17T11:31:46.6327080Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327161Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327248Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6327345Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327425Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6327504Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6327512Z 
2025-01-17T11:31:46.6327707Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6327857Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6328100Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6328166Z 	
2025-01-17T11:31:46.6328714Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-17T11:31:46.6328881Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6329303Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-17T11:31:46.6329460Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6329940Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-17T11:31:46.6330267Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6330778Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6330947Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6331152Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6331307Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6331371Z 	
2025-01-17T11:31:46.6331516Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6331668Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6331734Z 	
2025-01-17T11:31:46.6331821Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-17T11:31:46.6331908Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-17T11:31:46.6331990Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6332100Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6332249Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6332323Z 	
2025-01-17T11:31:46.6332463Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6332723Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6332785Z 	
2025-01-17T11:31:46.6332887Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-17T11:31:46.6332965Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-17T11:31:46.6333046Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-17T11:31:46.6333135Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-17T11:31:46.6333280Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-17T11:31:46.6333467Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6333750Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6333870Z 	
2025-01-17T11:31:46.6334003Z 	Current t_inner = 9974.969 K
2025-01-17T11:31:46.6334193Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-17T11:31:46.6334373Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6334642Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6334754Z 	
2025-01-17T11:31:46.6334972Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6335128Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6335193Z 	
2025-01-17T11:31:46.6335277Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-17T11:31:46.6335365Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-17T11:31:46.6335448Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6335547Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6335697Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6342359Z 	
2025-01-17T11:31:46.6342734Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6342917Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6342984Z 	
2025-01-17T11:31:46.6343093Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6343189Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-17T11:31:46.6343266Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-17T11:31:46.6343353Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-17T11:31:46.6343429Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-17T11:31:46.6343534Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6343695Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6343761Z 	
2025-01-17T11:31:46.6343841Z 	Current t_inner = 10736.784 K
2025-01-17T11:31:46.6343956Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-17T11:31:46.6344054Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6344208Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6344274Z 	
2025-01-17T11:31:46.6344416Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6344569Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6344630Z 	
2025-01-17T11:31:46.6344718Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-17T11:31:46.6344981Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-17T11:31:46.6345070Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6345296Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6345447Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6345659Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-17T11:31:46.6345817Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6345879Z 	
2025-01-17T11:31:46.6346018Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6346168Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6346231Z 	
2025-01-17T11:31:46.6346327Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6346405Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-17T11:31:46.6346482Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-17T11:31:46.6346558Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-17T11:31:46.6346640Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-17T11:31:46.6346737Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6346895Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6346957Z 	
2025-01-17T11:31:46.6347036Z 	Current t_inner = 10718.886 K
2025-01-17T11:31:46.6347144Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-17T11:31:46.6347241Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6347387Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6347449Z 	
2025-01-17T11:31:46.6347589Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6347737Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6347800Z 	
2025-01-17T11:31:46.6347883Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-17T11:31:46.6347968Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-17T11:31:46.6348049Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6348146Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6348297Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6348501Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-17T11:31:46.6348655Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6348718Z 	
2025-01-17T11:31:46.6348857Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:31:46.6349014Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6349075Z 	
2025-01-17T11:31:46.6349176Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6349252Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-17T11:31:46.6349329Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-17T11:31:46.6349405Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-17T11:31:46.6349482Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-17T11:31:46.6349578Z  ([1mbase.py[0m:650)
2025-01-17T11:31:46.6349730Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6349799Z 	
2025-01-17T11:31:46.6349873Z 	Current t_inner = 10695.170 K
2025-01-17T11:31:46.6349982Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-17T11:31:46.6350083Z  ([1mbase.py[0m:652)
2025-01-17T11:31:46.6350231Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6350293Z 	
2025-01-17T11:31:46.6350381Z 	Simulation finished in 4 iterations 
2025-01-17T11:31:46.6350457Z 	Simulation took 13.14 s
2025-01-17T11:31:46.6350554Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6350703Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6350767Z 	
2025-01-17T11:31:46.6350907Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6351059Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6351120Z 	
2025-01-17T11:31:46.6351202Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-17T11:31:46.6351289Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-17T11:31:46.6351371Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6351563Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6351720Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:31:46.6351803Z 
2025-01-17T11:31:46.6351808Z 
2025-01-17T11:31:46.6352056Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-17T11:31:46.6352062Z 
2025-01-17T11:31:46.6352276Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-17T11:31:46.6352281Z 
2025-01-17T11:31:46.6352526Z Packets:   ████▏                                                                           10326/200000 [00:00<00:01, 103253.45it/s][A
2025-01-17T11:31:46.6352692Z 
2025-01-17T11:31:46.6353015Z Packets:   ████████▎                                                                       20652/200000 [00:00<00:01, 101479.81it/s][A
2025-01-17T11:31:46.6353022Z 
2025-01-17T11:31:46.6353262Z Packets:   ████████████▌                                                                   31250/200000 [00:00<00:01, 103514.78it/s][A
2025-01-17T11:31:46.6353279Z 
2025-01-17T11:31:46.6353532Z Packets:   ████████████████▊                                                               41914/200000 [00:00<00:01, 104738.01it/s][A
2025-01-17T11:31:46.6353538Z 
2025-01-17T11:31:46.6353780Z Packets:   █████████████████████                                                           52582/200000 [00:00<00:01, 105433.95it/s][A
2025-01-17T11:31:46.6353786Z 
2025-01-17T11:31:46.6354035Z Packets:   █████████████████████████▎                                                      63259/200000 [00:00<00:01, 105885.33it/s][A
2025-01-17T11:31:46.6354040Z 
2025-01-17T11:31:46.6354293Z Packets:   █████████████████████████████▌                                                  73920/200000 [00:00<00:01, 106119.73it/s][A
2025-01-17T11:31:46.6354302Z 
2025-01-17T11:31:46.6354561Z Packets:   █████████████████████████████████▊                                              84533/200000 [00:00<00:01, 106011.07it/s][A
2025-01-17T11:31:46.6354581Z 
2025-01-17T11:31:46.6354848Z Packets:   ██████████████████████████████████████                                          95209/200000 [00:00<00:00, 106243.69it/s][A
2025-01-17T11:31:46.6354867Z 
2025-01-17T11:31:46.6355145Z Packets:   ██████████████████████████████████████████▎                                     105834/200000 [00:01<00:00, 106115.21it/s][A
2025-01-17T11:31:46.6355150Z 
2025-01-17T11:31:46.6355435Z Packets:   ██████████████████████████████████████████████▌                                 116446/200000 [00:01<00:00, 106030.73it/s][A
2025-01-17T11:31:46.6355440Z 
2025-01-17T11:31:46.6355718Z Packets:   ██████████████████████████████████████████████████▊                             127050/200000 [00:01<00:00, 104895.79it/s][A
2025-01-17T11:31:46.6355723Z 
2025-01-17T11:31:46.6356012Z Packets:   ███████████████████████████████████████████████████████                         137775/200000 [00:01<00:00, 105602.74it/s][A
2025-01-17T11:31:46.6356157Z 
2025-01-17T11:31:46.6356456Z Packets:   ███████████████████████████████████████████████████████████▍                    148546/200000 [00:01<00:00, 106234.12it/s][A
2025-01-17T11:31:46.6356575Z 
2025-01-17T11:31:46.6356878Z Packets:   ███████████████████████████████████████████████████████████████▋                159172/200000 [00:01<00:00, 105917.43it/s][A
2025-01-17T11:31:46.6356883Z 
2025-01-17T11:31:46.6357291Z Packets:   ███████████████████████████████████████████████████████████████████▉            169766/200000 [00:01<00:00, 105265.25it/s][A
2025-01-17T11:31:46.6357307Z 
2025-01-17T11:31:46.6357918Z Packets:   ████████████████████████████████████████████████████████████████████████        180295/200000 [00:01<00:00, 104779.24it/s][A
2025-01-17T11:31:46.6357930Z 
2025-01-17T11:31:46.6358519Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   190775/200000 [00:01<00:00, 103189.25it/s][A
2025-01-17T11:31:46.6358786Z Iterations:                                                                                13/? [06:01<00:00, 12.44s/it]
2025-01-17T11:31:46.6358818Z 
2025-01-17T11:31:46.6359219Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 103189.25it/s][A
2025-01-17T11:31:46.6359226Z 
2025-01-17T11:31:46.6359454Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6359460Z 
2025-01-17T11:31:46.6359694Z Packets:   ████▏                                                                           10614/200000 [00:00<00:01, 106138.58it/s][A
2025-01-17T11:31:46.6359699Z 
2025-01-17T11:31:46.6359937Z Packets:   ████████▌                                                                       21263/200000 [00:00<00:01, 106344.76it/s][A
2025-01-17T11:31:46.6359942Z 
2025-01-17T11:31:46.6360179Z Packets:   ████████████▊                                                                   32125/200000 [00:00<00:01, 107383.61it/s][A
2025-01-17T11:31:46.6360196Z 
2025-01-17T11:31:46.6360436Z Packets:   █████████████████▏                                                              42864/200000 [00:00<00:01, 106776.42it/s][A
2025-01-17T11:31:46.6360453Z 
2025-01-17T11:31:46.6360695Z Packets:   █████████████████████▍                                                          53625/200000 [00:00<00:01, 107075.68it/s][A
2025-01-17T11:31:46.6360700Z 
2025-01-17T11:31:46.6360951Z Packets:   █████████████████████████▋                                                      64334/200000 [00:00<00:01, 106626.16it/s][A
2025-01-17T11:31:46.6360956Z 
2025-01-17T11:31:46.6361207Z Packets:   █████████████████████████████▉                                                  74998/200000 [00:00<00:01, 106488.00it/s][A
2025-01-17T11:31:46.6361212Z 
2025-01-17T11:31:46.6361479Z Packets:   ██████████████████████████████████▎                                             85648/200000 [00:00<00:01, 105767.95it/s][A
2025-01-17T11:31:46.6361598Z 
2025-01-17T11:31:46.6361869Z Packets:   ██████████████████████████████████████▍                                         96226/200000 [00:00<00:00, 105667.91it/s][A
2025-01-17T11:31:46.6361972Z 
2025-01-17T11:31:46.6362252Z Packets:   ██████████████████████████████████████████▋                                     106794/200000 [00:01<00:00, 104122.40it/s][A
2025-01-17T11:31:46.6362257Z 
2025-01-17T11:31:46.6362704Z Packets:   ██████████████████████████████████████████████▉                                 117426/200000 [00:01<00:00, 104783.85it/s][A
2025-01-17T11:31:46.6362715Z 
2025-01-17T11:31:46.6363064Z Packets:   ███████████████████████████████████████████████████▏                            127909/200000 [00:01<00:00, 104426.90it/s][A
2025-01-17T11:31:46.6363070Z 
2025-01-17T11:31:46.6363362Z Packets:   ███████████████████████████████████████████████████████▍                        138568/200000 [00:01<00:00, 105075.13it/s][A
2025-01-17T11:31:46.6363389Z 
2025-01-17T11:31:46.6363683Z Packets:   ███████████████████████████████████████████████████████████▋                    149124/200000 [00:01<00:00, 105220.42it/s][A
2025-01-17T11:31:46.6363704Z 
2025-01-17T11:31:46.6364003Z Packets:   ███████████████████████████████████████████████████████████████▉                159743/200000 [00:01<00:00, 105508.65it/s][A
2025-01-17T11:31:46.6364008Z 
2025-01-17T11:31:46.6364311Z Packets:   ████████████████████████████████████████████████████████████████████▏           170488/200000 [00:01<00:00, 106088.24it/s][A
2025-01-17T11:31:46.6364317Z 
2025-01-17T11:31:46.6364626Z Packets:   ████████████████████████████████████████████████████████████████████████▍       181099/200000 [00:01<00:00, 106079.47it/s][A
2025-01-17T11:31:46.6364632Z 
2025-01-17T11:31:46.6364942Z Packets:   ████████████████████████████████████████████████████████████████████████████▋   191788/200000 [00:01<00:00, 106319.52it/s][A
2025-01-17T11:31:46.6365082Z Iterations:                                                                                14/? [06:04<00:00,  9.66s/it]
2025-01-17T11:31:46.6365105Z 
2025-01-17T11:31:46.6365434Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106319.52it/s][A
2025-01-17T11:31:46.6365439Z 
2025-01-17T11:31:46.6365663Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6365668Z 
2025-01-17T11:31:46.6365896Z Packets:   ████▎                                                                           10633/200000 [00:00<00:01, 105060.89it/s][A
2025-01-17T11:31:46.6365904Z 
2025-01-17T11:31:46.6366133Z Packets:   ████████▍                                                                       21140/200000 [00:00<00:01, 104895.75it/s][A
2025-01-17T11:31:46.6366139Z 
2025-01-17T11:31:46.6366379Z Packets:   ████████████▋                                                                   31630/200000 [00:00<00:01, 104219.85it/s][A
2025-01-17T11:31:46.6366529Z 
2025-01-17T11:31:46.6366776Z Packets:   ████████████████▊                                                               42072/200000 [00:00<00:01, 104296.86it/s][A
2025-01-17T11:31:46.6366908Z 
2025-01-17T11:31:46.6367160Z Packets:   █████████████████████                                                           52520/200000 [00:00<00:01, 104362.50it/s][A
2025-01-17T11:31:46.6367165Z 
2025-01-17T11:31:46.6367415Z Packets:   █████████████████████████▏                                                      63015/200000 [00:00<00:01, 104558.05it/s][A
2025-01-17T11:31:46.6367420Z 
2025-01-17T11:31:46.6367679Z Packets:   █████████████████████████████▍                                                  73556/200000 [00:00<00:01, 104834.40it/s][A
2025-01-17T11:31:46.6367683Z 
2025-01-17T11:31:46.6367941Z Packets:   █████████████████████████████████▌                                              84040/200000 [00:00<00:01, 103948.11it/s][A
2025-01-17T11:31:46.6367959Z 
2025-01-17T11:31:46.6368225Z Packets:   █████████████████████████████████████▊                                          94437/200000 [00:00<00:01, 103424.00it/s][A
2025-01-17T11:31:46.6368243Z 
2025-01-17T11:31:46.6368516Z Packets:   ██████████████████████████████████████████                                      105133/200000 [00:01<00:00, 104503.87it/s][A
2025-01-17T11:31:46.6368524Z 
2025-01-17T11:31:46.6368801Z Packets:   ██████████████████████████████████████████████▎                                 115870/200000 [00:01<00:00, 105374.41it/s][A
2025-01-17T11:31:46.6368806Z 
2025-01-17T11:31:46.6369091Z Packets:   ██████████████████████████████████████████████████▋                             126626/200000 [00:01<00:00, 106033.85it/s][A
2025-01-17T11:31:46.6369096Z 
2025-01-17T11:31:46.6369384Z Packets:   ██████████████████████████████████████████████████████▉                         137231/200000 [00:01<00:00, 105988.30it/s][A
2025-01-17T11:31:46.6369389Z 
2025-01-17T11:31:46.6369700Z Packets:   ███████████████████████████████████████████████████████████▏                    147831/200000 [00:01<00:00, 105858.37it/s][A
2025-01-17T11:31:46.6369722Z 
2025-01-17T11:31:46.6370015Z Packets:   ███████████████████████████████████████████████████████████████▍                158502/200000 [00:01<00:00, 106111.51it/s][A
2025-01-17T11:31:46.6370020Z 
2025-01-17T11:31:46.6370331Z Packets:   ███████████████████████████████████████████████████████████████████▋            169114/200000 [00:01<00:00, 104757.55it/s][A
2025-01-17T11:31:46.6370336Z 
2025-01-17T11:31:46.6370642Z Packets:   ███████████████████████████████████████████████████████████████████████▊        179611/200000 [00:01<00:00, 104819.77it/s][A
2025-01-17T11:31:46.6370647Z 
2025-01-17T11:31:46.6370963Z Packets:   ████████████████████████████████████████████████████████████████████████████▏   190320/200000 [00:01<00:00, 105490.94it/s][A
2025-01-17T11:31:46.6371099Z Iterations:                                                                                15/? [06:08<00:00,  7.73s/it]
2025-01-17T11:31:46.6371207Z 
2025-01-17T11:31:46.6371520Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105490.94it/s][A
2025-01-17T11:31:46.6371608Z 
2025-01-17T11:31:46.6371836Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6371841Z 
2025-01-17T11:31:46.6372072Z Packets:   ████▏                                                                           10552/200000 [00:00<00:01, 105071.19it/s][A
2025-01-17T11:31:46.6372077Z 
2025-01-17T11:31:46.6372309Z Packets:   ████████▍                                                                       21129/200000 [00:00<00:01, 105479.23it/s][A
2025-01-17T11:31:46.6372314Z 
2025-01-17T11:31:46.6372650Z Packets:   ████████████▋                                                                   31677/200000 [00:00<00:01, 105408.20it/s][A
2025-01-17T11:31:46.6372667Z 
2025-01-17T11:31:46.6372914Z Packets:   ████████████████▉                                                               42247/200000 [00:00<00:01, 105522.93it/s][A
2025-01-17T11:31:46.6372930Z 
2025-01-17T11:31:46.6373175Z Packets:   █████████████████████▏                                                          52831/200000 [00:00<00:01, 105635.05it/s][A
2025-01-17T11:31:46.6373180Z 
2025-01-17T11:31:46.6373430Z Packets:   █████████████████████████▎                                                      63395/200000 [00:00<00:01, 105315.06it/s][A
2025-01-17T11:31:46.6373435Z 
2025-01-17T11:31:46.6373689Z Packets:   █████████████████████████████▌                                                  73927/200000 [00:00<00:01, 105299.92it/s][A
2025-01-17T11:31:46.6373697Z 
2025-01-17T11:31:46.6373955Z Packets:   █████████████████████████████████▊                                              84458/200000 [00:00<00:01, 105035.98it/s][A
2025-01-17T11:31:46.6373960Z 
2025-01-17T11:31:46.6374239Z Packets:   █████████████████████████████████████▉                                          94992/200000 [00:00<00:00, 105129.52it/s][A
2025-01-17T11:31:46.6374258Z 
2025-01-17T11:31:46.6374529Z Packets:   ██████████████████████████████████████████▏                                     105506/200000 [00:01<00:00, 104975.09it/s][A
2025-01-17T11:31:46.6374534Z 
2025-01-17T11:31:46.6375027Z Packets:   ██████████████████████████████████████████████▍                                 116004/200000 [00:01<00:00, 104806.50it/s][A
2025-01-17T11:31:46.6375038Z 
2025-01-17T11:31:46.6375601Z Packets:   ██████████████████████████████████████████████████▌                             126485/200000 [00:01<00:00, 104587.85it/s][A
2025-01-17T11:31:46.6375610Z 
2025-01-17T11:31:46.6376142Z Packets:   ██████████████████████████████████████████████████████▊                         136958/200000 [00:01<00:00, 104629.97it/s][A
2025-01-17T11:31:46.6376150Z 
2025-01-17T11:31:46.6376558Z Packets:   ███████████████████████████████████████████████████████████                     147534/200000 [00:01<00:00, 104969.60it/s][A
2025-01-17T11:31:46.6376726Z 
2025-01-17T11:31:46.6377151Z Packets:   ███████████████████████████████████████████████████████████████▎                158127/200000 [00:01<00:00, 105255.91it/s][A
2025-01-17T11:31:46.6377157Z 
2025-01-17T11:31:46.6377463Z Packets:   ███████████████████████████████████████████████████████████████████▌            168796/200000 [00:01<00:00, 105686.33it/s][A
2025-01-17T11:31:46.6377468Z 
2025-01-17T11:31:46.6377774Z Packets:   ███████████████████████████████████████████████████████████████████████▋        179365/200000 [00:01<00:00, 105334.42it/s][A
2025-01-17T11:31:46.6377779Z 
2025-01-17T11:31:46.6378093Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    189899/200000 [00:01<00:00, 105194.18it/s][A
2025-01-17T11:31:46.6378231Z Iterations:                                                                                16/? [06:11<00:00,  6.40s/it]
2025-01-17T11:31:46.6378254Z 
2025-01-17T11:31:46.6378575Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105194.18it/s][A
2025-01-17T11:31:46.6378597Z 
2025-01-17T11:31:46.6378818Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-17T11:31:46.6378823Z 
2025-01-17T11:31:46.6379054Z Packets:   █▋                                                                              10520/500000 [00:00<00:13, 34966.47it/s][A
2025-01-17T11:31:46.6379058Z 
2025-01-17T11:31:46.6379280Z Packets:   ██▏                                                                             14017/500000 [00:00<00:13, 34733.66it/s][A
2025-01-17T11:31:46.6379285Z 
2025-01-17T11:31:46.6379505Z Packets:   ██▊                                                                             17536/500000 [00:00<00:13, 34875.91it/s][A
2025-01-17T11:31:46.6379510Z 
2025-01-17T11:31:46.6379746Z Packets:   ███▎                                                                            21030/500000 [00:00<00:13, 34894.18it/s][A
2025-01-17T11:31:46.6379760Z 
2025-01-17T11:31:46.6379987Z Packets:   ███▉                                                                            24518/500000 [00:00<00:13, 34794.93it/s][A
2025-01-17T11:31:46.6379992Z 
2025-01-17T11:31:46.6380218Z Packets:   ████▍                                                                           27995/500000 [00:00<00:13, 34676.52it/s][A
2025-01-17T11:31:46.6380223Z 
2025-01-17T11:31:46.6380443Z Packets:   █████                                                                           31460/500000 [00:00<00:13, 34645.84it/s][A
2025-01-17T11:31:46.6380447Z 
2025-01-17T11:31:46.6380675Z Packets:   █████▌                                                                          34930/500000 [00:01<00:13, 34660.75it/s][A
2025-01-17T11:31:46.6380680Z 
2025-01-17T11:31:46.6380905Z Packets:   ██████▏                                                                         38395/500000 [00:01<00:13, 34625.65it/s][A
2025-01-17T11:31:46.6380999Z 
2025-01-17T11:31:46.6381307Z Packets:   ██████▋                                                                         41890/500000 [00:01<00:13, 34720.72it/s][A
2025-01-17T11:31:46.6381313Z 
2025-01-17T11:31:46.6381538Z Packets:   ███████▎                                                                        45390/500000 [00:01<00:13, 34801.91it/s][A
2025-01-17T11:31:46.6381546Z 
2025-01-17T11:31:46.6381770Z Packets:   ███████▊                                                                        48882/500000 [00:01<00:12, 34836.97it/s][A
2025-01-17T11:31:46.6381775Z 
2025-01-17T11:31:46.6382002Z Packets:   ████████▍                                                                       52430/500000 [00:01<00:12, 35029.09it/s][A
2025-01-17T11:31:46.6382006Z 
2025-01-17T11:31:46.6382231Z Packets:   ████████▉                                                                       55934/500000 [00:01<00:12, 34775.04it/s][A
2025-01-17T11:31:46.6382247Z 
2025-01-17T11:31:46.6382479Z Packets:   █████████▌                                                                      59423/500000 [00:01<00:12, 34803.60it/s][A
2025-01-17T11:31:46.6382491Z 
2025-01-17T11:31:46.6382839Z Packets:   ██████████                                                                      62904/500000 [00:01<00:12, 34777.34it/s][A
2025-01-17T11:31:46.6382845Z 
2025-01-17T11:31:46.6383078Z Packets:   ██████████▋                                                                     66426/500000 [00:01<00:12, 34908.97it/s][A
2025-01-17T11:31:46.6383083Z 
2025-01-17T11:31:46.6383312Z Packets:   ███████████▏                                                                    69918/500000 [00:02<00:12, 34671.46it/s][A
2025-01-17T11:31:46.6383317Z 
2025-01-17T11:31:46.6383548Z Packets:   ███████████▋                                                                    73386/500000 [00:02<00:12, 34624.28it/s][A
2025-01-17T11:31:46.6383566Z 
2025-01-17T11:31:46.6383798Z Packets:   ████████████▎                                                                   76889/500000 [00:02<00:12, 34744.50it/s][A
2025-01-17T11:31:46.6383815Z 
2025-01-17T11:31:46.6384045Z Packets:   ████████████▊                                                                   80364/500000 [00:02<00:12, 34533.69it/s][A
2025-01-17T11:31:46.6384050Z 
2025-01-17T11:31:46.6384283Z Packets:   █████████████▍                                                                  83820/500000 [00:02<00:12, 34539.33it/s][A
2025-01-17T11:31:46.6384288Z 
2025-01-17T11:31:46.6384520Z Packets:   █████████████▉                                                                  87275/500000 [00:02<00:11, 34508.48it/s][A
2025-01-17T11:31:46.6384525Z 
2025-01-17T11:31:46.6384762Z Packets:   ██████████████▌                                                                 90727/500000 [00:02<00:11, 34272.53it/s][A
2025-01-17T11:31:46.6384767Z 
2025-01-17T11:31:46.6385151Z Packets:   ███████████████                                                                 94155/500000 [00:02<00:11, 34264.43it/s][A
2025-01-17T11:31:46.6385265Z 
2025-01-17T11:31:46.6385509Z Packets:   ███████████████▌                                                                97582/500000 [00:02<00:11, 34162.81it/s][A
2025-01-17T11:31:46.6385515Z 
2025-01-17T11:31:46.6385757Z Packets:   ████████████████▏                                                               100999/500000 [00:02<00:11, 34144.48it/s][A
2025-01-17T11:31:46.6385762Z 
2025-01-17T11:31:46.6386004Z Packets:   ████████████████▋                                                               104500/500000 [00:03<00:11, 34402.44it/s][A
2025-01-17T11:31:46.6386009Z 
2025-01-17T11:31:46.6386246Z Packets:   █████████████████▎                                                              107964/500000 [00:03<00:11, 34470.61it/s][A
2025-01-17T11:31:46.6386253Z 
2025-01-17T11:31:46.6386491Z Packets:   █████████████████▊                                                              111447/500000 [00:03<00:11, 34577.69it/s][A
2025-01-17T11:31:46.6386509Z 
2025-01-17T11:31:46.6386760Z Packets:   ██████████████████▍                                                             114905/500000 [00:03<00:11, 34506.47it/s][A
2025-01-17T11:31:46.6386765Z 
2025-01-17T11:31:46.6387006Z Packets:   ██████████████████▉                                                             118381/500000 [00:03<00:11, 34581.10it/s][A
2025-01-17T11:31:46.6387011Z 
2025-01-17T11:31:46.6387255Z Packets:   ███████████████████▍                                                            121840/500000 [00:03<00:10, 34560.73it/s][A
2025-01-17T11:31:46.6387260Z 
2025-01-17T11:31:46.6387501Z Packets:   ████████████████████                                                            125326/500000 [00:03<00:10, 34648.88it/s][A
2025-01-17T11:31:46.6387507Z 
2025-01-17T11:31:46.6387752Z Packets:   ████████████████████▌                                                           128808/500000 [00:03<00:10, 34696.76it/s][A
2025-01-17T11:31:46.6387769Z 
2025-01-17T11:31:46.6388013Z Packets:   █████████████████████▏                                                          132278/500000 [00:03<00:10, 34606.27it/s][A
2025-01-17T11:31:46.6388028Z 
2025-01-17T11:31:46.6388273Z Packets:   █████████████████████▋                                                          135739/500000 [00:03<00:10, 34554.96it/s][A
2025-01-17T11:31:46.6388278Z 
2025-01-17T11:31:46.6388525Z Packets:   ██████████████████████▎                                                         139195/500000 [00:04<00:10, 34513.69it/s][A
2025-01-17T11:31:46.6388529Z 
2025-01-17T11:31:46.6388775Z Packets:   ██████████████████████▊                                                         142665/500000 [00:04<00:10, 34568.80it/s][A
2025-01-17T11:31:46.6388779Z 
2025-01-17T11:31:46.6389027Z Packets:   ███████████████████████▍                                                        146122/500000 [00:04<00:10, 34482.92it/s][A
2025-01-17T11:31:46.6389042Z 
2025-01-17T11:31:46.6389289Z Packets:   ███████████████████████▉                                                        149571/500000 [00:04<00:10, 33339.01it/s][A
2025-01-17T11:31:46.6389302Z 
2025-01-17T11:31:46.6389554Z Packets:   ████████████████████████▍                                                       153018/500000 [00:04<00:10, 33669.34it/s][A
2025-01-17T11:31:46.6389559Z 
2025-01-17T11:31:46.6389808Z Packets:   █████████████████████████                                                       156427/500000 [00:04<00:10, 33791.53it/s][A
2025-01-17T11:31:46.6389813Z 
2025-01-17T11:31:46.6390063Z Packets:   █████████████████████████▌                                                      159866/500000 [00:04<00:10, 33965.64it/s][A
2025-01-17T11:31:46.6390070Z 
2025-01-17T11:31:46.6390322Z Packets:   ██████████████████████████                                                      163267/500000 [00:04<00:09, 33956.46it/s][A
2025-01-17T11:31:46.6390330Z 
2025-01-17T11:31:46.6390675Z Packets:   ██████████████████████████▋                                                     166666/500000 [00:04<00:09, 33885.08it/s][A
2025-01-17T11:31:46.6390763Z 
2025-01-17T11:31:46.6391018Z Packets:   ███████████████████████████▏                                                    170168/500000 [00:04<00:09, 34223.00it/s][A
2025-01-17T11:31:46.6391023Z 
2025-01-17T11:31:46.6391275Z Packets:   ███████████████████████████▊                                                    173592/500000 [00:05<00:09, 34178.44it/s][A
2025-01-17T11:31:46.6391280Z 
2025-01-17T11:31:46.6391535Z Packets:   ████████████████████████████▎                                                   177011/500000 [00:05<00:09, 34145.40it/s][A
2025-01-17T11:31:46.6391539Z 
2025-01-17T11:31:46.6391791Z Packets:   ████████████████████████████▊                                                   180427/500000 [00:05<00:09, 34134.38it/s][A
2025-01-17T11:31:46.6391796Z 
2025-01-17T11:31:46.6392050Z Packets:   █████████████████████████████▍                                                  183841/500000 [00:05<00:09, 33015.78it/s][A
2025-01-17T11:31:46.6392067Z 
2025-01-17T11:31:46.6392335Z Packets:   █████████████████████████████▉                                                  187166/500000 [00:05<00:09, 33081.95it/s][A
2025-01-17T11:31:46.6392340Z 
2025-01-17T11:31:46.6392795Z Packets:   ██████████████████████████████▍                                                 190509/500000 [00:05<00:09, 33182.56it/s][A
2025-01-17T11:31:46.6392803Z 
2025-01-17T11:31:46.6393072Z Packets:   ███████████████████████████████                                                 193832/500000 [00:05<00:09, 33148.35it/s][A
2025-01-17T11:31:46.6393081Z 
2025-01-17T11:31:46.6393341Z Packets:   ███████████████████████████████▌                                                197150/500000 [00:05<00:09, 33133.33it/s][A
2025-01-17T11:31:46.6393345Z 
2025-01-17T11:31:46.6393605Z Packets:   ████████████████████████████████                                                200522/500000 [00:05<00:08, 33302.19it/s][A
2025-01-17T11:31:46.6393624Z 
2025-01-17T11:31:46.6393883Z Packets:   ████████████████████████████████▌                                               203854/500000 [00:05<00:08, 33125.82it/s][A
2025-01-17T11:31:46.6393900Z 
2025-01-17T11:31:46.6394163Z Packets:   █████████████████████████████████▏                                              207207/500000 [00:06<00:08, 33245.81it/s][A
2025-01-17T11:31:46.6394167Z 
2025-01-17T11:31:46.6394427Z Packets:   █████████████████████████████████▋                                              210589/500000 [00:06<00:08, 33416.16it/s][A
2025-01-17T11:31:46.6394431Z 
2025-01-17T11:31:46.6394695Z Packets:   ██████████████████████████████████▏                                             213932/500000 [00:06<00:08, 33324.07it/s][A
2025-01-17T11:31:46.6394699Z 
2025-01-17T11:31:46.6394959Z Packets:   ██████████████████████████████████▊                                             217265/500000 [00:06<00:08, 32455.37it/s][A
2025-01-17T11:31:46.6395104Z 
2025-01-17T11:31:46.6395374Z Packets:   ███████████████████████████████████▎                                            220532/500000 [00:06<00:08, 32514.62it/s][A
2025-01-17T11:31:46.6395492Z 
2025-01-17T11:31:46.6395757Z Packets:   ███████████████████████████████████▊                                            223788/500000 [00:06<00:08, 32486.80it/s][A
2025-01-17T11:31:46.6395766Z 
2025-01-17T11:31:46.6396029Z Packets:   ████████████████████████████████████▎                                           227170/500000 [00:06<00:08, 32881.85it/s][A
2025-01-17T11:31:46.6396033Z 
2025-01-17T11:31:46.6396300Z Packets:   ████████████████████████████████████▉                                           230525/500000 [00:06<00:08, 33080.00it/s][A
2025-01-17T11:31:46.6396305Z 
2025-01-17T11:31:46.6396569Z Packets:   █████████████████████████████████████▍                                          233961/500000 [00:06<00:07, 33461.66it/s][A
2025-01-17T11:31:46.6396573Z 
2025-01-17T11:31:46.6396853Z Packets:   █████████████████████████████████████▉                                          237318/500000 [00:06<00:07, 33492.39it/s][A
2025-01-17T11:31:46.6396872Z 
2025-01-17T11:31:46.6397138Z Packets:   ██████████████████████████████████████▌                                         240669/500000 [00:07<00:07, 33367.07it/s][A
2025-01-17T11:31:46.6397143Z 
2025-01-17T11:31:46.6397412Z Packets:   ███████████████████████████████████████                                         244104/500000 [00:07<00:07, 33659.38it/s][A
2025-01-17T11:31:46.6397417Z 
2025-01-17T11:31:46.6397684Z Packets:   ███████████████████████████████████████▌                                        247471/500000 [00:07<00:07, 33647.34it/s][A
2025-01-17T11:31:46.6397691Z 
2025-01-17T11:31:46.6397959Z Packets:   ████████████████████████████████████████▏                                       250837/500000 [00:07<00:07, 32559.70it/s][A
2025-01-17T11:31:46.6397964Z 
2025-01-17T11:31:46.6398240Z Packets:   ████████████████████████████████████████▋                                       254176/500000 [00:07<00:07, 32799.91it/s][A
2025-01-17T11:31:46.6398258Z 
2025-01-17T11:31:46.6398560Z Packets:   █████████████████████████████████████████▏                                      257508/500000 [00:07<00:07, 32948.56it/s][A
2025-01-17T11:31:46.6398568Z 
2025-01-17T11:31:46.6399096Z Packets:   █████████████████████████████████████████▋                                      260874/500000 [00:07<00:07, 33157.73it/s][A
2025-01-17T11:31:46.6399107Z 
2025-01-17T11:31:46.6399629Z Packets:   ██████████████████████████████████████████▎                                     264194/500000 [00:07<00:07, 33074.40it/s][A
2025-01-17T11:31:46.6399637Z 
2025-01-17T11:31:46.6400139Z Packets:   ██████████████████████████████████████████▊                                     267510/500000 [00:07<00:07, 33099.60it/s][A
2025-01-17T11:31:46.6400147Z 
2025-01-17T11:31:46.6400533Z Packets:   ███████████████████████████████████████████▎                                    270897/500000 [00:07<00:06, 33323.93it/s][A
2025-01-17T11:31:46.6400658Z 
2025-01-17T11:31:46.6400950Z Packets:   ███████████████████████████████████████████▉                                    274246/500000 [00:08<00:06, 33370.84it/s][A
2025-01-17T11:31:46.6401043Z 
2025-01-17T11:31:46.6401322Z Packets:   ████████████████████████████████████████████▍                                   277585/500000 [00:08<00:06, 33350.16it/s][A
2025-01-17T11:31:46.6401331Z 
2025-01-17T11:31:46.6401603Z Packets:   ████████████████████████████████████████████▉                                   281043/500000 [00:08<00:06, 33716.90it/s][A
2025-01-17T11:31:46.6401608Z 
2025-01-17T11:31:46.6401884Z Packets:   █████████████████████████████████████████████▌                                  284416/500000 [00:08<00:06, 33683.30it/s][A
2025-01-17T11:31:46.6401889Z 
2025-01-17T11:31:46.6402162Z Packets:   ██████████████████████████████████████████████                                  287785/500000 [00:08<00:06, 31995.32it/s][A
2025-01-17T11:31:46.6402180Z 
2025-01-17T11:31:46.6402458Z Packets:   ██████████████████████████████████████████████▌                                 291177/500000 [00:08<00:06, 32548.63it/s][A
2025-01-17T11:31:46.6402476Z 
2025-01-17T11:31:46.6402967Z Packets:   ███████████████████████████████████████████████▏                                294542/500000 [00:08<00:06, 32868.25it/s][A
2025-01-17T11:31:46.6402975Z 
2025-01-17T11:31:46.6403255Z Packets:   ███████████████████████████████████████████████▋                                297945/500000 [00:08<00:06, 33209.27it/s][A
2025-01-17T11:31:46.6403260Z 
2025-01-17T11:31:46.6403538Z Packets:   ████████████████████████████████████████████████▏                               301326/500000 [00:08<00:05, 33386.12it/s][A
2025-01-17T11:31:46.6403543Z 
2025-01-17T11:31:46.6403820Z Packets:   ████████████████████████████████████████████████▊                               304817/500000 [00:08<00:05, 33838.90it/s][A
2025-01-17T11:31:46.6403825Z 
2025-01-17T11:31:46.6404099Z Packets:   █████████████████████████████████████████████████▎                              308261/500000 [00:09<00:05, 34017.27it/s][A
2025-01-17T11:31:46.6404381Z 
2025-01-17T11:31:46.6404671Z Packets:   █████████████████████████████████████████████████▊                              311667/500000 [00:09<00:05, 33874.72it/s][A
2025-01-17T11:31:46.6404676Z 
2025-01-17T11:31:46.6404954Z Packets:   ██████████████████████████████████████████████████▍                             315125/500000 [00:09<00:05, 34084.21it/s][A
2025-01-17T11:31:46.6404959Z 
2025-01-17T11:31:46.6405238Z Packets:   ██████████████████████████████████████████████████▉                             318536/500000 [00:09<00:05, 34025.76it/s][A
2025-01-17T11:31:46.6405243Z 
2025-01-17T11:31:46.6405526Z Packets:   ███████████████████████████████████████████████████▌                            321940/500000 [00:09<00:05, 33060.25it/s][A
2025-01-17T11:31:46.6405530Z 
2025-01-17T11:31:46.6405810Z Packets:   ████████████████████████████████████████████████████                            325275/500000 [00:09<00:05, 33143.29it/s][A
2025-01-17T11:31:46.6405831Z 
2025-01-17T11:31:46.6406125Z Packets:   ████████████████████████████████████████████████████▌                           328669/500000 [00:09<00:05, 33377.87it/s][A
2025-01-17T11:31:46.6406130Z 
2025-01-17T11:31:46.6406413Z Packets:   █████████████████████████████████████████████████████▏                          332033/500000 [00:09<00:05, 33455.16it/s][A
2025-01-17T11:31:46.6406418Z 
2025-01-17T11:31:46.6406703Z Packets:   █████████████████████████████████████████████████████▋                          335449/500000 [00:09<00:04, 33663.47it/s][A
2025-01-17T11:31:46.6406708Z 
2025-01-17T11:31:46.6406991Z Packets:   ██████████████████████████████████████████████████████▏                         338837/500000 [00:10<00:04, 33728.04it/s][A
2025-01-17T11:31:46.6406998Z 
2025-01-17T11:31:46.6407275Z Packets:   ██████████████████████████████████████████████████████▊                         342267/500000 [00:10<00:04, 33897.33it/s][A
2025-01-17T11:31:46.6407296Z 
2025-01-17T11:31:46.6407580Z Packets:   ███████████████████████████████████████████████████████▎                        345701/500000 [00:10<00:04, 34028.33it/s][A
2025-01-17T11:31:46.6407597Z 
2025-01-17T11:31:46.6407881Z Packets:   ███████████████████████████████████████████████████████▊                        349105/500000 [00:10<00:04, 33941.08it/s][A
2025-01-17T11:31:46.6407886Z 
2025-01-17T11:31:46.6408174Z Packets:   ████████████████████████████████████████████████████████▍                       352500/500000 [00:10<00:04, 33778.92it/s][A
2025-01-17T11:31:46.6408179Z 
2025-01-17T11:31:46.6408465Z Packets:   ████████████████████████████████████████████████████████▉                       355879/500000 [00:10<00:04, 32669.45it/s][A
2025-01-17T11:31:46.6408470Z 
2025-01-17T11:31:46.6408759Z Packets:   █████████████████████████████████████████████████████████▍                      359318/500000 [00:10<00:04, 33170.62it/s][A
2025-01-17T11:31:46.6408860Z 
2025-01-17T11:31:46.6409147Z Packets:   ██████████████████████████████████████████████████████████                      362714/500000 [00:10<00:04, 33401.58it/s][A
2025-01-17T11:31:46.6409256Z 
2025-01-17T11:31:46.6409547Z Packets:   ██████████████████████████████████████████████████████████▌                     366098/500000 [00:10<00:03, 33526.20it/s][A
2025-01-17T11:31:46.6409551Z 
2025-01-17T11:31:46.6409843Z Packets:   ███████████████████████████████████████████████████████████                     369519/500000 [00:10<00:03, 33719.53it/s][A
2025-01-17T11:31:46.6409848Z 
2025-01-17T11:31:46.6410146Z Packets:   ███████████████████████████████████████████████████████████▋                    372936/500000 [00:11<00:03, 33852.94it/s][A
2025-01-17T11:31:46.6410151Z 
2025-01-17T11:31:46.6410443Z Packets:   ████████████████████████████████████████████████████████████▏                   376348/500000 [00:11<00:03, 33931.98it/s][A
2025-01-17T11:31:46.6410448Z 
2025-01-17T11:31:46.6410738Z Packets:   ████████████████████████████████████████████████████████████▊                   379743/500000 [00:11<00:03, 33867.17it/s][A
2025-01-17T11:31:46.6410773Z 
2025-01-17T11:31:46.6411062Z Packets:   █████████████████████████████████████████████████████████████▎                  383135/500000 [00:11<00:03, 33879.93it/s][A
2025-01-17T11:31:46.6411067Z 
2025-01-17T11:31:46.6411359Z Packets:   █████████████████████████████████████████████████████████████▊                  386524/500000 [00:11<00:03, 33857.74it/s][A
2025-01-17T11:31:46.6411364Z 
2025-01-17T11:31:46.6411658Z Packets:   ██████████████████████████████████████████████████████████████▍                 389911/500000 [00:11<00:03, 32533.55it/s][A
2025-01-17T11:31:46.6411663Z 
2025-01-17T11:31:46.6411953Z Packets:   ██████████████████████████████████████████████████████████████▉                 393311/500000 [00:11<00:03, 32958.10it/s][A
2025-01-17T11:31:46.6411961Z 
2025-01-17T11:31:46.6412254Z Packets:   ███████████████████████████████████████████████████████████████▍                396732/500000 [00:11<00:03, 33325.24it/s][A
2025-01-17T11:31:46.6412348Z 
2025-01-17T11:31:46.6412767Z Packets:   ████████████████████████████████████████████████████████████████                400139/500000 [00:11<00:02, 33545.15it/s][A
2025-01-17T11:31:46.6412773Z 
2025-01-17T11:31:46.6413074Z Packets:   ████████████████████████████████████████████████████████████████▌               403499/500000 [00:11<00:02, 33542.85it/s][A
2025-01-17T11:31:46.6413079Z 
2025-01-17T11:31:46.6413376Z Packets:   █████████████████████████████████████████████████████████████████               406907/500000 [00:12<00:02, 33702.51it/s][A
2025-01-17T11:31:46.6413381Z 
2025-01-17T11:31:46.6413679Z Packets:   █████████████████████████████████████████████████████████████████▋              410321/500000 [00:12<00:02, 33826.88it/s][A
2025-01-17T11:31:46.6413684Z 
2025-01-17T11:31:46.6413989Z Packets:   ██████████████████████████████████████████████████████████████████▏             413706/500000 [00:12<00:02, 33755.44it/s][A
2025-01-17T11:31:46.6414014Z 
2025-01-17T11:31:46.6414313Z Packets:   ██████████████████████████████████████████████████████████████████▋             417119/500000 [00:12<00:02, 33862.68it/s][A
2025-01-17T11:31:46.6414442Z 
2025-01-17T11:31:46.6414747Z Packets:   ███████████████████████████████████████████████████████████████████▎            420542/500000 [00:12<00:02, 33971.57it/s][A
2025-01-17T11:31:46.6414752Z 
2025-01-17T11:31:46.6415051Z Packets:   ███████████████████████████████████████████████████████████████████▊            423940/500000 [00:12<00:02, 32912.95it/s][A
2025-01-17T11:31:46.6415058Z 
2025-01-17T11:31:46.6415358Z Packets:   ████████████████████████████████████████████████████████████████████▎           427310/500000 [00:12<00:02, 33143.45it/s][A
2025-01-17T11:31:46.6415362Z 
2025-01-17T11:31:46.6415667Z Packets:   ████████████████████████████████████████████████████████████████████▉           430695/500000 [00:12<00:02, 33348.21it/s][A
2025-01-17T11:31:46.6415691Z 
2025-01-17T11:31:46.6416087Z Packets:   █████████████████████████████████████████████████████████████████████▍          434147/500000 [00:12<00:01, 33695.33it/s][A
2025-01-17T11:31:46.6416125Z 
2025-01-17T11:31:46.6416713Z Packets:   ██████████████████████████████████████████████████████████████████████          437560/500000 [00:12<00:01, 33820.61it/s][A
2025-01-17T11:31:46.6416723Z 
2025-01-17T11:31:46.6417287Z Packets:   ██████████████████████████████████████████████████████████████████████▌         440945/500000 [00:13<00:01, 33817.94it/s][A
2025-01-17T11:31:46.6417295Z 
2025-01-17T11:31:46.6417781Z Packets:   ███████████████████████████████████████████████████████████████████████         444329/500000 [00:13<00:01, 33662.46it/s][A
2025-01-17T11:31:46.6417789Z 
2025-01-17T11:31:46.6418098Z Packets:   ███████████████████████████████████████████████████████████████████████▋        447697/500000 [00:13<00:01, 33616.05it/s][A
2025-01-17T11:31:46.6418102Z 
2025-01-17T11:31:46.6418411Z Packets:   ████████████████████████████████████████████████████████████████████████▏       451127/500000 [00:13<00:01, 33819.45it/s][A
2025-01-17T11:31:46.6418669Z 
2025-01-17T11:31:46.6418989Z Packets:   ████████████████████████████████████████████████████████████████████████▋       454573/500000 [00:13<00:01, 34009.25it/s][A
2025-01-17T11:31:46.6418994Z 
2025-01-17T11:31:46.6419300Z Packets:   █████████████████████████████████████████████████████████████████████████▎      457975/500000 [00:13<00:01, 32866.73it/s][A
2025-01-17T11:31:46.6419305Z 
2025-01-17T11:31:46.6419613Z Packets:   █████████████████████████████████████████████████████████████████████████▊      461317/500000 [00:13<00:01, 33026.84it/s][A
2025-01-17T11:31:46.6419618Z 
2025-01-17T11:31:46.6419930Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     464701/500000 [00:13<00:01, 33264.19it/s][A
2025-01-17T11:31:46.6419935Z 
2025-01-17T11:31:46.6420239Z Packets:   ██████████████████████████████████████████████████████████████████████████▉     468086/500000 [00:13<00:00, 33436.48it/s][A
2025-01-17T11:31:46.6420265Z 
2025-01-17T11:31:46.6420574Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    471505/500000 [00:13<00:00, 33660.26it/s][A
2025-01-17T11:31:46.6420597Z 
2025-01-17T11:31:46.6420938Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    474911/500000 [00:14<00:00, 33778.71it/s][A
2025-01-17T11:31:46.6420944Z 
2025-01-17T11:31:46.6421257Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478291/500000 [00:14<00:00, 33686.04it/s][A
2025-01-17T11:31:46.6421262Z 
2025-01-17T11:31:46.6421571Z Packets:   █████████████████████████████████████████████████████████████████████████████   481731/500000 [00:14<00:00, 33898.64it/s][A
2025-01-17T11:31:46.6421575Z 
2025-01-17T11:31:46.6421883Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  485122/500000 [00:14<00:00, 33571.91it/s][A
2025-01-17T11:31:46.6421990Z 
2025-01-17T11:31:46.6422305Z Packets:   ██████████████████████████████████████████████████████████████████████████████▏ 488503/500000 [00:14<00:00, 33642.17it/s][A
2025-01-17T11:31:46.6422400Z 
2025-01-17T11:31:46.6422814Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 491869/500000 [00:14<00:00, 32822.17it/s][A
2025-01-17T11:31:46.6422819Z 
2025-01-17T11:31:46.6423140Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏495213/500000 [00:14<00:00, 33001.38it/s][A
2025-01-17T11:31:46.6423144Z 
2025-01-17T11:31:46.6423455Z Packets:   ███████████████████████████████████████████████████████████████████████████████▊498635/500000 [00:14<00:00, 33358.27it/s][A
2025-01-17T11:31:46.6423600Z Iterations:                                                                                17/? [06:28<00:00,  9.55s/it]
2025-01-17T11:31:46.6423605Z 
2025-01-17T11:31:46.6423941Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 33358.27it/s][A
2025-01-17T11:31:46.6424114Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6424268Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-17T11:31:46.6424603Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-17T11:31:46.6424975Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-17T11:31:46.6425398Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-17T11:31:46.6425882Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6426102Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6426211Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6426293Z 	Starting iteration 1 of 5
2025-01-17T11:31:46.6426389Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6426477Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-17T11:31:46.6426560Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-17T11:31:46.6426644Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6426648Z 
2025-01-17T11:31:46.6426742Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6426825Z 	Plasma stratification:
2025-01-17T11:31:46.6426924Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6427031Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-17T11:31:46.6427112Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-17T11:31:46.6427189Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-17T11:31:46.6427386Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-17T11:31:46.6427464Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-17T11:31:46.6427581Z 
2025-01-17T11:31:46.6427679Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6427760Z 	Current t_inner = 9974.969 K
2025-01-17T11:31:46.6427872Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-17T11:31:46.6427876Z 
2025-01-17T11:31:46.6427973Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6428049Z 	Starting iteration 2 of 5
2025-01-17T11:31:46.6428145Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6428227Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-17T11:31:46.6428308Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-17T11:31:46.6428392Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6428396Z 
2025-01-17T11:31:46.6428489Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6428568Z 	Plasma stratification:
2025-01-17T11:31:46.6428668Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6428769Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6428852Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-17T11:31:46.6428930Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-17T11:31:46.6429006Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-17T11:31:46.6429083Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-17T11:31:46.6429087Z 
2025-01-17T11:31:46.6429180Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6429260Z 	Current t_inner = 10736.784 K
2025-01-17T11:31:46.6429366Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-17T11:31:46.6429371Z 
2025-01-17T11:31:46.6429466Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6429543Z 	Starting iteration 3 of 5
2025-01-17T11:31:46.6429640Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6429721Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-17T11:31:46.6429810Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-17T11:31:46.6429891Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6429899Z 
2025-01-17T11:31:46.6430110Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-17T11:31:46.6430209Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6430287Z 	Plasma stratification:
2025-01-17T11:31:46.6430381Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6430477Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6430553Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-17T11:31:46.6430629Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-17T11:31:46.6430706Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-17T11:31:46.6430780Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-17T11:31:46.6430784Z 
2025-01-17T11:31:46.6430882Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6430956Z 	Current t_inner = 10718.886 K
2025-01-17T11:31:46.6431070Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-17T11:31:46.6431074Z 
2025-01-17T11:31:46.6431167Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6431250Z 	Starting iteration 4 of 5
2025-01-17T11:31:46.6431345Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6431430Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-17T11:31:46.6431512Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-17T11:31:46.6431597Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6431600Z 
2025-01-17T11:31:46.6431800Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-17T11:31:46.6431986Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:31:46.6432122Z 	Plasma stratification:
2025-01-17T11:31:46.6432298Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:31:46.6432473Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:31:46.6432736Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-17T11:31:46.6433040Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-17T11:31:46.6433179Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-17T11:31:46.6433444Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-17T11:31:46.6433452Z 
2025-01-17T11:31:46.6433595Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:31:46.6433674Z 	Current t_inner = 10695.170 K
2025-01-17T11:31:46.6433783Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-17T11:31:46.6433788Z 
2025-01-17T11:31:46.6433881Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6433967Z 	Simulation finished in 4 iterations 
2025-01-17T11:31:46.6434044Z 	Simulation took 13.14 s
2025-01-17T11:31:46.6434049Z 
2025-01-17T11:31:46.6434143Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6434223Z 	Starting iteration 5 of 5
2025-01-17T11:31:46.6434316Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6434403Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-17T11:31:46.6434495Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-17T11:31:46.6434583Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6434757Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-17T11:31:46.6434762Z 
2025-01-17T11:31:46.6434968Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f817e6380b0>
2025-01-17T11:31:46.6435155Z simulation = <tardis.simulation.base.Simulation object at 0x7f81481b7b30>
2025-01-17T11:31:46.6435160Z 
2025-01-17T11:31:46.6435251Z     def test_spectrum(self, simulation):
2025-01-17T11:31:46.6435414Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:31:46.6435508Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6435570Z     
2025-01-17T11:31:46.6435673Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6435735Z     
2025-01-17T11:31:46.6435818Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6435974Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-17T11:31:46.6436053Z             luminosity,
2025-01-17T11:31:46.6436117Z         )
2025-01-17T11:31:46.6436125Z 
2025-01-17T11:31:46.6436212Z tardis/tests/test_tardis_full.py:81: 
2025-01-17T11:31:46.6436321Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6436654Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6436736Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6436840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6436844Z 
2025-01-17T11:31:46.6437303Z args = (<function assert_allclose.<locals>.compare at 0x7f8170a76d40>, array([1.47106443e+39, 1.69486782e+39, 1.38661095e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-01-17T11:31:46.6437408Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6437659Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6437668Z 
2025-01-17T11:31:46.6437739Z     @wraps(func)
2025-01-17T11:31:46.6437815Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6437895Z         with self._recreate_cm():
2025-01-17T11:31:46.6437975Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6438052Z E           AssertionError: 
2025-01-17T11:31:46.6438156Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6438222Z E           
2025-01-17T11:31:46.6438317Z E           Mismatched elements: 4766 / 10000 (47.7%)
2025-01-17T11:31:46.6438450Z E           Max absolute difference among violations: 8.7789614e+38
2025-01-17T11:31:46.6438574Z E           Max relative difference among violations: 6.15158527
2025-01-17T11:31:46.6438737Z E            ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6438819Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6439072Z E            DESIRED: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6439249Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6439254Z 
2025-01-17T11:31:46.6439450Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6439626Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-17T11:31:46.6439630Z 
2025-01-17T11:31:46.6439833Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f817e6382f0>
2025-01-17T11:31:46.6440019Z simulation = <tardis.simulation.base.Simulation object at 0x7f81481b7b30>
2025-01-17T11:31:46.6440023Z 
2025-01-17T11:31:46.6440124Z     def test_virtual_spectrum(self, simulation):
2025-01-17T11:31:46.6440297Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-17T11:31:46.6440389Z         expected = self.get_expected_data(key)
2025-01-17T11:31:46.6440459Z     
2025-01-17T11:31:46.6440557Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6440622Z     
2025-01-17T11:31:46.6440707Z >       assert_quantity_allclose(
2025-01-17T11:31:46.6440874Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-17T11:31:46.6440943Z             luminosity,
2025-01-17T11:31:46.6441006Z         )
2025-01-17T11:31:46.6441011Z 
2025-01-17T11:31:46.6441097Z tardis/tests/test_tardis_full.py:92: 
2025-01-17T11:31:46.6441199Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6441521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6441606Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6441704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6441709Z 
2025-01-17T11:31:46.6442161Z args = (<function assert_allclose.<locals>.compare at 0x7f811a473060>, array([1.43474324e+39, 1.36762963e+39, 1.39613134e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-01-17T11:31:46.6442266Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6442510Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6442514Z 
2025-01-17T11:31:46.6442773Z     @wraps(func)
2025-01-17T11:31:46.6442876Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6442957Z         with self._recreate_cm():
2025-01-17T11:31:46.6443040Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6443117Z E           AssertionError: 
2025-01-17T11:31:46.6443215Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6443282Z E           
2025-01-17T11:31:46.6443372Z E           Mismatched elements: 5913 / 10000 (59.1%)
2025-01-17T11:31:46.6443504Z E           Max absolute difference among violations: 3.37212146e+38
2025-01-17T11:31:46.6443634Z E           Max relative difference among violations: 18356.9353581
2025-01-17T11:31:46.6443797Z E            ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6443884Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6444044Z E            DESIRED: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6444120Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6444124Z 
2025-01-17T11:31:46.6444318Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6444545Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-17T11:31:46.6444550Z 
2025-01-17T11:31:46.6444866Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e638c50>
2025-01-17T11:31:46.6445048Z simulation = <tardis.simulation.base.Simulation object at 0x7f8169afbc80>
2025-01-17T11:31:46.6445367Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-17T11:31:46.6445373Z 
2025-01-17T11:31:46.6445600Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6445701Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6445778Z         j_blue_estimator = (
2025-01-17T11:31:46.6445985Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6446049Z         )
2025-01-17T11:31:46.6446187Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6446296Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6446300Z 
2025-01-17T11:31:46.6446427Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6446531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6446536Z 
2025-01-17T11:31:46.6446788Z args = (<function assert_allclose.<locals>.compare at 0x7f8169959d00>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6446861Z        [0., 0., .....,
2025-01-17T11:31:46.6446936Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6447011Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6447085Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6447325Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6447330Z 
2025-01-17T11:31:46.6447398Z     @wraps(func)
2025-01-17T11:31:46.6447473Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6447553Z         with self._recreate_cm():
2025-01-17T11:31:46.6447634Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6447713Z E           AssertionError: 
2025-01-17T11:31:46.6447810Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6447876Z E           
2025-01-17T11:31:46.6447980Z E           Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.6448109Z E           Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.6448239Z E           Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.6448340Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448422Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448505Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6448603Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448679Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6448759Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6448763Z 
2025-01-17T11:31:46.6448950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6449162Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-17T11:31:46.6449166Z 
2025-01-17T11:31:46.6449472Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639280>
2025-01-17T11:31:46.6449662Z simulation = <tardis.simulation.base.Simulation object at 0x7f8169afbc80>
2025-01-17T11:31:46.6449832Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-17T11:31:46.6449837Z 
2025-01-17T11:31:46.6449939Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6450033Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6450218Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6450367Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6450463Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6450571Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6450575Z 
2025-01-17T11:31:46.6450700Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6450800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6451215Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6451373Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6451474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6451478Z 
2025-01-17T11:31:46.6451929Z args = (<function assert_allclose.<locals>.compare at 0x7f811a472fc0>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-01-17T11:31:46.6452027Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6452263Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6452269Z 
2025-01-17T11:31:46.6452340Z     @wraps(func)
2025-01-17T11:31:46.6452416Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6452496Z         with self._recreate_cm():
2025-01-17T11:31:46.6452680Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6452761Z E           AssertionError: 
2025-01-17T11:31:46.6452864Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6452932Z E           
2025-01-17T11:31:46.6453022Z E           Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.6453150Z E           Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.6453266Z E           Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.6453427Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6453504Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6453660Z E            DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6453738Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6453743Z 
2025-01-17T11:31:46.6453929Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6454159Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-17T11:31:46.6454168Z 
2025-01-17T11:31:46.6454481Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639a00>
2025-01-17T11:31:46.6454661Z simulation = <tardis.simulation.base.Simulation object at 0x7f8169afbc80>
2025-01-17T11:31:46.6454858Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-17T11:31:46.6454862Z 
2025-01-17T11:31:46.6454992Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6455090Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6455268Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6455417Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6455515Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6455631Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6455639Z 
2025-01-17T11:31:46.6455761Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6455865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6456190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6456273Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6456376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6456380Z 
2025-01-17T11:31:46.6456832Z args = (<function assert_allclose.<locals>.compare at 0x7f811a470d60>, array([1.54239369e+39, 1.54471048e+39, 1.53959524e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-01-17T11:31:46.6456930Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-01-17T11:31:46.6457178Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6457305Z 
2025-01-17T11:31:46.6457376Z     @wraps(func)
2025-01-17T11:31:46.6457553Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6457634Z         with self._recreate_cm():
2025-01-17T11:31:46.6457712Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6457789Z E           AssertionError: 
2025-01-17T11:31:46.6457887Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6457958Z E           
2025-01-17T11:31:46.6458048Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6458178Z E           Max absolute difference among violations: 5.54140241e+37
2025-01-17T11:31:46.6458303Z E           Max relative difference among violations: 156.87686073
2025-01-17T11:31:46.6458465Z E            ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-17T11:31:46.6458544Z E                  2.268272e+31, 2.225999e+31])
2025-01-17T11:31:46.6458708Z E            DESIRED: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-17T11:31:46.6458791Z E                  2.292907e+31, 2.257206e+31])
2025-01-17T11:31:46.6458800Z 
2025-01-17T11:31:46.6458992Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6459139Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6459143Z 
2025-01-17T11:31:46.6459146Z 
2025-01-17T11:31:46.6459518Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 108884.86it/s][A
2025-01-17T11:31:46.6459737Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-17T11:31:46.6459741Z 
2025-01-17T11:31:46.6460054Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639460>
2025-01-17T11:31:46.6460239Z simulation = <tardis.simulation.base.Simulation object at 0x7f815310a000>
2025-01-17T11:31:46.6460438Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-17T11:31:46.6460442Z 
2025-01-17T11:31:46.6460572Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6460674Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6460747Z         j_blue_estimator = (
2025-01-17T11:31:46.6460955Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6461021Z         )
2025-01-17T11:31:46.6461158Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6461268Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6461273Z 
2025-01-17T11:31:46.6461398Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6461499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6461503Z 
2025-01-17T11:31:46.6461759Z args = (<function assert_allclose.<locals>.compare at 0x7f814f592660>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6461832Z        [0., 0., .....,
2025-01-17T11:31:46.6461907Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6461979Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6462050Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6462292Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6462297Z 
2025-01-17T11:31:46.6462367Z     @wraps(func)
2025-01-17T11:31:46.6462441Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6462521Z         with self._recreate_cm():
2025-01-17T11:31:46.6462700Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6462782Z E           AssertionError: 
2025-01-17T11:31:46.6462880Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6462944Z E           
2025-01-17T11:31:46.6463044Z E           Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.6463356Z E           Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.6463477Z E           Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.6463680Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6463760Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6463839Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6463939Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6464014Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6464093Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6464097Z 
2025-01-17T11:31:46.6464307Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6464524Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-17T11:31:46.6464528Z 
2025-01-17T11:31:46.6464836Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639bb0>
2025-01-17T11:31:46.6465046Z simulation = <tardis.simulation.base.Simulation object at 0x7f815310a000>
2025-01-17T11:31:46.6465220Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-17T11:31:46.6465225Z 
2025-01-17T11:31:46.6465326Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6465420Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6465602Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6465747Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6465842Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6465951Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6465955Z 
2025-01-17T11:31:46.6466079Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6466180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6466504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6466591Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6466690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6466694Z 
2025-01-17T11:31:46.6467151Z args = (<function assert_allclose.<locals>.compare at 0x7f8169a00680>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-01-17T11:31:46.6467251Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6467496Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6467501Z 
2025-01-17T11:31:46.6467572Z     @wraps(func)
2025-01-17T11:31:46.6467647Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6467727Z         with self._recreate_cm():
2025-01-17T11:31:46.6467811Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6467888Z E           AssertionError: 
2025-01-17T11:31:46.6467986Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6468053Z E           
2025-01-17T11:31:46.6468143Z E           Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.6468272Z E           Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.6468393Z E           Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.6468554Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6468641Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6468802Z E            DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6468886Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6468891Z 
2025-01-17T11:31:46.6469080Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6469388Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-17T11:31:46.6469466Z 
2025-01-17T11:31:46.6469776Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e63a1e0>
2025-01-17T11:31:46.6469961Z simulation = <tardis.simulation.base.Simulation object at 0x7f815310a000>
2025-01-17T11:31:46.6470148Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-17T11:31:46.6470157Z 
2025-01-17T11:31:46.6470284Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6470393Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6470573Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6470719Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6470816Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6470933Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6470942Z 
2025-01-17T11:31:46.6471063Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6471169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6471496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6471579Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6471679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6471683Z 
2025-01-17T11:31:46.6472134Z args = (<function assert_allclose.<locals>.compare at 0x7f8177f7d940>, array([1.54231806e+39, 1.55225124e+39, 1.54284817e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-01-17T11:31:46.6472234Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-01-17T11:31:46.6472478Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6472492Z 
2025-01-17T11:31:46.6472662Z     @wraps(func)
2025-01-17T11:31:46.6472747Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6472833Z         with self._recreate_cm():
2025-01-17T11:31:46.6472913Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6472990Z E           AssertionError: 
2025-01-17T11:31:46.6473084Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6473150Z E           
2025-01-17T11:31:46.6473240Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6473372Z E           Max absolute difference among violations: 6.24012248e+37
2025-01-17T11:31:46.6473491Z E           Max relative difference among violations: 1.92154885
2025-01-17T11:31:46.6473655Z E            ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-17T11:31:46.6473732Z E                  1.315549e+31, 1.281291e+31])
2025-01-17T11:31:46.6473896Z E            DESIRED: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-17T11:31:46.6473977Z E                  1.375141e+31, 1.337928e+31])
2025-01-17T11:31:46.6473986Z 
2025-01-17T11:31:46.6474178Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6474392Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-17T11:31:46.6474396Z 
2025-01-17T11:31:46.6474707Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639700>
2025-01-17T11:31:46.6474888Z simulation = <tardis.simulation.base.Simulation object at 0x7f81783cdb50>
2025-01-17T11:31:46.6475073Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-17T11:31:46.6475077Z 
2025-01-17T11:31:46.6475195Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6475293Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6475367Z         j_blue_estimator = (
2025-01-17T11:31:46.6475699Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6475867Z         )
2025-01-17T11:31:46.6476007Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6476118Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6476123Z 
2025-01-17T11:31:46.6476245Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6476346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6476350Z 
2025-01-17T11:31:46.6476603Z args = (<function assert_allclose.<locals>.compare at 0x7f8170a3ade0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6476669Z        [0., 0., .....,
2025-01-17T11:31:46.6476746Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6476816Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6476887Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6477127Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6477135Z 
2025-01-17T11:31:46.6477206Z     @wraps(func)
2025-01-17T11:31:46.6477283Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6477360Z         with self._recreate_cm():
2025-01-17T11:31:46.6477441Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6477516Z E           AssertionError: 
2025-01-17T11:31:46.6477613Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6477688Z E           
2025-01-17T11:31:46.6477873Z E           Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.6478104Z E           Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.6478315Z E           Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.6478478Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6478611Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6478749Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6478915Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6479052Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6479191Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6479198Z 
2025-01-17T11:31:46.6479525Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6479899Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-17T11:31:46.6479907Z 
2025-01-17T11:31:46.6480457Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639df0>
2025-01-17T11:31:46.6480776Z simulation = <tardis.simulation.base.Simulation object at 0x7f81783cdb50>
2025-01-17T11:31:46.6481058Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-17T11:31:46.6481065Z 
2025-01-17T11:31:46.6481243Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6481415Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6481749Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6482006Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6482171Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6482355Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6482362Z 
2025-01-17T11:31:46.6482717Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6482905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6483507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6483637Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6483801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6483982Z 
2025-01-17T11:31:46.6484715Z args = (<function assert_allclose.<locals>.compare at 0x7f813bbcb920>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-01-17T11:31:46.6485013Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6485404Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6485410Z 
2025-01-17T11:31:46.6485523Z     @wraps(func)
2025-01-17T11:31:46.6485639Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6485766Z         with self._recreate_cm():
2025-01-17T11:31:46.6485888Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6486010Z E           AssertionError: 
2025-01-17T11:31:46.6486158Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6486263Z E           
2025-01-17T11:31:46.6486411Z E           Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.6486654Z E           Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.6486865Z E           Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.6487148Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6487289Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6487506Z E            DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6487592Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6487596Z 
2025-01-17T11:31:46.6487795Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6488022Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-17T11:31:46.6488026Z 
2025-01-17T11:31:46.6488345Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e63a3f0>
2025-01-17T11:31:46.6488544Z simulation = <tardis.simulation.base.Simulation object at 0x7f81783cdb50>
2025-01-17T11:31:46.6488745Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-17T11:31:46.6488759Z 
2025-01-17T11:31:46.6488892Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6488995Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6489183Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6489336Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6489440Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6489551Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6489556Z 
2025-01-17T11:31:46.6489684Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6489788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6490122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6490213Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6490331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6490335Z 
2025-01-17T11:31:46.6490791Z args = (<function assert_allclose.<locals>.compare at 0x7f8151dd3560>, array([1.54085030e+39, 1.54785895e+39, 1.54018958e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-01-17T11:31:46.6490895Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-01-17T11:31:46.6491147Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6491155Z 
2025-01-17T11:31:46.6491225Z     @wraps(func)
2025-01-17T11:31:46.6491302Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6491385Z         with self._recreate_cm():
2025-01-17T11:31:46.6491466Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6491665Z E           AssertionError: 
2025-01-17T11:31:46.6491774Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6491916Z E           
2025-01-17T11:31:46.6492007Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6492144Z E           Max absolute difference among violations: 5.47728087e+37
2025-01-17T11:31:46.6492267Z E           Max relative difference among violations: 2.00828984
2025-01-17T11:31:46.6492490Z E            ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-17T11:31:46.6492757Z E                  1.146857e+31, 1.117191e+31])
2025-01-17T11:31:46.6493053Z E            DESIRED: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-17T11:31:46.6493181Z E                  1.193005e+31, 1.164854e+31])
2025-01-17T11:31:46.6493188Z 
2025-01-17T11:31:46.6493519Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6493847Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-17T11:31:46.6493854Z 
2025-01-17T11:31:46.6494173Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639640>
2025-01-17T11:31:46.6494367Z simulation = <tardis.simulation.base.Simulation object at 0x7f811a7c39b0>
2025-01-17T11:31:46.6494558Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-17T11:31:46.6494563Z 
2025-01-17T11:31:46.6494688Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:31:46.6494793Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6494872Z         j_blue_estimator = (
2025-01-17T11:31:46.6495082Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:31:46.6495148Z         )
2025-01-17T11:31:46.6495289Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:31:46.6495405Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:31:46.6495415Z 
2025-01-17T11:31:46.6495543Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:31:46.6495652Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6495656Z 
2025-01-17T11:31:46.6495915Z args = (<function assert_allclose.<locals>.compare at 0x7f814ef78ae0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6495983Z        [0., 0., .....,
2025-01-17T11:31:46.6496059Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6496129Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6496199Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:31:46.6496451Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6496456Z 
2025-01-17T11:31:46.6496529Z     @wraps(func)
2025-01-17T11:31:46.6496608Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6496687Z         with self._recreate_cm():
2025-01-17T11:31:46.6496776Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6496853Z E           AssertionError: 
2025-01-17T11:31:46.6496962Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6497028Z E           
2025-01-17T11:31:46.6497131Z E           Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.6497262Z E           Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.6497386Z E           Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.6497483Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497567Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497648Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6497748Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497824Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.6497907Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.6498045Z 
2025-01-17T11:31:46.6498238Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6498553Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-17T11:31:46.6498557Z 
2025-01-17T11:31:46.6499094Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e639d30>
2025-01-17T11:31:46.6499424Z simulation = <tardis.simulation.base.Simulation object at 0x7f811a7c39b0>
2025-01-17T11:31:46.6499710Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-17T11:31:46.6499717Z 
2025-01-17T11:31:46.6499894Z     def test_spectrum(self, simulation, request):
2025-01-17T11:31:46.6499996Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6500200Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:31:46.6500351Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6500454Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6500565Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6500574Z 
2025-01-17T11:31:46.6500703Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:31:46.6500808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6501139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6501224Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6501330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6501334Z 
2025-01-17T11:31:46.6501788Z args = (<function assert_allclose.<locals>.compare at 0x7f8169a034c0>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-01-17T11:31:46.6501889Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6502140Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6502148Z 
2025-01-17T11:31:46.6502219Z     @wraps(func)
2025-01-17T11:31:46.6502298Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6502383Z         with self._recreate_cm():
2025-01-17T11:31:46.6502465Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6502725Z E           AssertionError: 
2025-01-17T11:31:46.6502841Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6502909Z E           
2025-01-17T11:31:46.6503003Z E           Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.6503134Z E           Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.6503258Z E           Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.6503420Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6503513Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6503675Z E            DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.6503761Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6503765Z 
2025-01-17T11:31:46.6503954Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6504179Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-17T11:31:46.6504183Z 
2025-01-17T11:31:46.6504496Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f817e63a330>
2025-01-17T11:31:46.6504685Z simulation = <tardis.simulation.base.Simulation object at 0x7f811a7c39b0>
2025-01-17T11:31:46.6504882Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-17T11:31:46.6504887Z 
2025-01-17T11:31:46.6505020Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:31:46.6505260Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6505447Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:31:46.6505704Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:31:46.6505804Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:31:46.6505914Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:31:46.6505919Z 
2025-01-17T11:31:46.6506046Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:31:46.6506147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6506472Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:31:46.6506556Z     np.testing.assert_allclose(
2025-01-17T11:31:46.6506660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6506664Z 
2025-01-17T11:31:46.6507121Z args = (<function assert_allclose.<locals>.compare at 0x7f812bbd0680>, array([1.54088344e+39, 1.54038935e+39, 1.53613853e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-01-17T11:31:46.6507229Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-01-17T11:31:46.6507474Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6507479Z 
2025-01-17T11:31:46.6507557Z     @wraps(func)
2025-01-17T11:31:46.6507634Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6507721Z         with self._recreate_cm():
2025-01-17T11:31:46.6507802Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6507883Z E           AssertionError: 
2025-01-17T11:31:46.6507980Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6508051Z E           
2025-01-17T11:31:46.6508142Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.6508275Z E           Max absolute difference among violations: 5.25781438e+37
2025-01-17T11:31:46.6508401Z E           Max relative difference among violations: 18.28099979
2025-01-17T11:31:46.6508567Z E            ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-17T11:31:46.6508648Z E                  2.087889e+31, 2.059957e+31])
2025-01-17T11:31:46.6508812Z E            DESIRED: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-17T11:31:46.6508890Z E                  2.124305e+31, 2.101081e+31])
2025-01-17T11:31:46.6508894Z 
2025-01-17T11:31:46.6509088Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6509229Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-17T11:31:46.6509233Z 
2025-01-17T11:31:46.6510203Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:31:46.6510672Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f817e6b5280>
2025-01-17T11:31:46.6511092Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:31:46.6511099Z 
2025-01-17T11:31:46.6511187Z     def test_montecarlo_main_loop(
2025-01-17T11:31:46.6511280Z         montecarlo_main_loop_config,
2025-01-17T11:31:46.6511353Z         regression_data,
2025-01-17T11:31:46.6511427Z         atomic_dataset,
2025-01-17T11:31:46.6511492Z     ):
2025-01-17T11:31:46.6511598Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:31:46.6511740Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-17T11:31:46.6511826Z             montecarlo_main_loop_config,
2025-01-17T11:31:46.6511912Z             atom_data=atomic_dataset,
2025-01-17T11:31:46.6511996Z             virtual_packet_logging=False,
2025-01-17T11:31:46.6512185Z             legacy_mode_enabled=True,
2025-01-17T11:31:46.6512251Z         )
2025-01-17T11:31:46.6512471Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-17T11:31:46.6512763Z         montecarlo_main_loop_simulation.run_final()
2025-01-17T11:31:46.6512842Z     
2025-01-17T11:31:46.6512973Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-17T11:31:46.6513068Z             montecarlo_main_loop_simulation
2025-01-17T11:31:46.6513131Z         )
2025-01-17T11:31:46.6513198Z     
2025-01-17T11:31:46.6513284Z         # Load compare data from refdata
2025-01-17T11:31:46.6513351Z     
2025-01-17T11:31:46.6513435Z         expected_nu = expected_hdf_store[
2025-01-17T11:31:46.6513556Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:31:46.6513626Z         ]
2025-01-17T11:31:46.6513718Z         expected_energy = expected_hdf_store[
2025-01-17T11:31:46.6513938Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:31:46.6514068Z         ]
2025-01-17T11:31:46.6514264Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:31:46.6514500Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:31:46.6514611Z         ]
2025-01-17T11:31:46.6514774Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:31:46.6514976Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:31:46.6515046Z         ]
2025-01-17T11:31:46.6515140Z         expected_hdf_store.close()
2025-01-17T11:31:46.6515340Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-17T11:31:46.6515509Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:31:46.6515644Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:31:46.6515739Z         actual_nu_bar_estimator = (
2025-01-17T11:31:46.6515878Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-17T11:31:46.6515952Z         )
2025-01-17T11:31:46.6516124Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-17T11:31:46.6516194Z     
2025-01-17T11:31:46.6516262Z         # Compare
2025-01-17T11:31:46.6516348Z >       npt.assert_allclose(
2025-01-17T11:31:46.6516495Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-17T11:31:46.6516558Z         )
2025-01-17T11:31:46.6516566Z 
2025-01-17T11:31:46.6516744Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-17T11:31:46.6516850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6516858Z 
2025-01-17T11:31:46.6517286Z args = (<function assert_allclose.<locals>.compare at 0x7f814ee577e0>, array([9.40448351e+28, 8.06019278e+28, 7.19997537e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-01-17T11:31:46.6517421Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-01-17T11:31:46.6517685Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6517700Z 
2025-01-17T11:31:46.6517828Z     @wraps(func)
2025-01-17T11:31:46.6517968Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6518101Z         with self._recreate_cm():
2025-01-17T11:31:46.6518239Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6518366Z E           AssertionError: 
2025-01-17T11:31:46.6518533Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-17T11:31:46.6518641Z E           
2025-01-17T11:31:46.6518796Z E           Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.6518956Z E           Max absolute difference among violations: 6.13164664e+25
2025-01-17T11:31:46.6519083Z E           Max relative difference among violations: 0.00076015
2025-01-17T11:31:46.6519233Z E            ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-17T11:31:46.6519351Z E                  6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-17T11:31:46.6519623Z E                  4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-17T11:31:46.6519885Z E            DESIRED: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-17T11:31:46.6519993Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-17T11:31:46.6520109Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-17T11:31:46.6520113Z 
2025-01-17T11:31:46.6520307Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6520466Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:31:46.6520743Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6521217Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6521401Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6521607Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6521770Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6521839Z 	
2025-01-17T11:31:46.6521925Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6522005Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6522109Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6522265Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6522327Z 	
2025-01-17T11:31:46.6522472Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6522829Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6522899Z 	
2025-01-17T11:31:46.6522990Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6523075Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6523162Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6523266Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6523422Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6523426Z 
2025-01-17T11:31:46.6523435Z 
2025-01-17T11:31:46.6523664Z Packets:                                                                                   10748/? [00:10<00:00, 1004.27it/s][A
2025-01-17T11:31:46.6523669Z 
2025-01-17T11:31:46.6523993Z Packets:                                                                                   21265/? [00:10<00:00, 2376.40it/s][A
2025-01-17T11:31:46.6524003Z 
2025-01-17T11:31:46.6524404Z Packets:                                                                                   32093/? [00:10<00:00, 4332.46it/s][A
2025-01-17T11:31:46.6524418Z 
2025-01-17T11:31:46.6524796Z Packets:                                                                                   42958/? [00:11<00:00, 7014.23it/s][A
2025-01-17T11:31:46.6524803Z 
2025-01-17T11:31:46.6525123Z Packets:                                                                                   53734/? [00:11<00:00, 10580.94it/s][A
2025-01-17T11:31:46.6525137Z 
2025-01-17T11:31:46.6525353Z Packets:                                                                                   64493/? [00:11<00:00, 15252.80it/s][A
2025-01-17T11:31:46.6525363Z 
2025-01-17T11:31:46.6525578Z Packets:                                                                                   75267/? [00:11<00:00, 21206.16it/s][A
2025-01-17T11:31:46.6525583Z 
2025-01-17T11:31:46.6525796Z Packets:                                                                                   86067/? [00:11<00:00, 28515.31it/s][A
2025-01-17T11:31:46.6525800Z 
2025-01-17T11:31:46.6526010Z Packets:                                                                                   96929/? [00:11<00:00, 37117.26it/s][A
2025-01-17T11:31:46.6526148Z Iterations:                                                                                40/? [08:09<00:00,  5.65s/it]
2025-01-17T11:31:46.6526153Z 
2025-01-17T11:31:46.6526375Z Packets:                                                                                   104009/? [00:11<00:00, 37117.26it/s][A
2025-01-17T11:31:46.6526763Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:31:46.6527256Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6527469Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6527576Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6527696Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6527837Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6527845Z 
2025-01-17T11:31:46.6528020Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6528156Z 	Starting iteration 1 of 1
2025-01-17T11:31:46.6528322Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6528469Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6528618Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6528762Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6528975Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-17T11:31:46.6528980Z 
2025-01-17T11:31:46.6529655Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:31:46.6529918Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814f5c7170>
2025-01-17T11:31:46.6530260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:31:46.6530265Z 
2025-01-17T11:31:46.6530364Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-17T11:31:46.6530465Z         montecarlo_main_loop_config,
2025-01-17T11:31:46.6530538Z         regression_data,
2025-01-17T11:31:46.6530614Z         atomic_dataset,
2025-01-17T11:31:46.6530685Z     ):
2025-01-17T11:31:46.6530789Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:31:46.6530951Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-17T11:31:46.6531017Z     
2025-01-17T11:31:46.6531156Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-17T11:31:46.6531248Z             montecarlo_main_loop_config,
2025-01-17T11:31:46.6531327Z             atom_data=atomic_dataset,
2025-01-17T11:31:46.6531409Z             virtual_packet_logging=True,
2025-01-17T11:31:46.6531494Z             legacy_mode_enabled=True,
2025-01-17T11:31:46.6531558Z         )
2025-01-17T11:31:46.6531684Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-17T11:31:46.6531787Z         montecarlo_main_loop_simulation.run_final()
2025-01-17T11:31:46.6531858Z     
2025-01-17T11:31:46.6531990Z         transport = montecarlo_main_loop_simulation.transport
2025-01-17T11:31:46.6532058Z     
2025-01-17T11:31:46.6532255Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-17T11:31:46.6532324Z     
2025-01-17T11:31:46.6532444Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-17T11:31:46.6532647Z             montecarlo_main_loop_simulation
2025-01-17T11:31:46.6532716Z         )
2025-01-17T11:31:46.6532785Z     
2025-01-17T11:31:46.6532870Z         expected_nu = expected_hdf_store[
2025-01-17T11:31:46.6532986Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:31:46.6533053Z         ]
2025-01-17T11:31:46.6533143Z         expected_energy = expected_hdf_store[
2025-01-17T11:31:46.6533270Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:31:46.6533334Z         ]
2025-01-17T11:31:46.6533450Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:31:46.6533906Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:31:46.6534026Z         ]
2025-01-17T11:31:46.6534195Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:31:46.6534552Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:31:46.6534660Z         ]
2025-01-17T11:31:46.6534824Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-17T11:31:46.6534964Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-17T11:31:46.6535034Z         ]
2025-01-17T11:31:46.6535150Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-17T11:31:46.6535302Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-17T11:31:46.6535364Z         ]
2025-01-17T11:31:46.6535430Z     
2025-01-17T11:31:46.6535533Z         transport_state = transport.transport_state
2025-01-17T11:31:46.6535597Z     
2025-01-17T11:31:46.6535764Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:31:46.6535905Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:31:46.6536043Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-17T11:31:46.6536163Z         actual_j_estimator = transport_state.j_estimator
2025-01-17T11:31:46.6536312Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-17T11:31:46.6536478Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-17T11:31:46.6536544Z     
2025-01-17T11:31:46.6536627Z         expected_hdf_store.close()
2025-01-17T11:31:46.6536698Z         # Compare
2025-01-17T11:31:46.6536776Z >       npt.assert_allclose(
2025-01-17T11:31:46.6536857Z             actual_nu_bar_estimator,
2025-01-17T11:31:46.6536937Z             expected_nu_bar_estimator,
2025-01-17T11:31:46.6537011Z             rtol=1e-12,
2025-01-17T11:31:46.6537079Z             atol=1e-15,
2025-01-17T11:31:46.6537142Z         )
2025-01-17T11:31:46.6537150Z 
2025-01-17T11:31:46.6537328Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-17T11:31:46.6537441Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6537454Z 
2025-01-17T11:31:46.6537880Z args = (<function assert_allclose.<locals>.compare at 0x7f8172eee3e0>, array([9.39632189e+28, 8.06452049e+28, 7.18754600e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-01-17T11:31:46.6538012Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-01-17T11:31:46.6538279Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-17T11:31:46.6538284Z 
2025-01-17T11:31:46.6538356Z     @wraps(func)
2025-01-17T11:31:46.6538432Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6538514Z         with self._recreate_cm():
2025-01-17T11:31:46.6538593Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6538671Z E           AssertionError: 
2025-01-17T11:31:46.6538787Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-17T11:31:46.6538855Z E           
2025-01-17T11:31:46.6538952Z E           Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.6539084Z E           Max absolute difference among violations: 2.36529423e+25
2025-01-17T11:31:46.6539240Z E           Max relative difference among violations: 0.00039195
2025-01-17T11:31:46.6539505Z E            ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-17T11:31:46.6539704Z E                  6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-17T11:31:46.6539901Z E                  4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-17T11:31:46.6540160Z E            DESIRED: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-17T11:31:46.6540347Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-17T11:31:46.6540490Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-17T11:31:46.6540594Z 
2025-01-17T11:31:46.6540796Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6541046Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:31:46.6541313Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6541754Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6541927Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6542135Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6542293Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6542360Z 	
2025-01-17T11:31:46.6542448Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6542669Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6542777Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6542936Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6543005Z 	
2025-01-17T11:31:46.6543152Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6543316Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6543378Z 	
2025-01-17T11:31:46.6543470Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-17T11:31:46.6543559Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-17T11:31:46.6543649Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6543746Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6543894Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6543898Z 
2025-01-17T11:31:46.6543902Z 
2025-01-17T11:31:46.6544130Z Packets:                                                                                   107731/? [00:14<00:00, 10312.05it/s][A
2025-01-17T11:31:46.6544135Z 
2025-01-17T11:31:46.6544356Z Packets:                                                                                   115279/? [00:14<00:00, 12372.86it/s][A
2025-01-17T11:31:46.6544366Z 
2025-01-17T11:31:46.6544578Z Packets:                                                                                   121584/? [00:14<00:00, 14413.51it/s][A
2025-01-17T11:31:46.6544592Z 
2025-01-17T11:31:46.6544804Z Packets:                                                                                   127027/? [00:14<00:00, 16422.41it/s][A
2025-01-17T11:31:46.6544809Z 
2025-01-17T11:31:46.6545228Z Packets:                                                                                   131845/? [00:14<00:00, 18500.71it/s][A
2025-01-17T11:31:46.6545239Z 
2025-01-17T11:31:46.6545631Z Packets:                                                                                   136261/? [00:15<00:00, 20617.21it/s][A
2025-01-17T11:31:46.6545639Z 
2025-01-17T11:31:46.6546030Z Packets:                                                                                   140402/? [00:15<00:00, 22751.16it/s][A
2025-01-17T11:31:46.6546039Z 
2025-01-17T11:31:46.6546294Z Packets:                                                                                   144359/? [00:15<00:00, 24824.76it/s][A
2025-01-17T11:31:46.6546305Z 
2025-01-17T11:31:46.6546523Z Packets:                                                                                   148186/? [00:15<00:00, 26784.14it/s][A
2025-01-17T11:31:46.6546528Z 
2025-01-17T11:31:46.6546742Z Packets:                                                                                   151926/? [00:15<00:00, 28513.44it/s][A
2025-01-17T11:31:46.6546746Z 
2025-01-17T11:31:46.6546961Z Packets:                                                                                   155598/? [00:15<00:00, 29945.57it/s][A
2025-01-17T11:31:46.6546965Z 
2025-01-17T11:31:46.6547174Z Packets:                                                                                   159214/? [00:15<00:00, 31267.57it/s][A
2025-01-17T11:31:46.6547184Z 
2025-01-17T11:31:46.6547397Z Packets:                                                                                   162810/? [00:15<00:00, 32132.90it/s][A
2025-01-17T11:31:46.6547543Z 
2025-01-17T11:31:46.6547768Z Packets:                                                                                   166368/? [00:15<00:00, 33033.14it/s][A
2025-01-17T11:31:46.6547873Z 
2025-01-17T11:31:46.6548092Z Packets:                                                                                   169925/? [00:16<00:00, 33556.37it/s][A
2025-01-17T11:31:46.6548096Z 
2025-01-17T11:31:46.6548313Z Packets:                                                                                   173463/? [00:16<00:00, 33705.03it/s][A
2025-01-17T11:31:46.6548318Z 
2025-01-17T11:31:46.6548535Z Packets:                                                                                   176964/? [00:16<00:00, 34072.36it/s][A
2025-01-17T11:31:46.6548539Z 
2025-01-17T11:31:46.6548757Z Packets:                                                                                   180463/? [00:16<00:00, 34239.52it/s][A
2025-01-17T11:31:46.6548768Z 
2025-01-17T11:31:46.6548983Z Packets:                                                                                   183952/? [00:16<00:00, 34374.73it/s][A
2025-01-17T11:31:46.6548991Z 
2025-01-17T11:31:46.6549213Z Packets:                                                                                   187436/? [00:16<00:00, 34446.80it/s][A
2025-01-17T11:31:46.6549217Z 
2025-01-17T11:31:46.6549435Z Packets:                                                                                   190950/? [00:16<00:00, 34643.95it/s][A
2025-01-17T11:31:46.6549444Z 
2025-01-17T11:31:46.6549660Z Packets:                                                                                   194455/? [00:16<00:00, 34763.96it/s][A
2025-01-17T11:31:46.6549665Z 
2025-01-17T11:31:46.6549884Z Packets:                                                                                   197948/? [00:16<00:00, 34666.20it/s][A
2025-01-17T11:31:46.6549888Z 
2025-01-17T11:31:46.6550100Z Packets:                                                                                   201463/? [00:16<00:00, 34809.36it/s][A
2025-01-17T11:31:46.6550253Z Iterations:                                                                                41/? [08:14<00:00,  5.60s/it]
2025-01-17T11:31:46.6550263Z 
2025-01-17T11:31:46.6550478Z Packets:                                                                                   204009/? [00:17<00:00, 34809.36it/s][A
2025-01-17T11:31:46.6550624Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:31:46.6551292Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6551668Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6551836Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6551985Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6552123Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6552131Z 
2025-01-17T11:31:46.6552243Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6552331Z 	Starting iteration 1 of 1
2025-01-17T11:31:46.6552433Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6552518Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-17T11:31:46.6552806Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-17T11:31:46.6552900Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6553051Z __________________________ test_boundary_interactions __________________________
2025-01-17T11:31:46.6553056Z 
2025-01-17T11:31:46.6553820Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f8188c756a0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f8178787190>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f81787840a0>])
2025-01-17T11:31:46.6554086Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814053c290>
2025-01-17T11:31:46.6554230Z 
2025-01-17T11:31:46.6554395Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-17T11:31:46.6554593Z         no_of_packets = len(rpacket_tracker)
2025-01-17T11:31:46.6554656Z     
2025-01-17T11:31:46.6554751Z         # Hard coding the number of columns
2025-01-17T11:31:46.6554893Z         # Based on the largest size of boundary_interaction array (60)
2025-01-17T11:31:46.6555078Z         obtained_boundary_interaction = np.full(
2025-01-17T11:31:46.6555221Z             (no_of_packets, 64),
2025-01-17T11:31:46.6555335Z             [-1],
2025-01-17T11:31:46.6555556Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-17T11:31:46.6555661Z         )
2025-01-17T11:31:46.6555770Z     
2025-01-17T11:31:46.6555946Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-17T11:31:46.6556107Z >           obtained_boundary_interaction[
2025-01-17T11:31:46.6556230Z                 i, : tracker.boundary_interaction.size
2025-01-17T11:31:46.6556332Z             ] = tracker.boundary_interaction
2025-01-17T11:31:46.6556534Z E           ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-17T11:31:46.6556547Z 
2025-01-17T11:31:46.6556751Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:147: ValueError
2025-01-17T11:31:46.6556908Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-17T11:31:46.6556912Z 
2025-01-17T11:31:46.6557580Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:31:46.6557840Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f814057d310>
2025-01-17T11:31:46.6558182Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:31:46.6558744Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f817e5326c0>
2025-01-17T11:31:46.6558763Z 
2025-01-17T11:31:46.6558926Z     def test_montecarlo_main_loop_weighted(
2025-01-17T11:31:46.6559061Z         montecarlo_main_loop_config,
2025-01-17T11:31:46.6559187Z         regression_data,
2025-01-17T11:31:46.6559304Z         atomic_dataset,
2025-01-17T11:31:46.6559452Z         simple_weighted_packet_source,
2025-01-17T11:31:46.6559550Z     ):
2025-01-17T11:31:46.6559656Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:31:46.6559824Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-17T11:31:46.6559915Z             montecarlo_main_loop_config,
2025-01-17T11:31:46.6559995Z             atom_data=atomic_dataset,
2025-01-17T11:31:46.6560084Z             virtual_packet_logging=False,
2025-01-17T11:31:46.6560162Z             legacy_mode_enabled=True,
2025-01-17T11:31:46.6560237Z         )
2025-01-17T11:31:46.6560382Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-17T11:31:46.6560483Z             simple_weighted_packet_source
2025-01-17T11:31:46.6560546Z         )
2025-01-17T11:31:46.6560689Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-17T11:31:46.6560819Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-17T11:31:46.6560882Z     
2025-01-17T11:31:46.6560986Z         # Get the montecarlo simple regression data
2025-01-17T11:31:46.6561066Z         regression_data_dir = (
2025-01-17T11:31:46.6561239Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-17T11:31:46.6561374Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-17T11:31:46.6561444Z         )
2025-01-17T11:31:46.6561596Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-17T11:31:46.6561663Z     
2025-01-17T11:31:46.6561850Z         # Load compare data from refdata
2025-01-17T11:31:46.6561918Z     
2025-01-17T11:31:46.6562003Z         expected_nu = expected_hdf_store[
2025-01-17T11:31:46.6562201Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:31:46.6562266Z         ]
2025-01-17T11:31:46.6562360Z         expected_energy = expected_hdf_store[
2025-01-17T11:31:46.6562484Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:31:46.6562723Z         ]
2025-01-17T11:31:46.6562881Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:31:46.6563022Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:31:46.6563091Z         ]
2025-01-17T11:31:46.6563193Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:31:46.6563321Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:31:46.6563387Z         ]
2025-01-17T11:31:46.6563475Z         expected_hdf_store.close()
2025-01-17T11:31:46.6563552Z         transport_state = (
2025-01-17T11:31:46.6563737Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-17T11:31:46.6563807Z         )
2025-01-17T11:31:46.6564023Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:31:46.6564262Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:31:46.6564407Z         actual_nu_bar_estimator = (
2025-01-17T11:31:46.6564636Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-17T11:31:46.6564748Z         )
2025-01-17T11:31:46.6565047Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-17T11:31:46.6565159Z     
2025-01-17T11:31:46.6565230Z         # Compare
2025-01-17T11:31:46.6565311Z         npt.assert_allclose(
2025-01-17T11:31:46.6565458Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-17T11:31:46.6565522Z         )
2025-01-17T11:31:46.6565703Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-17T11:31:46.6565858Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-17T11:31:46.6565868Z 
2025-01-17T11:31:46.6566096Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-17T11:31:46.6566198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6566203Z 
2025-01-17T11:31:46.6566659Z args = (<function assert_allclose.<locals>.compare at 0x7f817872cfe0>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-17T11:31:46.6566762Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-17T11:31:46.6567013Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6567019Z 
2025-01-17T11:31:46.6567087Z     @wraps(func)
2025-01-17T11:31:46.6567167Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6567250Z         with self._recreate_cm():
2025-01-17T11:31:46.6567338Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6567420Z E           AssertionError: 
2025-01-17T11:31:46.6567522Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-17T11:31:46.6567590Z E           
2025-01-17T11:31:46.6567759Z E           Mismatched elements: 75 / 100000 (0.075%)
2025-01-17T11:31:46.6567990Z E           Max absolute difference among violations: 2.01554089e-05
2025-01-17T11:31:46.6568201Z E           Max relative difference among violations: 2.08104546
2025-01-17T11:31:46.6568492Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.6568635Z E                  -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.6568875Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.6568963Z E                  -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.6568967Z 
2025-01-17T11:31:46.6569325Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6569474Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:31:46.6569841Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:31:46.6570283Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:31:46.6570464Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6570669Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:31:46.6570826Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6570894Z 	
2025-01-17T11:31:46.6570981Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6571055Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6571159Z  ([1mbase.py[0m:542)
2025-01-17T11:31:46.6571314Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6571390Z 	
2025-01-17T11:31:46.6571534Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:31:46.6571687Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6571759Z 	
2025-01-17T11:31:46.6571852Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6571935Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6572029Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6572128Z  ([1mbase.py[0m:657)
2025-01-17T11:31:46.6572278Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:31:46.6572281Z 
2025-01-17T11:31:46.6572285Z 
2025-01-17T11:31:46.6572518Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-17T11:31:46.6572523Z 
2025-01-17T11:31:46.6572861Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-17T11:31:46.6572872Z 
2025-01-17T11:31:46.6573127Z Packets:   ████████▍                                                                       10578/100000 [00:00<00:00, 105772.28it/s][A
2025-01-17T11:31:46.6573142Z 
2025-01-17T11:31:46.6573403Z Packets:   █████████████████▏                                                              21438/100000 [00:00<00:00, 107433.40it/s][A
2025-01-17T11:31:46.6573408Z 
2025-01-17T11:31:46.6573661Z Packets:   █████████████████████████▊                                                      32247/100000 [00:00<00:00, 107732.20it/s][A
2025-01-17T11:31:46.6573673Z 
2025-01-17T11:31:46.6573936Z Packets:   ██████████████████████████████████▍                                             43021/100000 [00:00<00:00, 105618.07it/s][A
2025-01-17T11:31:46.6573941Z 
2025-01-17T11:31:46.6574290Z Packets:   ███████████████████████████████████████████▏                                    54003/100000 [00:00<00:00, 107112.79it/s][A
2025-01-17T11:31:46.6574300Z 
2025-01-17T11:31:46.6574841Z Packets:   ███████████████████████████████████████████████████▉                            64937/100000 [00:00<00:00, 107860.59it/s][A
2025-01-17T11:31:46.6575049Z 
2025-01-17T11:31:46.6575528Z Packets:   ████████████████████████████████████████████████████████████▋                   75841/100000 [00:00<00:00, 108241.32it/s][A
2025-01-17T11:31:46.6575536Z 
2025-01-17T11:31:46.6575842Z Packets:   █████████████████████████████████████████████████████████████████████▍          86819/100000 [00:00<00:00, 108727.23it/s][A
2025-01-17T11:31:46.6575847Z 
2025-01-17T11:31:46.6576172Z Packets:   ██████████████████████████████████████████████████████████████████████████████▏ 97783/100000 [00:00<00:00, 109010.14it/s][A
2025-01-17T11:31:46.6576313Z Iterations:                                                                                45/? [09:05<00:00,  8.19s/it]
2025-01-17T11:31:46.6576318Z 
2025-01-17T11:31:46.6576642Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 109010.14it/s][A
2025-01-17T11:31:46.6576808Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:31:46.6577439Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:31:46.6577658Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:31:46.6589775Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:31:46.6590013Z 	Simulation finished in 0 iterations 
2025-01-17T11:31:46.6590164Z 	Simulation took 0.00 s
2025-01-17T11:31:46.6590173Z 
2025-01-17T11:31:46.6590359Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:31:46.6590499Z 	Starting iteration 1 of 1
2025-01-17T11:31:46.6590670Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:31:46.6590813Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:31:46.6590963Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:31:46.6591122Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:31:46.6591358Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-17T11:31:46.6591371Z 
2025-01-17T11:31:46.6591630Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f6960>
2025-01-17T11:31:46.6591905Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6592165Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-17T11:31:46.6592243Z attribute = 'plot_data'
2025-01-17T11:31:46.6592248Z 
2025-01-17T11:31:46.6592333Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6592405Z         "attribute",
2025-01-17T11:31:46.6592469Z         [
2025-01-17T11:31:46.6592758Z             "plot_data",
2025-01-17T11:31:46.6592846Z             "plot_colors",
2025-01-17T11:31:46.6592920Z             "new_bin_edges",
2025-01-17T11:31:46.6592992Z         ],
2025-01-17T11:31:46.6593055Z     )
2025-01-17T11:31:46.6593143Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6593208Z         self,
2025-01-17T11:31:46.6593301Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6593368Z         request,
2025-01-17T11:31:46.6593438Z         attribute,
2025-01-17T11:31:46.6593501Z     ):
2025-01-17T11:31:46.6593568Z         """
2025-01-17T11:31:46.6593704Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6593770Z     
2025-01-17T11:31:46.6593840Z         Parameters:
2025-01-17T11:31:46.6593910Z         -----------
2025-01-17T11:31:46.6594087Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6594182Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6594454Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6594570Z         """
2025-01-17T11:31:46.6594746Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6595171Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6595425Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6595717Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6595865Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6595983Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6596099Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6596212Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6596217Z 
2025-01-17T11:31:46.6596359Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6596468Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6596473Z 
2025-01-17T11:31:46.6596932Z args = (<function assert_allclose.<locals>.compare at 0x7f817034e200>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-01-17T11:31:46.6597040Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-01-17T11:31:46.6597288Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6597293Z 
2025-01-17T11:31:46.6597361Z     @wraps(func)
2025-01-17T11:31:46.6597444Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6597522Z         with self._recreate_cm():
2025-01-17T11:31:46.6597607Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6597684Z E           AssertionError: 
2025-01-17T11:31:46.6597794Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6597860Z E           
2025-01-17T11:31:46.6597945Z E           (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.6598092Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.6598206Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.6598327Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.6598482Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.6598591Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.6598700Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.6598709Z 
2025-01-17T11:31:46.6598903Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6599057Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6599330Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6599656Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6599925Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6600438Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6600771Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-17T11:31:46.6600777Z 
2025-01-17T11:31:46.6601037Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f6de0>
2025-01-17T11:31:46.6601309Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6601570Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-17T11:31:46.6601647Z attribute = 'plot_data'
2025-01-17T11:31:46.6601651Z 
2025-01-17T11:31:46.6601737Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6601805Z         "attribute",
2025-01-17T11:31:46.6601868Z         [
2025-01-17T11:31:46.6601941Z             "plot_data",
2025-01-17T11:31:46.6602113Z             "plot_colors",
2025-01-17T11:31:46.6602186Z             "new_bin_edges",
2025-01-17T11:31:46.6602248Z         ],
2025-01-17T11:31:46.6602388Z     )
2025-01-17T11:31:46.6602467Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6602704Z         self,
2025-01-17T11:31:46.6602833Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6602907Z         request,
2025-01-17T11:31:46.6602974Z         attribute,
2025-01-17T11:31:46.6603045Z     ):
2025-01-17T11:31:46.6603107Z         """
2025-01-17T11:31:46.6603238Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6603306Z     
2025-01-17T11:31:46.6603375Z         Parameters:
2025-01-17T11:31:46.6603446Z         -----------
2025-01-17T11:31:46.6603619Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6603714Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6603868Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6603944Z         """
2025-01-17T11:31:46.6604045Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6604181Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6604325Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6604480Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6604620Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6604737Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6604898Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6605107Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6605116Z 
2025-01-17T11:31:46.6605344Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6605523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6605538Z 
2025-01-17T11:31:46.6606162Z args = (<function assert_allclose.<locals>.compare at 0x7f81702ed080>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-01-17T11:31:46.6606303Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-01-17T11:31:46.6606548Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6606553Z 
2025-01-17T11:31:46.6606626Z     @wraps(func)
2025-01-17T11:31:46.6606703Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6606783Z         with self._recreate_cm():
2025-01-17T11:31:46.6606862Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6606941Z E           AssertionError: 
2025-01-17T11:31:46.6607040Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6607106Z E           
2025-01-17T11:31:46.6607194Z E           (shapes (558,), (560,) mismatch)
2025-01-17T11:31:46.6607345Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.6607457Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.6607575Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.6607724Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.6607825Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.6607938Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.6607942Z 
2025-01-17T11:31:46.6608136Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6608344Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-17T11:31:46.6608349Z 
2025-01-17T11:31:46.6608645Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7020>
2025-01-17T11:31:46.6609326Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6609877Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-17T11:31:46.6609962Z attribute = 'plot_data'
2025-01-17T11:31:46.6609968Z 
2025-01-17T11:31:46.6610052Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6610124Z         "attribute",
2025-01-17T11:31:46.6610186Z         [
2025-01-17T11:31:46.6610258Z             "plot_data",
2025-01-17T11:31:46.6610326Z             "plot_colors",
2025-01-17T11:31:46.6610401Z             "new_bin_edges",
2025-01-17T11:31:46.6610462Z         ],
2025-01-17T11:31:46.6610525Z     )
2025-01-17T11:31:46.6610605Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6610671Z         self,
2025-01-17T11:31:46.6610755Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6610821Z         request,
2025-01-17T11:31:46.6610891Z         attribute,
2025-01-17T11:31:46.6610959Z     ):
2025-01-17T11:31:46.6611026Z         """
2025-01-17T11:31:46.6611154Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6611225Z     
2025-01-17T11:31:46.6611295Z         Parameters:
2025-01-17T11:31:46.6611364Z         -----------
2025-01-17T11:31:46.6611536Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6611627Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6611783Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6611846Z         """
2025-01-17T11:31:46.6611945Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6612077Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6612216Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6612369Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6612508Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6612753Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6612871Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6612981Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6612988Z 
2025-01-17T11:31:46.6613121Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6613226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6613234Z 
2025-01-17T11:31:46.6613655Z args = (<function assert_allclose.<locals>.compare at 0x7f811a656a20>, array([11193.08324978, 13536.93126023, 11647.60804688,...1064.78967159, 11163.13661084, 11172.32922889,
2025-01-17T11:31:46.6613794Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-01-17T11:31:46.6614225Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6614242Z 
2025-01-17T11:31:46.6614362Z     @wraps(func)
2025-01-17T11:31:46.6614485Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6614629Z         with self._recreate_cm():
2025-01-17T11:31:46.6614759Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6614884Z E           AssertionError: 
2025-01-17T11:31:46.6615036Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6615104Z E           
2025-01-17T11:31:46.6615193Z E           (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.6615340Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.6615456Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.6615571Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.6615723Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.6615827Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.6616087Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.6616210Z 
2025-01-17T11:31:46.6616407Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6616614Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-17T11:31:46.6616619Z 
2025-01-17T11:31:46.6616867Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7260>
2025-01-17T11:31:46.6617138Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6617395Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-17T11:31:46.6617475Z attribute = 'plot_data'
2025-01-17T11:31:46.6617480Z 
2025-01-17T11:31:46.6617565Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6617638Z         "attribute",
2025-01-17T11:31:46.6617763Z         [
2025-01-17T11:31:46.6617893Z             "plot_data",
2025-01-17T11:31:46.6618020Z             "plot_colors",
2025-01-17T11:31:46.6618156Z             "new_bin_edges",
2025-01-17T11:31:46.6618261Z         ],
2025-01-17T11:31:46.6618369Z     )
2025-01-17T11:31:46.6618499Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6618608Z         self,
2025-01-17T11:31:46.6618748Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6618867Z         request,
2025-01-17T11:31:46.6618947Z         attribute,
2025-01-17T11:31:46.6619012Z     ):
2025-01-17T11:31:46.6619082Z         """
2025-01-17T11:31:46.6619213Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6619282Z     
2025-01-17T11:31:46.6619351Z         Parameters:
2025-01-17T11:31:46.6619425Z         -----------
2025-01-17T11:31:46.6619597Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6619695Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6619860Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6619927Z         """
2025-01-17T11:31:46.6620030Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6620159Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6620297Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6620457Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6620607Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6620726Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6620876Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6620988Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6620993Z 
2025-01-17T11:31:46.6621133Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6621243Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6621248Z 
2025-01-17T11:31:46.6621629Z args = (<function assert_allclose.<locals>.compare at 0x7f811a654900>, array([11193.08324978, 13536.93126023, 11647.60804688,...210447, 12126.50399598,
2025-01-17T11:31:46.6621757Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-01-17T11:31:46.6621830Z        11042.97481792]))
2025-01-17T11:31:46.6622072Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6622077Z 
2025-01-17T11:31:46.6622148Z     @wraps(func)
2025-01-17T11:31:46.6622224Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6622305Z         with self._recreate_cm():
2025-01-17T11:31:46.6622384Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6622464Z E           AssertionError: 
2025-01-17T11:31:46.6622730Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6622956Z E           
2025-01-17T11:31:46.6623046Z E           (shapes (147,), (153,) mismatch)
2025-01-17T11:31:46.6623387Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.6623587Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.6623787Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.6624037Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.6624218Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.6624394Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.6624400Z 
2025-01-17T11:31:46.6624605Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6624811Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-17T11:31:46.6624822Z 
2025-01-17T11:31:46.6625077Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f74d0>
2025-01-17T11:31:46.6625352Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6625742Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-17T11:31:46.6625868Z attribute = 'plot_data'
2025-01-17T11:31:46.6625874Z 
2025-01-17T11:31:46.6625963Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6626032Z         "attribute",
2025-01-17T11:31:46.6626096Z         [
2025-01-17T11:31:46.6626165Z             "plot_data",
2025-01-17T11:31:46.6626239Z             "plot_colors",
2025-01-17T11:31:46.6626309Z             "new_bin_edges",
2025-01-17T11:31:46.6626371Z         ],
2025-01-17T11:31:46.6626435Z     )
2025-01-17T11:31:46.6626515Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6626581Z         self,
2025-01-17T11:31:46.6626663Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6626737Z         request,
2025-01-17T11:31:46.6626803Z         attribute,
2025-01-17T11:31:46.6626876Z     ):
2025-01-17T11:31:46.6626939Z         """
2025-01-17T11:31:46.6627073Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6627135Z     
2025-01-17T11:31:46.6627209Z         Parameters:
2025-01-17T11:31:46.6627277Z         -----------
2025-01-17T11:31:46.6627445Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6627537Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6627691Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6627758Z         """
2025-01-17T11:31:46.6627856Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6627987Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6628124Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6628283Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6628490Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6628709Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6628901Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6629087Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6629094Z 
2025-01-17T11:31:46.6629314Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6629503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6629510Z 
2025-01-17T11:31:46.6630013Z args = (<function assert_allclose.<locals>.compare at 0x7f817034dda0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-01-17T11:31:46.6630115Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-01-17T11:31:46.6630479Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6630563Z 
2025-01-17T11:31:46.6630638Z     @wraps(func)
2025-01-17T11:31:46.6630713Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6630796Z         with self._recreate_cm():
2025-01-17T11:31:46.6630875Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6630956Z E           AssertionError: 
2025-01-17T11:31:46.6631056Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6631123Z E           
2025-01-17T11:31:46.6631208Z E           (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.6631358Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.6631469Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.6631586Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.6631740Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.6631847Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.6631963Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.6631967Z 
2025-01-17T11:31:46.6632162Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6632306Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6632731Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6633030Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6633179Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6633494Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6633815Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-17T11:31:46.6633834Z 
2025-01-17T11:31:46.6634271Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7710>
2025-01-17T11:31:46.6634740Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6635103Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-17T11:31:46.6635188Z attribute = 'plot_data'
2025-01-17T11:31:46.6635193Z 
2025-01-17T11:31:46.6635277Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6635347Z         "attribute",
2025-01-17T11:31:46.6635410Z         [
2025-01-17T11:31:46.6635479Z             "plot_data",
2025-01-17T11:31:46.6635552Z             "plot_colors",
2025-01-17T11:31:46.6635620Z             "new_bin_edges",
2025-01-17T11:31:46.6635686Z         ],
2025-01-17T11:31:46.6635748Z     )
2025-01-17T11:31:46.6635838Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6635902Z         self,
2025-01-17T11:31:46.6635987Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6636056Z         request,
2025-01-17T11:31:46.6636126Z         attribute,
2025-01-17T11:31:46.6636189Z     ):
2025-01-17T11:31:46.6636273Z         """
2025-01-17T11:31:46.6636496Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6636592Z     
2025-01-17T11:31:46.6636719Z         Parameters:
2025-01-17T11:31:46.6636806Z         -----------
2025-01-17T11:31:46.6636982Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6637071Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6637227Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6637289Z         """
2025-01-17T11:31:46.6637390Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6637518Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6637833Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6638094Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6638239Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6638355Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6638472Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6638586Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6638590Z 
2025-01-17T11:31:46.6638728Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6638835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6638839Z 
2025-01-17T11:31:46.6639597Z args = (<function assert_allclose.<locals>.compare at 0x7f811a654720>, array([11061.80943238, 12248.18222883, 11489.53606278,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-01-17T11:31:46.6639768Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-01-17T11:31:46.6640182Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6640188Z 
2025-01-17T11:31:46.6640261Z     @wraps(func)
2025-01-17T11:31:46.6640341Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6640429Z         with self._recreate_cm():
2025-01-17T11:31:46.6640522Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6640602Z E           AssertionError: 
2025-01-17T11:31:46.6640709Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6640773Z E           
2025-01-17T11:31:46.6640861Z E           (shapes (1435,), (1481,) mismatch)
2025-01-17T11:31:46.6641025Z E            ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-17T11:31:46.6641106Z E                  11383.689745, 11102.237019])
2025-01-17T11:31:46.6641277Z E            DESIRED: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-17T11:31:46.6641355Z E                  11398.237865, 11111.204868])
2025-01-17T11:31:46.6641365Z 
2025-01-17T11:31:46.6641565Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6641710Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6641955Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6642281Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6642427Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6642934Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6643157Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-17T11:31:46.6643162Z 
2025-01-17T11:31:46.6643420Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f77d0>
2025-01-17T11:31:46.6643695Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6643958Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors]>>
2025-01-17T11:31:46.6644044Z attribute = 'plot_colors'
2025-01-17T11:31:46.6644049Z 
2025-01-17T11:31:46.6644133Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6644206Z         "attribute",
2025-01-17T11:31:46.6644270Z         [
2025-01-17T11:31:46.6644348Z             "plot_data",
2025-01-17T11:31:46.6644427Z             "plot_colors",
2025-01-17T11:31:46.6644562Z             "new_bin_edges",
2025-01-17T11:31:46.6644677Z         ],
2025-01-17T11:31:46.6644796Z     )
2025-01-17T11:31:46.6644936Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6645255Z         self,
2025-01-17T11:31:46.6645392Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6645657Z         request,
2025-01-17T11:31:46.6645733Z         attribute,
2025-01-17T11:31:46.6645798Z     ):
2025-01-17T11:31:46.6645870Z         """
2025-01-17T11:31:46.6646003Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6646073Z     
2025-01-17T11:31:46.6646144Z         Parameters:
2025-01-17T11:31:46.6646219Z         -----------
2025-01-17T11:31:46.6646388Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6646484Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6646643Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6646712Z         """
2025-01-17T11:31:46.6646812Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6646946Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6647092Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6647247Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6647395Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6647514Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6647627Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6647744Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6647748Z 
2025-01-17T11:31:46.6647882Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6647996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6648001Z 
2025-01-17T11:31:46.6648579Z args = (<function assert_allclose.<locals>.compare at 0x7f811a657060>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-17T11:31:46.6648739Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-17T11:31:46.6649160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6649180Z 
2025-01-17T11:31:46.6649275Z     @wraps(func)
2025-01-17T11:31:46.6649355Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6649439Z         with self._recreate_cm():
2025-01-17T11:31:46.6649521Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6649606Z E           AssertionError: 
2025-01-17T11:31:46.6649713Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6649777Z E           
2025-01-17T11:31:46.6649860Z E           (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.6649995Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6650092Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6650200Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6650278Z E                  0.      , 1.      ])
2025-01-17T11:31:46.6650414Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6650505Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6650603Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6650699Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.6650704Z 
2025-01-17T11:31:46.6650898Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6651102Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-17T11:31:46.6651106Z 
2025-01-17T11:31:46.6651354Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7950>
2025-01-17T11:31:46.6651793Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6652261Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-17T11:31:46.6652506Z attribute = 'plot_data'
2025-01-17T11:31:46.6652512Z 
2025-01-17T11:31:46.6652779Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6652900Z         "attribute",
2025-01-17T11:31:46.6653137Z         [
2025-01-17T11:31:46.6653270Z             "plot_data",
2025-01-17T11:31:46.6653345Z             "plot_colors",
2025-01-17T11:31:46.6653422Z             "new_bin_edges",
2025-01-17T11:31:46.6653485Z         ],
2025-01-17T11:31:46.6653553Z     )
2025-01-17T11:31:46.6653632Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6653695Z         self,
2025-01-17T11:31:46.6653781Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6653846Z         request,
2025-01-17T11:31:46.6653918Z         attribute,
2025-01-17T11:31:46.6653980Z     ):
2025-01-17T11:31:46.6654057Z         """
2025-01-17T11:31:46.6654185Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6654258Z     
2025-01-17T11:31:46.6654329Z         Parameters:
2025-01-17T11:31:46.6654401Z         -----------
2025-01-17T11:31:46.6654568Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6654659Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6654813Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6654877Z         """
2025-01-17T11:31:46.6654977Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6655106Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6655249Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6655397Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6655539Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6655657Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6655771Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6655879Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6655884Z 
2025-01-17T11:31:46.6656023Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6656127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6656131Z 
2025-01-17T11:31:46.6656556Z args = (<function assert_allclose.<locals>.compare at 0x7f811a655c60>, array([11193.08324978, 13536.93126023, 11647.60804688,...1064.78967159, 11163.13661084, 11172.32922889,
2025-01-17T11:31:46.6656682Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-01-17T11:31:46.6656925Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6656936Z 
2025-01-17T11:31:46.6657004Z     @wraps(func)
2025-01-17T11:31:46.6657080Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6657161Z         with self._recreate_cm():
2025-01-17T11:31:46.6657245Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6657321Z E           AssertionError: 
2025-01-17T11:31:46.6657422Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6657489Z E           
2025-01-17T11:31:46.6657576Z E           (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.6657720Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.6657832Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.6657943Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.6658093Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.6658197Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.6658451Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.6658557Z 
2025-01-17T11:31:46.6658751Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6659064Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-17T11:31:46.6659073Z 
2025-01-17T11:31:46.6659512Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7b30>
2025-01-17T11:31:46.6659982Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6660295Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-17T11:31:46.6660379Z attribute = 'plot_data'
2025-01-17T11:31:46.6660384Z 
2025-01-17T11:31:46.6660467Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6660540Z         "attribute",
2025-01-17T11:31:46.6660610Z         [
2025-01-17T11:31:46.6660683Z             "plot_data",
2025-01-17T11:31:46.6660753Z             "plot_colors",
2025-01-17T11:31:46.6660832Z             "new_bin_edges",
2025-01-17T11:31:46.6660896Z         ],
2025-01-17T11:31:46.6660957Z     )
2025-01-17T11:31:46.6661044Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6661112Z         self,
2025-01-17T11:31:46.6661194Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6661259Z         request,
2025-01-17T11:31:46.6661330Z         attribute,
2025-01-17T11:31:46.6661394Z     ):
2025-01-17T11:31:46.6661464Z         """
2025-01-17T11:31:46.6661591Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6661660Z     
2025-01-17T11:31:46.6661728Z         Parameters:
2025-01-17T11:31:46.6661801Z         -----------
2025-01-17T11:31:46.6661967Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6662057Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6662220Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6662287Z         """
2025-01-17T11:31:46.6662399Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6662525Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6662939Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6663209Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6663453Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6663643Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6663832Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6664003Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6664008Z 
2025-01-17T11:31:46.6664153Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6664265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6664270Z 
2025-01-17T11:31:46.6664639Z args = (<function assert_allclose.<locals>.compare at 0x7f811a656020>, array([11107.03324206, 11193.08324978, 13536.93126023,...210447, 12126.50399598,
2025-01-17T11:31:46.6664770Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-01-17T11:31:46.6664845Z        11042.97481792]))
2025-01-17T11:31:46.6665084Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6665090Z 
2025-01-17T11:31:46.6665166Z     @wraps(func)
2025-01-17T11:31:46.6665242Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6665326Z         with self._recreate_cm():
2025-01-17T11:31:46.6665405Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6665489Z E           AssertionError: 
2025-01-17T11:31:46.6665590Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6665803Z E           
2025-01-17T11:31:46.6665888Z E           (shapes (367,), (381,) mismatch)
2025-01-17T11:31:46.6666040Z E            ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-17T11:31:46.6666255Z E                  11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-17T11:31:46.6666377Z E                  15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-17T11:31:46.6666523Z E            DESIRED: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-17T11:31:46.6666631Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-17T11:31:46.6666742Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-17T11:31:46.6666747Z 
2025-01-17T11:31:46.6666942Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6667088Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6667346Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6667592Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6667747Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6668036Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6668309Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-17T11:31:46.6668318Z 
2025-01-17T11:31:46.6668753Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e5f7c20>
2025-01-17T11:31:46.6669224Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>
2025-01-17T11:31:46.6669575Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors]>>
2025-01-17T11:31:46.6669665Z attribute = 'plot_colors'
2025-01-17T11:31:46.6669677Z 
2025-01-17T11:31:46.6669758Z     @pytest.mark.parametrize(
2025-01-17T11:31:46.6669830Z         "attribute",
2025-01-17T11:31:46.6669901Z         [
2025-01-17T11:31:46.6669972Z             "plot_data",
2025-01-17T11:31:46.6670048Z             "plot_colors",
2025-01-17T11:31:46.6670119Z             "new_bin_edges",
2025-01-17T11:31:46.6670189Z         ],
2025-01-17T11:31:46.6670251Z     )
2025-01-17T11:31:46.6670342Z     def test_prepare_plot_data(
2025-01-17T11:31:46.6670408Z         self,
2025-01-17T11:31:46.6670496Z         plotter_prepare_plot_data,
2025-01-17T11:31:46.6670563Z         request,
2025-01-17T11:31:46.6670637Z         attribute,
2025-01-17T11:31:46.6670701Z     ):
2025-01-17T11:31:46.6670770Z         """
2025-01-17T11:31:46.6670896Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:31:46.6670960Z     
2025-01-17T11:31:46.6671040Z         Parameters:
2025-01-17T11:31:46.6671109Z         -----------
2025-01-17T11:31:46.6671285Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:31:46.6671381Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6671543Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:31:46.6671606Z         """
2025-01-17T11:31:46.6671707Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6671903Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:31:46.6672151Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:31:46.6672407Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:31:46.6672783Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:31:46.6672976Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:31:46.6673148Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:31:46.6673263Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:31:46.6673434Z 
2025-01-17T11:31:46.6673584Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:31:46.6673792Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6673796Z 
2025-01-17T11:31:46.6674138Z args = (<function assert_allclose.<locals>.compare at 0x7f811a656a20>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-17T11:31:46.6674227Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-17T11:31:46.6674476Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6674481Z 
2025-01-17T11:31:46.6674551Z     @wraps(func)
2025-01-17T11:31:46.6674632Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6674710Z         with self._recreate_cm():
2025-01-17T11:31:46.6674794Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6674872Z E           AssertionError: 
2025-01-17T11:31:46.6674983Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6675051Z E           
2025-01-17T11:31:46.6675144Z E           (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.6675280Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6675373Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6675483Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6675559Z E                  0.      , 1.      ])
2025-01-17T11:31:46.6675698Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.6675787Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.6675895Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.6675987Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.6675995Z 
2025-01-17T11:31:46.6676189Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6676383Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-17T11:31:46.6676387Z 
2025-01-17T11:31:46.6676641Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cc290>
2025-01-17T11:31:46.6676934Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f816860f5f0>
2025-01-17T11:31:46.6677599Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6678006Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-17T11:31:46.6678019Z 
2025-01-17T11:31:46.6678151Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6678414Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:31:46.6678488Z     ):
2025-01-17T11:31:46.6678562Z         """
2025-01-17T11:31:46.6678691Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6678756Z     
2025-01-17T11:31:46.6678880Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6678944Z     
2025-01-17T11:31:46.6679021Z         Parameters:
2025-01-17T11:31:46.6679091Z         -----------
2025-01-17T11:31:46.6679246Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:31:46.6679386Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:31:46.6679480Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6679545Z         """
2025-01-17T11:31:46.6679636Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:31:46.6679734Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6679889Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:31:46.6680131Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6680316Z             expected_values = expected.get(
2025-01-17T11:31:46.6680405Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6680484Z             ).values.flatten()
2025-01-17T11:31:46.6680613Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:31:46.6680692Z     
2025-01-17T11:31:46.6680912Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6681063Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6681198Z                     expected_values,
2025-01-17T11:31:46.6681318Z                     actual_values,
2025-01-17T11:31:46.6681436Z                     rtol=0.3,
2025-01-17T11:31:46.6681547Z                     atol=3,
2025-01-17T11:31:46.6681660Z                 )
2025-01-17T11:31:46.6681667Z 
2025-01-17T11:31:46.6681896Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-17T11:31:46.6682018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6682028Z 
2025-01-17T11:31:46.6682432Z args = (<function assert_allclose.<locals>.compare at 0x7f8156b8cea0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6682511Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-17T11:31:46.6682954Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6682961Z 
2025-01-17T11:31:46.6683039Z     @wraps(func)
2025-01-17T11:31:46.6683117Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6683199Z         with self._recreate_cm():
2025-01-17T11:31:46.6683278Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6683364Z E           AssertionError: 
2025-01-17T11:31:46.6683461Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6683537Z E           
2025-01-17T11:31:46.6683628Z E           Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.6683734Z E           Max absolute difference among violations: 5
2025-01-17T11:31:46.6683848Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6683999Z E            ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.6684085Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.6684235Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6684319Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.6684324Z 
2025-01-17T11:31:46.6684516Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6684668Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6684916Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6685162Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6685309Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6685604Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6685794Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-17T11:31:46.6685798Z 
2025-01-17T11:31:46.6686050Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cc350>
2025-01-17T11:31:46.6686339Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f814f56f7a0>
2025-01-17T11:31:46.6686811Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6687185Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-17T11:31:46.6687198Z 
2025-01-17T11:31:46.6687385Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6687536Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:31:46.6687605Z     ):
2025-01-17T11:31:46.6687673Z         """
2025-01-17T11:31:46.6687798Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6687863Z     
2025-01-17T11:31:46.6687987Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6688048Z     
2025-01-17T11:31:46.6688124Z         Parameters:
2025-01-17T11:31:46.6688194Z         -----------
2025-01-17T11:31:46.6688350Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:31:46.6688497Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:31:46.6688595Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6688660Z         """
2025-01-17T11:31:46.6688758Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:31:46.6688857Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6689018Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:31:46.6689161Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6689250Z             expected_values = expected.get(
2025-01-17T11:31:46.6689340Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6689419Z             ).values.flatten()
2025-01-17T11:31:46.6689548Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:31:46.6689613Z     
2025-01-17T11:31:46.6689743Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6689832Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6689915Z                     expected_values,
2025-01-17T11:31:46.6689988Z                     actual_values,
2025-01-17T11:31:46.6690064Z                     rtol=0.3,
2025-01-17T11:31:46.6690144Z                     atol=3,
2025-01-17T11:31:46.6690220Z                 )
2025-01-17T11:31:46.6690290Z             else:
2025-01-17T11:31:46.6690423Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6690487Z     
2025-01-17T11:31:46.6690596Z         labels = expected["plot_data_hdf/scalars"]
2025-01-17T11:31:46.6690716Z         for index1, data in enumerate(fig.get_children()):
2025-01-17T11:31:46.6690808Z             if isinstance(data.get_label(), str):
2025-01-17T11:31:46.6690883Z                 assert (
2025-01-17T11:31:46.6690998Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-17T11:31:46.6691086Z                     == data.get_label()
2025-01-17T11:31:46.6691153Z                 )
2025-01-17T11:31:46.6691243Z             if isinstance(data, Line2D):
2025-01-17T11:31:46.6691328Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6691412Z                     data.get_xydata(),
2025-01-17T11:31:46.6691544Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-17T11:31:46.6691618Z                     rtol=0.3,
2025-01-17T11:31:46.6691693Z                     atol=3,
2025-01-17T11:31:46.6691762Z                 )
2025-01-17T11:31:46.6691766Z 
2025-01-17T11:31:46.6691901Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-17T11:31:46.6692015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6692019Z 
2025-01-17T11:31:46.6692258Z args = (<function assert_allclose.<locals>.compare at 0x7f815315dee0>, array([[1.10e+04, 1.50e+01],
2025-01-17T11:31:46.6692334Z        [1.19e+04, 1.50e+0...,
2025-01-17T11:31:46.6692407Z        [1.82e+04, 0.00e+00],
2025-01-17T11:31:46.6692482Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6692657Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6692731Z        [2.00e+04, 0.00e+00]]))
2025-01-17T11:31:46.6692974Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6693101Z 
2025-01-17T11:31:46.6693173Z     @wraps(func)
2025-01-17T11:31:46.6693381Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6693459Z         with self._recreate_cm():
2025-01-17T11:31:46.6693545Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6693622Z E           AssertionError: 
2025-01-17T11:31:46.6693725Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6693792Z E           
2025-01-17T11:31:46.6693886Z E           Mismatched elements: 2 / 40 (5%)
2025-01-17T11:31:46.6693997Z E           Max absolute difference among violations: 15.
2025-01-17T11:31:46.6694107Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6694195Z E            ACTUAL: array([[1.10e+04, 1.50e+01],
2025-01-17T11:31:46.6694277Z E                  [1.19e+04, 1.50e+01],
2025-01-17T11:31:46.6694352Z E                  [1.19e+04, 1.00e+00],...
2025-01-17T11:31:46.6694445Z E            DESIRED: array([[1.10e+04, 0.00e+00],
2025-01-17T11:31:46.6694523Z E                  [1.19e+04, 0.00e+00],
2025-01-17T11:31:46.6694608Z E                  [1.19e+04, 4.00e+00],...
2025-01-17T11:31:46.6694612Z 
2025-01-17T11:31:46.6694806Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6694955Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6695177Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6695513Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6695657Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6696006Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6696201Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _______
2025-01-17T11:31:46.6696205Z 
2025-01-17T11:31:46.6696463Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cc4d0>
2025-01-17T11:31:46.6696752Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f814bee71a0>
2025-01-17T11:31:46.6697224Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6697461Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl7]>>
2025-01-17T11:31:46.6697465Z 
2025-01-17T11:31:46.6697553Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6697711Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:31:46.6697783Z     ):
2025-01-17T11:31:46.6697850Z         """
2025-01-17T11:31:46.6698004Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6698123Z     
2025-01-17T11:31:46.6698329Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6698460Z     
2025-01-17T11:31:46.6698587Z         Parameters:
2025-01-17T11:31:46.6698714Z         -----------
2025-01-17T11:31:46.6698950Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:31:46.6699188Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:31:46.6699286Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6699356Z         """
2025-01-17T11:31:46.6699443Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:31:46.6699546Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6699701Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:31:46.6699845Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6699935Z             expected_values = expected.get(
2025-01-17T11:31:46.6700136Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6700216Z             ).values.flatten()
2025-01-17T11:31:46.6700422Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:31:46.6700486Z     
2025-01-17T11:31:46.6700610Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6700702Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6700779Z                     expected_values,
2025-01-17T11:31:46.6700855Z                     actual_values,
2025-01-17T11:31:46.6700924Z                     rtol=0.3,
2025-01-17T11:31:46.6700998Z                     atol=3,
2025-01-17T11:31:46.6701063Z                 )
2025-01-17T11:31:46.6701134Z             else:
2025-01-17T11:31:46.6701261Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6701329Z     
2025-01-17T11:31:46.6701429Z         labels = expected["plot_data_hdf/scalars"]
2025-01-17T11:31:46.6701548Z         for index1, data in enumerate(fig.get_children()):
2025-01-17T11:31:46.6701644Z             if isinstance(data.get_label(), str):
2025-01-17T11:31:46.6701724Z                 assert (
2025-01-17T11:31:46.6701837Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-17T11:31:46.6701918Z                     == data.get_label()
2025-01-17T11:31:46.6701984Z                 )
2025-01-17T11:31:46.6702067Z             if isinstance(data, Line2D):
2025-01-17T11:31:46.6702160Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6702241Z                     data.get_xydata(),
2025-01-17T11:31:46.6702379Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-17T11:31:46.6702451Z                     rtol=0.3,
2025-01-17T11:31:46.6702526Z                     atol=3,
2025-01-17T11:31:46.6702820Z                 )
2025-01-17T11:31:46.6702827Z 
2025-01-17T11:31:46.6702987Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-17T11:31:46.6703101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6703106Z 
2025-01-17T11:31:46.6703354Z args = (<function assert_allclose.<locals>.compare at 0x7f8156b08b80>, array([[1.10e+04, 6.00e+01],
2025-01-17T11:31:46.6703430Z        [1.19e+04, 6.00e+0...,
2025-01-17T11:31:46.6703505Z        [1.82e+04, 0.00e+00],
2025-01-17T11:31:46.6703574Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6703646Z        [1.91e+04, 0.00e+00],
2025-01-17T11:31:46.6703714Z        [2.00e+04, 0.00e+00]]))
2025-01-17T11:31:46.6703964Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6703969Z 
2025-01-17T11:31:46.6704038Z     @wraps(func)
2025-01-17T11:31:46.6704118Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6704196Z         with self._recreate_cm():
2025-01-17T11:31:46.6704280Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6704359Z E           AssertionError: 
2025-01-17T11:31:46.6704465Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6704531Z E           
2025-01-17T11:31:46.6704622Z E           Mismatched elements: 12 / 40 (30%)
2025-01-17T11:31:46.6704740Z E           Max absolute difference among violations: 59.
2025-01-17T11:31:46.6704844Z E           Max relative difference among violations: 59.
2025-01-17T11:31:46.6704936Z E            ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-17T11:31:46.6705016Z E                  [1.19e+04, 6.00e+01],
2025-01-17T11:31:46.6705099Z E                  [1.19e+04, 3.10e+01],...
2025-01-17T11:31:46.6705189Z E            DESIRED: array([[1.10e+04, 1.00e+00],
2025-01-17T11:31:46.6705269Z E                  [1.19e+04, 1.00e+00],
2025-01-17T11:31:46.6705344Z E                  [1.19e+04, 0.00e+00],...
2025-01-17T11:31:46.6705349Z 
2025-01-17T11:31:46.6705554Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6705704Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6706094Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6706450Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6706597Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6706896Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6707092Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-17T11:31:46.6707096Z 
2025-01-17T11:31:46.6707347Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cd6d0>
2025-01-17T11:31:46.6707659Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8151856ae0>
2025-01-17T11:31:46.6707748Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6707894Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:31:46.6708028Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:31:46.6708232Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6708465Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-17T11:31:46.6708469Z 
2025-01-17T11:31:46.6708558Z     def test_generate_plot_ply(
2025-01-17T11:31:46.6708719Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6708789Z     ):
2025-01-17T11:31:46.6708855Z         """
2025-01-17T11:31:46.6708988Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6709052Z     
2025-01-17T11:31:46.6709182Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6709244Z     
2025-01-17T11:31:46.6709316Z         Parameters:
2025-01-17T11:31:46.6709390Z         ----------
2025-01-17T11:31:46.6709547Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:31:46.6709682Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:31:46.6709775Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6709846Z         """
2025-01-17T11:31:46.6709932Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6710038Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6710204Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6710274Z     
2025-01-17T11:31:46.6710417Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6710512Z             expected_values = expected.get(
2025-01-17T11:31:46.6710593Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6710675Z             ).values.flatten()
2025-01-17T11:31:46.6710807Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:31:46.6710876Z     
2025-01-17T11:31:46.6711003Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6711090Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6711179Z                     expected_values,
2025-01-17T11:31:46.6711255Z                     actual_values,
2025-01-17T11:31:46.6711331Z                     rtol=0.3,
2025-01-17T11:31:46.6711400Z                     atol=3,
2025-01-17T11:31:46.6711470Z                 )
2025-01-17T11:31:46.6711474Z 
2025-01-17T11:31:46.6711610Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-17T11:31:46.6711722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6711727Z 
2025-01-17T11:31:46.6712132Z args = (<function assert_allclose.<locals>.compare at 0x7f811a6f1440>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6712213Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-17T11:31:46.6712719Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6712842Z 
2025-01-17T11:31:46.6712929Z     @wraps(func)
2025-01-17T11:31:46.6713008Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6713092Z         with self._recreate_cm():
2025-01-17T11:31:46.6713174Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6713257Z E           AssertionError: 
2025-01-17T11:31:46.6713360Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6713431Z E           
2025-01-17T11:31:46.6713520Z E           Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.6713632Z E           Max absolute difference among violations: 5
2025-01-17T11:31:46.6713742Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6713898Z E            ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.6713985Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.6714148Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.6714233Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.6714237Z 
2025-01-17T11:31:46.6714437Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6714584Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6714811Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6715051Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6715200Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6715493Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6715686Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-17T11:31:46.6715695Z 
2025-01-17T11:31:46.6715946Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cd790>
2025-01-17T11:31:46.6716258Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8154210380>
2025-01-17T11:31:46.6716348Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6716491Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:31:46.6716616Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:31:46.6716818Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6717046Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-17T11:31:46.6717050Z 
2025-01-17T11:31:46.6717137Z     def test_generate_plot_ply(
2025-01-17T11:31:46.6717293Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6717367Z     ):
2025-01-17T11:31:46.6717433Z         """
2025-01-17T11:31:46.6717555Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6717630Z     
2025-01-17T11:31:46.6717749Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6717817Z     
2025-01-17T11:31:46.6717888Z         Parameters:
2025-01-17T11:31:46.6717965Z         ----------
2025-01-17T11:31:46.6718115Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:31:46.6718249Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:31:46.6718338Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6718408Z         """
2025-01-17T11:31:46.6718495Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6718599Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6718764Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6718834Z     
2025-01-17T11:31:46.6719115Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6719203Z             expected_values = expected.get(
2025-01-17T11:31:46.6719383Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6719465Z             ).values.flatten()
2025-01-17T11:31:46.6719601Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:31:46.6719665Z     
2025-01-17T11:31:46.6719791Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6719876Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6719960Z                     expected_values,
2025-01-17T11:31:46.6720035Z                     actual_values,
2025-01-17T11:31:46.6720112Z                     rtol=0.3,
2025-01-17T11:31:46.6720182Z                     atol=3,
2025-01-17T11:31:46.6720256Z                 )
2025-01-17T11:31:46.6720322Z             else:
2025-01-17T11:31:46.6720451Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6720559Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6720660Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6720744Z             if data.stackgroup:
2025-01-17T11:31:46.6720813Z                 assert (
2025-01-17T11:31:46.6720930Z                     data.stackgroup
2025-01-17T11:31:46.6721000Z                     == getattr(
2025-01-17T11:31:46.6721107Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6721200Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6721275Z                     ).decode()
2025-01-17T11:31:46.6721340Z                 )
2025-01-17T11:31:46.6721416Z             if data.name:
2025-01-17T11:31:46.6721487Z                 assert (
2025-01-17T11:31:46.6721562Z                     data.name
2025-01-17T11:31:46.6721631Z                     == getattr(
2025-01-17T11:31:46.6721733Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6721824Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6721897Z                     ).decode()
2025-01-17T11:31:46.6721961Z                 )
2025-01-17T11:31:46.6722057Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6722125Z                 data.x,
2025-01-17T11:31:46.6722227Z                 expected.get(group + "x").values.flatten(),
2025-01-17T11:31:46.6722302Z                 rtol=0.3,
2025-01-17T11:31:46.6722373Z                 atol=3,
2025-01-17T11:31:46.6722444Z             )
2025-01-17T11:31:46.6722674Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6722801Z                 data.y,
2025-01-17T11:31:46.6722909Z                 expected.get(group + "y").values.flatten(),
2025-01-17T11:31:46.6722983Z                 rtol=0.3,
2025-01-17T11:31:46.6723049Z                 atol=3,
2025-01-17T11:31:46.6723117Z             )
2025-01-17T11:31:46.6723121Z 
2025-01-17T11:31:46.6723255Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-17T11:31:46.6723372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6723376Z 
2025-01-17T11:31:46.6723702Z args = (<function assert_allclose.<locals>.compare at 0x7f811a657ba0>, array([15, 15,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,
2025-01-17T11:31:46.6723829Z         0,  0,  0]), array([0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
2025-01-17T11:31:46.6724076Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6724080Z 
2025-01-17T11:31:46.6724154Z     @wraps(func)
2025-01-17T11:31:46.6724230Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6724313Z         with self._recreate_cm():
2025-01-17T11:31:46.6724395Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6724477Z E           AssertionError: 
2025-01-17T11:31:46.6724577Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6724647Z E           
2025-01-17T11:31:46.6724865Z E           Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.6724976Z E           Max absolute difference among violations: 15
2025-01-17T11:31:46.6725193Z E           Max relative difference among violations: inf
2025-01-17T11:31:46.6725332Z E            ACTUAL: array([15, 15,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,
2025-01-17T11:31:46.6725408Z E                   0,  0,  0])
2025-01-17T11:31:46.6725544Z E            DESIRED: array([0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.6725548Z 
2025-01-17T11:31:46.6725745Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6725889Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6726121Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6726449Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6726605Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6726961Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6727155Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _______
2025-01-17T11:31:46.6727159Z 
2025-01-17T11:31:46.6727407Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f817e4cd940>
2025-01-17T11:31:46.6727715Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f8169ddc1a0>
2025-01-17T11:31:46.6727805Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6727947Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:31:46.6728072Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:31:46.6728274Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f814bcb3e30>)
2025-01-17T11:31:46.6728503Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply7]>>
2025-01-17T11:31:46.6728512Z 
2025-01-17T11:31:46.6728600Z     def test_generate_plot_ply(
2025-01-17T11:31:46.6728757Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6728826Z     ):
2025-01-17T11:31:46.6728891Z         """
2025-01-17T11:31:46.6729018Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:31:46.6729080Z     
2025-01-17T11:31:46.6729205Z         Compares generated plot data with regression data.
2025-01-17T11:31:46.6729267Z     
2025-01-17T11:31:46.6729341Z         Parameters:
2025-01-17T11:31:46.6729409Z         ----------
2025-01-17T11:31:46.6729562Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:31:46.6729690Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:31:46.6729788Z         request: Pytest's request fixture.
2025-01-17T11:31:46.6729853Z         """
2025-01-17T11:31:46.6729940Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6730052Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6730216Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6730286Z     
2025-01-17T11:31:46.6730424Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:31:46.6730519Z             expected_values = expected.get(
2025-01-17T11:31:46.6730599Z                 "plot_data_hdf/" + item
2025-01-17T11:31:46.6730691Z             ).values.flatten()
2025-01-17T11:31:46.6730822Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:31:46.6730890Z     
2025-01-17T11:31:46.6731012Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:31:46.6731104Z                 np.testing.assert_allclose(
2025-01-17T11:31:46.6731278Z                     expected_values,
2025-01-17T11:31:46.6731359Z                     actual_values,
2025-01-17T11:31:46.6731429Z                     rtol=0.3,
2025-01-17T11:31:46.6731579Z                     atol=3,
2025-01-17T11:31:46.6731644Z                 )
2025-01-17T11:31:46.6731710Z             else:
2025-01-17T11:31:46.6731843Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:31:46.6731937Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6732040Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6732118Z             if data.stackgroup:
2025-01-17T11:31:46.6732193Z                 assert (
2025-01-17T11:31:46.6732269Z                     data.stackgroup
2025-01-17T11:31:46.6732345Z                     == getattr(
2025-01-17T11:31:46.6732444Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6732683Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6732776Z                     ).decode()
2025-01-17T11:31:46.6732848Z                 )
2025-01-17T11:31:46.6732921Z             if data.name:
2025-01-17T11:31:46.6733001Z                 assert (
2025-01-17T11:31:46.6733078Z                     data.name
2025-01-17T11:31:46.6733151Z                     == getattr(
2025-01-17T11:31:46.6733246Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6733331Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6733403Z                     ).decode()
2025-01-17T11:31:46.6733470Z                 )
2025-01-17T11:31:46.6733556Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6733622Z                 data.x,
2025-01-17T11:31:46.6733726Z                 expected.get(group + "x").values.flatten(),
2025-01-17T11:31:46.6733794Z                 rtol=0.3,
2025-01-17T11:31:46.6733864Z                 atol=3,
2025-01-17T11:31:46.6733928Z             )
2025-01-17T11:31:46.6734014Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6734087Z                 data.y,
2025-01-17T11:31:46.6734232Z                 expected.get(group + "y").values.flatten(),
2025-01-17T11:31:46.6734360Z                 rtol=0.3,
2025-01-17T11:31:46.6734461Z                 atol=3,
2025-01-17T11:31:46.6734527Z             )
2025-01-17T11:31:46.6734532Z 
2025-01-17T11:31:46.6734670Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-17T11:31:46.6734775Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6734780Z 
2025-01-17T11:31:46.6735107Z args = (<function assert_allclose.<locals>.compare at 0x7f811a6f0fe0>, array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-17T11:31:46.6735227Z         1,  0,  0]), array([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
2025-01-17T11:31:46.6735476Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:31:46.6735480Z 
2025-01-17T11:31:46.6735556Z     @wraps(func)
2025-01-17T11:31:46.6735637Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6735717Z         with self._recreate_cm():
2025-01-17T11:31:46.6735803Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6735885Z E           AssertionError: 
2025-01-17T11:31:46.6735981Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.6736054Z E           
2025-01-17T11:31:46.6736144Z E           Mismatched elements: 12 / 20 (60%)
2025-01-17T11:31:46.6736261Z E           Max absolute difference among violations: 59
2025-01-17T11:31:46.6736370Z E           Max relative difference among violations: 59.
2025-01-17T11:31:46.6736517Z E            ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-17T11:31:46.6736590Z E                   1,  0,  0])
2025-01-17T11:31:46.6736732Z E            DESIRED: array([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.6736737Z 
2025-01-17T11:31:46.6736929Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6737214Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:31:46.6737551Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:31:46.6737797Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:31:46.6737936Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:31:46.6738232Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-17T11:31:46.6738448Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-17T11:31:46.6738453Z 
2025-01-17T11:31:46.6738714Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e474ef0>
2025-01-17T11:31:46.6739016Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6739344Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814e91fbc0>
2025-01-17T11:31:46.6739620Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-17T11:31:46.6739625Z 
2025-01-17T11:31:46.6739717Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6739784Z         self,
2025-01-17T11:31:46.6739879Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6739961Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6740034Z         request,
2025-01-17T11:31:46.6740099Z     ):
2025-01-17T11:31:46.6740203Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6740374Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6740460Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6740628Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6740717Z             plot_object = getattr(
2025-01-17T11:31:46.6740835Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6740903Z             )
2025-01-17T11:31:46.6741001Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6741155Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6741257Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6741344Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6741468Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6741537Z                 )
2025-01-17T11:31:46.6741541Z 
2025-01-17T11:31:46.6741684Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6741788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6741793Z 
2025-01-17T11:31:46.6742256Z args = (<function assert_allclose.<locals>.compare at 0x7f816862bec0>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6742364Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6742783Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6742790Z 
2025-01-17T11:31:46.6742865Z     @wraps(func)
2025-01-17T11:31:46.6742950Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6743030Z         with self._recreate_cm():
2025-01-17T11:31:46.6743121Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6743202Z E           AssertionError: 
2025-01-17T11:31:46.6743309Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6743376Z E           
2025-01-17T11:31:46.6743475Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6743610Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6743904Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6744070Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6744262Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6744425Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6744510Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6744514Z 
2025-01-17T11:31:46.6744710Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6744930Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-17T11:31:46.6744935Z 
2025-01-17T11:31:46.6745192Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475610>
2025-01-17T11:31:46.6745500Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6745822Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8168ca2450>
2025-01-17T11:31:46.6746102Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-17T11:31:46.6746107Z 
2025-01-17T11:31:46.6746195Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6746268Z         self,
2025-01-17T11:31:46.6746358Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6746446Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6746513Z         request,
2025-01-17T11:31:46.6746584Z     ):
2025-01-17T11:31:46.6746684Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6746858Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6746945Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6747114Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6747202Z             plot_object = getattr(
2025-01-17T11:31:46.6747326Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6747402Z             )
2025-01-17T11:31:46.6747496Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6747656Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6747756Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6747852Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6747973Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6748046Z                 )
2025-01-17T11:31:46.6748050Z 
2025-01-17T11:31:46.6748188Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6748298Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6748302Z 
2025-01-17T11:31:46.6748759Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41da0>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6748864Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6749908Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6749915Z 
2025-01-17T11:31:46.6750558Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5
2025-01-17T11:31:46.6750563Z 
2025-01-17T11:31:46.6750872Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6750877Z 
2025-01-17T11:31:46.6751510Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5
2025-01-17T11:31:46.6751608Z 
2025-01-17T11:31:46.6751916Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6751993Z 
2025-01-17T11:31:46.6752914Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-17T11:31:46.6752922Z 
2025-01-17T11:31:46.6753230Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6753235Z 
2025-01-17T11:31:46.6753879Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-17T11:31:46.6753884Z 
2025-01-17T11:31:46.6754183Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6754195Z 
2025-01-17T11:31:46.6754882Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-17T11:31:46.6754893Z 
2025-01-17T11:31:46.6755199Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6755203Z 
2025-01-17T11:31:46.6755843Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-17T11:31:46.6755847Z 
2025-01-17T11:31:46.6756148Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6756153Z 
2025-01-17T11:31:46.6756788Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-17T11:31:46.6756801Z 
2025-01-17T11:31:46.6757102Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6757106Z 
2025-01-17T11:31:46.6757743Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-17T11:31:46.6757748Z 
2025-01-17T11:31:46.6758049Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6758054Z 
2025-01-17T11:31:46.6758683Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-17T11:31:46.6758694Z 
2025-01-17T11:31:46.6758993Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6759003Z 
2025-01-17T11:31:46.6759686Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-17T11:31:46.6759690Z 
2025-01-17T11:31:46.6759989Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6759993Z 
2025-01-17T11:31:46.6760682Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-17T11:31:46.6760687Z 
2025-01-17T11:31:46.6760981Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6761110Z 
2025-01-17T11:31:46.6761758Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-17T11:31:46.6761861Z 
2025-01-17T11:31:46.6762160Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6762172Z 
2025-01-17T11:31:46.6763057Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-17T11:31:46.6763065Z 
2025-01-17T11:31:46.6763373Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6763379Z 
2025-01-17T11:31:46.6764010Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-17T11:31:46.6764021Z 
2025-01-17T11:31:46.6764329Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6764333Z 
2025-01-17T11:31:46.6765016Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-17T11:31:46.6765022Z 
2025-01-17T11:31:46.6765326Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6765330Z 
2025-01-17T11:31:46.6766004Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-17T11:31:46.6766014Z 
2025-01-17T11:31:46.6766315Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6766323Z 
2025-01-17T11:31:46.6766999Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-17T11:31:46.6767003Z 
2025-01-17T11:31:46.6767298Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6767302Z 
2025-01-17T11:31:46.6767980Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-17T11:31:46.6767985Z 
2025-01-17T11:31:46.6768283Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6768290Z 
2025-01-17T11:31:46.6768927Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-17T11:31:46.6768937Z 
2025-01-17T11:31:46.6769235Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6769244Z 
2025-01-17T11:31:46.6769880Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-17T11:31:46.6769885Z 
2025-01-17T11:31:46.6770186Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6770190Z 
2025-01-17T11:31:46.6770834Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-17T11:31:46.6770960Z 
2025-01-17T11:31:46.6771265Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6771373Z 
2025-01-17T11:31:46.6772050Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-17T11:31:46.6772054Z 
2025-01-17T11:31:46.6772358Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6772362Z 
2025-01-17T11:31:46.6773102Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-17T11:31:46.6773115Z 
2025-01-17T11:31:46.6773419Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6773430Z 
2025-01-17T11:31:46.6774123Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-17T11:31:46.6774127Z 
2025-01-17T11:31:46.6774425Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6774429Z 
2025-01-17T11:31:46.6775072Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-17T11:31:46.6775077Z 
2025-01-17T11:31:46.6775373Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6775377Z 
2025-01-17T11:31:46.6776027Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-17T11:31:46.6776035Z 
2025-01-17T11:31:46.6776333Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6776344Z 
2025-01-17T11:31:46.6776982Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-17T11:31:46.6776987Z 
2025-01-17T11:31:46.6777290Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6777294Z 
2025-01-17T11:31:46.6777918Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-17T11:31:46.6777927Z 
2025-01-17T11:31:46.6778231Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6778240Z 
2025-01-17T11:31:46.6778878Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-17T11:31:46.6778882Z 
2025-01-17T11:31:46.6779180Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6779184Z 
2025-01-17T11:31:46.6779862Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-17T11:31:46.6779873Z 
2025-01-17T11:31:46.6780169Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6780307Z 
2025-01-17T11:31:46.6780997Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-17T11:31:46.6781177Z 
2025-01-17T11:31:46.6781484Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6781489Z 
2025-01-17T11:31:46.6782125Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-17T11:31:46.6782130Z 
2025-01-17T11:31:46.6782428Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6782432Z 
2025-01-17T11:31:46.6783215Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-17T11:31:46.6783235Z 
2025-01-17T11:31:46.6783531Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6783544Z 
2025-01-17T11:31:46.6784180Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-17T11:31:46.6784185Z 
2025-01-17T11:31:46.6784488Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6784493Z 
2025-01-17T11:31:46.6785168Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-17T11:31:46.6785177Z 
2025-01-17T11:31:46.6785481Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6785488Z 
2025-01-17T11:31:46.6786121Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-17T11:31:46.6786126Z 
2025-01-17T11:31:46.6786429Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6786433Z 
2025-01-17T11:31:46.6787113Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-17T11:31:46.6787125Z 
2025-01-17T11:31:46.6787421Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:31:46.6787429Z 
2025-01-17T11:31:46.6788063Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-17T11:31:46.6788073Z 
2025-01-17T11:31:46.6788325Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6788331Z 
2025-01-17T11:31:46.6788408Z     @wraps(func)
2025-01-17T11:31:46.6788487Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6788574Z         with self._recreate_cm():
2025-01-17T11:31:46.6788656Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6788740Z E           AssertionError: 
2025-01-17T11:31:46.6788847Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6788922Z E           
2025-01-17T11:31:46.6789016Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6789276Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6789405Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6789676Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6789767Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6789927Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6790015Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6790019Z 
2025-01-17T11:31:46.6790216Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6790441Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-17T11:31:46.6790445Z 
2025-01-17T11:31:46.6790702Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475a30>
2025-01-17T11:31:46.6791007Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6791327Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8154fcf230>
2025-01-17T11:31:46.6791613Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-17T11:31:46.6791618Z 
2025-01-17T11:31:46.6791705Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6791778Z         self,
2025-01-17T11:31:46.6791869Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6791960Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6792028Z         request,
2025-01-17T11:31:46.6792101Z     ):
2025-01-17T11:31:46.6792202Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6792380Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6792461Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6792732Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6792821Z             plot_object = getattr(
2025-01-17T11:31:46.6792952Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6793019Z             )
2025-01-17T11:31:46.6793115Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6793270Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6793376Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6793463Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6793589Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6793655Z                 )
2025-01-17T11:31:46.6793659Z 
2025-01-17T11:31:46.6793804Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6793910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6793915Z 
2025-01-17T11:31:46.6794382Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41760>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6794481Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6794737Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6794742Z 
2025-01-17T11:31:46.6794811Z     @wraps(func)
2025-01-17T11:31:46.6794895Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6794973Z         with self._recreate_cm():
2025-01-17T11:31:46.6795055Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6795139Z E           AssertionError: 
2025-01-17T11:31:46.6795241Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6795313Z E           
2025-01-17T11:31:46.6795409Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6795545Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6795787Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6796059Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6796140Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6796305Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6796383Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6796387Z 
2025-01-17T11:31:46.6796584Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6796799Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-17T11:31:46.6796804Z 
2025-01-17T11:31:46.6797065Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475af0>
2025-01-17T11:31:46.6797362Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6797690Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8154fcf770>
2025-01-17T11:31:46.6797962Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-17T11:31:46.6797966Z 
2025-01-17T11:31:46.6798060Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6798127Z         self,
2025-01-17T11:31:46.6798223Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6798307Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6798379Z         request,
2025-01-17T11:31:46.6798444Z     ):
2025-01-17T11:31:46.6798548Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6798719Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6798804Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6798967Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6799058Z             plot_object = getattr(
2025-01-17T11:31:46.6799176Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6799252Z             )
2025-01-17T11:31:46.6799346Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6799494Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6799599Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6799689Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6799813Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6799881Z                 )
2025-01-17T11:31:46.6799885Z 
2025-01-17T11:31:46.6800028Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6800136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6800141Z 
2025-01-17T11:31:46.6800600Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc20400>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:31:46.6800706Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6800965Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6800970Z 
2025-01-17T11:31:46.6801041Z     @wraps(func)
2025-01-17T11:31:46.6801123Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6801201Z         with self._recreate_cm():
2025-01-17T11:31:46.6801290Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6801367Z E           AssertionError: 
2025-01-17T11:31:46.6801473Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6801541Z E           
2025-01-17T11:31:46.6801637Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6801770Z E           Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.6801987Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6802147Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6802324Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6802482Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6802730Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6802740Z 
2025-01-17T11:31:46.6802954Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6803175Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-17T11:31:46.6803180Z 
2025-01-17T11:31:46.6803436Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475be0>
2025-01-17T11:31:46.6803738Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6804061Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170da6ae0>
2025-01-17T11:31:46.6804343Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-17T11:31:46.6804348Z 
2025-01-17T11:31:46.6804436Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6804508Z         self,
2025-01-17T11:31:46.6804598Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6804687Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6804756Z         request,
2025-01-17T11:31:46.6804826Z     ):
2025-01-17T11:31:46.6804926Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6805097Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6805184Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6805348Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6805440Z             plot_object = getattr(
2025-01-17T11:31:46.6805554Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6805631Z             )
2025-01-17T11:31:46.6805723Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6805880Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6805980Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6806073Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6806194Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6806269Z                 )
2025-01-17T11:31:46.6806273Z 
2025-01-17T11:31:46.6806414Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6806531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6806535Z 
2025-01-17T11:31:46.6806990Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc22ca0>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6807101Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6807350Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6807354Z 
2025-01-17T11:31:46.6807430Z     @wraps(func)
2025-01-17T11:31:46.6807507Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6807597Z         with self._recreate_cm():
2025-01-17T11:31:46.6807677Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6807762Z E           AssertionError: 
2025-01-17T11:31:46.6814369Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6814487Z E           
2025-01-17T11:31:46.6814599Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6814748Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6814884Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6815239Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6815443Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6815608Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6815695Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6815700Z 
2025-01-17T11:31:46.6815920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6816145Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-17T11:31:46.6816149Z 
2025-01-17T11:31:46.6816409Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475cd0>
2025-01-17T11:31:46.6816716Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6817032Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8156ba53d0>
2025-01-17T11:31:46.6817314Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-17T11:31:46.6817326Z 
2025-01-17T11:31:46.6817419Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6817488Z         self,
2025-01-17T11:31:46.6817579Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6817671Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6817739Z         request,
2025-01-17T11:31:46.6817808Z     ):
2025-01-17T11:31:46.6817912Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6818092Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6818174Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6818350Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6818432Z             plot_object = getattr(
2025-01-17T11:31:46.6818564Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6818630Z             )
2025-01-17T11:31:46.6818737Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6818890Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6818998Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6819087Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6819213Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6819280Z                 )
2025-01-17T11:31:46.6819284Z 
2025-01-17T11:31:46.6819431Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6819540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6819545Z 
2025-01-17T11:31:46.6820007Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc43f60>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6820114Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6820371Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6820377Z 
2025-01-17T11:31:46.6820449Z     @wraps(func)
2025-01-17T11:31:46.6820533Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6820613Z         with self._recreate_cm():
2025-01-17T11:31:46.6820699Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6820779Z E           AssertionError: 
2025-01-17T11:31:46.6820916Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6820991Z E           
2025-01-17T11:31:46.6821087Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6821227Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6821354Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6821614Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6821777Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6821942Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6822021Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6822025Z 
2025-01-17T11:31:46.6822225Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6822437Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-17T11:31:46.6822442Z 
2025-01-17T11:31:46.6822826Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475d90>
2025-01-17T11:31:46.6823139Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6823467Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8156ba7aa0>
2025-01-17T11:31:46.6823743Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-17T11:31:46.6823754Z 
2025-01-17T11:31:46.6823852Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6823919Z         self,
2025-01-17T11:31:46.6824013Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6824095Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6824171Z         request,
2025-01-17T11:31:46.6824234Z     ):
2025-01-17T11:31:46.6824339Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6824510Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6824594Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6824758Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6824841Z             plot_object = getattr(
2025-01-17T11:31:46.6824963Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6825039Z             )
2025-01-17T11:31:46.6825131Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6825289Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6825393Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6825482Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6825608Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6825675Z                 )
2025-01-17T11:31:46.6825679Z 
2025-01-17T11:31:46.6825823Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6825930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6825934Z 
2025-01-17T11:31:46.6826394Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc40900>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6826494Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6826750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6826755Z 
2025-01-17T11:31:46.6826827Z     @wraps(func)
2025-01-17T11:31:46.6826909Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6826988Z         with self._recreate_cm():
2025-01-17T11:31:46.6827076Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6827156Z E           AssertionError: 
2025-01-17T11:31:46.6827264Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6827329Z E           
2025-01-17T11:31:46.6827432Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6827564Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6827694Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6827854Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6828087Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6828349Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6828434Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6828438Z 
2025-01-17T11:31:46.6828633Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6828851Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-17T11:31:46.6828855Z 
2025-01-17T11:31:46.6829111Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475e50>
2025-01-17T11:31:46.6829422Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6829736Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8169dfc9b0>
2025-01-17T11:31:46.6830016Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-17T11:31:46.6830025Z 
2025-01-17T11:31:46.6830112Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6830183Z         self,
2025-01-17T11:31:46.6830272Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6830360Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6830425Z         request,
2025-01-17T11:31:46.6830493Z     ):
2025-01-17T11:31:46.6830590Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6830767Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6830851Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6831021Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6831106Z             plot_object = getattr(
2025-01-17T11:31:46.6831222Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6831299Z             )
2025-01-17T11:31:46.6831389Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6831547Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6831645Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6831737Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6831856Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6831928Z                 )
2025-01-17T11:31:46.6831932Z 
2025-01-17T11:31:46.6832068Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6832176Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6832180Z 
2025-01-17T11:31:46.6832737Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41b20>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:31:46.6832844Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6833089Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6833098Z 
2025-01-17T11:31:46.6833173Z     @wraps(func)
2025-01-17T11:31:46.6833249Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6833334Z         with self._recreate_cm():
2025-01-17T11:31:46.6833414Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6833494Z E           AssertionError: 
2025-01-17T11:31:46.6833593Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6833662Z E           
2025-01-17T11:31:46.6833753Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6833888Z E           Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.6834012Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6834176Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6834379Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6834666Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.6834745Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6834749Z 
2025-01-17T11:31:46.6834945Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6835153Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-17T11:31:46.6835157Z 
2025-01-17T11:31:46.6835414Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475f10>
2025-01-17T11:31:46.6835710Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6836030Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81719fc800>
2025-01-17T11:31:46.6836302Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-17T11:31:46.6836311Z 
2025-01-17T11:31:46.6836402Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6836468Z         self,
2025-01-17T11:31:46.6836562Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6836643Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6836714Z         request,
2025-01-17T11:31:46.6836785Z     ):
2025-01-17T11:31:46.6836882Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6837054Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6837133Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6837299Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6837377Z             plot_object = getattr(
2025-01-17T11:31:46.6837498Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6837562Z             )
2025-01-17T11:31:46.6837660Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6837808Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6837915Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6838001Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6838123Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6838188Z                 )
2025-01-17T11:31:46.6838192Z 
2025-01-17T11:31:46.6838334Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6838438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6838443Z 
2025-01-17T11:31:46.6838898Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc43ba0>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6838993Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6839247Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6839259Z 
2025-01-17T11:31:46.6839327Z     @wraps(func)
2025-01-17T11:31:46.6839419Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6839498Z         with self._recreate_cm():
2025-01-17T11:31:46.6839582Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6839661Z E           AssertionError: 
2025-01-17T11:31:46.6839766Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6839831Z E           
2025-01-17T11:31:46.6839924Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6840059Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6840180Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6840348Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6840516Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6840682Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6840836Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6840840Z 
2025-01-17T11:31:46.6841038Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6841258Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-17T11:31:46.6841263Z 
2025-01-17T11:31:46.6841523Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475fd0>
2025-01-17T11:31:46.6841817Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6842132Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170efa720>
2025-01-17T11:31:46.6842400Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-17T11:31:46.6842413Z 
2025-01-17T11:31:46.6842498Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6842743Z         self,
2025-01-17T11:31:46.6842882Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6842971Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6843043Z         request,
2025-01-17T11:31:46.6843106Z     ):
2025-01-17T11:31:46.6843209Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6843380Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6843464Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6843628Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6843711Z             plot_object = getattr(
2025-01-17T11:31:46.6843826Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6843895Z             )
2025-01-17T11:31:46.6843985Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6844149Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6844251Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6844343Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6844461Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6844528Z                 )
2025-01-17T11:31:46.6844537Z 
2025-01-17T11:31:46.6844675Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6844781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6844790Z 
2025-01-17T11:31:46.6845248Z args = (<function assert_allclose.<locals>.compare at 0x7f812bcea520>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6845347Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6845597Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6845607Z 
2025-01-17T11:31:46.6845680Z     @wraps(func)
2025-01-17T11:31:46.6845759Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6845837Z         with self._recreate_cm():
2025-01-17T11:31:46.6845922Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6845999Z E           AssertionError: 
2025-01-17T11:31:46.6846103Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6846169Z E           
2025-01-17T11:31:46.6846266Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6846395Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6846519Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6846677Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6846760Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6847048Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6847233Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6847238Z 
2025-01-17T11:31:46.6847431Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6847653Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-17T11:31:46.6847658Z 
2025-01-17T11:31:46.6847911Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476090>
2025-01-17T11:31:46.6848213Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6848526Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81766926c0>
2025-01-17T11:31:46.6848805Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-17T11:31:46.6848814Z 
2025-01-17T11:31:46.6848900Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6848976Z         self,
2025-01-17T11:31:46.6849063Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6849150Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6849216Z         request,
2025-01-17T11:31:46.6849284Z     ):
2025-01-17T11:31:46.6849383Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6849557Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6849637Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6849809Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6849888Z             plot_object = getattr(
2025-01-17T11:31:46.6850012Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6850084Z             )
2025-01-17T11:31:46.6850176Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6850337Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6850433Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6850530Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6850648Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6850719Z                 )
2025-01-17T11:31:46.6850723Z 
2025-01-17T11:31:46.6850859Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6850971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6850975Z 
2025-01-17T11:31:46.6851426Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc404a0>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6851526Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6851767Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6851776Z 
2025-01-17T11:31:46.6851854Z     @wraps(func)
2025-01-17T11:31:46.6851933Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6852018Z         with self._recreate_cm():
2025-01-17T11:31:46.6852099Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6852182Z E           AssertionError: 
2025-01-17T11:31:46.6852281Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6852353Z E           
2025-01-17T11:31:46.6852443Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6852685Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6852807Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6852972Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6853052Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6853340Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6853419Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6853524Z 
2025-01-17T11:31:46.6853721Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6853935Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-17T11:31:46.6853940Z 
2025-01-17T11:31:46.6854194Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476150>
2025-01-17T11:31:46.6854486Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6854804Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f817e8e8560>
2025-01-17T11:31:46.6855075Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-17T11:31:46.6855085Z 
2025-01-17T11:31:46.6855173Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6855238Z         self,
2025-01-17T11:31:46.6855335Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6855418Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6855489Z         request,
2025-01-17T11:31:46.6855553Z     ):
2025-01-17T11:31:46.6855649Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6855826Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6855904Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6856073Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6856152Z             plot_object = getattr(
2025-01-17T11:31:46.6856270Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6856335Z             )
2025-01-17T11:31:46.6856430Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6856580Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6856687Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6856777Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6856898Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6856964Z                 )
2025-01-17T11:31:46.6856968Z 
2025-01-17T11:31:46.6857107Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6857210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6857214Z 
2025-01-17T11:31:46.6857667Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc20c20>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:31:46.6857760Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6858010Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6858019Z 
2025-01-17T11:31:46.6858088Z     @wraps(func)
2025-01-17T11:31:46.6858174Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6858252Z         with self._recreate_cm():
2025-01-17T11:31:46.6858337Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6858414Z E           AssertionError: 
2025-01-17T11:31:46.6858518Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6858585Z E           
2025-01-17T11:31:46.6858680Z E           Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.6858805Z E           Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.6858924Z E           Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.6859089Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6859168Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6859332Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6859522Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6859604Z 
2025-01-17T11:31:46.6859795Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6860008Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-17T11:31:46.6860017Z 
2025-01-17T11:31:46.6860270Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476210>
2025-01-17T11:31:46.6860564Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6860884Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8169dfde50>
2025-01-17T11:31:46.6861152Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-17T11:31:46.6861162Z 
2025-01-17T11:31:46.6861252Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6861323Z         self,
2025-01-17T11:31:46.6861410Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6861496Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6861569Z         request,
2025-01-17T11:31:46.6861633Z     ):
2025-01-17T11:31:46.6861735Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6861908Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6861991Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6862154Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6862238Z             plot_object = getattr(
2025-01-17T11:31:46.6862352Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6862421Z             )
2025-01-17T11:31:46.6862511Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6862784Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6862894Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6862986Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6863110Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6863183Z                 )
2025-01-17T11:31:46.6863187Z 
2025-01-17T11:31:46.6863322Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6863428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6863433Z 
2025-01-17T11:31:46.6863891Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc41e40>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6863991Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6864237Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6864249Z 
2025-01-17T11:31:46.6864323Z     @wraps(func)
2025-01-17T11:31:46.6864398Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6864490Z         with self._recreate_cm():
2025-01-17T11:31:46.6864569Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6864652Z E           AssertionError: 
2025-01-17T11:31:46.6864752Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6864821Z E           
2025-01-17T11:31:46.6864911Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6865043Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6865166Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6865333Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6865412Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6865575Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6865777Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6865782Z 
2025-01-17T11:31:46.6866089Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6866307Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-17T11:31:46.6866312Z 
2025-01-17T11:31:46.6866575Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4762d0>
2025-01-17T11:31:46.6866874Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6867193Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814be32b70>
2025-01-17T11:31:46.6867461Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-17T11:31:46.6867465Z 
2025-01-17T11:31:46.6867554Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6867627Z         self,
2025-01-17T11:31:46.6867725Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6867815Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6867889Z         request,
2025-01-17T11:31:46.6867955Z     ):
2025-01-17T11:31:46.6868054Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6868228Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6868308Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6868478Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6868557Z             plot_object = getattr(
2025-01-17T11:31:46.6868677Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6868742Z             )
2025-01-17T11:31:46.6868839Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6868992Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6869100Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6869188Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6869318Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6869384Z                 )
2025-01-17T11:31:46.6869388Z 
2025-01-17T11:31:46.6869531Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6869637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6869642Z 
2025-01-17T11:31:46.6870103Z args = (<function assert_allclose.<locals>.compare at 0x7f812bcea840>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6870198Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6870452Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6870461Z 
2025-01-17T11:31:46.6870530Z     @wraps(func)
2025-01-17T11:31:46.6870612Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6870692Z         with self._recreate_cm():
2025-01-17T11:31:46.6870789Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6870868Z E           AssertionError: 
2025-01-17T11:31:46.6870973Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6871040Z E           
2025-01-17T11:31:46.6871139Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6871268Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6871398Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6871559Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6871640Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6871807Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6871977Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6871988Z 
2025-01-17T11:31:46.6872176Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6872470Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-17T11:31:46.6872479Z 
2025-01-17T11:31:46.6872860Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476450>
2025-01-17T11:31:46.6873161Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6873484Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8172ba8dd0>
2025-01-17T11:31:46.6873759Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-17T11:31:46.6873763Z 
2025-01-17T11:31:46.6873849Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6873920Z         self,
2025-01-17T11:31:46.6874013Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6874095Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6874174Z         request,
2025-01-17T11:31:46.6874238Z     ):
2025-01-17T11:31:46.6874343Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6874513Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6874601Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6874764Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6874848Z             plot_object = getattr(
2025-01-17T11:31:46.6874963Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6875033Z             )
2025-01-17T11:31:46.6875123Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6875280Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6875379Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6875479Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6875597Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6875675Z                 )
2025-01-17T11:31:46.6875679Z 
2025-01-17T11:31:46.6875814Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6875925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6875929Z 
2025-01-17T11:31:46.6876381Z args = (<function assert_allclose.<locals>.compare at 0x7f812bceaf20>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6876484Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6876726Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6876731Z 
2025-01-17T11:31:46.6876804Z     @wraps(func)
2025-01-17T11:31:46.6876889Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6876976Z         with self._recreate_cm():
2025-01-17T11:31:46.6877061Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6877144Z E           AssertionError: 
2025-01-17T11:31:46.6877243Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6877310Z E           
2025-01-17T11:31:46.6877406Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6877536Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6877666Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6877826Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6877916Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6878075Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6878157Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6878285Z 
2025-01-17T11:31:46.6878477Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6878801Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-17T11:31:46.6878806Z 
2025-01-17T11:31:46.6879061Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476570>
2025-01-17T11:31:46.6879363Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>
2025-01-17T11:31:46.6879677Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a81e80>
2025-01-17T11:31:46.6879950Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-17T11:31:46.6879955Z 
2025-01-17T11:31:46.6880040Z     def test_calculate_plotting_data(
2025-01-17T11:31:46.6880110Z         self,
2025-01-17T11:31:46.6880196Z         plotter_calculate_plotting_data,
2025-01-17T11:31:46.6880285Z         calculate_plotting_data_hdf,
2025-01-17T11:31:46.6880350Z         request,
2025-01-17T11:31:46.6880418Z     ):
2025-01-17T11:31:46.6880513Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6880686Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:31:46.6880768Z         group = "plot_data_hdf/"
2025-01-17T11:31:46.6880936Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:31:46.6881021Z             plot_object = getattr(
2025-01-17T11:31:46.6881142Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:31:46.6881208Z             )
2025-01-17T11:31:46.6881302Z             if attribute_type == "attributes_np":
2025-01-17T11:31:46.6881451Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:31:46.6881548Z                     plot_object = plot_object.cgs.value
2025-01-17T11:31:46.6881646Z >               np.testing.assert_allclose(
2025-01-17T11:31:46.6881763Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:31:46.6881840Z                 )
2025-01-17T11:31:46.6881846Z 
2025-01-17T11:31:46.6881981Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:31:46.6882088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6882093Z 
2025-01-17T11:31:46.6882691Z args = (<function assert_allclose.<locals>.compare at 0x7f812bce8fe0>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:31:46.6882833Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6883080Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6883091Z 
2025-01-17T11:31:46.6883161Z     @wraps(func)
2025-01-17T11:31:46.6883237Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6883326Z         with self._recreate_cm():
2025-01-17T11:31:46.6883406Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6883495Z E           AssertionError: 
2025-01-17T11:31:46.6883594Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6883664Z E           
2025-01-17T11:31:46.6883756Z E           Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.6883891Z E           Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.6884016Z E           Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.6884179Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6884258Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6884424Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.6884503Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6884647Z 
2025-01-17T11:31:46.6884848Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6885181Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-17T11:31:46.6885185Z 
2025-01-17T11:31:46.6885446Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475550>
2025-01-17T11:31:46.6885752Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a836b0>
2025-01-17T11:31:46.6885847Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6885929Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6886031Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6886161Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6886373Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6886611Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-17T11:31:46.6886621Z 
2025-01-17T11:31:46.6886710Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6886877Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6886950Z     ):
2025-01-17T11:31:46.6887041Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6887147Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6887315Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6887381Z     
2025-01-17T11:31:46.6887490Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6887580Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6887724Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6887827Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6887899Z             )
2025-01-17T11:31:46.6887963Z     
2025-01-17T11:31:46.6888066Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6888171Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6888262Z             if data.stackgroup:
2025-01-17T11:31:46.6888333Z                 assert (
2025-01-17T11:31:46.6888417Z                     data.stackgroup
2025-01-17T11:31:46.6888487Z                     == getattr(
2025-01-17T11:31:46.6888593Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6888684Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6888761Z                     ).decode()
2025-01-17T11:31:46.6888828Z                 )
2025-01-17T11:31:46.6888901Z             if data.name:
2025-01-17T11:31:46.6888976Z                 assert (
2025-01-17T11:31:46.6889053Z                     data.name
2025-01-17T11:31:46.6889128Z                     == getattr(
2025-01-17T11:31:46.6889226Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6889317Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6889394Z                     ).decode()
2025-01-17T11:31:46.6889465Z                 )
2025-01-17T11:31:46.6889559Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6889686Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6889754Z             )
2025-01-17T11:31:46.6889841Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6889954Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6890023Z             )
2025-01-17T11:31:46.6890027Z 
2025-01-17T11:31:46.6890166Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6890282Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6890287Z 
2025-01-17T11:31:46.6890745Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc49620>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6890946Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6891202Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6891281Z 
2025-01-17T11:31:46.6891358Z     @wraps(func)
2025-01-17T11:31:46.6891435Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6891518Z         with self._recreate_cm():
2025-01-17T11:31:46.6891598Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6891682Z E           AssertionError: 
2025-01-17T11:31:46.6891785Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6891850Z E           
2025-01-17T11:31:46.6891948Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6892082Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6892208Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6892371Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6892463Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6892739Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6892824Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6892829Z 
2025-01-17T11:31:46.6893029Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6893230Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-17T11:31:46.6893234Z 
2025-01-17T11:31:46.6893494Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476960>
2025-01-17T11:31:46.6893806Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170a09f40>
2025-01-17T11:31:46.6893898Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6893984Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6894085Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6894180Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6894381Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6894620Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-17T11:31:46.6894624Z 
2025-01-17T11:31:46.6894704Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6894868Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6894934Z     ):
2025-01-17T11:31:46.6895029Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6895129Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6895301Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6895365Z     
2025-01-17T11:31:46.6895470Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6895559Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6895704Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6895805Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6895878Z             )
2025-01-17T11:31:46.6895942Z     
2025-01-17T11:31:46.6896035Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6896139Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6896218Z             if data.stackgroup:
2025-01-17T11:31:46.6896291Z                 assert (
2025-01-17T11:31:46.6896368Z                     data.stackgroup
2025-01-17T11:31:46.6896443Z                     == getattr(
2025-01-17T11:31:46.6896544Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6896638Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6896709Z                     ).decode()
2025-01-17T11:31:46.6896779Z                 )
2025-01-17T11:31:46.6896851Z             if data.name:
2025-01-17T11:31:46.6897050Z                 assert (
2025-01-17T11:31:46.6897120Z                     data.name
2025-01-17T11:31:46.6897300Z                     == getattr(
2025-01-17T11:31:46.6897395Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6897478Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6897557Z                     ).decode()
2025-01-17T11:31:46.6897623Z                 )
2025-01-17T11:31:46.6897714Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6897832Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6897902Z             )
2025-01-17T11:31:46.6897985Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6898102Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6898168Z             )
2025-01-17T11:31:46.6898172Z 
2025-01-17T11:31:46.6898315Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6898421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6898431Z 
2025-01-17T11:31:46.6898893Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4b1a0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6898996Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6899249Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6899254Z 
2025-01-17T11:31:46.6899324Z     @wraps(func)
2025-01-17T11:31:46.6899404Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6899482Z         with self._recreate_cm():
2025-01-17T11:31:46.6899566Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6899643Z E           AssertionError: 
2025-01-17T11:31:46.6899745Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6899811Z E           
2025-01-17T11:31:46.6899912Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6900044Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6900176Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6900335Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6900421Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6900579Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6900657Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6900666Z 
2025-01-17T11:31:46.6900863Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6901061Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-17T11:31:46.6901071Z 
2025-01-17T11:31:46.6901332Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476db0>
2025-01-17T11:31:46.6901647Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8154fc43e0>
2025-01-17T11:31:46.6901740Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6901822Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6901922Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6902012Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6902211Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6902446Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-17T11:31:46.6902451Z 
2025-01-17T11:31:46.6902629Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6902790Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6902861Z     ):
2025-01-17T11:31:46.6902948Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6903177Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6903339Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6903525Z     
2025-01-17T11:31:46.6903626Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6903718Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6903854Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6903958Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6904023Z             )
2025-01-17T11:31:46.6904093Z     
2025-01-17T11:31:46.6904185Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6904290Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6904368Z             if data.stackgroup:
2025-01-17T11:31:46.6904435Z                 assert (
2025-01-17T11:31:46.6904517Z                     data.stackgroup
2025-01-17T11:31:46.6904585Z                     == getattr(
2025-01-17T11:31:46.6904695Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6904782Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6904864Z                     ).decode()
2025-01-17T11:31:46.6904929Z                 )
2025-01-17T11:31:46.6905005Z             if data.name:
2025-01-17T11:31:46.6905072Z                 assert (
2025-01-17T11:31:46.6905149Z                     data.name
2025-01-17T11:31:46.6905218Z                     == getattr(
2025-01-17T11:31:46.6905318Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6905401Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6905474Z                     ).decode()
2025-01-17T11:31:46.6905538Z                 )
2025-01-17T11:31:46.6905627Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6905743Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6905810Z             )
2025-01-17T11:31:46.6905906Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6906018Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6906094Z             )
2025-01-17T11:31:46.6906098Z 
2025-01-17T11:31:46.6906235Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6906343Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6906348Z 
2025-01-17T11:31:46.6906802Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc498a0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6906901Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6907149Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6907158Z 
2025-01-17T11:31:46.6907228Z     @wraps(func)
2025-01-17T11:31:46.6907304Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6907393Z         with self._recreate_cm():
2025-01-17T11:31:46.6907473Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6907562Z E           AssertionError: 
2025-01-17T11:31:46.6907665Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6907737Z E           
2025-01-17T11:31:46.6907826Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6907966Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6908087Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6908252Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6908332Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6908496Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6908573Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6908577Z 
2025-01-17T11:31:46.6908867Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6909060Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-17T11:31:46.6909139Z 
2025-01-17T11:31:46.6909404Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e476e70>
2025-01-17T11:31:46.6909707Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170a095b0>
2025-01-17T11:31:46.6909801Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6909882Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6909981Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6910070Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6910270Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6910503Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-17T11:31:46.6910515Z 
2025-01-17T11:31:46.6910598Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6910755Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6910834Z     ):
2025-01-17T11:31:46.6910927Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6911029Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6911197Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6911261Z     
2025-01-17T11:31:46.6911366Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6911454Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6911591Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6911689Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6911758Z             )
2025-01-17T11:31:46.6911821Z     
2025-01-17T11:31:46.6911917Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6912020Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6912102Z             if data.stackgroup:
2025-01-17T11:31:46.6912180Z                 assert (
2025-01-17T11:31:46.6912262Z                     data.stackgroup
2025-01-17T11:31:46.6912331Z                     == getattr(
2025-01-17T11:31:46.6912432Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6912521Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6912699Z                     ).decode()
2025-01-17T11:31:46.6912767Z                 )
2025-01-17T11:31:46.6912838Z             if data.name:
2025-01-17T11:31:46.6912912Z                 assert (
2025-01-17T11:31:46.6912981Z                     data.name
2025-01-17T11:31:46.6913056Z                     == getattr(
2025-01-17T11:31:46.6913151Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6913239Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6913316Z                     ).decode()
2025-01-17T11:31:46.6913387Z                 )
2025-01-17T11:31:46.6913469Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6913594Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6913662Z             )
2025-01-17T11:31:46.6913749Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6913859Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6913929Z             )
2025-01-17T11:31:46.6913933Z 
2025-01-17T11:31:46.6914069Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6914180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6914184Z 
2025-01-17T11:31:46.6914638Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4a5c0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:31:46.6914735Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6915105Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6915210Z 
2025-01-17T11:31:46.6915287Z     @wraps(func)
2025-01-17T11:31:46.6915363Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6915447Z         with self._recreate_cm():
2025-01-17T11:31:46.6915528Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6915605Z E           AssertionError: 
2025-01-17T11:31:46.6915708Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6915775Z E           
2025-01-17T11:31:46.6915869Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6916000Z E           Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.6916123Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6916283Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6916374Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6916533Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6916621Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6916626Z 
2025-01-17T11:31:46.6916817Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6917016Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-17T11:31:46.6917021Z 
2025-01-17T11:31:46.6917276Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e475310>
2025-01-17T11:31:46.6917588Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a8b9e0>
2025-01-17T11:31:46.6917676Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6917761Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6917856Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6917954Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6918154Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6918391Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-17T11:31:46.6918395Z 
2025-01-17T11:31:46.6918473Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6918638Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6918705Z     ):
2025-01-17T11:31:46.6918798Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6918896Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6919067Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6919129Z     
2025-01-17T11:31:46.6919235Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6919324Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6919466Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6919564Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6919636Z             )
2025-01-17T11:31:46.6919706Z     
2025-01-17T11:31:46.6919798Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6919902Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6919982Z             if data.stackgroup:
2025-01-17T11:31:46.6920056Z                 assert (
2025-01-17T11:31:46.6920131Z                     data.stackgroup
2025-01-17T11:31:46.6920207Z                     == getattr(
2025-01-17T11:31:46.6920303Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6920396Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6920466Z                     ).decode()
2025-01-17T11:31:46.6920535Z                 )
2025-01-17T11:31:46.6920607Z             if data.name:
2025-01-17T11:31:46.6920837Z                 assert (
2025-01-17T11:31:46.6920935Z                     data.name
2025-01-17T11:31:46.6921005Z                     == getattr(
2025-01-17T11:31:46.6921192Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6921276Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6921350Z                     ).decode()
2025-01-17T11:31:46.6921415Z                 )
2025-01-17T11:31:46.6921504Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6921620Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6921690Z             )
2025-01-17T11:31:46.6921773Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6921893Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6921957Z             )
2025-01-17T11:31:46.6921961Z 
2025-01-17T11:31:46.6922101Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6922207Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6922218Z 
2025-01-17T11:31:46.6922877Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4aca0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6922983Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6923235Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6923239Z 
2025-01-17T11:31:46.6923308Z     @wraps(func)
2025-01-17T11:31:46.6923390Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6923468Z         with self._recreate_cm():
2025-01-17T11:31:46.6923557Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6923635Z E           AssertionError: 
2025-01-17T11:31:46.6923741Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6923807Z E           
2025-01-17T11:31:46.6923905Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6924041Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6924173Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6924336Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6924415Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6924577Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6924655Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6924665Z 
2025-01-17T11:31:46.6924856Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6925049Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-17T11:31:46.6925058Z 
2025-01-17T11:31:46.6925315Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4748c0>
2025-01-17T11:31:46.6925624Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a88470>
2025-01-17T11:31:46.6925724Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6925807Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6925905Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6925995Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6926197Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6926426Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-17T11:31:46.6926432Z 
2025-01-17T11:31:46.6926515Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6926673Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6926744Z     ):
2025-01-17T11:31:46.6926831Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6926935Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6927226Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6927420Z     
2025-01-17T11:31:46.6927522Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6927614Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6927747Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6927853Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6927920Z             )
2025-01-17T11:31:46.6927989Z     
2025-01-17T11:31:46.6928084Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6928187Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6928267Z             if data.stackgroup:
2025-01-17T11:31:46.6928336Z                 assert (
2025-01-17T11:31:46.6928419Z                     data.stackgroup
2025-01-17T11:31:46.6928490Z                     == getattr(
2025-01-17T11:31:46.6928599Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6928687Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6928768Z                     ).decode()
2025-01-17T11:31:46.6928837Z                 )
2025-01-17T11:31:46.6928913Z             if data.name:
2025-01-17T11:31:46.6928981Z                 assert (
2025-01-17T11:31:46.6929057Z                     data.name
2025-01-17T11:31:46.6929126Z                     == getattr(
2025-01-17T11:31:46.6929225Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6929309Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6929383Z                     ).decode()
2025-01-17T11:31:46.6929450Z                 )
2025-01-17T11:31:46.6929534Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6929653Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6929717Z             )
2025-01-17T11:31:46.6929805Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6929927Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6930003Z             )
2025-01-17T11:31:46.6930008Z 
2025-01-17T11:31:46.6930144Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6930256Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6930261Z 
2025-01-17T11:31:46.6930713Z args = (<function assert_allclose.<locals>.compare at 0x7f812bceafc0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6930812Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6931064Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6931069Z 
2025-01-17T11:31:46.6931145Z     @wraps(func)
2025-01-17T11:31:46.6931221Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6931309Z         with self._recreate_cm():
2025-01-17T11:31:46.6931392Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6931476Z E           AssertionError: 
2025-01-17T11:31:46.6931579Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6931650Z E           
2025-01-17T11:31:46.6931743Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6931877Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6932002Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6932169Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6932250Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6932412Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6932490Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6932495Z 
2025-01-17T11:31:46.6932792Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6933176Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-17T11:31:46.6933300Z 
2025-01-17T11:31:46.6933566Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4771a0>
2025-01-17T11:31:46.6933872Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814ef44d40>
2025-01-17T11:31:46.6933967Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6934048Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6934146Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6934234Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6934435Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6934666Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-17T11:31:46.6934676Z 
2025-01-17T11:31:46.6934760Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6934919Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6934993Z     ):
2025-01-17T11:31:46.6935081Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6935180Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6935348Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6935412Z     
2025-01-17T11:31:46.6935517Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6935605Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6935743Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6935840Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6935912Z             )
2025-01-17T11:31:46.6935974Z     
2025-01-17T11:31:46.6936075Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6936178Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6936261Z             if data.stackgroup:
2025-01-17T11:31:46.6936334Z                 assert (
2025-01-17T11:31:46.6936416Z                     data.stackgroup
2025-01-17T11:31:46.6936486Z                     == getattr(
2025-01-17T11:31:46.6936587Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6936674Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6936745Z                     ).decode()
2025-01-17T11:31:46.6936816Z                 )
2025-01-17T11:31:46.6936888Z             if data.name:
2025-01-17T11:31:46.6936959Z                 assert (
2025-01-17T11:31:46.6937031Z                     data.name
2025-01-17T11:31:46.6937106Z                     == getattr(
2025-01-17T11:31:46.6937199Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6937289Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6937361Z                     ).decode()
2025-01-17T11:31:46.6937435Z                 )
2025-01-17T11:31:46.6937520Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6937645Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6937711Z             )
2025-01-17T11:31:46.6937798Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6937912Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6937980Z             )
2025-01-17T11:31:46.6937990Z 
2025-01-17T11:31:46.6938126Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6938230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6938241Z 
2025-01-17T11:31:46.6938694Z args = (<function assert_allclose.<locals>.compare at 0x7f81706599e0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6938793Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6939135Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6939211Z 
2025-01-17T11:31:46.6939287Z     @wraps(func)
2025-01-17T11:31:46.6939364Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6939451Z         with self._recreate_cm():
2025-01-17T11:31:46.6939534Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6939613Z E           AssertionError: 
2025-01-17T11:31:46.6939718Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6939783Z E           
2025-01-17T11:31:46.6939882Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6940012Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6940140Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6940298Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6940388Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6940547Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6940637Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6940641Z 
2025-01-17T11:31:46.6940832Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6941034Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-17T11:31:46.6941039Z 
2025-01-17T11:31:46.6941295Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477260>
2025-01-17T11:31:46.6941605Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f812bb81100>
2025-01-17T11:31:46.6941697Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6941782Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6941876Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6941974Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:31:46.6942171Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6942414Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-17T11:31:46.6942418Z 
2025-01-17T11:31:46.6942499Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6942758Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6942825Z     ):
2025-01-17T11:31:46.6942918Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6943017Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6943185Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6943249Z     
2025-01-17T11:31:46.6943355Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6943444Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6943582Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6943688Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6943758Z             )
2025-01-17T11:31:46.6943825Z     
2025-01-17T11:31:46.6943919Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6944020Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6944099Z             if data.stackgroup:
2025-01-17T11:31:46.6944173Z                 assert (
2025-01-17T11:31:46.6944249Z                     data.stackgroup
2025-01-17T11:31:46.6944323Z                     == getattr(
2025-01-17T11:31:46.6944421Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6944514Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6944586Z                     ).decode()
2025-01-17T11:31:46.6944656Z                 )
2025-01-17T11:31:46.6944727Z             if data.name:
2025-01-17T11:31:46.6944800Z                 assert (
2025-01-17T11:31:46.6944994Z                     data.name
2025-01-17T11:31:46.6945063Z                     == getattr(
2025-01-17T11:31:46.6945282Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6945365Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6945439Z                     ).decode()
2025-01-17T11:31:46.6945504Z                 )
2025-01-17T11:31:46.6945593Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6945711Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6945781Z             )
2025-01-17T11:31:46.6945862Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6945982Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6946048Z             )
2025-01-17T11:31:46.6946053Z 
2025-01-17T11:31:46.6946196Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6946300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6946312Z 
2025-01-17T11:31:46.6946769Z args = (<function assert_allclose.<locals>.compare at 0x7f8170658720>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:31:46.6946868Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6947122Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6947126Z 
2025-01-17T11:31:46.6947196Z     @wraps(func)
2025-01-17T11:31:46.6947277Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6947356Z         with self._recreate_cm():
2025-01-17T11:31:46.6947440Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6947517Z E           AssertionError: 
2025-01-17T11:31:46.6947619Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6947685Z E           
2025-01-17T11:31:46.6947777Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6947917Z E           Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.6948045Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6948206Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6948285Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6948447Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.6948525Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6948529Z 
2025-01-17T11:31:46.6948725Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6948918Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-17T11:31:46.6948923Z 
2025-01-17T11:31:46.6949184Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477320>
2025-01-17T11:31:46.6949493Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f812bb80830>
2025-01-17T11:31:46.6949593Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6949675Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6949782Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6949878Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6950089Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6950323Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-17T11:31:46.6950328Z 
2025-01-17T11:31:46.6950415Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6950574Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6950646Z     ):
2025-01-17T11:31:46.6950738Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6950843Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6951115Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6951261Z     
2025-01-17T11:31:46.6951364Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6951463Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6951598Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6951702Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6951768Z             )
2025-01-17T11:31:46.6951838Z     
2025-01-17T11:31:46.6951932Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6952032Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6952121Z             if data.stackgroup:
2025-01-17T11:31:46.6952190Z                 assert (
2025-01-17T11:31:46.6952273Z                     data.stackgroup
2025-01-17T11:31:46.6952343Z                     == getattr(
2025-01-17T11:31:46.6952446Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6952635Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6952721Z                     ).decode()
2025-01-17T11:31:46.6952786Z                 )
2025-01-17T11:31:46.6952862Z             if data.name:
2025-01-17T11:31:46.6952930Z                 assert (
2025-01-17T11:31:46.6953005Z                     data.name
2025-01-17T11:31:46.6953075Z                     == getattr(
2025-01-17T11:31:46.6953178Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6953264Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6953341Z                     ).decode()
2025-01-17T11:31:46.6953407Z                 )
2025-01-17T11:31:46.6953493Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6953619Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6953688Z             )
2025-01-17T11:31:46.6953779Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6953898Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6953968Z             )
2025-01-17T11:31:46.6953978Z 
2025-01-17T11:31:46.6954114Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6954225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6954229Z 
2025-01-17T11:31:46.6954684Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc425c0>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6954782Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6955032Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6955036Z 
2025-01-17T11:31:46.6955109Z     @wraps(func)
2025-01-17T11:31:46.6955188Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6955274Z         with self._recreate_cm():
2025-01-17T11:31:46.6955359Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6955442Z E           AssertionError: 
2025-01-17T11:31:46.6955547Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6955617Z E           
2025-01-17T11:31:46.6955709Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6955845Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6955965Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6956136Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6956215Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6956381Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6956461Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6956465Z 
2025-01-17T11:31:46.6956664Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6956981Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-17T11:31:46.6957083Z 
2025-01-17T11:31:46.6957353Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4773e0>
2025-01-17T11:31:46.6957655Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8170e28560>
2025-01-17T11:31:46.6957749Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6957831Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6957930Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6958022Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6958223Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6958456Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-17T11:31:46.6958460Z 
2025-01-17T11:31:46.6958552Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6958711Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6958781Z     ):
2025-01-17T11:31:46.6958878Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6958977Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6959152Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6959216Z     
2025-01-17T11:31:46.6959325Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6959413Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6959554Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6959654Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6959726Z             )
2025-01-17T11:31:46.6959792Z     
2025-01-17T11:31:46.6959893Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6959990Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6960084Z             if data.stackgroup:
2025-01-17T11:31:46.6960155Z                 assert (
2025-01-17T11:31:46.6960243Z                     data.stackgroup
2025-01-17T11:31:46.6960315Z                     == getattr(
2025-01-17T11:31:46.6960411Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6960507Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6960578Z                     ).decode()
2025-01-17T11:31:46.6960652Z                 )
2025-01-17T11:31:46.6960724Z             if data.name:
2025-01-17T11:31:46.6960802Z                 assert (
2025-01-17T11:31:46.6960875Z                     data.name
2025-01-17T11:31:46.6960954Z                     == getattr(
2025-01-17T11:31:46.6961049Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6961139Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6961210Z                     ).decode()
2025-01-17T11:31:46.6961288Z                 )
2025-01-17T11:31:46.6961374Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6961505Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6961570Z             )
2025-01-17T11:31:46.6961660Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6961776Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6961842Z             )
2025-01-17T11:31:46.6961852Z 
2025-01-17T11:31:46.6961990Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6962093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6962104Z 
2025-01-17T11:31:46.6962721Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc49580>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6962849Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6963238Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6963344Z 
2025-01-17T11:31:46.6963423Z     @wraps(func)
2025-01-17T11:31:46.6963499Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6963579Z         with self._recreate_cm():
2025-01-17T11:31:46.6963669Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6963746Z E           AssertionError: 
2025-01-17T11:31:46.6963852Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6963921Z E           
2025-01-17T11:31:46.6964017Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6964149Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6964280Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6964442Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6964529Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6964696Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6964784Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6964789Z 
2025-01-17T11:31:46.6964982Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6965181Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-17T11:31:46.6965185Z 
2025-01-17T11:31:46.6965441Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4774a0>
2025-01-17T11:31:46.6965750Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81761d0e90>
2025-01-17T11:31:46.6965839Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6965925Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6966020Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6966121Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6966319Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6966564Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-17T11:31:46.6966569Z 
2025-01-17T11:31:46.6966648Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6966812Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6966876Z     ):
2025-01-17T11:31:46.6966970Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6967069Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6967239Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6967302Z     
2025-01-17T11:31:46.6967404Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6967497Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6967632Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6967741Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6967812Z             )
2025-01-17T11:31:46.6967881Z     
2025-01-17T11:31:46.6967974Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6968080Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6968159Z             if data.stackgroup:
2025-01-17T11:31:46.6968234Z                 assert (
2025-01-17T11:31:46.6968313Z                     data.stackgroup
2025-01-17T11:31:46.6968389Z                     == getattr(
2025-01-17T11:31:46.6968488Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6968586Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6968658Z                     ).decode()
2025-01-17T11:31:46.6968730Z                 )
2025-01-17T11:31:46.6968802Z             if data.name:
2025-01-17T11:31:46.6968874Z                 assert (
2025-01-17T11:31:46.6969042Z                     data.name
2025-01-17T11:31:46.6969114Z                     == getattr(
2025-01-17T11:31:46.6969220Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6969382Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6969462Z                     ).decode()
2025-01-17T11:31:46.6969528Z                 )
2025-01-17T11:31:46.6969622Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6969740Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6969811Z             )
2025-01-17T11:31:46.6969899Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6970018Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6970087Z             )
2025-01-17T11:31:46.6970091Z 
2025-01-17T11:31:46.6970236Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6970344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6970354Z 
2025-01-17T11:31:46.6970811Z args = (<function assert_allclose.<locals>.compare at 0x7f817065a5c0>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6970910Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6971167Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6971171Z 
2025-01-17T11:31:46.6971244Z     @wraps(func)
2025-01-17T11:31:46.6971329Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6971409Z         with self._recreate_cm():
2025-01-17T11:31:46.6971498Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6971579Z E           AssertionError: 
2025-01-17T11:31:46.6971683Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6971751Z E           
2025-01-17T11:31:46.6971843Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6971989Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6972111Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6972284Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6972366Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6972631Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6972713Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6972718Z 
2025-01-17T11:31:46.6972921Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6973116Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-17T11:31:46.6973121Z 
2025-01-17T11:31:46.6973386Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477560>
2025-01-17T11:31:46.6973691Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171bc6e40>
2025-01-17T11:31:46.6973791Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6973879Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6973981Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6974074Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6974275Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6974510Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-17T11:31:46.6974514Z 
2025-01-17T11:31:46.6974601Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6974759Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6974829Z     ):
2025-01-17T11:31:46.6974917Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6975021Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6975323Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6975394Z     
2025-01-17T11:31:46.6975597Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6975695Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6975827Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6975929Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6975995Z             )
2025-01-17T11:31:46.6976066Z     
2025-01-17T11:31:46.6976159Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6976256Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6976343Z             if data.stackgroup:
2025-01-17T11:31:46.6976414Z                 assert (
2025-01-17T11:31:46.6976497Z                     data.stackgroup
2025-01-17T11:31:46.6976566Z                     == getattr(
2025-01-17T11:31:46.6976669Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6976762Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6976839Z                     ).decode()
2025-01-17T11:31:46.6976909Z                 )
2025-01-17T11:31:46.6976987Z             if data.name:
2025-01-17T11:31:46.6977056Z                 assert (
2025-01-17T11:31:46.6977134Z                     data.name
2025-01-17T11:31:46.6977206Z                     == getattr(
2025-01-17T11:31:46.6977309Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6977392Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6977466Z                     ).decode()
2025-01-17T11:31:46.6977538Z                 )
2025-01-17T11:31:46.6977621Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6977746Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6977813Z             )
2025-01-17T11:31:46.6977902Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6978020Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6978093Z             )
2025-01-17T11:31:46.6978097Z 
2025-01-17T11:31:46.6978240Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6978353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6978357Z 
2025-01-17T11:31:46.6978813Z args = (<function assert_allclose.<locals>.compare at 0x7f8170658a40>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:31:46.6978911Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6979159Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6979164Z 
2025-01-17T11:31:46.6979243Z     @wraps(func)
2025-01-17T11:31:46.6979322Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6979411Z         with self._recreate_cm():
2025-01-17T11:31:46.6979499Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6979584Z E           AssertionError: 
2025-01-17T11:31:46.6979686Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6979761Z E           
2025-01-17T11:31:46.6979851Z E           Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.6979990Z E           Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.6980111Z E           Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.6980280Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6980362Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6980529Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6980607Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6980611Z 
2025-01-17T11:31:46.6980813Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6981103Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-17T11:31:46.6981182Z 
2025-01-17T11:31:46.6981448Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477620>
2025-01-17T11:31:46.6981760Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81761d12e0>
2025-01-17T11:31:46.6981857Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6981939Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6982041Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6982131Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6982328Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6982662Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-17T11:31:46.6982668Z 
2025-01-17T11:31:46.6982761Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6982931Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6983002Z     ):
2025-01-17T11:31:46.6983100Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6983199Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6983368Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6983433Z     
2025-01-17T11:31:46.6983541Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6983631Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6983771Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6983870Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6983948Z             )
2025-01-17T11:31:46.6984010Z     
2025-01-17T11:31:46.6984105Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6984202Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6984295Z             if data.stackgroup:
2025-01-17T11:31:46.6984363Z                 assert (
2025-01-17T11:31:46.6984451Z                     data.stackgroup
2025-01-17T11:31:46.6984521Z                     == getattr(
2025-01-17T11:31:46.6984618Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6984716Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6984792Z                     ).decode()
2025-01-17T11:31:46.6984863Z                 )
2025-01-17T11:31:46.6984935Z             if data.name:
2025-01-17T11:31:46.6985011Z                 assert (
2025-01-17T11:31:46.6985081Z                     data.name
2025-01-17T11:31:46.6985160Z                     == getattr(
2025-01-17T11:31:46.6985253Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6985343Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6985413Z                     ).decode()
2025-01-17T11:31:46.6985487Z                 )
2025-01-17T11:31:46.6985576Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6985700Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6985769Z             )
2025-01-17T11:31:46.6985854Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6985974Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6986038Z             )
2025-01-17T11:31:46.6986042Z 
2025-01-17T11:31:46.6986184Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6986288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6986292Z 
2025-01-17T11:31:46.6986752Z args = (<function assert_allclose.<locals>.compare at 0x7f817065b880>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.6986847Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6987223Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6987330Z 
2025-01-17T11:31:46.6987408Z     @wraps(func)
2025-01-17T11:31:46.6987484Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6987565Z         with self._recreate_cm():
2025-01-17T11:31:46.6987651Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6987729Z E           AssertionError: 
2025-01-17T11:31:46.6987834Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6987903Z E           
2025-01-17T11:31:46.6988003Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6988134Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.6988265Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6988427Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6988514Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6988678Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.6988772Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.6988777Z 
2025-01-17T11:31:46.6988972Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.6989176Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-17T11:31:46.6989180Z 
2025-01-17T11:31:46.6989435Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4776e0>
2025-01-17T11:31:46.6989745Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f81719d3dd0>
2025-01-17T11:31:46.6989832Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.6989919Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.6990012Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.6990109Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.6990311Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.6990558Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-17T11:31:46.6990563Z 
2025-01-17T11:31:46.6990644Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.6990808Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.6990872Z     ):
2025-01-17T11:31:46.6990966Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.6991066Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.6991237Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.6991301Z     
2025-01-17T11:31:46.6991402Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.6991502Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.6991636Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.6991754Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.6991827Z             )
2025-01-17T11:31:46.6991902Z     
2025-01-17T11:31:46.6991997Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.6992105Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.6992185Z             if data.stackgroup:
2025-01-17T11:31:46.6995645Z                 assert (
2025-01-17T11:31:46.6995773Z                     data.stackgroup
2025-01-17T11:31:46.6995849Z                     == getattr(
2025-01-17T11:31:46.6995967Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6996065Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.6996144Z                     ).decode()
2025-01-17T11:31:46.6996210Z                 )
2025-01-17T11:31:46.6996288Z             if data.name:
2025-01-17T11:31:46.6996358Z                 assert (
2025-01-17T11:31:46.6996435Z                     data.name
2025-01-17T11:31:46.6996677Z                     == getattr(
2025-01-17T11:31:46.6996794Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.6997009Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.6997081Z                     ).decode()
2025-01-17T11:31:46.6997152Z                 )
2025-01-17T11:31:46.6997242Z             np.testing.assert_allclose(
2025-01-17T11:31:46.6997383Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.6997449Z             )
2025-01-17T11:31:46.6997540Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.6997655Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.6997725Z             )
2025-01-17T11:31:46.6997729Z 
2025-01-17T11:31:46.6997879Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.6997999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.6998010Z 
2025-01-17T11:31:46.6998481Z args = (<function assert_allclose.<locals>.compare at 0x7f812bceafc0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.6998592Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.6998847Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.6998852Z 
2025-01-17T11:31:46.6998929Z     @wraps(func)
2025-01-17T11:31:46.6999006Z     def inner(*args, **kwds):
2025-01-17T11:31:46.6999092Z         with self._recreate_cm():
2025-01-17T11:31:46.6999173Z >           return func(*args, **kwds)
2025-01-17T11:31:46.6999259Z E           AssertionError: 
2025-01-17T11:31:46.6999362Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.6999434Z E           
2025-01-17T11:31:46.6999528Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.6999674Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.6999800Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.6999975Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7000059Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7000226Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7000304Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7000309Z 
2025-01-17T11:31:46.7000520Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.7000722Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-17T11:31:46.7000727Z 
2025-01-17T11:31:46.7001000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e4777a0>
2025-01-17T11:31:46.7001309Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8171a55010>
2025-01-17T11:31:46.7001408Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.7001493Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.7001596Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.7001693Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.7001896Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.7002140Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-17T11:31:46.7002145Z 
2025-01-17T11:31:46.7002227Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.7002393Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.7002458Z     ):
2025-01-17T11:31:46.7002731Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.7002903Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.7003215Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.7003281Z     
2025-01-17T11:31:46.7003391Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.7003587Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.7003731Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.7003832Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.7003901Z             )
2025-01-17T11:31:46.7003964Z     
2025-01-17T11:31:46.7004061Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.7004160Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.7004244Z             if data.stackgroup:
2025-01-17T11:31:46.7004315Z                 assert (
2025-01-17T11:31:46.7004393Z                     data.stackgroup
2025-01-17T11:31:46.7004467Z                     == getattr(
2025-01-17T11:31:46.7004572Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7004672Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.7004744Z                     ).decode()
2025-01-17T11:31:46.7004824Z                 )
2025-01-17T11:31:46.7004897Z             if data.name:
2025-01-17T11:31:46.7004972Z                 assert (
2025-01-17T11:31:46.7005043Z                     data.name
2025-01-17T11:31:46.7005117Z                     == getattr(
2025-01-17T11:31:46.7005212Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7005304Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.7005372Z                     ).decode()
2025-01-17T11:31:46.7005443Z                 )
2025-01-17T11:31:46.7005530Z             np.testing.assert_allclose(
2025-01-17T11:31:46.7005660Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.7005727Z             )
2025-01-17T11:31:46.7005810Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.7005926Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.7005996Z             )
2025-01-17T11:31:46.7006000Z 
2025-01-17T11:31:46.7006150Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.7006259Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.7006263Z 
2025-01-17T11:31:46.7006728Z args = (<function assert_allclose.<locals>.compare at 0x7f812bc4b1a0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.7006823Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.7007079Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.7007084Z 
2025-01-17T11:31:46.7007158Z     @wraps(func)
2025-01-17T11:31:46.7007234Z     def inner(*args, **kwds):
2025-01-17T11:31:46.7007313Z         with self._recreate_cm():
2025-01-17T11:31:46.7007405Z >           return func(*args, **kwds)
2025-01-17T11:31:46.7007481Z E           AssertionError: 
2025-01-17T11:31:46.7007588Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7007660Z E           
2025-01-17T11:31:46.7007761Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7007894Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7008024Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7008184Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7008271Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7008430Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7008514Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7008518Z 
2025-01-17T11:31:46.7008714Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.7009025Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-17T11:31:46.7009103Z 
2025-01-17T11:31:46.7009364Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f817e477860>
2025-01-17T11:31:46.7009675Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f814be31550>
2025-01-17T11:31:46.7009764Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:31:46.7009848Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:31:46.7009943Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:31:46.7010040Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:31:46.7010234Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f817615c2c0>)
2025-01-17T11:31:46.7010477Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-17T11:31:46.7010481Z 
2025-01-17T11:31:46.7010560Z     def test_generate_plot_mpl(
2025-01-17T11:31:46.7010733Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:31:46.7010802Z     ):
2025-01-17T11:31:46.7010893Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:31:46.7010994Z         regression_data = RegressionData(request)
2025-01-17T11:31:46.7011166Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:31:46.7011230Z     
2025-01-17T11:31:46.7011332Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:31:46.7011424Z             np.testing.assert_array_equal(
2025-01-17T11:31:46.7011563Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:31:46.7011664Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:31:46.7011729Z             )
2025-01-17T11:31:46.7011797Z     
2025-01-17T11:31:46.7011888Z         for index, data in enumerate(fig.data):
2025-01-17T11:31:46.7011990Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:31:46.7012075Z             if data.stackgroup:
2025-01-17T11:31:46.7012149Z                 assert (
2025-01-17T11:31:46.7012232Z                     data.stackgroup
2025-01-17T11:31:46.7012303Z                     == getattr(
2025-01-17T11:31:46.7012404Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7012498Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:31:46.7012670Z                     ).decode()
2025-01-17T11:31:46.7012745Z                 )
2025-01-17T11:31:46.7012817Z             if data.name:
2025-01-17T11:31:46.7012884Z                 assert (
2025-01-17T11:31:46.7012959Z                     data.name
2025-01-17T11:31:46.7013029Z                     == getattr(
2025-01-17T11:31:46.7013129Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:31:46.7013214Z                         "_" + str(index) + "name",
2025-01-17T11:31:46.7013288Z                     ).decode()
2025-01-17T11:31:46.7013353Z                 )
2025-01-17T11:31:46.7013447Z             np.testing.assert_allclose(
2025-01-17T11:31:46.7013565Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:31:46.7013640Z             )
2025-01-17T11:31:46.7013723Z >           np.testing.assert_allclose(
2025-01-17T11:31:46.7013838Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:31:46.7013902Z             )
2025-01-17T11:31:46.7013906Z 
2025-01-17T11:31:46.7014046Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:31:46.7014148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:31:46.7014153Z 
2025-01-17T11:31:46.7014614Z args = (<function assert_allclose.<locals>.compare at 0x7f8170659a80>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:31:46.7014706Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:31:46.7014958Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:31:46.7015086Z 
2025-01-17T11:31:46.7015261Z     @wraps(func)
2025-01-17T11:31:46.7015343Z     def inner(*args, **kwds):
2025-01-17T11:31:46.7015422Z         with self._recreate_cm():
2025-01-17T11:31:46.7015505Z >           return func(*args, **kwds)
2025-01-17T11:31:46.7015581Z E           AssertionError: 
2025-01-17T11:31:46.7015682Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7015752Z E           
2025-01-17T11:31:46.7015845Z E           Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7015983Z E           Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7016107Z E           Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7016275Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7016356Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7016527Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7016609Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7016614Z 
2025-01-17T11:31:46.7016816Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:31:46.7016925Z =============================== warnings summary ===============================
2025-01-17T11:31:46.7017038Z tardis/io/configuration/config_validator.py:6
2025-01-17T11:31:46.7017140Z tardis/io/configuration/config_validator.py:6
2025-01-17T11:31:46.7017440Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-17T11:31:46.7017508Z   
2025-01-17T11:31:46.7018627Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-17T11:31:46.7018642Z 
2025-01-17T11:31:46.7018863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-17T11:31:46.7019214Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-17T11:31:46.7019280Z   
2025-01-17T11:31:46.7019427Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-17T11:31:46.7019573Z   given by the platformdirs library.  To remove this warning and
2025-01-17T11:31:46.7019734Z   see the appropriate new directories, set the environment variable
2025-01-17T11:31:46.7019869Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-17T11:31:46.7020019Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-17T11:31:46.7020024Z 
2025-01-17T11:31:46.7020113Z tardis/plasma/properties/__init__.py:17
2025-01-17T11:31:46.7020389Z   /home/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-17T11:31:46.7020457Z   
2025-01-17T11:31:46.7021039Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-17T11:31:46.7021046Z 
2025-01-17T11:31:46.7026316Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-17T11:31:46.7026627Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7026839Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-17T11:31:46.7026912Z   
2025-01-17T11:31:46.7026978Z   
2025-01-17T11:31:46.7027184Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:31:46.7027434Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-17T11:31:46.7027614Z 
2025-01-17T11:31:46.7027829Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-17T11:31:46.7028156Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-17T11:31:46.7028385Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-17T11:31:46.7028556Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-17T11:31:46.7028873Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-17T11:31:46.7028936Z   
2025-01-17T11:31:46.7029052Z   The current CMFGEN model parser is deprecated
2025-01-17T11:31:46.7029057Z 
2025-01-17T11:31:46.7029162Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-17T11:31:46.7029340Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-17T11:31:46.7029644Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-17T11:31:46.7029719Z   
2025-01-17T11:31:46.7029822Z   The current CMFGEN model parser is deprecated
2025-01-17T11:31:46.7029831Z 
2025-01-17T11:31:46.7030036Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-17T11:31:46.7030394Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-17T11:31:46.7030460Z   
2025-01-17T11:31:46.7030878Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-17T11:31:46.7030883Z 
2025-01-17T11:31:46.7030987Z tardis/model/tests/test_base.py: 6 warnings
2025-01-17T11:31:46.7031100Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-17T11:31:46.7031277Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-17T11:31:46.7031539Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-17T11:31:46.7031602Z   
2025-01-17T11:31:46.7031711Z   v_inner_boundary < 0, assuming default value
2025-01-17T11:31:46.7031716Z 
2025-01-17T11:31:46.7031808Z tardis/model/tests/test_base.py: 6 warnings
2025-01-17T11:31:46.7031927Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-17T11:31:46.7032103Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-17T11:31:46.7032364Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-17T11:31:46.7032426Z   
2025-01-17T11:31:46.7032725Z   v_outer_boundary < 0, assuming default value
2025-01-17T11:31:46.7032732Z 
2025-01-17T11:31:46.7033053Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7033365Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7033663Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7033964Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:31:46.7034492Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7035027Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7035539Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7035975Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7036330Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7036702Z   /home/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-17T11:31:46.7036874Z   
2025-01-17T11:31:46.7038248Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-17T11:31:46.7038255Z 
2025-01-17T11:31:46.7038692Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:31:46.7038982Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-17T11:31:46.7039060Z   
2025-01-17T11:31:46.7039322Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-17T11:31:46.7039759Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-17T11:31:46.7039823Z   
2025-01-17T11:31:46.7040337Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-17T11:31:46.7040342Z 
2025-01-17T11:31:46.7040545Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-17T11:31:46.7040748Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-17T11:31:46.7040936Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-17T11:31:46.7041176Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-17T11:31:46.7041244Z   
2025-01-17T11:31:46.7041429Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-17T11:31:46.7041434Z 
2025-01-17T11:31:46.7041658Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-17T11:31:46.7041888Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-17T11:31:46.7042114Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-17T11:31:46.7042349Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-17T11:31:46.7042891Z   /home/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-17T11:31:46.7042965Z   
2025-01-17T11:31:46.7043248Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-17T11:31:46.7043258Z 
2025-01-17T11:31:46.7043462Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-17T11:31:46.7043658Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-17T11:31:46.7043727Z   
2025-01-17T11:31:46.7044037Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-17T11:31:46.7044041Z 
2025-01-17T11:31:46.7044241Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-17T11:31:46.7044428Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-17T11:31:46.7044494Z   
2025-01-17T11:31:46.7044823Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-17T11:31:46.7044828Z 
2025-01-17T11:31:46.7045024Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-17T11:31:46.7045341Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-17T11:31:46.7045647Z   /home/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-17T11:31:46.7045709Z   
2025-01-17T11:31:46.7045987Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-17T11:31:46.7045992Z 
2025-01-17T11:31:46.7046154Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:31:46.7046443Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-17T11:31:46.7046503Z   
2025-01-17T11:31:46.7046604Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:31:46.7046608Z 
2025-01-17T11:31:46.7046766Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:31:46.7047050Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-17T11:31:46.7047118Z   
2025-01-17T11:31:46.7047215Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:31:46.7047219Z 
2025-01-17T11:31:46.7047380Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:31:46.7047657Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-17T11:31:46.7047719Z   
2025-01-17T11:31:46.7047811Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:31:46.7047820Z 
2025-01-17T11:31:46.7048136Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-17T11:31:46.7048404Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-17T11:31:46.7048473Z   
2025-01-17T11:31:46.7049298Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-17T11:31:46.7049317Z 
2025-01-17T11:31:46.7049660Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7049996Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7050326Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7050657Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7050986Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7051320Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7051661Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:31:46.7051732Z   
2025-01-17T11:31:46.7051918Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-17T11:31:46.7052091Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:31:46.7052316Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:31:46.7052321Z 
2025-01-17T11:31:46.7052776Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7053106Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7053443Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:31:46.7053505Z   
2025-01-17T11:31:46.7053674Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-17T11:31:46.7053960Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:31:46.7054308Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:31:46.7054313Z 
2025-01-17T11:31:46.7054641Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:31:46.7054971Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:31:46.7055034Z   
2025-01-17T11:31:46.7055205Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-17T11:31:46.7055362Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:31:46.7055584Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:31:46.7055588Z 
2025-01-17T11:31:46.7056005Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-17T11:31:46.7056327Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-17T11:31:46.7056391Z   
2025-01-17T11:31:46.7056662Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-17T11:31:46.7056668Z 
2025-01-17T11:31:46.7056916Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7057114Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-17T11:31:46.7057176Z   
2025-01-17T11:31:46.7057244Z   
2025-01-17T11:31:46.7057434Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:31:46.7057680Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-17T11:31:46.7057695Z 
2025-01-17T11:31:46.7057936Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7058136Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-17T11:31:46.7058198Z   
2025-01-17T11:31:46.7058259Z   
2025-01-17T11:31:46.7058452Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:31:46.7058616Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-17T11:31:46.7058621Z 
2025-01-17T11:31:46.7058864Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:31:46.7059094Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-17T11:31:46.7059162Z   
2025-01-17T11:31:46.7059336Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-17T11:31:46.7059340Z 
2025-01-17T11:31:46.7059529Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-17T11:31:46.7059538Z 
2025-01-17T11:31:46.7059693Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-17T11:31:46.7059821Z Coverage HTML written to dir coverage_html_report
2025-01-17T11:31:46.7059915Z Coverage XML written to file coverage.xml
2025-01-17T11:31:46.7059919Z 
2025-01-17T11:31:46.7060037Z =========================== short test summary info ============================
2025-01-17T11:31:46.7060432Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-17T11:31:46.7060441Z 
2025-01-17T11:31:46.7060566Z MultiIndex level [0] values are different (0.08897 %)
2025-01-17T11:31:46.7060676Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.7060742Z        ...
2025-01-17T11:31:46.7060829Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.7060942Z       dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.7061141Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:31:46.7061204Z        ...
2025-01-17T11:31:46.7061358Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:31:46.7061465Z       dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:31:46.7061568Z At positional index 54, first diff: 14 != 12
2025-01-17T11:31:46.7061837Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-17T11:31:46.7061928Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7061938Z 
2025-01-17T11:31:46.7062023Z Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.7062138Z Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.7062261Z Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.7062351Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062429Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062499Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7062696Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062767Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7062851Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7063333Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7063338Z 
2025-01-17T11:31:46.7063456Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7063554Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7063623Z        ...
2025-01-17T11:31:46.7063698Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7063816Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7063914Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7063980Z        ...
2025-01-17T11:31:46.7064055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7064177Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7064270Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7064774Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7064779Z 
2025-01-17T11:31:46.7064863Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7065232Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7065552Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7065886Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7066392Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7066401Z 
2025-01-17T11:31:46.7066487Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7066840Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7067415Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7067779Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7068247Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7068258Z 
2025-01-17T11:31:46.7068374Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7068483Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7068545Z        ...
2025-01-17T11:31:46.7068621Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7068743Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7068843Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7068911Z        ...
2025-01-17T11:31:46.7068984Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7069110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7069201Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7069709Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7069714Z 
2025-01-17T11:31:46.7069828Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7069928Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7069991Z        ...
2025-01-17T11:31:46.7070069Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7070178Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7070282Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7070346Z        ...
2025-01-17T11:31:46.7070423Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7070536Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7070636Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7071101Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7071106Z 
2025-01-17T11:31:46.7071224Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7071320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7071387Z        ...
2025-01-17T11:31:46.7071460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7071573Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7071673Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7071739Z        ...
2025-01-17T11:31:46.7071812Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7071919Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7072105Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7072694Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7072817Z 
2025-01-17T11:31:46.7072934Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7073031Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7073101Z        ...
2025-01-17T11:31:46.7073175Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7073287Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7073385Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7073457Z        ...
2025-01-17T11:31:46.7073530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7073646Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7073736Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7074238Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7074249Z 
2025-01-17T11:31:46.7074360Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7074460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7074524Z        ...
2025-01-17T11:31:46.7074600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7074710Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7074817Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7074879Z        ...
2025-01-17T11:31:46.7074956Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7075066Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7075162Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7075633Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7075646Z 
2025-01-17T11:31:46.7075763Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7075860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7075926Z        ...
2025-01-17T11:31:46.7076003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7076113Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7076214Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7076276Z        ...
2025-01-17T11:31:46.7076352Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7076459Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7076552Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7077001Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7077011Z 
2025-01-17T11:31:46.7077130Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7077224Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7077289Z        ...
2025-01-17T11:31:46.7077360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7077472Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7077573Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7077639Z        ...
2025-01-17T11:31:46.7077710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7077823Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7077912Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7078383Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7078526Z 
2025-01-17T11:31:46.7078618Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7079057Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7079380Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7079702Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7080184Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7080189Z 
2025-01-17T11:31:46.7080272Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7080629Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7080991Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7081364Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7081813Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7081825Z 
2025-01-17T11:31:46.7081937Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7082041Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7082103Z        ...
2025-01-17T11:31:46.7082179Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7082292Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7082393Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7082455Z        ...
2025-01-17T11:31:46.7082706Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7082876Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7082975Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7083471Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7083625Z 
2025-01-17T11:31:46.7083747Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7083958Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7084022Z        ...
2025-01-17T11:31:46.7084101Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7084212Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7084315Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7084378Z        ...
2025-01-17T11:31:46.7084456Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7084564Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7084658Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7085102Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7085107Z 
2025-01-17T11:31:46.7085234Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7085329Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7085401Z        ...
2025-01-17T11:31:46.7085474Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7085586Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7085686Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7085756Z        ...
2025-01-17T11:31:46.7085831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7085944Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7086035Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7086509Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7086521Z 
2025-01-17T11:31:46.7086635Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7086741Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7086805Z        ...
2025-01-17T11:31:46.7086881Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7086996Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7087098Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7087168Z        ...
2025-01-17T11:31:46.7087240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7087354Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7087442Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7087920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7087924Z 
2025-01-17T11:31:46.7088038Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7088137Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7088207Z        ...
2025-01-17T11:31:46.7088287Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7088405Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7088510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7088572Z        ...
2025-01-17T11:31:46.7088650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7088760Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7088853Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7089308Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7089313Z 
2025-01-17T11:31:46.7089434Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7089530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7089688Z        ...
2025-01-17T11:31:46.7089762Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7089895Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7090082Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7090159Z        ...
2025-01-17T11:31:46.7090241Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7090349Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7090442Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7090904Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7090916Z 
2025-01-17T11:31:46.7091033Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7091130Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7091196Z        ...
2025-01-17T11:31:46.7091269Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7091393Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7091496Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7091564Z        ...
2025-01-17T11:31:46.7091637Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7091750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7091840Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7092315Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7092320Z 
2025-01-17T11:31:46.7092403Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7092871Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7093215Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7093536Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7094022Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7094033Z 
2025-01-17T11:31:46.7094119Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7094471Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7094828Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7095362Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7095911Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7095915Z 
2025-01-17T11:31:46.7096028Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7096133Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7096196Z        ...
2025-01-17T11:31:46.7096275Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7096396Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7096500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7096569Z        ...
2025-01-17T11:31:46.7096648Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7096756Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7096845Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7097330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7097335Z 
2025-01-17T11:31:46.7097453Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7097547Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7097611Z        ...
2025-01-17T11:31:46.7097690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7097805Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7097914Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7097983Z        ...
2025-01-17T11:31:46.7098063Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7098171Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7098267Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7098712Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7098717Z 
2025-01-17T11:31:46.7098834Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7098930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7098996Z        ...
2025-01-17T11:31:46.7099071Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7099185Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7099286Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7099359Z        ...
2025-01-17T11:31:46.7099434Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7099555Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7099642Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7100121Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7100125Z 
2025-01-17T11:31:46.7100239Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7100339Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7100401Z        ...
2025-01-17T11:31:46.7100480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7100592Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7100689Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7100865Z        ...
2025-01-17T11:31:46.7100939Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7101132Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7101222Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7101697Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7101702Z 
2025-01-17T11:31:46.7101819Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7101927Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7101989Z        ...
2025-01-17T11:31:46.7102074Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7102188Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7102298Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7102361Z        ...
2025-01-17T11:31:46.7102449Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7102662Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7102767Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7103231Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7103235Z 
2025-01-17T11:31:46.7103358Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7103456Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7103521Z        ...
2025-01-17T11:31:46.7103594Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7103709Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7103808Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7103875Z        ...
2025-01-17T11:31:46.7103948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7104068Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7104164Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7104654Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7104663Z 
2025-01-17T11:31:46.7104778Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7104879Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7104943Z        ...
2025-01-17T11:31:46.7105015Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7105132Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7105230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7105299Z        ...
2025-01-17T11:31:46.7105373Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7105488Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7105583Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7106085Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7106098Z 
2025-01-17T11:31:46.7106183Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7106546Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7106864Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7107406Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7107904Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7107908Z 
2025-01-17T11:31:46.7107991Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7108353Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7108721Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7109088Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7109567Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7109572Z 
2025-01-17T11:31:46.7109686Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7109788Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7109850Z        ...
2025-01-17T11:31:46.7109929Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7110041Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7110147Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7110209Z        ...
2025-01-17T11:31:46.7110289Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7110401Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7110500Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7111010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7111015Z 
2025-01-17T11:31:46.7111135Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7111230Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7111299Z        ...
2025-01-17T11:31:46.7111371Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7111482Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7111585Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7111648Z        ...
2025-01-17T11:31:46.7111727Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7111838Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7112019Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7112494Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7112685Z 
2025-01-17T11:31:46.7112821Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7112923Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7112989Z        ...
2025-01-17T11:31:46.7113068Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7113195Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7113297Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7113368Z        ...
2025-01-17T11:31:46.7113445Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7113562Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7113658Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7114186Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7114195Z 
2025-01-17T11:31:46.7114313Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7114421Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7114485Z        ...
2025-01-17T11:31:46.7114572Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7114692Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7114800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7114863Z        ...
2025-01-17T11:31:46.7114943Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7115054Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7115146Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7115659Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7115674Z 
2025-01-17T11:31:46.7115795Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7115892Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7115954Z        ...
2025-01-17T11:31:46.7116033Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7116145Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7116249Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7116312Z        ...
2025-01-17T11:31:46.7116390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7116499Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7116596Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7117084Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7117093Z 
2025-01-17T11:31:46.7117221Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7117319Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7117389Z        ...
2025-01-17T11:31:46.7117463Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7117582Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7117681Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7117750Z        ...
2025-01-17T11:31:46.7117825Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7117939Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7118032Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7118595Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7118718Z 
2025-01-17T11:31:46.7118839Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7119050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7119112Z        ...
2025-01-17T11:31:46.7119190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7119302Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7119404Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7119472Z        ...
2025-01-17T11:31:46.7119545Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7119661Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7119751Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7120322Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7120332Z 
2025-01-17T11:31:46.7120418Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7120790Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7121145Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7121465Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7122043Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7122048Z 
2025-01-17T11:31:46.7122132Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7122496Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7123063Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7123437Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7123982Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7124206Z 
2025-01-17T11:31:46.7124327Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7124436Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7124499Z        ...
2025-01-17T11:31:46.7124578Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7124695Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7124800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7124863Z        ...
2025-01-17T11:31:46.7124943Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7125053Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7125153Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7125730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7125746Z 
2025-01-17T11:31:46.7125865Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7125962Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7126032Z        ...
2025-01-17T11:31:46.7126106Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7126225Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7126325Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7126394Z        ...
2025-01-17T11:31:46.7126468Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7126580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7126672Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7127211Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7127227Z 
2025-01-17T11:31:46.7127347Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7127447Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7127511Z        ...
2025-01-17T11:31:46.7127585Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7127701Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7127801Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7127872Z        ...
2025-01-17T11:31:46.7127946Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7128060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7128149Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7128730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7128740Z 
2025-01-17T11:31:46.7128856Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7128963Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7129028Z        ...
2025-01-17T11:31:46.7129108Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7129222Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7129327Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7129390Z        ...
2025-01-17T11:31:46.7129469Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7129579Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7129675Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7130242Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7130334Z 
2025-01-17T11:31:46.7130456Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7130629Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7130697Z        ...
2025-01-17T11:31:46.7130771Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7130886Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7130988Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7131055Z        ...
2025-01-17T11:31:46.7131128Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7131238Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7131336Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7131887Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7131903Z 
2025-01-17T11:31:46.7132016Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7132117Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7132184Z        ...
2025-01-17T11:31:46.7132256Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7132371Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7132468Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7132633Z        ...
2025-01-17T11:31:46.7132710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7132824Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7132914Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7133427Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7133432Z 
2025-01-17T11:31:46.7133554Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7133655Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7133724Z        ...
2025-01-17T11:31:46.7133803Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7133913Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7134022Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7134085Z        ...
2025-01-17T11:31:46.7134162Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7134271Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7134371Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7134890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7134896Z 
2025-01-17T11:31:46.7134984Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7135347Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7135675Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7135992Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7136753Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7136758Z 
2025-01-17T11:31:46.7136847Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7137200Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7137561Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7137934Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7138430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7138438Z 
2025-01-17T11:31:46.7138558Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7138654Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7138725Z        ...
2025-01-17T11:31:46.7138800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7138912Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7139015Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7139078Z        ...
2025-01-17T11:31:46.7139158Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7139267Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7139367Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7139895Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7139900Z 
2025-01-17T11:31:46.7140023Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7140119Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7140190Z        ...
2025-01-17T11:31:46.7140265Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7140385Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7140482Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7140552Z        ...
2025-01-17T11:31:46.7140625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7140740Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7140832Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7141330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7141335Z 
2025-01-17T11:31:46.7141449Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7141643Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7141707Z        ...
2025-01-17T11:31:46.7141887Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7141999Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7142104Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7142167Z        ...
2025-01-17T11:31:46.7142245Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7142355Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7142445Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7143068Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7143074Z 
2025-01-17T11:31:46.7143193Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7143290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7143361Z        ...
2025-01-17T11:31:46.7143438Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7143553Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7143657Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7143720Z        ...
2025-01-17T11:31:46.7143798Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7143907Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7144002Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7144529Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7144533Z 
2025-01-17T11:31:46.7144650Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7144746Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7144820Z        ...
2025-01-17T11:31:46.7144891Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7145012Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7145109Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7145178Z        ...
2025-01-17T11:31:46.7145250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7145367Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7145456Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7145969Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7145974Z 
2025-01-17T11:31:46.7146086Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7146188Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7146251Z        ...
2025-01-17T11:31:46.7146334Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7146444Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7146552Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7146616Z        ...
2025-01-17T11:31:46.7146691Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7146808Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7146898Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7147413Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7147418Z 
2025-01-17T11:31:46.7147530Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7147630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7147692Z        ...
2025-01-17T11:31:46.7147774Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7148027Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7148234Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7148297Z        ...
2025-01-17T11:31:46.7148374Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7148483Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7148578Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7149102Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7149107Z 
2025-01-17T11:31:46.7149203Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7149558Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7149891Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7150216Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7150736Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7150750Z 
2025-01-17T11:31:46.7150840Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7151193Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7151559Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7151927Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7152431Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7152437Z 
2025-01-17T11:31:46.7152652Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7152752Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7152819Z        ...
2025-01-17T11:31:46.7153014Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7153131Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7153335Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7153403Z        ...
2025-01-17T11:31:46.7153478Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7153588Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7153685Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7154222Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7154232Z 
2025-01-17T11:31:46.7154346Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7154447Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7154509Z        ...
2025-01-17T11:31:46.7154582Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7154702Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7154801Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7154873Z        ...
2025-01-17T11:31:46.7154946Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7155058Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7155146Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7155648Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7155654Z 
2025-01-17T11:31:46.7155767Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7155868Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7155932Z        ...
2025-01-17T11:31:46.7156009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7156124Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7156228Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7156295Z        ...
2025-01-17T11:31:46.7156372Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7156481Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7156576Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7157226Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7157235Z 
2025-01-17T11:31:46.7157418Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7157582Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7157656Z        ...
2025-01-17T11:31:46.7157730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7157845Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7157951Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7158015Z        ...
2025-01-17T11:31:46.7158099Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7158210Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7158306Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7158835Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7158844Z 
2025-01-17T11:31:46.7158957Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7159053Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7159123Z        ...
2025-01-17T11:31:46.7159196Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7159315Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7159516Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7159586Z        ...
2025-01-17T11:31:46.7159660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7159851Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7159944Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7160467Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7160472Z 
2025-01-17T11:31:46.7160585Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7160686Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7160749Z        ...
2025-01-17T11:31:46.7160826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7160935Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7161040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7161111Z        ...
2025-01-17T11:31:46.7161188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7161304Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7161401Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7161937Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7161942Z 
2025-01-17T11:31:46.7162060Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7162157Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7162225Z        ...
2025-01-17T11:31:46.7162297Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7162407Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7162511Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7162753Z        ...
2025-01-17T11:31:46.7162853Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7162966Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7163068Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7163622Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7163627Z 
2025-01-17T11:31:46.7163716Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7164075Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7164401Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7164730Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7165280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7165284Z 
2025-01-17T11:31:46.7165522Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7165878Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7166348Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7166716Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7167243Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7167248Z 
2025-01-17T11:31:46.7167370Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7167467Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7167536Z        ...
2025-01-17T11:31:46.7167610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7167726Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7167826Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7167899Z        ...
2025-01-17T11:31:46.7167972Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7168092Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7168183Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7168749Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7168754Z 
2025-01-17T11:31:46.7168868Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7168970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7169032Z        ...
2025-01-17T11:31:46.7169110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7169222Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7169326Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7169395Z        ...
2025-01-17T11:31:46.7169467Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7169583Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7169678Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7170206Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7170212Z 
2025-01-17T11:31:46.7170326Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7170428Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7170491Z        ...
2025-01-17T11:31:46.7170571Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7170681Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7170785Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7170849Z        ...
2025-01-17T11:31:46.7171016Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7171134Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7171305Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7171860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7171865Z 
2025-01-17T11:31:46.7171984Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7172082Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7172148Z        ...
2025-01-17T11:31:46.7172222Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7172338Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7172435Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7172507Z        ...
2025-01-17T11:31:46.7172680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7172804Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7172898Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7173456Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7173461Z 
2025-01-17T11:31:46.7173574Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7173677Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7173739Z        ...
2025-01-17T11:31:46.7173815Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7173928Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7174026Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7174095Z        ...
2025-01-17T11:31:46.7174168Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7174288Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7174376Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7174922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7174927Z 
2025-01-17T11:31:46.7175041Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7175144Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7175207Z        ...
2025-01-17T11:31:46.7175287Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7175396Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7175500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7175563Z        ...
2025-01-17T11:31:46.7175641Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7175750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7175850Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7176362Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7176367Z 
2025-01-17T11:31:46.7176485Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7176582Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7176650Z        ...
2025-01-17T11:31:46.7176723Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7176840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7176937Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7177005Z        ...
2025-01-17T11:31:46.7177079Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7177196Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7177405Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7177922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7178034Z 
2025-01-17T11:31:46.7178119Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7178480Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7178798Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7179128Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7179643Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7179654Z 
2025-01-17T11:31:46.7179736Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7180088Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7180460Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7180828Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7181322Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7181334Z 
2025-01-17T11:31:46.7181448Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7181545Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7181613Z        ...
2025-01-17T11:31:46.7181688Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7181806Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7181907Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7181976Z        ...
2025-01-17T11:31:46.7182054Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7182168Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7182350Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7182990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7183179Z 
2025-01-17T11:31:46.7183299Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7183401Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7183468Z        ...
2025-01-17T11:31:46.7183549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7183662Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7183766Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7183829Z        ...
2025-01-17T11:31:46.7183906Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7184017Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7184116Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7184607Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7184625Z 
2025-01-17T11:31:46.7184744Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7184840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7184906Z        ...
2025-01-17T11:31:46.7184980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7185093Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7185193Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7185257Z        ...
2025-01-17T11:31:46.7185333Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7185442Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7185540Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7186069Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7186078Z 
2025-01-17T11:31:46.7186198Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7186296Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7186364Z        ...
2025-01-17T11:31:46.7186437Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7186552Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7186650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7186719Z        ...
2025-01-17T11:31:46.7186793Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7186908Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7186995Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7187503Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7187515Z 
2025-01-17T11:31:46.7187629Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7187732Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7187794Z        ...
2025-01-17T11:31:46.7187872Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7187982Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7188088Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7188151Z        ...
2025-01-17T11:31:46.7188231Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7188340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7188435Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7188946Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7189158Z 
2025-01-17T11:31:46.7189281Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7189378Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7189448Z        ...
2025-01-17T11:31:46.7189520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7189631Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7189735Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7189798Z        ...
2025-01-17T11:31:46.7189875Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7189983Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7190079Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7190600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7190614Z 
2025-01-17T11:31:46.7190708Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7191064Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7191384Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7191712Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7192239Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7192243Z 
2025-01-17T11:31:46.7192334Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7192784Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7193153Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7193527Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7194023Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7194258Z 
2025-01-17T11:31:46.7194382Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7194481Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7194553Z        ...
2025-01-17T11:31:46.7194631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7194749Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7194849Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7194920Z        ...
2025-01-17T11:31:46.7194999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7195118Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7195211Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7195757Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7195774Z 
2025-01-17T11:31:46.7195890Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7195993Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7196057Z        ...
2025-01-17T11:31:46.7196138Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7196250Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7196354Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7196422Z        ...
2025-01-17T11:31:46.7196495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7196613Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7196703Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7197204Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7197214Z 
2025-01-17T11:31:46.7197330Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7197437Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7197499Z        ...
2025-01-17T11:31:46.7197576Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7197688Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7197791Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7197854Z        ...
2025-01-17T11:31:46.7197934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7198045Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7198139Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7198666Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7198679Z 
2025-01-17T11:31:46.7198796Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7198898Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7198965Z        ...
2025-01-17T11:31:46.7199039Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7199155Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7199254Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7199322Z        ...
2025-01-17T11:31:46.7199396Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7199513Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7199608Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7200144Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7200245Z 
2025-01-17T11:31:46.7200367Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7200478Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7200618Z        ...
2025-01-17T11:31:46.7200698Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7200820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7200923Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7200994Z        ...
2025-01-17T11:31:46.7201070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7201188Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7201280Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7201808Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7201813Z 
2025-01-17T11:31:46.7201935Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7202039Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7202108Z        ...
2025-01-17T11:31:46.7202191Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7202303Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7202407Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7202469Z        ...
2025-01-17T11:31:46.7202702Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7202850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7202952Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7203469Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7203474Z 
2025-01-17T11:31:46.7203591Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7203694Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7203762Z        ...
2025-01-17T11:31:46.7203843Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7203957Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7204056Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7204124Z        ...
2025-01-17T11:31:46.7204197Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7204306Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7204402Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7204931Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7204941Z 
2025-01-17T11:31:46.7205027Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7205387Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7205720Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7206044Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7206817Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7206826Z 
2025-01-17T11:31:46.7206910Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7207262Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7207629Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7208006Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7208507Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7208518Z 
2025-01-17T11:31:46.7208636Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7208732Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7208807Z        ...
2025-01-17T11:31:46.7208882Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7209004Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7209105Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7209173Z        ...
2025-01-17T11:31:46.7209247Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7209362Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7209451Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7209993Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7209999Z 
2025-01-17T11:31:46.7210115Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7210220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7210282Z        ...
2025-01-17T11:31:46.7210365Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7210474Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7210578Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7210642Z        ...
2025-01-17T11:31:46.7210721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7210830Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7210927Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7211429Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7211434Z 
2025-01-17T11:31:46.7211552Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7211739Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7211806Z        ...
2025-01-17T11:31:46.7211879Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7212067Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7212172Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7212236Z        ...
2025-01-17T11:31:46.7212316Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7212425Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7212520Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7213155Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7213161Z 
2025-01-17T11:31:46.7213279Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7213375Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7213450Z        ...
2025-01-17T11:31:46.7213523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7213646Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7213745Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7213814Z        ...
2025-01-17T11:31:46.7213886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7214000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7214089Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7214626Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7214631Z 
2025-01-17T11:31:46.7214744Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7214845Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7214915Z        ...
2025-01-17T11:31:46.7214992Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7215102Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7215208Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7215271Z        ...
2025-01-17T11:31:46.7215349Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7215458Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7215547Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7216065Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7216070Z 
2025-01-17T11:31:46.7216188Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7216285Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7216347Z        ...
2025-01-17T11:31:46.7216429Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7216539Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7216648Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7216710Z        ...
2025-01-17T11:31:46.7216794Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7216902Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7216996Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7217505Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7217509Z 
2025-01-17T11:31:46.7217627Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7217723Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7217790Z        ...
2025-01-17T11:31:46.7217864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7218098Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7218199Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7218368Z        ...
2025-01-17T11:31:46.7218441Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7218553Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7218641Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7219171Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7219176Z 
2025-01-17T11:31:46.7219262Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7219625Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7219951Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7220279Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7220809Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7220823Z 
2025-01-17T11:31:46.7220908Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7221295Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7221656Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7222027Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7222624Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7222630Z 
2025-01-17T11:31:46.7222746Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7222849Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7222911Z        ...
2025-01-17T11:31:46.7222991Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7223224Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7223425Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7223492Z        ...
2025-01-17T11:31:46.7223566Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7223680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7223770Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7224310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7224315Z 
2025-01-17T11:31:46.7224429Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7224531Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7224594Z        ...
2025-01-17T11:31:46.7224673Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7224786Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7224888Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7224955Z        ...
2025-01-17T11:31:46.7225032Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7225140Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7225237Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7225739Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7225744Z 
2025-01-17T11:31:46.7225860Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7225956Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7226023Z        ...
2025-01-17T11:31:46.7226096Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7226211Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7226315Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7226388Z        ...
2025-01-17T11:31:46.7226460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7226573Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7226660Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7227188Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7227197Z 
2025-01-17T11:31:46.7227311Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7227416Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7227481Z        ...
2025-01-17T11:31:46.7227556Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7227673Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7227778Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7231370Z        ...
2025-01-17T11:31:46.7231497Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7231640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7231747Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7232311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7232323Z 
2025-01-17T11:31:46.7232449Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7232703Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7232776Z        ...
2025-01-17T11:31:46.7232861Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7232984Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7233089Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7233327Z        ...
2025-01-17T11:31:46.7233408Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7233655Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7233752Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7234300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7234306Z 
2025-01-17T11:31:46.7234429Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7234538Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7234603Z        ...
2025-01-17T11:31:46.7234685Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7234800Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7234912Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7234982Z        ...
2025-01-17T11:31:46.7235062Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7235180Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7235279Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7235806Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7235811Z 
2025-01-17T11:31:46.7235935Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7236037Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7236106Z        ...
2025-01-17T11:31:46.7236183Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7236304Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7236404Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7236473Z        ...
2025-01-17T11:31:46.7236553Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7236665Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7236772Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7237318Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7237328Z 
2025-01-17T11:31:46.7237417Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7237779Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7238107Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7238438Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7238973Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7238978Z 
2025-01-17T11:31:46.7239162Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7239521Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7239969Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7240338Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7240851Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7240857Z 
2025-01-17T11:31:46.7240985Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7241087Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7241161Z        ...
2025-01-17T11:31:46.7241240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7241363Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7241463Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7241540Z        ...
2025-01-17T11:31:46.7241619Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7241744Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7241840Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7242390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7242395Z 
2025-01-17T11:31:46.7242511Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7242840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7242912Z        ...
2025-01-17T11:31:46.7242999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7243116Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7243223Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7243287Z        ...
2025-01-17T11:31:46.7243374Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7243486Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7243592Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7244105Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7244110Z 
2025-01-17T11:31:46.7244233Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7244335Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7244404Z        ...
2025-01-17T11:31:46.7244480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7244594Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7244698Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7244762Z        ...
2025-01-17T11:31:46.7244844Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7245149Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7245354Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7245897Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7245902Z 
2025-01-17T11:31:46.7246028Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7246126Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7246197Z        ...
2025-01-17T11:31:46.7246270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7246386Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7246486Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7246556Z        ...
2025-01-17T11:31:46.7246630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7246753Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7246844Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7247391Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7247396Z 
2025-01-17T11:31:46.7247509Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7247611Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7247676Z        ...
2025-01-17T11:31:46.7247754Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7247863Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7247970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7248036Z        ...
2025-01-17T11:31:46.7248111Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7248227Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7248323Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7248851Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7248856Z 
2025-01-17T11:31:46.7248968Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7249072Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7249137Z        ...
2025-01-17T11:31:46.7249216Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7249327Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7249430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7249495Z        ...
2025-01-17T11:31:46.7249575Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7249685Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7249789Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7250341Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7250352Z 
2025-01-17T11:31:46.7250472Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7250570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7250640Z        ...
2025-01-17T11:31:46.7250714Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7250829Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7250929Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7250998Z        ...
2025-01-17T11:31:46.7251072Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7251189Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7251379Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7251944Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7252024Z 
2025-01-17T11:31:46.7252111Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7252473Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7252895Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7253235Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7253798Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7253803Z 
2025-01-17T11:31:46.7253888Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7254246Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7254613Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7254980Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7255528Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7255534Z 
2025-01-17T11:31:46.7255650Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7255754Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7255817Z        ...
2025-01-17T11:31:46.7255899Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7256012Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7256112Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7256183Z        ...
2025-01-17T11:31:46.7256258Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7256532Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7256626Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7257309Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7257314Z 
2025-01-17T11:31:46.7257430Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7257532Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7257596Z        ...
2025-01-17T11:31:46.7257674Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7257785Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7257889Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7257952Z        ...
2025-01-17T11:31:46.7258030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7258148Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7258243Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7258787Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7258792Z 
2025-01-17T11:31:46.7258912Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7259010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7259079Z        ...
2025-01-17T11:31:46.7259151Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7259267Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7259366Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7259434Z        ...
2025-01-17T11:31:46.7259508Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7259627Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7259719Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7260401Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7260413Z 
2025-01-17T11:31:46.7260572Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.7260934Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7265540Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.7270298Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:31:46.7270494Z At positional index 183, first diff: 0.9714108054153513 != 0.9713105029025074
2025-01-17T11:31:46.7271105Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7271116Z 
2025-01-17T11:31:46.7271234Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7271336Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7271410Z        ...
2025-01-17T11:31:46.7271489Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7271613Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7271718Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7271788Z        ...
2025-01-17T11:31:46.7271864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7271985Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7272079Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7272758Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7272765Z 
2025-01-17T11:31:46.7272883Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7272990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7273173Z        ...
2025-01-17T11:31:46.7273255Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7273468Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7273574Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7273638Z        ...
2025-01-17T11:31:46.7273718Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7273829Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7273926Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7274490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7274495Z 
2025-01-17T11:31:46.7274619Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7274716Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7274790Z        ...
2025-01-17T11:31:46.7274864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7274984Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7275084Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7275149Z        ...
2025-01-17T11:31:46.7275229Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7275340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7275439Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7275984Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7275995Z 
2025-01-17T11:31:46.7276108Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7276205Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7276280Z        ...
2025-01-17T11:31:46.7276354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7276468Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7276572Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7276642Z        ...
2025-01-17T11:31:46.7276716Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7276829Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7276921Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7277455Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7277461Z 
2025-01-17T11:31:46.7277574Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7277675Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7277740Z        ...
2025-01-17T11:31:46.7277824Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7277934Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7278044Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7278109Z        ...
2025-01-17T11:31:46.7278188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7278298Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7278394Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7278933Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7278938Z 
2025-01-17T11:31:46.7279029Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7279386Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7279869Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7280187Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7280748Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7280757Z 
2025-01-17T11:31:46.7280849Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7281202Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7281566Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7281934Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7282457Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7282463Z 
2025-01-17T11:31:46.7282757Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7282877Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7282949Z        ...
2025-01-17T11:31:46.7283027Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7283148Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7283253Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7283317Z        ...
2025-01-17T11:31:46.7283399Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7283512Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7283609Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7284167Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7284172Z 
2025-01-17T11:31:46.7284294Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7284394Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7284615Z        ...
2025-01-17T11:31:46.7284689Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7284909Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7285009Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7285079Z        ...
2025-01-17T11:31:46.7285156Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7285272Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7285364Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7285896Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7285901Z 
2025-01-17T11:31:46.7286017Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7286121Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7286191Z        ...
2025-01-17T11:31:46.7286270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7286387Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7286493Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7286556Z        ...
2025-01-17T11:31:46.7286635Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7286748Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7286841Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7287504Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7287510Z 
2025-01-17T11:31:46.7287672Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.7288033Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7292977Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7298080Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7298275Z At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.7298866Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7298872Z 
2025-01-17T11:31:46.7298994Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7299096Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7299160Z        ...
2025-01-17T11:31:46.7299242Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7299359Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7299465Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7299529Z        ...
2025-01-17T11:31:46.7299612Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7299726Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7299830Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7300380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7300385Z 
2025-01-17T11:31:46.7300510Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7300608Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7300677Z        ...
2025-01-17T11:31:46.7300751Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7300868Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7300969Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7301038Z        ...
2025-01-17T11:31:46.7301204Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7301320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7301491Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7302045Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7302049Z 
2025-01-17T11:31:46.7302163Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7302268Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7302333Z        ...
2025-01-17T11:31:46.7302412Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7302524Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7302723Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7302791Z        ...
2025-01-17T11:31:46.7302866Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7302988Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7303085Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7303622Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7303627Z 
2025-01-17T11:31:46.7303742Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7303845Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7303908Z        ...
2025-01-17T11:31:46.7303988Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7304100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7304203Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7304266Z        ...
2025-01-17T11:31:46.7304344Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7304460Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7304558Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7305026Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7305031Z 
2025-01-17T11:31:46.7305150Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7305247Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7305314Z        ...
2025-01-17T11:31:46.7305388Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7305505Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7305605Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7305674Z        ...
2025-01-17T11:31:46.7305747Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7305863Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7305961Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7306446Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7306451Z 
2025-01-17T11:31:46.7306539Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7306902Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7307224Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7307777Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7308254Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7308259Z 
2025-01-17T11:31:46.7308343Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7308699Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7309065Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7309431Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7309891Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7309896Z 
2025-01-17T11:31:46.7310011Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7310113Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7310178Z        ...
2025-01-17T11:31:46.7310258Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7310372Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7310476Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7310541Z        ...
2025-01-17T11:31:46.7310619Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7310733Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7310828Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7311316Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7311322Z 
2025-01-17T11:31:46.7311442Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7311539Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7311607Z        ...
2025-01-17T11:31:46.7311682Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7311798Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7311897Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7311965Z        ...
2025-01-17T11:31:46.7312041Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7312151Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7312341Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7312883Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7313000Z 
2025-01-17T11:31:46.7313117Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7313215Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7313284Z        ...
2025-01-17T11:31:46.7313359Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7313475Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7313573Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7313642Z        ...
2025-01-17T11:31:46.7313714Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7313830Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7313926Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7314516Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7314526Z 
2025-01-17T11:31:46.7314682Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:31:46.7315039Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7319865Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7324950Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:31:46.7325364Z At positional index 183, first diff: 0.5790694725177075 != 0.5786227967083379
2025-01-17T11:31:46.7325887Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7325893Z 
2025-01-17T11:31:46.7326012Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7326130Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7326194Z        ...
2025-01-17T11:31:46.7326282Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7326400Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7326509Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7326573Z        ...
2025-01-17T11:31:46.7326653Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7326765Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7326860Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7327349Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7327354Z 
2025-01-17T11:31:46.7327476Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7327577Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7327649Z        ...
2025-01-17T11:31:46.7327727Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7327842Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7327946Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7328009Z        ...
2025-01-17T11:31:46.7328090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7328201Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7328301Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7328783Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7328788Z 
2025-01-17T11:31:46.7328912Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7329010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7329181Z        ...
2025-01-17T11:31:46.7329257Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7329371Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7329548Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7329617Z        ...
2025-01-17T11:31:46.7329694Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7329810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7329902Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7330373Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7330379Z 
2025-01-17T11:31:46.7330492Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7330591Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7330655Z        ...
2025-01-17T11:31:46.7330741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7330853Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7330961Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7331024Z        ...
2025-01-17T11:31:46.7331100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7331218Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7331310Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7331795Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7331800Z 
2025-01-17T11:31:46.7331917Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7332019Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7332082Z        ...
2025-01-17T11:31:46.7332164Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7332280Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7332384Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7332452Z        ...
2025-01-17T11:31:46.7332628Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7332743Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7332839Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7333328Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7333333Z 
2025-01-17T11:31:46.7333425Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7333783Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7334116Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7334438Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7334921Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7335159Z 
2025-01-17T11:31:46.7335252Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7335607Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7335974Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7336344Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7336819Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7336824Z 
2025-01-17T11:31:46.7336945Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7337045Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7337116Z        ...
2025-01-17T11:31:46.7337191Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7337314Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7337412Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7337483Z        ...
2025-01-17T11:31:46.7337562Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7337678Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7337769Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7338270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7338280Z 
2025-01-17T11:31:46.7338395Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7338497Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7338561Z        ...
2025-01-17T11:31:46.7338634Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7338751Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7338856Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7338929Z        ...
2025-01-17T11:31:46.7339003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7339117Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7339212Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7339681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7339687Z 
2025-01-17T11:31:46.7339800Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7339902Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7339967Z        ...
2025-01-17T11:31:46.7340045Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7340156Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7340348Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7340411Z        ...
2025-01-17T11:31:46.7340562Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7340671Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7340765Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7341261Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7341267Z 
2025-01-17T11:31:46.7341383Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7341479Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7341548Z        ...
2025-01-17T11:31:46.7341627Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7341746Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7341845Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7341919Z        ...
2025-01-17T11:31:46.7341993Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7342110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7342203Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7342791Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7342801Z 
2025-01-17T11:31:46.7342916Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7343013Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7343081Z        ...
2025-01-17T11:31:46.7343156Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7343272Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7343371Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7343445Z        ...
2025-01-17T11:31:46.7343519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7343632Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7343726Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7344207Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7344212Z 
2025-01-17T11:31:46.7344325Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7344429Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7344492Z        ...
2025-01-17T11:31:46.7344570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7344681Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7344786Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7344849Z        ...
2025-01-17T11:31:46.7344933Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7345043Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7345143Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7345611Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7345616Z 
2025-01-17T11:31:46.7345737Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7345834Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7345905Z        ...
2025-01-17T11:31:46.7345981Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7346099Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7346204Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7346267Z        ...
2025-01-17T11:31:46.7346347Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7346585Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7346684Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7347276Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7347281Z 
2025-01-17T11:31:46.7347370Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7347726Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7348048Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7348379Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7348863Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7348867Z 
2025-01-17T11:31:46.7348957Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7349309Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7349685Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7350055Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7350517Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7350522Z 
2025-01-17T11:31:46.7350643Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7350743Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7350812Z        ...
2025-01-17T11:31:46.7350888Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7351009Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7351110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7351179Z        ...
2025-01-17T11:31:46.7351254Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7351462Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7351556Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7352141Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7352147Z 
2025-01-17T11:31:46.7352264Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7352366Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7352430Z        ...
2025-01-17T11:31:46.7352512Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7352724Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7352831Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7352896Z        ...
2025-01-17T11:31:46.7352973Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7353088Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7353185Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7353645Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7353655Z 
2025-01-17T11:31:46.7353770Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7353870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7353933Z        ...
2025-01-17T11:31:46.7354013Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7354124Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7354226Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7354289Z        ...
2025-01-17T11:31:46.7354368Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7354479Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7354578Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7355067Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7355076Z 
2025-01-17T11:31:46.7355197Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7355292Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7355358Z        ...
2025-01-17T11:31:46.7355432Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7355548Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7355649Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7355717Z        ...
2025-01-17T11:31:46.7355792Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7355908Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7355998Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7356484Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7356497Z 
2025-01-17T11:31:46.7356610Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7356711Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7356776Z        ...
2025-01-17T11:31:46.7356851Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7356965Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7357065Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7357135Z        ...
2025-01-17T11:31:46.7357209Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7357325Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7357415Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7357888Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7358127Z 
2025-01-17T11:31:46.7358246Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7358350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7358416Z        ...
2025-01-17T11:31:46.7358493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7358605Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7358710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7358773Z        ...
2025-01-17T11:31:46.7358852Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7358962Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7359061Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7359560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7359569Z 
2025-01-17T11:31:46.7359691Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7359787Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7359854Z        ...
2025-01-17T11:31:46.7359927Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7360043Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7360142Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7360211Z        ...
2025-01-17T11:31:46.7360285Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7360395Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7360489Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7361003Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7361018Z 
2025-01-17T11:31:46.7361103Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7361466Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7361799Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7362124Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7362835Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7362842Z 
2025-01-17T11:31:46.7362937Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7363290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7363784Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7364256Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7364750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7364764Z 
2025-01-17T11:31:46.7364884Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7364982Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7365052Z        ...
2025-01-17T11:31:46.7365126Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7365243Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7365343Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7365410Z        ...
2025-01-17T11:31:46.7365486Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7365602Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7365692Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7366229Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7366239Z 
2025-01-17T11:31:46.7366362Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7366464Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7366527Z        ...
2025-01-17T11:31:46.7366605Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7366717Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7366819Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7366885Z        ...
2025-01-17T11:31:46.7366964Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7367075Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7367169Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7367658Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7367666Z 
2025-01-17T11:31:46.7367785Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7367888Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7367960Z        ...
2025-01-17T11:31:46.7368033Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7368142Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7368245Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7368309Z        ...
2025-01-17T11:31:46.7368387Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7368497Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7368589Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7369111Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7369204Z 
2025-01-17T11:31:46.7369323Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7369419Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7369560Z        ...
2025-01-17T11:31:46.7369635Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7369750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7369849Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7369922Z        ...
2025-01-17T11:31:46.7369996Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7370109Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7370198Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7370720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7370724Z 
2025-01-17T11:31:46.7370843Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7370943Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7371012Z        ...
2025-01-17T11:31:46.7371089Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7371200Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7371301Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7371363Z        ...
2025-01-17T11:31:46.7371438Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7371556Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7371649Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7372165Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7372170Z 
2025-01-17T11:31:46.7372286Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7372395Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7372459Z        ...
2025-01-17T11:31:46.7372647Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7372762Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7372866Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7372929Z        ...
2025-01-17T11:31:46.7373008Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7373119Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7373216Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7373780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7373785Z 
2025-01-17T11:31:46.7373904Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7374005Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7374076Z        ...
2025-01-17T11:31:46.7374151Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7374274Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7374376Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7374446Z        ...
2025-01-17T11:31:46.7374520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7374637Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7374727Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7375315Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7375319Z 
2025-01-17T11:31:46.7375405Z Series values are different (1.61943 %)
2025-01-17T11:31:46.7375770Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7376310Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7376636Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:31:46.7377223Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:31:46.7377233Z 
2025-01-17T11:31:46.7377316Z Series values are different (3.23887 %)
2025-01-17T11:31:46.7377675Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7378037Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7378415Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:31:46.7378972Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7378978Z 
2025-01-17T11:31:46.7379096Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7379202Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7379273Z        ...
2025-01-17T11:31:46.7379354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7379468Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7379569Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7379639Z        ...
2025-01-17T11:31:46.7379715Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7379831Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7379922Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7380517Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7380523Z 
2025-01-17T11:31:46.7380641Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7380845Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7381000Z        ...
2025-01-17T11:31:46.7381081Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7381192Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7381294Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7381357Z        ...
2025-01-17T11:31:46.7381436Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7381546Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7381642Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7382192Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7382197Z 
2025-01-17T11:31:46.7382315Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7382418Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7382488Z        ...
2025-01-17T11:31:46.7382665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7382784Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7382884Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7382952Z        ...
2025-01-17T11:31:46.7383026Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7383141Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7383232Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7383812Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7383823Z 
2025-01-17T11:31:46.7383936Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7384042Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7384105Z        ...
2025-01-17T11:31:46.7384184Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7384300Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7384399Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7384468Z        ...
2025-01-17T11:31:46.7384542Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7384659Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7384748Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7385340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7385345Z 
2025-01-17T11:31:46.7385461Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7385565Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7385633Z        ...
2025-01-17T11:31:46.7385712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7385828Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7385934Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7385998Z        ...
2025-01-17T11:31:46.7386078Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7386190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7386284Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7386847Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:31:46.7386853Z 
2025-01-17T11:31:46.7386973Z MultiIndex level [2] values are different (1.61943 %)
2025-01-17T11:31:46.7387070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7387413Z        ...
2025-01-17T11:31:46.7387490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7387708Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7387807Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:31:46.7387875Z        ...
2025-01-17T11:31:46.7387950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:31:46.7388060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:31:46.7388157Z At positional index 77, first diff: 6 != 7
2025-01-17T11:31:46.7388456Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-17T11:31:46.7388554Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7388558Z 
2025-01-17T11:31:46.7388646Z Mismatched elements: 160 / 584480 (0.0274%)
2025-01-17T11:31:46.7388752Z Max absolute difference among violations: 1.
2025-01-17T11:31:46.7388849Z Max relative difference among violations: 1.
2025-01-17T11:31:46.7388997Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389100Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389198Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.7389333Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389429Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:31:46.7389521Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:31:46.7389812Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-17T11:31:46.7389902Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7389906Z 
2025-01-17T11:31:46.7389995Z Mismatched elements: 777 / 29224 (2.66%)
2025-01-17T11:31:46.7390100Z Max absolute difference among violations: 3371
2025-01-17T11:31:46.7390214Z Max relative difference among violations: 415.5
2025-01-17T11:31:46.7390327Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.7390451Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:31:46.7390725Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-17T11:31:46.7390818Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7390822Z 
2025-01-17T11:31:46.7390905Z Mismatched elements: 1817 / 29224 (6.22%)
2025-01-17T11:31:46.7391010Z Max absolute difference among violations: 3443
2025-01-17T11:31:46.7391129Z Max relative difference among violations: 54.65079365
2025-01-17T11:31:46.7391245Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.7391358Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:31:46.7391612Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-17T11:31:46.7391710Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7391714Z 
2025-01-17T11:31:46.7391811Z Mismatched elements: 12559 / 584480 (2.15%)
2025-01-17T11:31:46.7391928Z Max absolute difference among violations: 0.54424673
2025-01-17T11:31:46.7392057Z Max relative difference among violations: 13.45439771
2025-01-17T11:31:46.7392146Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392224Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392296Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7392387Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392462Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:31:46.7392629Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:31:46.7392869Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-17T11:31:46.7392959Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7392963Z 
2025-01-17T11:31:46.7393175Z Mismatched elements: 13241 / 263016 (5.03%)
2025-01-17T11:31:46.7393302Z Max absolute difference among violations: 2.93004431e+13
2025-01-17T11:31:46.7393529Z Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.7393688Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.7393766Z         4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.7393894Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.7394054Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:31:46.7394126Z         4.043917e+10, 6.677200e-07],
2025-01-17T11:31:46.7394251Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:31:46.7394480Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-17T11:31:46.7394577Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7394581Z 
2025-01-17T11:31:46.7394674Z Mismatched elements: 2205 / 29224 (7.55%)
2025-01-17T11:31:46.7394794Z Max absolute difference among violations: 2.92703899
2025-01-17T11:31:46.7394918Z Max relative difference among violations: 16205.93322881
2025-01-17T11:31:46.7395075Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.7395148Z        1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.7395303Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:31:46.7395373Z        1.126883e+00, 4.414472e-04])
2025-01-17T11:31:46.7395631Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-17T11:31:46.7395720Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7395725Z 
2025-01-17T11:31:46.7395818Z Mismatched elements: 39240 / 584480 (6.71%)
2025-01-17T11:31:46.7395944Z Max absolute difference among violations: 604603.16180317
2025-01-17T11:31:46.7396065Z Max relative difference among violations: 4.15650719e+25
2025-01-17T11:31:46.7396231Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.7396302Z         0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.7396434Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.7396586Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:31:46.7396662Z         0.000000e+00, 0.000000e+00],
2025-01-17T11:31:46.7396782Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:31:46.7397267Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7397273Z 
2025-01-17T11:31:46.7397429Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7397503Z [index]: [0, 1]
2025-01-17T11:31:46.7397595Z [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-17T11:31:46.7397698Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-01-17T11:31:46.7397862Z At positional index 1, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.7398347Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7398351Z 
2025-01-17T11:31:46.7398501Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7398575Z [index]: [0, 1]
2025-01-17T11:31:46.7398663Z [left]:  [9967.488442185557, 10090.337237980311]
2025-01-17T11:31:46.7398755Z [right]: [9967.488442185557, 10090.925208074616]
2025-01-17T11:31:46.7398916Z At positional index 1, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.7399440Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7399531Z 
2025-01-17T11:31:46.7399682Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7399759Z [index]: [0, 1]
2025-01-17T11:31:46.7399938Z [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-17T11:31:46.7400032Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-01-17T11:31:46.7400187Z At positional index 1, first diff: 2880937482.0686474 != 2880986026.9779425
2025-01-17T11:31:46.7400670Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:31:46.7400675Z 
2025-01-17T11:31:46.7400821Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:31:46.7400899Z [index]: [0, 1]
2025-01-17T11:31:46.7400983Z [left]:  [9974.969233778693, 10755.649243810945]
2025-01-17T11:31:46.7401073Z [right]: [9974.969233778693, 10754.991494633894]
2025-01-17T11:31:46.7401227Z At positional index 1, first diff: 10755.649243810945 != 10754.991494633894
2025-01-17T11:31:46.7401598Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-17T11:31:46.7401607Z 
2025-01-17T11:31:46.7401692Z Series values are different (100.0 %)
2025-01-17T11:31:46.7401813Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7403247Z [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-17T11:31:46.7404431Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-17T11:31:46.7404627Z At positional index 0, first diff: 1.0165718020021351e+29 != 1.0190851489144414e+29
2025-01-17T11:31:46.7404976Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-17T11:31:46.7404981Z 
2025-01-17T11:31:46.7405072Z Series values are different (100.0 %)
2025-01-17T11:31:46.7405185Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7406133Z [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-17T11:31:46.7407079Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-17T11:31:46.7407243Z At positional index 0, first diff: 116384046125782.77 != 116548101693134.0
2025-01-17T11:31:46.7407588Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-17T11:31:46.7407592Z 
2025-01-17T11:31:46.7407681Z Series values are different (95.0 %)
2025-01-17T11:31:46.7407917Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7408899Z [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-17T11:31:46.7409994Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-17T11:31:46.7410158Z At positional index 0, first diff: 10090.337237980311 != 10090.925208074616
2025-01-17T11:31:46.7410524Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-17T11:31:46.7410534Z 
2025-01-17T11:31:46.7410619Z Series values are different (100.0 %)
2025-01-17T11:31:46.7410733Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:31:46.7411801Z [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-17T11:31:46.7412966Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-17T11:31:46.7413142Z At positional index 0, first diff: 0.4502464194566679 != 0.45013644671958974
2025-01-17T11:31:46.7413491Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-17T11:31:46.7413496Z 
2025-01-17T11:31:46.7413579Z Series values are different (94.14 %)
2025-01-17T11:31:46.7413940Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7419038Z [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-17T11:31:46.7424476Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-17T11:31:46.7424667Z At positional index 0, first diff: 1806608624563428.5 != 1806497964363691.5
2025-01-17T11:31:46.7425041Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-17T11:31:46.7425050Z 
2025-01-17T11:31:46.7425135Z Series values are different (6.1925 %)
2025-01-17T11:31:46.7425505Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:31:46.7431660Z [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.7438146Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:31:46.7438580Z At positional index 23, first diff: -2.49312723626409e-05 != -2.4320523596905817e-05
2025-01-17T11:31:46.7438934Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-17T11:31:46.7439033Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7439038Z 
2025-01-17T11:31:46.7439123Z Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.7439253Z Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.7439358Z Max relative difference among violations: 1.
2025-01-17T11:31:46.7439518Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7439596Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7439758Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7439829Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7440209Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-17T11:31:46.7440300Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7440304Z 
2025-01-17T11:31:46.7440391Z Mismatched elements: 462 / 10000 (4.62%)
2025-01-17T11:31:46.7440515Z Max absolute difference among violations: 6.26425326e+37
2025-01-17T11:31:46.7440637Z Max relative difference among violations: 1.00484475
2025-01-17T11:31:46.7440787Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7440867Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7441020Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7441099Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7441385Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-17T11:31:46.7441480Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7441485Z 
2025-01-17T11:31:46.7441568Z Mismatched elements: 535 / 10000 (5.35%)
2025-01-17T11:31:46.7441693Z Max absolute difference among violations: 8.24408733e+37
2025-01-17T11:31:46.7441791Z Max relative difference among violations: 1.
2025-01-17T11:31:46.7441954Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7442024Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7442174Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7442251Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7442684Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-17T11:31:46.7442824Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7442830Z 
2025-01-17T11:31:46.7442925Z Mismatched elements: 490644 / 584480 (83.9%)
2025-01-17T11:31:46.7443051Z Max absolute difference among violations: 2.30902188e-19
2025-01-17T11:31:46.7443165Z Max relative difference among violations: 8.02015845
2025-01-17T11:31:46.7443262Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443333Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443411Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7443504Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443579Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7443649Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7443903Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-17T11:31:46.7444118Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7444123Z 
2025-01-17T11:31:46.7444313Z Mismatched elements: 4766 / 10000 (47.7%)
2025-01-17T11:31:46.7444437Z Max absolute difference among violations: 8.7789614e+38
2025-01-17T11:31:46.7444558Z Max relative difference among violations: 6.15158527
2025-01-17T11:31:46.7444709Z  ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7444789Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7444942Z  DESIRED: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7445017Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7445294Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-17T11:31:46.7445387Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7445391Z 
2025-01-17T11:31:46.7445475Z Mismatched elements: 5913 / 10000 (59.1%)
2025-01-17T11:31:46.7445605Z Max absolute difference among violations: 3.37212146e+38
2025-01-17T11:31:46.7445723Z Max relative difference among violations: 18356.9353581
2025-01-17T11:31:46.7445877Z  ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7445953Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7446100Z  DESIRED: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7446175Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7446611Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-17T11:31:46.7446705Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7446709Z 
2025-01-17T11:31:46.7446798Z Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.7446923Z Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.7447036Z Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.7447136Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447207Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447287Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7447379Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447456Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7447526Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7447939Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-17T11:31:46.7448028Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7448032Z 
2025-01-17T11:31:46.7448120Z Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.7448240Z Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.7448356Z Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.7448505Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7448587Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7448737Z  DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7448817Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7449256Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-17T11:31:46.7449350Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7449354Z 
2025-01-17T11:31:46.7449437Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7449559Z Max absolute difference among violations: 5.54140241e+37
2025-01-17T11:31:46.7449678Z Max relative difference among violations: 156.87686073
2025-01-17T11:31:46.7449831Z  ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-17T11:31:46.7449901Z        2.268272e+31, 2.225999e+31])
2025-01-17T11:31:46.7450050Z  DESIRED: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-17T11:31:46.7450212Z        2.292907e+31, 2.257206e+31])
2025-01-17T11:31:46.7450637Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-17T11:31:46.7450809Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7450813Z 
2025-01-17T11:31:46.7450904Z Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.7451028Z Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.7451139Z Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.7451233Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451304Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451379Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7451469Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451544Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7451614Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7452035Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-17T11:31:46.7452129Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7452133Z 
2025-01-17T11:31:46.7452221Z Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.7452341Z Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.7452458Z Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.7452707Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7452784Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7452937Z  DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7453012Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7453446Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-17T11:31:46.7453545Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7453550Z 
2025-01-17T11:31:46.7453634Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7453762Z Max absolute difference among violations: 6.24012248e+37
2025-01-17T11:31:46.7453875Z Max relative difference among violations: 1.92154885
2025-01-17T11:31:46.7454027Z  ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-17T11:31:46.7454098Z        1.315549e+31, 1.281291e+31])
2025-01-17T11:31:46.7454257Z  DESIRED: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-17T11:31:46.7454329Z        1.375141e+31, 1.337928e+31])
2025-01-17T11:31:46.7454753Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-17T11:31:46.7454847Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7454851Z 
2025-01-17T11:31:46.7454947Z Mismatched elements: 447288 / 584480 (76.5%)
2025-01-17T11:31:46.7455072Z Max absolute difference among violations: 7.05494809e-19
2025-01-17T11:31:46.7455183Z Max relative difference among violations: 7.4746167
2025-01-17T11:31:46.7455283Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455356Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455435Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7455528Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455604Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7455677Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7456084Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-17T11:31:46.7456172Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7456176Z 
2025-01-17T11:31:46.7456266Z Mismatched elements: 4098 / 10000 (41%)
2025-01-17T11:31:46.7456386Z Max absolute difference among violations: 3.03375167e+39
2025-01-17T11:31:46.7456630Z Max relative difference among violations: 6.74677156
2025-01-17T11:31:46.7456781Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7456988Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7457140Z  DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7457220Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7457653Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-17T11:31:46.7457748Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7457752Z 
2025-01-17T11:31:46.7457835Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7457958Z Max absolute difference among violations: 5.47728087e+37
2025-01-17T11:31:46.7458069Z Max relative difference among violations: 2.00828984
2025-01-17T11:31:46.7458222Z  ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-17T11:31:46.7458297Z        1.146857e+31, 1.117191e+31])
2025-01-17T11:31:46.7458454Z  DESIRED: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-17T11:31:46.7458532Z        1.193005e+31, 1.164854e+31])
2025-01-17T11:31:46.7458963Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-17T11:31:46.7459055Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7459059Z 
2025-01-17T11:31:46.7459152Z Mismatched elements: 441600 / 584480 (75.6%)
2025-01-17T11:31:46.7459270Z Max absolute difference among violations: 7.30723189e-19
2025-01-17T11:31:46.7459388Z Max relative difference among violations: 7.27365967
2025-01-17T11:31:46.7459479Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459550Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459630Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7459726Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459803Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:31:46.7459878Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:31:46.7460287Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-17T11:31:46.7460376Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7460380Z 
2025-01-17T11:31:46.7460469Z Mismatched elements: 3732 / 10000 (37.3%)
2025-01-17T11:31:46.7460589Z Max absolute difference among violations: 2.28379969e+39
2025-01-17T11:31:46.7460706Z Max relative difference among violations: 5.00883601
2025-01-17T11:31:46.7460855Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7460931Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7461081Z  DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:31:46.7461156Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7461597Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-17T11:31:46.7461696Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7461700Z 
2025-01-17T11:31:46.7461785Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:31:46.7461917Z Max absolute difference among violations: 5.25781438e+37
2025-01-17T11:31:46.7462033Z Max relative difference among violations: 18.28099979
2025-01-17T11:31:46.7462186Z  ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-17T11:31:46.7462255Z        2.087889e+31, 2.059957e+31])
2025-01-17T11:31:46.7462409Z  DESIRED: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-17T11:31:46.7462480Z        2.124305e+31, 2.101081e+31])
2025-01-17T11:31:46.7462921Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-17T11:31:46.7463155Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-17T11:31:46.7463160Z 
2025-01-17T11:31:46.7463344Z Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.7463466Z Max absolute difference among violations: 6.13164664e+25
2025-01-17T11:31:46.7463587Z Max relative difference among violations: 0.00076015
2025-01-17T11:31:46.7463735Z  ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-17T11:31:46.7463850Z        6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-17T11:31:46.7463965Z        4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-17T11:31:46.7464110Z  DESIRED: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-17T11:31:46.7464221Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-17T11:31:46.7464331Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-17T11:31:46.7464711Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-17T11:31:46.7464818Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-17T11:31:46.7464833Z 
2025-01-17T11:31:46.7464914Z Mismatched elements: 20 / 20 (100%)
2025-01-17T11:31:46.7465035Z Max absolute difference among violations: 2.36529423e+25
2025-01-17T11:31:46.7465155Z Max relative difference among violations: 0.00039195
2025-01-17T11:31:46.7465298Z  ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-17T11:31:46.7465408Z        6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-17T11:31:46.7465517Z        4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-17T11:31:46.7465666Z  DESIRED: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-17T11:31:46.7465769Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-17T11:31:46.7465882Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-17T11:31:46.7466386Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-17T11:31:46.7466814Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-17T11:31:46.7466905Z Not equal to tolerance rtol=0.01, atol=0
2025-01-17T11:31:46.7466910Z 
2025-01-17T11:31:46.7467004Z Mismatched elements: 75 / 100000 (0.075%)
2025-01-17T11:31:46.7467128Z Max absolute difference among violations: 2.01554089e-05
2025-01-17T11:31:46.7467249Z Max relative difference among violations: 2.08104546
2025-01-17T11:31:46.7467418Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.7467504Z        -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.7467670Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:31:46.7467754Z        -9.757136e-06,  1.019764e-05])
2025-01-17T11:31:46.7468208Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-17T11:31:46.7468316Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7468320Z 
2025-01-17T11:31:46.7468400Z (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.7468556Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.7468662Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.7468778Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.7468921Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.7469029Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.7469137Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.7469586Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-17T11:31:46.7469770Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7469846Z 
2025-01-17T11:31:46.7469930Z (shapes (558,), (560,) mismatch)
2025-01-17T11:31:46.7470067Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.7470175Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.7470287Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.7470432Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.7470530Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.7470643Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.7471080Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-17T11:31:46.7471178Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7471182Z 
2025-01-17T11:31:46.7471255Z (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.7471397Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.7471497Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.7471609Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.7471750Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.7471849Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.7471960Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.7472408Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-17T11:31:46.7472503Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7472508Z 
2025-01-17T11:31:46.7472688Z (shapes (147,), (153,) mismatch)
2025-01-17T11:31:46.7472828Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.7472936Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.7473047Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.7473188Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.7473347Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.7473533Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.7474243Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-17T11:31:46.7474342Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7474347Z 
2025-01-17T11:31:46.7474430Z (shapes (503,), (515,) mismatch)
2025-01-17T11:31:46.7474570Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-17T11:31:46.7474686Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-17T11:31:46.7474802Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-17T11:31:46.7474951Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:31:46.7475052Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:31:46.7475166Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:31:46.7475605Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-17T11:31:46.7475702Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7475707Z 
2025-01-17T11:31:46.7475784Z (shapes (1435,), (1481,) mismatch)
2025-01-17T11:31:46.7475942Z  ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-17T11:31:46.7476013Z        11383.689745, 11102.237019])
2025-01-17T11:31:46.7476315Z  DESIRED: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-17T11:31:46.7476386Z        11398.237865, 11111.204868])
2025-01-17T11:31:46.7476943Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - AssertionError: 
2025-01-17T11:31:46.7477035Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7477039Z 
2025-01-17T11:31:46.7477122Z (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.7477251Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7477354Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7477457Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7477533Z        0.      , 1.      ])
2025-01-17T11:31:46.7477662Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7477760Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7477867Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7477975Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.7478422Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-17T11:31:46.7478518Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7478522Z 
2025-01-17T11:31:46.7478599Z (shapes (134,), (136,) mismatch)
2025-01-17T11:31:46.7478745Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-17T11:31:46.7478851Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-17T11:31:46.7478970Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-17T11:31:46.7479115Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:31:46.7479218Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:31:46.7479341Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:31:46.7479786Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-17T11:31:46.7479883Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7479887Z 
2025-01-17T11:31:46.7479963Z (shapes (367,), (381,) mismatch)
2025-01-17T11:31:46.7480105Z  ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-17T11:31:46.7480206Z        11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-17T11:31:46.7480319Z        15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-17T11:31:46.7480461Z  DESIRED: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-17T11:31:46.7480568Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-17T11:31:46.7480678Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-17T11:31:46.7481137Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - AssertionError: 
2025-01-17T11:31:46.7481234Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7481238Z 
2025-01-17T11:31:46.7481320Z (shapes (20,), (24,) mismatch)
2025-01-17T11:31:46.7481450Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7481546Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7481647Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7481725Z        0.      , 1.      ])
2025-01-17T11:31:46.7481852Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-17T11:31:46.7481946Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-17T11:31:46.7482047Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-17T11:31:46.7482234Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-17T11:31:46.7482915Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-17T11:31:46.7483019Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7483025Z 
2025-01-17T11:31:46.7483107Z Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.7483214Z Max absolute difference among violations: 5
2025-01-17T11:31:46.7483316Z Max relative difference among violations: inf
2025-01-17T11:31:46.7483473Z  ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.7483548Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.7483700Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.7483775Z          1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.7484191Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-17T11:31:46.7484287Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7484296Z 
2025-01-17T11:31:46.7484385Z Mismatched elements: 2 / 40 (5%)
2025-01-17T11:31:46.7484485Z Max absolute difference among violations: 15.
2025-01-17T11:31:46.7484587Z Max relative difference among violations: inf
2025-01-17T11:31:46.7484668Z  ACTUAL: array([[1.10e+04, 1.50e+01],
2025-01-17T11:31:46.7484747Z        [1.19e+04, 1.50e+01],
2025-01-17T11:31:46.7484821Z        [1.19e+04, 1.00e+00],...
2025-01-17T11:31:46.7484902Z  DESIRED: array([[1.10e+04, 0.00e+00],
2025-01-17T11:31:46.7484978Z        [1.19e+04, 0.00e+00],
2025-01-17T11:31:46.7485049Z        [1.19e+04, 4.00e+00],...
2025-01-17T11:31:46.7485458Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - AssertionError: 
2025-01-17T11:31:46.7485543Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7485551Z 
2025-01-17T11:31:46.7485637Z Mismatched elements: 12 / 40 (30%)
2025-01-17T11:31:46.7485735Z Max absolute difference among violations: 59.
2025-01-17T11:31:46.7485842Z Max relative difference among violations: 59.
2025-01-17T11:31:46.7485923Z  ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-17T11:31:46.7485998Z        [1.19e+04, 6.00e+01],
2025-01-17T11:31:46.7486068Z        [1.19e+04, 3.10e+01],...
2025-01-17T11:31:46.7486152Z  DESIRED: array([[1.10e+04, 1.00e+00],
2025-01-17T11:31:46.7486222Z        [1.19e+04, 1.00e+00],
2025-01-17T11:31:46.7486298Z        [1.19e+04, 0.00e+00],...
2025-01-17T11:31:46.7486701Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-17T11:31:46.7486792Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7486795Z 
2025-01-17T11:31:46.7486877Z Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.7486977Z Max absolute difference among violations: 5
2025-01-17T11:31:46.7487081Z Max relative difference among violations: inf
2025-01-17T11:31:46.7487230Z  ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:31:46.7487308Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:31:46.7487459Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-17T11:31:46.7487535Z          1,   0,   0,   5,   5,   0,   0])
2025-01-17T11:31:46.7487935Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-17T11:31:46.7488027Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7488031Z 
2025-01-17T11:31:46.7488116Z Mismatched elements: 2 / 20 (10%)
2025-01-17T11:31:46.7488216Z Max absolute difference among violations: 15
2025-01-17T11:31:46.7488315Z Max relative difference among violations: inf
2025-01-17T11:31:46.7488456Z  ACTUAL: array([15, 15,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,
2025-01-17T11:31:46.7488668Z         0,  0,  0])
2025-01-17T11:31:46.7488808Z  DESIRED: array([0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.7489309Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - AssertionError: 
2025-01-17T11:31:46.7489402Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:31:46.7489406Z 
2025-01-17T11:31:46.7489486Z Mismatched elements: 12 / 20 (60%)
2025-01-17T11:31:46.7489591Z Max absolute difference among violations: 59
2025-01-17T11:31:46.7489691Z Max relative difference among violations: 59.
2025-01-17T11:31:46.7489832Z  ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-17T11:31:46.7489899Z         1,  0,  0])
2025-01-17T11:31:46.7490036Z  DESIRED: array([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-17T11:31:46.7490495Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-17T11:31:46.7490599Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7490608Z 
2025-01-17T11:31:46.7490690Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7490826Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7490944Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7491106Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7491182Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7491344Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7491416Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7491879Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-17T11:31:46.7491970Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7491979Z 
2025-01-17T11:31:46.7492068Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7492198Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7492320Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7492471Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7492648Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7492804Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7492884Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7493339Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-17T11:31:46.7493438Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7493443Z 
2025-01-17T11:31:46.7493525Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7493658Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7493777Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7493934Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7494013Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7494164Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7494242Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7494693Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-17T11:31:46.7494801Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7494805Z 
2025-01-17T11:31:46.7494888Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7495018Z Max absolute difference among violations: 2.62596448e-05
2025-01-17T11:31:46.7495132Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7495409Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7495482Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7495741Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7495811Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7496274Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-17T11:31:46.7496363Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7496366Z 
2025-01-17T11:31:46.7496456Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7496576Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7496702Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7496851Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7496927Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7497083Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7497159Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7497615Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-17T11:31:46.7497711Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7497715Z 
2025-01-17T11:31:46.7497796Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7497920Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7498038Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7498188Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7498259Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7498414Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7498485Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7498950Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-17T11:31:46.7499047Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7499051Z 
2025-01-17T11:31:46.7499138Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7499261Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7499381Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7499529Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7499604Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7499752Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7499823Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7500283Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-17T11:31:46.7500380Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7500390Z 
2025-01-17T11:31:46.7500478Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7500599Z Max absolute difference among violations: 4.93193423e-05
2025-01-17T11:31:46.7500720Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7500868Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7500945Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7501093Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:31:46.7501169Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7501624Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-17T11:31:46.7501723Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7501727Z 
2025-01-17T11:31:46.7501897Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7502027Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7502216Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7502370Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7502442Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7502726Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7502799Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7503260Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-17T11:31:46.7503348Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7503351Z 
2025-01-17T11:31:46.7503439Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7503559Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7503687Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7503836Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7503918Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7504068Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7504145Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7504603Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-17T11:31:46.7504700Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7504704Z 
2025-01-17T11:31:46.7504787Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7504916Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7505029Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7505183Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7505258Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7505416Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7505490Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7505946Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-17T11:31:46.7506042Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7506045Z 
2025-01-17T11:31:46.7506134Z Mismatched elements: 577 / 1938 (29.8%)
2025-01-17T11:31:46.7506256Z Max absolute difference among violations: 3.14195386e+47
2025-01-17T11:31:46.7506375Z Max relative difference among violations: 2.02152313
2025-01-17T11:31:46.7506534Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7506607Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7506765Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7506840Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7511128Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-17T11:31:46.7511280Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7511285Z 
2025-01-17T11:31:46.7511383Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7511522Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7511656Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7511822Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7511898Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7512071Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7512143Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7512775Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-17T11:31:46.7513162Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7513172Z 
2025-01-17T11:31:46.7513260Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7513391Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7513515Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7513670Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7513747Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7513897Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7513970Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7514441Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-17T11:31:46.7514545Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7514550Z 
2025-01-17T11:31:46.7514633Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7514766Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7514883Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7515039Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7515110Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7515264Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7515333Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7515796Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-17T11:31:46.7515886Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7515891Z 
2025-01-17T11:31:46.7515980Z Mismatched elements: 669 / 1938 (34.5%)
2025-01-17T11:31:46.7516106Z Max absolute difference among violations: 5.90103554e+47
2025-01-17T11:31:46.7516226Z Max relative difference among violations: 263.63271395
2025-01-17T11:31:46.7516380Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7516458Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7516611Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:31:46.7516685Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7517103Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-17T11:31:46.7517198Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7517202Z 
2025-01-17T11:31:46.7517284Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7517411Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7517526Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7517687Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7517759Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7517911Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7517988Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7518399Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-17T11:31:46.7518497Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7518501Z 
2025-01-17T11:31:46.7518584Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7518718Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7518833Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7518984Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7519055Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7519298Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7519368Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7519856Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-17T11:31:46.7519946Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7519950Z 
2025-01-17T11:31:46.7520041Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7520162Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7520283Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7520427Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7520503Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7520652Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7520726Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7521172Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-17T11:31:46.7521275Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7521279Z 
2025-01-17T11:31:46.7521358Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7521484Z Max absolute difference among violations: 1.37340462e-13
2025-01-17T11:31:46.7521596Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7521748Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7521817Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7521971Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7522039Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7522457Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-17T11:31:46.7522723Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7522732Z 
2025-01-17T11:31:46.7522880Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7523019Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7523143Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7523292Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7523366Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7523515Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7523585Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7524003Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-17T11:31:46.7524090Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7524100Z 
2025-01-17T11:31:46.7524183Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7524311Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7524431Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7524583Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7524660Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7524809Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7524884Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7525294Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-17T11:31:46.7525388Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7525392Z 
2025-01-17T11:31:46.7525476Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7525598Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7525712Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7526016Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7526191Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7526345Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7526414Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7526829Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-17T11:31:46.7526919Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7526923Z 
2025-01-17T11:31:46.7527012Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7527129Z Max absolute difference among violations: 1.7404027e-13
2025-01-17T11:31:46.7527248Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7527394Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7527468Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7527622Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:31:46.7527705Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7528111Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-17T11:31:46.7528206Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7528210Z 
2025-01-17T11:31:46.7528292Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7528419Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7528533Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7528687Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7528756Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7528904Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7528979Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7529391Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-17T11:31:46.7529489Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7529494Z 
2025-01-17T11:31:46.7529575Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7529703Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7529816Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7529966Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7530037Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7530193Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7530261Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7530680Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-17T11:31:46.7530775Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7530779Z 
2025-01-17T11:31:46.7530868Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7530987Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7531104Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7531255Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7531331Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7531477Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7531552Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7531965Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-17T11:31:46.7532059Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7532063Z 
2025-01-17T11:31:46.7532143Z Mismatched elements: 427 / 1938 (22%)
2025-01-17T11:31:46.7532364Z Max absolute difference among violations: 1.64327201e+39
2025-01-17T11:31:46.7532474Z Max relative difference among violations: 1.01046082
2025-01-17T11:31:46.7532825Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7532896Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7533048Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7533120Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7533536Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-17T11:31:46.7533625Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7533629Z 
2025-01-17T11:31:46.7533714Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7533835Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7533953Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7534106Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7534188Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7534336Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7534406Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7534819Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-17T11:31:46.7534908Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7534918Z 
2025-01-17T11:31:46.7535000Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7535118Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7535236Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7535383Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7535459Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7535613Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7535693Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7536104Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-17T11:31:46.7536198Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7536202Z 
2025-01-17T11:31:46.7536282Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7536408Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7536523Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7536677Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7536748Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7536900Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7536970Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7537388Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-17T11:31:46.7537487Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:31:46.7537491Z 
2025-01-17T11:31:46.7537578Z Mismatched elements: 516 / 1938 (26.6%)
2025-01-17T11:31:46.7537698Z Max absolute difference among violations: 2.08238345e+39
2025-01-17T11:31:46.7537816Z Max relative difference among violations: 33.35052253
2025-01-17T11:31:46.7537967Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7538042Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7538188Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:31:46.7538265Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:31:46.7538528Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 222 warnings in 773.62s (0:12:53) =
2025-01-17T11:31:48.7255488Z ##[error]Process completed with exit code 1.
