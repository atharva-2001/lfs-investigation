2025-01-10T12:26:49.5156790Z Requested labels: ubuntu-latest
2025-01-10T12:26:49.5157229Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2934/merge
2025-01-10T12:26:49.5157385Z Waiting for a runner to pick up this job...
2025-01-10T12:26:49.7638413Z Job is waiting for a hosted runner to come online.
2025-01-10T12:26:52.9628348Z Job is about to start running on the hosted runner: GitHub Actions 31 (hosted)
2025-01-10T12:26:54.3973335Z Current runner version: '2.321.0'
2025-01-10T12:26:54.4001134Z ##[group]Operating System
2025-01-10T12:26:54.4002063Z Ubuntu
2025-01-10T12:26:54.4002545Z 24.04.1
2025-01-10T12:26:54.4003055Z LTS
2025-01-10T12:26:54.4003604Z ##[endgroup]
2025-01-10T12:26:54.4004092Z ##[group]Runner Image
2025-01-10T12:26:54.4004657Z Image: ubuntu-24.04
2025-01-10T12:26:54.4005217Z Version: 20250105.1.0
2025-01-10T12:26:54.4006396Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250105.1/images/ubuntu/Ubuntu2404-Readme.md
2025-01-10T12:26:54.4007905Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250105.1
2025-01-10T12:26:54.4008893Z ##[endgroup]
2025-01-10T12:26:54.4009396Z ##[group]Runner Image Provisioner
2025-01-10T12:26:54.4009992Z 2.0.404.1
2025-01-10T12:26:54.4010506Z ##[endgroup]
2025-01-10T12:26:54.4012669Z ##[group]GITHUB_TOKEN Permissions
2025-01-10T12:26:54.4014672Z Actions: read
2025-01-10T12:26:54.4015431Z Attestations: read
2025-01-10T12:26:54.4016292Z Checks: read
2025-01-10T12:26:54.4016793Z Contents: read
2025-01-10T12:26:54.4017305Z Deployments: read
2025-01-10T12:26:54.4017894Z Discussions: read
2025-01-10T12:26:54.4018362Z Issues: read
2025-01-10T12:26:54.4018841Z Metadata: read
2025-01-10T12:26:54.4019400Z Packages: read
2025-01-10T12:26:54.4019855Z Pages: read
2025-01-10T12:26:54.4020338Z PullRequests: read
2025-01-10T12:26:54.4020918Z RepositoryProjects: read
2025-01-10T12:26:54.4021429Z SecurityEvents: read
2025-01-10T12:26:54.4022027Z Statuses: read
2025-01-10T12:26:54.4022589Z ##[endgroup]
2025-01-10T12:26:54.4025592Z Secret source: None
2025-01-10T12:26:54.4026473Z Prepare workflow directory
2025-01-10T12:26:54.4669905Z Prepare all required actions
2025-01-10T12:26:54.4707433Z Getting action download info
2025-01-10T12:26:54.6586662Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-10T12:26:54.7583343Z Download action repository 'actions/upload-artifact@v4' (SHA:6f51ac03b9356f520e9adb1b1b7802705f340c2b)
2025-01-10T12:26:54.9157124Z Complete job name: not continuum ubuntu-latest 
2025-01-10T12:26:54.9901648Z ##[group]Run actions/checkout@v4
2025-01-10T12:26:54.9903019Z with:
2025-01-10T12:26:54.9903693Z   repository: tardis-sn/tardis
2025-01-10T12:26:54.9904749Z   token: ***
2025-01-10T12:26:54.9905368Z   ssh-strict: true
2025-01-10T12:26:54.9906262Z   ssh-user: git
2025-01-10T12:26:54.9906976Z   persist-credentials: true
2025-01-10T12:26:54.9907731Z   clean: true
2025-01-10T12:26:54.9908406Z   sparse-checkout-cone-mode: true
2025-01-10T12:26:54.9909248Z   fetch-depth: 1
2025-01-10T12:26:54.9909919Z   fetch-tags: false
2025-01-10T12:26:54.9910630Z   show-progress: true
2025-01-10T12:26:54.9911375Z   lfs: false
2025-01-10T12:26:54.9911999Z   submodules: false
2025-01-10T12:26:54.9912888Z   set-safe-directory: true
2025-01-10T12:26:54.9914140Z env:
2025-01-10T12:26:54.9914802Z   CACHE_NUMBER: 0
2025-01-10T12:26:54.9917162Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:26:54.9919550Z   CODECOV_TOKEN: 
2025-01-10T12:26:54.9920331Z ##[endgroup]
2025-01-10T12:26:55.1609558Z Syncing repository: tardis-sn/tardis
2025-01-10T12:26:55.1611389Z ##[group]Getting Git version info
2025-01-10T12:26:55.1612056Z Working directory is '/home/runner/work/tardis/tardis'
2025-01-10T12:26:55.1612976Z [command]/usr/bin/git version
2025-01-10T12:26:55.1663240Z git version 2.47.1
2025-01-10T12:26:55.1691274Z ##[endgroup]
2025-01-10T12:26:55.1705357Z Temporarily overriding HOME='/home/runner/work/_temp/a83f6d34-48ba-4020-93d4-e98c7ce39f88' before making global git config changes
2025-01-10T12:26:55.1707019Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T12:26:55.1710970Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-10T12:26:55.1746599Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-01-10T12:26:55.1750349Z ##[group]Initializing the repository
2025-01-10T12:26:55.1754358Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-01-10T12:26:55.1815812Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T12:26:55.1817234Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T12:26:55.1818239Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T12:26:55.1819136Z hint:
2025-01-10T12:26:55.1819976Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T12:26:55.1820697Z hint:
2025-01-10T12:26:55.1821317Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T12:26:55.1822229Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T12:26:55.1822940Z hint:
2025-01-10T12:26:55.1823324Z hint: 	git branch -m <name>
2025-01-10T12:26:55.1824025Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-01-10T12:26:55.1831590Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-10T12:26:55.1865764Z ##[endgroup]
2025-01-10T12:26:55.1866755Z ##[group]Disabling automatic garbage collection
2025-01-10T12:26:55.1870375Z [command]/usr/bin/git config --local gc.auto 0
2025-01-10T12:26:55.1899400Z ##[endgroup]
2025-01-10T12:26:55.1900079Z ##[group]Setting up auth
2025-01-10T12:26:55.1906709Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T12:26:55.1935968Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T12:26:55.2213965Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T12:26:55.2247366Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T12:26:55.2489773Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T12:26:55.2530018Z ##[endgroup]
2025-01-10T12:26:55.2530812Z ##[group]Fetching the repository
2025-01-10T12:26:55.2538772Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +1ea95a5f50a114b9d04c537fce901613f6867691:refs/remotes/pull/2934/merge
2025-01-10T12:26:56.3903561Z From https://github.com/tardis-sn/tardis
2025-01-10T12:26:56.3906637Z  * [new ref]         1ea95a5f50a114b9d04c537fce901613f6867691 -> pull/2934/merge
2025-01-10T12:26:56.3931088Z ##[endgroup]
2025-01-10T12:26:56.3931909Z ##[group]Determining the checkout info
2025-01-10T12:26:56.3933855Z ##[endgroup]
2025-01-10T12:26:56.3940148Z [command]/usr/bin/git sparse-checkout disable
2025-01-10T12:26:56.3984061Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T12:26:56.4014340Z ##[group]Checking out the ref
2025-01-10T12:26:56.4019045Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2934/merge
2025-01-10T12:26:56.6050422Z Note: switching to 'refs/remotes/pull/2934/merge'.
2025-01-10T12:26:56.6052563Z 
2025-01-10T12:26:56.6052953Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-10T12:26:56.6053808Z changes and commit them, and you can discard any commits you make in this
2025-01-10T12:26:56.6054633Z state without impacting any branches by switching back to a branch.
2025-01-10T12:26:56.6055138Z 
2025-01-10T12:26:56.6055522Z If you want to create a new branch to retain commits you create, you may
2025-01-10T12:26:56.6056488Z do so (now or later) by using -c with the switch command. Example:
2025-01-10T12:26:56.6056938Z 
2025-01-10T12:26:56.6057137Z   git switch -c <new-branch-name>
2025-01-10T12:26:56.6057444Z 
2025-01-10T12:26:56.6057638Z Or undo this operation with:
2025-01-10T12:26:56.6057932Z 
2025-01-10T12:26:56.6058526Z   git switch -
2025-01-10T12:26:56.6058796Z 
2025-01-10T12:26:56.6059194Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-10T12:26:56.6059700Z 
2025-01-10T12:26:56.6060361Z HEAD is now at 1ea95a5 Merge 06106d1accf7be7fe24a1150a4bc4c271bc1610f into 0fc2c76326b8122f88ddaf369f17a637bbe37c63
2025-01-10T12:26:56.6076355Z ##[endgroup]
2025-01-10T12:26:56.6119505Z [command]/usr/bin/git log -1 --format=%H
2025-01-10T12:26:56.6210482Z 1ea95a5f50a114b9d04c537fce901613f6867691
2025-01-10T12:26:56.6431930Z Prepare all required actions
2025-01-10T12:26:56.6432485Z Getting action download info
2025-01-10T12:26:56.7739918Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-10T12:26:56.9073199Z ##[group]Run ./.github/actions/setup_lfs
2025-01-10T12:26:56.9073541Z with:
2025-01-10T12:26:56.9073826Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-10T12:26:56.9074152Z env:
2025-01-10T12:26:56.9074393Z   CACHE_NUMBER: 0
2025-01-10T12:26:56.9075026Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:26:56.9075687Z   CODECOV_TOKEN: 
2025-01-10T12:26:56.9075907Z ##[endgroup]
2025-01-10T12:26:56.9209593Z ##[group]Run actions/checkout@v4
2025-01-10T12:26:56.9209912Z with:
2025-01-10T12:26:56.9210175Z   repository: tardis-sn/tardis-regression-data
2025-01-10T12:26:56.9210508Z   path: tardis-regression-data
2025-01-10T12:26:56.9211010Z   token: ***
2025-01-10T12:26:56.9211239Z   ssh-strict: true
2025-01-10T12:26:56.9211460Z   ssh-user: git
2025-01-10T12:26:56.9211701Z   persist-credentials: true
2025-01-10T12:26:56.9211990Z   clean: true
2025-01-10T12:26:56.9212229Z   sparse-checkout-cone-mode: true
2025-01-10T12:26:56.9212516Z   fetch-depth: 1
2025-01-10T12:26:56.9212746Z   fetch-tags: false
2025-01-10T12:26:56.9212971Z   show-progress: true
2025-01-10T12:26:56.9213206Z   lfs: false
2025-01-10T12:26:56.9213436Z   submodules: false
2025-01-10T12:26:56.9213668Z   set-safe-directory: true
2025-01-10T12:26:56.9213914Z env:
2025-01-10T12:26:56.9214120Z   CACHE_NUMBER: 0
2025-01-10T12:26:56.9214757Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:26:56.9215433Z   CODECOV_TOKEN: 
2025-01-10T12:26:56.9215655Z ##[endgroup]
2025-01-10T12:26:57.0204552Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-10T12:26:57.0212338Z ##[group]Getting Git version info
2025-01-10T12:26:57.0212883Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-01-10T12:26:57.0253926Z [command]/usr/bin/git version
2025-01-10T12:26:57.0302159Z git version 2.47.1
2025-01-10T12:26:57.0328590Z ##[endgroup]
2025-01-10T12:26:57.0343880Z Temporarily overriding HOME='/home/runner/work/_temp/520ef7b8-c902-4194-b176-4bb81af5b62f' before making global git config changes
2025-01-10T12:26:57.0345356Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T12:26:57.0350846Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T12:26:57.0385846Z ##[group]Initializing the repository
2025-01-10T12:26:57.0391621Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T12:26:57.0429892Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T12:26:57.0431118Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T12:26:57.0432138Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T12:26:57.0432613Z hint:
2025-01-10T12:26:57.0432944Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T12:26:57.0433315Z hint:
2025-01-10T12:26:57.0433695Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T12:26:57.0434288Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T12:26:57.0435002Z hint:
2025-01-10T12:26:57.0435266Z hint: 	git branch -m <name>
2025-01-10T12:26:57.0435835Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-10T12:26:57.0442116Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-10T12:26:57.0472572Z ##[endgroup]
2025-01-10T12:26:57.0473068Z ##[group]Disabling automatic garbage collection
2025-01-10T12:26:57.0478088Z [command]/usr/bin/git config --local gc.auto 0
2025-01-10T12:26:57.0508348Z ##[endgroup]
2025-01-10T12:26:57.0509024Z ##[group]Setting up auth
2025-01-10T12:26:57.0517814Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T12:26:57.0551027Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T12:26:57.0790801Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T12:26:57.0822960Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T12:26:57.1061826Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T12:26:57.1102500Z ##[endgroup]
2025-01-10T12:26:57.1103512Z ##[group]Determining the default branch
2025-01-10T12:26:57.1106839Z Retrieving the default branch name
2025-01-10T12:26:57.3175963Z Default branch 'main'
2025-01-10T12:26:57.3177035Z ##[endgroup]
2025-01-10T12:26:57.3177571Z ##[group]Fetching the repository
2025-01-10T12:26:57.3178573Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-10T12:26:57.5954133Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-10T12:26:57.5954906Z  * [new branch]      main       -> origin/main
2025-01-10T12:26:57.5979411Z ##[endgroup]
2025-01-10T12:26:57.5980074Z ##[group]Determining the checkout info
2025-01-10T12:26:57.5981969Z ##[endgroup]
2025-01-10T12:26:57.5987714Z [command]/usr/bin/git sparse-checkout disable
2025-01-10T12:26:57.6026735Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T12:26:57.6054160Z ##[group]Checking out the ref
2025-01-10T12:26:57.6058775Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-10T12:27:00.3924831Z Updating files:   3% (8/238)
2025-01-10T12:27:00.3929918Z Updating files:   4% (10/238)
2025-01-10T12:27:00.4003052Z Updating files:   5% (12/238)
2025-01-10T12:27:00.4006829Z Updating files:   6% (15/238)
2025-01-10T12:27:00.4014388Z Updating files:   7% (17/238)
2025-01-10T12:27:00.4019573Z Updating files:   8% (20/238)
2025-01-10T12:27:00.4023328Z Updating files:   9% (22/238)
2025-01-10T12:27:00.4029338Z Updating files:  10% (24/238)
2025-01-10T12:27:00.4033294Z Updating files:  11% (27/238)
2025-01-10T12:27:00.4037160Z Updating files:  12% (29/238)
2025-01-10T12:27:00.4044584Z Updating files:  13% (31/238)
2025-01-10T12:27:00.4051269Z Updating files:  14% (34/238)
2025-01-10T12:27:00.4060392Z Updating files:  15% (36/238)
2025-01-10T12:27:00.4063798Z Updating files:  16% (39/238)
2025-01-10T12:27:00.4067145Z Updating files:  17% (41/238)
2025-01-10T12:27:00.4073096Z Updating files:  18% (43/238)
2025-01-10T12:27:00.4078009Z Updating files:  19% (46/238)
2025-01-10T12:27:00.4083081Z Updating files:  20% (48/238)
2025-01-10T12:27:00.4089534Z Updating files:  21% (50/238)
2025-01-10T12:27:00.4093902Z Updating files:  22% (53/238)
2025-01-10T12:27:00.4104777Z Updating files:  23% (55/238)
2025-01-10T12:27:00.4108875Z Updating files:  24% (58/238)
2025-01-10T12:27:00.4112218Z Updating files:  25% (60/238)
2025-01-10T12:27:00.4118933Z Updating files:  26% (62/238)
2025-01-10T12:27:00.4123408Z Updating files:  27% (65/238)
2025-01-10T12:27:00.4130283Z Updating files:  28% (67/238)
2025-01-10T12:27:00.4134646Z Updating files:  29% (70/238)
2025-01-10T12:27:00.4139242Z Updating files:  30% (72/238)
2025-01-10T12:27:00.4146914Z Updating files:  31% (74/238)
2025-01-10T12:27:00.4152653Z Updating files:  32% (77/238)
2025-01-10T12:27:00.4157802Z Updating files:  33% (79/238)
2025-01-10T12:27:00.4165126Z Updating files:  34% (81/238)
2025-01-10T12:27:00.4171091Z Updating files:  35% (84/238)
2025-01-10T12:27:00.4178596Z Updating files:  36% (86/238)
2025-01-10T12:27:00.4184110Z Updating files:  37% (89/238)
2025-01-10T12:27:00.4188247Z Updating files:  38% (91/238)
2025-01-10T12:27:00.4198924Z Updating files:  39% (93/238)
2025-01-10T12:27:00.4203084Z Updating files:  40% (96/238)
2025-01-10T12:27:00.4207821Z Updating files:  41% (98/238)
2025-01-10T12:27:00.4218473Z Updating files:  42% (100/238)
2025-01-10T12:27:00.4222712Z Updating files:  43% (103/238)
2025-01-10T12:27:00.4228626Z Updating files:  44% (105/238)
2025-01-10T12:27:00.4233703Z Updating files:  45% (108/238)
2025-01-10T12:27:00.4238218Z Updating files:  46% (110/238)
2025-01-10T12:27:00.4245170Z Updating files:  47% (112/238)
2025-01-10T12:27:00.4251442Z Updating files:  48% (115/238)
2025-01-10T12:27:00.4257340Z Updating files:  49% (117/238)
2025-01-10T12:27:00.4264313Z Updating files:  50% (119/238)
2025-01-10T12:27:00.4269775Z Updating files:  51% (122/238)
2025-01-10T12:27:00.4277405Z Updating files:  52% (124/238)
2025-01-10T12:27:00.4281361Z Updating files:  53% (127/238)
2025-01-10T12:27:00.4287931Z Updating files:  54% (129/238)
2025-01-10T12:27:00.4296841Z Updating files:  55% (131/238)
2025-01-10T12:27:00.4303635Z Updating files:  56% (134/238)
2025-01-10T12:27:00.4309346Z Updating files:  57% (136/238)
2025-01-10T12:27:00.4314016Z Updating files:  58% (139/238)
2025-01-10T12:27:00.4319452Z Updating files:  59% (141/238)
2025-01-10T12:27:00.4325128Z Updating files:  60% (143/238)
2025-01-10T12:27:00.4330172Z Updating files:  61% (146/238)
2025-01-10T12:27:00.4334583Z Updating files:  62% (148/238)
2025-01-10T12:27:00.4341178Z Updating files:  63% (150/238)
2025-01-10T12:27:00.4345169Z Updating files:  64% (153/238)
2025-01-10T12:27:00.4350761Z Updating files:  65% (155/238)
2025-01-10T12:27:00.4355481Z Updating files:  66% (158/238)
2025-01-10T12:27:00.4363408Z Updating files:  67% (160/238)
2025-01-10T12:27:00.4370115Z Updating files:  68% (162/238)
2025-01-10T12:27:00.4374302Z Updating files:  69% (165/238)
2025-01-10T12:27:00.4377177Z Updating files:  70% (167/238)
2025-01-10T12:27:00.4382487Z Updating files:  71% (169/238)
2025-01-10T12:27:00.4386019Z Updating files:  72% (172/238)
2025-01-10T12:27:00.4390604Z Updating files:  73% (174/238)
2025-01-10T12:27:00.4396306Z Updating files:  74% (177/238)
2025-01-10T12:27:00.4401731Z Updating files:  75% (179/238)
2025-01-10T12:27:00.4406767Z Updating files:  76% (181/238)
2025-01-10T12:27:00.4412572Z Updating files:  77% (184/238)
2025-01-10T12:27:00.4418608Z Updating files:  78% (186/238)
2025-01-10T12:27:00.4421841Z Updating files:  79% (189/238)
2025-01-10T12:27:00.4424744Z Updating files:  80% (191/238)
2025-01-10T12:27:00.4430288Z Updating files:  81% (193/238)
2025-01-10T12:27:00.4434502Z Updating files:  82% (196/238)
2025-01-10T12:27:00.4438975Z Updating files:  83% (198/238)
2025-01-10T12:27:00.4445815Z Updating files:  84% (200/238)
2025-01-10T12:27:00.4449927Z Updating files:  85% (203/238)
2025-01-10T12:27:00.4454404Z Updating files:  86% (205/238)
2025-01-10T12:27:00.4458294Z Updating files:  87% (208/238)
2025-01-10T12:27:00.4461302Z Updating files:  88% (210/238)
2025-01-10T12:27:00.4465470Z Updating files:  89% (212/238)
2025-01-10T12:27:00.4469355Z Updating files:  90% (215/238)
2025-01-10T12:27:00.4472961Z Updating files:  91% (217/238)
2025-01-10T12:27:00.4479823Z Updating files:  92% (219/238)
2025-01-10T12:27:00.4484517Z Updating files:  93% (222/238)
2025-01-10T12:27:00.4489198Z Updating files:  94% (224/238)
2025-01-10T12:27:00.4492591Z Updating files:  95% (227/238)
2025-01-10T12:27:00.4495731Z Updating files:  96% (229/238)
2025-01-10T12:27:00.4501803Z Updating files:  97% (231/238)
2025-01-10T12:27:00.4508602Z Updating files:  98% (234/238)
2025-01-10T12:27:00.4513407Z Updating files:  99% (236/238)
2025-01-10T12:27:00.4513810Z Updating files: 100% (238/238)
2025-01-10T12:27:00.4529829Z Updating files: 100% (238/238), done.
2025-01-10T12:27:00.4530208Z Switched to a new branch 'main'
2025-01-10T12:27:00.4533493Z branch 'main' set up to track 'origin/main'.
2025-01-10T12:27:00.4799519Z ##[endgroup]
2025-01-10T12:27:00.4843317Z [command]/usr/bin/git log -1 --format=%H
2025-01-10T12:27:00.4867848Z 666ab8501c2b2aea30d05b8822e7ddbfca078d23
2025-01-10T12:27:00.5006626Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-10T12:27:00.5007145Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-10T12:27:00.5038138Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T12:27:00.5038529Z env:
2025-01-10T12:27:00.5038725Z   CACHE_NUMBER: 0
2025-01-10T12:27:00.5039539Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:00.5040639Z   CODECOV_TOKEN: 
2025-01-10T12:27:00.5040917Z ##[endgroup]
2025-01-10T12:27:00.6565247Z ##[group]Run actions/cache/restore@v4
2025-01-10T12:27:00.6565595Z with:
2025-01-10T12:27:00.6565883Z   path: tardis-regression-data/.git/lfs
2025-01-10T12:27:00.6566742Z   key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T12:27:00.6567348Z   enableCrossOsArchive: false
2025-01-10T12:27:00.6567682Z   fail-on-cache-miss: false
2025-01-10T12:27:00.6567989Z   lookup-only: false
2025-01-10T12:27:00.6568248Z env:
2025-01-10T12:27:00.6568477Z   CACHE_NUMBER: 0
2025-01-10T12:27:00.6569321Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:00.6570233Z   CODECOV_TOKEN: 
2025-01-10T12:27:00.6570487Z ##[endgroup]
2025-01-10T12:27:02.9259313Z Received 356515840 of 1708418946 (20.9%), 340.0 MBs/sec
2025-01-10T12:27:03.9273533Z Received 784334848 of 1708418946 (45.9%), 373.6 MBs/sec
2025-01-10T12:27:04.9310320Z Received 1178599424 of 1708418946 (69.0%), 374.0 MBs/sec
2025-01-10T12:27:05.9311813Z Received 1593835520 of 1708418946 (93.3%), 379.5 MBs/sec
2025-01-10T12:27:06.1971129Z Cache Size: ~1629 MB (1708418946 B)
2025-01-10T12:27:06.2010532Z [command]/usr/bin/tar -xf /home/runner/work/_temp/a7cdf137-b787-4ecc-b549-09549c563c10/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T12:27:06.9321929Z Received 1708418946 of 1708418946 (100.0%), 325.5 MBs/sec
2025-01-10T12:27:12.5234235Z Cache restored successfully
2025-01-10T12:27:13.0910456Z Cache restored from key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T12:27:13.1123189Z ##[group]Run git lfs checkout
2025-01-10T12:27:13.1123471Z [36;1mgit lfs checkout[0m
2025-01-10T12:27:13.1149729Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T12:27:13.1150087Z env:
2025-01-10T12:27:13.1150274Z   CACHE_NUMBER: 0
2025-01-10T12:27:13.1150911Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:13.1151586Z   CODECOV_TOKEN: 
2025-01-10T12:27:13.1151791Z ##[endgroup]
2025-01-10T12:27:23.1243015Z Checking out LFS objects: 100% (204/204), 3.5 GB | 334 MB/s, done.
2025-01-10T12:27:27.5872523Z Prepare all required actions
2025-01-10T12:27:27.5872862Z Getting action download info
2025-01-10T12:27:27.7044649Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-10T12:27:27.9535732Z ##[group]Run ./.github/actions/setup_env
2025-01-10T12:27:27.9536049Z with:
2025-01-10T12:27:27.9536693Z   os-label: linux-64
2025-01-10T12:27:27.9536894Z env:
2025-01-10T12:27:27.9537057Z   CACHE_NUMBER: 0
2025-01-10T12:27:27.9537662Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:27.9538286Z   CODECOV_TOKEN: 
2025-01-10T12:27:27.9538474Z ##[endgroup]
2025-01-10T12:27:27.9558872Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-10T12:27:27.9559365Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-10T12:27:27.9559792Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-10T12:27:27.9585823Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T12:27:27.9586247Z env:
2025-01-10T12:27:27.9586422Z   CACHE_NUMBER: 0
2025-01-10T12:27:27.9587021Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:27.9587673Z   CODECOV_TOKEN: 
2025-01-10T12:27:27.9587863Z ##[endgroup]
2025-01-10T12:27:27.9883543Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-10T12:27:27.9883821Z with:
2025-01-10T12:27:27.9884017Z   environment-file: conda-linux-64.lock
2025-01-10T12:27:27.9884440Z   cache-environment-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-10T12:27:27.9885010Z   cache-downloads-key: 1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614
2025-01-10T12:27:27.9885411Z   environment-name: tardis
2025-01-10T12:27:27.9885637Z   cache-environment: true
2025-01-10T12:27:27.9885866Z   cache-downloads: true
2025-01-10T12:27:27.9886383Z env:
2025-01-10T12:27:27.9886669Z   CACHE_NUMBER: 0
2025-01-10T12:27:27.9887275Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:27.9887907Z   CODECOV_TOKEN: 
2025-01-10T12:27:27.9888111Z ##[endgroup]
2025-01-10T12:27:28.1267508Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-01-10T12:27:28.1277935Z ##[group]Install micromamba
2025-01-10T12:27:28.3641067Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-01-10T12:27:28.3642040Z ##[endgroup]
2025-01-10T12:27:28.3642693Z Adding conda-forge to condarc channels ...
2025-01-10T12:27:28.3652249Z ##[group]Initialize micromamba for bash.
2025-01-10T12:27:28.3668310Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T12:27:28.3777441Z Modifying RC file "/home/runner/.bashrc"
2025-01-10T12:27:28.3778368Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-01-10T12:27:28.3779196Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-01-10T12:27:28.3779938Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-01-10T12:27:28.3780407Z 
2025-01-10T12:27:28.3780565Z # >>> mamba initialize >>>
2025-01-10T12:27:28.3781046Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-10T12:27:28.3781657Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-01-10T12:27:28.3782209Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-01-10T12:27:28.3782958Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-10T12:27:28.3783674Z if [ $? -eq 0 ]; then
2025-01-10T12:27:28.3784012Z     eval "$__mamba_setup"
2025-01-10T12:27:28.3784342Z else
2025-01-10T12:27:28.3785162Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-10T12:27:28.3785751Z fi
2025-01-10T12:27:28.3786022Z unset __mamba_setup
2025-01-10T12:27:28.3786541Z # <<< mamba initialize <<<
2025-01-10T12:27:28.3786766Z 
2025-01-10T12:27:28.3797599Z Moving mamba initialize block to .bash_profile
2025-01-10T12:27:28.3809717Z ##[endgroup]
2025-01-10T12:27:28.3811033Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-01-10T12:27:29.4570976Z Received 251658240 of 358593873 (70.2%), 239.8 MBs/sec
2025-01-10T12:27:29.8533468Z Cache Size: ~342 MB (358593873 B)
2025-01-10T12:27:29.8644143Z [command]/usr/bin/tar -xf /home/runner/work/_temp/e1972f2a-d8c0-4a7f-83db-939d1a3fb143/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T12:27:30.3270129Z Cache restored successfully
2025-01-10T12:27:30.3987355Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64`
2025-01-10T12:27:30.3989688Z ##[endgroup]
2025-01-10T12:27:30.4001760Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-01-10T12:27:30.4595171Z Received 358593873 of 358593873 (100.0%), 170.6 MBs/sec
2025-01-10T12:27:31.4557711Z Received 247463936 of 446763168 (55.4%), 235.5 MBs/sec
2025-01-10T12:27:32.1510638Z Cache Size: ~426 MB (446763168 B)
2025-01-10T12:27:32.1548945Z [command]/usr/bin/tar -xf /home/runner/work/_temp/7d24020a-e6bd-478d-acc1-03229276ce2e/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-10T12:27:32.4539914Z Received 446763168 of 446763168 (100.0%), 212.8 MBs/sec
2025-01-10T12:27:37.8622628Z Cache restored successfully
2025-01-10T12:27:37.9447924Z Restored cache with key `1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-1bfcc818b79d6e7f30001ef583d4cbf8b611cf6e4e626641987e436d32dd5614`
2025-01-10T12:27:37.9449279Z ##[endgroup]
2025-01-10T12:27:37.9449565Z Adding environment tardis to auto-activate bash ...
2025-01-10T12:27:37.9460530Z Generating micromamba run shell.
2025-01-10T12:27:37.9470319Z ##[endgroup]
2025-01-10T12:27:37.9475794Z Set environment variables.
2025-01-10T12:27:37.9480062Z ##[group]micromamba info
2025-01-10T12:27:37.9483240Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-01-10T12:27:37.9717368Z 
2025-01-10T12:27:37.9717921Z        libmamba version : 1.5.10
2025-01-10T12:27:37.9718389Z      micromamba version : 1.5.10
2025-01-10T12:27:37.9719109Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-10T12:27:37.9720090Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-10T12:27:37.9720887Z        envs directories : /home/runner/micromamba/envs
2025-01-10T12:27:37.9721502Z           package cache : /home/runner/micromamba/pkgs
2025-01-10T12:27:37.9722106Z                           /home/runner/.mamba/pkgs
2025-01-10T12:27:37.9722632Z             environment : tardis
2025-01-10T12:27:37.9723174Z            env location : /home/runner/micromamba/envs/tardis
2025-01-10T12:27:37.9723776Z       user config files : /home/runner/.mambarc
2025-01-10T12:27:37.9724499Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T12:27:37.9725158Z        virtual packages : __unix=0=0
2025-01-10T12:27:37.9725591Z                           __linux=6.8.0=0
2025-01-10T12:27:37.9725894Z                           __glibc=2.39=0
2025-01-10T12:27:37.9726503Z                           __archspec=1=x86_64_v3
2025-01-10T12:27:37.9727010Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-01-10T12:27:37.9727725Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-10T12:27:37.9728340Z        base environment : /home/runner/micromamba
2025-01-10T12:27:37.9728830Z                platform : linux-64
2025-01-10T12:27:37.9737660Z ##[endgroup]
2025-01-10T12:27:37.9738727Z ##[group]micromamba list
2025-01-10T12:27:37.9741022Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-01-10T12:27:38.4129022Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-01-10T12:27:38.4129856Z 
2025-01-10T12:27:38.4130193Z   Name                           Version              Build                    Channel    
2025-01-10T12:27:38.4131803Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-10T12:27:38.4132320Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-01-10T12:27:38.4132839Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-01-10T12:27:38.4133342Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4133830Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4134334Z   argon2-cffi                    23.1.0               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4134901Z   argon2-cffi-bindings           21.2.0               py312h66e93f0_5          conda-forge
2025-01-10T12:27:38.4135416Z   arrow                          1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4135888Z   astropy                        6.1.1                py312h4fc7734_1          conda-forge
2025-01-10T12:27:38.4136725Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4137328Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4137866Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4138354Z   async-lru                      2.0.4                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4138820Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-01-10T12:27:38.4139264Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-10T12:27:38.4139713Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4140205Z   beautifulsoup4                 4.12.3               pyha770c72_1             conda-forge
2025-01-10T12:27:38.4140720Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4141171Z   blosc                          1.21.6               hef167b5_0               conda-forge
2025-01-10T12:27:38.4141620Z   brotli                         1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4142088Z   brotli-bin                     1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4142621Z   brotli-python                  1.1.0                py312h2ec8cdc_2          conda-forge
2025-01-10T12:27:38.4143238Z   bzip2                          1.0.8                h4bc722e_7               conda-forge
2025-01-10T12:27:38.4143688Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-01-10T12:27:38.4144139Z   c-blosc2                       2.15.2               h68e2383_0               conda-forge
2025-01-10T12:27:38.4144649Z   ca-certificates                2024.12.14           hbcca054_0               conda-forge
2025-01-10T12:27:38.4145193Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-10T12:27:38.4145723Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-10T12:27:38.4146428Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-01-10T12:27:38.4146900Z   certifi                        2024.12.14           pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4147484Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-01-10T12:27:38.4147898Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4148290Z   click                          8.1.7                unix_pyh707e725_1        conda-forge
2025-01-10T12:27:38.4148650Z   codespell                      2.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4149149Z   colorama                       0.4.6                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4149520Z   comm                           0.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4149886Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-10T12:27:38.4150281Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-01-10T12:27:38.4150675Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-01-10T12:27:38.4151053Z   cycler                         0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4151422Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-10T12:27:38.4151803Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-01-10T12:27:38.4152191Z   decorator                      5.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4152576Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4152947Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-01-10T12:27:38.4153313Z   dot2tex                        2.11.3               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4153686Z   entrypoints                    0.4                  pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4154085Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T12:27:38.4154478Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4154834Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-01-10T12:27:38.4155242Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-10T12:27:38.4155703Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-10T12:27:38.4156347Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-10T12:27:38.4156796Z   font-ttf-ubuntu                0.83                 h77eed37_3               conda-forge
2025-01-10T12:27:38.4157191Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-01-10T12:27:38.4157598Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-10T12:27:38.4158011Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-10T12:27:38.4158400Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-01-10T12:27:38.4158754Z   fqdn                           1.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4159101Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-01-10T12:27:38.4159465Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-01-10T12:27:38.4159820Z   future                         1.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4160185Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-01-10T12:27:38.4160547Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-01-10T12:27:38.4161028Z   git-lfs                        3.5.1                h647637d_1               conda-forge
2025-01-10T12:27:38.4161371Z   gmp                            6.3.0                hac33072_2               conda-forge
2025-01-10T12:27:38.4161722Z   gmpy2                          2.1.5                py312h7201bc8_3          conda-forge
2025-01-10T12:27:38.4162092Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-01-10T12:27:38.4162585Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-01-10T12:27:38.4162943Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-01-10T12:27:38.4163275Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-01-10T12:27:38.4163627Z   h11                            0.14.0               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4164167Z   h2                             4.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4164729Z   h5py                           3.11.0               nompi_py312hedeef09_103  conda-forge
2025-01-10T12:27:38.4165329Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-01-10T12:27:38.4165982Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-01-10T12:27:38.4166808Z   hpack                          4.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4167423Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4168033Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4168613Z   hyperframe                     6.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4169178Z   icu                            73.2                 h59595ed_0               conda-forge
2025-01-10T12:27:38.4169743Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4170388Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4171012Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-10T12:27:38.4171769Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-10T12:27:38.4172443Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4173132Z   iniconfig                      2.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4173697Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-01-10T12:27:38.4174261Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-10T12:27:38.4174918Z   ipython_genutils               0.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T12:27:38.4175604Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4176289Z   isoduration                    20.11.0              pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4176930Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4177550Z   jinja2                         3.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4178162Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4178659Z   jsonpointer                    3.0.0                py312h7900ff3_1          conda-forge
2025-01-10T12:27:38.4179051Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4179494Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4180283Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4180754Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4181143Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4181538Z   jupyter_core                   5.7.2                pyh31011fe_1             conda-forge
2025-01-10T12:27:38.4182036Z   jupyter_events                 0.10.0               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4182433Z   jupyter_server                 2.14.1               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4182852Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4183267Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4183676Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_2             conda-forge
2025-01-10T12:27:38.4184105Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4184526Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4184923Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-01-10T12:27:38.4185290Z   kiwisolver                     1.4.5                py312h68727a3_2          conda-forge
2025-01-10T12:27:38.4185648Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-01-10T12:27:38.4186006Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-10T12:27:38.4186624Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-01-10T12:27:38.4187001Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-01-10T12:27:38.4187357Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-01-10T12:27:38.4187704Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-01-10T12:27:38.4188060Z   libblas                        3.9.0                24_linux64_openblas      conda-forge
2025-01-10T12:27:38.4188450Z   libbrotlicommon                1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4188855Z   libbrotlidec                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4189240Z   libbrotlienc                   1.1.0                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4189613Z   libcblas                       3.9.0                24_linux64_openblas      conda-forge
2025-01-10T12:27:38.4189970Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-01-10T12:27:38.4190333Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-01-10T12:27:38.4190711Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-01-10T12:27:38.4191069Z   libev                          4.33                 hd590300_2               conda-forge
2025-01-10T12:27:38.4191417Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-01-10T12:27:38.4191879Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-01-10T12:27:38.4192265Z   libgcc                         14.2.0               h77fa898_1               conda-forge
2025-01-10T12:27:38.4192621Z   libgcc-ng                      14.2.0               h69a702a_1               conda-forge
2025-01-10T12:27:38.4192974Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-01-10T12:27:38.4193348Z   libgfortran-ng                 13.2.0               h69a702a_13              conda-forge
2025-01-10T12:27:38.4193742Z   libgfortran5                   13.2.0               h3d2ce59_13              conda-forge
2025-01-10T12:27:38.4194476Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-01-10T12:27:38.4194852Z   libgomp                        14.2.0               h77fa898_1               conda-forge
2025-01-10T12:27:38.4195206Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-01-10T12:27:38.4195685Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-01-10T12:27:38.4196231Z   liblapack                      3.9.0                24_linux64_openblas      conda-forge
2025-01-10T12:27:38.4196650Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-01-10T12:27:38.4197029Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-01-10T12:27:38.4197394Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-01-10T12:27:38.4197790Z   libopenblas                    0.3.27               pthreads_hac2b453_1      conda-forge
2025-01-10T12:27:38.4198174Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-01-10T12:27:38.4198529Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-01-10T12:27:38.4198891Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-01-10T12:27:38.4199269Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-01-10T12:27:38.4199632Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-01-10T12:27:38.4199995Z   libstdcxx                      14.2.0               hc0a3c3a_1               conda-forge
2025-01-10T12:27:38.4200382Z   libstdcxx-ng                   14.2.0               h4852527_1               conda-forge
2025-01-10T12:27:38.4200748Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-01-10T12:27:38.4201109Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-01-10T12:27:38.4201457Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-01-10T12:27:38.4201821Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-01-10T12:27:38.4202188Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-01-10T12:27:38.4202543Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-01-10T12:27:38.4202904Z   libxml2                        2.12.7               h4c95cb1_3               conda-forge
2025-01-10T12:27:38.4203249Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-01-10T12:27:38.4203708Z   libzlib                        1.3.1                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4204288Z   llvmlite                       0.43.0               py312h374181b_1          conda-forge
2025-01-10T12:27:38.4204884Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-01-10T12:27:38.4205456Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-01-10T12:27:38.4206016Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-01-10T12:27:38.4206768Z   markupsafe                     2.1.5                py312h66e93f0_1          conda-forge
2025-01-10T12:27:38.4207169Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-01-10T12:27:38.4207584Z   matplotlib-inline              0.1.7                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4207976Z   mistune                        3.0.2                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4208319Z   mpc                            1.3.1                h24ddda3_1               conda-forge
2025-01-10T12:27:38.4208790Z   mpfr                           4.2.1                h90cbb55_3               conda-forge
2025-01-10T12:27:38.4209140Z   mpmath                         1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4209492Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-10T12:27:38.4209972Z   mypy_extensions                1.0.0                pyha770c72_1             conda-forge
2025-01-10T12:27:38.4210355Z   nbclassic                      1.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4210724Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4211091Z   nbconvert                      7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T12:27:38.4211478Z   nbconvert-core                 7.16.4               pyhd8ed1ab_3             conda-forge
2025-01-10T12:27:38.4211909Z   nbconvert-pandoc               7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T12:27:38.4212305Z   nbformat                       5.10.4               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4212676Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4213247Z   ncurses                        6.5                  he02047a_1               conda-forge
2025-01-10T12:27:38.4213888Z   nest-asyncio                   1.6.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4214540Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4215140Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-01-10T12:27:38.4215727Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4216556Z   notebook-shim                  0.2.4                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4217203Z   numba                          0.60.0               py312h83e6fd3_0          conda-forge
2025-01-10T12:27:38.4217811Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-01-10T12:27:38.4218402Z   numpy                          2.0.2                py312h58c1407_1          conda-forge
2025-01-10T12:27:38.4219014Z   numpydoc                       1.7.0                pyhd8ed1ab_3             conda-forge
2025-01-10T12:27:38.4219650Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-01-10T12:27:38.4220307Z   openssl                        3.4.0                h7b32b05_1               conda-forge
2025-01-10T12:27:38.4220930Z   overrides                      7.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4221531Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4222166Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-01-10T12:27:38.4222769Z   pandoc                         3.2.1                ha770c72_0               conda-forge
2025-01-10T12:27:38.4223417Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4224062Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-01-10T12:27:38.4224665Z   parso                          0.8.4                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4225283Z   pathspec                       0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4225909Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4226668Z   pcre2                          10.44                hba22ea6_2               conda-forge
2025-01-10T12:27:38.4227281Z   pexpect                        4.9.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4228104Z   pickleshare                    0.7.5                pyhd8ed1ab_1004          conda-forge
2025-01-10T12:27:38.4228806Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-01-10T12:27:38.4229420Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4230015Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-01-10T12:27:38.4230865Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_2             conda-forge
2025-01-10T12:27:38.4231604Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4232243Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4232799Z   pluggy                         1.5.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4233414Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4234108Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-10T12:27:38.4234761Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-01-10T12:27:38.4235399Z   pthread-stubs                  0.4                  hb9d3cd8_1002            conda-forge
2025-01-10T12:27:38.4236232Z   ptyprocess                     0.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4236882Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4237522Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4238154Z   pybtex                         0.24.0               pyhd8ed1ab_3             conda-forge
2025-01-10T12:27:38.4238814Z   pybtex-docutils                1.0.3                py312h7900ff3_2          conda-forge
2025-01-10T12:27:38.4239492Z   pycparser                      2.22                 pyh29332c3_1             conda-forge
2025-01-10T12:27:38.4240116Z   pyerfa                         2.0.1.4              py312hc0a28a1_2          conda-forge
2025-01-10T12:27:38.4240740Z   pygments                       2.18.0               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4241449Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-01-10T12:27:38.4242120Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4242753Z   pysocks                        1.7.1                pyha55dd90_7             conda-forge
2025-01-10T12:27:38.4243380Z   pytables                       3.10.2               py312h2895ec7_0          conda-forge
2025-01-10T12:27:38.4244023Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4244667Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4245273Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4245684Z   pytest-html                    4.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4246243Z   pytest-metadata                3.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4246655Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-01-10T12:27:38.4247051Z   python-dateutil                2.9.0.post0          pyhff2d567_1             conda-forge
2025-01-10T12:27:38.4247501Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4247965Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4248395Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4248933Z   python_abi                     3.12                 5_cp312                  conda-forge
2025-01-10T12:27:38.4249512Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4249895Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-01-10T12:27:38.4250250Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-01-10T12:27:38.4250775Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-10T12:27:38.4251160Z   radioactivedecay               0.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4251601Z   readline                       8.2                  h8228510_1               conda-forge
2025-01-10T12:27:38.4252264Z   recommonmark                   0.7.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4252803Z   referencing                    0.35.1               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4253488Z   requests                       2.32.3               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4253990Z   rfc3339-validator              0.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4254410Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-10T12:27:38.4254798Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-01-10T12:27:38.4255138Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-01-10T12:27:38.4255479Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-01-10T12:27:38.4255842Z   send2trash                     1.8.3                pyh0d859eb_1             conda-forge
2025-01-10T12:27:38.4256499Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4257013Z   setuptools-scm                 8.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4257424Z   setuptools_scm                 8.1.0                hd8ed1ab_1               conda-forge
2025-01-10T12:27:38.4258056Z   six                            1.16.0               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4258677Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4259200Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-01-10T12:27:38.4259704Z   sniffio                        1.3.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4260371Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4261066Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4261444Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4261835Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4262247Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-10T12:27:38.4262661Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4263080Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4263508Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4264157Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-10T12:27:38.4264878Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-10T12:27:38.4265683Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4266800Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4267633Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4268112Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4268567Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4269147Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4269592Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4270072Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4270515Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4270872Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-10T12:27:38.4271237Z   tabulate                       0.9.0                pyhd8ed1ab_2             conda-forge
2025-01-10T12:27:38.4271842Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4272486Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-01-10T12:27:38.4272952Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4273297Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-01-10T12:27:38.4273626Z   toml                           0.10.2               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4273964Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4274312Z   tornado                        6.4.1                py312h66e93f0_1          conda-forge
2025-01-10T12:27:38.4274665Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4275020Z   traitlets                      5.14.3               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4275386Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-01-10T12:27:38.4275803Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4276437Z   typing-extensions              4.12.2               hd8ed1ab_1               conda-forge
2025-01-10T12:27:38.4276892Z   typing_extensions              4.12.2               pyha770c72_1             conda-forge
2025-01-10T12:27:38.4277287Z   typing_utils                   0.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4277658Z   tzdata                         2024a                h8827d51_1               conda-forge
2025-01-10T12:27:38.4278028Z   uri-template                   1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4278405Z   urllib3                        2.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4278764Z   wcwidth                        0.2.13               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4279129Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4279516Z   webencodings                   0.5.1                pyhd8ed1ab_3             conda-forge
2025-01-10T12:27:38.4279925Z   websocket-client               1.8.0                pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4280310Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-10T12:27:38.4280698Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4281106Z   xorg-kbproto                   1.0.7                hb9d3cd8_1003            conda-forge
2025-01-10T12:27:38.4281625Z   xorg-libice                    1.1.1                hb9d3cd8_1               conda-forge
2025-01-10T12:27:38.4282004Z   xorg-libsm                     1.2.4                he73a12e_1               conda-forge
2025-01-10T12:27:38.4282416Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-01-10T12:27:38.4283074Z   xorg-libxau                    1.0.11               hb9d3cd8_1               conda-forge
2025-01-10T12:27:38.4283921Z   xorg-libxdmcp                  1.1.3                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4284319Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-01-10T12:27:38.4284710Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-01-10T12:27:38.4285120Z   xorg-renderproto               0.11.1               hb9d3cd8_1003            conda-forge
2025-01-10T12:27:38.4285757Z   xorg-xextproto                 7.3.0                hb9d3cd8_1004            conda-forge
2025-01-10T12:27:38.4286573Z   xorg-xproto                    7.0.31               hb9d3cd8_1008            conda-forge
2025-01-10T12:27:38.4287171Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-01-10T12:27:38.4287720Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-01-10T12:27:38.4288300Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-01-10T12:27:38.4288904Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-10T12:27:38.4289493Z   zlib                           1.3.1                hb9d3cd8_2               conda-forge
2025-01-10T12:27:38.4290085Z   zlib-ng                        2.2.3                h7955e40_0               conda-forge
2025-01-10T12:27:38.4290721Z   zstandard                      0.23.0               py312hef9b889_1          conda-forge
2025-01-10T12:27:38.4291346Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-01-10T12:27:38.4292225Z ##[endgroup]
2025-01-10T12:27:38.4329900Z ##[group]Run pip install -e . --user
2025-01-10T12:27:38.4330439Z [36;1mpip install -e . --user[0m
2025-01-10T12:27:38.4362455Z shell: /usr/bin/bash -l {0}
2025-01-10T12:27:38.4362707Z env:
2025-01-10T12:27:38.4362889Z   CACHE_NUMBER: 0
2025-01-10T12:27:38.4363522Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:38.4364187Z   CODECOV_TOKEN: 
2025-01-10T12:27:38.4364420Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T12:27:38.4364731Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T12:27:38.4365087Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T12:27:38.4365393Z ##[endgroup]
2025-01-10T12:27:39.4053824Z Obtaining file:///home/runner/work/tardis/tardis
2025-01-10T12:27:39.4082729Z   Installing build dependencies: started
2025-01-10T12:27:42.1632037Z   Installing build dependencies: finished with status 'done'
2025-01-10T12:27:42.1637834Z   Checking if build backend supports build_editable: started
2025-01-10T12:27:42.2884186Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-10T12:27:42.2892948Z   Getting requirements to build editable: started
2025-01-10T12:27:42.7518556Z   Getting requirements to build editable: finished with status 'done'
2025-01-10T12:27:42.7528237Z   Preparing editable metadata (pyproject.toml): started
2025-01-10T12:27:43.2100773Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-10T12:27:43.2706707Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-10T12:27:43.3102759Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.2)
2025-01-10T12:27:43.3114775Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-10T12:27:43.3125385Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-10T12:27:43.3134926Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-10T12:27:43.3143512Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-10T12:27:43.3233971Z Building wheels for collected packages: tardis
2025-01-10T12:27:43.3241872Z   Building editable for tardis (pyproject.toml): started
2025-01-10T12:27:44.0872323Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-10T12:27:44.0880616Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8878 sha256=5c180029515e44bcb4e74340add1e44c649509d83cb235e53391847c7e99a600
2025-01-10T12:27:44.0883169Z   Stored in directory: /tmp/pip-ephem-wheel-cache-dc0t4z9i/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-01-10T12:27:44.0909241Z Successfully built tardis
2025-01-10T12:27:44.8755557Z Installing collected packages: tardis
2025-01-10T12:27:44.8840378Z Successfully installed tardis-0.0.0
2025-01-10T12:27:45.1350778Z ##[group]Run pip install qgridnext
2025-01-10T12:27:45.1351108Z [36;1mpip install qgridnext[0m
2025-01-10T12:27:45.1378560Z shell: /usr/bin/bash -l {0}
2025-01-10T12:27:45.1378815Z env:
2025-01-10T12:27:45.1379010Z   CACHE_NUMBER: 0
2025-01-10T12:27:45.1379669Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:45.1380358Z   CODECOV_TOKEN: 
2025-01-10T12:27:45.1380602Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T12:27:45.1380929Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T12:27:45.1381304Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T12:27:45.1381671Z ##[endgroup]
2025-01-10T12:27:45.7722908Z Collecting qgridnext
2025-01-10T12:27:45.8160601Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-10T12:27:45.8252253Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-10T12:27:45.8261833Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-10T12:27:45.8270720Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.0.2)
2025-01-10T12:27:45.8280398Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-10T12:27:45.8366528Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T12:27:45.8374855Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-10T12:27:45.8387281Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-10T12:27:45.8405132Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-10T12:27:45.8419644Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-10T12:27:45.8888547Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0.post0)
2025-01-10T12:27:45.8901754Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T12:27:45.8909677Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T12:27:45.9231472Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-10T12:27:45.9245254Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-10T12:27:45.9253328Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-10T12:27:45.9264109Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-10T12:27:45.9273254Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-10T12:27:45.9284418Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-10T12:27:45.9303406Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-10T12:27:45.9351720Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-10T12:27:45.9411673Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-10T12:27:45.9601666Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-10T12:27:45.9745538Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-10T12:27:45.9758015Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-10T12:27:45.9772562Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T12:27:45.9782505Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-10T12:27:45.9790487Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-10T12:27:45.9820008Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-10T12:27:45.9848798Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-10T12:27:45.9986032Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-10T12:27:45.9995056Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-10T12:27:46.0002518Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T12:27:46.0342552Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-10T12:27:46.0352091Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-10T12:27:46.0360857Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-10T12:27:46.0372098Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-10T12:27:46.0383439Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-10T12:27:46.0394152Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T12:27:46.0404969Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-10T12:27:46.0418182Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-10T12:27:46.0427998Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-10T12:27:46.0436773Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-10T12:27:46.0446046Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-10T12:27:46.0454629Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-10T12:27:46.0465023Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-10T12:27:46.0473736Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-10T12:27:46.0485226Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T12:27:46.0502011Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-10T12:27:46.0788187Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-10T12:27:46.0799648Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-10T12:27:46.0811409Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-10T12:27:46.0825204Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-10T12:27:46.0851014Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-10T12:27:46.1039973Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-10T12:27:46.1065624Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-10T12:27:46.1076345Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-10T12:27:46.1094590Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-10T12:27:46.1448818Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-10T12:27:46.1457589Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-10T12:27:46.1555364Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-10T12:27:46.1728672Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.12.14)
2025-01-10T12:27:46.1743265Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-10T12:27:46.1820648Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-10T12:27:46.2013886Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-10T12:27:46.2034530Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-10T12:27:46.2048844Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-10T12:27:46.2111164Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-10T12:27:46.2303295Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-10T12:27:46.2313664Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-10T12:27:46.2321850Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-10T12:27:46.2329974Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T12:27:46.2593622Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T12:27:46.2744514Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-10T12:27:46.2753003Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-10T12:27:46.2762238Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-10T12:27:46.2770680Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-10T12:27:46.3195705Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-10T12:27:46.3214324Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-10T12:27:46.3228105Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-10T12:27:46.3241873Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-10T12:27:46.3253148Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-10T12:27:46.3264917Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T12:27:46.3280895Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-10T12:27:46.3290013Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T12:27:46.3405994Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-10T12:27:46.3713143Z Requirement already satisfied: charset_normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-10T12:27:46.3726420Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-10T12:27:46.4504340Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-10T12:27:46.5089489Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-10T12:27:46.5104898Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-10T12:27:46.5119252Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-10T12:27:46.5138395Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T12:27:46.5151627Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-10T12:27:46.6183777Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-10T12:27:46.6284768Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-10T12:27:46.6822311Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-10T12:27:46.7340893Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T12:27:46.7648978Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-10T12:27:46.7955724Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-10T12:27:46.8377367Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 31.7 MB/s eta 0:00:00
2025-01-10T12:27:47.6441785Z Installing collected packages: qgridnext
2025-01-10T12:27:47.7352618Z Successfully installed qgridnext-2.0.4
2025-01-10T12:27:47.9565736Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-10T12:27:47.9567344Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-10T12:27:47.9594124Z shell: /usr/bin/bash -l {0}
2025-01-10T12:27:47.9594377Z env:
2025-01-10T12:27:47.9594560Z   CACHE_NUMBER: 0
2025-01-10T12:27:47.9595187Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:47.9595831Z   CODECOV_TOKEN: 
2025-01-10T12:27:47.9596218Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T12:27:47.9596545Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T12:27:47.9596951Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T12:27:47.9597271Z ##[endgroup]
2025-01-10T12:27:56.9720985Z ============================= test session starts ==============================
2025-01-10T12:27:56.9721721Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-10T12:27:56.9722339Z rootdir: /home/runner/work/tardis/tardis
2025-01-10T12:27:56.9722867Z configfile: pyproject.toml
2025-01-10T12:27:56.9723973Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-10T12:27:56.9724666Z collected 1796 items / 2 deselected / 1794 selected
2025-01-10T12:27:56.9725031Z 
2025-01-10T12:28:02.0372542Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-10T12:28:03.7379514Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-10T12:28:05.3301564Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-10T12:28:07.1127312Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-10T12:28:07.1224107Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-10T12:28:08.4455581Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-10T12:28:08.7885165Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-10T12:28:08.7901457Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-10T12:28:12.4995936Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-10T12:28:12.5124985Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-10T12:28:12.5400092Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-10T12:28:52.7422254Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-10T12:28:52.7585048Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-10T12:28:52.7705568Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-10T12:28:52.8027647Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-10T12:28:52.8253279Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-10T12:28:53.1470185Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-10T12:28:53.4564519Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-10T12:28:53.4812779Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-10T12:28:53.7049566Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-10T12:28:53.7119734Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-10T12:29:53.1619141Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-10T12:29:54.1619886Z ............                                                             [ 10%]
2025-01-10T12:29:57.2688554Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-10T12:29:57.3187422Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-10T12:29:58.6390914Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-10T12:29:59.9735736Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-10T12:30:02.2140800Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-10T12:30:04.9796566Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-10T12:30:51.7579031Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-10T12:31:03.2598699Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-10T12:31:04.9321863Z tardis/plasma/tests/test_complete_plasmas.py ...........FFF..FFF..s..... [ 13%]
2025-01-10T12:31:08.5308511Z sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-10T12:31:10.8628906Z F..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-10T12:31:14.7231909Z ........s...FFF..FFF.ss.....sFF.F....ss............s...FFF..FFF.ss.....s [ 26%]
2025-01-10T12:31:18.2801688Z FF.F....ss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-10T12:31:19.5840087Z ..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFssFssssss..... [ 34%]
2025-01-10T12:31:23.1210964Z .......s...FFF..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sF [ 38%]
2025-01-10T12:31:26.8312974Z F.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF. [ 42%]
2025-01-10T12:31:30.5461217Z .FFF.ss.....sFF.Fssssss............s...FFF..FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-10T12:31:33.0781988Z ......s...FFF..FFF.s.....FFFF.Fssssss............s...FFF..FFF.s.....FFFF [ 50%]
2025-01-10T12:31:36.7931467Z .Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF.. [ 54%]
2025-01-10T12:31:40.5717543Z FFF.ss.....sFF.Fssssss................FFF..FFF..s.....sFF.Fssss......... [ 58%]
2025-01-10T12:31:41.2402003Z .........FFF..FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-10T12:31:41.4665128Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-10T12:31:41.4779455Z ......                                                                   [ 62%]
2025-01-10T12:31:41.6084074Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-10T12:34:00.2012079Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-10T12:34:00.2038947Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-10T12:34:23.2033808Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-10T12:34:36.6089306Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-10T12:34:37.3566500Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-10T12:34:46.3565102Z tardis/simulation/tests/test_simulation.py FFFFFFFFFF...                 [ 65%]
2025-01-10T12:34:46.3764437Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-10T12:34:46.8794735Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-10T12:34:46.8867110Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-10T12:34:49.1639534Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-10T12:34:49.1828484Z ..........                                                               [ 69%]
2025-01-10T12:34:49.3568990Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-10T12:34:49.3905221Z .........                                                                [ 72%]
2025-01-10T12:35:08.2008007Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-10T12:36:11.9608461Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-10T12:37:36.6488796Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-10T12:37:36.7207916Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-10T12:37:40.0423823Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-10T12:37:47.2964777Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-10T12:37:47.5170841Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-10T12:37:47.5343435Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-10T12:37:47.5748682Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-10T12:37:56.5353872Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-10T12:37:56.5419627Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-10T12:38:02.9011119Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-10T12:38:03.3863777Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-10T12:38:04.4157444Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-10T12:38:04.5530074Z XX.........                                                              [ 84%]
2025-01-10T12:38:04.5811118Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-10T12:38:04.8890206Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-10T12:38:05.3216695Z .....                                                                    [ 85%]
2025-01-10T12:38:40.4818927Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-10T12:38:40.5106249Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-10T12:38:40.5137641Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-10T12:38:43.5273691Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-10T12:38:43.5453024Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-10T12:38:47.0453475Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-10T12:38:47.0455688Z                                                                          [ 86%]
2025-01-10T12:38:47.8109768Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-10T12:38:49.1876353Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-10T12:38:51.4666459Z ......                                                                   [ 88%]
2025-01-10T12:38:57.1431658Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..FF.F [ 90%]
2025-01-10T12:39:00.2577662Z ..FF.FF..FF.F........FF..FF.F                                            [ 91%]
2025-01-10T12:39:03.2239536Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-10T12:39:10.3491019Z ....                                                                     [ 92%]
2025-01-10T12:39:16.6342096Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-10T12:39:25.6615981Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-10T12:39:26.0990625Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-10T12:39:26.1714823Z ....                                                                     [ 96%]
2025-01-10T12:39:27.2380610Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-10T12:39:27.8739466Z ..................                                                       [ 98%]
2025-01-10T12:40:31.4829481Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-10T12:40:39.7727072Z ......                                                                   [100%]
2025-01-10T12:40:39.7727465Z 
2025-01-10T12:40:39.7727645Z =================================== FAILURES ===================================
2025-01-10T12:40:39.7728283Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-10T12:40:39.7728705Z 
2025-01-10T12:40:39.7728889Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-10T12:40:39.7729444Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-10T12:40:39.7729818Z 
2025-01-10T12:40:39.7730038Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7730495Z         if err_msg is None:
2025-01-10T12:40:39.7730872Z             if left.shape != right.shape:
2025-01-10T12:40:39.7731284Z                 raise_assert_detail(
2025-01-10T12:40:39.7731850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7732430Z                 )
2025-01-10T12:40:39.7732766Z     
2025-01-10T12:40:39.7733073Z             diff = 0
2025-01-10T12:40:39.7733557Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7734072Z                 # count up differences
2025-01-10T12:40:39.7734985Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7735564Z                     diff += 1
2025-01-10T12:40:39.7735912Z     
2025-01-10T12:40:39.7736399Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7736914Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7737576Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7738212Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7738632Z E           
2025-01-10T12:40:39.7738979Z E           numpy array values are different (0.08897 %)
2025-01-10T12:40:39.7739930Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T12:40:39.7741356Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T12:40:39.7742116Z 
2025-01-10T12:40:39.7742653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7743383Z 
2025-01-10T12:40:39.7743709Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7744185Z 
2025-01-10T12:40:39.7744646Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22eecb6240>
2025-01-10T12:40:39.7745737Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22eeae0680>
2025-01-10T12:40:39.7746549Z 
2025-01-10T12:40:39.7746734Z     def test_calculate_sobolev_line_opacity(
2025-01-10T12:40:39.7747228Z         nb_simulation_verysimple, regression_data
2025-01-10T12:40:39.7747692Z     ):
2025-01-10T12:40:39.7748053Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T12:40:39.7748509Z     
2025-01-10T12:40:39.7748840Z         actual = calculate_sobolev_line_opacity(
2025-01-10T12:40:39.7749285Z             legacy_plasma.lines,
2025-01-10T12:40:39.7749896Z             legacy_plasma.level_number_density,
2025-01-10T12:40:39.7750358Z             legacy_plasma.time_explosion,
2025-01-10T12:40:39.7750811Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T12:40:39.7751233Z         )
2025-01-10T12:40:39.7751577Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.7752076Z >       pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.7752387Z 
2025-01-10T12:40:39.7752574Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-10T12:40:39.7753065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7753627Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7754177Z     ???
2025-01-10T12:40:39.7754558Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7754937Z 
2025-01-10T12:40:39.7755064Z >   ???
2025-01-10T12:40:39.7755472Z E   AssertionError: MultiIndex level [0] are different
2025-01-10T12:40:39.7755992Z E   
2025-01-10T12:40:39.7756630Z E   MultiIndex level [0] values are different (0.08897 %)
2025-01-10T12:40:39.7757231Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:39.7757689Z E          ...
2025-01-10T12:40:39.7758011Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:39.7758503Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:39.7759231Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:39.7759686Z E          ...
2025-01-10T12:40:39.7760002Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:39.7760538Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:39.7761054Z E   At positional index 480, first diff: 8 != 20
2025-01-10T12:40:39.7761351Z 
2025-01-10T12:40:39.7761501Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7761990Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:39.7762982Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:39.7764172Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:39.7765132Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T12:40:39.7765549Z 
2025-01-10T12:40:39.7766356Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.71s/it]
2025-01-10T12:40:39.7766882Z 
2025-01-10T12:40:39.7767338Z Packets:                                                                                   4030/? [00:12<00:00, 33805.12it/s][A
2025-01-10T12:40:39.7768049Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:39.7769451Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:39.7770756Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-10T12:40:39.7771178Z 
2025-01-10T12:40:39.7771600Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22eecb6240>
2025-01-10T12:40:39.7772645Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22eeaefda0>
2025-01-10T12:40:39.7773247Z 
2025-01-10T12:40:39.7773563Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-10T12:40:39.7774219Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T12:40:39.7774666Z     
2025-01-10T12:40:39.7774997Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-10T12:40:39.7775448Z             legacy_plasma.lines,
2025-01-10T12:40:39.7775847Z             legacy_plasma.level_number_density,
2025-01-10T12:40:39.7776455Z             legacy_plasma.time_explosion,
2025-01-10T12:40:39.7777100Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T12:40:39.7777541Z         )
2025-01-10T12:40:39.7777918Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-10T12:40:39.7778491Z         expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.7779034Z >       npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.7779374Z 
2025-01-10T12:40:39.7779586Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-10T12:40:39.7780162Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7780543Z 
2025-01-10T12:40:39.7781015Z args = (<function assert_allclose.<locals>.compare at 0x7f22db0e65c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7781757Z        [1., 1., .....,
2025-01-10T12:40:39.7782098Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7782481Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7782862Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T12:40:39.7783567Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.7784155Z 
2025-01-10T12:40:39.7784286Z     @wraps(func)
2025-01-10T12:40:39.7784600Z     def inner(*args, **kwds):
2025-01-10T12:40:39.7784958Z         with self._recreate_cm():
2025-01-10T12:40:39.7785339Z >           return func(*args, **kwds)
2025-01-10T12:40:39.7785734Z E           AssertionError: 
2025-01-10T12:40:39.7786499Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.7786931Z E           
2025-01-10T12:40:39.7787259Z E           Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:39.7787767Z E           Max absolute difference among violations: 0.99984222
2025-01-10T12:40:39.7788322Z E           Max relative difference among violations: 6337.12154973
2025-01-10T12:40:39.7788829Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7789296Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7789776Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.7790280Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7790786Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7791259Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.7791576Z 
2025-01-10T12:40:39.7791964Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.7792875Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-10T12:40:39.7793380Z 
2025-01-10T12:40:39.7793610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7794200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7794730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7795258Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7795843Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7796537Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7796944Z err_msg = None
2025-01-10T12:40:39.7797123Z 
2025-01-10T12:40:39.7797301Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7797737Z         if err_msg is None:
2025-01-10T12:40:39.7798123Z             if left.shape != right.shape:
2025-01-10T12:40:39.7798537Z                 raise_assert_detail(
2025-01-10T12:40:39.7799024Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7799510Z                 )
2025-01-10T12:40:39.7799798Z     
2025-01-10T12:40:39.7800056Z             diff = 0
2025-01-10T12:40:39.7800418Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7800862Z                 # count up differences
2025-01-10T12:40:39.7801635Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7802277Z                     diff += 1
2025-01-10T12:40:39.7802660Z     
2025-01-10T12:40:39.7802989Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7803545Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7804268Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7804925Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7805377Z E           
2025-01-10T12:40:39.7805836Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7806786Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7807841Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7808448Z 
2025-01-10T12:40:39.7808939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7809775Z 
2025-01-10T12:40:39.7810058Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7810478Z 
2025-01-10T12:40:39.7810851Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705b740>
2025-01-10T12:40:39.7811631Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7812157Z attr = 'lines'
2025-01-10T12:40:39.7812325Z 
2025-01-10T12:40:39.7812552Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7813127Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7813645Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7814041Z         try:
2025-01-10T12:40:39.7814486Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7815046Z         except KeyError:
2025-01-10T12:40:39.7815546Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7816262Z     
2025-01-10T12:40:39.7816596Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7817036Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7817475Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7817985Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7818499Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7818907Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7819368Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7819819Z             else:
2025-01-10T12:40:39.7820170Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.7820623Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.7820926Z 
2025-01-10T12:40:39.7821128Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.7821647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7822210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7822689Z     ???
2025-01-10T12:40:39.7823018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7823332Z 
2025-01-10T12:40:39.7823450Z >   ???
2025-01-10T12:40:39.7823794Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.7824231Z E   
2025-01-10T12:40:39.7824575Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.7825129Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7825618Z E          ...
2025-01-10T12:40:39.7826396Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7826996Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7827606Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7828112Z E          ...
2025-01-10T12:40:39.7828465Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7828977Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7829507Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.7829840Z 
2025-01-10T12:40:39.7829993Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7830634Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-10T12:40:39.7831171Z 
2025-01-10T12:40:39.7831553Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058c50>
2025-01-10T12:40:39.7832371Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7832928Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.7833172Z 
2025-01-10T12:40:39.7833402Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7833943Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7834393Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7834737Z         try:
2025-01-10T12:40:39.7835123Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7835792Z         except KeyError:
2025-01-10T12:40:39.7836411Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7836885Z     
2025-01-10T12:40:39.7837213Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7837673Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7838166Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7838718Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7839277Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7839732Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7840206Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7840545Z 
2025-01-10T12:40:39.7840757Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7841301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7841647Z 
2025-01-10T12:40:39.7841881Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.7842403Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.7842849Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7843313Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.7843776Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.7844266Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.7844695Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7845129Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.7845504Z err_msg = None
2025-01-10T12:40:39.7845674Z 
2025-01-10T12:40:39.7845853Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7846471Z         if err_msg is None:
2025-01-10T12:40:39.7846841Z             if left.shape != right.shape:
2025-01-10T12:40:39.7847245Z                 raise_assert_detail(
2025-01-10T12:40:39.7847733Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7848246Z                 )
2025-01-10T12:40:39.7848576Z     
2025-01-10T12:40:39.7848872Z             diff = 0
2025-01-10T12:40:39.7849285Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7849794Z                 # count up differences
2025-01-10T12:40:39.7850411Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7850987Z                     diff += 1
2025-01-10T12:40:39.7851335Z     
2025-01-10T12:40:39.7851819Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7852351Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7853021Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7853644Z E           AssertionError: Series are different
2025-01-10T12:40:39.7854080Z E           
2025-01-10T12:40:39.7854413Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.7855333Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.7856896Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7858190Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7859047Z 
2025-01-10T12:40:39.7859613Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7860804Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-10T12:40:39.7861373Z 
2025-01-10T12:40:39.7861817Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70581a0>
2025-01-10T12:40:39.7862710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7863292Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.7863558Z 
2025-01-10T12:40:39.7863805Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7864381Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7864856Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7865216Z         try:
2025-01-10T12:40:39.7865615Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7866305Z         except KeyError:
2025-01-10T12:40:39.7866737Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7867195Z     
2025-01-10T12:40:39.7867476Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7867870Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7868290Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7868770Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7869250Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7869636Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7870081Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7870387Z 
2025-01-10T12:40:39.7870594Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7871143Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7871514Z 
2025-01-10T12:40:39.7871766Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.7872330Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.7872871Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.7873383Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.7874126Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.7874676Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.7875129Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.7875588Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.7875986Z err_msg = None
2025-01-10T12:40:39.7876334Z 
2025-01-10T12:40:39.7876527Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7876984Z         if err_msg is None:
2025-01-10T12:40:39.7877376Z             if left.shape != right.shape:
2025-01-10T12:40:39.7877810Z                 raise_assert_detail(
2025-01-10T12:40:39.7878300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7878777Z                 )
2025-01-10T12:40:39.7879063Z     
2025-01-10T12:40:39.7879322Z             diff = 0
2025-01-10T12:40:39.7879685Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7880138Z                 # count up differences
2025-01-10T12:40:39.7880673Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7881218Z                     diff += 1
2025-01-10T12:40:39.7881552Z     
2025-01-10T12:40:39.7881829Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7882301Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7883200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7883880Z E           AssertionError: Series are different
2025-01-10T12:40:39.7884348Z E           
2025-01-10T12:40:39.7884724Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.7885794Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.7887400Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.7888854Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.7889645Z 
2025-01-10T12:40:39.7890150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7891094Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-10T12:40:39.7891541Z 
2025-01-10T12:40:39.7891753Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7892304Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7892801Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7893294Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7893836Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7894332Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7894988Z err_msg = None
2025-01-10T12:40:39.7895217Z 
2025-01-10T12:40:39.7895421Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7895921Z         if err_msg is None:
2025-01-10T12:40:39.7896530Z             if left.shape != right.shape:
2025-01-10T12:40:39.7897012Z                 raise_assert_detail(
2025-01-10T12:40:39.7897573Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7898108Z                 )
2025-01-10T12:40:39.7898405Z     
2025-01-10T12:40:39.7898670Z             diff = 0
2025-01-10T12:40:39.7899049Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7899516Z                 # count up differences
2025-01-10T12:40:39.7900076Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7900644Z                     diff += 1
2025-01-10T12:40:39.7900989Z     
2025-01-10T12:40:39.7901287Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7901784Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7902399Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7902997Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7903416Z E           
2025-01-10T12:40:39.7903754Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7904706Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7905702Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7906518Z 
2025-01-10T12:40:39.7907104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7907834Z 
2025-01-10T12:40:39.7908157Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7908646Z 
2025-01-10T12:40:39.7909079Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705a5d0>
2025-01-10T12:40:39.7910022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>, attr = 'nu'
2025-01-10T12:40:39.7910531Z 
2025-01-10T12:40:39.7910770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7911346Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7911821Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7912185Z         try:
2025-01-10T12:40:39.7912588Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7913121Z         except KeyError:
2025-01-10T12:40:39.7913558Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7914017Z     
2025-01-10T12:40:39.7914304Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7914701Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7915118Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7915606Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7916263Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7916658Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7917099Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7917404Z 
2025-01-10T12:40:39.7917613Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7918139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7918781Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7919550Z     ???
2025-01-10T12:40:39.7919947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7920321Z 
2025-01-10T12:40:39.7920457Z >   ???
2025-01-10T12:40:39.7920866Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.7921387Z E   
2025-01-10T12:40:39.7921760Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.7922312Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7922766Z E          ...
2025-01-10T12:40:39.7923088Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7923592Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7924138Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7924587Z E          ...
2025-01-10T12:40:39.7924908Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7925384Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7925880Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.7926345Z 
2025-01-10T12:40:39.7926498Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7927070Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-10T12:40:39.7927552Z 
2025-01-10T12:40:39.7927762Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7928501Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7928997Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7929557Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7930485Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7931298Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7931995Z err_msg = None
2025-01-10T12:40:39.7932265Z 
2025-01-10T12:40:39.7932615Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7933260Z         if err_msg is None:
2025-01-10T12:40:39.7933852Z             if left.shape != right.shape:
2025-01-10T12:40:39.7949147Z                 raise_assert_detail(
2025-01-10T12:40:39.7949681Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7950201Z                 )
2025-01-10T12:40:39.7950498Z     
2025-01-10T12:40:39.7950762Z             diff = 0
2025-01-10T12:40:39.7951137Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7951585Z                 # count up differences
2025-01-10T12:40:39.7952120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7952667Z                     diff += 1
2025-01-10T12:40:39.7953046Z     
2025-01-10T12:40:39.7953380Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7953955Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7954680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7955367Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7955827Z E           
2025-01-10T12:40:39.7956370Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7957172Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7958425Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7959041Z 
2025-01-10T12:40:39.7959560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7960246Z 
2025-01-10T12:40:39.7960536Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7960956Z 
2025-01-10T12:40:39.7961326Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058680>
2025-01-10T12:40:39.7962109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7962642Z attr = 'wavelength_cm'
2025-01-10T12:40:39.7962846Z 
2025-01-10T12:40:39.7963074Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7963607Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7964110Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7964523Z         try:
2025-01-10T12:40:39.7965000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7965574Z         except KeyError:
2025-01-10T12:40:39.7966223Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7966775Z     
2025-01-10T12:40:39.7967108Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7967569Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7968018Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7968727Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7969249Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7969657Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7970122Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7970455Z 
2025-01-10T12:40:39.7970669Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7971207Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7971777Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7972256Z     ???
2025-01-10T12:40:39.7972583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7972901Z 
2025-01-10T12:40:39.7973023Z >   ???
2025-01-10T12:40:39.7973374Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.7973817Z E   
2025-01-10T12:40:39.7974187Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.7974704Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7975128Z E          ...
2025-01-10T12:40:39.7975435Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7975920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7976688Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7977190Z E          ...
2025-01-10T12:40:39.7977548Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7978106Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7978691Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.7979048Z 
2025-01-10T12:40:39.7979214Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7979804Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-10T12:40:39.7980296Z 
2025-01-10T12:40:39.7980516Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7981103Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7981625Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7982151Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7982731Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7983231Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7983802Z err_msg = None
2025-01-10T12:40:39.7983985Z 
2025-01-10T12:40:39.7984175Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7984614Z         if err_msg is None:
2025-01-10T12:40:39.7984991Z             if left.shape != right.shape:
2025-01-10T12:40:39.7985404Z                 raise_assert_detail(
2025-01-10T12:40:39.7985889Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7986838Z                 )
2025-01-10T12:40:39.7987098Z     
2025-01-10T12:40:39.7987316Z             diff = 0
2025-01-10T12:40:39.7987629Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7988004Z                 # count up differences
2025-01-10T12:40:39.7988536Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7989318Z                     diff += 1
2025-01-10T12:40:39.7989758Z     
2025-01-10T12:40:39.7990131Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7990577Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7991103Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7991608Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7991961Z E           
2025-01-10T12:40:39.7992247Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7993065Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7993883Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7994347Z 
2025-01-10T12:40:39.7994769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7995292Z 
2025-01-10T12:40:39.7995516Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7995859Z 
2025-01-10T12:40:39.7996372Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058cb0>
2025-01-10T12:40:39.7997073Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>, attr = 'f_lu'
2025-01-10T12:40:39.7997464Z 
2025-01-10T12:40:39.7997647Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7998114Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7998450Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7998681Z         try:
2025-01-10T12:40:39.7998944Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7999266Z         except KeyError:
2025-01-10T12:40:39.7999547Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7999850Z     
2025-01-10T12:40:39.8000037Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8000295Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8000572Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8000891Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8001206Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8001458Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8001747Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8001953Z 
2025-01-10T12:40:39.8002092Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8002427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8002923Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8003241Z     ???
2025-01-10T12:40:39.8003458Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8003667Z 
2025-01-10T12:40:39.8003748Z >   ???
2025-01-10T12:40:39.8003979Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8004274Z E   
2025-01-10T12:40:39.8004504Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8004845Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8005122Z E          ...
2025-01-10T12:40:39.8005328Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8005646Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8005990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8006383Z E          ...
2025-01-10T12:40:39.8006582Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8006892Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8007215Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8007414Z 
2025-01-10T12:40:39.8007511Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8007950Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-10T12:40:39.8008482Z 
2025-01-10T12:40:39.8008701Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8009215Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8009543Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8009874Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8010234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8010548Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8010815Z err_msg = None
2025-01-10T12:40:39.8010925Z 
2025-01-10T12:40:39.8011046Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8011330Z         if err_msg is None:
2025-01-10T12:40:39.8011572Z             if left.shape != right.shape:
2025-01-10T12:40:39.8011834Z                 raise_assert_detail(
2025-01-10T12:40:39.8012141Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8012463Z                 )
2025-01-10T12:40:39.8012668Z     
2025-01-10T12:40:39.8012839Z             diff = 0
2025-01-10T12:40:39.8013073Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8013358Z                 # count up differences
2025-01-10T12:40:39.8013691Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8014031Z                     diff += 1
2025-01-10T12:40:39.8014241Z     
2025-01-10T12:40:39.8014424Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8014735Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8015137Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8015515Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8015786Z E           
2025-01-10T12:40:39.8016002Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8016585Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8017320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8017664Z 
2025-01-10T12:40:39.8017980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8018372Z 
2025-01-10T12:40:39.8018541Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8018803Z 
2025-01-10T12:40:39.8019028Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705bb30>
2025-01-10T12:40:39.8019512Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.8019840Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8019964Z 
2025-01-10T12:40:39.8020112Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8020445Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8020730Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8020950Z         try:
2025-01-10T12:40:39.8021202Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8021688Z         except KeyError:
2025-01-10T12:40:39.8021962Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8022262Z     
2025-01-10T12:40:39.8022445Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8022695Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8023080Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8023384Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8023696Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8023943Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8024230Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8024501Z             else:
2025-01-10T12:40:39.8024710Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8024993Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8025185Z 
2025-01-10T12:40:39.8025316Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8025640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8025988Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8026512Z     ???
2025-01-10T12:40:39.8026724Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8027045Z 
2025-01-10T12:40:39.8027174Z >   ???
2025-01-10T12:40:39.8027571Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8028065Z E   
2025-01-10T12:40:39.8028324Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8028651Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8028922Z E          ...
2025-01-10T12:40:39.8029119Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8029424Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8029762Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8030034Z E          ...
2025-01-10T12:40:39.8030228Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8030526Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8030839Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8031027Z 
2025-01-10T12:40:39.8031126Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8031479Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-10T12:40:39.8031767Z 
2025-01-10T12:40:39.8031900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8032250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8032569Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8032889Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8033408Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8033730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8033985Z err_msg = None
2025-01-10T12:40:39.8034093Z 
2025-01-10T12:40:39.8034211Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8034489Z         if err_msg is None:
2025-01-10T12:40:39.8034725Z             if left.shape != right.shape:
2025-01-10T12:40:39.8034988Z                 raise_assert_detail(
2025-01-10T12:40:39.8035291Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8035594Z                 )
2025-01-10T12:40:39.8035778Z     
2025-01-10T12:40:39.8035946Z             diff = 0
2025-01-10T12:40:39.8036400Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8036687Z                 # count up differences
2025-01-10T12:40:39.8037028Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8037368Z                     diff += 1
2025-01-10T12:40:39.8037578Z     
2025-01-10T12:40:39.8037760Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8038065Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8038457Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8038968Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8039237Z E           
2025-01-10T12:40:39.8039456Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8039916Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8040512Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8040854Z 
2025-01-10T12:40:39.8041164Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8041557Z 
2025-01-10T12:40:39.8041729Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8041986Z 
2025-01-10T12:40:39.8042209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705ba70>
2025-01-10T12:40:39.8042688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.8043020Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8043151Z 
2025-01-10T12:40:39.8043292Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8043629Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8043921Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8044146Z         try:
2025-01-10T12:40:39.8044399Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8044708Z         except KeyError:
2025-01-10T12:40:39.8044985Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8045285Z     
2025-01-10T12:40:39.8045468Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8045914Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8046509Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8047024Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8047411Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8047661Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8047945Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8048348Z             else:
2025-01-10T12:40:39.8048566Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8048849Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8049036Z 
2025-01-10T12:40:39.8049169Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8049494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8049849Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8050152Z     ???
2025-01-10T12:40:39.8050362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8050565Z 
2025-01-10T12:40:39.8050636Z >   ???
2025-01-10T12:40:39.8050859Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8051138Z E   
2025-01-10T12:40:39.8051360Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8051682Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8051961Z E          ...
2025-01-10T12:40:39.8052164Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8052472Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8052800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8053083Z E          ...
2025-01-10T12:40:39.8053279Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8053699Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8054012Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8054196Z 
2025-01-10T12:40:39.8054294Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8054640Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-10T12:40:39.8054919Z 
2025-01-10T12:40:39.8055051Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8055401Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8055719Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8056029Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8056576Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8056893Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8057150Z err_msg = None
2025-01-10T12:40:39.8057262Z 
2025-01-10T12:40:39.8057375Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8057648Z         if err_msg is None:
2025-01-10T12:40:39.8057881Z             if left.shape != right.shape:
2025-01-10T12:40:39.8058146Z                 raise_assert_detail(
2025-01-10T12:40:39.8058456Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8058767Z                 )
2025-01-10T12:40:39.8058953Z     
2025-01-10T12:40:39.8059124Z             diff = 0
2025-01-10T12:40:39.8059360Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8059644Z                 # count up differences
2025-01-10T12:40:39.8059978Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8060316Z                     diff += 1
2025-01-10T12:40:39.8060528Z     
2025-01-10T12:40:39.8060716Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8061021Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8061415Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8061789Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8062058Z E           
2025-01-10T12:40:39.8062276Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8062848Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8063576Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8064227Z 
2025-01-10T12:40:39.8064762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8065375Z 
2025-01-10T12:40:39.8065559Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8065817Z 
2025-01-10T12:40:39.8066047Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705a750>
2025-01-10T12:40:39.8066721Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.8067051Z attr = 'j_blues'
2025-01-10T12:40:39.8067174Z 
2025-01-10T12:40:39.8067314Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8067660Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8067958Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8068320Z         try:
2025-01-10T12:40:39.8068569Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8068867Z         except KeyError:
2025-01-10T12:40:39.8069136Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8069428Z     
2025-01-10T12:40:39.8069612Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8069860Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8070125Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8070427Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8070735Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8070981Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8071260Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8071529Z             else:
2025-01-10T12:40:39.8071741Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8072023Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8072223Z 
2025-01-10T12:40:39.8072351Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8072671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8073021Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8073323Z     ???
2025-01-10T12:40:39.8073529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8073731Z 
2025-01-10T12:40:39.8073803Z >   ???
2025-01-10T12:40:39.8074031Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8074316Z E   
2025-01-10T12:40:39.8074541Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8074864Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8075134Z E          ...
2025-01-10T12:40:39.8075332Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8075637Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8075970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8076439Z E          ...
2025-01-10T12:40:39.8076646Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8076961Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8077285Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8077477Z 
2025-01-10T12:40:39.8077571Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8077928Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-10T12:40:39.8078210Z 
2025-01-10T12:40:39.8078467Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8078823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8079139Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8079457Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8079812Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8080129Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8080381Z err_msg = None
2025-01-10T12:40:39.8080490Z 
2025-01-10T12:40:39.8080611Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8080888Z         if err_msg is None:
2025-01-10T12:40:39.8081128Z             if left.shape != right.shape:
2025-01-10T12:40:39.8081394Z                 raise_assert_detail(
2025-01-10T12:40:39.8081707Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8082035Z                 )
2025-01-10T12:40:39.8082364Z     
2025-01-10T12:40:39.8082662Z             diff = 0
2025-01-10T12:40:39.8083056Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8083531Z                 # count up differences
2025-01-10T12:40:39.8084110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8084457Z                     diff += 1
2025-01-10T12:40:39.8084671Z     
2025-01-10T12:40:39.8084854Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8085168Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8085560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8085935Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8086323Z E           
2025-01-10T12:40:39.8086550Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8087003Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8087605Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8087941Z 
2025-01-10T12:40:39.8088260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8088648Z 
2025-01-10T12:40:39.8088832Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8089091Z 
2025-01-10T12:40:39.8089316Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058e00>
2025-01-10T12:40:39.8089797Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8090125Z attr = 'lines'
2025-01-10T12:40:39.8090239Z 
2025-01-10T12:40:39.8090386Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8090728Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8091016Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8091239Z         try:
2025-01-10T12:40:39.8091488Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8091796Z         except KeyError:
2025-01-10T12:40:39.8092080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8092373Z     
2025-01-10T12:40:39.8092556Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8092952Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8093220Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8093526Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8093832Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8094077Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8094360Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8094633Z             else:
2025-01-10T12:40:39.8094844Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8095127Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8095318Z 
2025-01-10T12:40:39.8095449Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8095771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8096223Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8096523Z     ???
2025-01-10T12:40:39.8096732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8096932Z 
2025-01-10T12:40:39.8097007Z >   ???
2025-01-10T12:40:39.8097229Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8097509Z E   
2025-01-10T12:40:39.8097729Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8098082Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8098474Z E          ...
2025-01-10T12:40:39.8098673Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8098984Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8099312Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8099584Z E          ...
2025-01-10T12:40:39.8099836Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8100138Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8100454Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8100643Z 
2025-01-10T12:40:39.8100745Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8101374Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-10T12:40:39.8101791Z 
2025-01-10T12:40:39.8102022Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7059730>
2025-01-10T12:40:39.8102506Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8102859Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8103018Z 
2025-01-10T12:40:39.8103159Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8103499Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8103787Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8104008Z         try:
2025-01-10T12:40:39.8104255Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8104566Z         except KeyError:
2025-01-10T12:40:39.8104845Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8105138Z     
2025-01-10T12:40:39.8105321Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8105573Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8105847Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8106354Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8106676Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8106923Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8107208Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8107400Z 
2025-01-10T12:40:39.8107529Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8107855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8108063Z 
2025-01-10T12:40:39.8108204Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8108519Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8108933Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8109217Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8109516Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8109837Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8110121Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8110400Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8110637Z err_msg = None
2025-01-10T12:40:39.8110750Z 
2025-01-10T12:40:39.8110863Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8111140Z         if err_msg is None:
2025-01-10T12:40:39.8111378Z             if left.shape != right.shape:
2025-01-10T12:40:39.8111640Z                 raise_assert_detail(
2025-01-10T12:40:39.8111951Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8112263Z                 )
2025-01-10T12:40:39.8112448Z     
2025-01-10T12:40:39.8112617Z             diff = 0
2025-01-10T12:40:39.8112852Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8113137Z                 # count up differences
2025-01-10T12:40:39.8113475Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8113938Z                     diff += 1
2025-01-10T12:40:39.8114150Z     
2025-01-10T12:40:39.8114330Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8114641Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8115036Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8115408Z E           AssertionError: Series are different
2025-01-10T12:40:39.8115669Z E           
2025-01-10T12:40:39.8115880Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8116637Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8117411Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8118140Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8118543Z 
2025-01-10T12:40:39.8118860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8119461Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-10T12:40:39.8119764Z 
2025-01-10T12:40:39.8120013Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705b2c0>
2025-01-10T12:40:39.8120877Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8121464Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8121697Z 
2025-01-10T12:40:39.8121844Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8122188Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8122473Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8122839Z         try:
2025-01-10T12:40:39.8123096Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8123403Z         except KeyError:
2025-01-10T12:40:39.8123678Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8123972Z     
2025-01-10T12:40:39.8124154Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8124410Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8124674Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8124978Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8125285Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8125530Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8125812Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8126005Z 
2025-01-10T12:40:39.8126255Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8126585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8126795Z 
2025-01-10T12:40:39.8126932Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8127246Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8127520Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8127808Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8128228Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8128543Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8128817Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8129096Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8129332Z err_msg = None
2025-01-10T12:40:39.8129441Z 
2025-01-10T12:40:39.8129557Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8129827Z         if err_msg is None:
2025-01-10T12:40:39.8130066Z             if left.shape != right.shape:
2025-01-10T12:40:39.8130322Z                 raise_assert_detail(
2025-01-10T12:40:39.8130627Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8130931Z                 )
2025-01-10T12:40:39.8131115Z     
2025-01-10T12:40:39.8131281Z             diff = 0
2025-01-10T12:40:39.8131515Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8131803Z                 # count up differences
2025-01-10T12:40:39.8132135Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8132475Z                     diff += 1
2025-01-10T12:40:39.8132691Z     
2025-01-10T12:40:39.8132874Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8133175Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8133567Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8133938Z E           AssertionError: Series are different
2025-01-10T12:40:39.8134197Z E           
2025-01-10T12:40:39.8134402Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8134950Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8135883Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8136798Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8137253Z 
2025-01-10T12:40:39.8137705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8138501Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-10T12:40:39.8138778Z 
2025-01-10T12:40:39.8138913Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8139268Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8139585Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8139898Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8140249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8140716Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8140977Z err_msg = None
2025-01-10T12:40:39.8141086Z 
2025-01-10T12:40:39.8141203Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8141473Z         if err_msg is None:
2025-01-10T12:40:39.8141706Z             if left.shape != right.shape:
2025-01-10T12:40:39.8141965Z                 raise_assert_detail(
2025-01-10T12:40:39.8142273Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8142576Z                 )
2025-01-10T12:40:39.8142759Z     
2025-01-10T12:40:39.8142931Z             diff = 0
2025-01-10T12:40:39.8143165Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8143448Z                 # count up differences
2025-01-10T12:40:39.8143783Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8144123Z                     diff += 1
2025-01-10T12:40:39.8144337Z     
2025-01-10T12:40:39.8144523Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8144827Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8145227Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8145600Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8145871Z E           
2025-01-10T12:40:39.8146278Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8146750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8147345Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8147695Z 
2025-01-10T12:40:39.8148004Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8148395Z 
2025-01-10T12:40:39.8148569Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8148830Z 
2025-01-10T12:40:39.8149058Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705b770>
2025-01-10T12:40:39.8149703Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>, attr = 'nu'
2025-01-10T12:40:39.8149996Z 
2025-01-10T12:40:39.8150143Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8150486Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8150770Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8150995Z         try:
2025-01-10T12:40:39.8151248Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8151557Z         except KeyError:
2025-01-10T12:40:39.8151834Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8152127Z     
2025-01-10T12:40:39.8152315Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8152567Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8152831Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8153134Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8153439Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8153693Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8153975Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8154175Z 
2025-01-10T12:40:39.8154300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8154622Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8155092Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8155398Z     ???
2025-01-10T12:40:39.8155604Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8155807Z 
2025-01-10T12:40:39.8155879Z >   ???
2025-01-10T12:40:39.8156281Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8156781Z E   
2025-01-10T12:40:39.8157146Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8157482Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8157755Z E          ...
2025-01-10T12:40:39.8157961Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8158265Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8158594Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8158864Z E          ...
2025-01-10T12:40:39.8159060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8159363Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8159678Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8159868Z 
2025-01-10T12:40:39.8159962Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8160314Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-10T12:40:39.8160604Z 
2025-01-10T12:40:39.8160736Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8161086Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8161404Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8161720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8162079Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8162403Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8162665Z err_msg = None
2025-01-10T12:40:39.8162775Z 
2025-01-10T12:40:39.8162897Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8163172Z         if err_msg is None:
2025-01-10T12:40:39.8163409Z             if left.shape != right.shape:
2025-01-10T12:40:39.8163671Z                 raise_assert_detail(
2025-01-10T12:40:39.8163983Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8164289Z                 )
2025-01-10T12:40:39.8164474Z     
2025-01-10T12:40:39.8164643Z             diff = 0
2025-01-10T12:40:39.8165013Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8165301Z                 # count up differences
2025-01-10T12:40:39.8165634Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8165975Z                     diff += 1
2025-01-10T12:40:39.8166308Z     
2025-01-10T12:40:39.8166499Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8166805Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8167196Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8167575Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8167843Z E           
2025-01-10T12:40:39.8168062Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8168518Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8169129Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8169587Z 
2025-01-10T12:40:39.8169904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8170289Z 
2025-01-10T12:40:39.8170463Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8170720Z 
2025-01-10T12:40:39.8170946Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70597f0>
2025-01-10T12:40:39.8171430Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8171767Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8171900Z 
2025-01-10T12:40:39.8172039Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8172381Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8172676Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8172906Z         try:
2025-01-10T12:40:39.8173155Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8173467Z         except KeyError:
2025-01-10T12:40:39.8173748Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8174044Z     
2025-01-10T12:40:39.8174229Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8174481Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8174744Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8175214Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8175761Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8176317Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8176750Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8176952Z 
2025-01-10T12:40:39.8177087Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8177419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8177781Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8178088Z     ???
2025-01-10T12:40:39.8178297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8178500Z 
2025-01-10T12:40:39.8178572Z >   ???
2025-01-10T12:40:39.8178792Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8179399Z E   
2025-01-10T12:40:39.8179722Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8180131Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8180715Z E          ...
2025-01-10T12:40:39.8181016Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8181482Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8181926Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8182290Z E          ...
2025-01-10T12:40:39.8182647Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8183048Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8183459Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8183778Z 
2025-01-10T12:40:39.8183904Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8184340Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-10T12:40:39.8196952Z 
2025-01-10T12:40:39.8197257Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8197897Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8198474Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8198824Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8199197Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8199718Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8199985Z err_msg = None
2025-01-10T12:40:39.8200102Z 
2025-01-10T12:40:39.8200221Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8200507Z         if err_msg is None:
2025-01-10T12:40:39.8200747Z             if left.shape != right.shape:
2025-01-10T12:40:39.8200835Z                 raise_assert_detail(
2025-01-10T12:40:39.8200991Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8201066Z                 )
2025-01-10T12:40:39.8201141Z     
2025-01-10T12:40:39.8201221Z             diff = 0
2025-01-10T12:40:39.8201342Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8201435Z                 # count up differences
2025-01-10T12:40:39.8201615Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8201696Z                     diff += 1
2025-01-10T12:40:39.8201781Z     
2025-01-10T12:40:39.8201874Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8202021Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8202198Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8202320Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8202401Z E           
2025-01-10T12:40:39.8202516Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8202784Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8203040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8203048Z 
2025-01-10T12:40:39.8203374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8203378Z 
2025-01-10T12:40:39.8203562Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8203567Z 
2025-01-10T12:40:39.8203798Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70594f0>
2025-01-10T12:40:39.8204130Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>, attr = 'f_lu'
2025-01-10T12:40:39.8204135Z 
2025-01-10T12:40:39.8204289Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8204418Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8204508Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8204592Z         try:
2025-01-10T12:40:39.8204743Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8204828Z         except KeyError:
2025-01-10T12:40:39.8204977Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8205050Z     
2025-01-10T12:40:39.8205147Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8205241Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8205333Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8205466Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8205560Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8205651Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8205767Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8205771Z 
2025-01-10T12:40:39.8205900Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8206027Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8206416Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8206496Z     ???
2025-01-10T12:40:39.8206618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8206622Z 
2025-01-10T12:40:39.8206695Z >   ???
2025-01-10T12:40:39.8206830Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8206902Z E   
2025-01-10T12:40:39.8207038Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8207154Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8207241Z E          ...
2025-01-10T12:40:39.8207331Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8207466Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8207579Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8207663Z E          ...
2025-01-10T12:40:39.8207749Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8207885Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8207997Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8208001Z 
2025-01-10T12:40:39.8208094Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8208299Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-10T12:40:39.8208303Z 
2025-01-10T12:40:39.8208436Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8208580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8208679Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8208821Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8208955Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8209055Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8209138Z err_msg = None
2025-01-10T12:40:39.8209142Z 
2025-01-10T12:40:39.8209256Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8209344Z         if err_msg is None:
2025-01-10T12:40:39.8209443Z             if left.shape != right.shape:
2025-01-10T12:40:39.8209536Z                 raise_assert_detail(
2025-01-10T12:40:39.8209685Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8209764Z                 )
2025-01-10T12:40:39.8209836Z     
2025-01-10T12:40:39.8210033Z             diff = 0
2025-01-10T12:40:39.8210150Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8210248Z                 # count up differences
2025-01-10T12:40:39.8210420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8210505Z                     diff += 1
2025-01-10T12:40:39.8210582Z     
2025-01-10T12:40:39.8210676Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8210819Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8210991Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8211109Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8211184Z E           
2025-01-10T12:40:39.8211301Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8211567Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8211830Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8211927Z 
2025-01-10T12:40:39.8212394Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8212402Z 
2025-01-10T12:40:39.8212694Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8212701Z 
2025-01-10T12:40:39.8213092Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705ae70>
2025-01-10T12:40:39.8213382Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8213474Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8213479Z 
2025-01-10T12:40:39.8213625Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8213747Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8213839Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8213918Z         try:
2025-01-10T12:40:39.8214065Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8214147Z         except KeyError:
2025-01-10T12:40:39.8214291Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8214362Z     
2025-01-10T12:40:39.8214454Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8214549Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8214644Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8214780Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8214875Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8214972Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8215085Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8215164Z             else:
2025-01-10T12:40:39.8215261Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8215373Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8215381Z 
2025-01-10T12:40:39.8215510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8215634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8215782Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8215861Z     ???
2025-01-10T12:40:39.8215972Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8215977Z 
2025-01-10T12:40:39.8216176Z >   ???
2025-01-10T12:40:39.8216309Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8216515Z E   
2025-01-10T12:40:39.8216654Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8216768Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8216846Z E          ...
2025-01-10T12:40:39.8216935Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8217070Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8217192Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8217271Z E          ...
2025-01-10T12:40:39.8217359Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8217487Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8217593Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8217597Z 
2025-01-10T12:40:39.8217692Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8217890Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-10T12:40:39.8217899Z 
2025-01-10T12:40:39.8218025Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8218160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8218258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8218397Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8218677Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8218779Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8218856Z err_msg = None
2025-01-10T12:40:39.8218861Z 
2025-01-10T12:40:39.8218982Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8219071Z         if err_msg is None:
2025-01-10T12:40:39.8219168Z             if left.shape != right.shape:
2025-01-10T12:40:39.8219264Z                 raise_assert_detail(
2025-01-10T12:40:39.8219411Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8219491Z                 )
2025-01-10T12:40:39.8219563Z     
2025-01-10T12:40:39.8219644Z             diff = 0
2025-01-10T12:40:39.8219755Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8219848Z                 # count up differences
2025-01-10T12:40:39.8220021Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8220109Z                     diff += 1
2025-01-10T12:40:39.8220180Z     
2025-01-10T12:40:39.8220274Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8220410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8220584Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8220703Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8220779Z E           
2025-01-10T12:40:39.8220899Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8221155Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8221420Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8221426Z 
2025-01-10T12:40:39.8221743Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8221747Z 
2025-01-10T12:40:39.8222022Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8222027Z 
2025-01-10T12:40:39.8222258Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705ad50>
2025-01-10T12:40:39.8222429Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8222515Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8222523Z 
2025-01-10T12:40:39.8222662Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8222781Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8222867Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8222946Z         try:
2025-01-10T12:40:39.8223090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8223172Z         except KeyError:
2025-01-10T12:40:39.8223316Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8223388Z     
2025-01-10T12:40:39.8223482Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8223581Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8223675Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8223808Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8223901Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8223993Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8224192Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8224266Z             else:
2025-01-10T12:40:39.8224362Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8224479Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8224483Z 
2025-01-10T12:40:39.8224614Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8224727Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8224878Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8224951Z     ???
2025-01-10T12:40:39.8225073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8225078Z 
2025-01-10T12:40:39.8225149Z >   ???
2025-01-10T12:40:39.8225281Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8225352Z E   
2025-01-10T12:40:39.8225485Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8225601Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8225679Z E          ...
2025-01-10T12:40:39.8225770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8225896Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8226013Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8226259Z E          ...
2025-01-10T12:40:39.8226393Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8226523Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8226639Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8226643Z 
2025-01-10T12:40:39.8226733Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8226929Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-10T12:40:39.8226932Z 
2025-01-10T12:40:39.8227062Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8227199Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8227298Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8227429Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8227554Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8227647Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8227728Z err_msg = None
2025-01-10T12:40:39.8227732Z 
2025-01-10T12:40:39.8227973Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8228067Z         if err_msg is None:
2025-01-10T12:40:39.8228162Z             if left.shape != right.shape:
2025-01-10T12:40:39.8228257Z                 raise_assert_detail(
2025-01-10T12:40:39.8228401Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8228483Z                 )
2025-01-10T12:40:39.8228559Z     
2025-01-10T12:40:39.8228634Z             diff = 0
2025-01-10T12:40:39.8228750Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8228845Z                 # count up differences
2025-01-10T12:40:39.8229029Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8229109Z                     diff += 1
2025-01-10T12:40:39.8229184Z     
2025-01-10T12:40:39.8229273Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8229413Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8229587Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8229705Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8229780Z E           
2025-01-10T12:40:39.8229897Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8230156Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8230529Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8230541Z 
2025-01-10T12:40:39.8230854Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8230859Z 
2025-01-10T12:40:39.8231025Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8231036Z 
2025-01-10T12:40:39.8231374Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058710>
2025-01-10T12:40:39.8231687Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8231819Z attr = 'j_blues'
2025-01-10T12:40:39.8231825Z 
2025-01-10T12:40:39.8232061Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8232264Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8232377Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8232453Z         try:
2025-01-10T12:40:39.8232600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8232688Z         except KeyError:
2025-01-10T12:40:39.8232831Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8232907Z     
2025-01-10T12:40:39.8233000Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8233102Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8233191Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8233326Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8233416Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8233512Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8233622Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8233703Z             else:
2025-01-10T12:40:39.8233797Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8233907Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8233911Z 
2025-01-10T12:40:39.8234036Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8234244Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8234396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8234475Z     ???
2025-01-10T12:40:39.8234591Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8234595Z 
2025-01-10T12:40:39.8234666Z >   ???
2025-01-10T12:40:39.8234803Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8234874Z E   
2025-01-10T12:40:39.8235006Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8235116Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8235195Z E          ...
2025-01-10T12:40:39.8235282Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8235414Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8235526Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8235605Z E          ...
2025-01-10T12:40:39.8235697Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8235828Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8235936Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8235940Z 
2025-01-10T12:40:39.8236031Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8236472Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-10T12:40:39.8236606Z 
2025-01-10T12:40:39.8236744Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8236878Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8236976Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8237114Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8237245Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8237347Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8237428Z err_msg = None
2025-01-10T12:40:39.8237432Z 
2025-01-10T12:40:39.8237542Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8237625Z         if err_msg is None:
2025-01-10T12:40:39.8237720Z             if left.shape != right.shape:
2025-01-10T12:40:39.8237815Z                 raise_assert_detail(
2025-01-10T12:40:39.8237958Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8238038Z                 )
2025-01-10T12:40:39.8238109Z     
2025-01-10T12:40:39.8238188Z             diff = 0
2025-01-10T12:40:39.8238299Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8238391Z                 # count up differences
2025-01-10T12:40:39.8238561Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8238651Z                     diff += 1
2025-01-10T12:40:39.8238727Z     
2025-01-10T12:40:39.8238815Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8238953Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8239121Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8239237Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8239316Z E           
2025-01-10T12:40:39.8239430Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8239684Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8240060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8240065Z 
2025-01-10T12:40:39.8240373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8240382Z 
2025-01-10T12:40:39.8240548Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8240552Z 
2025-01-10T12:40:39.8240779Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f71c68d0>
2025-01-10T12:40:39.8240943Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8241025Z attr = 'lines'
2025-01-10T12:40:39.8241028Z 
2025-01-10T12:40:39.8241168Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8241282Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8241376Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8241449Z         try:
2025-01-10T12:40:39.8241592Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8241673Z         except KeyError:
2025-01-10T12:40:39.8241815Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8241888Z     
2025-01-10T12:40:39.8242081Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8242175Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8242267Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8242398Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8242490Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8242578Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8242694Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8242768Z             else:
2025-01-10T12:40:39.8242861Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8242973Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8242977Z 
2025-01-10T12:40:39.8243102Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8243218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8243362Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8243445Z     ???
2025-01-10T12:40:39.8243556Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8243560Z 
2025-01-10T12:40:39.8243639Z >   ???
2025-01-10T12:40:39.8243765Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8243842Z E   
2025-01-10T12:40:39.8243973Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8244083Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8244161Z E          ...
2025-01-10T12:40:39.8244250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8244385Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8244497Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8244576Z E          ...
2025-01-10T12:40:39.8244662Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8244792Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8244901Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8244904Z 
2025-01-10T12:40:39.8245001Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8245206Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-10T12:40:39.8245218Z 
2025-01-10T12:40:39.8245436Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f71c7a40>
2025-01-10T12:40:39.8245605Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8245695Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8245699Z 
2025-01-10T12:40:39.8245923Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8246039Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8246235Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8246311Z         try:
2025-01-10T12:40:39.8246453Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8246541Z         except KeyError:
2025-01-10T12:40:39.8246683Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8246754Z     
2025-01-10T12:40:39.8246845Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8246944Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8247033Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8247166Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8247253Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8247346Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8247460Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8247464Z 
2025-01-10T12:40:39.8247595Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8247706Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8247710Z 
2025-01-10T12:40:39.8247849Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8248054Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8248175Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8248262Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8248399Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8248486Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8248590Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8248674Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8248756Z err_msg = None
2025-01-10T12:40:39.8248761Z 
2025-01-10T12:40:39.8248874Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8248956Z         if err_msg is None:
2025-01-10T12:40:39.8249056Z             if left.shape != right.shape:
2025-01-10T12:40:39.8249142Z                 raise_assert_detail(
2025-01-10T12:40:39.8249288Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8249371Z                 )
2025-01-10T12:40:39.8249508Z     
2025-01-10T12:40:39.8249651Z             diff = 0
2025-01-10T12:40:39.8249838Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8249991Z                 # count up differences
2025-01-10T12:40:39.8250278Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8250415Z                     diff += 1
2025-01-10T12:40:39.8250535Z     
2025-01-10T12:40:39.8250693Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8250840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8251015Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8251117Z E           AssertionError: Series are different
2025-01-10T12:40:39.8251197Z E           
2025-01-10T12:40:39.8251300Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8251677Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8252130Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8252458Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8252472Z 
2025-01-10T12:40:39.8252780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8252992Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-10T12:40:39.8252996Z 
2025-01-10T12:40:39.8253219Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f71c7b60>
2025-01-10T12:40:39.8253391Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8253484Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8253488Z 
2025-01-10T12:40:39.8253628Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8253748Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8253912Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8253992Z         try:
2025-01-10T12:40:39.8254131Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8254217Z         except KeyError:
2025-01-10T12:40:39.8254354Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8254434Z     
2025-01-10T12:40:39.8254521Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8254622Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8254709Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8254851Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8254937Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8255033Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8255143Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8255147Z 
2025-01-10T12:40:39.8255278Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8255402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8255406Z 
2025-01-10T12:40:39.8255539Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8255630Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8255743Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8255831Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8255968Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8256172Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8256280Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8256365Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8256445Z err_msg = None
2025-01-10T12:40:39.8256455Z 
2025-01-10T12:40:39.8256565Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8256657Z         if err_msg is None:
2025-01-10T12:40:39.8256751Z             if left.shape != right.shape:
2025-01-10T12:40:39.8256842Z                 raise_assert_detail(
2025-01-10T12:40:39.8256982Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8257056Z                 )
2025-01-10T12:40:39.8257125Z     
2025-01-10T12:40:39.8257204Z             diff = 0
2025-01-10T12:40:39.8257316Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8257408Z                 # count up differences
2025-01-10T12:40:39.8257704Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8257788Z                     diff += 1
2025-01-10T12:40:39.8257864Z     
2025-01-10T12:40:39.8257958Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8258097Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8258268Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8258381Z E           AssertionError: Series are different
2025-01-10T12:40:39.8258454Z E           
2025-01-10T12:40:39.8258560Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8258929Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8259295Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8259776Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8259781Z 
2025-01-10T12:40:39.8260094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8260278Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-10T12:40:39.8260282Z 
2025-01-10T12:40:39.8260412Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8260545Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8260650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8260786Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8260908Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8261010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8261089Z err_msg = None
2025-01-10T12:40:39.8261093Z 
2025-01-10T12:40:39.8261210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8261292Z         if err_msg is None:
2025-01-10T12:40:39.8261391Z             if left.shape != right.shape:
2025-01-10T12:40:39.8261474Z                 raise_assert_detail(
2025-01-10T12:40:39.8261619Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8261699Z                 )
2025-01-10T12:40:39.8261775Z     
2025-01-10T12:40:39.8261848Z             diff = 0
2025-01-10T12:40:39.8261965Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8262057Z                 # count up differences
2025-01-10T12:40:39.8262226Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8262311Z                     diff += 1
2025-01-10T12:40:39.8262382Z     
2025-01-10T12:40:39.8262473Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8262606Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8262868Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8262984Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8263063Z E           
2025-01-10T12:40:39.8263174Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8263434Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8263703Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8263708Z 
2025-01-10T12:40:39.8264007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8264011Z 
2025-01-10T12:40:39.8264183Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8264187Z 
2025-01-10T12:40:39.8264415Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ee720>
2025-01-10T12:40:39.8264712Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>, attr = 'nu'
2025-01-10T12:40:39.8264716Z 
2025-01-10T12:40:39.8264858Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8264974Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8265069Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8265144Z         try:
2025-01-10T12:40:39.8265288Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8265369Z         except KeyError:
2025-01-10T12:40:39.8265515Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8265588Z     
2025-01-10T12:40:39.8265678Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8265773Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8265866Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8266001Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8266270Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8266390Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8266503Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8266507Z 
2025-01-10T12:40:39.8266642Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8266754Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8266904Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8266977Z     ???
2025-01-10T12:40:39.8267096Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8267100Z 
2025-01-10T12:40:39.8267171Z >   ???
2025-01-10T12:40:39.8267302Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8267373Z E   
2025-01-10T12:40:39.8267504Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8267622Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8267702Z E          ...
2025-01-10T12:40:39.8267798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8267936Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8268054Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8268128Z E          ...
2025-01-10T12:40:39.8268218Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8268343Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8268578Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8268584Z 
2025-01-10T12:40:39.8268676Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8268875Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-10T12:40:39.8268879Z 
2025-01-10T12:40:39.8269010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8269142Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8269244Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8269376Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8269503Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8269598Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8269683Z err_msg = None
2025-01-10T12:40:39.8269687Z 
2025-01-10T12:40:39.8269801Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8269890Z         if err_msg is None:
2025-01-10T12:40:39.8269990Z             if left.shape != right.shape:
2025-01-10T12:40:39.8270078Z                 raise_assert_detail(
2025-01-10T12:40:39.8270227Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8270301Z                 )
2025-01-10T12:40:39.8270490Z     
2025-01-10T12:40:39.8270567Z             diff = 0
2025-01-10T12:40:39.8270684Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8270772Z                 # count up differences
2025-01-10T12:40:39.8270947Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8271029Z                     diff += 1
2025-01-10T12:40:39.8271105Z     
2025-01-10T12:40:39.8271193Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8271330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8271504Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8271622Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8271704Z E           
2025-01-10T12:40:39.8271815Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8272074Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8272331Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8272340Z 
2025-01-10T12:40:39.8272652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8272655Z 
2025-01-10T12:40:39.8272824Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8272828Z 
2025-01-10T12:40:39.8273050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ee7e0>
2025-01-10T12:40:39.8273227Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8273309Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8273313Z 
2025-01-10T12:40:39.8273452Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8273568Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8273656Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8273728Z         try:
2025-01-10T12:40:39.8273872Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8274061Z         except KeyError:
2025-01-10T12:40:39.8274201Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8274277Z     
2025-01-10T12:40:39.8274364Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8274463Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8274551Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8274688Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8274787Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8274882Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8275068Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8275075Z 
2025-01-10T12:40:39.8275295Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8275497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8275752Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8275875Z     ???
2025-01-10T12:40:39.8276206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8276213Z 
2025-01-10T12:40:39.8276342Z >   ???
2025-01-10T12:40:39.8276496Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8276569Z E   
2025-01-10T12:40:39.8276702Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8276949Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8277030Z E          ...
2025-01-10T12:40:39.8277122Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8277258Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8277373Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8277454Z E          ...
2025-01-10T12:40:39.8277541Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8277672Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8277787Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8277791Z 
2025-01-10T12:40:39.8277883Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8278083Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-10T12:40:39.8278087Z 
2025-01-10T12:40:39.8278217Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8278362Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8278460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8278600Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8278728Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8278828Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8278913Z err_msg = None
2025-01-10T12:40:39.8278916Z 
2025-01-10T12:40:39.8279034Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8279123Z         if err_msg is None:
2025-01-10T12:40:39.8279221Z             if left.shape != right.shape:
2025-01-10T12:40:39.8279315Z                 raise_assert_detail(
2025-01-10T12:40:39.8279463Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8279547Z                 )
2025-01-10T12:40:39.8279619Z     
2025-01-10T12:40:39.8279700Z             diff = 0
2025-01-10T12:40:39.8279812Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8279907Z                 # count up differences
2025-01-10T12:40:39.8280079Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8280164Z                     diff += 1
2025-01-10T12:40:39.8280240Z     
2025-01-10T12:40:39.8280331Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8280589Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8280764Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8280883Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8280956Z E           
2025-01-10T12:40:39.8281072Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8281331Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8281601Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8281606Z 
2025-01-10T12:40:39.8281920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8281924Z 
2025-01-10T12:40:39.8282095Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8282099Z 
2025-01-10T12:40:39.8282329Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ee8a0>
2025-01-10T12:40:39.8282634Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>, attr = 'f_lu'
2025-01-10T12:40:39.8282643Z 
2025-01-10T12:40:39.8282782Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8282905Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8282991Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8283071Z         try:
2025-01-10T12:40:39.8283213Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8283300Z         except KeyError:
2025-01-10T12:40:39.8283444Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8283520Z     
2025-01-10T12:40:39.8283607Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8283707Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8283801Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8283939Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8284033Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8284127Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8284247Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8284251Z 
2025-01-10T12:40:39.8284380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8284499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8284648Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8284727Z     ???
2025-01-10T12:40:39.8284840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8284845Z 
2025-01-10T12:40:39.8284921Z >   ???
2025-01-10T12:40:39.8285054Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8285133Z E   
2025-01-10T12:40:39.8285265Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8285387Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8285462Z E          ...
2025-01-10T12:40:39.8285558Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8285692Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8285806Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8285885Z E          ...
2025-01-10T12:40:39.8285972Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8286281Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8286533Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8286539Z 
2025-01-10T12:40:39.8286639Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8286838Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-10T12:40:39.8286841Z 
2025-01-10T12:40:39.8286975Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8287115Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8287213Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8287353Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8287480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8287577Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8287652Z err_msg = None
2025-01-10T12:40:39.8287656Z 
2025-01-10T12:40:39.8287775Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8287858Z         if err_msg is None:
2025-01-10T12:40:39.8287960Z             if left.shape != right.shape:
2025-01-10T12:40:39.8288055Z                 raise_assert_detail(
2025-01-10T12:40:39.8288210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8288404Z                 )
2025-01-10T12:40:39.8288477Z     
2025-01-10T12:40:39.8288559Z             diff = 0
2025-01-10T12:40:39.8288675Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8288767Z                 # count up differences
2025-01-10T12:40:39.8288940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8289023Z                     diff += 1
2025-01-10T12:40:39.8289096Z     
2025-01-10T12:40:39.8289191Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8289332Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8289513Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8289627Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8289708Z E           
2025-01-10T12:40:39.8289821Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8290085Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8290356Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8290361Z 
2025-01-10T12:40:39.8290672Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8290676Z 
2025-01-10T12:40:39.8290853Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8290858Z 
2025-01-10T12:40:39.8291087Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ef0b0>
2025-01-10T12:40:39.8291257Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8291346Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8291353Z 
2025-01-10T12:40:39.8291493Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8291615Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8291702Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8291781Z         try:
2025-01-10T12:40:39.8291922Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8292098Z         except KeyError:
2025-01-10T12:40:39.8292241Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8292319Z     
2025-01-10T12:40:39.8292413Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8292508Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8292604Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8292742Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8292835Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8292926Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8293041Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8293117Z             else:
2025-01-10T12:40:39.8293220Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8293328Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8293332Z 
2025-01-10T12:40:39.8293464Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8293585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8293736Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8293816Z     ???
2025-01-10T12:40:39.8293930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8293934Z 
2025-01-10T12:40:39.8294103Z >   ???
2025-01-10T12:40:39.8294333Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8294464Z E   
2025-01-10T12:40:39.8294684Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8294874Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8295000Z E          ...
2025-01-10T12:40:39.8295156Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8295345Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8295466Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8295546Z E          ...
2025-01-10T12:40:39.8295639Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8295768Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8295875Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8295879Z 
2025-01-10T12:40:39.8295976Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8296286Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-10T12:40:39.8296291Z 
2025-01-10T12:40:39.8296427Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8296558Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8296661Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8296795Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8296929Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8297029Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8297106Z err_msg = None
2025-01-10T12:40:39.8297110Z 
2025-01-10T12:40:39.8297226Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8297312Z         if err_msg is None:
2025-01-10T12:40:39.8297411Z             if left.shape != right.shape:
2025-01-10T12:40:39.8297500Z                 raise_assert_detail(
2025-01-10T12:40:39.8297649Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8298010Z                 )
2025-01-10T12:40:39.8298116Z     
2025-01-10T12:40:39.8298193Z             diff = 0
2025-01-10T12:40:39.8298312Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8298402Z                 # count up differences
2025-01-10T12:40:39.8298576Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8298796Z                     diff += 1
2025-01-10T12:40:39.8298874Z     
2025-01-10T12:40:39.8298974Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8299119Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8299295Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8299410Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8299492Z E           
2025-01-10T12:40:39.8299606Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8299866Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8300130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8300135Z 
2025-01-10T12:40:39.8300440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8300555Z 
2025-01-10T12:40:39.8300734Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8300738Z 
2025-01-10T12:40:39.8300963Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ef170>
2025-01-10T12:40:39.8301138Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8301225Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8301229Z 
2025-01-10T12:40:39.8301369Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8301494Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8301581Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8301661Z         try:
2025-01-10T12:40:39.8301801Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8301886Z         except KeyError:
2025-01-10T12:40:39.8302022Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8302102Z     
2025-01-10T12:40:39.8302189Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8302289Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8302380Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8302516Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8302611Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8302703Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8302820Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8302896Z             else:
2025-01-10T12:40:39.8303005Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8303113Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8303117Z 
2025-01-10T12:40:39.8303247Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8303362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8303515Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8303595Z     ???
2025-01-10T12:40:39.8303712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8303716Z 
2025-01-10T12:40:39.8303793Z >   ???
2025-01-10T12:40:39.8303921Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8303999Z E   
2025-01-10T12:40:39.8304128Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8304248Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8304323Z E          ...
2025-01-10T12:40:39.8304504Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8304644Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8304766Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8304840Z E          ...
2025-01-10T12:40:39.8304933Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8305061Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8305177Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8305181Z 
2025-01-10T12:40:39.8305273Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8305477Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-10T12:40:39.8305480Z 
2025-01-10T12:40:39.8305617Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8305751Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8305859Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8305998Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8306322Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8306426Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8306640Z err_msg = None
2025-01-10T12:40:39.8306644Z 
2025-01-10T12:40:39.8306764Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8306847Z         if err_msg is None:
2025-01-10T12:40:39.8306948Z             if left.shape != right.shape:
2025-01-10T12:40:39.8307035Z                 raise_assert_detail(
2025-01-10T12:40:39.8307188Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8307262Z                 )
2025-01-10T12:40:39.8307339Z     
2025-01-10T12:40:39.8307414Z             diff = 0
2025-01-10T12:40:39.8307536Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8307625Z                 # count up differences
2025-01-10T12:40:39.8307805Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8307885Z                     diff += 1
2025-01-10T12:40:39.8307962Z     
2025-01-10T12:40:39.8308059Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8308206Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8308383Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8308499Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8308578Z E           
2025-01-10T12:40:39.8308691Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8308957Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8309212Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8309225Z 
2025-01-10T12:40:39.8309536Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8309541Z 
2025-01-10T12:40:39.8309718Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8309722Z 
2025-01-10T12:40:39.8309947Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ef2f0>
2025-01-10T12:40:39.8310119Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8310331Z attr = 'j_blues'
2025-01-10T12:40:39.8310336Z 
2025-01-10T12:40:39.8310485Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8310601Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8310693Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8310772Z         try:
2025-01-10T12:40:39.8310915Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8311009Z         except KeyError:
2025-01-10T12:40:39.8311147Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8311225Z     
2025-01-10T12:40:39.8311312Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8311411Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8311502Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8311641Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8311729Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8311832Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8311942Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8312022Z             else:
2025-01-10T12:40:39.8312120Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8312287Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8312294Z 
2025-01-10T12:40:39.8312647Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8312844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8313103Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8313228Z     ???
2025-01-10T12:40:39.8313421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8313428Z 
2025-01-10T12:40:39.8313549Z >   ???
2025-01-10T12:40:39.8313771Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8313893Z E   
2025-01-10T12:40:39.8314125Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8314313Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8314445Z E          ...
2025-01-10T12:40:39.8314600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8314819Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8315022Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8315153Z E          ...
2025-01-10T12:40:39.8315306Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8315519Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8315699Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8315704Z 
2025-01-10T12:40:39.8315799Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8316006Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-10T12:40:39.8316010Z 
2025-01-10T12:40:39.8316334Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8316475Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8316578Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8316711Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8316845Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8316942Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8317024Z err_msg = None
2025-01-10T12:40:39.8317028Z 
2025-01-10T12:40:39.8317139Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8317228Z         if err_msg is None:
2025-01-10T12:40:39.8317324Z             if left.shape != right.shape:
2025-01-10T12:40:39.8317413Z                 raise_assert_detail(
2025-01-10T12:40:39.8317686Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8317767Z                 )
2025-01-10T12:40:39.8317851Z     
2025-01-10T12:40:39.8317929Z             diff = 0
2025-01-10T12:40:39.8318046Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8318134Z                 # count up differences
2025-01-10T12:40:39.8318311Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8318396Z                     diff += 1
2025-01-10T12:40:39.8318473Z     
2025-01-10T12:40:39.8318562Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8318702Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8318871Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8318991Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8319065Z E           
2025-01-10T12:40:39.8319181Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8319448Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8319821Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8319826Z 
2025-01-10T12:40:39.8320136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8320140Z 
2025-01-10T12:40:39.8320310Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8320324Z 
2025-01-10T12:40:39.8320550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c0b0>
2025-01-10T12:40:39.8320722Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8320799Z attr = 'lines'
2025-01-10T12:40:39.8320803Z 
2025-01-10T12:40:39.8320945Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8321070Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8321165Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8321240Z         try:
2025-01-10T12:40:39.8321385Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8321467Z         except KeyError:
2025-01-10T12:40:39.8321613Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8321690Z     
2025-01-10T12:40:39.8321784Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8321888Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8321981Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8322119Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8322209Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8322305Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8322416Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8322496Z             else:
2025-01-10T12:40:39.8322596Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8322709Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8322713Z 
2025-01-10T12:40:39.8322839Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8322957Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8323104Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8323183Z     ???
2025-01-10T12:40:39.8323299Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8323388Z 
2025-01-10T12:40:39.8323464Z >   ???
2025-01-10T12:40:39.8323598Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8323669Z E   
2025-01-10T12:40:39.8323802Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8323912Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8323994Z E          ...
2025-01-10T12:40:39.8324087Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8324224Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8324335Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8324416Z E          ...
2025-01-10T12:40:39.8324502Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8324633Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8324742Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8324745Z 
2025-01-10T12:40:39.8324842Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8325077Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-10T12:40:39.8325081Z 
2025-01-10T12:40:39.8325310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c170>
2025-01-10T12:40:39.8325480Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8325657Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8325661Z 
2025-01-10T12:40:39.8325805Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8325921Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8326012Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8326192Z         try:
2025-01-10T12:40:39.8326339Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8326426Z         except KeyError:
2025-01-10T12:40:39.8326564Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8326642Z     
2025-01-10T12:40:39.8326735Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8326834Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8326928Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8327067Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8327156Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8327256Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8327365Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8327369Z 
2025-01-10T12:40:39.8327502Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8327619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8327622Z 
2025-01-10T12:40:39.8327759Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8327851Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8327965Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8328051Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8328195Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8328285Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8328391Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8328485Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8328562Z err_msg = None
2025-01-10T12:40:39.8328566Z 
2025-01-10T12:40:39.8328681Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8328769Z         if err_msg is None:
2025-01-10T12:40:39.8328866Z             if left.shape != right.shape:
2025-01-10T12:40:39.8328956Z                 raise_assert_detail(
2025-01-10T12:40:39.8329098Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8329180Z                 )
2025-01-10T12:40:39.8329251Z     
2025-01-10T12:40:39.8329449Z             diff = 0
2025-01-10T12:40:39.8329563Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8329657Z                 # count up differences
2025-01-10T12:40:39.8329825Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8329908Z                     diff += 1
2025-01-10T12:40:39.8329982Z     
2025-01-10T12:40:39.8330073Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8330208Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8330385Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8330492Z E           AssertionError: Series are different
2025-01-10T12:40:39.8330568Z E           
2025-01-10T12:40:39.8330676Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8331120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8331728Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8332402Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8332408Z 
2025-01-10T12:40:39.8332731Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8332966Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-10T12:40:39.8332975Z 
2025-01-10T12:40:39.8333204Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c230>
2025-01-10T12:40:39.8333376Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8333475Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8333479Z 
2025-01-10T12:40:39.8333618Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8333739Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8333827Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8333905Z         try:
2025-01-10T12:40:39.8334050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8334137Z         except KeyError:
2025-01-10T12:40:39.8334277Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8334355Z     
2025-01-10T12:40:39.8334442Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8334542Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8334636Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8334777Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8334868Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8334958Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8335076Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8335080Z 
2025-01-10T12:40:39.8335206Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8335324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8335328Z 
2025-01-10T12:40:39.8335571Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8335666Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8335774Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8335862Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8336014Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8336210Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8336326Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8336407Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8336492Z err_msg = None
2025-01-10T12:40:39.8336496Z 
2025-01-10T12:40:39.8336604Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8336692Z         if err_msg is None:
2025-01-10T12:40:39.8336789Z             if left.shape != right.shape:
2025-01-10T12:40:39.8336885Z                 raise_assert_detail(
2025-01-10T12:40:39.8337031Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8337112Z                 )
2025-01-10T12:40:39.8337187Z     
2025-01-10T12:40:39.8337267Z             diff = 0
2025-01-10T12:40:39.8337385Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8337594Z                 # count up differences
2025-01-10T12:40:39.8337767Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8337846Z                     diff += 1
2025-01-10T12:40:39.8337922Z     
2025-01-10T12:40:39.8338011Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8338149Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8338319Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8338430Z E           AssertionError: Series are different
2025-01-10T12:40:39.8338513Z E           
2025-01-10T12:40:39.8338624Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8338986Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8339365Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8339737Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8339746Z 
2025-01-10T12:40:39.8340059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8340255Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-10T12:40:39.8340260Z 
2025-01-10T12:40:39.8340395Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8340525Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8340741Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8340876Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8341008Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8341110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8341195Z err_msg = None
2025-01-10T12:40:39.8341199Z 
2025-01-10T12:40:39.8341314Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8341396Z         if err_msg is None:
2025-01-10T12:40:39.8341497Z             if left.shape != right.shape:
2025-01-10T12:40:39.8341582Z                 raise_assert_detail(
2025-01-10T12:40:39.8341730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8341805Z                 )
2025-01-10T12:40:39.8341881Z     
2025-01-10T12:40:39.8341956Z             diff = 0
2025-01-10T12:40:39.8342078Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8342167Z                 # count up differences
2025-01-10T12:40:39.8342339Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8342427Z                     diff += 1
2025-01-10T12:40:39.8342499Z     
2025-01-10T12:40:39.8342595Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8342814Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8342987Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8343100Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8343178Z E           
2025-01-10T12:40:39.8343290Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8343553Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8343815Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8343823Z 
2025-01-10T12:40:39.8344122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8344126Z 
2025-01-10T12:40:39.8344299Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8344304Z 
2025-01-10T12:40:39.8344526Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c470>
2025-01-10T12:40:39.8344734Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>, attr = 'nu'
2025-01-10T12:40:39.8344739Z 
2025-01-10T12:40:39.8344887Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8345003Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8345094Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8345169Z         try:
2025-01-10T12:40:39.8345314Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8345401Z         except KeyError:
2025-01-10T12:40:39.8345543Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8345617Z     
2025-01-10T12:40:39.8345710Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8345805Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8345899Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8346031Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8346315Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8346533Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8346655Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8346659Z 
2025-01-10T12:40:39.8346788Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8346902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8347055Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8347134Z     ???
2025-01-10T12:40:39.8347251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8347255Z 
2025-01-10T12:40:39.8347329Z >   ???
2025-01-10T12:40:39.8347463Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8347536Z E   
2025-01-10T12:40:39.8347668Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8347781Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8347861Z E          ...
2025-01-10T12:40:39.8347962Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8348093Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8348212Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8348286Z E          ...
2025-01-10T12:40:39.8348381Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8348510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8348740Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8348744Z 
2025-01-10T12:40:39.8348835Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8349047Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-10T12:40:39.8349051Z 
2025-01-10T12:40:39.8349181Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8349319Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8349427Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8349558Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8349784Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8349951Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8350095Z err_msg = None
2025-01-10T12:40:39.8350101Z 
2025-01-10T12:40:39.8350283Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8350426Z         if err_msg is None:
2025-01-10T12:40:39.8350584Z             if left.shape != right.shape:
2025-01-10T12:40:39.8350733Z                 raise_assert_detail(
2025-01-10T12:40:39.8350937Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8351018Z                 )
2025-01-10T12:40:39.8351094Z     
2025-01-10T12:40:39.8351169Z             diff = 0
2025-01-10T12:40:39.8351294Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8351382Z                 # count up differences
2025-01-10T12:40:39.8351558Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8351636Z                     diff += 1
2025-01-10T12:40:39.8351713Z     
2025-01-10T12:40:39.8351803Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8351949Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8352121Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8352240Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8352314Z E           
2025-01-10T12:40:39.8352433Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8352786Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8353045Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8353053Z 
2025-01-10T12:40:39.8353361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8353365Z 
2025-01-10T12:40:39.8353536Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8353546Z 
2025-01-10T12:40:39.8353767Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c530>
2025-01-10T12:40:39.8353939Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8354027Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8354031Z 
2025-01-10T12:40:39.8354175Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8354292Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8354385Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8354458Z         try:
2025-01-10T12:40:39.8354603Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8354786Z         except KeyError:
2025-01-10T12:40:39.8354931Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8355003Z     
2025-01-10T12:40:39.8355095Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8355197Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8355288Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8355425Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8355511Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8355613Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8355724Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8355728Z 
2025-01-10T12:40:39.8355857Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8355971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8356327Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8356412Z     ???
2025-01-10T12:40:39.8356533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8356538Z 
2025-01-10T12:40:39.8356615Z >   ???
2025-01-10T12:40:39.8356745Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8356821Z E   
2025-01-10T12:40:39.8356950Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8357065Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8357140Z E          ...
2025-01-10T12:40:39.8357239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8357368Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8357485Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8357560Z E          ...
2025-01-10T12:40:39.8357652Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8357782Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8357893Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8357897Z 
2025-01-10T12:40:39.8357991Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8358197Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-10T12:40:39.8358200Z 
2025-01-10T12:40:39.8358338Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8358466Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8358698Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8358835Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8358965Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8359060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8359149Z err_msg = None
2025-01-10T12:40:39.8359152Z 
2025-01-10T12:40:39.8359267Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8359350Z         if err_msg is None:
2025-01-10T12:40:39.8359450Z             if left.shape != right.shape:
2025-01-10T12:40:39.8359537Z                 raise_assert_detail(
2025-01-10T12:40:39.8359684Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8359757Z                 )
2025-01-10T12:40:39.8359835Z     
2025-01-10T12:40:39.8359911Z             diff = 0
2025-01-10T12:40:39.8360031Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8360119Z                 # count up differences
2025-01-10T12:40:39.8360295Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8360377Z                     diff += 1
2025-01-10T12:40:39.8360451Z     
2025-01-10T12:40:39.8360537Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8360788Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8360964Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8361078Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8361158Z E           
2025-01-10T12:40:39.8361268Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8361538Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8361796Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8361810Z 
2025-01-10T12:40:39.8362117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8362121Z 
2025-01-10T12:40:39.8362295Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8362300Z 
2025-01-10T12:40:39.8362520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c5f0>
2025-01-10T12:40:39.8362733Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>, attr = 'f_lu'
2025-01-10T12:40:39.8362738Z 
2025-01-10T12:40:39.8362879Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8363000Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8363096Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8363173Z         try:
2025-01-10T12:40:39.8363318Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8363405Z         except KeyError:
2025-01-10T12:40:39.8363549Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8363621Z     
2025-01-10T12:40:39.8363716Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8363810Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8363903Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8364031Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8364123Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8364297Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8364417Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8364421Z 
2025-01-10T12:40:39.8364545Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8364663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8364813Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8364894Z     ???
2025-01-10T12:40:39.8365008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8365012Z 
2025-01-10T12:40:39.8365083Z >   ???
2025-01-10T12:40:39.8365218Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8365294Z E   
2025-01-10T12:40:39.8365427Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8365540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8365623Z E          ...
2025-01-10T12:40:39.8365718Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8365853Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8365972Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8366046Z E          ...
2025-01-10T12:40:39.8366242Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8366369Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8366597Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8366601Z 
2025-01-10T12:40:39.8366694Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8366906Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-10T12:40:39.8366910Z 
2025-01-10T12:40:39.8367038Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8367175Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8367279Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8367417Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8367612Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8367845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8368001Z err_msg = None
2025-01-10T12:40:39.8368041Z 
2025-01-10T12:40:39.8368187Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8368346Z         if err_msg is None:
2025-01-10T12:40:39.8368472Z             if left.shape != right.shape:
2025-01-10T12:40:39.8368693Z                 raise_assert_detail(
2025-01-10T12:40:39.8369026Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8369275Z                 )
2025-01-10T12:40:39.8369516Z     
2025-01-10T12:40:39.8369763Z             diff = 0
2025-01-10T12:40:39.8370006Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8370281Z                 # count up differences
2025-01-10T12:40:39.8370624Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8370896Z                     diff += 1
2025-01-10T12:40:39.8371138Z     
2025-01-10T12:40:39.8371340Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8371695Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8372035Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8372361Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8372560Z E           
2025-01-10T12:40:39.8372813Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8373241Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8382863Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8382883Z 
2025-01-10T12:40:39.8383247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8383257Z 
2025-01-10T12:40:39.8383444Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8383449Z 
2025-01-10T12:40:39.8383692Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7cd70>
2025-01-10T12:40:39.8383872Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8383962Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8383967Z 
2025-01-10T12:40:39.8384117Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8384245Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8384335Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8384417Z         try:
2025-01-10T12:40:39.8384743Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8384838Z         except KeyError:
2025-01-10T12:40:39.8384990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8385063Z     
2025-01-10T12:40:39.8385159Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8385255Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8385352Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8385489Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8385584Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8385680Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8385798Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8385875Z             else:
2025-01-10T12:40:39.8385980Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8386301Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8386320Z 
2025-01-10T12:40:39.8386567Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8386782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8387038Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8387170Z     ???
2025-01-10T12:40:39.8387363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8387369Z 
2025-01-10T12:40:39.8387502Z >   ???
2025-01-10T12:40:39.8387717Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8387799Z E   
2025-01-10T12:40:39.8387942Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8388061Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8388137Z E          ...
2025-01-10T12:40:39.8388234Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8388365Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8388492Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8388574Z E          ...
2025-01-10T12:40:39.8388665Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8388799Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8388910Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8388914Z 
2025-01-10T12:40:39.8389012Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8389227Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-10T12:40:39.8389231Z 
2025-01-10T12:40:39.8389509Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8389648Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8389756Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8389893Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8390033Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8390132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8390210Z err_msg = None
2025-01-10T12:40:39.8390215Z 
2025-01-10T12:40:39.8390334Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8390417Z         if err_msg is None:
2025-01-10T12:40:39.8390517Z             if left.shape != right.shape:
2025-01-10T12:40:39.8390601Z                 raise_assert_detail(
2025-01-10T12:40:39.8390762Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8390836Z                 )
2025-01-10T12:40:39.8390914Z     
2025-01-10T12:40:39.8390988Z             diff = 0
2025-01-10T12:40:39.8391108Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8391198Z                 # count up differences
2025-01-10T12:40:39.8391374Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8391576Z                     diff += 1
2025-01-10T12:40:39.8391649Z     
2025-01-10T12:40:39.8391747Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8391892Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8392073Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8392188Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8392267Z E           
2025-01-10T12:40:39.8392386Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8392651Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8392918Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8392923Z 
2025-01-10T12:40:39.8393231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8393235Z 
2025-01-10T12:40:39.8393413Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8393421Z 
2025-01-10T12:40:39.8393649Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7ce30>
2025-01-10T12:40:39.8393820Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8393906Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8393910Z 
2025-01-10T12:40:39.8394050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8394179Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8394265Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8394344Z         try:
2025-01-10T12:40:39.8394484Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8394574Z         except KeyError:
2025-01-10T12:40:39.8394712Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8394789Z     
2025-01-10T12:40:39.8394877Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8394977Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8395153Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8395297Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8395391Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8395480Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8395596Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8395674Z             else:
2025-01-10T12:40:39.8395778Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8395887Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8395891Z 
2025-01-10T12:40:39.8396023Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8396268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8396427Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8396500Z     ???
2025-01-10T12:40:39.8396626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8396630Z 
2025-01-10T12:40:39.8396705Z >   ???
2025-01-10T12:40:39.8396834Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8396910Z E   
2025-01-10T12:40:39.8397038Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8397152Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8397372Z E          ...
2025-01-10T12:40:39.8397460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8397590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8397709Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8397784Z E          ...
2025-01-10T12:40:39.8397875Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8397996Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8398140Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8398145Z 
2025-01-10T12:40:39.8398241Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8398456Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-10T12:40:39.8398460Z 
2025-01-10T12:40:39.8398595Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8398725Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8398832Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8398964Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8399093Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8399185Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8399267Z err_msg = None
2025-01-10T12:40:39.8399271Z 
2025-01-10T12:40:39.8399386Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8399472Z         if err_msg is None:
2025-01-10T12:40:39.8399578Z             if left.shape != right.shape:
2025-01-10T12:40:39.8399664Z                 raise_assert_detail(
2025-01-10T12:40:39.8399815Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8399889Z                 )
2025-01-10T12:40:39.8399967Z     
2025-01-10T12:40:39.8400047Z             diff = 0
2025-01-10T12:40:39.8400162Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8400250Z                 # count up differences
2025-01-10T12:40:39.8400425Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8400503Z                     diff += 1
2025-01-10T12:40:39.8400579Z     
2025-01-10T12:40:39.8400668Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8400807Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8401099Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8401214Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8401294Z E           
2025-01-10T12:40:39.8401404Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8401663Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8401923Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8401933Z 
2025-01-10T12:40:39.8402247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8402251Z 
2025-01-10T12:40:39.8402424Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8402428Z 
2025-01-10T12:40:39.8402654Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7cfb0>
2025-01-10T12:40:39.8402965Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8403043Z attr = 'j_blues'
2025-01-10T12:40:39.8403047Z 
2025-01-10T12:40:39.8403191Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8403306Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8403395Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8403470Z         try:
2025-01-10T12:40:39.8403608Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8403695Z         except KeyError:
2025-01-10T12:40:39.8403837Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8403919Z     
2025-01-10T12:40:39.8404006Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8404103Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8404192Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8404328Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8404423Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8404518Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8404627Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8404706Z             else:
2025-01-10T12:40:39.8404800Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8404982Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8404989Z 
2025-01-10T12:40:39.8405217Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8405414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8405666Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8405791Z     ???
2025-01-10T12:40:39.8405981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8405987Z 
2025-01-10T12:40:39.8406247Z >   ???
2025-01-10T12:40:39.8406397Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8406478Z E   
2025-01-10T12:40:39.8406614Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8406723Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8406803Z E          ...
2025-01-10T12:40:39.8406895Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8407024Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8407142Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8407215Z E          ...
2025-01-10T12:40:39.8407438Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8407570Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8407680Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8407684Z 
2025-01-10T12:40:39.8407773Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8408025Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-10T12:40:39.8408032Z 
2025-01-10T12:40:39.8408170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8408302Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8408406Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8408538Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8408666Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8408763Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8408845Z err_msg = None
2025-01-10T12:40:39.8408849Z 
2025-01-10T12:40:39.8408958Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8409045Z         if err_msg is None:
2025-01-10T12:40:39.8409142Z             if left.shape != right.shape:
2025-01-10T12:40:39.8409345Z                 raise_assert_detail(
2025-01-10T12:40:39.8409490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8409571Z                 )
2025-01-10T12:40:39.8409641Z     
2025-01-10T12:40:39.8409720Z             diff = 0
2025-01-10T12:40:39.8409832Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8409924Z                 # count up differences
2025-01-10T12:40:39.8410093Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8410178Z                     diff += 1
2025-01-10T12:40:39.8410249Z     
2025-01-10T12:40:39.8410349Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8410485Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8410661Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8410775Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8410858Z E           
2025-01-10T12:40:39.8410970Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8411229Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8411491Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8411496Z 
2025-01-10T12:40:39.8411806Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8411810Z 
2025-01-10T12:40:39.8411986Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8411990Z 
2025-01-10T12:40:39.8412217Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7dd30>
2025-01-10T12:40:39.8412382Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8412462Z attr = 'lines'
2025-01-10T12:40:39.8412466Z 
2025-01-10T12:40:39.8412602Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8412724Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8412811Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8412972Z         try:
2025-01-10T12:40:39.8413115Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8413204Z         except KeyError:
2025-01-10T12:40:39.8413340Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8413417Z     
2025-01-10T12:40:39.8413509Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8413606Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8413700Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8413831Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8413928Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8414017Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8414132Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8414206Z             else:
2025-01-10T12:40:39.8414306Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8414417Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8414422Z 
2025-01-10T12:40:39.8414553Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8414669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8414819Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8414895Z     ???
2025-01-10T12:40:39.8415087Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8415091Z 
2025-01-10T12:40:39.8415162Z >   ???
2025-01-10T12:40:39.8415287Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8415360Z E   
2025-01-10T12:40:39.8415486Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8415603Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8415676Z E          ...
2025-01-10T12:40:39.8415771Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8415907Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8416024Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8416201Z E          ...
2025-01-10T12:40:39.8416298Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8416425Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8416530Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8416539Z 
2025-01-10T12:40:39.8416634Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8416935Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-10T12:40:39.8416939Z 
2025-01-10T12:40:39.8417167Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7ddf0>
2025-01-10T12:40:39.8417330Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8417425Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8417429Z 
2025-01-10T12:40:39.8417571Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8417694Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8417784Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8417858Z         try:
2025-01-10T12:40:39.8418007Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8418089Z         except KeyError:
2025-01-10T12:40:39.8418236Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8418315Z     
2025-01-10T12:40:39.8418408Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8418505Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8418598Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8418732Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8418824Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8418914Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8419169Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8419174Z 
2025-01-10T12:40:39.8419309Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8419427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8419431Z 
2025-01-10T12:40:39.8419575Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8419667Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8419780Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8419863Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8420009Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8420092Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8420201Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8420280Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8420366Z err_msg = None
2025-01-10T12:40:39.8420370Z 
2025-01-10T12:40:39.8420487Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8420571Z         if err_msg is None:
2025-01-10T12:40:39.8420673Z             if left.shape != right.shape:
2025-01-10T12:40:39.8420759Z                 raise_assert_detail(
2025-01-10T12:40:39.8420907Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8421094Z                 )
2025-01-10T12:40:39.8421170Z     
2025-01-10T12:40:39.8421248Z             diff = 0
2025-01-10T12:40:39.8421364Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8421451Z                 # count up differences
2025-01-10T12:40:39.8421627Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8421707Z                     diff += 1
2025-01-10T12:40:39.8421785Z     
2025-01-10T12:40:39.8421873Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8422020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8422196Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8422299Z E           AssertionError: Series are different
2025-01-10T12:40:39.8422377Z E           
2025-01-10T12:40:39.8422482Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8422855Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8423181Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8423509Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8423517Z 
2025-01-10T12:40:39.8423837Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8424219Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-10T12:40:39.8424235Z 
2025-01-10T12:40:39.8424736Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7deb0>
2025-01-10T12:40:39.8425035Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8425194Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8425201Z 
2025-01-10T12:40:39.8425377Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8425494Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8425590Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8425664Z         try:
2025-01-10T12:40:39.8425811Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8425894Z         except KeyError:
2025-01-10T12:40:39.8426037Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8426328Z     
2025-01-10T12:40:39.8426429Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8426533Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8426621Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8426764Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8426850Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8426945Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8427057Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8427061Z 
2025-01-10T12:40:39.8427192Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8427443Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8427448Z 
2025-01-10T12:40:39.8427589Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8427676Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8427786Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8427871Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8428012Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8428105Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8428211Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8428295Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8428372Z err_msg = None
2025-01-10T12:40:39.8428376Z 
2025-01-10T12:40:39.8428490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8428577Z         if err_msg is None:
2025-01-10T12:40:39.8428676Z             if left.shape != right.shape:
2025-01-10T12:40:39.8428761Z                 raise_assert_detail(
2025-01-10T12:40:39.8428908Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8428981Z                 )
2025-01-10T12:40:39.8429058Z     
2025-01-10T12:40:39.8429137Z             diff = 0
2025-01-10T12:40:39.8429251Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8429344Z                 # count up differences
2025-01-10T12:40:39.8429516Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8429599Z                     diff += 1
2025-01-10T12:40:39.8429670Z     
2025-01-10T12:40:39.8429764Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8429901Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8430075Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8430183Z E           AssertionError: Series are different
2025-01-10T12:40:39.8430262Z E           
2025-01-10T12:40:39.8430366Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8430849Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8431223Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8431594Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8431604Z 
2025-01-10T12:40:39.8431916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8432152Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-10T12:40:39.8432156Z 
2025-01-10T12:40:39.8432285Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8432494Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8432593Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8432733Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8432861Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8432956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8433039Z err_msg = None
2025-01-10T12:40:39.8433043Z 
2025-01-10T12:40:39.8433154Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8433241Z         if err_msg is None:
2025-01-10T12:40:39.8433335Z             if left.shape != right.shape:
2025-01-10T12:40:39.8433425Z                 raise_assert_detail(
2025-01-10T12:40:39.8433568Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8433652Z                 )
2025-01-10T12:40:39.8433723Z     
2025-01-10T12:40:39.8433803Z             diff = 0
2025-01-10T12:40:39.8433914Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8434008Z                 # count up differences
2025-01-10T12:40:39.8434180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8434259Z                     diff += 1
2025-01-10T12:40:39.8434337Z     
2025-01-10T12:40:39.8434425Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8434567Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8434733Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8434850Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8434923Z E           
2025-01-10T12:40:39.8435040Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8435294Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8435641Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8435646Z 
2025-01-10T12:40:39.8435952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8435956Z 
2025-01-10T12:40:39.8436232Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8436236Z 
2025-01-10T12:40:39.8436465Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e0f0>
2025-01-10T12:40:39.8436676Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>, attr = 'nu'
2025-01-10T12:40:39.8436680Z 
2025-01-10T12:40:39.8436817Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8436938Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8437024Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8437101Z         try:
2025-01-10T12:40:39.8437240Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8437326Z         except KeyError:
2025-01-10T12:40:39.8437469Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8437547Z     
2025-01-10T12:40:39.8437635Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8437734Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8437822Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8437957Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8438172Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8438273Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8438389Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8438394Z 
2025-01-10T12:40:39.8438526Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8438645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8438794Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8438876Z     ???
2025-01-10T12:40:39.8438991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8438995Z 
2025-01-10T12:40:39.8439073Z >   ???
2025-01-10T12:40:39.8439201Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8439279Z E   
2025-01-10T12:40:39.8439407Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8439530Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8439610Z E          ...
2025-01-10T12:40:39.8439704Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8439839Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8439951Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8440028Z E          ...
2025-01-10T12:40:39.8440116Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8440246Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8440356Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8440360Z 
2025-01-10T12:40:39.8440460Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8440735Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-10T12:40:39.8440739Z 
2025-01-10T12:40:39.8440880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8441019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8441119Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8441259Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8441383Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8441482Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8441560Z err_msg = None
2025-01-10T12:40:39.8441564Z 
2025-01-10T12:40:39.8441843Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8441930Z         if err_msg is None:
2025-01-10T12:40:39.8442032Z             if left.shape != right.shape:
2025-01-10T12:40:39.8442121Z                 raise_assert_detail(
2025-01-10T12:40:39.8442266Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8442347Z                 )
2025-01-10T12:40:39.8442416Z     
2025-01-10T12:40:39.8442493Z             diff = 0
2025-01-10T12:40:39.8442602Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8442715Z                 # count up differences
2025-01-10T12:40:39.8442896Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8442987Z                     diff += 1
2025-01-10T12:40:39.8443059Z     
2025-01-10T12:40:39.8443152Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8443395Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8443690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8443878Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8444006Z E           
2025-01-10T12:40:39.8444202Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8444651Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8445019Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8445024Z 
2025-01-10T12:40:39.8445338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8445347Z 
2025-01-10T12:40:39.8445516Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8445520Z 
2025-01-10T12:40:39.8445756Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e1b0>
2025-01-10T12:40:39.8445923Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8446008Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8446012Z 
2025-01-10T12:40:39.8446254Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8446378Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8446464Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8446543Z         try:
2025-01-10T12:40:39.8446684Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8446777Z         except KeyError:
2025-01-10T12:40:39.8446920Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8446991Z     
2025-01-10T12:40:39.8447083Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8447177Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8447269Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8447406Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8447498Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8447588Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8447703Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8447706Z 
2025-01-10T12:40:39.8447832Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8447951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8448096Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8448302Z     ???
2025-01-10T12:40:39.8448423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8448428Z 
2025-01-10T12:40:39.8448500Z >   ???
2025-01-10T12:40:39.8448632Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8448704Z E   
2025-01-10T12:40:39.8448837Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8448952Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8449032Z E          ...
2025-01-10T12:40:39.8449122Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8449254Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8449366Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8449445Z E          ...
2025-01-10T12:40:39.8449532Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8449663Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8449777Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8449782Z 
2025-01-10T12:40:39.8449872Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8450116Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-10T12:40:39.8450120Z 
2025-01-10T12:40:39.8450249Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8450588Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8450684Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8450820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8450944Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8451041Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8451123Z err_msg = None
2025-01-10T12:40:39.8451132Z 
2025-01-10T12:40:39.8451242Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8451329Z         if err_msg is None:
2025-01-10T12:40:39.8451426Z             if left.shape != right.shape:
2025-01-10T12:40:39.8451516Z                 raise_assert_detail(
2025-01-10T12:40:39.8451659Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8451742Z                 )
2025-01-10T12:40:39.8451813Z     
2025-01-10T12:40:39.8451893Z             diff = 0
2025-01-10T12:40:39.8452003Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8452096Z                 # count up differences
2025-01-10T12:40:39.8452266Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8452351Z                     diff += 1
2025-01-10T12:40:39.8452427Z     
2025-01-10T12:40:39.8452520Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8452664Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8452834Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8452952Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8453024Z E           
2025-01-10T12:40:39.8453140Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8453396Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8453742Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8453748Z 
2025-01-10T12:40:39.8454057Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8454061Z 
2025-01-10T12:40:39.8454229Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8454236Z 
2025-01-10T12:40:39.8454464Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e270>
2025-01-10T12:40:39.8454664Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>, attr = 'f_lu'
2025-01-10T12:40:39.8454667Z 
2025-01-10T12:40:39.8454810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8454929Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8455013Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8455091Z         try:
2025-01-10T12:40:39.8455230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8455323Z         except KeyError:
2025-01-10T12:40:39.8455460Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8455536Z     
2025-01-10T12:40:39.8455623Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8455721Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8455809Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8456026Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8456295Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8456399Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8456512Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8456522Z 
2025-01-10T12:40:39.8456647Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8456763Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8456906Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8456990Z     ???
2025-01-10T12:40:39.8457099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8457103Z 
2025-01-10T12:40:39.8457180Z >   ???
2025-01-10T12:40:39.8457305Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8457381Z E   
2025-01-10T12:40:39.8457508Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8457627Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8457700Z E          ...
2025-01-10T12:40:39.8457792Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8457924Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8458036Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8458115Z E          ...
2025-01-10T12:40:39.8458201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8458329Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8458435Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8458439Z 
2025-01-10T12:40:39.8458533Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8458799Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-10T12:40:39.8458804Z 
2025-01-10T12:40:39.8458937Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8459073Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8459170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8459306Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8459429Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8459526Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8459617Z err_msg = None
2025-01-10T12:40:39.8459741Z 
2025-01-10T12:40:39.8459856Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8459943Z         if err_msg is None:
2025-01-10T12:40:39.8460037Z             if left.shape != right.shape:
2025-01-10T12:40:39.8460127Z                 raise_assert_detail(
2025-01-10T12:40:39.8460268Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8460349Z                 )
2025-01-10T12:40:39.8460423Z     
2025-01-10T12:40:39.8460498Z             diff = 0
2025-01-10T12:40:39.8460614Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8460701Z                 # count up differences
2025-01-10T12:40:39.8460875Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8460953Z                     diff += 1
2025-01-10T12:40:39.8461030Z     
2025-01-10T12:40:39.8461118Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8461264Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8461432Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8461548Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8461621Z E           
2025-01-10T12:40:39.8461737Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8462150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8462545Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8462553Z 
2025-01-10T12:40:39.8463078Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8463084Z 
2025-01-10T12:40:39.8463379Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8463389Z 
2025-01-10T12:40:39.8463617Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e9f0>
2025-01-10T12:40:39.8463786Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8463866Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8463870Z 
2025-01-10T12:40:39.8464013Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8464128Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8464221Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8464293Z         try:
2025-01-10T12:40:39.8464440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8464521Z         except KeyError:
2025-01-10T12:40:39.8464663Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8464739Z     
2025-01-10T12:40:39.8464827Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8464925Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8465014Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8465151Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8465236Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8465330Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8465440Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8465519Z             else:
2025-01-10T12:40:39.8465614Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8465726Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8465730Z 
2025-01-10T12:40:39.8465944Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8466228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8466411Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8466485Z     ???
2025-01-10T12:40:39.8466602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8466612Z 
2025-01-10T12:40:39.8466683Z >   ???
2025-01-10T12:40:39.8466813Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8466887Z E   
2025-01-10T12:40:39.8467018Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8467128Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8467206Z E          ...
2025-01-10T12:40:39.8467293Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8467426Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8467542Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8467622Z E          ...
2025-01-10T12:40:39.8467711Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8467835Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8467943Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8467947Z 
2025-01-10T12:40:39.8468037Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8468433Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-10T12:40:39.8468437Z 
2025-01-10T12:40:39.8468565Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8468698Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8468794Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8468933Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8469066Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8469159Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8469241Z err_msg = None
2025-01-10T12:40:39.8469245Z 
2025-01-10T12:40:39.8469355Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8469448Z         if err_msg is None:
2025-01-10T12:40:39.8469546Z             if left.shape != right.shape:
2025-01-10T12:40:39.8469634Z                 raise_assert_detail(
2025-01-10T12:40:39.8469773Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8469851Z                 )
2025-01-10T12:40:39.8469921Z     
2025-01-10T12:40:39.8470002Z             diff = 0
2025-01-10T12:40:39.8470111Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8470203Z                 # count up differences
2025-01-10T12:40:39.8470378Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8470460Z                     diff += 1
2025-01-10T12:40:39.8470536Z     
2025-01-10T12:40:39.8470625Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8470767Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8470934Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8471052Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8471128Z E           
2025-01-10T12:40:39.8471244Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8471496Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8471869Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8471875Z 
2025-01-10T12:40:39.8472185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8472194Z 
2025-01-10T12:40:39.8472361Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8472364Z 
2025-01-10T12:40:39.8472589Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7eab0>
2025-01-10T12:40:39.8472752Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8472839Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8472843Z 
2025-01-10T12:40:39.8472983Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8473103Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8473192Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8473265Z         try:
2025-01-10T12:40:39.8473408Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8473489Z         except KeyError:
2025-01-10T12:40:39.8473626Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8473778Z     
2025-01-10T12:40:39.8473869Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8473962Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8474056Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8474187Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8474278Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8474372Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8474482Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8474563Z             else:
2025-01-10T12:40:39.8474659Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8474770Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8474774Z 
2025-01-10T12:40:39.8474899Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8475018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8475165Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8475243Z     ???
2025-01-10T12:40:39.8475352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8475356Z 
2025-01-10T12:40:39.8475433Z >   ???
2025-01-10T12:40:39.8475564Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8475635Z E   
2025-01-10T12:40:39.8475765Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8475874Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8475957Z E          ...
2025-01-10T12:40:39.8476044Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8476287Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8476399Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8476476Z E          ...
2025-01-10T12:40:39.8476562Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8476697Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8476802Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8476805Z 
2025-01-10T12:40:39.8476901Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8477156Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-10T12:40:39.8477161Z 
2025-01-10T12:40:39.8477290Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8477536Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8477634Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8477769Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8477891Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8477994Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8478069Z err_msg = None
2025-01-10T12:40:39.8478073Z 
2025-01-10T12:40:39.8478186Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8478272Z         if err_msg is None:
2025-01-10T12:40:39.8478367Z             if left.shape != right.shape:
2025-01-10T12:40:39.8478455Z                 raise_assert_detail(
2025-01-10T12:40:39.8478595Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8478672Z                 )
2025-01-10T12:40:39.8478743Z     
2025-01-10T12:40:39.8478826Z             diff = 0
2025-01-10T12:40:39.8478936Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8479029Z                 # count up differences
2025-01-10T12:40:39.8479196Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8479281Z                     diff += 1
2025-01-10T12:40:39.8479352Z     
2025-01-10T12:40:39.8479560Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8479693Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8479893Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8480099Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8480226Z E           
2025-01-10T12:40:39.8480418Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8480879Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8481242Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8481252Z 
2025-01-10T12:40:39.8481560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8481564Z 
2025-01-10T12:40:39.8481734Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8481738Z 
2025-01-10T12:40:39.8481962Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7ec30>
2025-01-10T12:40:39.8482130Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8482212Z attr = 'j_blues'
2025-01-10T12:40:39.8482216Z 
2025-01-10T12:40:39.8482352Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8482472Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8482558Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8482639Z         try:
2025-01-10T12:40:39.8482781Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8482862Z         except KeyError:
2025-01-10T12:40:39.8483001Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8483072Z     
2025-01-10T12:40:39.8483162Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8483256Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8483349Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8483478Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8483664Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8483758Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8483871Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8483945Z             else:
2025-01-10T12:40:39.8484044Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8484150Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8484163Z 
2025-01-10T12:40:39.8484286Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8484403Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8484546Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8484623Z     ???
2025-01-10T12:40:39.8484732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8484736Z 
2025-01-10T12:40:39.8484811Z >   ???
2025-01-10T12:40:39.8484935Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8485016Z E   
2025-01-10T12:40:39.8485142Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8485258Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8485332Z E          ...
2025-01-10T12:40:39.8485425Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8485557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8485772Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8485850Z E          ...
2025-01-10T12:40:39.8485936Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8486173Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8486279Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8486282Z 
2025-01-10T12:40:39.8486375Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8486581Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-10T12:40:39.8486590Z 
2025-01-10T12:40:39.8486720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8486845Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8486943Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8487075Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8487203Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8487300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8487385Z err_msg = None
2025-01-10T12:40:39.8487389Z 
2025-01-10T12:40:39.8487511Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8487592Z         if err_msg is None:
2025-01-10T12:40:39.8487690Z             if left.shape != right.shape:
2025-01-10T12:40:39.8487778Z                 raise_assert_detail(
2025-01-10T12:40:39.8487925Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8487997Z                 )
2025-01-10T12:40:39.8488072Z     
2025-01-10T12:40:39.8488158Z             diff = 0
2025-01-10T12:40:39.8488269Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8488361Z                 # count up differences
2025-01-10T12:40:39.8488548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8488632Z                     diff += 1
2025-01-10T12:40:39.8488704Z     
2025-01-10T12:40:39.8488798Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8488950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8489127Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8489238Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8489316Z E           
2025-01-10T12:40:39.8489551Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8489809Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8490070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8490075Z 
2025-01-10T12:40:39.8490372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8490377Z 
2025-01-10T12:40:39.8490551Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8490555Z 
2025-01-10T12:40:39.8490780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7f9b0>
2025-01-10T12:40:39.8490942Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8491040Z attr = 'lines'
2025-01-10T12:40:39.8491169Z 
2025-01-10T12:40:39.8491306Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8491427Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8491514Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8491591Z         try:
2025-01-10T12:40:39.8491729Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8491815Z         except KeyError:
2025-01-10T12:40:39.8491953Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8492029Z     
2025-01-10T12:40:39.8492115Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8492219Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8492313Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8492444Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8492534Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8492623Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8492738Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8492818Z             else:
2025-01-10T12:40:39.8492918Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8493022Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8493027Z 
2025-01-10T12:40:39.8493155Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8493267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8493416Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8493488Z     ???
2025-01-10T12:40:39.8493607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8493611Z 
2025-01-10T12:40:39.8493686Z >   ???
2025-01-10T12:40:39.8493813Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8493889Z E   
2025-01-10T12:40:39.8494017Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8494132Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8494210Z E          ...
2025-01-10T12:40:39.8494305Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8494432Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8494550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8494624Z E          ...
2025-01-10T12:40:39.8494715Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8494840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8495037Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8495042Z 
2025-01-10T12:40:39.8495138Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8495388Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-10T12:40:39.8495392Z 
2025-01-10T12:40:39.8495613Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fa70>
2025-01-10T12:40:39.8495782Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8495875Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8495880Z 
2025-01-10T12:40:39.8496014Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8496319Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8496408Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8496486Z         try:
2025-01-10T12:40:39.8496630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8496711Z         except KeyError:
2025-01-10T12:40:39.8496859Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8496929Z     
2025-01-10T12:40:39.8497020Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8497116Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8497209Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8497338Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8497557Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8497650Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8497769Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8497774Z 
2025-01-10T12:40:39.8497904Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8498020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8498023Z 
2025-01-10T12:40:39.8498196Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8498288Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8498401Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8498484Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8498633Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8498717Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8498845Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8498943Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8499027Z err_msg = None
2025-01-10T12:40:39.8499031Z 
2025-01-10T12:40:39.8499148Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8499259Z         if err_msg is None:
2025-01-10T12:40:39.8499428Z             if left.shape != right.shape:
2025-01-10T12:40:39.8499569Z                 raise_assert_detail(
2025-01-10T12:40:39.8499816Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8499945Z                 )
2025-01-10T12:40:39.8500069Z     
2025-01-10T12:40:39.8500194Z             diff = 0
2025-01-10T12:40:39.8500370Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8500462Z                 # count up differences
2025-01-10T12:40:39.8500636Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8500719Z                     diff += 1
2025-01-10T12:40:39.8500796Z     
2025-01-10T12:40:39.8500884Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8501022Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8501200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8501306Z E           AssertionError: Series are different
2025-01-10T12:40:39.8501383Z E           
2025-01-10T12:40:39.8501485Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8501977Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8502308Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8502637Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8502641Z 
2025-01-10T12:40:39.8502958Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8503285Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-10T12:40:39.8503289Z 
2025-01-10T12:40:39.8503514Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fb30>
2025-01-10T12:40:39.8503693Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8503784Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8503789Z 
2025-01-10T12:40:39.8503934Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8504051Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8504145Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8504218Z         try:
2025-01-10T12:40:39.8504363Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8504445Z         except KeyError:
2025-01-10T12:40:39.8504588Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8504663Z     
2025-01-10T12:40:39.8504753Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8504854Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8504949Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8505088Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8505175Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8505270Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8505380Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8505384Z 
2025-01-10T12:40:39.8505516Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8505632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8505636Z 
2025-01-10T12:40:39.8505776Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8505861Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8505977Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8506222Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8506413Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8506505Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8506610Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8506694Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8506773Z err_msg = None
2025-01-10T12:40:39.8506777Z 
2025-01-10T12:40:39.8506889Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8506972Z         if err_msg is None:
2025-01-10T12:40:39.8507214Z             if left.shape != right.shape:
2025-01-10T12:40:39.8507302Z                 raise_assert_detail(
2025-01-10T12:40:39.8507451Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8507524Z                 )
2025-01-10T12:40:39.8507601Z     
2025-01-10T12:40:39.8507675Z             diff = 0
2025-01-10T12:40:39.8507797Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8507889Z                 # count up differences
2025-01-10T12:40:39.8508057Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8508140Z                     diff += 1
2025-01-10T12:40:39.8508211Z     
2025-01-10T12:40:39.8508301Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8508436Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8508617Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8508725Z E           AssertionError: Series are different
2025-01-10T12:40:39.8508803Z E           
2025-01-10T12:40:39.8508904Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8509267Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8509757Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8510124Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8510137Z 
2025-01-10T12:40:39.8510446Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8510655Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-10T12:40:39.8510659Z 
2025-01-10T12:40:39.8510786Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8510922Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8511020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8511155Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8511281Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8511379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8511461Z err_msg = None
2025-01-10T12:40:39.8511465Z 
2025-01-10T12:40:39.8511572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8511658Z         if err_msg is None:
2025-01-10T12:40:39.8511752Z             if left.shape != right.shape:
2025-01-10T12:40:39.8511842Z                 raise_assert_detail(
2025-01-10T12:40:39.8511986Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8512067Z                 )
2025-01-10T12:40:39.8512139Z     
2025-01-10T12:40:39.8512303Z             diff = 0
2025-01-10T12:40:39.8512416Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8512509Z                 # count up differences
2025-01-10T12:40:39.8512674Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8512759Z                     diff += 1
2025-01-10T12:40:39.8512839Z     
2025-01-10T12:40:39.8512926Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8513061Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8513230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8513347Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8513420Z E           
2025-01-10T12:40:39.8513536Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8513795Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8514055Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8514138Z 
2025-01-10T12:40:39.8514444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8514449Z 
2025-01-10T12:40:39.8514615Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8514619Z 
2025-01-10T12:40:39.8514851Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fd70>
2025-01-10T12:40:39.8515049Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>, attr = 'nu'
2025-01-10T12:40:39.8515058Z 
2025-01-10T12:40:39.8515195Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8515317Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8515402Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8515482Z         try:
2025-01-10T12:40:39.8515622Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8515706Z         except KeyError:
2025-01-10T12:40:39.8515843Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8515917Z     
2025-01-10T12:40:39.8516004Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8516210Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8516303Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8516436Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8516528Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8516624Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8516739Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8516743Z 
2025-01-10T12:40:39.8516868Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8516985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8517136Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8517214Z     ???
2025-01-10T12:40:39.8517324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8517327Z 
2025-01-10T12:40:39.8517404Z >   ???
2025-01-10T12:40:39.8517533Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8517609Z E   
2025-01-10T12:40:39.8517739Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8517856Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8518100Z E          ...
2025-01-10T12:40:39.8518258Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8518483Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8518670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8518798Z E          ...
2025-01-10T12:40:39.8518943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8519171Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8519285Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8519289Z 
2025-01-10T12:40:39.8519385Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8519610Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-10T12:40:39.8519614Z 
2025-01-10T12:40:39.8519746Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8519884Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8519984Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8520121Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8520244Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8520472Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8520551Z err_msg = None
2025-01-10T12:40:39.8520555Z 
2025-01-10T12:40:39.8520670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8520752Z         if err_msg is None:
2025-01-10T12:40:39.8520852Z             if left.shape != right.shape:
2025-01-10T12:40:39.8520937Z                 raise_assert_detail(
2025-01-10T12:40:39.8521085Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8521163Z                 )
2025-01-10T12:40:39.8521234Z     
2025-01-10T12:40:39.8521316Z             diff = 0
2025-01-10T12:40:39.8521428Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8521521Z                 # count up differences
2025-01-10T12:40:39.8521687Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8521769Z                     diff += 1
2025-01-10T12:40:39.8521844Z     
2025-01-10T12:40:39.8521936Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8522073Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8522246Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8522357Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8522434Z E           
2025-01-10T12:40:39.8522547Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8522814Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8523076Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8523084Z 
2025-01-10T12:40:39.8523391Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8523395Z 
2025-01-10T12:40:39.8523569Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8523573Z 
2025-01-10T12:40:39.8523803Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fe30>
2025-01-10T12:40:39.8524055Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8524145Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8524149Z 
2025-01-10T12:40:39.8524288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8524409Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8524495Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8524578Z         try:
2025-01-10T12:40:39.8524717Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8524806Z         except KeyError:
2025-01-10T12:40:39.8524943Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8525018Z     
2025-01-10T12:40:39.8525109Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8525206Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8525300Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8525432Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8525528Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8525619Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8525734Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8525739Z 
2025-01-10T12:40:39.8525865Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8525981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8526330Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8526407Z     ???
2025-01-10T12:40:39.8526515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8526525Z 
2025-01-10T12:40:39.8526596Z >   ???
2025-01-10T12:40:39.8526728Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8526799Z E   
2025-01-10T12:40:39.8526931Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8527048Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8527127Z E          ...
2025-01-10T12:40:39.8527216Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8527348Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8527458Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8527540Z E          ...
2025-01-10T12:40:39.8527631Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8527760Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8527866Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8527875Z 
2025-01-10T12:40:39.8527966Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8528171Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-10T12:40:39.8528176Z 
2025-01-10T12:40:39.8528301Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8528437Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8528535Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8528669Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8528794Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8528896Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8528978Z err_msg = None
2025-01-10T12:40:39.8528982Z 
2025-01-10T12:40:39.8529090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8529178Z         if err_msg is None:
2025-01-10T12:40:39.8529273Z             if left.shape != right.shape:
2025-01-10T12:40:39.8529361Z                 raise_assert_detail(
2025-01-10T12:40:39.8529502Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8529580Z                 )
2025-01-10T12:40:39.8529790Z     
2025-01-10T12:40:39.8529872Z             diff = 0
2025-01-10T12:40:39.8529985Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8530078Z                 # count up differences
2025-01-10T12:40:39.8530247Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8530332Z                     diff += 1
2025-01-10T12:40:39.8530407Z     
2025-01-10T12:40:39.8530503Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8530643Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8530810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8530927Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8531001Z E           
2025-01-10T12:40:39.8531118Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8531375Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8531635Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8531750Z 
2025-01-10T12:40:39.8532067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8532071Z 
2025-01-10T12:40:39.8532238Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8532242Z 
2025-01-10T12:40:39.8532473Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fef0>
2025-01-10T12:40:39.8532676Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>, attr = 'f_lu'
2025-01-10T12:40:39.8532680Z 
2025-01-10T12:40:39.8532819Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8532939Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8533025Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8533108Z         try:
2025-01-10T12:40:39.8533246Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8533332Z         except KeyError:
2025-01-10T12:40:39.8533470Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8533546Z     
2025-01-10T12:40:39.8533632Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8533729Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8533816Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8533953Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8534044Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8534141Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8534251Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8534254Z 
2025-01-10T12:40:39.8534383Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8534498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8534647Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8534725Z     ???
2025-01-10T12:40:39.8534832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8534836Z 
2025-01-10T12:40:39.8534913Z >   ???
2025-01-10T12:40:39.8535042Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8535118Z E   
2025-01-10T12:40:39.8535244Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8535447Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8535525Z E          ...
2025-01-10T12:40:39.8535619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8535746Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8535864Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8535943Z E          ...
2025-01-10T12:40:39.8536035Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8536401Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8536581Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8536587Z 
2025-01-10T12:40:39.8536747Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8537114Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-10T12:40:39.8537120Z 
2025-01-10T12:40:39.8537346Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8537486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8537589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8537725Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8537852Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8538086Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8538163Z err_msg = None
2025-01-10T12:40:39.8538167Z 
2025-01-10T12:40:39.8538281Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8538363Z         if err_msg is None:
2025-01-10T12:40:39.8538462Z             if left.shape != right.shape:
2025-01-10T12:40:39.8538553Z                 raise_assert_detail(
2025-01-10T12:40:39.8538702Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8538775Z                 )
2025-01-10T12:40:39.8538850Z     
2025-01-10T12:40:39.8538930Z             diff = 0
2025-01-10T12:40:39.8539046Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8539137Z                 # count up differences
2025-01-10T12:40:39.8539307Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8539392Z                     diff += 1
2025-01-10T12:40:39.8539467Z     
2025-01-10T12:40:39.8539561Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8539698Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8539870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8539982Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8540060Z E           
2025-01-10T12:40:39.8540170Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8540429Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8540688Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8540696Z 
2025-01-10T12:40:39.8540998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8541002Z 
2025-01-10T12:40:39.8541173Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8541177Z 
2025-01-10T12:40:39.8541520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa86b0>
2025-01-10T12:40:39.8541688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8541772Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8541777Z 
2025-01-10T12:40:39.8541911Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8542030Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8542120Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8542197Z         try:
2025-01-10T12:40:39.8542334Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8542424Z         except KeyError:
2025-01-10T12:40:39.8542560Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8542637Z     
2025-01-10T12:40:39.8542725Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8542824Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8542919Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8543059Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8543152Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8543244Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8543361Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8543436Z             else:
2025-01-10T12:40:39.8543539Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8543737Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8543742Z 
2025-01-10T12:40:39.8543873Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8543989Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8544139Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8544212Z     ???
2025-01-10T12:40:39.8544331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8544335Z 
2025-01-10T12:40:39.8544411Z >   ???
2025-01-10T12:40:39.8544542Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8544617Z E   
2025-01-10T12:40:39.8544748Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8544865Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8544943Z E          ...
2025-01-10T12:40:39.8545045Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8545180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8545301Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8545379Z E          ...
2025-01-10T12:40:39.8545476Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8545605Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8545718Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8545722Z 
2025-01-10T12:40:39.8545818Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8546037Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-10T12:40:39.8546042Z 
2025-01-10T12:40:39.8546374Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8546510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8546615Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8546756Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8546887Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8546985Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8547067Z err_msg = None
2025-01-10T12:40:39.8547071Z 
2025-01-10T12:40:39.8547185Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8547267Z         if err_msg is None:
2025-01-10T12:40:39.8547367Z             if left.shape != right.shape:
2025-01-10T12:40:39.8547574Z                 raise_assert_detail(
2025-01-10T12:40:39.8547727Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8547802Z                 )
2025-01-10T12:40:39.8547878Z     
2025-01-10T12:40:39.8547953Z             diff = 0
2025-01-10T12:40:39.8548073Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8548169Z                 # count up differences
2025-01-10T12:40:39.8548344Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8548431Z                     diff += 1
2025-01-10T12:40:39.8548509Z     
2025-01-10T12:40:39.8548599Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8548740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8548915Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8549028Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8549112Z E           
2025-01-10T12:40:39.8549226Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8549487Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8549873Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8549882Z 
2025-01-10T12:40:39.8550186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8550195Z 
2025-01-10T12:40:39.8550373Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8550377Z 
2025-01-10T12:40:39.8550602Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa8770>
2025-01-10T12:40:39.8550774Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8550855Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8550863Z 
2025-01-10T12:40:39.8551005Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8551126Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8551214Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8551293Z         try:
2025-01-10T12:40:39.8551436Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8551529Z         except KeyError:
2025-01-10T12:40:39.8551666Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8551745Z     
2025-01-10T12:40:39.8551837Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8551936Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8552024Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8552161Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8552248Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8552342Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8552460Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8552541Z             else:
2025-01-10T12:40:39.8552642Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8552751Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8552755Z 
2025-01-10T12:40:39.8552888Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8553002Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8553154Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8553314Z     ???
2025-01-10T12:40:39.8553434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8553439Z 
2025-01-10T12:40:39.8553511Z >   ???
2025-01-10T12:40:39.8553648Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8553725Z E   
2025-01-10T12:40:39.8553858Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8553978Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8554094Z E          ...
2025-01-10T12:40:39.8554485Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8554763Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8566747Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8566910Z E          ...
2025-01-10T12:40:39.8567080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8567311Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8567516Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8567523Z 
2025-01-10T12:40:39.8567682Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8568007Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-10T12:40:39.8568012Z 
2025-01-10T12:40:39.8568154Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8568486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8568612Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8568759Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8568900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8569001Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8569086Z err_msg = None
2025-01-10T12:40:39.8569096Z 
2025-01-10T12:40:39.8569216Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8569306Z         if err_msg is None:
2025-01-10T12:40:39.8569407Z             if left.shape != right.shape:
2025-01-10T12:40:39.8569500Z                 raise_assert_detail(
2025-01-10T12:40:39.8569662Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8569752Z                 )
2025-01-10T12:40:39.8569830Z     
2025-01-10T12:40:39.8569909Z             diff = 0
2025-01-10T12:40:39.8570029Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8570115Z                 # count up differences
2025-01-10T12:40:39.8570294Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8570371Z                     diff += 1
2025-01-10T12:40:39.8570448Z     
2025-01-10T12:40:39.8570540Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8570686Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8570861Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8570983Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8571057Z E           
2025-01-10T12:40:39.8571177Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8571451Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8571825Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8571832Z 
2025-01-10T12:40:39.8572156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8572160Z 
2025-01-10T12:40:39.8572335Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8572344Z 
2025-01-10T12:40:39.8572576Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa88f0>
2025-01-10T12:40:39.8572750Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8572827Z attr = 'j_blues'
2025-01-10T12:40:39.8572831Z 
2025-01-10T12:40:39.8572978Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8573096Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8573187Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8573262Z         try:
2025-01-10T12:40:39.8573410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8573563Z         except KeyError:
2025-01-10T12:40:39.8573818Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8573940Z     
2025-01-10T12:40:39.8574098Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8574267Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8574417Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8574796Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8574937Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8575085Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8575202Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8575281Z             else:
2025-01-10T12:40:39.8575377Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8575490Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8575494Z 
2025-01-10T12:40:39.8575622Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8575749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8575906Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8575980Z     ???
2025-01-10T12:40:39.8576295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8576309Z 
2025-01-10T12:40:39.8576387Z >   ???
2025-01-10T12:40:39.8576528Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8576603Z E   
2025-01-10T12:40:39.8576742Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8576857Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8576939Z E          ...
2025-01-10T12:40:39.8577034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8577172Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8577286Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8577370Z E          ...
2025-01-10T12:40:39.8577458Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8577590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8577705Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8577709Z 
2025-01-10T12:40:39.8577805Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8578029Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-10T12:40:39.8578033Z 
2025-01-10T12:40:39.8578168Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8578310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8578412Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8578563Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8578831Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8578931Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8579016Z err_msg = None
2025-01-10T12:40:39.8579020Z 
2025-01-10T12:40:39.8579135Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8579224Z         if err_msg is None:
2025-01-10T12:40:39.8579330Z             if left.shape != right.shape:
2025-01-10T12:40:39.8579422Z                 raise_assert_detail(
2025-01-10T12:40:39.8579571Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8579654Z                 )
2025-01-10T12:40:39.8579726Z     
2025-01-10T12:40:39.8579810Z             diff = 0
2025-01-10T12:40:39.8580005Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8580153Z                 # count up differences
2025-01-10T12:40:39.8580384Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8580482Z                     diff += 1
2025-01-10T12:40:39.8580561Z     
2025-01-10T12:40:39.8580653Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8580801Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8580973Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8581223Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8581302Z E           
2025-01-10T12:40:39.8581421Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8581681Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8581948Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8581953Z 
2025-01-10T12:40:39.8582268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8582277Z 
2025-01-10T12:40:39.8582449Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8582453Z 
2025-01-10T12:40:39.8582683Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9670>
2025-01-10T12:40:39.8582850Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8582936Z attr = 'lines'
2025-01-10T12:40:39.8582940Z 
2025-01-10T12:40:39.8583085Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8583208Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8583300Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8583373Z         try:
2025-01-10T12:40:39.8583522Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8583604Z         except KeyError:
2025-01-10T12:40:39.8583748Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8583822Z     
2025-01-10T12:40:39.8583915Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8584012Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8584108Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8584240Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8584333Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8584423Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8584540Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8584619Z             else:
2025-01-10T12:40:39.8584801Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8584919Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8584923Z 
2025-01-10T12:40:39.8585050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8585174Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8585321Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8585404Z     ???
2025-01-10T12:40:39.8585519Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8585523Z 
2025-01-10T12:40:39.8585599Z >   ???
2025-01-10T12:40:39.8585729Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8585805Z E   
2025-01-10T12:40:39.8585939Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8586052Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8586333Z E          ...
2025-01-10T12:40:39.8586434Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8586576Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8586689Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8586769Z E          ...
2025-01-10T12:40:39.8586861Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8586994Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8587226Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8587231Z 
2025-01-10T12:40:39.8587326Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8587591Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-10T12:40:39.8587600Z 
2025-01-10T12:40:39.8587823Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9730>
2025-01-10T12:40:39.8587993Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8588087Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8588092Z 
2025-01-10T12:40:39.8588234Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8588350Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8588440Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8588513Z         try:
2025-01-10T12:40:39.8588665Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8588750Z         except KeyError:
2025-01-10T12:40:39.8588891Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8588964Z     
2025-01-10T12:40:39.8589057Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8589157Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8589245Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8589384Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8589474Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8589568Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8589683Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8589687Z 
2025-01-10T12:40:39.8589816Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8589933Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8589937Z 
2025-01-10T12:40:39.8590080Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8590175Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8590296Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8590385Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8590528Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8590618Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8590724Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8590946Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8591031Z err_msg = None
2025-01-10T12:40:39.8591035Z 
2025-01-10T12:40:39.8591152Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8591239Z         if err_msg is None:
2025-01-10T12:40:39.8591339Z             if left.shape != right.shape:
2025-01-10T12:40:39.8591424Z                 raise_assert_detail(
2025-01-10T12:40:39.8591581Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8591659Z                 )
2025-01-10T12:40:39.8591731Z     
2025-01-10T12:40:39.8591812Z             diff = 0
2025-01-10T12:40:39.8591925Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8592019Z                 # count up differences
2025-01-10T12:40:39.8592189Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8592299Z                     diff += 1
2025-01-10T12:40:39.8592373Z     
2025-01-10T12:40:39.8592472Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8592607Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8592785Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8592889Z E           AssertionError: Series are different
2025-01-10T12:40:39.8592967Z E           
2025-01-10T12:40:39.8593154Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8593524Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8593852Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8594177Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8594186Z 
2025-01-10T12:40:39.8594495Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8594757Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-10T12:40:39.8594761Z 
2025-01-10T12:40:39.8594985Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa97f0>
2025-01-10T12:40:39.8595151Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8595244Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8595248Z 
2025-01-10T12:40:39.8595390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8595511Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8595595Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8595670Z         try:
2025-01-10T12:40:39.8596193Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8596281Z         except KeyError:
2025-01-10T12:40:39.8596422Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8596497Z     
2025-01-10T12:40:39.8596584Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8596683Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8596909Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8597052Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8597143Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8597231Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8597342Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8597346Z 
2025-01-10T12:40:39.8597476Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8597593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8597597Z 
2025-01-10T12:40:39.8597732Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8597818Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8597926Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8598007Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8598151Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8598232Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8598338Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8598416Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8598494Z err_msg = None
2025-01-10T12:40:39.8598498Z 
2025-01-10T12:40:39.8598761Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8598846Z         if err_msg is None:
2025-01-10T12:40:39.8598939Z             if left.shape != right.shape:
2025-01-10T12:40:39.8599024Z                 raise_assert_detail(
2025-01-10T12:40:39.8599170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8599244Z                 )
2025-01-10T12:40:39.8599313Z     
2025-01-10T12:40:39.8599405Z             diff = 0
2025-01-10T12:40:39.8599610Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8599776Z                 # count up differences
2025-01-10T12:40:39.8600075Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8600207Z                     diff += 1
2025-01-10T12:40:39.8600327Z     
2025-01-10T12:40:39.8600471Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8600698Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8600992Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8601102Z E           AssertionError: Series are different
2025-01-10T12:40:39.8601174Z E           
2025-01-10T12:40:39.8601277Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8601643Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8602009Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8602473Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8602479Z 
2025-01-10T12:40:39.8602794Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8602998Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-10T12:40:39.8603002Z 
2025-01-10T12:40:39.8603133Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8603268Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8603370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8603505Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8603631Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8603728Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8603807Z err_msg = None
2025-01-10T12:40:39.8603811Z 
2025-01-10T12:40:39.8603924Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8604006Z         if err_msg is None:
2025-01-10T12:40:39.8604104Z             if left.shape != right.shape:
2025-01-10T12:40:39.8604188Z                 raise_assert_detail(
2025-01-10T12:40:39.8604335Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8604492Z                 )
2025-01-10T12:40:39.8604565Z     
2025-01-10T12:40:39.8604639Z             diff = 0
2025-01-10T12:40:39.8604760Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8604847Z                 # count up differences
2025-01-10T12:40:39.8605022Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8605107Z                     diff += 1
2025-01-10T12:40:39.8605178Z     
2025-01-10T12:40:39.8605273Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8605415Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8605590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8605706Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8605784Z E           
2025-01-10T12:40:39.8605899Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8606292Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8606557Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8606562Z 
2025-01-10T12:40:39.8606873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8606877Z 
2025-01-10T12:40:39.8607057Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8607068Z 
2025-01-10T12:40:39.8607296Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9a30>
2025-01-10T12:40:39.8607498Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>, attr = 'nu'
2025-01-10T12:40:39.8607502Z 
2025-01-10T12:40:39.8607645Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8607763Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8607857Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8607932Z         try:
2025-01-10T12:40:39.8608077Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8608281Z         except KeyError:
2025-01-10T12:40:39.8608427Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8608501Z     
2025-01-10T12:40:39.8608595Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8608689Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8608785Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8608921Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8609013Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8609103Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8609220Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8609224Z 
2025-01-10T12:40:39.8609353Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8609467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8609618Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8609696Z     ???
2025-01-10T12:40:39.8609813Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8609816Z 
2025-01-10T12:40:39.8609888Z >   ???
2025-01-10T12:40:39.8610021Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8610092Z E   
2025-01-10T12:40:39.8610224Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8610455Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8610534Z E          ...
2025-01-10T12:40:39.8610627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8610758Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8610876Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8610950Z E          ...
2025-01-10T12:40:39.8611043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8611168Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8611284Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8611288Z 
2025-01-10T12:40:39.8611378Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8611612Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-10T12:40:39.8611616Z 
2025-01-10T12:40:39.8611747Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8611891Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8611996Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8612128Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8612256Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8612351Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8612434Z err_msg = None
2025-01-10T12:40:39.8612442Z 
2025-01-10T12:40:39.8612553Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8612640Z         if err_msg is None:
2025-01-10T12:40:39.8612736Z             if left.shape != right.shape:
2025-01-10T12:40:39.8612828Z                 raise_assert_detail(
2025-01-10T12:40:39.8612974Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8613057Z                 )
2025-01-10T12:40:39.8613133Z     
2025-01-10T12:40:39.8613207Z             diff = 0
2025-01-10T12:40:39.8613326Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8613414Z                 # count up differences
2025-01-10T12:40:39.8613589Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8613670Z                     diff += 1
2025-01-10T12:40:39.8613746Z     
2025-01-10T12:40:39.8613835Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8614059Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8614234Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8614353Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8614427Z E           
2025-01-10T12:40:39.8614544Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8614811Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8615070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8615074Z 
2025-01-10T12:40:39.8615385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8615389Z 
2025-01-10T12:40:39.8615557Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8615642Z 
2025-01-10T12:40:39.8615869Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9af0>
2025-01-10T12:40:39.8616040Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8616244Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8616249Z 
2025-01-10T12:40:39.8616395Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8616513Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8616602Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8616675Z         try:
2025-01-10T12:40:39.8616823Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8616905Z         except KeyError:
2025-01-10T12:40:39.8617051Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8617122Z     
2025-01-10T12:40:39.8617215Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8617312Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8617401Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8617544Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8617631Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8617727Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8617837Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8617841Z 
2025-01-10T12:40:39.8617969Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8618082Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8618331Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8618467Z     ???
2025-01-10T12:40:39.8618665Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8618671Z 
2025-01-10T12:40:39.8618796Z >   ???
2025-01-10T12:40:39.8619010Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8619133Z E   
2025-01-10T12:40:39.8619361Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8619520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8619600Z E          ...
2025-01-10T12:40:39.8619692Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8619824Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8619942Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8620017Z E          ...
2025-01-10T12:40:39.8620109Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8620386Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8620501Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8620505Z 
2025-01-10T12:40:39.8620599Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8620800Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-10T12:40:39.8620804Z 
2025-01-10T12:40:39.8620937Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8621067Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8621169Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8621302Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8621430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8621526Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8621613Z err_msg = None
2025-01-10T12:40:39.8621617Z 
2025-01-10T12:40:39.8621732Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8621814Z         if err_msg is None:
2025-01-10T12:40:39.8621914Z             if left.shape != right.shape:
2025-01-10T12:40:39.8622000Z                 raise_assert_detail(
2025-01-10T12:40:39.8622147Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8622336Z                 )
2025-01-10T12:40:39.8622411Z     
2025-01-10T12:40:39.8622486Z             diff = 0
2025-01-10T12:40:39.8622610Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8622703Z                 # count up differences
2025-01-10T12:40:39.8622880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8622960Z                     diff += 1
2025-01-10T12:40:39.8623037Z     
2025-01-10T12:40:39.8623127Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8623273Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8623448Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8623561Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8623644Z E           
2025-01-10T12:40:39.8623757Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8624019Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8624279Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8624290Z 
2025-01-10T12:40:39.8624593Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8624597Z 
2025-01-10T12:40:39.8624771Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8624779Z 
2025-01-10T12:40:39.8625004Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9bb0>
2025-01-10T12:40:39.8625214Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>, attr = 'f_lu'
2025-01-10T12:40:39.8625218Z 
2025-01-10T12:40:39.8625358Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8625479Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8625570Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8625644Z         try:
2025-01-10T12:40:39.8625877Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8625962Z         except KeyError:
2025-01-10T12:40:39.8626308Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8626391Z     
2025-01-10T12:40:39.8626488Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8626582Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8626676Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8626815Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8626911Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8627000Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8627116Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8627121Z 
2025-01-10T12:40:39.8627251Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8627364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8627518Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8627590Z     ???
2025-01-10T12:40:39.8627706Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8627710Z 
2025-01-10T12:40:39.8627782Z >   ???
2025-01-10T12:40:39.8627913Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8627985Z E   
2025-01-10T12:40:39.8628117Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8628355Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8628441Z E          ...
2025-01-10T12:40:39.8628528Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8628665Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8628783Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8628857Z E          ...
2025-01-10T12:40:39.8628949Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8629084Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8629194Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8629199Z 
2025-01-10T12:40:39.8629290Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8629515Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-10T12:40:39.8629519Z 
2025-01-10T12:40:39.8629648Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8629791Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8629892Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8630032Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8630176Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8630272Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8630359Z err_msg = None
2025-01-10T12:40:39.8630363Z 
2025-01-10T12:40:39.8630474Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8630562Z         if err_msg is None:
2025-01-10T12:40:39.8630657Z             if left.shape != right.shape:
2025-01-10T12:40:39.8630748Z                 raise_assert_detail(
2025-01-10T12:40:39.8630890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8630973Z                 )
2025-01-10T12:40:39.8631045Z     
2025-01-10T12:40:39.8631124Z             diff = 0
2025-01-10T12:40:39.8631237Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8631332Z                 # count up differences
2025-01-10T12:40:39.8631507Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8631587Z                     diff += 1
2025-01-10T12:40:39.8631663Z     
2025-01-10T12:40:39.8631751Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8632007Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8632182Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8632300Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8632374Z E           
2025-01-10T12:40:39.8632491Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8632750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8633014Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8633018Z 
2025-01-10T12:40:39.8633323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8633327Z 
2025-01-10T12:40:39.8633493Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8633574Z 
2025-01-10T12:40:39.8633801Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6faa330>
2025-01-10T12:40:39.8633974Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8634054Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8634059Z 
2025-01-10T12:40:39.8634200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8634315Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8634405Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8634478Z         try:
2025-01-10T12:40:39.8634624Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8634709Z         except KeyError:
2025-01-10T12:40:39.8634853Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8634923Z     
2025-01-10T12:40:39.8635016Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8635109Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8635209Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8635348Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8635436Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8635532Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8635642Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8635721Z             else:
2025-01-10T12:40:39.8635816Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8635930Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8635934Z 
2025-01-10T12:40:39.8636165Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8636290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8636434Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8636511Z     ???
2025-01-10T12:40:39.8636621Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8636638Z 
2025-01-10T12:40:39.8636710Z >   ???
2025-01-10T12:40:39.8636841Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8636910Z E   
2025-01-10T12:40:39.8637111Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8637299Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8637428Z E          ...
2025-01-10T12:40:39.8637573Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8637790Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8638165Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8638254Z E          ...
2025-01-10T12:40:39.8638348Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8638490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8638600Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8638604Z 
2025-01-10T12:40:39.8638699Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8638926Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-10T12:40:39.8638930Z 
2025-01-10T12:40:39.8639055Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8639186Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8639284Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8639419Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8639544Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8639646Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8639729Z err_msg = None
2025-01-10T12:40:39.8639733Z 
2025-01-10T12:40:39.8639843Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8640067Z         if err_msg is None:
2025-01-10T12:40:39.8640161Z             if left.shape != right.shape:
2025-01-10T12:40:39.8640250Z                 raise_assert_detail(
2025-01-10T12:40:39.8640396Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8640474Z                 )
2025-01-10T12:40:39.8640547Z     
2025-01-10T12:40:39.8640627Z             diff = 0
2025-01-10T12:40:39.8640737Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8640829Z                 # count up differences
2025-01-10T12:40:39.8641005Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8641091Z                     diff += 1
2025-01-10T12:40:39.8641168Z     
2025-01-10T12:40:39.8641257Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8641395Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8641565Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8641687Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8641760Z E           
2025-01-10T12:40:39.8641877Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8642130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8642396Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8642401Z 
2025-01-10T12:40:39.8642716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8642720Z 
2025-01-10T12:40:39.8642887Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8642892Z 
2025-01-10T12:40:39.8643118Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6faa3f0>
2025-01-10T12:40:39.8643284Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8643372Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8643376Z 
2025-01-10T12:40:39.8643517Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8643721Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8643815Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8643888Z         try:
2025-01-10T12:40:39.8644033Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8644114Z         except KeyError:
2025-01-10T12:40:39.8644255Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8644330Z     
2025-01-10T12:40:39.8644424Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8644516Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8644612Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8644742Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8644832Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8644923Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8645038Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8645122Z             else:
2025-01-10T12:40:39.8645218Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8645332Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8645336Z 
2025-01-10T12:40:39.8645462Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8645580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8645831Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8645908Z     ???
2025-01-10T12:40:39.8646016Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8646020Z 
2025-01-10T12:40:39.8646324Z >   ???
2025-01-10T12:40:39.8646479Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8646557Z E   
2025-01-10T12:40:39.8646691Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8646801Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8646889Z E          ...
2025-01-10T12:40:39.8646977Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8647112Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8647223Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8647302Z E          ...
2025-01-10T12:40:39.8647388Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8647524Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8647628Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8647632Z 
2025-01-10T12:40:39.8647727Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8647933Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-10T12:40:39.8647943Z 
2025-01-10T12:40:39.8648072Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8648208Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8648309Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8648446Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8648570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8648677Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8648757Z err_msg = None
2025-01-10T12:40:39.8648762Z 
2025-01-10T12:40:39.8648878Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8648961Z         if err_msg is None:
2025-01-10T12:40:39.8649061Z             if left.shape != right.shape:
2025-01-10T12:40:39.8649153Z                 raise_assert_detail(
2025-01-10T12:40:39.8649294Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8649373Z                 )
2025-01-10T12:40:39.8649444Z     
2025-01-10T12:40:39.8649652Z             diff = 0
2025-01-10T12:40:39.8649770Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8649863Z                 # count up differences
2025-01-10T12:40:39.8650033Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8650119Z                     diff += 1
2025-01-10T12:40:39.8650190Z     
2025-01-10T12:40:39.8650290Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8650427Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8650602Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8650716Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8650796Z E           
2025-01-10T12:40:39.8650913Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8651170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8651429Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8651543Z 
2025-01-10T12:40:39.8651849Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8651859Z 
2025-01-10T12:40:39.8652027Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8652032Z 
2025-01-10T12:40:39.8652260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6faa570>
2025-01-10T12:40:39.8652429Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8652511Z attr = 'j_blues'
2025-01-10T12:40:39.8652514Z 
2025-01-10T12:40:39.8652652Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8652773Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8652858Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8652943Z         try:
2025-01-10T12:40:39.8653083Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8653170Z         except KeyError:
2025-01-10T12:40:39.8653313Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8653384Z     
2025-01-10T12:40:39.8653483Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8653577Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8653676Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8653810Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8653903Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8653997Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8654105Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8654183Z             else:
2025-01-10T12:40:39.8654275Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8654390Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8654399Z 
2025-01-10T12:40:39.8654523Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8654645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8654794Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8654867Z     ???
2025-01-10T12:40:39.8654985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8654990Z 
2025-01-10T12:40:39.8655061Z >   ???
2025-01-10T12:40:39.8655193Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8655365Z E   
2025-01-10T12:40:39.8655503Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8655615Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8655697Z E          ...
2025-01-10T12:40:39.8655798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8655934Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8656191Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8656337Z E          ...
2025-01-10T12:40:39.8656486Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8656699Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8656881Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8656888Z 
2025-01-10T12:40:39.8657040Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8657404Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-10T12:40:39.8657419Z 
2025-01-10T12:40:39.8657552Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8657686Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8657782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8657917Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8658181Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8658278Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8658363Z err_msg = None
2025-01-10T12:40:39.8658367Z 
2025-01-10T12:40:39.8658479Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8658568Z         if err_msg is None:
2025-01-10T12:40:39.8658667Z             if left.shape != right.shape:
2025-01-10T12:40:39.8658760Z                 raise_assert_detail(
2025-01-10T12:40:39.8658911Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8658990Z                 )
2025-01-10T12:40:39.8659061Z     
2025-01-10T12:40:39.8659140Z             diff = 0
2025-01-10T12:40:39.8659253Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8659348Z                 # count up differences
2025-01-10T12:40:39.8659534Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8659614Z                     diff += 1
2025-01-10T12:40:39.8659690Z     
2025-01-10T12:40:39.8659779Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8659920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8660094Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8660214Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8660288Z E           
2025-01-10T12:40:39.8660409Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8660666Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8660931Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8660936Z 
2025-01-10T12:40:39.8661247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8661252Z 
2025-01-10T12:40:39.8661534Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8661539Z 
2025-01-10T12:40:39.8661771Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab2f0>
2025-01-10T12:40:39.8661940Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8662017Z attr = 'lines'
2025-01-10T12:40:39.8662021Z 
2025-01-10T12:40:39.8662170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8662287Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8662378Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8662451Z         try:
2025-01-10T12:40:39.8662595Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8662678Z         except KeyError:
2025-01-10T12:40:39.8662825Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8662897Z     
2025-01-10T12:40:39.8662990Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8663091Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8663185Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8663317Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8663410Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8663504Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8663618Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8663802Z             else:
2025-01-10T12:40:39.8663897Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8664012Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8664016Z 
2025-01-10T12:40:39.8664143Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8664269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8664417Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8664500Z     ???
2025-01-10T12:40:39.8664614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8664624Z 
2025-01-10T12:40:39.8664695Z >   ???
2025-01-10T12:40:39.8664827Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8664898Z E   
2025-01-10T12:40:39.8665034Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8665147Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8665230Z E          ...
2025-01-10T12:40:39.8665323Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8665461Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8665576Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8665654Z E          ...
2025-01-10T12:40:39.8665743Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8665873Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8665981Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8665989Z 
2025-01-10T12:40:39.8666265Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8666583Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-10T12:40:39.8666588Z 
2025-01-10T12:40:39.8666812Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab3b0>
2025-01-10T12:40:39.8666992Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8667082Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8667086Z 
2025-01-10T12:40:39.8667233Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8667348Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8667440Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8667517Z         try:
2025-01-10T12:40:39.8667662Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8667743Z         except KeyError:
2025-01-10T12:40:39.8668007Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8668086Z     
2025-01-10T12:40:39.8668175Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8668273Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8668367Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8668505Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8668597Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8668688Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8668796Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8668800Z 
2025-01-10T12:40:39.8668926Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8669037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8669040Z 
2025-01-10T12:40:39.8669178Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8669274Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8669384Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8669471Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8669612Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8669701Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8669923Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8670007Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8670086Z err_msg = None
2025-01-10T12:40:39.8670090Z 
2025-01-10T12:40:39.8670205Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8670288Z         if err_msg is None:
2025-01-10T12:40:39.8670389Z             if left.shape != right.shape:
2025-01-10T12:40:39.8670478Z                 raise_assert_detail(
2025-01-10T12:40:39.8670622Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8670706Z                 )
2025-01-10T12:40:39.8670776Z     
2025-01-10T12:40:39.8670857Z             diff = 0
2025-01-10T12:40:39.8670969Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8671061Z                 # count up differences
2025-01-10T12:40:39.8671230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8671321Z                     diff += 1
2025-01-10T12:40:39.8671392Z     
2025-01-10T12:40:39.8671485Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8671622Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8671798Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8671902Z E           AssertionError: Series are different
2025-01-10T12:40:39.8671981Z E           
2025-01-10T12:40:39.8672088Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8672454Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8672788Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8673200Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8673206Z 
2025-01-10T12:40:39.8673517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8673807Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-10T12:40:39.8673812Z 
2025-01-10T12:40:39.8674033Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab470>
2025-01-10T12:40:39.8674200Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8674290Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8674299Z 
2025-01-10T12:40:39.8674440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8674562Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8674653Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8674730Z         try:
2025-01-10T12:40:39.8674871Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8674962Z         except KeyError:
2025-01-10T12:40:39.8675101Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8675179Z     
2025-01-10T12:40:39.8675345Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8675633Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8675785Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8676017Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8676289Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8676447Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8676570Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8676574Z 
2025-01-10T12:40:39.8676701Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8676827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8676831Z 
2025-01-10T12:40:39.8676969Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8677061Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8677172Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8677263Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8677402Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8677492Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8677605Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8677684Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8677766Z err_msg = None
2025-01-10T12:40:39.8677769Z 
2025-01-10T12:40:39.8677879Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8677970Z         if err_msg is None:
2025-01-10T12:40:39.8678066Z             if left.shape != right.shape:
2025-01-10T12:40:39.8678156Z                 raise_assert_detail(
2025-01-10T12:40:39.8678296Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8678379Z                 )
2025-01-10T12:40:39.8678450Z     
2025-01-10T12:40:39.8678535Z             diff = 0
2025-01-10T12:40:39.8678652Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8678745Z                 # count up differences
2025-01-10T12:40:39.8678919Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8679000Z                     diff += 1
2025-01-10T12:40:39.8679076Z     
2025-01-10T12:40:39.8679163Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8679308Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8679603Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8679716Z E           AssertionError: Series are different
2025-01-10T12:40:39.8679789Z E           
2025-01-10T12:40:39.8679896Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8680258Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8680638Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8681007Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8681115Z 
2025-01-10T12:40:39.8681424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8681637Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-10T12:40:39.8681642Z 
2025-01-10T12:40:39.8681773Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8681904Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8682007Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8682139Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8682267Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8682367Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8682450Z err_msg = None
2025-01-10T12:40:39.8682454Z 
2025-01-10T12:40:39.8682569Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8682652Z         if err_msg is None:
2025-01-10T12:40:39.8682755Z             if left.shape != right.shape:
2025-01-10T12:40:39.8682842Z                 raise_assert_detail(
2025-01-10T12:40:39.8682989Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8683063Z                 )
2025-01-10T12:40:39.8683141Z     
2025-01-10T12:40:39.8683221Z             diff = 0
2025-01-10T12:40:39.8683339Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8683426Z                 # count up differences
2025-01-10T12:40:39.8683601Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8683682Z                     diff += 1
2025-01-10T12:40:39.8683765Z     
2025-01-10T12:40:39.8683854Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8683994Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8684167Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8684281Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8684362Z E           
2025-01-10T12:40:39.8684476Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8684841Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8685103Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8685117Z 
2025-01-10T12:40:39.8685417Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8685421Z 
2025-01-10T12:40:39.8685594Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8685598Z 
2025-01-10T12:40:39.8685823Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab6b0>
2025-01-10T12:40:39.8686028Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>, attr = 'nu'
2025-01-10T12:40:39.8686032Z 
2025-01-10T12:40:39.8686396Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8686584Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8686721Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8687046Z         try:
2025-01-10T12:40:39.8687211Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8687294Z         except KeyError:
2025-01-10T12:40:39.8687439Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8687517Z     
2025-01-10T12:40:39.8687611Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8687704Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8687799Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8687931Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8688035Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8688126Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8688243Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8688247Z 
2025-01-10T12:40:39.8688378Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8688496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8688652Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8688724Z     ???
2025-01-10T12:40:39.8688838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8688842Z 
2025-01-10T12:40:39.8688911Z >   ???
2025-01-10T12:40:39.8689041Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8689112Z E   
2025-01-10T12:40:39.8689247Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8689361Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8689449Z E          ...
2025-01-10T12:40:39.8689540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8689676Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8689795Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8689870Z E          ...
2025-01-10T12:40:39.8689966Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8690094Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8690204Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8690208Z 
2025-01-10T12:40:39.8690298Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8690556Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-10T12:40:39.8690560Z 
2025-01-10T12:40:39.8690689Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8690955Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8691065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8691205Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8691336Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8691438Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8691524Z err_msg = None
2025-01-10T12:40:39.8691528Z 
2025-01-10T12:40:39.8691643Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8691731Z         if err_msg is None:
2025-01-10T12:40:39.8691830Z             if left.shape != right.shape:
2025-01-10T12:40:39.8691920Z                 raise_assert_detail(
2025-01-10T12:40:39.8692070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8692150Z                 )
2025-01-10T12:40:39.8692221Z     
2025-01-10T12:40:39.8692306Z             diff = 0
2025-01-10T12:40:39.8692425Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8692515Z                 # count up differences
2025-01-10T12:40:39.8692690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8692769Z                     diff += 1
2025-01-10T12:40:39.8692934Z     
2025-01-10T12:40:39.8693024Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8693166Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8693335Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8693458Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8693535Z E           
2025-01-10T12:40:39.8693653Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8693912Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8694173Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8694182Z 
2025-01-10T12:40:39.8694570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8694578Z 
2025-01-10T12:40:39.8694869Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8694876Z 
2025-01-10T12:40:39.8695273Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab770>
2025-01-10T12:40:39.8695575Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8695662Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8695666Z 
2025-01-10T12:40:39.8695813Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8695931Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8696027Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8696280Z         try:
2025-01-10T12:40:39.8696437Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8696522Z         except KeyError:
2025-01-10T12:40:39.8696667Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8696739Z     
2025-01-10T12:40:39.8696834Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8696930Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8697026Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8697294Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8697385Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8697482Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8697600Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8697605Z 
2025-01-10T12:40:39.8697738Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8697860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8698037Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8698110Z     ???
2025-01-10T12:40:39.8698227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8698231Z 
2025-01-10T12:40:39.8698303Z >   ???
2025-01-10T12:40:39.8698439Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8698514Z E   
2025-01-10T12:40:39.8698674Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8698809Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8698883Z E          ...
2025-01-10T12:40:39.8698978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8699108Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8699229Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8699303Z E          ...
2025-01-10T12:40:39.8699515Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8699642Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8699754Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8699758Z 
2025-01-10T12:40:39.8699849Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8700074Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-10T12:40:39.8700078Z 
2025-01-10T12:40:39.8700213Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8700348Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8700448Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8700583Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8700713Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8700812Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8700896Z err_msg = None
2025-01-10T12:40:39.8700900Z 
2025-01-10T12:40:39.8701012Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8701102Z         if err_msg is None:
2025-01-10T12:40:39.8701204Z             if left.shape != right.shape:
2025-01-10T12:40:39.8701290Z                 raise_assert_detail(
2025-01-10T12:40:39.8701442Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8701517Z                 )
2025-01-10T12:40:39.8701598Z     
2025-01-10T12:40:39.8701674Z             diff = 0
2025-01-10T12:40:39.8701792Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8701879Z                 # count up differences
2025-01-10T12:40:39.8702056Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8702140Z                     diff += 1
2025-01-10T12:40:39.8702217Z     
2025-01-10T12:40:39.8702307Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8702450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8702621Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8702739Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8702819Z E           
2025-01-10T12:40:39.8702932Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8703287Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8703548Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8703563Z 
2025-01-10T12:40:39.8703874Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8703878Z 
2025-01-10T12:40:39.8704052Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8704056Z 
2025-01-10T12:40:39.8704286Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab830>
2025-01-10T12:40:39.8704498Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>, attr = 'f_lu'
2025-01-10T12:40:39.8704502Z 
2025-01-10T12:40:39.8704640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8704763Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8704947Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8705049Z         try:
2025-01-10T12:40:39.8705203Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8705286Z         except KeyError:
2025-01-10T12:40:39.8705432Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8705505Z     
2025-01-10T12:40:39.8705598Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8705693Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8705787Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8705925Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8706023Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8706307Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8706435Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8706440Z 
2025-01-10T12:40:39.8706570Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8706699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8706875Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8706948Z     ???
2025-01-10T12:40:39.8707063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8707067Z 
2025-01-10T12:40:39.8707140Z >   ???
2025-01-10T12:40:39.8707271Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8707344Z E   
2025-01-10T12:40:39.8707479Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8707595Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8707675Z E          ...
2025-01-10T12:40:39.8707765Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8707903Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8708016Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8708097Z E          ...
2025-01-10T12:40:39.8708202Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8708328Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8708442Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8708445Z 
2025-01-10T12:40:39.8708536Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8708789Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-10T12:40:39.8708793Z 
2025-01-10T12:40:39.8708925Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8709391Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8709493Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8709633Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8709762Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8709861Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8709947Z err_msg = None
2025-01-10T12:40:39.8709951Z 
2025-01-10T12:40:39.8710062Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8710152Z         if err_msg is None:
2025-01-10T12:40:39.8710249Z             if left.shape != right.shape:
2025-01-10T12:40:39.8710343Z                 raise_assert_detail(
2025-01-10T12:40:39.8710486Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8710565Z                 )
2025-01-10T12:40:39.8710644Z     
2025-01-10T12:40:39.8710726Z             diff = 0
2025-01-10T12:40:39.8710838Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8710932Z                 # count up differences
2025-01-10T12:40:39.8711109Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8711188Z                     diff += 1
2025-01-10T12:40:39.8711386Z     
2025-01-10T12:40:39.8711476Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8711618Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8711789Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8711906Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8711981Z E           
2025-01-10T12:40:39.8712098Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8712528Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8713012Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8713025Z 
2025-01-10T12:40:39.8713506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8713511Z 
2025-01-10T12:40:39.8713685Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8713689Z 
2025-01-10T12:40:39.8713931Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fabfb0>
2025-01-10T12:40:39.8714106Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8714192Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8714196Z 
2025-01-10T12:40:39.8714339Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8714457Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8714556Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8714630Z         try:
2025-01-10T12:40:39.8714778Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8714859Z         except KeyError:
2025-01-10T12:40:39.8715005Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8715076Z     
2025-01-10T12:40:39.8715170Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8715264Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8715362Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8715609Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8715707Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8715806Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8715917Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8715997Z             else:
2025-01-10T12:40:39.8716209Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8716333Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8716337Z 
2025-01-10T12:40:39.8716466Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8716607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8716762Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8716842Z     ???
2025-01-10T12:40:39.8716951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8716961Z 
2025-01-10T12:40:39.8717033Z >   ???
2025-01-10T12:40:39.8717170Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8717243Z E   
2025-01-10T12:40:39.8717381Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8717495Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8717574Z E          ...
2025-01-10T12:40:39.8717666Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8717927Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8718039Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8718121Z E          ...
2025-01-10T12:40:39.8718209Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8718341Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8718453Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8718488Z 
2025-01-10T12:40:39.8718591Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8718849Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-10T12:40:39.8718854Z 
2025-01-10T12:40:39.8718985Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8719120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8719221Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8719366Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8719491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8719594Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8719680Z err_msg = None
2025-01-10T12:40:39.8719684Z 
2025-01-10T12:40:39.8719794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8719887Z         if err_msg is None:
2025-01-10T12:40:39.8719988Z             if left.shape != right.shape:
2025-01-10T12:40:39.8720080Z                 raise_assert_detail(
2025-01-10T12:40:39.8720224Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8720309Z                 )
2025-01-10T12:40:39.8720382Z     
2025-01-10T12:40:39.8720467Z             diff = 0
2025-01-10T12:40:39.8720579Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8720681Z                 # count up differences
2025-01-10T12:40:39.8720853Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8720941Z                     diff += 1
2025-01-10T12:40:39.8721016Z     
2025-01-10T12:40:39.8721111Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8721252Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8721424Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8721660Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8721739Z E           
2025-01-10T12:40:39.8721859Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8722115Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8722385Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8722390Z 
2025-01-10T12:40:39.8722706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8722711Z 
2025-01-10T12:40:39.8722878Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8722882Z 
2025-01-10T12:40:39.8723107Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd80b0>
2025-01-10T12:40:39.8723274Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8723440Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8723444Z 
2025-01-10T12:40:39.8723583Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8723706Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8723797Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8723871Z         try:
2025-01-10T12:40:39.8724016Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8724099Z         except KeyError:
2025-01-10T12:40:39.8724241Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8724313Z     
2025-01-10T12:40:39.8724412Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8724508Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8724604Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8724734Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8724829Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8724925Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8725043Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8725118Z             else:
2025-01-10T12:40:39.8725220Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8725330Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8725334Z 
2025-01-10T12:40:39.8725457Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8725576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8725727Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8725805Z     ???
2025-01-10T12:40:39.8725917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8726036Z 
2025-01-10T12:40:39.8726313Z >   ???
2025-01-10T12:40:39.8726457Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8726539Z E   
2025-01-10T12:40:39.8726671Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8726798Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8726881Z E          ...
2025-01-10T12:40:39.8726972Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8727109Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8727225Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8727305Z E          ...
2025-01-10T12:40:39.8727395Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8727656Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8727766Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8727770Z 
2025-01-10T12:40:39.8727868Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8728105Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-10T12:40:39.8728110Z 
2025-01-10T12:40:39.8728250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8728395Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8728496Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8728636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8728765Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8728865Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8728948Z err_msg = None
2025-01-10T12:40:39.8728951Z 
2025-01-10T12:40:39.8729070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8729153Z         if err_msg is None:
2025-01-10T12:40:39.8729258Z             if left.shape != right.shape:
2025-01-10T12:40:39.8729345Z                 raise_assert_detail(
2025-01-10T12:40:39.8729500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8729712Z                 )
2025-01-10T12:40:39.8729784Z     
2025-01-10T12:40:39.8729865Z             diff = 0
2025-01-10T12:40:39.8729980Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8730075Z                 # count up differences
2025-01-10T12:40:39.8730244Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8730331Z                     diff += 1
2025-01-10T12:40:39.8730404Z     
2025-01-10T12:40:39.8730500Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8730645Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8730819Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8730935Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8731014Z E           
2025-01-10T12:40:39.8731179Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8731671Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8732146Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8732154Z 
2025-01-10T12:40:39.8732558Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8732569Z 
2025-01-10T12:40:39.8732739Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8732749Z 
2025-01-10T12:40:39.8732981Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd8230>
2025-01-10T12:40:39.8733152Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8733237Z attr = 'j_blues'
2025-01-10T12:40:39.8733241Z 
2025-01-10T12:40:39.8733383Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8733507Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8733592Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8733674Z         try:
2025-01-10T12:40:39.8733909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8734001Z         except KeyError:
2025-01-10T12:40:39.8734158Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8734246Z     
2025-01-10T12:40:39.8734339Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8734433Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8734534Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8734667Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8734770Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8734863Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8734978Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8735052Z             else:
2025-01-10T12:40:39.8735153Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8735263Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8735267Z 
2025-01-10T12:40:39.8735403Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8735525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8735674Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8735755Z     ???
2025-01-10T12:40:39.8735866Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8735957Z 
2025-01-10T12:40:39.8736036Z >   ???
2025-01-10T12:40:39.8736295Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8736373Z E   
2025-01-10T12:40:39.8736502Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8736620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8736695Z E          ...
2025-01-10T12:40:39.8736789Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8736918Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8737041Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8737121Z E          ...
2025-01-10T12:40:39.8737207Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8737348Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8737473Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8737478Z 
2025-01-10T12:40:39.8737578Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8737784Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-10T12:40:39.8737788Z 
2025-01-10T12:40:39.8737922Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8738050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8738153Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8738285Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8738423Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8738523Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8738600Z err_msg = None
2025-01-10T12:40:39.8738604Z 
2025-01-10T12:40:39.8738718Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8738805Z         if err_msg is None:
2025-01-10T12:40:39.8738906Z             if left.shape != right.shape:
2025-01-10T12:40:39.8738990Z                 raise_assert_detail(
2025-01-10T12:40:39.8739140Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8739212Z                 )
2025-01-10T12:40:39.8739291Z     
2025-01-10T12:40:39.8739366Z             diff = 0
2025-01-10T12:40:39.8739489Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8739580Z                 # count up differences
2025-01-10T12:40:39.8739884Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8739979Z                     diff += 1
2025-01-10T12:40:39.8740062Z     
2025-01-10T12:40:39.8740157Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8740291Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8740466Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8740587Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8740666Z E           
2025-01-10T12:40:39.8740778Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8741037Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8749706Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8749721Z 
2025-01-10T12:40:39.8750083Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8750273Z 
2025-01-10T12:40:39.8750604Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8750612Z 
2025-01-10T12:40:39.8751015Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd8fb0>
2025-01-10T12:40:39.8751308Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8751448Z attr = 'lines'
2025-01-10T12:40:39.8751455Z 
2025-01-10T12:40:39.8751696Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8751835Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8751937Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8752012Z         try:
2025-01-10T12:40:39.8752172Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8752257Z         except KeyError:
2025-01-10T12:40:39.8752404Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8752489Z     
2025-01-10T12:40:39.8752584Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8752680Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8752779Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8752914Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8753008Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8753099Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8753221Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8753300Z             else:
2025-01-10T12:40:39.8753399Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8753515Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8753520Z 
2025-01-10T12:40:39.8753650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8753774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8753931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8754010Z     ???
2025-01-10T12:40:39.8754124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8754128Z 
2025-01-10T12:40:39.8754207Z >   ???
2025-01-10T12:40:39.8754340Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8754427Z E   
2025-01-10T12:40:39.8754565Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8754681Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8754767Z E          ...
2025-01-10T12:40:39.8755097Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8755243Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8755363Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8755443Z E          ...
2025-01-10T12:40:39.8755533Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8755677Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8755786Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8755790Z 
2025-01-10T12:40:39.8755889Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8756282Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-10T12:40:39.8756294Z 
2025-01-10T12:40:39.8756516Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9070>
2025-01-10T12:40:39.8756687Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8756785Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8756789Z 
2025-01-10T12:40:39.8756933Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8757046Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8757139Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8757213Z         try:
2025-01-10T12:40:39.8757363Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8757577Z         except KeyError:
2025-01-10T12:40:39.8757748Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8757820Z     
2025-01-10T12:40:39.8757916Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8758018Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8758110Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8758252Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8758341Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8758442Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8758554Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8758558Z 
2025-01-10T12:40:39.8758689Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8758806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8758810Z 
2025-01-10T12:40:39.8758963Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8759050Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8759167Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8759259Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8759398Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8759487Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8759599Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8759685Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8759765Z err_msg = None
2025-01-10T12:40:39.8759769Z 
2025-01-10T12:40:39.8759889Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8759972Z         if err_msg is None:
2025-01-10T12:40:39.8760074Z             if left.shape != right.shape:
2025-01-10T12:40:39.8760169Z                 raise_assert_detail(
2025-01-10T12:40:39.8760324Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8760406Z                 )
2025-01-10T12:40:39.8760479Z     
2025-01-10T12:40:39.8760567Z             diff = 0
2025-01-10T12:40:39.8760681Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8760778Z                 # count up differences
2025-01-10T12:40:39.8760950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8761039Z                     diff += 1
2025-01-10T12:40:39.8761111Z     
2025-01-10T12:40:39.8761321Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8761467Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8761649Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8761781Z E           AssertionError: Series are different
2025-01-10T12:40:39.8761867Z E           
2025-01-10T12:40:39.8761971Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8762342Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8762678Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8763003Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8763114Z 
2025-01-10T12:40:39.8763429Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8763684Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-10T12:40:39.8763693Z 
2025-01-10T12:40:39.8763916Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9130>
2025-01-10T12:40:39.8764089Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8764181Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8764185Z 
2025-01-10T12:40:39.8764328Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8764459Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8764545Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8764625Z         try:
2025-01-10T12:40:39.8764769Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8764858Z         except KeyError:
2025-01-10T12:40:39.8765000Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8765077Z     
2025-01-10T12:40:39.8765168Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8765270Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8765367Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8765509Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8765597Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8765694Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8765809Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8765826Z 
2025-01-10T12:40:39.8765955Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8766180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8766184Z 
2025-01-10T12:40:39.8766324Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8766417Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8766531Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8766621Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8766881Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8766975Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8767083Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8767169Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8767256Z err_msg = None
2025-01-10T12:40:39.8767266Z 
2025-01-10T12:40:39.8767377Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8767466Z         if err_msg is None:
2025-01-10T12:40:39.8767563Z             if left.shape != right.shape:
2025-01-10T12:40:39.8767658Z                 raise_assert_detail(
2025-01-10T12:40:39.8767803Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8767883Z                 )
2025-01-10T12:40:39.8767957Z     
2025-01-10T12:40:39.8768044Z             diff = 0
2025-01-10T12:40:39.8768160Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8768261Z                 # count up differences
2025-01-10T12:40:39.8768438Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8768527Z                     diff += 1
2025-01-10T12:40:39.8768599Z     
2025-01-10T12:40:39.8768697Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8768841Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8769134Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8769251Z E           AssertionError: Series are different
2025-01-10T12:40:39.8769326Z E           
2025-01-10T12:40:39.8769444Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8769820Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8770403Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8771105Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8771112Z 
2025-01-10T12:40:39.8771437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8771652Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-10T12:40:39.8771656Z 
2025-01-10T12:40:39.8771801Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8771935Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8772046Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8772184Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8772316Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8772413Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8772616Z err_msg = None
2025-01-10T12:40:39.8772621Z 
2025-01-10T12:40:39.8772737Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8772830Z         if err_msg is None:
2025-01-10T12:40:39.8772936Z             if left.shape != right.shape:
2025-01-10T12:40:39.8773024Z                 raise_assert_detail(
2025-01-10T12:40:39.8773189Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8773266Z                 )
2025-01-10T12:40:39.8773352Z     
2025-01-10T12:40:39.8773430Z             diff = 0
2025-01-10T12:40:39.8773550Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8773642Z                 # count up differences
2025-01-10T12:40:39.8773819Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8773903Z                     diff += 1
2025-01-10T12:40:39.8773986Z     
2025-01-10T12:40:39.8774075Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8774228Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8774401Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8774525Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8774607Z E           
2025-01-10T12:40:39.8774725Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8775083Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8775345Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8775349Z 
2025-01-10T12:40:39.8775663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8775667Z 
2025-01-10T12:40:39.8775849Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8775861Z 
2025-01-10T12:40:39.8776208Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9370>
2025-01-10T12:40:39.8776425Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>, attr = 'nu'
2025-01-10T12:40:39.8776428Z 
2025-01-10T12:40:39.8776572Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8776702Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8776791Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8776881Z         try:
2025-01-10T12:40:39.8777036Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8777129Z         except KeyError:
2025-01-10T12:40:39.8777279Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8777351Z     
2025-01-10T12:40:39.8777451Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8777546Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8777652Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8777786Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8777884Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8777976Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8778095Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8778099Z 
2025-01-10T12:40:39.8778228Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8778349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8778664Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8778742Z     ???
2025-01-10T12:40:39.8778857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8778861Z 
2025-01-10T12:40:39.8778932Z >   ???
2025-01-10T12:40:39.8779067Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8779137Z E   
2025-01-10T12:40:39.8779275Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8779387Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8779464Z E          ...
2025-01-10T12:40:39.8779553Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8779689Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8779800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8779878Z E          ...
2025-01-10T12:40:39.8779970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8780100Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8780230Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8780233Z 
2025-01-10T12:40:39.8780326Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8780556Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-10T12:40:39.8780560Z 
2025-01-10T12:40:39.8780689Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8780943Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8781043Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8781181Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8781312Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8781406Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8781493Z err_msg = None
2025-01-10T12:40:39.8781497Z 
2025-01-10T12:40:39.8781610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8781697Z         if err_msg is None:
2025-01-10T12:40:39.8781793Z             if left.shape != right.shape:
2025-01-10T12:40:39.8781880Z                 raise_assert_detail(
2025-01-10T12:40:39.8782024Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8782105Z                 )
2025-01-10T12:40:39.8782175Z     
2025-01-10T12:40:39.8782254Z             diff = 0
2025-01-10T12:40:39.8782366Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8782459Z                 # count up differences
2025-01-10T12:40:39.8782638Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8782718Z                     diff += 1
2025-01-10T12:40:39.8782797Z     
2025-01-10T12:40:39.8782889Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8783037Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8783207Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8783324Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8783399Z E           
2025-01-10T12:40:39.8783517Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8783777Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8784142Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8784147Z 
2025-01-10T12:40:39.8784462Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8784466Z 
2025-01-10T12:40:39.8784637Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8784646Z 
2025-01-10T12:40:39.8784872Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9430>
2025-01-10T12:40:39.8785038Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8785124Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8785129Z 
2025-01-10T12:40:39.8785271Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8785389Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8785480Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8785555Z         try:
2025-01-10T12:40:39.8785706Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8785793Z         except KeyError:
2025-01-10T12:40:39.8785936Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8786007Z     
2025-01-10T12:40:39.8786290Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8786404Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8786632Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8786768Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8786865Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8786964Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8787078Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8787083Z 
2025-01-10T12:40:39.8787216Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8787331Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8787485Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8787560Z     ???
2025-01-10T12:40:39.8787676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8787680Z 
2025-01-10T12:40:39.8787752Z >   ???
2025-01-10T12:40:39.8787886Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8787964Z E   
2025-01-10T12:40:39.8788096Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8788216Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8788290Z E          ...
2025-01-10T12:40:39.8788384Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8788514Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8788635Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8788710Z E          ...
2025-01-10T12:40:39.8788804Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8788943Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8789057Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8789061Z 
2025-01-10T12:40:39.8789153Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8789499Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-10T12:40:39.8789506Z 
2025-01-10T12:40:39.8789739Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8789952Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8790122Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8790338Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8790473Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8790701Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8790790Z err_msg = None
2025-01-10T12:40:39.8790794Z 
2025-01-10T12:40:39.8790908Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8790997Z         if err_msg is None:
2025-01-10T12:40:39.8791095Z             if left.shape != right.shape:
2025-01-10T12:40:39.8791186Z                 raise_assert_detail(
2025-01-10T12:40:39.8791346Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8791420Z                 )
2025-01-10T12:40:39.8791498Z     
2025-01-10T12:40:39.8791574Z             diff = 0
2025-01-10T12:40:39.8791693Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8791784Z                 # count up differences
2025-01-10T12:40:39.8791958Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8792040Z                     diff += 1
2025-01-10T12:40:39.8792116Z     
2025-01-10T12:40:39.8792211Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8792352Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8792522Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8792641Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8792715Z E           
2025-01-10T12:40:39.8792920Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8793179Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8793438Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8793443Z 
2025-01-10T12:40:39.8793753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8793757Z 
2025-01-10T12:40:39.8793936Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8793946Z 
2025-01-10T12:40:39.8794173Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd94f0>
2025-01-10T12:40:39.8794380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>, attr = 'f_lu'
2025-01-10T12:40:39.8794384Z 
2025-01-10T12:40:39.8794523Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8794644Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8794730Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8794815Z         try:
2025-01-10T12:40:39.8794959Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8795052Z         except KeyError:
2025-01-10T12:40:39.8795191Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8795269Z     
2025-01-10T12:40:39.8795364Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8795460Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8795562Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8795700Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8795795Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8795887Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8796006Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8796010Z 
2025-01-10T12:40:39.8796268Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8796397Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8796690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8796775Z     ???
2025-01-10T12:40:39.8796894Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8796899Z 
2025-01-10T12:40:39.8796971Z >   ???
2025-01-10T12:40:39.8797104Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8797176Z E   
2025-01-10T12:40:39.8797320Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8797435Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8797515Z E          ...
2025-01-10T12:40:39.8797605Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8797742Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8797856Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8797937Z E          ...
2025-01-10T12:40:39.8798025Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8798165Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8798273Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8798283Z 
2025-01-10T12:40:39.8798376Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8798599Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-10T12:40:39.8798603Z 
2025-01-10T12:40:39.8798893Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8799030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8799126Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8799268Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8799392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8799500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8799584Z err_msg = None
2025-01-10T12:40:39.8799587Z 
2025-01-10T12:40:39.8799698Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8799785Z         if err_msg is None:
2025-01-10T12:40:39.8799882Z             if left.shape != right.shape:
2025-01-10T12:40:39.8799968Z                 raise_assert_detail(
2025-01-10T12:40:39.8800117Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8800199Z                 )
2025-01-10T12:40:39.8800270Z     
2025-01-10T12:40:39.8800355Z             diff = 0
2025-01-10T12:40:39.8800468Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8800564Z                 # count up differences
2025-01-10T12:40:39.8800733Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8800817Z                     diff += 1
2025-01-10T12:40:39.8800889Z     
2025-01-10T12:40:39.8800992Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8801136Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8801310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8801466Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8801540Z E           
2025-01-10T12:40:39.8801657Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8801921Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8802268Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8802274Z 
2025-01-10T12:40:39.8802592Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8802596Z 
2025-01-10T12:40:39.8802765Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8802773Z 
2025-01-10T12:40:39.8803000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9c70>
2025-01-10T12:40:39.8803170Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8803260Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8803265Z 
2025-01-10T12:40:39.8803401Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8803523Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8803614Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8803688Z         try:
2025-01-10T12:40:39.8803838Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8803919Z         except KeyError:
2025-01-10T12:40:39.8804064Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8804136Z     
2025-01-10T12:40:39.8804230Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8804324Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8804501Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8804634Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8804728Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8804820Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8804935Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8805015Z             else:
2025-01-10T12:40:39.8805111Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8805224Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8805228Z 
2025-01-10T12:40:39.8805361Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8805483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8805627Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8805708Z     ???
2025-01-10T12:40:39.8805820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8805831Z 
2025-01-10T12:40:39.8805911Z >   ???
2025-01-10T12:40:39.8806039Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8806220Z E   
2025-01-10T12:40:39.8806352Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8806471Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8806555Z E          ...
2025-01-10T12:40:39.8806644Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8806783Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8806902Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8806982Z E          ...
2025-01-10T12:40:39.8807072Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8807220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8807414Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8807428Z 
2025-01-10T12:40:39.8807596Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8807953Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-10T12:40:39.8807960Z 
2025-01-10T12:40:39.8808183Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8808414Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8808526Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8808817Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8808954Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8809055Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8809134Z err_msg = None
2025-01-10T12:40:39.8809137Z 
2025-01-10T12:40:39.8809254Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8809343Z         if err_msg is None:
2025-01-10T12:40:39.8809447Z             if left.shape != right.shape:
2025-01-10T12:40:39.8809533Z                 raise_assert_detail(
2025-01-10T12:40:39.8809686Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8809770Z                 )
2025-01-10T12:40:39.8809843Z     
2025-01-10T12:40:39.8809925Z             diff = 0
2025-01-10T12:40:39.8810036Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8810135Z                 # count up differences
2025-01-10T12:40:39.8810311Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8810396Z                     diff += 1
2025-01-10T12:40:39.8810471Z     
2025-01-10T12:40:39.8810568Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8810704Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8810882Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8811117Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8811202Z E           
2025-01-10T12:40:39.8811318Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8811571Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8811839Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8811850Z 
2025-01-10T12:40:39.8812152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8812163Z 
2025-01-10T12:40:39.8812339Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8812344Z 
2025-01-10T12:40:39.8812575Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9eb0>
2025-01-10T12:40:39.8812743Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8812827Z attr = 'j_blues'
2025-01-10T12:40:39.8812831Z 
2025-01-10T12:40:39.8812972Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8813098Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8813184Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8813264Z         try:
2025-01-10T12:40:39.8813404Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8813497Z         except KeyError:
2025-01-10T12:40:39.8813646Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8813719Z     
2025-01-10T12:40:39.8813813Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8813907Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8814003Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8814135Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8814228Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8814320Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8814438Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8814600Z             else:
2025-01-10T12:40:39.8814705Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8814813Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8814818Z 
2025-01-10T12:40:39.8814948Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8815070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8815223Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8815304Z     ???
2025-01-10T12:40:39.8815413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8815417Z 
2025-01-10T12:40:39.8815494Z >   ???
2025-01-10T12:40:39.8815619Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8815698Z E   
2025-01-10T12:40:39.8815827Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8815946Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8816027Z E          ...
2025-01-10T12:40:39.8816237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8816368Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8816486Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8816562Z E          ...
2025-01-10T12:40:39.8816655Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8816909Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8817015Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8817020Z 
2025-01-10T12:40:39.8817115Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8817320Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-10T12:40:39.8817324Z 
2025-01-10T12:40:39.8817457Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8817596Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8817698Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8817834Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8817962Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8818071Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8818148Z err_msg = None
2025-01-10T12:40:39.8818151Z 
2025-01-10T12:40:39.8818265Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8818345Z         if err_msg is None:
2025-01-10T12:40:39.8818443Z             if left.shape != right.shape:
2025-01-10T12:40:39.8818528Z                 raise_assert_detail(
2025-01-10T12:40:39.8818675Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8818756Z                 )
2025-01-10T12:40:39.8818835Z     
2025-01-10T12:40:39.8818913Z             diff = 0
2025-01-10T12:40:39.8819031Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8819129Z                 # count up differences
2025-01-10T12:40:39.8819304Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8819384Z                     diff += 1
2025-01-10T12:40:39.8819466Z     
2025-01-10T12:40:39.8819555Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8819696Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8819865Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8819986Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8820061Z E           
2025-01-10T12:40:39.8820180Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8820557Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8820817Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8820829Z 
2025-01-10T12:40:39.8821135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8821140Z 
2025-01-10T12:40:39.8821311Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8821315Z 
2025-01-10T12:40:39.8821536Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdac30>
2025-01-10T12:40:39.8821712Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8821789Z attr = 'lines'
2025-01-10T12:40:39.8821793Z 
2025-01-10T12:40:39.8821939Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8822053Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8822146Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8822313Z         try:
2025-01-10T12:40:39.8822460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8822544Z         except KeyError:
2025-01-10T12:40:39.8822688Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8822765Z     
2025-01-10T12:40:39.8822854Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8822955Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8823044Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8823184Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8823280Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8823378Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8823494Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8823574Z             else:
2025-01-10T12:40:39.8823670Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8823786Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8823796Z 
2025-01-10T12:40:39.8823922Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8824045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8824199Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8824273Z     ???
2025-01-10T12:40:39.8824391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8824395Z 
2025-01-10T12:40:39.8824466Z >   ???
2025-01-10T12:40:39.8824603Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8824676Z E   
2025-01-10T12:40:39.8824812Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8824927Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8825011Z E          ...
2025-01-10T12:40:39.8825101Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8825240Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8825360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8825441Z E          ...
2025-01-10T12:40:39.8825534Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8825659Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8825810Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8825817Z 
2025-01-10T12:40:39.8825985Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8826738Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-10T12:40:39.8826749Z 
2025-01-10T12:40:39.8827150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdacf0>
2025-01-10T12:40:39.8827345Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8827438Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8827442Z 
2025-01-10T12:40:39.8827590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8827716Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8827802Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8827882Z         try:
2025-01-10T12:40:39.8828038Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8828141Z         except KeyError:
2025-01-10T12:40:39.8828281Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8828359Z     
2025-01-10T12:40:39.8828447Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8828556Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8828646Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8828787Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8828874Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8828978Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8829091Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8829240Z 
2025-01-10T12:40:39.8829374Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8829496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8829500Z 
2025-01-10T12:40:39.8829640Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8829735Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8829846Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8829934Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8830082Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8830173Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8830280Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8830368Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8830458Z err_msg = None
2025-01-10T12:40:39.8830462Z 
2025-01-10T12:40:39.8830576Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8830666Z         if err_msg is None:
2025-01-10T12:40:39.8830764Z             if left.shape != right.shape:
2025-01-10T12:40:39.8830856Z                 raise_assert_detail(
2025-01-10T12:40:39.8831004Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8831088Z                 )
2025-01-10T12:40:39.8831160Z     
2025-01-10T12:40:39.8831244Z             diff = 0
2025-01-10T12:40:39.8831359Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8831465Z                 # count up differences
2025-01-10T12:40:39.8831646Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8831736Z                     diff += 1
2025-01-10T12:40:39.8831808Z     
2025-01-10T12:40:39.8831903Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8832054Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8832229Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8832340Z E           AssertionError: Series are different
2025-01-10T12:40:39.8832414Z E           
2025-01-10T12:40:39.8832522Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8832998Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8833334Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8833669Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8833680Z 
2025-01-10T12:40:39.8833997Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8834263Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-10T12:40:39.8834267Z 
2025-01-10T12:40:39.8834494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdadb0>
2025-01-10T12:40:39.8834754Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8834852Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8834855Z 
2025-01-10T12:40:39.8834997Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8835123Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8835210Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8835291Z         try:
2025-01-10T12:40:39.8835434Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8835523Z         except KeyError:
2025-01-10T12:40:39.8835667Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8835746Z     
2025-01-10T12:40:39.8835847Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8835950Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8836041Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8836397Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8836497Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8836595Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8836709Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8836713Z 
2025-01-10T12:40:39.8836846Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8836967Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8836971Z 
2025-01-10T12:40:39.8837113Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8837206Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8837324Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8837411Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8837551Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8837650Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8837757Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8837847Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8837929Z err_msg = None
2025-01-10T12:40:39.8837933Z 
2025-01-10T12:40:39.8838049Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8838133Z         if err_msg is None:
2025-01-10T12:40:39.8838234Z             if left.shape != right.shape:
2025-01-10T12:40:39.8838319Z                 raise_assert_detail(
2025-01-10T12:40:39.8838592Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8838677Z                 )
2025-01-10T12:40:39.8838750Z     
2025-01-10T12:40:39.8838831Z             diff = 0
2025-01-10T12:40:39.8838947Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8839044Z                 # count up differences
2025-01-10T12:40:39.8839214Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8839307Z                     diff += 1
2025-01-10T12:40:39.8839379Z     
2025-01-10T12:40:39.8839472Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8839610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8839784Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8839889Z E           AssertionError: Series are different
2025-01-10T12:40:39.8839967Z E           
2025-01-10T12:40:39.8840070Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8840445Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8840930Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8841309Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8841313Z 
2025-01-10T12:40:39.8841630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8841841Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-10T12:40:39.8841846Z 
2025-01-10T12:40:39.8841976Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8842112Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8842213Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8842356Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8842486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8842581Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8842668Z err_msg = None
2025-01-10T12:40:39.8842672Z 
2025-01-10T12:40:39.8842787Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8842877Z         if err_msg is None:
2025-01-10T12:40:39.8842972Z             if left.shape != right.shape:
2025-01-10T12:40:39.8843062Z                 raise_assert_detail(
2025-01-10T12:40:39.8843211Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8843291Z                 )
2025-01-10T12:40:39.8843362Z     
2025-01-10T12:40:39.8843442Z             diff = 0
2025-01-10T12:40:39.8843554Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8843650Z                 # count up differences
2025-01-10T12:40:39.8843926Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8844009Z                     diff += 1
2025-01-10T12:40:39.8844087Z     
2025-01-10T12:40:39.8844175Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8844315Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8844490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8844703Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8844832Z E           
2025-01-10T12:40:39.8845030Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8845493Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8845887Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8845989Z 
2025-01-10T12:40:39.8846410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8846415Z 
2025-01-10T12:40:39.8846585Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8846589Z 
2025-01-10T12:40:39.8846820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdaff0>
2025-01-10T12:40:39.8847027Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>, attr = 'nu'
2025-01-10T12:40:39.8847031Z 
2025-01-10T12:40:39.8847178Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8847301Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8847386Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8847467Z         try:
2025-01-10T12:40:39.8847608Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8847699Z         except KeyError:
2025-01-10T12:40:39.8847843Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8847923Z     
2025-01-10T12:40:39.8848012Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8848120Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8848211Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8848355Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8848448Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8848540Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8848663Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8848670Z 
2025-01-10T12:40:39.8848797Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8848918Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8849073Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8849152Z     ???
2025-01-10T12:40:39.8849262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8849271Z 
2025-01-10T12:40:39.8849349Z >   ???
2025-01-10T12:40:39.8849481Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8849558Z E   
2025-01-10T12:40:39.8849695Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8849808Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8849889Z E          ...
2025-01-10T12:40:39.8849980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8850117Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8850355Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8850442Z E          ...
2025-01-10T12:40:39.8850531Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8850664Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8850770Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8850783Z 
2025-01-10T12:40:39.8850881Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8851111Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-10T12:40:39.8851120Z 
2025-01-10T12:40:39.8851247Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8851382Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8851485Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8851631Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8851756Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8851856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8851935Z err_msg = None
2025-01-10T12:40:39.8851939Z 
2025-01-10T12:40:39.8852055Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8852275Z         if err_msg is None:
2025-01-10T12:40:39.8852381Z             if left.shape != right.shape:
2025-01-10T12:40:39.8852472Z                 raise_assert_detail(
2025-01-10T12:40:39.8852616Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8852700Z                 )
2025-01-10T12:40:39.8852773Z     
2025-01-10T12:40:39.8852853Z             diff = 0
2025-01-10T12:40:39.8852968Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8853061Z                 # count up differences
2025-01-10T12:40:39.8853234Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8853321Z                     diff += 1
2025-01-10T12:40:39.8853393Z     
2025-01-10T12:40:39.8853489Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8853623Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8853808Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8853923Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8854006Z E           
2025-01-10T12:40:39.8854125Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8854383Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8854642Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8854650Z 
2025-01-10T12:40:39.8854955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8854967Z 
2025-01-10T12:40:39.8855139Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8855144Z 
2025-01-10T12:40:39.8855376Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb0b0>
2025-01-10T12:40:39.8855543Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8855633Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8855637Z 
2025-01-10T12:40:39.8855863Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8855990Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8856174Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8856257Z         try:
2025-01-10T12:40:39.8856397Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8856488Z         except KeyError:
2025-01-10T12:40:39.8856639Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8856711Z     
2025-01-10T12:40:39.8856804Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8856899Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8856993Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8857127Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8857222Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8857314Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8857435Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8857440Z 
2025-01-10T12:40:39.8857565Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8857684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8857830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8857913Z     ???
2025-01-10T12:40:39.8858227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8858231Z 
2025-01-10T12:40:39.8858305Z >   ???
2025-01-10T12:40:39.8858441Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8858514Z E   
2025-01-10T12:40:39.8858647Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8858757Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8858839Z E          ...
2025-01-10T12:40:39.8858935Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8859078Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8859194Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8859276Z E          ...
2025-01-10T12:40:39.8859363Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8859494Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8859606Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8859614Z 
2025-01-10T12:40:39.8859707Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8859922Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-10T12:40:39.8859926Z 
2025-01-10T12:40:39.8860060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8860198Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8860300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8860448Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8860575Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8860678Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8860763Z err_msg = None
2025-01-10T12:40:39.8860767Z 
2025-01-10T12:40:39.8860885Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8860973Z         if err_msg is None:
2025-01-10T12:40:39.8861069Z             if left.shape != right.shape:
2025-01-10T12:40:39.8861165Z                 raise_assert_detail(
2025-01-10T12:40:39.8861308Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8861389Z                 )
2025-01-10T12:40:39.8861461Z     
2025-01-10T12:40:39.8861544Z             diff = 0
2025-01-10T12:40:39.8861658Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8861874Z                 # count up differences
2025-01-10T12:40:39.8862049Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8862135Z                     diff += 1
2025-01-10T12:40:39.8862211Z     
2025-01-10T12:40:39.8862300Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8862439Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8862615Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8862734Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8862809Z E           
2025-01-10T12:40:39.8862928Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8863190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8863669Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8863792Z 
2025-01-10T12:40:39.8864324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8864330Z 
2025-01-10T12:40:39.8864621Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8864627Z 
2025-01-10T12:40:39.8864902Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb170>
2025-01-10T12:40:39.8865106Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>, attr = 'f_lu'
2025-01-10T12:40:39.8865117Z 
2025-01-10T12:40:39.8865262Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8865385Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8865471Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8865552Z         try:
2025-01-10T12:40:39.8865692Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8865783Z         except KeyError:
2025-01-10T12:40:39.8865929Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8866006Z     
2025-01-10T12:40:39.8866191Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8866295Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8866386Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8866524Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8866611Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8866707Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8866828Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8866833Z 
2025-01-10T12:40:39.8866961Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8867080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8867226Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8867304Z     ???
2025-01-10T12:40:39.8867423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8867427Z 
2025-01-10T12:40:39.8867504Z >   ???
2025-01-10T12:40:39.8867634Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8867724Z E   
2025-01-10T12:40:39.8867862Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8867980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8868055Z E          ...
2025-01-10T12:40:39.8868153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8868418Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8868535Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8868615Z E          ...
2025-01-10T12:40:39.8868703Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8868835Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8868942Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8868952Z 
2025-01-10T12:40:39.8869056Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8869282Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-10T12:40:39.8869286Z 
2025-01-10T12:40:39.8869421Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8869556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8869655Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8869801Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8869929Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8870034Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8870114Z err_msg = None
2025-01-10T12:40:39.8870118Z 
2025-01-10T12:40:39.8870351Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8870435Z         if err_msg is None:
2025-01-10T12:40:39.8870538Z             if left.shape != right.shape:
2025-01-10T12:40:39.8870626Z                 raise_assert_detail(
2025-01-10T12:40:39.8870780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8870860Z                 )
2025-01-10T12:40:39.8870935Z     
2025-01-10T12:40:39.8871019Z             diff = 0
2025-01-10T12:40:39.8871134Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8871231Z                 # count up differences
2025-01-10T12:40:39.8871406Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8871494Z                     diff += 1
2025-01-10T12:40:39.8871567Z     
2025-01-10T12:40:39.8871662Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8871799Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8871978Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8872090Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8872170Z E           
2025-01-10T12:40:39.8872285Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8872549Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8872809Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8872816Z 
2025-01-10T12:40:39.8873121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8873126Z 
2025-01-10T12:40:39.8873301Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8873306Z 
2025-01-10T12:40:39.8873535Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb8f0>
2025-01-10T12:40:39.8873705Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8873796Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8873800Z 
2025-01-10T12:40:39.8874050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8874174Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8874262Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8874342Z         try:
2025-01-10T12:40:39.8874480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8874573Z         except KeyError:
2025-01-10T12:40:39.8874712Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8874790Z     
2025-01-10T12:40:39.8874886Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8874978Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8875074Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8875206Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8875298Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8875387Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8875509Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8875584Z             else:
2025-01-10T12:40:39.8875685Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8875794Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8875798Z 
2025-01-10T12:40:39.8875931Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8876329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8876489Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8876568Z     ???
2025-01-10T12:40:39.8876677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8876681Z 
2025-01-10T12:40:39.8876760Z >   ???
2025-01-10T12:40:39.8876887Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8876966Z E   
2025-01-10T12:40:39.8877092Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8877213Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8877288Z E          ...
2025-01-10T12:40:39.8877382Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8877512Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8877630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8877711Z E          ...
2025-01-10T12:40:39.8877803Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8877935Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8878041Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8878045Z 
2025-01-10T12:40:39.8878437Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8878664Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-10T12:40:39.8878668Z 
2025-01-10T12:40:39.8878804Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8878938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8879042Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8879177Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8879312Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8879418Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8879497Z err_msg = None
2025-01-10T12:40:39.8879501Z 
2025-01-10T12:40:39.8879616Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8879699Z         if err_msg is None:
2025-01-10T12:40:39.8879801Z             if left.shape != right.shape:
2025-01-10T12:40:39.8879889Z                 raise_assert_detail(
2025-01-10T12:40:39.8880042Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8880117Z                 )
2025-01-10T12:40:39.8880324Z     
2025-01-10T12:40:39.8880404Z             diff = 0
2025-01-10T12:40:39.8880522Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8880610Z                 # count up differences
2025-01-10T12:40:39.8880786Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8880879Z                     diff += 1
2025-01-10T12:40:39.8880951Z     
2025-01-10T12:40:39.8881047Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8881210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8881517Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8881711Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8881844Z E           
2025-01-10T12:40:39.8882028Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8882501Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8882872Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8883008Z 
2025-01-10T12:40:39.8883316Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8883320Z 
2025-01-10T12:40:39.8883496Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8883500Z 
2025-01-10T12:40:39.8883730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb9b0>
2025-01-10T12:40:39.8883902Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8883991Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8883995Z 
2025-01-10T12:40:39.8884132Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8884252Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8884343Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8884425Z         try:
2025-01-10T12:40:39.8884566Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8884655Z         except KeyError:
2025-01-10T12:40:39.8884792Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8884869Z     
2025-01-10T12:40:39.8884960Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8885065Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8885158Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8885305Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8885401Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8885495Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8885614Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8885691Z             else:
2025-01-10T12:40:39.8885796Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8885914Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8885918Z 
2025-01-10T12:40:39.8886165Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8886288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8886443Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8886519Z     ???
2025-01-10T12:40:39.8886636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8886640Z 
2025-01-10T12:40:39.8886720Z >   ???
2025-01-10T12:40:39.8886967Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8887050Z E   
2025-01-10T12:40:39.8887180Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8887296Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8887371Z E          ...
2025-01-10T12:40:39.8887467Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8887602Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8887723Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8887797Z E          ...
2025-01-10T12:40:39.8887892Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8888018Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8888131Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8888135Z 
2025-01-10T12:40:39.8888228Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8888452Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-10T12:40:39.8888456Z 
2025-01-10T12:40:39.8888592Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8888727Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8888833Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8889100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8889232Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8889328Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8889413Z err_msg = None
2025-01-10T12:40:39.8889417Z 
2025-01-10T12:40:39.8889540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8889624Z         if err_msg is None:
2025-01-10T12:40:39.8889730Z             if left.shape != right.shape:
2025-01-10T12:40:39.8889818Z                 raise_assert_detail(
2025-01-10T12:40:39.8889971Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8890045Z                 )
2025-01-10T12:40:39.8890125Z     
2025-01-10T12:40:39.8890201Z             diff = 0
2025-01-10T12:40:39.8890319Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8890416Z                 # count up differences
2025-01-10T12:40:39.8890593Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8890676Z                     diff += 1
2025-01-10T12:40:39.8890761Z     
2025-01-10T12:40:39.8890853Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8890996Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8891174Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8891296Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8891375Z E           
2025-01-10T12:40:39.8891491Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8891755Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8892018Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8892029Z 
2025-01-10T12:40:39.8892426Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8892431Z 
2025-01-10T12:40:39.8892611Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8892615Z 
2025-01-10T12:40:39.8892842Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdbb30>
2025-01-10T12:40:39.8893017Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8893100Z attr = 'j_blues'
2025-01-10T12:40:39.8893105Z 
2025-01-10T12:40:39.8893251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8893368Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8893461Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8893540Z         try:
2025-01-10T12:40:39.8893685Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8893774Z         except KeyError:
2025-01-10T12:40:39.8893914Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8893993Z     
2025-01-10T12:40:39.8894088Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8894190Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8894281Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8894421Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8894509Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8894690Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8894802Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8894882Z             else:
2025-01-10T12:40:39.8894979Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8895096Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8895100Z 
2025-01-10T12:40:39.8895234Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8895349Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8895500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8895579Z     ???
2025-01-10T12:40:39.8895694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8895698Z 
2025-01-10T12:40:39.8895771Z >   ???
2025-01-10T12:40:39.8895903Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8895976Z E   
2025-01-10T12:40:39.8896207Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8896330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8896409Z E          ...
2025-01-10T12:40:39.8896500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8896635Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8896753Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8896827Z E          ...
2025-01-10T12:40:39.8896921Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8897051Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8897162Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8897166Z 
2025-01-10T12:40:39.8897258Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8897472Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-10T12:40:39.8897475Z 
2025-01-10T12:40:39.8897604Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8897745Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8897849Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8897983Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8898113Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8898208Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8898430Z err_msg = None
2025-01-10T12:40:39.8898435Z 
2025-01-10T12:40:39.8898550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8898642Z         if err_msg is None:
2025-01-10T12:40:39.8898771Z             if left.shape != right.shape:
2025-01-10T12:40:39.8898864Z                 raise_assert_detail(
2025-01-10T12:40:39.8899007Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8899092Z                 )
2025-01-10T12:40:39.8899170Z     
2025-01-10T12:40:39.8899249Z             diff = 0
2025-01-10T12:40:39.8899368Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8899456Z                 # count up differences
2025-01-10T12:40:39.8899634Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8899717Z                     diff += 1
2025-01-10T12:40:39.8899796Z     
2025-01-10T12:40:39.8899944Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8900193Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8900484Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8900679Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8900803Z E           
2025-01-10T12:40:39.8900998Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8901433Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8901699Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8901705Z 
2025-01-10T12:40:39.8902027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8902031Z 
2025-01-10T12:40:39.8902205Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8902218Z 
2025-01-10T12:40:39.8902448Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff88f0>
2025-01-10T12:40:39.8902623Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8902701Z attr = 'lines'
2025-01-10T12:40:39.8902704Z 
2025-01-10T12:40:39.8902851Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8902970Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8903067Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8903142Z         try:
2025-01-10T12:40:39.8903296Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8903380Z         except KeyError:
2025-01-10T12:40:39.8903526Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8903601Z     
2025-01-10T12:40:39.8903696Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8903797Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8903888Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8904034Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8904122Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8904218Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8904328Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8904408Z             else:
2025-01-10T12:40:39.8904505Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8904619Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8904623Z 
2025-01-10T12:40:39.8904836Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8904961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8905109Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8905188Z     ???
2025-01-10T12:40:39.8905302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8905312Z 
2025-01-10T12:40:39.8905384Z >   ???
2025-01-10T12:40:39.8905518Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8905590Z E   
2025-01-10T12:40:39.8905724Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8905833Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8905914Z E          ...
2025-01-10T12:40:39.8906005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8906257Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8906378Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8906458Z E          ...
2025-01-10T12:40:39.8906546Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8906682Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8906792Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8906796Z 
2025-01-10T12:40:39.8906887Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8907319Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-10T12:40:39.8907324Z 
2025-01-10T12:40:39.8907549Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff89b0>
2025-01-10T12:40:39.8907722Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8907812Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8907816Z 
2025-01-10T12:40:39.8907958Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8908077Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8908169Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8908249Z         try:
2025-01-10T12:40:39.8908401Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8908492Z         except KeyError:
2025-01-10T12:40:39.8908630Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8908712Z     
2025-01-10T12:40:39.8908802Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8908901Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8908992Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8909140Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8909226Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8909326Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8909436Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8909439Z 
2025-01-10T12:40:39.8909568Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8909690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8909693Z 
2025-01-10T12:40:39.8909831Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8909924Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8910037Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8910130Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8910269Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8910361Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8910466Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8910553Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8910632Z err_msg = None
2025-01-10T12:40:39.8910636Z 
2025-01-10T12:40:39.8910757Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8910963Z         if err_msg is None:
2025-01-10T12:40:39.8911061Z             if left.shape != right.shape:
2025-01-10T12:40:39.8911155Z                 raise_assert_detail(
2025-01-10T12:40:39.8911298Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8911378Z                 )
2025-01-10T12:40:39.8911451Z     
2025-01-10T12:40:39.8911539Z             diff = 0
2025-01-10T12:40:39.8911654Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8911748Z                 # count up differences
2025-01-10T12:40:39.8911916Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8912002Z                     diff += 1
2025-01-10T12:40:39.8912075Z     
2025-01-10T12:40:39.8912169Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8912308Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8912491Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8912601Z E           AssertionError: Series are different
2025-01-10T12:40:39.8912676Z E           
2025-01-10T12:40:39.8912789Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8913159Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8913580Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8913909Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8913918Z 
2025-01-10T12:40:39.8914229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8914497Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-10T12:40:39.8914502Z 
2025-01-10T12:40:39.8914730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8a70>
2025-01-10T12:40:39.8914905Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8915006Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8915010Z 
2025-01-10T12:40:39.8915146Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8915268Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8915355Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8915436Z         try:
2025-01-10T12:40:39.8915579Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8915666Z         except KeyError:
2025-01-10T12:40:39.8915804Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8915884Z     
2025-01-10T12:40:39.8915973Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8916239Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8916372Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8916515Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8916609Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8916862Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8917082Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8917088Z 
2025-01-10T12:40:39.8917304Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8917498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8917512Z 
2025-01-10T12:40:39.8917738Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8917890Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8918048Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8918138Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8918282Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8918367Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8918484Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8918565Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8918648Z err_msg = None
2025-01-10T12:40:39.8918652Z 
2025-01-10T12:40:39.8918764Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8918853Z         if err_msg is None:
2025-01-10T12:40:39.8918947Z             if left.shape != right.shape:
2025-01-10T12:40:39.8919196Z                 raise_assert_detail(
2025-01-10T12:40:39.8919342Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8919420Z                 )
2025-01-10T12:40:39.8919493Z     
2025-01-10T12:40:39.8919574Z             diff = 0
2025-01-10T12:40:39.8919690Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8919782Z                 # count up differences
2025-01-10T12:40:39.8919958Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8920040Z                     diff += 1
2025-01-10T12:40:39.8920125Z     
2025-01-10T12:40:39.8920215Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8920356Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8920525Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8920634Z E           AssertionError: Series are different
2025-01-10T12:40:39.8920714Z E           
2025-01-10T12:40:39.8920823Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8921189Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8921565Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8921940Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8921945Z 
2025-01-10T12:40:39.8922259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8922549Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-10T12:40:39.8922554Z 
2025-01-10T12:40:39.8922691Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8922821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8922932Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8923064Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8923194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8923296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8923378Z err_msg = None
2025-01-10T12:40:39.8923382Z 
2025-01-10T12:40:39.8923496Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8923588Z         if err_msg is None:
2025-01-10T12:40:39.8923696Z             if left.shape != right.shape:
2025-01-10T12:40:39.8923783Z                 raise_assert_detail(
2025-01-10T12:40:39.8923934Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8924010Z                 )
2025-01-10T12:40:39.8924092Z     
2025-01-10T12:40:39.8924171Z             diff = 0
2025-01-10T12:40:39.8924372Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8924463Z                 # count up differences
2025-01-10T12:40:39.8924640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8924729Z                     diff += 1
2025-01-10T12:40:39.8924801Z     
2025-01-10T12:40:39.8924898Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8925035Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8925211Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8925333Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8925413Z E           
2025-01-10T12:40:39.8925527Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8933170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8933476Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8933482Z 
2025-01-10T12:40:39.8933815Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8933820Z 
2025-01-10T12:40:39.8934005Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8934009Z 
2025-01-10T12:40:39.8934241Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8cb0>
2025-01-10T12:40:39.8934450Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>, attr = 'nu'
2025-01-10T12:40:39.8934461Z 
2025-01-10T12:40:39.8934608Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8934734Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8934823Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8934903Z         try:
2025-01-10T12:40:39.8935055Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8935146Z         except KeyError:
2025-01-10T12:40:39.8935293Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8935367Z     
2025-01-10T12:40:39.8935633Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8935737Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8935835Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8936033Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8936345Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8936511Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8936708Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8936714Z 
2025-01-10T12:40:39.8936930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8937139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8937328Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8937411Z     ???
2025-01-10T12:40:39.8937528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8937532Z 
2025-01-10T12:40:39.8937611Z >   ???
2025-01-10T12:40:39.8937747Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8937820Z E   
2025-01-10T12:40:39.8937956Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8938066Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8938147Z E          ...
2025-01-10T12:40:39.8938239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8938512Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8938626Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8938708Z E          ...
2025-01-10T12:40:39.8938795Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8938923Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8939036Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8939040Z 
2025-01-10T12:40:39.8939132Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8939375Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-10T12:40:39.8939380Z 
2025-01-10T12:40:39.8939513Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8939656Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8939760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8939902Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8940027Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8940126Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8940209Z err_msg = None
2025-01-10T12:40:39.8940213Z 
2025-01-10T12:40:39.8940328Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8940418Z         if err_msg is None:
2025-01-10T12:40:39.8940519Z             if left.shape != right.shape:
2025-01-10T12:40:39.8940610Z                 raise_assert_detail(
2025-01-10T12:40:39.8940760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8940839Z                 )
2025-01-10T12:40:39.8940912Z     
2025-01-10T12:40:39.8940996Z             diff = 0
2025-01-10T12:40:39.8941116Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8941215Z                 # count up differences
2025-01-10T12:40:39.8941385Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8941475Z                     diff += 1
2025-01-10T12:40:39.8941555Z     
2025-01-10T12:40:39.8941647Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8941789Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8941962Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8942199Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8942281Z E           
2025-01-10T12:40:39.8942400Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8942661Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8942931Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8942935Z 
2025-01-10T12:40:39.8943257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8943261Z 
2025-01-10T12:40:39.8943433Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8943438Z 
2025-01-10T12:40:39.8943669Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8d70>
2025-01-10T12:40:39.8943843Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8944015Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8944018Z 
2025-01-10T12:40:39.8944167Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8944285Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8944377Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8944452Z         try:
2025-01-10T12:40:39.8944602Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8944687Z         except KeyError:
2025-01-10T12:40:39.8944834Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8944910Z     
2025-01-10T12:40:39.8945006Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8945101Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8945199Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8945330Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8945425Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8945526Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8945643Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8945647Z 
2025-01-10T12:40:39.8945776Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8945892Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8946047Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8946324Z     ???
2025-01-10T12:40:39.8946449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8946454Z 
2025-01-10T12:40:39.8946532Z >   ???
2025-01-10T12:40:39.8946667Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8946738Z E   
2025-01-10T12:40:39.8946871Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8946983Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8947064Z E          ...
2025-01-10T12:40:39.8947169Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8947301Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8947422Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8947497Z E          ...
2025-01-10T12:40:39.8947593Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8947718Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8947831Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8947835Z 
2025-01-10T12:40:39.8947928Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8948265Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-10T12:40:39.8948271Z 
2025-01-10T12:40:39.8948454Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8948590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8948703Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8948836Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8948967Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8949059Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8949144Z err_msg = None
2025-01-10T12:40:39.8949148Z 
2025-01-10T12:40:39.8949262Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8949351Z         if err_msg is None:
2025-01-10T12:40:39.8949452Z             if left.shape != right.shape:
2025-01-10T12:40:39.8949546Z                 raise_assert_detail(
2025-01-10T12:40:39.8949693Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8949775Z                 )
2025-01-10T12:40:39.8949855Z     
2025-01-10T12:40:39.8949930Z             diff = 0
2025-01-10T12:40:39.8950186Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8950275Z                 # count up differences
2025-01-10T12:40:39.8950455Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8950534Z                     diff += 1
2025-01-10T12:40:39.8950610Z     
2025-01-10T12:40:39.8950700Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8950842Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8951014Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8951141Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8951217Z E           
2025-01-10T12:40:39.8951337Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8951598Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8951858Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8951863Z 
2025-01-10T12:40:39.8952183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8952187Z 
2025-01-10T12:40:39.8952364Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8952373Z 
2025-01-10T12:40:39.8952598Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8e30>
2025-01-10T12:40:39.8952806Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>, attr = 'f_lu'
2025-01-10T12:40:39.8952815Z 
2025-01-10T12:40:39.8952954Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8953078Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8953169Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8953245Z         try:
2025-01-10T12:40:39.8953383Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8953469Z         except KeyError:
2025-01-10T12:40:39.8953604Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8953767Z     
2025-01-10T12:40:39.8953859Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8953960Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8954057Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8954189Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8954280Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8954375Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8954489Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8954493Z 
2025-01-10T12:40:39.8954618Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8954738Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8954890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8954973Z     ???
2025-01-10T12:40:39.8955131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8955147Z 
2025-01-10T12:40:39.8955277Z >   ???
2025-01-10T12:40:39.8955501Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8955621Z E   
2025-01-10T12:40:39.8955844Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8956031Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8956331Z E          ...
2025-01-10T12:40:39.8956591Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8956736Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8956854Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8956933Z E          ...
2025-01-10T12:40:39.8957022Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8957156Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8957261Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8957265Z 
2025-01-10T12:40:39.8957365Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8957605Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-10T12:40:39.8957610Z 
2025-01-10T12:40:39.8957744Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8957888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8957995Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8958133Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8958257Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8958357Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8958436Z err_msg = None
2025-01-10T12:40:39.8958446Z 
2025-01-10T12:40:39.8958558Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8958650Z         if err_msg is None:
2025-01-10T12:40:39.8958749Z             if left.shape != right.shape:
2025-01-10T12:40:39.8958841Z                 raise_assert_detail(
2025-01-10T12:40:39.8958987Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8959065Z                 )
2025-01-10T12:40:39.8959136Z     
2025-01-10T12:40:39.8959217Z             diff = 0
2025-01-10T12:40:39.8959340Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8959433Z                 # count up differences
2025-01-10T12:40:39.8959604Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8959691Z                     diff += 1
2025-01-10T12:40:39.8959762Z     
2025-01-10T12:40:39.8959857Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8959994Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8960168Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8960405Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8960483Z E           
2025-01-10T12:40:39.8960601Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8960858Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8961122Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8961127Z 
2025-01-10T12:40:39.8961444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8961449Z 
2025-01-10T12:40:39.8961622Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8961626Z 
2025-01-10T12:40:39.8961853Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff95b0>
2025-01-10T12:40:39.8962022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8962187Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8962192Z 
2025-01-10T12:40:39.8962330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8962451Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8962540Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8962613Z         try:
2025-01-10T12:40:39.8962760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8962842Z         except KeyError:
2025-01-10T12:40:39.8962988Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8963064Z     
2025-01-10T12:40:39.8963156Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8963249Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8963342Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8963474Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8963565Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8963660Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8963774Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8963848Z             else:
2025-01-10T12:40:39.8963947Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8964061Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8964065Z 
2025-01-10T12:40:39.8964189Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8964309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8964456Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8964533Z     ???
2025-01-10T12:40:39.8964647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8964651Z 
2025-01-10T12:40:39.8964729Z >   ???
2025-01-10T12:40:39.8964857Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8964936Z E   
2025-01-10T12:40:39.8965071Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8965191Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8965270Z E          ...
2025-01-10T12:40:39.8965360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8965496Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8965611Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8965689Z E          ...
2025-01-10T12:40:39.8965778Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8965994Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8966289Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8966295Z 
2025-01-10T12:40:39.8966396Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8966624Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-10T12:40:39.8966628Z 
2025-01-10T12:40:39.8966771Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8966910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8967011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8967151Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8967277Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8967379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8967460Z err_msg = None
2025-01-10T12:40:39.8967464Z 
2025-01-10T12:40:39.8967581Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8967663Z         if err_msg is None:
2025-01-10T12:40:39.8967766Z             if left.shape != right.shape:
2025-01-10T12:40:39.8967851Z                 raise_assert_detail(
2025-01-10T12:40:39.8968127Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8968205Z                 )
2025-01-10T12:40:39.8968276Z     
2025-01-10T12:40:39.8968355Z             diff = 0
2025-01-10T12:40:39.8968466Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8968559Z                 # count up differences
2025-01-10T12:40:39.8968729Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8968815Z                     diff += 1
2025-01-10T12:40:39.8968886Z     
2025-01-10T12:40:39.8968984Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8969118Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8969292Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8969403Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8969480Z E           
2025-01-10T12:40:39.8969596Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8969857Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8970120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8970125Z 
2025-01-10T12:40:39.8970427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8970432Z 
2025-01-10T12:40:39.8970605Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8970612Z 
2025-01-10T12:40:39.8970840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff9670>
2025-01-10T12:40:39.8971010Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8971095Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8971099Z 
2025-01-10T12:40:39.8971238Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8971359Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8971445Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8971524Z         try:
2025-01-10T12:40:39.8971799Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8971890Z         except KeyError:
2025-01-10T12:40:39.8972029Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8972106Z     
2025-01-10T12:40:39.8972202Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8972300Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8972401Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8972530Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8972622Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8972713Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8972827Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8972902Z             else:
2025-01-10T12:40:39.8973004Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8973114Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8973123Z 
2025-01-10T12:40:39.8973255Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8973370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8973523Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8973601Z     ???
2025-01-10T12:40:39.8973711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8973798Z 
2025-01-10T12:40:39.8973912Z >   ???
2025-01-10T12:40:39.8974131Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8974259Z E   
2025-01-10T12:40:39.8974476Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8974664Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8974787Z E          ...
2025-01-10T12:40:39.8974945Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8975117Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8975244Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8975318Z E          ...
2025-01-10T12:40:39.8975412Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8975547Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8975652Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8975661Z 
2025-01-10T12:40:39.8975759Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8975972Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-10T12:40:39.8975975Z 
2025-01-10T12:40:39.8976296Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8976442Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8976546Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8976683Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8976813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8976910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8976990Z err_msg = None
2025-01-10T12:40:39.8976994Z 
2025-01-10T12:40:39.8977109Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8977197Z         if err_msg is None:
2025-01-10T12:40:39.8977298Z             if left.shape != right.shape:
2025-01-10T12:40:39.8977384Z                 raise_assert_detail(
2025-01-10T12:40:39.8977537Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8977611Z                 )
2025-01-10T12:40:39.8977688Z     
2025-01-10T12:40:39.8977763Z             diff = 0
2025-01-10T12:40:39.8977881Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8977969Z                 # count up differences
2025-01-10T12:40:39.8978284Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8978376Z                     diff += 1
2025-01-10T12:40:39.8978447Z     
2025-01-10T12:40:39.8978541Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8978679Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8978861Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8978973Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8979052Z E           
2025-01-10T12:40:39.8979162Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8979424Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8979682Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8979799Z 
2025-01-10T12:40:39.8980104Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8980108Z 
2025-01-10T12:40:39.8980281Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8980285Z 
2025-01-10T12:40:39.8980544Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff97f0>
2025-01-10T12:40:39.8980721Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8980803Z attr = 'j_blues'
2025-01-10T12:40:39.8980807Z 
2025-01-10T12:40:39.8980949Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8981069Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8981156Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8981236Z         try:
2025-01-10T12:40:39.8981374Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8981461Z         except KeyError:
2025-01-10T12:40:39.8981604Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8981680Z     
2025-01-10T12:40:39.8981771Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8981870Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8981959Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8982095Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8982180Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8982276Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8982391Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8982469Z             else:
2025-01-10T12:40:39.8982569Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8982677Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8982680Z 
2025-01-10T12:40:39.8982811Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8982925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8983077Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8983149Z     ???
2025-01-10T12:40:39.8983264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8983268Z 
2025-01-10T12:40:39.8983339Z >   ???
2025-01-10T12:40:39.8983473Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8983548Z E   
2025-01-10T12:40:39.8983675Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8983788Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8983950Z E          ...
2025-01-10T12:40:39.8984056Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8984193Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8984317Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8984393Z E          ...
2025-01-10T12:40:39.8984496Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8984622Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8984735Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8984739Z 
2025-01-10T12:40:39.8984832Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8985049Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-10T12:40:39.8985053Z 
2025-01-10T12:40:39.8985191Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8985331Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8985436Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8985571Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8985703Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8985881Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8985966Z err_msg = None
2025-01-10T12:40:39.8985970Z 
2025-01-10T12:40:39.8986186Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8986280Z         if err_msg is None:
2025-01-10T12:40:39.8986383Z             if left.shape != right.shape:
2025-01-10T12:40:39.8986473Z                 raise_assert_detail(
2025-01-10T12:40:39.8986625Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8986700Z                 )
2025-01-10T12:40:39.8986779Z     
2025-01-10T12:40:39.8986861Z             diff = 0
2025-01-10T12:40:39.8986982Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8987073Z                 # count up differences
2025-01-10T12:40:39.8987250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8987330Z                     diff += 1
2025-01-10T12:40:39.8987408Z     
2025-01-10T12:40:39.8987498Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8987640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8987813Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8987933Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8988014Z E           
2025-01-10T12:40:39.8988129Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8988398Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8988654Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8988662Z 
2025-01-10T12:40:39.8988975Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8988979Z 
2025-01-10T12:40:39.8989155Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8989159Z 
2025-01-10T12:40:39.8989500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa570>
2025-01-10T12:40:39.8989680Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.8989758Z attr = 'lines'
2025-01-10T12:40:39.8989761Z 
2025-01-10T12:40:39.8989905Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8990021Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8990115Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8990200Z         try:
2025-01-10T12:40:39.8990365Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8990454Z         except KeyError:
2025-01-10T12:40:39.8990589Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8990672Z     
2025-01-10T12:40:39.8990760Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8990862Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8990952Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8991094Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8991185Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8991281Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8991391Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8991472Z             else:
2025-01-10T12:40:39.8991587Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8991976Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8991984Z 
2025-01-10T12:40:39.8992205Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8992398Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8992650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8992784Z     ???
2025-01-10T12:40:39.8992928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8992933Z 
2025-01-10T12:40:39.8993007Z >   ???
2025-01-10T12:40:39.8993148Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8993221Z E   
2025-01-10T12:40:39.8993359Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8993471Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8993551Z E          ...
2025-01-10T12:40:39.8993642Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8993784Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8993906Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8993980Z E          ...
2025-01-10T12:40:39.8994077Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8994209Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8994318Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8994322Z 
2025-01-10T12:40:39.8994414Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8994685Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-10T12:40:39.8994691Z 
2025-01-10T12:40:39.8994913Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa630>
2025-01-10T12:40:39.8995086Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.8995181Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8995185Z 
2025-01-10T12:40:39.8995328Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8995450Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8995537Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8995618Z         try:
2025-01-10T12:40:39.8995760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8995848Z         except KeyError:
2025-01-10T12:40:39.8995985Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8996217Z     
2025-01-10T12:40:39.8996353Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8996605Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8996699Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8996839Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8996928Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8997023Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8997140Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8997149Z 
2025-01-10T12:40:39.8997276Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8997398Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8997402Z 
2025-01-10T12:40:39.8997540Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8997634Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8997746Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8997835Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8997980Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8998072Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8998182Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8998266Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8998463Z err_msg = None
2025-01-10T12:40:39.8998466Z 
2025-01-10T12:40:39.8998574Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8998662Z         if err_msg is None:
2025-01-10T12:40:39.8998787Z             if left.shape != right.shape:
2025-01-10T12:40:39.8998883Z                 raise_assert_detail(
2025-01-10T12:40:39.8999027Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8999107Z                 )
2025-01-10T12:40:39.8999178Z     
2025-01-10T12:40:39.8999260Z             diff = 0
2025-01-10T12:40:39.8999377Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8999481Z                 # count up differences
2025-01-10T12:40:39.8999656Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8999737Z                     diff += 1
2025-01-10T12:40:39.8999814Z     
2025-01-10T12:40:39.8999902Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9000046Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9000220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9000329Z E           AssertionError: Series are different
2025-01-10T12:40:39.9000403Z E           
2025-01-10T12:40:39.9000526Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9000901Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9001233Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9001565Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9001654Z 
2025-01-10T12:40:39.9001973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9002233Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-10T12:40:39.9002237Z 
2025-01-10T12:40:39.9002465Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa6f0>
2025-01-10T12:40:39.9002640Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9002746Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9002751Z 
2025-01-10T12:40:39.9002888Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9003011Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9003096Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9003176Z         try:
2025-01-10T12:40:39.9003322Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9003411Z         except KeyError:
2025-01-10T12:40:39.9003554Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9003626Z     
2025-01-10T12:40:39.9003720Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9003813Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9003907Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9004041Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9004216Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9004307Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9004422Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9004426Z 
2025-01-10T12:40:39.9004551Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9004671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9004675Z 
2025-01-10T12:40:39.9004815Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9004905Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9005022Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9005104Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9005248Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9005340Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9005452Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9005532Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9005616Z err_msg = None
2025-01-10T12:40:39.9005620Z 
2025-01-10T12:40:39.9005729Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9005817Z         if err_msg is None:
2025-01-10T12:40:39.9005917Z             if left.shape != right.shape:
2025-01-10T12:40:39.9006007Z                 raise_assert_detail(
2025-01-10T12:40:39.9006265Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9006343Z                 )
2025-01-10T12:40:39.9006422Z     
2025-01-10T12:40:39.9006496Z             diff = 0
2025-01-10T12:40:39.9006614Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9006703Z                 # count up differences
2025-01-10T12:40:39.9006873Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9006960Z                     diff += 1
2025-01-10T12:40:39.9007037Z     
2025-01-10T12:40:39.9007127Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9007267Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9007437Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9007547Z E           AssertionError: Series are different
2025-01-10T12:40:39.9007626Z E           
2025-01-10T12:40:39.9007847Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9008220Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9008592Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9008965Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9008970Z 
2025-01-10T12:40:39.9009392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9009597Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-10T12:40:39.9009601Z 
2025-01-10T12:40:39.9009736Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9009870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9009969Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9010110Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9010236Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9010342Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9010419Z err_msg = None
2025-01-10T12:40:39.9010422Z 
2025-01-10T12:40:39.9010543Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9010636Z         if err_msg is None:
2025-01-10T12:40:39.9010745Z             if left.shape != right.shape:
2025-01-10T12:40:39.9010830Z                 raise_assert_detail(
2025-01-10T12:40:39.9010977Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9011056Z                 )
2025-01-10T12:40:39.9011128Z     
2025-01-10T12:40:39.9011210Z             diff = 0
2025-01-10T12:40:39.9011325Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9011423Z                 # count up differences
2025-01-10T12:40:39.9011593Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9011678Z                     diff += 1
2025-01-10T12:40:39.9011751Z     
2025-01-10T12:40:39.9011843Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9011977Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9012157Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9012274Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9012354Z E           
2025-01-10T12:40:39.9012466Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9012829Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9013097Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9013106Z 
2025-01-10T12:40:39.9013406Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9013416Z 
2025-01-10T12:40:39.9013585Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9013589Z 
2025-01-10T12:40:39.9013818Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa930>
2025-01-10T12:40:39.9014023Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>, attr = 'nu'
2025-01-10T12:40:39.9014027Z 
2025-01-10T12:40:39.9014178Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9014295Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9014387Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9014461Z         try:
2025-01-10T12:40:39.9014606Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9014691Z         except KeyError:
2025-01-10T12:40:39.9014934Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9015013Z     
2025-01-10T12:40:39.9015102Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9015202Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9015293Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9015430Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9015517Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9015612Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9015723Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9015731Z 
2025-01-10T12:40:39.9015861Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9015975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9016220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9016353Z     ???
2025-01-10T12:40:39.9016489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9016499Z 
2025-01-10T12:40:39.9016574Z >   ???
2025-01-10T12:40:39.9016707Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9016780Z E   
2025-01-10T12:40:39.9016913Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9017030Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9017111Z E          ...
2025-01-10T12:40:39.9017202Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9017345Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9017459Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9017539Z E          ...
2025-01-10T12:40:39.9017626Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9017756Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9017862Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9017876Z 
2025-01-10T12:40:39.9017967Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9018205Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-10T12:40:39.9018209Z 
2025-01-10T12:40:39.9018339Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9018497Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9018602Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9018860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9018987Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9019086Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9019164Z err_msg = None
2025-01-10T12:40:39.9019172Z 
2025-01-10T12:40:39.9019289Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9019378Z         if err_msg is None:
2025-01-10T12:40:39.9019472Z             if left.shape != right.shape:
2025-01-10T12:40:39.9019562Z                 raise_assert_detail(
2025-01-10T12:40:39.9019705Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9019788Z                 )
2025-01-10T12:40:39.9019861Z     
2025-01-10T12:40:39.9019962Z             diff = 0
2025-01-10T12:40:39.9020076Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9020170Z                 # count up differences
2025-01-10T12:40:39.9020344Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9020434Z                     diff += 1
2025-01-10T12:40:39.9020506Z     
2025-01-10T12:40:39.9020606Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9020747Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9021031Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9021151Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9021226Z E           
2025-01-10T12:40:39.9021343Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9021600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9021860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9021870Z 
2025-01-10T12:40:39.9022175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9022179Z 
2025-01-10T12:40:39.9022351Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9022355Z 
2025-01-10T12:40:39.9022581Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa9f0>
2025-01-10T12:40:39.9022751Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9022839Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9022843Z 
2025-01-10T12:40:39.9022988Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9023109Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9023200Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9023276Z         try:
2025-01-10T12:40:39.9023422Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9023515Z         except KeyError:
2025-01-10T12:40:39.9023657Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9023730Z     
2025-01-10T12:40:39.9023823Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9023918Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9024013Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9024145Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9024237Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9024327Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9024531Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9024536Z 
2025-01-10T12:40:39.9024668Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9024782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9024931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9025005Z     ???
2025-01-10T12:40:39.9025126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9025130Z 
2025-01-10T12:40:39.9025201Z >   ???
2025-01-10T12:40:39.9025334Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9025406Z E   
2025-01-10T12:40:39.9025540Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9025651Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9025731Z E          ...
2025-01-10T12:40:39.9025821Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9025960Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9026176Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9026254Z E          ...
2025-01-10T12:40:39.9026346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9026472Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9026704Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9026708Z 
2025-01-10T12:40:39.9026800Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9027009Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-10T12:40:39.9027012Z 
2025-01-10T12:40:39.9027140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9027273Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9027379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9027516Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9027645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9027741Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9027824Z err_msg = None
2025-01-10T12:40:39.9027833Z 
2025-01-10T12:40:39.9027943Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9028031Z         if err_msg is None:
2025-01-10T12:40:39.9028127Z             if left.shape != right.shape:
2025-01-10T12:40:39.9028218Z                 raise_assert_detail(
2025-01-10T12:40:39.9028360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9028441Z                 )
2025-01-10T12:40:39.9028513Z     
2025-01-10T12:40:39.9028594Z             diff = 0
2025-01-10T12:40:39.9028713Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9028810Z                 # count up differences
2025-01-10T12:40:39.9028985Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9029066Z                     diff += 1
2025-01-10T12:40:39.9029145Z     
2025-01-10T12:40:39.9029234Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9029372Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9029548Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9029673Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9029746Z E           
2025-01-10T12:40:39.9029865Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9030231Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9030499Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9030508Z 
2025-01-10T12:40:39.9030813Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9030818Z 
2025-01-10T12:40:39.9030985Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9030989Z 
2025-01-10T12:40:39.9031216Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffaab0>
2025-01-10T12:40:39.9031425Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>, attr = 'f_lu'
2025-01-10T12:40:39.9031430Z 
2025-01-10T12:40:39.9031572Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9031691Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9031775Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9031855Z         try:
2025-01-10T12:40:39.9031995Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9032081Z         except KeyError:
2025-01-10T12:40:39.9032303Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9032380Z     
2025-01-10T12:40:39.9032468Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9032567Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9032656Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9032791Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9032883Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9032973Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9033094Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9033098Z 
2025-01-10T12:40:39.9033225Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9033341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9033486Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9033567Z     ???
2025-01-10T12:40:39.9033681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9033684Z 
2025-01-10T12:40:39.9033762Z >   ???
2025-01-10T12:40:39.9033887Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9033964Z E   
2025-01-10T12:40:39.9034098Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9034211Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9034292Z E          ...
2025-01-10T12:40:39.9034381Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9034518Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9034631Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9034710Z E          ...
2025-01-10T12:40:39.9034798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9034929Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9035034Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9035042Z 
2025-01-10T12:40:39.9035140Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9035366Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-10T12:40:39.9035375Z 
2025-01-10T12:40:39.9035503Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9035636Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9035732Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9035958Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9036184Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9036333Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9036461Z err_msg = None
2025-01-10T12:40:39.9036469Z 
2025-01-10T12:40:39.9036672Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9036810Z         if err_msg is None:
2025-01-10T12:40:39.9036973Z             if left.shape != right.shape:
2025-01-10T12:40:39.9037117Z                 raise_assert_detail(
2025-01-10T12:40:39.9037358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9037470Z                 )
2025-01-10T12:40:39.9037543Z     
2025-01-10T12:40:39.9037625Z             diff = 0
2025-01-10T12:40:39.9037744Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9037845Z                 # count up differences
2025-01-10T12:40:39.9038013Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9038098Z                     diff += 1
2025-01-10T12:40:39.9038170Z     
2025-01-10T12:40:39.9038265Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9038400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9038772Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9038893Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9038968Z E           
2025-01-10T12:40:39.9039084Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9039384Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9039828Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9039840Z 
2025-01-10T12:40:39.9040149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9040153Z 
2025-01-10T12:40:39.9040329Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9040335Z 
2025-01-10T12:40:39.9040684Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffb230>
2025-01-10T12:40:39.9040857Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9040944Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9040948Z 
2025-01-10T12:40:39.9041091Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9041213Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9041299Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9041443Z         try:
2025-01-10T12:40:39.9041634Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9041730Z         except KeyError:
2025-01-10T12:40:39.9041873Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9041946Z     
2025-01-10T12:40:39.9042038Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9042133Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9042228Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9042426Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9042563Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9042657Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9042905Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9042985Z             else:
2025-01-10T12:40:39.9043087Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9043195Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9043199Z 
2025-01-10T12:40:39.9043400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9043585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9043736Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9043816Z     ???
2025-01-10T12:40:39.9043924Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9043929Z 
2025-01-10T12:40:39.9044005Z >   ???
2025-01-10T12:40:39.9044132Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9044214Z E   
2025-01-10T12:40:39.9044352Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9044567Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9044690Z E          ...
2025-01-10T12:40:39.9044833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9045017Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9045139Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9045317Z E          ...
2025-01-10T12:40:39.9045404Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9045579Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9045767Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9045773Z 
2025-01-10T12:40:39.9045871Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9046194Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-10T12:40:39.9046199Z 
2025-01-10T12:40:39.9046337Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9046473Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9046579Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9046716Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9046839Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9046947Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9047088Z err_msg = None
2025-01-10T12:40:39.9047095Z 
2025-01-10T12:40:39.9047271Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9047359Z         if err_msg is None:
2025-01-10T12:40:39.9047463Z             if left.shape != right.shape:
2025-01-10T12:40:39.9047549Z                 raise_assert_detail(
2025-01-10T12:40:39.9047702Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9047781Z                 )
2025-01-10T12:40:39.9047860Z     
2025-01-10T12:40:39.9047936Z             diff = 0
2025-01-10T12:40:39.9048078Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9048247Z                 # count up differences
2025-01-10T12:40:39.9048444Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9048536Z                     diff += 1
2025-01-10T12:40:39.9048609Z     
2025-01-10T12:40:39.9048710Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9048850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9049026Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9049226Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9049332Z E           
2025-01-10T12:40:39.9049450Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9049852Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9050196Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9050212Z 
2025-01-10T12:40:39.9050567Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9050573Z 
2025-01-10T12:40:39.9050748Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9050752Z 
2025-01-10T12:40:39.9050986Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffb2f0>
2025-01-10T12:40:39.9051272Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9051365Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9051370Z 
2025-01-10T12:40:39.9051509Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9051629Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9051844Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9051929Z         try:
2025-01-10T12:40:39.9052148Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9052281Z         except KeyError:
2025-01-10T12:40:39.9052425Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9052504Z     
2025-01-10T12:40:39.9052593Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9052693Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9052782Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9052926Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9053075Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9053224Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9053344Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9053420Z             else:
2025-01-10T12:40:39.9053521Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9053634Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9053638Z 
2025-01-10T12:40:39.9053767Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9053880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9054130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9054250Z     ???
2025-01-10T12:40:39.9054433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9054439Z 
2025-01-10T12:40:39.9054533Z >   ???
2025-01-10T12:40:39.9054669Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9054746Z E   
2025-01-10T12:40:39.9054875Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9055088Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9055210Z E          ...
2025-01-10T12:40:39.9055310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9055449Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9055569Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9055643Z E          ...
2025-01-10T12:40:39.9055736Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9055864Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9056011Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9056021Z 
2025-01-10T12:40:39.9056314Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9056664Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-10T12:40:39.9056669Z 
2025-01-10T12:40:39.9056807Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9056935Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9057044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9057178Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9057350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9057523Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9057624Z err_msg = None
2025-01-10T12:40:39.9057628Z 
2025-01-10T12:40:39.9057750Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9057833Z         if err_msg is None:
2025-01-10T12:40:39.9057938Z             if left.shape != right.shape:
2025-01-10T12:40:39.9058024Z                 raise_assert_detail(
2025-01-10T12:40:39.9058178Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9058252Z                 )
2025-01-10T12:40:39.9058327Z     
2025-01-10T12:40:39.9058403Z             diff = 0
2025-01-10T12:40:39.9058598Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9058846Z                 # count up differences
2025-01-10T12:40:39.9059031Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9059112Z                     diff += 1
2025-01-10T12:40:39.9059191Z     
2025-01-10T12:40:39.9059282Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9059431Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9059692Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9059861Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9059943Z E           
2025-01-10T12:40:39.9060057Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9060318Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9060581Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9060599Z 
2025-01-10T12:40:39.9061021Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9061027Z 
2025-01-10T12:40:39.9061205Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9061210Z 
2025-01-10T12:40:39.9061434Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffb470>
2025-01-10T12:40:39.9061641Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9061792Z attr = 'j_blues'
2025-01-10T12:40:39.9061799Z 
2025-01-10T12:40:39.9061953Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9062078Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9062165Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9062249Z         try:
2025-01-10T12:40:39.9062391Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9062479Z         except KeyError:
2025-01-10T12:40:39.9062662Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9062797Z     
2025-01-10T12:40:39.9063010Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9063117Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9063208Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9063345Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9063433Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9063535Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9063737Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9063852Z             else:
2025-01-10T12:40:39.9063956Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9064064Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9064068Z 
2025-01-10T12:40:39.9064201Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9064314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9064472Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9064582Z     ???
2025-01-10T12:40:39.9064784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9064790Z 
2025-01-10T12:40:39.9064907Z >   ???
2025-01-10T12:40:39.9065104Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9065177Z E   
2025-01-10T12:40:39.9065412Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9065567Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9065708Z E          ...
2025-01-10T12:40:39.9065830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9065962Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9066254Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9066337Z E          ...
2025-01-10T12:40:39.9066430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9066567Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9066680Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9066685Z 
2025-01-10T12:40:39.9066777Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9066996Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-10T12:40:39.9067000Z 
2025-01-10T12:40:39.9067136Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9067272Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9067437Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9067652Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9067865Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9068024Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9068166Z err_msg = None
2025-01-10T12:40:39.9068172Z 
2025-01-10T12:40:39.9068355Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9068501Z         if err_msg is None:
2025-01-10T12:40:39.9068627Z             if left.shape != right.shape:
2025-01-10T12:40:39.9068724Z                 raise_assert_detail(
2025-01-10T12:40:39.9068879Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9068959Z                 )
2025-01-10T12:40:39.9069036Z     
2025-01-10T12:40:39.9069113Z             diff = 0
2025-01-10T12:40:39.9069230Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9069319Z                 # count up differences
2025-01-10T12:40:39.9069495Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9069575Z                     diff += 1
2025-01-10T12:40:39.9069652Z     
2025-01-10T12:40:39.9069741Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9070015Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9070192Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9070310Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9070384Z E           
2025-01-10T12:40:39.9070502Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9070766Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9071026Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9071030Z 
2025-01-10T12:40:39.9071342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9071347Z 
2025-01-10T12:40:39.9071519Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9071630Z 
2025-01-10T12:40:39.9071856Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024230>
2025-01-10T12:40:39.9072028Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9072108Z attr = 'lines'
2025-01-10T12:40:39.9072111Z 
2025-01-10T12:40:39.9072254Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9072371Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9072465Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9072540Z         try:
2025-01-10T12:40:39.9072689Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9072773Z         except KeyError:
2025-01-10T12:40:39.9072916Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9072994Z     
2025-01-10T12:40:39.9073082Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9073182Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9073277Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9073418Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9073506Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9073601Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9073713Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9073796Z             else:
2025-01-10T12:40:39.9073893Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9074008Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9074012Z 
2025-01-10T12:40:39.9074143Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9074263Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9074415Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9074489Z     ???
2025-01-10T12:40:39.9074606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9074614Z 
2025-01-10T12:40:39.9074688Z >   ???
2025-01-10T12:40:39.9074820Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9074893Z E   
2025-01-10T12:40:39.9075026Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9075139Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9075218Z E          ...
2025-01-10T12:40:39.9075307Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9075441Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9075662Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9075745Z E          ...
2025-01-10T12:40:39.9075838Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9075965Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9076254Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9076263Z 
2025-01-10T12:40:39.9076382Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9076656Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-10T12:40:39.9076661Z 
2025-01-10T12:40:39.9076882Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70242f0>
2025-01-10T12:40:39.9077055Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9077145Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9077150Z 
2025-01-10T12:40:39.9077293Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9077420Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9077507Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9077586Z         try:
2025-01-10T12:40:39.9077727Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9077816Z         except KeyError:
2025-01-10T12:40:39.9077953Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9078172Z     
2025-01-10T12:40:39.9078331Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9078494Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9078644Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9078878Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9079024Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9079183Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9079334Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9079344Z 
2025-01-10T12:40:39.9079478Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9079595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9079599Z 
2025-01-10T12:40:39.9079737Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9079829Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9079939Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9080033Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9080173Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9080264Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9080370Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9080457Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9080542Z err_msg = None
2025-01-10T12:40:39.9080546Z 
2025-01-10T12:40:39.9080659Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9080746Z         if err_msg is None:
2025-01-10T12:40:39.9080843Z             if left.shape != right.shape:
2025-01-10T12:40:39.9080938Z                 raise_assert_detail(
2025-01-10T12:40:39.9081081Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9081161Z                 )
2025-01-10T12:40:39.9081237Z     
2025-01-10T12:40:39.9081318Z             diff = 0
2025-01-10T12:40:39.9081431Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9081526Z                 # count up differences
2025-01-10T12:40:39.9081698Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9081788Z                     diff += 1
2025-01-10T12:40:39.9081860Z     
2025-01-10T12:40:39.9081956Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9082099Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9082396Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9082510Z E           AssertionError: Series are different
2025-01-10T12:40:39.9082585Z E           
2025-01-10T12:40:39.9082692Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9083058Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9083397Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9083747Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9083843Z 
2025-01-10T12:40:39.9084157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9084427Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-10T12:40:39.9084431Z 
2025-01-10T12:40:39.9084663Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70243b0>
2025-01-10T12:40:39.9084837Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9084933Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9084937Z 
2025-01-10T12:40:39.9085076Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9085198Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9085284Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9085366Z         try:
2025-01-10T12:40:39.9085511Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9085601Z         except KeyError:
2025-01-10T12:40:39.9085740Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9085818Z     
2025-01-10T12:40:39.9085912Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9086007Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9086214Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9086351Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9086448Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9086539Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9086653Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9086657Z 
2025-01-10T12:40:39.9086783Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9086901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9086910Z 
2025-01-10T12:40:39.9087046Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9087136Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9087249Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9087332Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9087476Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9087559Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9087804Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9087888Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9087973Z err_msg = None
2025-01-10T12:40:39.9087977Z 
2025-01-10T12:40:39.9088088Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9088176Z         if err_msg is None:
2025-01-10T12:40:39.9088272Z             if left.shape != right.shape:
2025-01-10T12:40:39.9088366Z                 raise_assert_detail(
2025-01-10T12:40:39.9088511Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9088593Z                 )
2025-01-10T12:40:39.9088674Z     
2025-01-10T12:40:39.9088750Z             diff = 0
2025-01-10T12:40:39.9088869Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9088959Z                 # count up differences
2025-01-10T12:40:39.9089131Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9089215Z                     diff += 1
2025-01-10T12:40:39.9089291Z     
2025-01-10T12:40:39.9089379Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9089526Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9089698Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9089809Z E           AssertionError: Series are different
2025-01-10T12:40:39.9090027Z E           
2025-01-10T12:40:39.9090136Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9090503Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9090873Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9091248Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9091253Z 
2025-01-10T12:40:39.9091562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9091772Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-10T12:40:39.9091776Z 
2025-01-10T12:40:39.9091911Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9092041Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9092149Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9092286Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9092410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9092510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9092588Z err_msg = None
2025-01-10T12:40:39.9092592Z 
2025-01-10T12:40:39.9092707Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9092791Z         if err_msg is None:
2025-01-10T12:40:39.9092975Z             if left.shape != right.shape:
2025-01-10T12:40:39.9093064Z                 raise_assert_detail(
2025-01-10T12:40:39.9093212Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9093286Z                 )
2025-01-10T12:40:39.9093364Z     
2025-01-10T12:40:39.9093439Z             diff = 0
2025-01-10T12:40:39.9093560Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9093654Z                 # count up differences
2025-01-10T12:40:39.9093825Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9093914Z                     diff += 1
2025-01-10T12:40:39.9093988Z     
2025-01-10T12:40:39.9094080Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9094215Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9094390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9094507Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9094588Z E           
2025-01-10T12:40:39.9094699Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9094961Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9095312Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9095317Z 
2025-01-10T12:40:39.9095624Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9095628Z 
2025-01-10T12:40:39.9095803Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9095808Z 
2025-01-10T12:40:39.9096030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70245f0>
2025-01-10T12:40:39.9096341Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>, attr = 'nu'
2025-01-10T12:40:39.9096350Z 
2025-01-10T12:40:39.9096499Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9096616Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9096767Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9096894Z         try:
2025-01-10T12:40:39.9097138Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9097277Z         except KeyError:
2025-01-10T12:40:39.9097515Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9097641Z     
2025-01-10T12:40:39.9097780Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9097878Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9097974Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9098112Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9098203Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9098304Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9098414Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9098418Z 
2025-01-10T12:40:39.9098549Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9098663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9098844Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9098920Z     ???
2025-01-10T12:40:39.9099035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9099038Z 
2025-01-10T12:40:39.9099241Z >   ???
2025-01-10T12:40:39.9099379Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9099452Z E   
2025-01-10T12:40:39.9099593Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9099711Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9099786Z E          ...
2025-01-10T12:40:39.9099886Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9100016Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9100136Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9100210Z E          ...
2025-01-10T12:40:39.9100303Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9100429Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9100542Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9100547Z 
2025-01-10T12:40:39.9100640Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9100882Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-10T12:40:39.9100886Z 
2025-01-10T12:40:39.9101022Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9101150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9101369Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9101501Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9101631Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9101726Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9101811Z err_msg = None
2025-01-10T12:40:39.9101814Z 
2025-01-10T12:40:39.9101926Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9102014Z         if err_msg is None:
2025-01-10T12:40:39.9102121Z             if left.shape != right.shape:
2025-01-10T12:40:39.9102208Z                 raise_assert_detail(
2025-01-10T12:40:39.9102355Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9102430Z                 )
2025-01-10T12:40:39.9102506Z     
2025-01-10T12:40:39.9102586Z             diff = 0
2025-01-10T12:40:39.9102708Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9102798Z                 # count up differences
2025-01-10T12:40:39.9102971Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9103050Z                     diff += 1
2025-01-10T12:40:39.9103127Z     
2025-01-10T12:40:39.9103222Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9103363Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9103533Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9103657Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9103737Z E           
2025-01-10T12:40:39.9103849Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9104109Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9104368Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9104373Z 
2025-01-10T12:40:39.9104763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9104768Z 
2025-01-10T12:40:39.9104943Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9104947Z 
2025-01-10T12:40:39.9105170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70246b0>
2025-01-10T12:40:39.9105340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9105425Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9105429Z 
2025-01-10T12:40:39.9105571Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9105685Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9105781Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9105855Z         try:
2025-01-10T12:40:39.9106001Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9106261Z         except KeyError:
2025-01-10T12:40:39.9106415Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9106502Z     
2025-01-10T12:40:39.9106591Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9106696Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9106787Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9106926Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9107016Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9107259Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9107373Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9107377Z 
2025-01-10T12:40:39.9107513Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9107627Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9107781Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9107861Z     ???
2025-01-10T12:40:39.9107977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9107985Z 
2025-01-10T12:40:39.9108066Z >   ???
2025-01-10T12:40:39.9108194Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9108275Z E   
2025-01-10T12:40:39.9108408Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9108530Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9108611Z E          ...
2025-01-10T12:40:39.9108709Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9108838Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9108958Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9109033Z E          ...
2025-01-10T12:40:39.9109130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9109261Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9109367Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9109371Z 
2025-01-10T12:40:39.9109472Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9109677Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-10T12:40:39.9109681Z 
2025-01-10T12:40:39.9109817Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9109946Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9117527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9117720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9117868Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9117983Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9118100Z err_msg = None
2025-01-10T12:40:39.9118108Z 
2025-01-10T12:40:39.9118307Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9118651Z         if err_msg is None:
2025-01-10T12:40:39.9118819Z             if left.shape != right.shape:
2025-01-10T12:40:39.9118971Z                 raise_assert_detail(
2025-01-10T12:40:39.9119220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9119303Z                 )
2025-01-10T12:40:39.9119375Z     
2025-01-10T12:40:39.9119453Z             diff = 0
2025-01-10T12:40:39.9119584Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9119675Z                 # count up differences
2025-01-10T12:40:39.9119857Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9119940Z                     diff += 1
2025-01-10T12:40:39.9120011Z     
2025-01-10T12:40:39.9120110Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9120257Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9120439Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9120563Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9120637Z E           
2025-01-10T12:40:39.9120756Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9121017Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9121404Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9121409Z 
2025-01-10T12:40:39.9121742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9121747Z 
2025-01-10T12:40:39.9121920Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9121924Z 
2025-01-10T12:40:39.9122152Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024770>
2025-01-10T12:40:39.9122366Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>, attr = 'f_lu'
2025-01-10T12:40:39.9122369Z 
2025-01-10T12:40:39.9122518Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9122645Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9122734Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9122814Z         try:
2025-01-10T12:40:39.9122959Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9123047Z         except KeyError:
2025-01-10T12:40:39.9123186Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9123267Z     
2025-01-10T12:40:39.9123357Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9123458Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9123549Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9123688Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9123776Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9123875Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9123987Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9123996Z 
2025-01-10T12:40:39.9124126Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9124245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9124391Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9124470Z     ???
2025-01-10T12:40:39.9124583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9124672Z 
2025-01-10T12:40:39.9124752Z >   ???
2025-01-10T12:40:39.9124881Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9124958Z E   
2025-01-10T12:40:39.9125085Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9125200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9125275Z E          ...
2025-01-10T12:40:39.9125377Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9125513Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9125713Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9125847Z E          ...
2025-01-10T12:40:39.9125994Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9126354Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9126531Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9126537Z 
2025-01-10T12:40:39.9126705Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9127028Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-10T12:40:39.9127034Z 
2025-01-10T12:40:39.9127175Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9127311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9127554Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9127696Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9127823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9127927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9128010Z err_msg = None
2025-01-10T12:40:39.9128014Z 
2025-01-10T12:40:39.9128132Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9128220Z         if err_msg is None:
2025-01-10T12:40:39.9128323Z             if left.shape != right.shape:
2025-01-10T12:40:39.9128410Z                 raise_assert_detail(
2025-01-10T12:40:39.9128560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9128634Z                 )
2025-01-10T12:40:39.9128712Z     
2025-01-10T12:40:39.9128793Z             diff = 0
2025-01-10T12:40:39.9128911Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9129006Z                 # count up differences
2025-01-10T12:40:39.9129174Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9129262Z                     diff += 1
2025-01-10T12:40:39.9129333Z     
2025-01-10T12:40:39.9129427Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9129567Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9129752Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9129865Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9129946Z E           
2025-01-10T12:40:39.9130058Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9130323Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9130588Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9130592Z 
2025-01-10T12:40:39.9131019Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9131024Z 
2025-01-10T12:40:39.9131204Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9131208Z 
2025-01-10T12:40:39.9131438Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024ef0>
2025-01-10T12:40:39.9131611Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9131699Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9131702Z 
2025-01-10T12:40:39.9131842Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9131966Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9132055Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9132135Z         try:
2025-01-10T12:40:39.9132278Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9132367Z         except KeyError:
2025-01-10T12:40:39.9132514Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9132594Z     
2025-01-10T12:40:39.9132688Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9132790Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9132890Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9133025Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9133207Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9133303Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9133419Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9133493Z             else:
2025-01-10T12:40:39.9133598Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9133708Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9133712Z 
2025-01-10T12:40:39.9133845Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9133963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9134120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9134194Z     ???
2025-01-10T12:40:39.9134313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9134317Z 
2025-01-10T12:40:39.9134393Z >   ???
2025-01-10T12:40:39.9134522Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9134607Z E   
2025-01-10T12:40:39.9134736Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9134853Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9134927Z E          ...
2025-01-10T12:40:39.9135024Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9135155Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9135273Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9135347Z E          ...
2025-01-10T12:40:39.9135440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9135569Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9135679Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9135682Z 
2025-01-10T12:40:39.9135784Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9136016Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-10T12:40:39.9136024Z 
2025-01-10T12:40:39.9136354Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9136492Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9136599Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9136735Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9136867Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9137092Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9137174Z err_msg = None
2025-01-10T12:40:39.9137178Z 
2025-01-10T12:40:39.9137293Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9137375Z         if err_msg is None:
2025-01-10T12:40:39.9137476Z             if left.shape != right.shape:
2025-01-10T12:40:39.9137562Z                 raise_assert_detail(
2025-01-10T12:40:39.9137720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9137794Z                 )
2025-01-10T12:40:39.9137869Z     
2025-01-10T12:40:39.9137946Z             diff = 0
2025-01-10T12:40:39.9138065Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9138156Z                 # count up differences
2025-01-10T12:40:39.9138333Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9138415Z                     diff += 1
2025-01-10T12:40:39.9138489Z     
2025-01-10T12:40:39.9138586Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9138725Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9138900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9139012Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9139092Z E           
2025-01-10T12:40:39.9139364Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9139736Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9140057Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9140073Z 
2025-01-10T12:40:39.9140587Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9140594Z 
2025-01-10T12:40:39.9140902Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9140908Z 
2025-01-10T12:40:39.9141270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024fb0>
2025-01-10T12:40:39.9141447Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9141532Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9141536Z 
2025-01-10T12:40:39.9141682Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9141808Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9141898Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9141982Z         try:
2025-01-10T12:40:39.9142126Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9142215Z         except KeyError:
2025-01-10T12:40:39.9142356Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9142434Z     
2025-01-10T12:40:39.9142528Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9142639Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9142730Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9142867Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9142955Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9143052Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9143168Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9143250Z             else:
2025-01-10T12:40:39.9143358Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9143468Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9143570Z 
2025-01-10T12:40:39.9143707Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9143893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9144155Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9144279Z     ???
2025-01-10T12:40:39.9144487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9144494Z 
2025-01-10T12:40:39.9144616Z >   ???
2025-01-10T12:40:39.9144844Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9144961Z E   
2025-01-10T12:40:39.9145118Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9145235Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9145311Z E          ...
2025-01-10T12:40:39.9145407Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9145542Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9145661Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9145736Z E          ...
2025-01-10T12:40:39.9145828Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9145950Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9146165Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9146297Z 
2025-01-10T12:40:39.9146399Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9146622Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-10T12:40:39.9146626Z 
2025-01-10T12:40:39.9146764Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9146896Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9147003Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9147144Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9147275Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9147370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9147454Z err_msg = None
2025-01-10T12:40:39.9147458Z 
2025-01-10T12:40:39.9147574Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9147664Z         if err_msg is None:
2025-01-10T12:40:39.9147764Z             if left.shape != right.shape:
2025-01-10T12:40:39.9147852Z                 raise_assert_detail(
2025-01-10T12:40:39.9148002Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9148075Z                 )
2025-01-10T12:40:39.9148152Z     
2025-01-10T12:40:39.9148227Z             diff = 0
2025-01-10T12:40:39.9148344Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9148434Z                 # count up differences
2025-01-10T12:40:39.9148610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9148690Z                     diff += 1
2025-01-10T12:40:39.9148766Z     
2025-01-10T12:40:39.9148855Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9148997Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9149172Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9149292Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9149370Z E           
2025-01-10T12:40:39.9149483Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9149864Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9150124Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9150133Z 
2025-01-10T12:40:39.9150444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9150448Z 
2025-01-10T12:40:39.9150626Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9150629Z 
2025-01-10T12:40:39.9150853Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7025130>
2025-01-10T12:40:39.9151026Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9151103Z attr = 'j_blues'
2025-01-10T12:40:39.9151107Z 
2025-01-10T12:40:39.9151254Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9151372Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9151464Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9151537Z         try:
2025-01-10T12:40:39.9151682Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9151769Z         except KeyError:
2025-01-10T12:40:39.9151989Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9152066Z     
2025-01-10T12:40:39.9152154Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9152253Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9152342Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9152479Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9152565Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9152660Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9152772Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9152851Z             else:
2025-01-10T12:40:39.9152946Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9153058Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9153062Z 
2025-01-10T12:40:39.9153188Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9153307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9153463Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9153543Z     ???
2025-01-10T12:40:39.9153658Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9153662Z 
2025-01-10T12:40:39.9153733Z >   ???
2025-01-10T12:40:39.9153865Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9153937Z E   
2025-01-10T12:40:39.9154071Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9154185Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9154266Z E          ...
2025-01-10T12:40:39.9154356Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9154493Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9154614Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9154688Z E          ...
2025-01-10T12:40:39.9154784Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9154909Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9155019Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9155023Z 
2025-01-10T12:40:39.9155114Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9155385Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-10T12:40:39.9155390Z 
2025-01-10T12:40:39.9155519Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9155735Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9155838Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9155975Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9156291Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9156417Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9156498Z err_msg = None
2025-01-10T12:40:39.9156501Z 
2025-01-10T12:40:39.9156610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9156697Z         if err_msg is None:
2025-01-10T12:40:39.9156790Z             if left.shape != right.shape:
2025-01-10T12:40:39.9156878Z                 raise_assert_detail(
2025-01-10T12:40:39.9157020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9157104Z                 )
2025-01-10T12:40:39.9157176Z     
2025-01-10T12:40:39.9157261Z             diff = 0
2025-01-10T12:40:39.9157372Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9157466Z                 # count up differences
2025-01-10T12:40:39.9157641Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9157844Z                     diff += 1
2025-01-10T12:40:39.9157920Z     
2025-01-10T12:40:39.9158009Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9158150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9158321Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9158438Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9158512Z E           
2025-01-10T12:40:39.9158628Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9158890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9159149Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9159158Z 
2025-01-10T12:40:39.9159470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9159475Z 
2025-01-10T12:40:39.9159654Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9159658Z 
2025-01-10T12:40:39.9159889Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7025eb0>
2025-01-10T12:40:39.9160061Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9160138Z attr = 'lines'
2025-01-10T12:40:39.9160142Z 
2025-01-10T12:40:39.9160285Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9160401Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9160497Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9160571Z         try:
2025-01-10T12:40:39.9160719Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9160800Z         except KeyError:
2025-01-10T12:40:39.9160945Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9161016Z     
2025-01-10T12:40:39.9161116Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9161212Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9161308Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9161578Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9161668Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9161765Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9161876Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9161956Z             else:
2025-01-10T12:40:39.9162050Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9162168Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9162172Z 
2025-01-10T12:40:39.9162298Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9162419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9162563Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9162646Z     ???
2025-01-10T12:40:39.9162757Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9162767Z 
2025-01-10T12:40:39.9162870Z >   ???
2025-01-10T12:40:39.9163106Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9163226Z E   
2025-01-10T12:40:39.9163457Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9163641Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9163771Z E          ...
2025-01-10T12:40:39.9163928Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9164163Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9164277Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9164358Z E          ...
2025-01-10T12:40:39.9164445Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9164574Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9164681Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9164693Z 
2025-01-10T12:40:39.9164785Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9165109Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-10T12:40:39.9165114Z 
2025-01-10T12:40:39.9165340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7025f70>
2025-01-10T12:40:39.9165511Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9165601Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9165610Z 
2025-01-10T12:40:39.9165752Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9165868Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9165958Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9166032Z         try:
2025-01-10T12:40:39.9166284Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9166379Z         except KeyError:
2025-01-10T12:40:39.9166515Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9166592Z     
2025-01-10T12:40:39.9166685Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9166783Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9166872Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9167008Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9167095Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9167190Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9167307Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9167311Z 
2025-01-10T12:40:39.9167440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9167552Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9167561Z 
2025-01-10T12:40:39.9167699Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9167791Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9167901Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9168109Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9168254Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9168344Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9168450Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9168542Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9168620Z err_msg = None
2025-01-10T12:40:39.9168623Z 
2025-01-10T12:40:39.9168738Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9168826Z         if err_msg is None:
2025-01-10T12:40:39.9168921Z             if left.shape != right.shape:
2025-01-10T12:40:39.9169011Z                 raise_assert_detail(
2025-01-10T12:40:39.9169156Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9169237Z                 )
2025-01-10T12:40:39.9169309Z     
2025-01-10T12:40:39.9169390Z             diff = 0
2025-01-10T12:40:39.9169506Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9169600Z                 # count up differences
2025-01-10T12:40:39.9169778Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9169866Z                     diff += 1
2025-01-10T12:40:39.9169938Z     
2025-01-10T12:40:39.9170143Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9170277Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9170452Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9170562Z E           AssertionError: Series are different
2025-01-10T12:40:39.9170636Z E           
2025-01-10T12:40:39.9170745Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9171113Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9171715Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9172058Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9172063Z 
2025-01-10T12:40:39.9172373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9172685Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-10T12:40:39.9172693Z 
2025-01-10T12:40:39.9172925Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026030>
2025-01-10T12:40:39.9173090Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9173187Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9173191Z 
2025-01-10T12:40:39.9173328Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9173448Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9173533Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9173613Z         try:
2025-01-10T12:40:39.9173839Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9173930Z         except KeyError:
2025-01-10T12:40:39.9174066Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9174144Z     
2025-01-10T12:40:39.9174231Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9174335Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9174434Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9174582Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9174691Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9174793Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9174908Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9174912Z 
2025-01-10T12:40:39.9175036Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9175155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9175160Z 
2025-01-10T12:40:39.9175318Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9175417Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9175528Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9175615Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9175845Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9175929Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9176039Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9176217Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9176302Z err_msg = None
2025-01-10T12:40:39.9176306Z 
2025-01-10T12:40:39.9176413Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9176499Z         if err_msg is None:
2025-01-10T12:40:39.9176592Z             if left.shape != right.shape:
2025-01-10T12:40:39.9176689Z                 raise_assert_detail(
2025-01-10T12:40:39.9176832Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9176910Z                 )
2025-01-10T12:40:39.9176982Z     
2025-01-10T12:40:39.9177063Z             diff = 0
2025-01-10T12:40:39.9177185Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9177282Z                 # count up differences
2025-01-10T12:40:39.9177458Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9177538Z                     diff += 1
2025-01-10T12:40:39.9177614Z     
2025-01-10T12:40:39.9177701Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9177843Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9178013Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9178123Z E           AssertionError: Series are different
2025-01-10T12:40:39.9178201Z E           
2025-01-10T12:40:39.9178307Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9178674Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9179043Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9179531Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9179544Z 
2025-01-10T12:40:39.9179869Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9180130Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-10T12:40:39.9180135Z 
2025-01-10T12:40:39.9180270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9180399Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9180507Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9180638Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9180766Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9180866Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9181057Z err_msg = None
2025-01-10T12:40:39.9181061Z 
2025-01-10T12:40:39.9181183Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9181266Z         if err_msg is None:
2025-01-10T12:40:39.9181368Z             if left.shape != right.shape:
2025-01-10T12:40:39.9181454Z                 raise_assert_detail(
2025-01-10T12:40:39.9181608Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9181682Z                 )
2025-01-10T12:40:39.9181760Z     
2025-01-10T12:40:39.9181835Z             diff = 0
2025-01-10T12:40:39.9181957Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9182045Z                 # count up differences
2025-01-10T12:40:39.9182221Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9182306Z                     diff += 1
2025-01-10T12:40:39.9182383Z     
2025-01-10T12:40:39.9182524Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9182774Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9183064Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9183259Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9183382Z E           
2025-01-10T12:40:39.9183577Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9183914Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9184179Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9184189Z 
2025-01-10T12:40:39.9184510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9184515Z 
2025-01-10T12:40:39.9184687Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9184696Z 
2025-01-10T12:40:39.9184920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026270>
2025-01-10T12:40:39.9185284Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>, attr = 'nu'
2025-01-10T12:40:39.9185301Z 
2025-01-10T12:40:39.9185470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9185592Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9185678Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9185756Z         try:
2025-01-10T12:40:39.9185897Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9185990Z         except KeyError:
2025-01-10T12:40:39.9186232Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9186310Z     
2025-01-10T12:40:39.9186398Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9186498Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9186592Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9186723Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9186817Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9186914Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9187029Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9187034Z 
2025-01-10T12:40:39.9187160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9187279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9187426Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9187626Z     ???
2025-01-10T12:40:39.9187739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9187742Z 
2025-01-10T12:40:39.9187822Z >   ???
2025-01-10T12:40:39.9187958Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9188030Z E   
2025-01-10T12:40:39.9188165Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9188280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9188360Z E          ...
2025-01-10T12:40:39.9188454Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9188591Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9188706Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9188784Z E          ...
2025-01-10T12:40:39.9188872Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9189005Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9189115Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9189119Z 
2025-01-10T12:40:39.9189215Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9189502Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-10T12:40:39.9189506Z 
2025-01-10T12:40:39.9189635Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9189769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9189870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9190006Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9190129Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9190228Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9190307Z err_msg = None
2025-01-10T12:40:39.9190316Z 
2025-01-10T12:40:39.9190426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9190513Z         if err_msg is None:
2025-01-10T12:40:39.9190610Z             if left.shape != right.shape:
2025-01-10T12:40:39.9190703Z                 raise_assert_detail(
2025-01-10T12:40:39.9190851Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9190930Z                 )
2025-01-10T12:40:39.9191001Z     
2025-01-10T12:40:39.9191082Z             diff = 0
2025-01-10T12:40:39.9191310Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9191409Z                 # count up differences
2025-01-10T12:40:39.9191583Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9191667Z                     diff += 1
2025-01-10T12:40:39.9191739Z     
2025-01-10T12:40:39.9191832Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9191977Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9192158Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9192274Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9192349Z E           
2025-01-10T12:40:39.9192464Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9192723Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9192982Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9193066Z 
2025-01-10T12:40:39.9193376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9193380Z 
2025-01-10T12:40:39.9193549Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9193553Z 
2025-01-10T12:40:39.9193780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026330>
2025-01-10T12:40:39.9193953Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9194042Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9194045Z 
2025-01-10T12:40:39.9194182Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9194303Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9194394Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9194474Z         try:
2025-01-10T12:40:39.9194620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9194704Z         except KeyError:
2025-01-10T12:40:39.9194845Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9194917Z     
2025-01-10T12:40:39.9195010Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9195105Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9195201Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9195332Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9195427Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9195517Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9195633Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9195637Z 
2025-01-10T12:40:39.9195762Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9195880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9196035Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9196291Z     ???
2025-01-10T12:40:39.9196420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9196425Z 
2025-01-10T12:40:39.9196497Z >   ???
2025-01-10T12:40:39.9196630Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9196705Z E   
2025-01-10T12:40:39.9196836Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9196949Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9197152Z E          ...
2025-01-10T12:40:39.9197245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9197378Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9197496Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9197570Z E          ...
2025-01-10T12:40:39.9197664Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9197795Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9197904Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9197908Z 
2025-01-10T12:40:39.9197997Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9198268Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-10T12:40:39.9198272Z 
2025-01-10T12:40:39.9198400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9198538Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9198635Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9198805Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9198936Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9199165Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9199254Z err_msg = None
2025-01-10T12:40:39.9199259Z 
2025-01-10T12:40:39.9199375Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9199458Z         if err_msg is None:
2025-01-10T12:40:39.9199562Z             if left.shape != right.shape:
2025-01-10T12:40:39.9199647Z                 raise_assert_detail(
2025-01-10T12:40:39.9199799Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9199873Z                 )
2025-01-10T12:40:39.9199958Z     
2025-01-10T12:40:39.9200106Z             diff = 0
2025-01-10T12:40:39.9200309Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9200465Z                 # count up differences
2025-01-10T12:40:39.9200753Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9200891Z                     diff += 1
2025-01-10T12:40:39.9201019Z     
2025-01-10T12:40:39.9201182Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9201333Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9201510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9201625Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9201704Z E           
2025-01-10T12:40:39.9201817Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9202081Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9202341Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9202351Z 
2025-01-10T12:40:39.9202655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9202659Z 
2025-01-10T12:40:39.9202831Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9202835Z 
2025-01-10T12:40:39.9203059Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70263f0>
2025-01-10T12:40:39.9203364Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>, attr = 'f_lu'
2025-01-10T12:40:39.9203369Z 
2025-01-10T12:40:39.9203513Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9203630Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9203720Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9203796Z         try:
2025-01-10T12:40:39.9203936Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9204019Z         except KeyError:
2025-01-10T12:40:39.9204156Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9204227Z     
2025-01-10T12:40:39.9204320Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9204412Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9204503Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9204636Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9204727Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9204820Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9204930Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9204935Z 
2025-01-10T12:40:39.9205064Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9205175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9205427Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9205500Z     ???
2025-01-10T12:40:39.9205612Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9205616Z 
2025-01-10T12:40:39.9205688Z >   ???
2025-01-10T12:40:39.9205820Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9205891Z E   
2025-01-10T12:40:39.9206025Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9206256Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9206337Z E          ...
2025-01-10T12:40:39.9206432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9206560Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9206675Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9206750Z E          ...
2025-01-10T12:40:39.9206842Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9206972Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9207081Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9207084Z 
2025-01-10T12:40:39.9207174Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9207497Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-10T12:40:39.9207501Z 
2025-01-10T12:40:39.9207729Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70269f0>
2025-01-10T12:40:39.9207899Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9207996Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9208000Z 
2025-01-10T12:40:39.9208134Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9208251Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9208336Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9208417Z         try:
2025-01-10T12:40:39.9208554Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9208640Z         except KeyError:
2025-01-10T12:40:39.9208772Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9208849Z     
2025-01-10T12:40:39.9208939Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9209032Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9209128Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9209259Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9209471Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9209564Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9209677Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9209751Z             else:
2025-01-10T12:40:39.9209852Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9209958Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9209967Z 
2025-01-10T12:40:39.9210095Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9210205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9210360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9210437Z     ???
2025-01-10T12:40:39.9210546Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9210550Z 
2025-01-10T12:40:39.9210627Z >   ???
2025-01-10T12:40:39.9210808Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9210888Z E   
2025-01-10T12:40:39.9211055Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T12:40:39.9211420Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9216179Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T12:40:39.9221408Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T12:40:39.9221751Z E   At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T12:40:39.9221766Z 
2025-01-10T12:40:39.9221921Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9222378Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-10T12:40:39.9222498Z 
2025-01-10T12:40:39.9222633Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9222771Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9222872Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9223010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9223141Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9223238Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9223325Z err_msg = None
2025-01-10T12:40:39.9223329Z 
2025-01-10T12:40:39.9223440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9223528Z         if err_msg is None:
2025-01-10T12:40:39.9223633Z             if left.shape != right.shape:
2025-01-10T12:40:39.9223726Z                 raise_assert_detail(
2025-01-10T12:40:39.9223874Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9223953Z                 )
2025-01-10T12:40:39.9224025Z     
2025-01-10T12:40:39.9224130Z             diff = 0
2025-01-10T12:40:39.9224246Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9224341Z                 # count up differences
2025-01-10T12:40:39.9224513Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9224600Z                     diff += 1
2025-01-10T12:40:39.9224672Z     
2025-01-10T12:40:39.9224761Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9224905Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9225072Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9225195Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9225268Z E           
2025-01-10T12:40:39.9225386Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9225644Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9225990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9225996Z 
2025-01-10T12:40:39.9226425Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9226435Z 
2025-01-10T12:40:39.9226608Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9226612Z 
2025-01-10T12:40:39.9226842Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026ab0>
2025-01-10T12:40:39.9227011Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9227107Z attr = 'previous_beta_sobolev'
2025-01-10T12:40:39.9227111Z 
2025-01-10T12:40:39.9227251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9227377Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9227469Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9227543Z         try:
2025-01-10T12:40:39.9227689Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9227772Z         except KeyError:
2025-01-10T12:40:39.9227911Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9228100Z     
2025-01-10T12:40:39.9228194Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9228288Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9228385Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9228522Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9228615Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9228704Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9228822Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9228897Z             else:
2025-01-10T12:40:39.9229004Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9229120Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9229124Z 
2025-01-10T12:40:39.9229249Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9229373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9229517Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9229602Z     ???
2025-01-10T12:40:39.9229711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9229715Z 
2025-01-10T12:40:39.9229794Z >   ???
2025-01-10T12:40:39.9229922Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9229999Z E   
2025-01-10T12:40:39.9230128Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9230245Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9230329Z E          ...
2025-01-10T12:40:39.9230422Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9230557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9230670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9230747Z E          ...
2025-01-10T12:40:39.9230834Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9230966Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9231079Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9231083Z 
2025-01-10T12:40:39.9231179Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9231457Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-10T12:40:39.9231461Z 
2025-01-10T12:40:39.9231596Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9231727Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9231941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9232082Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9232203Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9232304Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9232386Z err_msg = None
2025-01-10T12:40:39.9232390Z 
2025-01-10T12:40:39.9232504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9232587Z         if err_msg is None:
2025-01-10T12:40:39.9232690Z             if left.shape != right.shape:
2025-01-10T12:40:39.9232775Z                 raise_assert_detail(
2025-01-10T12:40:39.9232926Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9233004Z                 )
2025-01-10T12:40:39.9233076Z     
2025-01-10T12:40:39.9233156Z             diff = 0
2025-01-10T12:40:39.9233273Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9233365Z                 # count up differences
2025-01-10T12:40:39.9233536Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9233620Z                     diff += 1
2025-01-10T12:40:39.9233691Z     
2025-01-10T12:40:39.9233784Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9234024Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9234199Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9234311Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9234391Z E           
2025-01-10T12:40:39.9234507Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9234765Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9235026Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9235035Z 
2025-01-10T12:40:39.9235341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9235351Z 
2025-01-10T12:40:39.9235516Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9235520Z 
2025-01-10T12:40:39.9235747Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026b70>
2025-01-10T12:40:39.9235916Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9235999Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9236003Z 
2025-01-10T12:40:39.9236336Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9236462Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9236548Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9236630Z         try:
2025-01-10T12:40:39.9236774Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9236864Z         except KeyError:
2025-01-10T12:40:39.9237008Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9237080Z     
2025-01-10T12:40:39.9237173Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9237267Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9237361Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9237491Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9237704Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9237798Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9237918Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9237991Z             else:
2025-01-10T12:40:39.9238093Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9238201Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9238218Z 
2025-01-10T12:40:39.9238446Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9238649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9238894Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9239020Z     ???
2025-01-10T12:40:39.9239203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9239211Z 
2025-01-10T12:40:39.9239341Z >   ???
2025-01-10T12:40:39.9239475Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9239556Z E   
2025-01-10T12:40:39.9239689Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9239812Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9239886Z E          ...
2025-01-10T12:40:39.9239979Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9240109Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9240355Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9240435Z E          ...
2025-01-10T12:40:39.9240521Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9240652Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9240755Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9240759Z 
2025-01-10T12:40:39.9240853Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9241126Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-10T12:40:39.9241134Z 
2025-01-10T12:40:39.9241278Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9241403Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9241505Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9241646Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9241770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9241867Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9241944Z err_msg = None
2025-01-10T12:40:39.9241948Z 
2025-01-10T12:40:39.9242062Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9242144Z         if err_msg is None:
2025-01-10T12:40:39.9242242Z             if left.shape != right.shape:
2025-01-10T12:40:39.9242331Z                 raise_assert_detail(
2025-01-10T12:40:39.9242486Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9242560Z                 )
2025-01-10T12:40:39.9242635Z     
2025-01-10T12:40:39.9242709Z             diff = 0
2025-01-10T12:40:39.9242827Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9242925Z                 # count up differences
2025-01-10T12:40:39.9243103Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9243189Z                     diff += 1
2025-01-10T12:40:39.9243260Z     
2025-01-10T12:40:39.9243352Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9243497Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9243675Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9243789Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9243867Z E           
2025-01-10T12:40:39.9244065Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9244328Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9244589Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9244593Z 
2025-01-10T12:40:39.9244901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9244905Z 
2025-01-10T12:40:39.9245082Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9245087Z 
2025-01-10T12:40:39.9245308Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026c30>
2025-01-10T12:40:39.9245479Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9245563Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9245642Z 
2025-01-10T12:40:39.9245782Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9245901Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9245986Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9246200Z         try:
2025-01-10T12:40:39.9246342Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9246429Z         except KeyError:
2025-01-10T12:40:39.9246568Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9246643Z     
2025-01-10T12:40:39.9246730Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9246835Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9246923Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9247059Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9247149Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9247240Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9247354Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9247434Z             else:
2025-01-10T12:40:39.9247532Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9247642Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9247647Z 
2025-01-10T12:40:39.9247776Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9247890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9248040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9248116Z     ???
2025-01-10T12:40:39.9248234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9248237Z 
2025-01-10T12:40:39.9248312Z >   ???
2025-01-10T12:40:39.9248439Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9248516Z E   
2025-01-10T12:40:39.9248645Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9248760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9248838Z E          ...
2025-01-10T12:40:39.9248932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9249061Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9249178Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9249250Z E          ...
2025-01-10T12:40:39.9249346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9249471Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9249728Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9249733Z 
2025-01-10T12:40:39.9249832Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9250101Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-10T12:40:39.9250105Z 
2025-01-10T12:40:39.9250237Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9250370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9250469Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9250603Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9250735Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9250828Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9250914Z err_msg = None
2025-01-10T12:40:39.9250917Z 
2025-01-10T12:40:39.9251036Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9251118Z         if err_msg is None:
2025-01-10T12:40:39.9251217Z             if left.shape != right.shape:
2025-01-10T12:40:39.9251301Z                 raise_assert_detail(
2025-01-10T12:40:39.9251454Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9251644Z                 )
2025-01-10T12:40:39.9251720Z     
2025-01-10T12:40:39.9251795Z             diff = 0
2025-01-10T12:40:39.9251917Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9252005Z                 # count up differences
2025-01-10T12:40:39.9252184Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9252263Z                     diff += 1
2025-01-10T12:40:39.9252339Z     
2025-01-10T12:40:39.9252429Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9252573Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9252746Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9252858Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9252936Z E           
2025-01-10T12:40:39.9253046Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9253304Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9253573Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9253583Z 
2025-01-10T12:40:39.9253887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9253892Z 
2025-01-10T12:40:39.9254062Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9254067Z 
2025-01-10T12:40:39.9254289Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026db0>
2025-01-10T12:40:39.9254464Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9254544Z attr = 'j_blues'
2025-01-10T12:40:39.9254549Z 
2025-01-10T12:40:39.9254690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9254810Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9254895Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9254972Z         try:
2025-01-10T12:40:39.9255111Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9255300Z         except KeyError:
2025-01-10T12:40:39.9255441Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9255517Z     
2025-01-10T12:40:39.9255604Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9255702Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9255790Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9255930Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9256017Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9256206Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9256319Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9256402Z             else:
2025-01-10T12:40:39.9256501Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9256613Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9256617Z 
2025-01-10T12:40:39.9256749Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9256868Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9257073Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9257194Z     ???
2025-01-10T12:40:39.9257385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9257391Z 
2025-01-10T12:40:39.9257672Z >   ???
2025-01-10T12:40:39.9257894Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9258020Z E   
2025-01-10T12:40:39.9258194Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9258307Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9258386Z E          ...
2025-01-10T12:40:39.9258479Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9258608Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9258726Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9258809Z E          ...
2025-01-10T12:40:39.9258901Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9259024Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9259135Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9259140Z 
2025-01-10T12:40:39.9259232Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9259495Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-10T12:40:39.9259500Z 
2025-01-10T12:40:39.9259631Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9259763Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9259873Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9260004Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9260135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9260230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9260311Z err_msg = None
2025-01-10T12:40:39.9260315Z 
2025-01-10T12:40:39.9260425Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9260514Z         if err_msg is None:
2025-01-10T12:40:39.9260611Z             if left.shape != right.shape:
2025-01-10T12:40:39.9260705Z                 raise_assert_detail(
2025-01-10T12:40:39.9260852Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9260926Z                 )
2025-01-10T12:40:39.9261002Z     
2025-01-10T12:40:39.9261077Z             diff = 0
2025-01-10T12:40:39.9261191Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9261281Z                 # count up differences
2025-01-10T12:40:39.9261455Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9261670Z                     diff += 1
2025-01-10T12:40:39.9261753Z     
2025-01-10T12:40:39.9261844Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9261985Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9262153Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9262275Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9262348Z E           
2025-01-10T12:40:39.9262465Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9262722Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9262983Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9262987Z 
2025-01-10T12:40:39.9263297Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9263379Z 
2025-01-10T12:40:39.9263551Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9263556Z 
2025-01-10T12:40:39.9263779Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027b30>
2025-01-10T12:40:39.9263956Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9264032Z attr = 'lines'
2025-01-10T12:40:39.9264036Z 
2025-01-10T12:40:39.9264178Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9264299Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9264390Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9264463Z         try:
2025-01-10T12:40:39.9264607Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9264689Z         except KeyError:
2025-01-10T12:40:39.9264831Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9264912Z     
2025-01-10T12:40:39.9265000Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9265100Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9265189Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9265329Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9265415Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9265510Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9265619Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9265698Z             else:
2025-01-10T12:40:39.9265797Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9265907Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9265912Z 
2025-01-10T12:40:39.9266038Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9266278Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9266428Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9266506Z     ???
2025-01-10T12:40:39.9266618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9266622Z 
2025-01-10T12:40:39.9266693Z >   ???
2025-01-10T12:40:39.9266823Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9266893Z E   
2025-01-10T12:40:39.9267024Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9267133Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9267211Z E          ...
2025-01-10T12:40:39.9267415Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9267557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9267668Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9267746Z E          ...
2025-01-10T12:40:39.9267833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9267962Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9268073Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9268077Z 
2025-01-10T12:40:39.9268168Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9268468Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-10T12:40:39.9268472Z 
2025-01-10T12:40:39.9268693Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027bf0>
2025-01-10T12:40:39.9268865Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9268960Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9268964Z 
2025-01-10T12:40:39.9269105Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9269225Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9269310Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9269388Z         try:
2025-01-10T12:40:39.9269526Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9269734Z         except KeyError:
2025-01-10T12:40:39.9269870Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9269946Z     
2025-01-10T12:40:39.9270033Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9270133Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9270221Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9270356Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9270443Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9270542Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9270650Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9270660Z 
2025-01-10T12:40:39.9270783Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9270899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9270902Z 
2025-01-10T12:40:39.9271040Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9271131Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9271240Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9271328Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9271469Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9271558Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9271662Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9271749Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9271830Z err_msg = None
2025-01-10T12:40:39.9271834Z 
2025-01-10T12:40:39.9271944Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9272030Z         if err_msg is None:
2025-01-10T12:40:39.9272125Z             if left.shape != right.shape:
2025-01-10T12:40:39.9272215Z                 raise_assert_detail(
2025-01-10T12:40:39.9272360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9272439Z                 )
2025-01-10T12:40:39.9272514Z     
2025-01-10T12:40:39.9272594Z             diff = 0
2025-01-10T12:40:39.9272705Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9272800Z                 # count up differences
2025-01-10T12:40:39.9272969Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9273054Z                     diff += 1
2025-01-10T12:40:39.9273126Z     
2025-01-10T12:40:39.9273306Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9273451Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9273620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9273729Z E           AssertionError: Series are different
2025-01-10T12:40:39.9273806Z E           
2025-01-10T12:40:39.9273912Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9274273Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9274602Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9274931Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9275014Z 
2025-01-10T12:40:39.9275325Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9275618Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-10T12:40:39.9275625Z 
2025-01-10T12:40:39.9275850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027cb0>
2025-01-10T12:40:39.9276016Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9276303Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9276311Z 
2025-01-10T12:40:39.9276461Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9276589Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9276674Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9276752Z         try:
2025-01-10T12:40:39.9276891Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9276979Z         except KeyError:
2025-01-10T12:40:39.9277116Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9277193Z     
2025-01-10T12:40:39.9277280Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9277380Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9277478Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9277612Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9277703Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9277792Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9277907Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9277916Z 
2025-01-10T12:40:39.9278040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9278155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9278159Z 
2025-01-10T12:40:39.9278292Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9278383Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9278497Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9278577Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9278859Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9278948Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9279058Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9279138Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9279220Z err_msg = None
2025-01-10T12:40:39.9279228Z 
2025-01-10T12:40:39.9279337Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9279427Z         if err_msg is None:
2025-01-10T12:40:39.9279520Z             if left.shape != right.shape:
2025-01-10T12:40:39.9279613Z                 raise_assert_detail(
2025-01-10T12:40:39.9279753Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9279832Z                 )
2025-01-10T12:40:39.9279910Z     
2025-01-10T12:40:39.9279985Z             diff = 0
2025-01-10T12:40:39.9280101Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9280193Z                 # count up differences
2025-01-10T12:40:39.9280366Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9280445Z                     diff += 1
2025-01-10T12:40:39.9280521Z     
2025-01-10T12:40:39.9280608Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9280746Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9281028Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9281136Z E           AssertionError: Series are different
2025-01-10T12:40:39.9281210Z E           
2025-01-10T12:40:39.9281316Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9281688Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9282362Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9283024Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9283031Z 
2025-01-10T12:40:39.9283347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9283592Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-10T12:40:39.9283596Z 
2025-01-10T12:40:39.9283735Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9283863Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9283967Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9284103Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9284226Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9284418Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9284500Z err_msg = None
2025-01-10T12:40:39.9284504Z 
2025-01-10T12:40:39.9284615Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9284699Z         if err_msg is None:
2025-01-10T12:40:39.9284797Z             if left.shape != right.shape:
2025-01-10T12:40:39.9284882Z                 raise_assert_detail(
2025-01-10T12:40:39.9285036Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9285110Z                 )
2025-01-10T12:40:39.9285189Z     
2025-01-10T12:40:39.9285264Z             diff = 0
2025-01-10T12:40:39.9285382Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9285473Z                 # count up differences
2025-01-10T12:40:39.9285638Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9285722Z                     diff += 1
2025-01-10T12:40:39.9285793Z     
2025-01-10T12:40:39.9285889Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9286022Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9286304Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9286419Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9286496Z E           
2025-01-10T12:40:39.9286730Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9286988Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9287256Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9287260Z 
2025-01-10T12:40:39.9287557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9287561Z 
2025-01-10T12:40:39.9287732Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9287741Z 
2025-01-10T12:40:39.9287963Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027ef0>
2025-01-10T12:40:39.9288168Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>, attr = 'nu'
2025-01-10T12:40:39.9288172Z 
2025-01-10T12:40:39.9288313Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9288428Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9288519Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9288592Z         try:
2025-01-10T12:40:39.9288739Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9288822Z         except KeyError:
2025-01-10T12:40:39.9288964Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9289045Z     
2025-01-10T12:40:39.9289152Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9289244Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9289340Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9289470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9289563Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9289657Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9289768Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9289772Z 
2025-01-10T12:40:39.9289904Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9290023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9290291Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9290368Z     ???
2025-01-10T12:40:39.9290482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9290487Z 
2025-01-10T12:40:39.9290559Z >   ???
2025-01-10T12:40:39.9290694Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9290766Z E   
2025-01-10T12:40:39.9290903Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9291021Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9291096Z E          ...
2025-01-10T12:40:39.9291190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9291320Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9291441Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9291515Z E          ...
2025-01-10T12:40:39.9291608Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9291735Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9291844Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9291848Z 
2025-01-10T12:40:39.9291938Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9292210Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-10T12:40:39.9292295Z 
2025-01-10T12:40:39.9292432Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9292558Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9292660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9292790Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9292917Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9293017Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9293099Z err_msg = None
2025-01-10T12:40:39.9293103Z 
2025-01-10T12:40:39.9293213Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9293301Z         if err_msg is None:
2025-01-10T12:40:39.9293395Z             if left.shape != right.shape:
2025-01-10T12:40:39.9293486Z                 raise_assert_detail(
2025-01-10T12:40:39.9293638Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9293713Z                 )
2025-01-10T12:40:39.9293790Z     
2025-01-10T12:40:39.9293865Z             diff = 0
2025-01-10T12:40:39.9293981Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9294068Z                 # count up differences
2025-01-10T12:40:39.9294241Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9294324Z                     diff += 1
2025-01-10T12:40:39.9294402Z     
2025-01-10T12:40:39.9294492Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9294638Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9294807Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9294926Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9295008Z E           
2025-01-10T12:40:39.9295124Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9295386Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9295728Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9295733Z 
2025-01-10T12:40:39.9296051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9296148Z 
2025-01-10T12:40:39.9296332Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9296341Z 
2025-01-10T12:40:39.9296568Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027fb0>
2025-01-10T12:40:39.9296743Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9296829Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9296833Z 
2025-01-10T12:40:39.9296979Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9297098Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9297193Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9297273Z         try:
2025-01-10T12:40:39.9297423Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9297513Z         except KeyError:
2025-01-10T12:40:39.9297655Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9297737Z     
2025-01-10T12:40:39.9297829Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9298072Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9298165Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9298302Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9298390Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9298489Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9298601Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9298606Z 
2025-01-10T12:40:39.9298769Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9298895Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9299052Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9299132Z     ???
2025-01-10T12:40:39.9299244Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9299249Z 
2025-01-10T12:40:39.9299326Z >   ???
2025-01-10T12:40:39.9299458Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9299540Z E   
2025-01-10T12:40:39.9299668Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9299786Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9299863Z E          ...
2025-01-10T12:40:39.9299960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9300092Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9300210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9300285Z E          ...
2025-01-10T12:40:39.9300382Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9300515Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9300627Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9300631Z 
2025-01-10T12:40:39.9308021Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9308328Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-10T12:40:39.9308344Z 
2025-01-10T12:40:39.9308536Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9308762Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9308938Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9309169Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9309393Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9309754Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9309847Z err_msg = None
2025-01-10T12:40:39.9309854Z 
2025-01-10T12:40:39.9309988Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9310075Z         if err_msg is None:
2025-01-10T12:40:39.9310180Z             if left.shape != right.shape:
2025-01-10T12:40:39.9310274Z                 raise_assert_detail(
2025-01-10T12:40:39.9310435Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9310510Z                 )
2025-01-10T12:40:39.9310587Z     
2025-01-10T12:40:39.9310663Z             diff = 0
2025-01-10T12:40:39.9310785Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9310879Z                 # count up differences
2025-01-10T12:40:39.9311068Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9311149Z                     diff += 1
2025-01-10T12:40:39.9311225Z     
2025-01-10T12:40:39.9311328Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9311471Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9311651Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9311769Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9311966Z E           
2025-01-10T12:40:39.9312080Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9312344Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9312605Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9312617Z 
2025-01-10T12:40:39.9312939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9312950Z 
2025-01-10T12:40:39.9313138Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9313142Z 
2025-01-10T12:40:39.9313369Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e500b0>
2025-01-10T12:40:39.9313583Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>, attr = 'f_lu'
2025-01-10T12:40:39.9313588Z 
2025-01-10T12:40:39.9313730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9313857Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9313954Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9314032Z         try:
2025-01-10T12:40:39.9314181Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9314265Z         except KeyError:
2025-01-10T12:40:39.9314413Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9314486Z     
2025-01-10T12:40:39.9314580Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9314681Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9314779Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9314914Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9315008Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9315098Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9315215Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9315219Z 
2025-01-10T12:40:39.9315353Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9315565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9315726Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9315801Z     ???
2025-01-10T12:40:39.9315922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9315926Z 
2025-01-10T12:40:39.9315999Z >   ???
2025-01-10T12:40:39.9316368Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9316452Z E   
2025-01-10T12:40:39.9316593Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9316704Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9316785Z E          ...
2025-01-10T12:40:39.9316873Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9317012Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9317132Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9317207Z E          ...
2025-01-10T12:40:39.9317306Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9317432Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9317547Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9317551Z 
2025-01-10T12:40:39.9317643Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9317960Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-10T12:40:39.9318091Z 
2025-01-10T12:40:39.9318320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e506b0>
2025-01-10T12:40:39.9318496Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9318595Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9318599Z 
2025-01-10T12:40:39.9318741Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9318865Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9318953Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9319039Z         try:
2025-01-10T12:40:39.9319187Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9319277Z         except KeyError:
2025-01-10T12:40:39.9319416Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9319495Z     
2025-01-10T12:40:39.9319622Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9319817Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9319983Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9320227Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9320385Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9320542Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9320740Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9320878Z             else:
2025-01-10T12:40:39.9320989Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9321107Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9321122Z 
2025-01-10T12:40:39.9321261Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9321380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9321535Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9321609Z     ???
2025-01-10T12:40:39.9321735Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9321739Z 
2025-01-10T12:40:39.9321816Z >   ???
2025-01-10T12:40:39.9322002Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9322080Z E   
2025-01-10T12:40:39.9322248Z E   DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:39.9322747Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9327741Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:39.9332723Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:39.9333041Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:39.9333046Z 
2025-01-10T12:40:39.9333148Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9333440Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-10T12:40:39.9333444Z 
2025-01-10T12:40:39.9333587Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9333739Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9333843Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9333988Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9334116Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9334219Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9334300Z err_msg = None
2025-01-10T12:40:39.9334311Z 
2025-01-10T12:40:39.9334436Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9334521Z         if err_msg is None:
2025-01-10T12:40:39.9334625Z             if left.shape != right.shape:
2025-01-10T12:40:39.9334716Z                 raise_assert_detail(
2025-01-10T12:40:39.9334871Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9335056Z                 )
2025-01-10T12:40:39.9335132Z     
2025-01-10T12:40:39.9335215Z             diff = 0
2025-01-10T12:40:39.9335334Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9335432Z                 # count up differences
2025-01-10T12:40:39.9335606Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9335697Z                     diff += 1
2025-01-10T12:40:39.9335771Z     
2025-01-10T12:40:39.9335869Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9336013Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9336293Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9336412Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9336498Z E           
2025-01-10T12:40:39.9336612Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9336883Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9337149Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9337153Z 
2025-01-10T12:40:39.9337466Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9337470Z 
2025-01-10T12:40:39.9337649Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9337653Z 
2025-01-10T12:40:39.9337890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e50770>
2025-01-10T12:40:39.9338057Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9338154Z attr = 'previous_beta_sobolev'
2025-01-10T12:40:39.9338158Z 
2025-01-10T12:40:39.9338302Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9338427Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9338511Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9338591Z         try:
2025-01-10T12:40:39.9338854Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9338956Z         except KeyError:
2025-01-10T12:40:39.9339198Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9339338Z     
2025-01-10T12:40:39.9339496Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9339659Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9339819Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9340065Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9340170Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9340269Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9340389Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9340465Z             else:
2025-01-10T12:40:39.9340564Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9340674Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9340678Z 
2025-01-10T12:40:39.9340822Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9340941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9341096Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9341177Z     ???
2025-01-10T12:40:39.9341289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9341423Z 
2025-01-10T12:40:39.9341503Z >   ???
2025-01-10T12:40:39.9341635Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9341718Z E   
2025-01-10T12:40:39.9341849Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9341969Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9342045Z E          ...
2025-01-10T12:40:39.9342141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9342274Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9342400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9342476Z E          ...
2025-01-10T12:40:39.9342575Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9342709Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9342815Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9342819Z 
2025-01-10T12:40:39.9342915Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9343190Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-10T12:40:39.9343195Z 
2025-01-10T12:40:39.9343333Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9343462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9343566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9343700Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9343833Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9343934Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9344015Z err_msg = None
2025-01-10T12:40:39.9344018Z 
2025-01-10T12:40:39.9344136Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9344221Z         if err_msg is None:
2025-01-10T12:40:39.9344323Z             if left.shape != right.shape:
2025-01-10T12:40:39.9344414Z                 raise_assert_detail(
2025-01-10T12:40:39.9344566Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9344640Z                 )
2025-01-10T12:40:39.9344718Z     
2025-01-10T12:40:39.9344796Z             diff = 0
2025-01-10T12:40:39.9344915Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9345005Z                 # count up differences
2025-01-10T12:40:39.9345270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9345358Z                     diff += 1
2025-01-10T12:40:39.9345431Z     
2025-01-10T12:40:39.9345527Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9345663Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9345833Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9345947Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9346021Z E           
2025-01-10T12:40:39.9346240Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9346501Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9346766Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9346771Z 
2025-01-10T12:40:39.9347077Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9347197Z 
2025-01-10T12:40:39.9347376Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9347380Z 
2025-01-10T12:40:39.9347602Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e50830>
2025-01-10T12:40:39.9347773Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9347860Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9347864Z 
2025-01-10T12:40:39.9348000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9348124Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9348212Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9348291Z         try:
2025-01-10T12:40:39.9348433Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9348523Z         except KeyError:
2025-01-10T12:40:39.9348663Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9348749Z     
2025-01-10T12:40:39.9348838Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9348939Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9349030Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9349169Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9349257Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9349357Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9349478Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9349559Z             else:
2025-01-10T12:40:39.9349663Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9349771Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9349775Z 
2025-01-10T12:40:39.9349908Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9350022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9350183Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9350258Z     ???
2025-01-10T12:40:39.9350375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9350379Z 
2025-01-10T12:40:39.9350452Z >   ???
2025-01-10T12:40:39.9350588Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9350668Z E   
2025-01-10T12:40:39.9350799Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9350919Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9351118Z E          ...
2025-01-10T12:40:39.9351226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9351360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9351486Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9351563Z E          ...
2025-01-10T12:40:39.9351662Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9351796Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9351911Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9351915Z 
2025-01-10T12:40:39.9352009Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9352285Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-10T12:40:39.9352289Z 
2025-01-10T12:40:39.9352427Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9352567Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9352673Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9352810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9352940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9353122Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9353213Z err_msg = None
2025-01-10T12:40:39.9353217Z 
2025-01-10T12:40:39.9353336Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9353422Z         if err_msg is None:
2025-01-10T12:40:39.9353527Z             if left.shape != right.shape:
2025-01-10T12:40:39.9353619Z                 raise_assert_detail(
2025-01-10T12:40:39.9353772Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9353850Z                 )
2025-01-10T12:40:39.9353928Z     
2025-01-10T12:40:39.9354008Z             diff = 0
2025-01-10T12:40:39.9354129Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9354221Z                 # count up differences
2025-01-10T12:40:39.9354401Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9354483Z                     diff += 1
2025-01-10T12:40:39.9354567Z     
2025-01-10T12:40:39.9354659Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9354801Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9354980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9355100Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9355181Z E           
2025-01-10T12:40:39.9355295Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9355564Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9355822Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9355835Z 
2025-01-10T12:40:39.9356355Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9356362Z 
2025-01-10T12:40:39.9356550Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9356553Z 
2025-01-10T12:40:39.9356782Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e508f0>
2025-01-10T12:40:39.9357108Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9357195Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9357199Z 
2025-01-10T12:40:39.9357346Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9357466Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9357561Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9357657Z         try:
2025-01-10T12:40:39.9357904Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9358052Z         except KeyError:
2025-01-10T12:40:39.9358286Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9358413Z     
2025-01-10T12:40:39.9358563Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9358737Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9358837Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9358976Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9359071Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9359167Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9359280Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9359360Z             else:
2025-01-10T12:40:39.9359456Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9359570Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9359699Z 
2025-01-10T12:40:39.9359837Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9359953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9360105Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9360180Z     ???
2025-01-10T12:40:39.9360296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9360300Z 
2025-01-10T12:40:39.9360373Z >   ???
2025-01-10T12:40:39.9360512Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9360584Z E   
2025-01-10T12:40:39.9360719Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9360831Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9360912Z E          ...
2025-01-10T12:40:39.9361003Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9361142Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9361265Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9361340Z E          ...
2025-01-10T12:40:39.9361434Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9361559Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9361671Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9361675Z 
2025-01-10T12:40:39.9361766Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9362035Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-10T12:40:39.9362040Z 
2025-01-10T12:40:39.9362171Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9362304Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9362410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9362554Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9362684Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9362782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9362865Z err_msg = None
2025-01-10T12:40:39.9362869Z 
2025-01-10T12:40:39.9362981Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9363072Z         if err_msg is None:
2025-01-10T12:40:39.9363170Z             if left.shape != right.shape:
2025-01-10T12:40:39.9363349Z                 raise_assert_detail(
2025-01-10T12:40:39.9363497Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9363577Z                 )
2025-01-10T12:40:39.9363654Z     
2025-01-10T12:40:39.9363730Z             diff = 0
2025-01-10T12:40:39.9363849Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9363944Z                 # count up differences
2025-01-10T12:40:39.9364114Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9364194Z                     diff += 1
2025-01-10T12:40:39.9364270Z     
2025-01-10T12:40:39.9364362Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9364504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9364674Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9364792Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9364872Z E           
2025-01-10T12:40:39.9364991Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9365253Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9365594Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9365599Z 
2025-01-10T12:40:39.9365908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9365912Z 
2025-01-10T12:40:39.9366198Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9366209Z 
2025-01-10T12:40:39.9366437Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e50a70>
2025-01-10T12:40:39.9366610Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9366689Z attr = 'j_blues'
2025-01-10T12:40:39.9366698Z 
2025-01-10T12:40:39.9366839Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9366955Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9367047Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9367122Z         try:
2025-01-10T12:40:39.9367267Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9367351Z         except KeyError:
2025-01-10T12:40:39.9367493Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9367566Z     
2025-01-10T12:40:39.9367665Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9367765Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9367856Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9367992Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9368081Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9368178Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9368293Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9368373Z             else:
2025-01-10T12:40:39.9368468Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9368582Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9368587Z 
2025-01-10T12:40:39.9368715Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9368832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9368978Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9369059Z     ???
2025-01-10T12:40:39.9369292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9369297Z 
2025-01-10T12:40:39.9369371Z >   ???
2025-01-10T12:40:39.9369512Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9369585Z E   
2025-01-10T12:40:39.9369718Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9369837Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9369924Z E          ...
2025-01-10T12:40:39.9370014Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9370150Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9370263Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9370343Z E          ...
2025-01-10T12:40:39.9370432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9370563Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9370680Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9370685Z 
2025-01-10T12:40:39.9370776Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9370979Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-10T12:40:39.9370984Z 
2025-01-10T12:40:39.9371116Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9371362Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9371461Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9371602Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9371726Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9371828Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9371913Z err_msg = None
2025-01-10T12:40:39.9371917Z 
2025-01-10T12:40:39.9372032Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9372122Z         if err_msg is None:
2025-01-10T12:40:39.9372216Z             if left.shape != right.shape:
2025-01-10T12:40:39.9372305Z                 raise_assert_detail(
2025-01-10T12:40:39.9372448Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9372532Z                 )
2025-01-10T12:40:39.9372605Z     
2025-01-10T12:40:39.9372686Z             diff = 0
2025-01-10T12:40:39.9372798Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9372895Z                 # count up differences
2025-01-10T12:40:39.9373068Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9373147Z                     diff += 1
2025-01-10T12:40:39.9373220Z     
2025-01-10T12:40:39.9373311Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9373461Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9373632Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9373750Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9373824Z E           
2025-01-10T12:40:39.9373943Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9374196Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9374545Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9374550Z 
2025-01-10T12:40:39.9374861Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9374865Z 
2025-01-10T12:40:39.9375034Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9375038Z 
2025-01-10T12:40:39.9375274Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e517f0>
2025-01-10T12:40:39.9375439Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9375521Z attr = 'lines'
2025-01-10T12:40:39.9375525Z 
2025-01-10T12:40:39.9375667Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9375785Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9375877Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9375953Z         try:
2025-01-10T12:40:39.9376299Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9376451Z         except KeyError:
2025-01-10T12:40:39.9376693Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9376815Z     
2025-01-10T12:40:39.9376969Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9377134Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9377261Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9377528Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9377624Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9377717Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9377837Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9377918Z             else:
2025-01-10T12:40:39.9378017Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9378132Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9378136Z 
2025-01-10T12:40:39.9378266Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9378391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9378538Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9378619Z     ???
2025-01-10T12:40:39.9378732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9378736Z 
2025-01-10T12:40:39.9378818Z >   ???
2025-01-10T12:40:39.9378946Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9379025Z E   
2025-01-10T12:40:39.9379162Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9379276Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9379356Z E          ...
2025-01-10T12:40:39.9379448Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9379584Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9379699Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9379783Z E          ...
2025-01-10T12:40:39.9379873Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9380005Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9380119Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9380123Z 
2025-01-10T12:40:39.9380218Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9380463Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-10T12:40:39.9380473Z 
2025-01-10T12:40:39.9380700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e518b0>
2025-01-10T12:40:39.9380871Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9380962Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9380966Z 
2025-01-10T12:40:39.9381110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9381229Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9381456Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9381535Z         try:
2025-01-10T12:40:39.9381683Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9381767Z         except KeyError:
2025-01-10T12:40:39.9381909Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9381982Z     
2025-01-10T12:40:39.9382075Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9382183Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9382274Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9382412Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9382500Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9382596Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9382709Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9382713Z 
2025-01-10T12:40:39.9382841Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9382961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9382966Z 
2025-01-10T12:40:39.9383110Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9383198Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9383311Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9383485Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9383631Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9383714Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9383824Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9383903Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9383983Z err_msg = None
2025-01-10T12:40:39.9383987Z 
2025-01-10T12:40:39.9384102Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9384194Z         if err_msg is None:
2025-01-10T12:40:39.9384289Z             if left.shape != right.shape:
2025-01-10T12:40:39.9384381Z                 raise_assert_detail(
2025-01-10T12:40:39.9384527Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9384607Z                 )
2025-01-10T12:40:39.9384679Z     
2025-01-10T12:40:39.9384762Z             diff = 0
2025-01-10T12:40:39.9384885Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9384976Z                 # count up differences
2025-01-10T12:40:39.9385153Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9385234Z                     diff += 1
2025-01-10T12:40:39.9385311Z     
2025-01-10T12:40:39.9385400Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9385541Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9385718Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9385829Z E           AssertionError: Series are different
2025-01-10T12:40:39.9385906Z E           
2025-01-10T12:40:39.9386014Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9386579Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9387032Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9387367Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9387375Z 
2025-01-10T12:40:39.9387695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9387923Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-10T12:40:39.9387928Z 
2025-01-10T12:40:39.9388155Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51970>
2025-01-10T12:40:39.9388324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9388425Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9388429Z 
2025-01-10T12:40:39.9388570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9388689Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9388775Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9388858Z         try:
2025-01-10T12:40:39.9389006Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9389221Z         except KeyError:
2025-01-10T12:40:39.9389366Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9389440Z     
2025-01-10T12:40:39.9389532Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9389627Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9389724Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9389858Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9389951Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9390056Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9390172Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9390176Z 
2025-01-10T12:40:39.9390303Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9390424Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9390428Z 
2025-01-10T12:40:39.9390569Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9390661Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9390777Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9390859Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9391005Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9391089Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9391202Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9391288Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9391374Z err_msg = None
2025-01-10T12:40:39.9391377Z 
2025-01-10T12:40:39.9391490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9391577Z         if err_msg is None:
2025-01-10T12:40:39.9391681Z             if left.shape != right.shape:
2025-01-10T12:40:39.9391770Z                 raise_assert_detail(
2025-01-10T12:40:39.9391924Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9391999Z                 )
2025-01-10T12:40:39.9392081Z     
2025-01-10T12:40:39.9392159Z             diff = 0
2025-01-10T12:40:39.9392277Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9392367Z                 # count up differences
2025-01-10T12:40:39.9392545Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9392626Z                     diff += 1
2025-01-10T12:40:39.9392705Z     
2025-01-10T12:40:39.9392886Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9393032Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9393209Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9393314Z E           AssertionError: Series are different
2025-01-10T12:40:39.9393394Z E           
2025-01-10T12:40:39.9393504Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9393873Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9394242Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9394613Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9394696Z 
2025-01-10T12:40:39.9395069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9395412Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-10T12:40:39.9395426Z 
2025-01-10T12:40:39.9395645Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9395866Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9396040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9396397Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9396525Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9396628Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9396706Z err_msg = None
2025-01-10T12:40:39.9396710Z 
2025-01-10T12:40:39.9396826Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9396909Z         if err_msg is None:
2025-01-10T12:40:39.9397009Z             if left.shape != right.shape:
2025-01-10T12:40:39.9397106Z                 raise_assert_detail(
2025-01-10T12:40:39.9397249Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9397329Z                 )
2025-01-10T12:40:39.9397402Z     
2025-01-10T12:40:39.9397484Z             diff = 0
2025-01-10T12:40:39.9397595Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9397695Z                 # count up differences
2025-01-10T12:40:39.9397862Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9397948Z                     diff += 1
2025-01-10T12:40:39.9398020Z     
2025-01-10T12:40:39.9398115Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9398251Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9398424Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9398673Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9398789Z E           
2025-01-10T12:40:39.9398914Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9399174Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9399438Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9399443Z 
2025-01-10T12:40:39.9399749Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9399763Z 
2025-01-10T12:40:39.9399934Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9399938Z 
2025-01-10T12:40:39.9400170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51bb0>
2025-01-10T12:40:39.9400370Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>, attr = 'nu'
2025-01-10T12:40:39.9400502Z 
2025-01-10T12:40:39.9400650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9400769Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9400860Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9400934Z         try:
2025-01-10T12:40:39.9401081Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9401167Z         except KeyError:
2025-01-10T12:40:39.9401310Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9401392Z     
2025-01-10T12:40:39.9401487Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9401586Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9401683Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9401815Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9401908Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9401999Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9402122Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9402127Z 
2025-01-10T12:40:39.9402254Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9402375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9402522Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9402604Z     ???
2025-01-10T12:40:39.9402720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9402724Z 
2025-01-10T12:40:39.9402797Z >   ???
2025-01-10T12:40:39.9402933Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9403006Z E   
2025-01-10T12:40:39.9403140Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9403252Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9403333Z E          ...
2025-01-10T12:40:39.9403423Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9403564Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9403676Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9403755Z E          ...
2025-01-10T12:40:39.9403842Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9403972Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9404083Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9404087Z 
2025-01-10T12:40:39.9404180Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9404480Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-10T12:40:39.9404485Z 
2025-01-10T12:40:39.9404618Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9404755Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9404853Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9404996Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9405123Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9405226Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9405313Z err_msg = None
2025-01-10T12:40:39.9405317Z 
2025-01-10T12:40:39.9405429Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9405518Z         if err_msg is None:
2025-01-10T12:40:39.9405616Z             if left.shape != right.shape:
2025-01-10T12:40:39.9405715Z                 raise_assert_detail(
2025-01-10T12:40:39.9405861Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9405939Z                 )
2025-01-10T12:40:39.9406013Z     
2025-01-10T12:40:39.9406193Z             diff = 0
2025-01-10T12:40:39.9406307Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9406524Z                 # count up differences
2025-01-10T12:40:39.9406695Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9406782Z                     diff += 1
2025-01-10T12:40:39.9406854Z     
2025-01-10T12:40:39.9406950Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9407091Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9407263Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9407382Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9407462Z E           
2025-01-10T12:40:39.9407582Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9407837Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9408106Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9408111Z 
2025-01-10T12:40:39.9408419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9408426Z 
2025-01-10T12:40:39.9408601Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9408605Z 
2025-01-10T12:40:39.9408838Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51c70>
2025-01-10T12:40:39.9409005Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9409098Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9409102Z 
2025-01-10T12:40:39.9409244Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9409362Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9409455Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9409531Z         try:
2025-01-10T12:40:39.9409679Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9409762Z         except KeyError:
2025-01-10T12:40:39.9409906Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9409978Z     
2025-01-10T12:40:39.9410194Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9410293Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9410388Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9410519Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9410613Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9410706Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9410828Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9410832Z 
2025-01-10T12:40:39.9410964Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9411078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9411229Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9411302Z     ???
2025-01-10T12:40:39.9411420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9411424Z 
2025-01-10T12:40:39.9411497Z >   ???
2025-01-10T12:40:39.9411638Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9411711Z E   
2025-01-10T12:40:39.9411850Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9411965Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9412048Z E          ...
2025-01-10T12:40:39.9412138Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9412362Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9412483Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9412559Z E          ...
2025-01-10T12:40:39.9412653Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9412782Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9412895Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9412899Z 
2025-01-10T12:40:39.9412992Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9413196Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-10T12:40:39.9413200Z 
2025-01-10T12:40:39.9413329Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9413463Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9413566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9413706Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9413849Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9413958Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9414112Z err_msg = None
2025-01-10T12:40:39.9414119Z 
2025-01-10T12:40:39.9414302Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9414446Z         if err_msg is None:
2025-01-10T12:40:39.9414613Z             if left.shape != right.shape:
2025-01-10T12:40:39.9414762Z                 raise_assert_detail(
2025-01-10T12:40:39.9415007Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9415124Z                 )
2025-01-10T12:40:39.9415198Z     
2025-01-10T12:40:39.9415280Z             diff = 0
2025-01-10T12:40:39.9415400Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9415499Z                 # count up differences
2025-01-10T12:40:39.9415676Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9415756Z                     diff += 1
2025-01-10T12:40:39.9415833Z     
2025-01-10T12:40:39.9415923Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9416167Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9416341Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9416586Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9416664Z E           
2025-01-10T12:40:39.9416782Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9417041Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9417301Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9417306Z 
2025-01-10T12:40:39.9417623Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9417627Z 
2025-01-10T12:40:39.9417796Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9417806Z 
2025-01-10T12:40:39.9418028Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51d30>
2025-01-10T12:40:39.9418237Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>, attr = 'f_lu'
2025-01-10T12:40:39.9418352Z 
2025-01-10T12:40:39.9418494Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9418615Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9418702Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9418783Z         try:
2025-01-10T12:40:39.9418926Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9419014Z         except KeyError:
2025-01-10T12:40:39.9419151Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9419230Z     
2025-01-10T12:40:39.9419323Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9419425Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9419521Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9419652Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9419745Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9419835Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9419965Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9419970Z 
2025-01-10T12:40:39.9420096Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9420217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9420360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9420445Z     ???
2025-01-10T12:40:39.9420554Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9420557Z 
2025-01-10T12:40:39.9420635Z >   ???
2025-01-10T12:40:39.9420780Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9420853Z E   
2025-01-10T12:40:39.9420991Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9421106Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9421188Z E          ...
2025-01-10T12:40:39.9421280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9421421Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9421540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9421620Z E          ...
2025-01-10T12:40:39.9421707Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9421837Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9421942Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9421946Z 
2025-01-10T12:40:39.9422044Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9422392Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-10T12:40:39.9422399Z 
2025-01-10T12:40:39.9422630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e52330>
2025-01-10T12:40:39.9422806Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9422900Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9422908Z 
2025-01-10T12:40:39.9423050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9423166Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9423261Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9423337Z         try:
2025-01-10T12:40:39.9423483Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9423566Z         except KeyError:
2025-01-10T12:40:39.9423709Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9423789Z     
2025-01-10T12:40:39.9423879Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9423984Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9424074Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9424213Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9424299Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9424395Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9424614Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9424695Z             else:
2025-01-10T12:40:39.9424792Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9424905Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9424910Z 
2025-01-10T12:40:39.9425033Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9425152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9425307Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9425381Z     ???
2025-01-10T12:40:39.9425501Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9425505Z 
2025-01-10T12:40:39.9425577Z >   ???
2025-01-10T12:40:39.9425762Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9425836Z E   
2025-01-10T12:40:39.9426009Z E   DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:39.9426480Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9431459Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:39.9437179Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:39.9437514Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:39.9437519Z 
2025-01-10T12:40:39.9437614Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9437857Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-10T12:40:39.9437861Z 
2025-01-10T12:40:39.9438001Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9438140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9438247Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9438383Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9438516Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9438617Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9438701Z err_msg = None
2025-01-10T12:40:39.9438705Z 
2025-01-10T12:40:39.9438827Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9438912Z         if err_msg is None:
2025-01-10T12:40:39.9439016Z             if left.shape != right.shape:
2025-01-10T12:40:39.9439103Z                 raise_assert_detail(
2025-01-10T12:40:39.9439257Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9439444Z                 )
2025-01-10T12:40:39.9439524Z     
2025-01-10T12:40:39.9439600Z             diff = 0
2025-01-10T12:40:39.9439720Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9439811Z                 # count up differences
2025-01-10T12:40:39.9439989Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9440075Z                     diff += 1
2025-01-10T12:40:39.9440154Z     
2025-01-10T12:40:39.9440245Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9440388Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9440566Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9440682Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9440763Z E           
2025-01-10T12:40:39.9440877Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9441148Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9441405Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9441497Z 
2025-01-10T12:40:39.9441809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9441813Z 
2025-01-10T12:40:39.9441991Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9441995Z 
2025-01-10T12:40:39.9442225Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e523f0>
2025-01-10T12:40:39.9442399Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9442490Z attr = 'previous_beta_sobolev'
2025-01-10T12:40:39.9442494Z 
2025-01-10T12:40:39.9442641Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9442763Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9442854Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9442932Z         try:
2025-01-10T12:40:39.9443076Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9443166Z         except KeyError:
2025-01-10T12:40:39.9443305Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9443382Z     
2025-01-10T12:40:39.9443472Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9443572Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9443662Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9443803Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9443892Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9443988Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9444099Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9444183Z             else:
2025-01-10T12:40:39.9444287Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9444400Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9444405Z 
2025-01-10T12:40:39.9444538Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9444654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9444807Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9444881Z     ???
2025-01-10T12:40:39.9444999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9445003Z 
2025-01-10T12:40:39.9445160Z >   ???
2025-01-10T12:40:39.9445297Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9445374Z E   
2025-01-10T12:40:39.9445513Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9445627Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9445707Z E          ...
2025-01-10T12:40:39.9445802Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9445941Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9446161Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9446237Z E          ...
2025-01-10T12:40:39.9446333Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9446462Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9446572Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9446576Z 
2025-01-10T12:40:39.9446667Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9446882Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-10T12:40:39.9446886Z 
2025-01-10T12:40:39.9447018Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9447159Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9447383Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9447516Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9447646Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9447741Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9447826Z err_msg = None
2025-01-10T12:40:39.9447830Z 
2025-01-10T12:40:39.9447941Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9448027Z         if err_msg is None:
2025-01-10T12:40:39.9448127Z             if left.shape != right.shape:
2025-01-10T12:40:39.9448218Z                 raise_assert_detail(
2025-01-10T12:40:39.9448362Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9448441Z                 )
2025-01-10T12:40:39.9448519Z     
2025-01-10T12:40:39.9448596Z             diff = 0
2025-01-10T12:40:39.9448718Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9448807Z                 # count up differences
2025-01-10T12:40:39.9448983Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9449065Z                     diff += 1
2025-01-10T12:40:39.9449142Z     
2025-01-10T12:40:39.9449233Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9449376Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9449545Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9449666Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9449740Z E           
2025-01-10T12:40:39.9449859Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9450123Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9450501Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9450509Z 
2025-01-10T12:40:39.9451222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9451231Z 
2025-01-10T12:40:39.9451530Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9451544Z 
2025-01-10T12:40:39.9451777Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e524b0>
2025-01-10T12:40:39.9451950Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9452039Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9452044Z 
2025-01-10T12:40:39.9452187Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9452305Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9452397Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9452472Z         try:
2025-01-10T12:40:39.9452618Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9452702Z         except KeyError:
2025-01-10T12:40:39.9452847Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9452924Z     
2025-01-10T12:40:39.9453021Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9453123Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9453213Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9453349Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9453438Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9453646Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9453757Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9453837Z             else:
2025-01-10T12:40:39.9453937Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9454048Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9454053Z 
2025-01-10T12:40:39.9454178Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9454306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9454462Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9454541Z     ???
2025-01-10T12:40:39.9454657Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9454661Z 
2025-01-10T12:40:39.9454733Z >   ???
2025-01-10T12:40:39.9454865Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9454946Z E   
2025-01-10T12:40:39.9455080Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9455193Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9455270Z E          ...
2025-01-10T12:40:39.9455361Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9455499Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9455618Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9455701Z E          ...
2025-01-10T12:40:39.9455790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9455926Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9456038Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9456042Z 
2025-01-10T12:40:39.9456253Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9456468Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-10T12:40:39.9456471Z 
2025-01-10T12:40:39.9456607Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9456749Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9456847Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9456986Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9457113Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9457329Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9457419Z err_msg = None
2025-01-10T12:40:39.9457423Z 
2025-01-10T12:40:39.9457535Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9457624Z         if err_msg is None:
2025-01-10T12:40:39.9457720Z             if left.shape != right.shape:
2025-01-10T12:40:39.9457810Z                 raise_assert_detail(
2025-01-10T12:40:39.9457963Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9458041Z                 )
2025-01-10T12:40:39.9458114Z     
2025-01-10T12:40:39.9458196Z             diff = 0
2025-01-10T12:40:39.9458310Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9458405Z                 # count up differences
2025-01-10T12:40:39.9458574Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9458660Z                     diff += 1
2025-01-10T12:40:39.9458737Z     
2025-01-10T12:40:39.9458832Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9458975Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9459145Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9459263Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9459338Z E           
2025-01-10T12:40:39.9459576Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9459832Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9460097Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9460102Z 
2025-01-10T12:40:39.9460421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9460426Z 
2025-01-10T12:40:39.9460595Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9460603Z 
2025-01-10T12:40:39.9460836Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e52570>
2025-01-10T12:40:39.9461006Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9461093Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9461097Z 
2025-01-10T12:40:39.9461241Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9461358Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9461451Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9461527Z         try:
2025-01-10T12:40:39.9461679Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9461764Z         except KeyError:
2025-01-10T12:40:39.9461911Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9461983Z     
2025-01-10T12:40:39.9462079Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9462177Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9462277Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9462409Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9462504Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9462596Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9462714Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9462797Z             else:
2025-01-10T12:40:39.9462893Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9463006Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9463094Z 
2025-01-10T12:40:39.9463223Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9463343Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9463490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9463569Z     ???
2025-01-10T12:40:39.9463684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9463692Z 
2025-01-10T12:40:39.9463771Z >   ???
2025-01-10T12:40:39.9463898Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9463975Z E   
2025-01-10T12:40:39.9464110Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9464222Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9464303Z E          ...
2025-01-10T12:40:39.9464393Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9464529Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9464649Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9464730Z E          ...
2025-01-10T12:40:39.9464820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9464951Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9465056Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9465142Z 
2025-01-10T12:40:39.9465241Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9465442Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-10T12:40:39.9465454Z 
2025-01-10T12:40:39.9465583Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9465719Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9465817Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9465958Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9466179Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9466280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9466355Z err_msg = None
2025-01-10T12:40:39.9466359Z 
2025-01-10T12:40:39.9466476Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9466565Z         if err_msg is None:
2025-01-10T12:40:39.9466665Z             if left.shape != right.shape:
2025-01-10T12:40:39.9466756Z                 raise_assert_detail(
2025-01-10T12:40:39.9466900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9466980Z                 )
2025-01-10T12:40:39.9467052Z     
2025-01-10T12:40:39.9467138Z             diff = 0
2025-01-10T12:40:39.9467251Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9467345Z                 # count up differences
2025-01-10T12:40:39.9467521Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9467606Z                     diff += 1
2025-01-10T12:40:39.9467679Z     
2025-01-10T12:40:39.9467775Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9467913Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9468090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9468208Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9468289Z E           
2025-01-10T12:40:39.9468406Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9468661Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9469041Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9469051Z 
2025-01-10T12:40:39.9469846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9469854Z 
2025-01-10T12:40:39.9470157Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9470164Z 
2025-01-10T12:40:39.9470551Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e526f0>
2025-01-10T12:40:39.9470730Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9470811Z attr = 'j_blues'
2025-01-10T12:40:39.9470815Z 
2025-01-10T12:40:39.9470971Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9471087Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9471180Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9471254Z         try:
2025-01-10T12:40:39.9471402Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9471490Z         except KeyError:
2025-01-10T12:40:39.9471763Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9471842Z     
2025-01-10T12:40:39.9471932Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9472031Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9472121Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9472261Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9472351Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9472449Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9472561Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9472647Z             else:
2025-01-10T12:40:39.9472744Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9472859Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9472863Z 
2025-01-10T12:40:39.9472997Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9473113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9473274Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9473348Z     ???
2025-01-10T12:40:39.9473464Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9473468Z 
2025-01-10T12:40:39.9473541Z >   ???
2025-01-10T12:40:39.9473676Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9473750Z E   
2025-01-10T12:40:39.9473886Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9474002Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9474085Z E          ...
2025-01-10T12:40:39.9474176Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9474311Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9474433Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9474508Z E          ...
2025-01-10T12:40:39.9474606Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9474731Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9474843Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9474846Z 
2025-01-10T12:40:39.9474937Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9475174Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-10T12:40:39.9475179Z 
2025-01-10T12:40:39.9475309Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9475550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9475661Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9475796Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9475928Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9476029Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9476315Z err_msg = None
2025-01-10T12:40:39.9476324Z 
2025-01-10T12:40:39.9476452Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9476543Z         if err_msg is None:
2025-01-10T12:40:39.9476642Z             if left.shape != right.shape:
2025-01-10T12:40:39.9476733Z                 raise_assert_detail(
2025-01-10T12:40:39.9476882Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9476963Z                 )
2025-01-10T12:40:39.9477035Z     
2025-01-10T12:40:39.9477122Z             diff = 0
2025-01-10T12:40:39.9477240Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9477329Z                 # count up differences
2025-01-10T12:40:39.9477506Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9477587Z                     diff += 1
2025-01-10T12:40:39.9477788Z     
2025-01-10T12:40:39.9477879Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9478021Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9478190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9478307Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9478382Z E           
2025-01-10T12:40:39.9478499Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9478760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9479023Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9479032Z 
2025-01-10T12:40:39.9479343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9479348Z 
2025-01-10T12:40:39.9479515Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9479519Z 
2025-01-10T12:40:39.9479745Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e53470>
2025-01-10T12:40:39.9479919Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9479996Z attr = 'lines'
2025-01-10T12:40:39.9480000Z 
2025-01-10T12:40:39.9480143Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9480258Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9480351Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9480432Z         try:
2025-01-10T12:40:39.9480579Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9480664Z         except KeyError:
2025-01-10T12:40:39.9480807Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9480880Z     
2025-01-10T12:40:39.9480971Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9481066Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9481165Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9481301Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9481506Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9481606Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9481718Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9481799Z             else:
2025-01-10T12:40:39.9481895Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9482007Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9482017Z 
2025-01-10T12:40:39.9482144Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9482262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9482409Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9482487Z     ???
2025-01-10T12:40:39.9482597Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9482604Z 
2025-01-10T12:40:39.9482677Z >   ???
2025-01-10T12:40:39.9482813Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9482887Z E   
2025-01-10T12:40:39.9483020Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9483133Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9483212Z E          ...
2025-01-10T12:40:39.9483300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9483518Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9483633Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9483712Z E          ...
2025-01-10T12:40:39.9483798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9483928Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9484033Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9484043Z 
2025-01-10T12:40:39.9484134Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9484372Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-10T12:40:39.9484376Z 
2025-01-10T12:40:39.9484598Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e53530>
2025-01-10T12:40:39.9484770Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9484862Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9484866Z 
2025-01-10T12:40:39.9485007Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9485127Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9485219Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9485293Z         try:
2025-01-10T12:40:39.9485441Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9485529Z         except KeyError:
2025-01-10T12:40:39.9485670Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9485752Z     
2025-01-10T12:40:39.9485840Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9485938Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9486033Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9486274Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9486364Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9486463Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9486585Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9486594Z 
2025-01-10T12:40:39.9486723Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9486836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9486846Z 
2025-01-10T12:40:39.9486982Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9487072Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9487182Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9487270Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9487528Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9487622Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9487729Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9487815Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9487897Z err_msg = None
2025-01-10T12:40:39.9487901Z 
2025-01-10T12:40:39.9488016Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9488134Z         if err_msg is None:
2025-01-10T12:40:39.9488310Z             if left.shape != right.shape:
2025-01-10T12:40:39.9488464Z                 raise_assert_detail(
2025-01-10T12:40:39.9488707Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9488836Z                 )
2025-01-10T12:40:39.9488955Z     
2025-01-10T12:40:39.9489087Z             diff = 0
2025-01-10T12:40:39.9489280Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9489407Z                 # count up differences
2025-01-10T12:40:39.9489581Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9489667Z                     diff += 1
2025-01-10T12:40:39.9489740Z     
2025-01-10T12:40:39.9489833Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9489969Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9490276Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9490387Z E           AssertionError: Series are different
2025-01-10T12:40:39.9490464Z E           
2025-01-10T12:40:39.9490572Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9490941Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9491270Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9491602Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9491607Z 
2025-01-10T12:40:39.9491919Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9492152Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-10T12:40:39.9492157Z 
2025-01-10T12:40:39.9492378Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e535f0>
2025-01-10T12:40:39.9492556Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9492653Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9492657Z 
2025-01-10T12:40:39.9492793Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9492913Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9492999Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9493078Z         try:
2025-01-10T12:40:39.9493218Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9493307Z         except KeyError:
2025-01-10T12:40:39.9493527Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9493606Z     
2025-01-10T12:40:39.9493695Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9493796Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9493885Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9494025Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9494123Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9494214Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9494329Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9494333Z 
2025-01-10T12:40:39.9494456Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9494576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9494580Z 
2025-01-10T12:40:39.9494715Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9494810Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9494920Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9495008Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9495149Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9495238Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9495450Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9495531Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9495614Z err_msg = None
2025-01-10T12:40:39.9495617Z 
2025-01-10T12:40:39.9495725Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9495813Z         if err_msg is None:
2025-01-10T12:40:39.9495907Z             if left.shape != right.shape:
2025-01-10T12:40:39.9495998Z                 raise_assert_detail(
2025-01-10T12:40:39.9496251Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9496340Z                 )
2025-01-10T12:40:39.9496413Z     
2025-01-10T12:40:39.9496497Z             diff = 0
2025-01-10T12:40:39.9496611Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9496711Z                 # count up differences
2025-01-10T12:40:39.9496886Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9496972Z                     diff += 1
2025-01-10T12:40:39.9497050Z     
2025-01-10T12:40:39.9497139Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9497281Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9497454Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9497566Z E           AssertionError: Series are different
2025-01-10T12:40:39.9497642Z E           
2025-01-10T12:40:39.9497751Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9498120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9498497Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9499016Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9499022Z 
2025-01-10T12:40:39.9499342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9499547Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-10T12:40:39.9499551Z 
2025-01-10T12:40:39.9499687Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9499819Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9499927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9500068Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9500201Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9500309Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9500388Z err_msg = None
2025-01-10T12:40:39.9500392Z 
2025-01-10T12:40:39.9500508Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9500773Z         if err_msg is None:
2025-01-10T12:40:39.9500877Z             if left.shape != right.shape:
2025-01-10T12:40:39.9500965Z                 raise_assert_detail(
2025-01-10T12:40:39.9501119Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9501196Z                 )
2025-01-10T12:40:39.9501275Z     
2025-01-10T12:40:39.9501351Z             diff = 0
2025-01-10T12:40:39.9501468Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9501558Z                 # count up differences
2025-01-10T12:40:39.9501738Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9509154Z                     diff += 1
2025-01-10T12:40:39.9509254Z     
2025-01-10T12:40:39.9509362Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9509519Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9509748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9509956Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9510093Z E           
2025-01-10T12:40:39.9510294Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9510778Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9511130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9511141Z 
2025-01-10T12:40:39.9511471Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9511476Z 
2025-01-10T12:40:39.9511659Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9511663Z 
2025-01-10T12:40:39.9511898Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e53830>
2025-01-10T12:40:39.9512109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>, attr = 'nu'
2025-01-10T12:40:39.9512113Z 
2025-01-10T12:40:39.9512434Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9512563Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9512658Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9512733Z         try:
2025-01-10T12:40:39.9512886Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9512971Z         except KeyError:
2025-01-10T12:40:39.9513127Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9513200Z     
2025-01-10T12:40:39.9513295Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9513391Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9513487Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9513632Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9513728Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9513818Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9513938Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9513947Z 
2025-01-10T12:40:39.9514081Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9514200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9514355Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9514430Z     ???
2025-01-10T12:40:39.9514546Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9514667Z 
2025-01-10T12:40:39.9514742Z >   ???
2025-01-10T12:40:39.9514876Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9514952Z E   
2025-01-10T12:40:39.9515091Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9515204Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9515286Z E          ...
2025-01-10T12:40:39.9515381Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9515512Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9515634Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9515709Z E          ...
2025-01-10T12:40:39.9515803Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9515928Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9516040Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9516048Z 
2025-01-10T12:40:39.9516373Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9516589Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-10T12:40:39.9516594Z 
2025-01-10T12:40:39.9516725Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9516865Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9516969Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9517112Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9517247Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9517342Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9517431Z err_msg = None
2025-01-10T12:40:39.9517435Z 
2025-01-10T12:40:39.9517550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9517648Z         if err_msg is None:
2025-01-10T12:40:39.9517746Z             if left.shape != right.shape:
2025-01-10T12:40:39.9517837Z                 raise_assert_detail(
2025-01-10T12:40:39.9517983Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9518062Z                 )
2025-01-10T12:40:39.9518139Z     
2025-01-10T12:40:39.9518216Z             diff = 0
2025-01-10T12:40:39.9518336Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9518426Z                 # count up differences
2025-01-10T12:40:39.9518759Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9518845Z                     diff += 1
2025-01-10T12:40:39.9518923Z     
2025-01-10T12:40:39.9519014Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9519164Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9519340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9519462Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9519538Z E           
2025-01-10T12:40:39.9519659Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9519927Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9520190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9520306Z 
2025-01-10T12:40:39.9520630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9520634Z 
2025-01-10T12:40:39.9520816Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9520820Z 
2025-01-10T12:40:39.9521049Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e538f0>
2025-01-10T12:40:39.9521224Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9521304Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9521308Z 
2025-01-10T12:40:39.9521455Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9521572Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9521662Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9521736Z         try:
2025-01-10T12:40:39.9521890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9521973Z         except KeyError:
2025-01-10T12:40:39.9522123Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9522195Z     
2025-01-10T12:40:39.9522291Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9522391Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9522481Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9522623Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9522710Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9522811Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9522926Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9522930Z 
2025-01-10T12:40:39.9523061Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9523178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9523331Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9523404Z     ???
2025-01-10T12:40:39.9523527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9523531Z 
2025-01-10T12:40:39.9523610Z >   ???
2025-01-10T12:40:39.9523740Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9523820Z E   
2025-01-10T12:40:39.9523947Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9524065Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9524140Z E          ...
2025-01-10T12:40:39.9524237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9524457Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9524579Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9524652Z E          ...
2025-01-10T12:40:39.9524745Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9524870Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9524982Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9524989Z 
2025-01-10T12:40:39.9525084Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9525280Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-10T12:40:39.9525284Z 
2025-01-10T12:40:39.9525424Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9525560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9525668Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9525808Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9525940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9526037Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9526229Z err_msg = None
2025-01-10T12:40:39.9526234Z 
2025-01-10T12:40:39.9526493Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9526576Z         if err_msg is None:
2025-01-10T12:40:39.9526675Z             if left.shape != right.shape:
2025-01-10T12:40:39.9526761Z                 raise_assert_detail(
2025-01-10T12:40:39.9526918Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9526993Z                 )
2025-01-10T12:40:39.9527070Z     
2025-01-10T12:40:39.9527146Z             diff = 0
2025-01-10T12:40:39.9527268Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9527357Z                 # count up differences
2025-01-10T12:40:39.9527541Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9527623Z                     diff += 1
2025-01-10T12:40:39.9527704Z     
2025-01-10T12:40:39.9527793Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9527935Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9528120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9528235Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9528316Z E           
2025-01-10T12:40:39.9528427Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9528693Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9528950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9528963Z 
2025-01-10T12:40:39.9529270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9529275Z 
2025-01-10T12:40:39.9529447Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9529451Z 
2025-01-10T12:40:39.9529671Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e539b0>
2025-01-10T12:40:39.9529876Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>, attr = 'f_lu'
2025-01-10T12:40:39.9529880Z 
2025-01-10T12:40:39.9530136Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9530262Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9530353Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9530427Z         try:
2025-01-10T12:40:39.9530573Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9530655Z         except KeyError:
2025-01-10T12:40:39.9530804Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9530875Z     
2025-01-10T12:40:39.9530971Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9531067Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9531164Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9531295Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9531385Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9531475Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9531593Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9531602Z 
2025-01-10T12:40:39.9531734Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9531847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9532000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9532074Z     ???
2025-01-10T12:40:39.9532189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9532275Z 
2025-01-10T12:40:39.9532351Z >   ???
2025-01-10T12:40:39.9532486Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9532559Z E   
2025-01-10T12:40:39.9532693Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9532804Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9532883Z E          ...
2025-01-10T12:40:39.9532971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9533111Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9533235Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9533312Z E          ...
2025-01-10T12:40:39.9533403Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9533528Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9533640Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9533652Z 
2025-01-10T12:40:39.9533743Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9533953Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-10T12:40:39.9533957Z 
2025-01-10T12:40:39.9534086Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9534223Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9534320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9534463Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9534596Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9534690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9534770Z err_msg = None
2025-01-10T12:40:39.9534774Z 
2025-01-10T12:40:39.9534883Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9534975Z         if err_msg is None:
2025-01-10T12:40:39.9535069Z             if left.shape != right.shape:
2025-01-10T12:40:39.9535159Z                 raise_assert_detail(
2025-01-10T12:40:39.9535303Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9535384Z                 )
2025-01-10T12:40:39.9535455Z     
2025-01-10T12:40:39.9535536Z             diff = 0
2025-01-10T12:40:39.9535653Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9535747Z                 # count up differences
2025-01-10T12:40:39.9536007Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9536178Z                     diff += 1
2025-01-10T12:40:39.9536252Z     
2025-01-10T12:40:39.9536338Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9536473Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9536647Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9536759Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9536830Z E           
2025-01-10T12:40:39.9536949Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9537208Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9537467Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9537587Z 
2025-01-10T12:40:39.9537901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9537906Z 
2025-01-10T12:40:39.9538072Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9538076Z 
2025-01-10T12:40:39.9538305Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e78170>
2025-01-10T12:40:39.9538475Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9538555Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9538559Z 
2025-01-10T12:40:39.9538711Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9538832Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9538922Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9538995Z         try:
2025-01-10T12:40:39.9539140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9539222Z         except KeyError:
2025-01-10T12:40:39.9539369Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9539440Z     
2025-01-10T12:40:39.9539535Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9539628Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9539725Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9539862Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9539949Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9540043Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9540160Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9540237Z             else:
2025-01-10T12:40:39.9540334Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9540445Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9540449Z 
2025-01-10T12:40:39.9540578Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9540704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9540855Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9540932Z     ???
2025-01-10T12:40:39.9541042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9541051Z 
2025-01-10T12:40:39.9541123Z >   ???
2025-01-10T12:40:39.9541259Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9541331Z E   
2025-01-10T12:40:39.9541464Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9541694Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9541776Z E          ...
2025-01-10T12:40:39.9541865Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9542000Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9542111Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9542190Z E          ...
2025-01-10T12:40:39.9542282Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9542411Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9542515Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9542524Z 
2025-01-10T12:40:39.9542614Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9542821Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-10T12:40:39.9542825Z 
2025-01-10T12:40:39.9542955Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9543096Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9543195Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9543337Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9543464Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9543656Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9543735Z err_msg = None
2025-01-10T12:40:39.9543745Z 
2025-01-10T12:40:39.9543864Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9543952Z         if err_msg is None:
2025-01-10T12:40:39.9544050Z             if left.shape != right.shape:
2025-01-10T12:40:39.9544141Z                 raise_assert_detail(
2025-01-10T12:40:39.9544291Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9544370Z                 )
2025-01-10T12:40:39.9544445Z     
2025-01-10T12:40:39.9544528Z             diff = 0
2025-01-10T12:40:39.9544638Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9544732Z                 # count up differences
2025-01-10T12:40:39.9544904Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9544989Z                     diff += 1
2025-01-10T12:40:39.9545066Z     
2025-01-10T12:40:39.9545161Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9545300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9545471Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9545589Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9545662Z E           
2025-01-10T12:40:39.9545779Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9546038Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9546392Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9546402Z 
2025-01-10T12:40:39.9546718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9546722Z 
2025-01-10T12:40:39.9546892Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9546897Z 
2025-01-10T12:40:39.9547262Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e78230>
2025-01-10T12:40:39.9547449Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9547616Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9547623Z 
2025-01-10T12:40:39.9547864Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9548069Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9548223Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9548345Z         try:
2025-01-10T12:40:39.9548585Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9548733Z         except KeyError:
2025-01-10T12:40:39.9548885Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9548956Z     
2025-01-10T12:40:39.9549050Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9549144Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9549236Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9549373Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9549464Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9549555Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9549671Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9549745Z             else:
2025-01-10T12:40:39.9549850Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9550099Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9550103Z 
2025-01-10T12:40:39.9550228Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9550345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9550491Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9550570Z     ???
2025-01-10T12:40:39.9550680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9550684Z 
2025-01-10T12:40:39.9550760Z >   ???
2025-01-10T12:40:39.9550890Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9550967Z E   
2025-01-10T12:40:39.9551093Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9551209Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9551288Z E          ...
2025-01-10T12:40:39.9551376Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9551518Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9551633Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9551714Z E          ...
2025-01-10T12:40:39.9551802Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9551931Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9552035Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9552039Z 
2025-01-10T12:40:39.9552134Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9552336Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-10T12:40:39.9552339Z 
2025-01-10T12:40:39.9552474Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9552611Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9552707Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9552847Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9552972Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9553071Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9553148Z err_msg = None
2025-01-10T12:40:39.9553152Z 
2025-01-10T12:40:39.9553268Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9553350Z         if err_msg is None:
2025-01-10T12:40:39.9553450Z             if left.shape != right.shape:
2025-01-10T12:40:39.9553624Z                 raise_assert_detail(
2025-01-10T12:40:39.9553777Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9553855Z                 )
2025-01-10T12:40:39.9553926Z     
2025-01-10T12:40:39.9554005Z             diff = 0
2025-01-10T12:40:39.9554117Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9554216Z                 # count up differences
2025-01-10T12:40:39.9554384Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9554468Z                     diff += 1
2025-01-10T12:40:39.9554540Z     
2025-01-10T12:40:39.9554632Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9554768Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9554940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9555055Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9555134Z E           
2025-01-10T12:40:39.9555243Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9555500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9555842Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9555847Z 
2025-01-10T12:40:39.9556364Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9556381Z 
2025-01-10T12:40:39.9556555Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9556560Z 
2025-01-10T12:40:39.9556790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e783b0>
2025-01-10T12:40:39.9556958Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9557043Z attr = 'j_blues'
2025-01-10T12:40:39.9557047Z 
2025-01-10T12:40:39.9557184Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9557305Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9557393Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9557474Z         try:
2025-01-10T12:40:39.9557613Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9557700Z         except KeyError:
2025-01-10T12:40:39.9557837Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9557915Z     
2025-01-10T12:40:39.9558013Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9558108Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9558203Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9558334Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9558425Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9558514Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9558633Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9558708Z             else:
2025-01-10T12:40:39.9558810Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9558916Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9558919Z 
2025-01-10T12:40:39.9559050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9559164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9559314Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9559513Z     ???
2025-01-10T12:40:39.9559630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9559634Z 
2025-01-10T12:40:39.9559712Z >   ???
2025-01-10T12:40:39.9559837Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9559914Z E   
2025-01-10T12:40:39.9560040Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9560161Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9560235Z E          ...
2025-01-10T12:40:39.9560329Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9560459Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9560576Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9560649Z E          ...
2025-01-10T12:40:39.9560742Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9560872Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9560982Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9560985Z 
2025-01-10T12:40:39.9561079Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9561273Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-10T12:40:39.9561277Z 
2025-01-10T12:40:39.9561410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9561654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9561758Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9561890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9562019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9562121Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9562203Z err_msg = None
2025-01-10T12:40:39.9562212Z 
2025-01-10T12:40:39.9562328Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9562410Z         if err_msg is None:
2025-01-10T12:40:39.9562510Z             if left.shape != right.shape:
2025-01-10T12:40:39.9562594Z                 raise_assert_detail(
2025-01-10T12:40:39.9562741Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9562821Z                 )
2025-01-10T12:40:39.9562898Z     
2025-01-10T12:40:39.9562972Z             diff = 0
2025-01-10T12:40:39.9563087Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9563174Z                 # count up differences
2025-01-10T12:40:39.9563348Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9563433Z                     diff += 1
2025-01-10T12:40:39.9563505Z     
2025-01-10T12:40:39.9563599Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9563738Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9563912Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9564023Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9564098Z E           
2025-01-10T12:40:39.9564208Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9564470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9564816Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9564822Z 
2025-01-10T12:40:39.9565126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9565129Z 
2025-01-10T12:40:39.9565301Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9565305Z 
2025-01-10T12:40:39.9565532Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79130>
2025-01-10T12:40:39.9565704Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9565785Z attr = 'lines'
2025-01-10T12:40:39.9565789Z 
2025-01-10T12:40:39.9565925Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9566047Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9566232Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9566368Z         try:
2025-01-10T12:40:39.9566609Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9566757Z         except KeyError:
2025-01-10T12:40:39.9566987Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9567113Z     
2025-01-10T12:40:39.9567269Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9567394Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9567486Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9567753Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9567840Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9567936Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9568052Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9568129Z             else:
2025-01-10T12:40:39.9568229Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9568336Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9568340Z 
2025-01-10T12:40:39.9568474Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9568587Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9568734Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9568808Z     ???
2025-01-10T12:40:39.9568929Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9568937Z 
2025-01-10T12:40:39.9569010Z >   ???
2025-01-10T12:40:39.9569145Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9569220Z E   
2025-01-10T12:40:39.9569350Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9569473Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9569548Z E          ...
2025-01-10T12:40:39.9569644Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9569773Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9569892Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9569972Z E          ...
2025-01-10T12:40:39.9570066Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9570190Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9570301Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9570306Z 
2025-01-10T12:40:39.9570396Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9570633Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-10T12:40:39.9570637Z 
2025-01-10T12:40:39.9570862Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e791f0>
2025-01-10T12:40:39.9571027Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9571122Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9571127Z 
2025-01-10T12:40:39.9571265Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9571384Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9571608Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9571692Z         try:
2025-01-10T12:40:39.9571834Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9571921Z         except KeyError:
2025-01-10T12:40:39.9572058Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9572135Z     
2025-01-10T12:40:39.9572233Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9572327Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9572422Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9572555Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9572647Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9572740Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9572855Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9572859Z 
2025-01-10T12:40:39.9572986Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9573110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9573114Z 
2025-01-10T12:40:39.9573250Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9573343Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9573456Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9573727Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9573870Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9573954Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9574066Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9574148Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9574230Z err_msg = None
2025-01-10T12:40:39.9574234Z 
2025-01-10T12:40:39.9574352Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9574439Z         if err_msg is None:
2025-01-10T12:40:39.9574538Z             if left.shape != right.shape:
2025-01-10T12:40:39.9574622Z                 raise_assert_detail(
2025-01-10T12:40:39.9574768Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9574841Z                 )
2025-01-10T12:40:39.9574918Z     
2025-01-10T12:40:39.9574997Z             diff = 0
2025-01-10T12:40:39.9575115Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9575208Z                 # count up differences
2025-01-10T12:40:39.9575379Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9575468Z                     diff += 1
2025-01-10T12:40:39.9575539Z     
2025-01-10T12:40:39.9575630Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9575766Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9575951Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9576275Z E           AssertionError: Series are different
2025-01-10T12:40:39.9576425Z E           
2025-01-10T12:40:39.9576546Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9576919Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9577393Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9577720Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9577737Z 
2025-01-10T12:40:39.9578053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9578283Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-10T12:40:39.9578287Z 
2025-01-10T12:40:39.9578511Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e792b0>
2025-01-10T12:40:39.9578684Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9578780Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9578784Z 
2025-01-10T12:40:39.9578927Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9579042Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9579136Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9579210Z         try:
2025-01-10T12:40:39.9579359Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9579562Z         except KeyError:
2025-01-10T12:40:39.9579700Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9579778Z     
2025-01-10T12:40:39.9579870Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9579969Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9580057Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9580203Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9580291Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9580391Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9580506Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9580510Z 
2025-01-10T12:40:39.9580641Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9580755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9580764Z 
2025-01-10T12:40:39.9580904Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9580994Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9581102Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9581189Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9581330Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9581419Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9581524Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9581613Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9581694Z err_msg = None
2025-01-10T12:40:39.9581698Z 
2025-01-10T12:40:39.9581813Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9581900Z         if err_msg is None:
2025-01-10T12:40:39.9581997Z             if left.shape != right.shape:
2025-01-10T12:40:39.9582088Z                 raise_assert_detail(
2025-01-10T12:40:39.9582236Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9582316Z                 )
2025-01-10T12:40:39.9582387Z     
2025-01-10T12:40:39.9582468Z             diff = 0
2025-01-10T12:40:39.9582583Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9582677Z                 # count up differences
2025-01-10T12:40:39.9582846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9582931Z                     diff += 1
2025-01-10T12:40:39.9583002Z     
2025-01-10T12:40:39.9583178Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9583317Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9583491Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9583599Z E           AssertionError: Series are different
2025-01-10T12:40:39.9583672Z E           
2025-01-10T12:40:39.9583783Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9584144Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9584517Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9584888Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9584967Z 
2025-01-10T12:40:39.9585276Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9585474Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-10T12:40:39.9585479Z 
2025-01-10T12:40:39.9585609Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9585742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9585845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9585981Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9586212Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9586308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9586389Z err_msg = None
2025-01-10T12:40:39.9586393Z 
2025-01-10T12:40:39.9586502Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9586590Z         if err_msg is None:
2025-01-10T12:40:39.9586689Z             if left.shape != right.shape:
2025-01-10T12:40:39.9586780Z                 raise_assert_detail(
2025-01-10T12:40:39.9586927Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9587002Z                 )
2025-01-10T12:40:39.9587078Z     
2025-01-10T12:40:39.9587156Z             diff = 0
2025-01-10T12:40:39.9587272Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9587366Z                 # count up differences
2025-01-10T12:40:39.9587539Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9587618Z                     diff += 1
2025-01-10T12:40:39.9587695Z     
2025-01-10T12:40:39.9587784Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9587927Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9588100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9588338Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9588417Z E           
2025-01-10T12:40:39.9588538Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9588798Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9589057Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9589061Z 
2025-01-10T12:40:39.9589372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9589381Z 
2025-01-10T12:40:39.9589556Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9589561Z 
2025-01-10T12:40:39.9589789Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e794f0>
2025-01-10T12:40:39.9589997Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>, attr = 'nu'
2025-01-10T12:40:39.9590124Z 
2025-01-10T12:40:39.9590265Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9590396Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9590482Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9590561Z         try:
2025-01-10T12:40:39.9590704Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9590795Z         except KeyError:
2025-01-10T12:40:39.9590953Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9591096Z     
2025-01-10T12:40:39.9591256Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9591426Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9591586Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9591813Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9591966Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9592127Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9592275Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9592280Z 
2025-01-10T12:40:39.9592413Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9592529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9592690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9592763Z     ???
2025-01-10T12:40:39.9592879Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9592884Z 
2025-01-10T12:40:39.9592961Z >   ???
2025-01-10T12:40:39.9593094Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9593175Z E   
2025-01-10T12:40:39.9593304Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9593422Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9593498Z E          ...
2025-01-10T12:40:39.9593595Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9593730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9593848Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9593922Z E          ...
2025-01-10T12:40:39.9594013Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9594139Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9594250Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9594254Z 
2025-01-10T12:40:39.9594349Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9594644Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-10T12:40:39.9594649Z 
2025-01-10T12:40:39.9594787Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9594917Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9595020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9595160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9595291Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9595385Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9595469Z err_msg = None
2025-01-10T12:40:39.9595473Z 
2025-01-10T12:40:39.9595588Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9595671Z         if err_msg is None:
2025-01-10T12:40:39.9595772Z             if left.shape != right.shape:
2025-01-10T12:40:39.9595863Z                 raise_assert_detail(
2025-01-10T12:40:39.9596013Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9596269Z                 )
2025-01-10T12:40:39.9596369Z     
2025-01-10T12:40:39.9596447Z             diff = 0
2025-01-10T12:40:39.9596567Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9596786Z                 # count up differences
2025-01-10T12:40:39.9596972Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9597053Z                     diff += 1
2025-01-10T12:40:39.9597131Z     
2025-01-10T12:40:39.9597222Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9597367Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9597544Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9597666Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9597744Z E           
2025-01-10T12:40:39.9597857Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9598118Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9598383Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9598393Z 
2025-01-10T12:40:39.9598704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9598711Z 
2025-01-10T12:40:39.9598915Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9598920Z 
2025-01-10T12:40:39.9599145Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e795b0>
2025-01-10T12:40:39.9599317Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9599402Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9599406Z 
2025-01-10T12:40:39.9599549Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9599669Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9599755Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9599833Z         try:
2025-01-10T12:40:39.9599975Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9600063Z         except KeyError:
2025-01-10T12:40:39.9600201Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9600279Z     
2025-01-10T12:40:39.9600483Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9600594Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9600684Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9600821Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9600909Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9601005Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9601122Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9601126Z 
2025-01-10T12:40:39.9601258Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9601378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9601525Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9601603Z     ???
2025-01-10T12:40:39.9601712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9601716Z 
2025-01-10T12:40:39.9601792Z >   ???
2025-01-10T12:40:39.9601923Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9602001Z E   
2025-01-10T12:40:39.9602129Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9602249Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9602322Z E          ...
2025-01-10T12:40:39.9602420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9602637Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9602760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9602844Z E          ...
2025-01-10T12:40:39.9602932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9603065Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9603171Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9603175Z 
2025-01-10T12:40:39.9603272Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9603471Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-10T12:40:39.9603475Z 
2025-01-10T12:40:39.9603608Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9603738Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9603842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9603985Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9604110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9604211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9604289Z err_msg = None
2025-01-10T12:40:39.9604293Z 
2025-01-10T12:40:39.9604407Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9604488Z         if err_msg is None:
2025-01-10T12:40:39.9604592Z             if left.shape != right.shape:
2025-01-10T12:40:39.9604679Z                 raise_assert_detail(
2025-01-10T12:40:39.9604831Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9604911Z                 )
2025-01-10T12:40:39.9604988Z     
2025-01-10T12:40:39.9605064Z             diff = 0
2025-01-10T12:40:39.9605182Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9605281Z                 # count up differences
2025-01-10T12:40:39.9605451Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9605536Z                     diff += 1
2025-01-10T12:40:39.9605610Z     
2025-01-10T12:40:39.9605710Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9605850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9606026Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9606367Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9606453Z E           
2025-01-10T12:40:39.9606564Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9606824Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9607091Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9607095Z 
2025-01-10T12:40:39.9607406Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9607411Z 
2025-01-10T12:40:39.9607589Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9607593Z 
2025-01-10T12:40:39.9607840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79670>
2025-01-10T12:40:39.9608188Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>, attr = 'f_lu'
2025-01-10T12:40:39.9608359Z 
2025-01-10T12:40:39.9608608Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9608793Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9608933Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9609052Z         try:
2025-01-10T12:40:39.9609286Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9609421Z         except KeyError:
2025-01-10T12:40:39.9609653Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9609775Z     
2025-01-10T12:40:39.9609949Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9610105Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9610268Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9610529Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9610686Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9610859Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9611071Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9611078Z 
2025-01-10T12:40:39.9611308Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9611510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9611785Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9611923Z     ???
2025-01-10T12:40:39.9612124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9612132Z 
2025-01-10T12:40:39.9612259Z >   ???
2025-01-10T12:40:39.9612498Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9612624Z E   
2025-01-10T12:40:39.9612836Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9613006Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9613116Z E          ...
2025-01-10T12:40:39.9613252Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9613450Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9613624Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9613733Z E          ...
2025-01-10T12:40:39.9613867Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9614060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9614220Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9614226Z 
2025-01-10T12:40:39.9614363Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9614809Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-10T12:40:39.9614816Z 
2025-01-10T12:40:39.9615023Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9615218Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9615365Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9615575Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9615767Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9615904Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9616023Z err_msg = None
2025-01-10T12:40:39.9616028Z 
2025-01-10T12:40:39.9616374Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9616505Z         if err_msg is None:
2025-01-10T12:40:39.9616659Z             if left.shape != right.shape:
2025-01-10T12:40:39.9616784Z                 raise_assert_detail(
2025-01-10T12:40:39.9617008Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9617119Z                 )
2025-01-10T12:40:39.9617234Z     
2025-01-10T12:40:39.9617353Z             diff = 0
2025-01-10T12:40:39.9617524Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9617864Z                 # count up differences
2025-01-10T12:40:39.9618152Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9618287Z                     diff += 1
2025-01-10T12:40:39.9618407Z     
2025-01-10T12:40:39.9618537Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9618743Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9619011Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9619221Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9619352Z E           
2025-01-10T12:40:39.9619538Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9619993Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9620443Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9620451Z 
2025-01-10T12:40:39.9621003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9621013Z 
2025-01-10T12:40:39.9621327Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9621335Z 
2025-01-10T12:40:39.9621738Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79df0>
2025-01-10T12:40:39.9622053Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9622210Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9622218Z 
2025-01-10T12:40:39.9622481Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9622696Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9622861Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9622991Z         try:
2025-01-10T12:40:39.9623265Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9623428Z         except KeyError:
2025-01-10T12:40:39.9623672Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9623808Z     
2025-01-10T12:40:39.9624142Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9624323Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9624476Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9624689Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9624820Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9624974Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9625148Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9625284Z             else:
2025-01-10T12:40:39.9625445Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9625620Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9625626Z 
2025-01-10T12:40:39.9625830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9625996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9626394Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9626516Z     ???
2025-01-10T12:40:39.9626692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9626698Z 
2025-01-10T12:40:39.9626808Z >   ???
2025-01-10T12:40:39.9627011Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9627118Z E   
2025-01-10T12:40:39.9627329Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9627669Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9627796Z E          ...
2025-01-10T12:40:39.9627943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9628168Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9628363Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9628480Z E          ...
2025-01-10T12:40:39.9628611Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9628799Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9628957Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9628963Z 
2025-01-10T12:40:39.9629098Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9629425Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-10T12:40:39.9629431Z 
2025-01-10T12:40:39.9629651Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9629881Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9630043Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9630267Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9630489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9630645Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9630793Z err_msg = None
2025-01-10T12:40:39.9630799Z 
2025-01-10T12:40:39.9630986Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9631134Z         if err_msg is None:
2025-01-10T12:40:39.9631299Z             if left.shape != right.shape:
2025-01-10T12:40:39.9631452Z                 raise_assert_detail(
2025-01-10T12:40:39.9631675Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9631802Z                 )
2025-01-10T12:40:39.9631905Z     
2025-01-10T12:40:39.9632026Z             diff = 0
2025-01-10T12:40:39.9632189Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9632325Z                 # count up differences
2025-01-10T12:40:39.9632577Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9632691Z                     diff += 1
2025-01-10T12:40:39.9632804Z     
2025-01-10T12:40:39.9632935Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9633289Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9633547Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9633722Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9633846Z E           
2025-01-10T12:40:39.9634033Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9634443Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9634846Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9634852Z 
2025-01-10T12:40:39.9635298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9635304Z 
2025-01-10T12:40:39.9635547Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9635664Z 
2025-01-10T12:40:39.9636002Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79eb0>
2025-01-10T12:40:39.9636399Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9636518Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9636523Z 
2025-01-10T12:40:39.9636732Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9636901Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9637032Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9637144Z         try:
2025-01-10T12:40:39.9637364Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9637484Z         except KeyError:
2025-01-10T12:40:39.9637690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9637794Z     
2025-01-10T12:40:39.9637928Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9638063Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9638209Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9638412Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9638540Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9638678Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9638840Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9638959Z             else:
2025-01-10T12:40:39.9639100Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9639266Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9639272Z 
2025-01-10T12:40:39.9639460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9639633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9639846Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9639960Z     ???
2025-01-10T12:40:39.9640117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9640138Z 
2025-01-10T12:40:39.9640241Z >   ???
2025-01-10T12:40:39.9640431Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9640535Z E   
2025-01-10T12:40:39.9640727Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9640888Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9641003Z E          ...
2025-01-10T12:40:39.9641132Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9641322Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9641633Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9641755Z E          ...
2025-01-10T12:40:39.9641879Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9642065Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9642213Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9642227Z 
2025-01-10T12:40:39.9642364Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9642650Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-10T12:40:39.9642656Z 
2025-01-10T12:40:39.9642840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9643031Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9643170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9643372Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9643566Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9643725Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9643837Z err_msg = None
2025-01-10T12:40:39.9643849Z 
2025-01-10T12:40:39.9644009Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9644443Z         if err_msg is None:
2025-01-10T12:40:39.9644585Z             if left.shape != right.shape:
2025-01-10T12:40:39.9644724Z                 raise_assert_detail(
2025-01-10T12:40:39.9644936Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9645051Z                 )
2025-01-10T12:40:39.9645157Z     
2025-01-10T12:40:39.9645277Z             diff = 0
2025-01-10T12:40:39.9645440Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9645581Z                 # count up differences
2025-01-10T12:40:39.9645844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9645984Z                     diff += 1
2025-01-10T12:40:39.9646253Z     
2025-01-10T12:40:39.9646404Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9646614Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9646869Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9647052Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9647167Z E           
2025-01-10T12:40:39.9647352Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9647763Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9648192Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9648198Z 
2025-01-10T12:40:39.9648684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9648698Z 
2025-01-10T12:40:39.9648959Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9648964Z 
2025-01-10T12:40:39.9649304Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7a030>
2025-01-10T12:40:39.9649549Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9649670Z attr = 'j_blues'
2025-01-10T12:40:39.9649675Z 
2025-01-10T12:40:39.9649876Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9650234Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9650382Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9650502Z         try:
2025-01-10T12:40:39.9650738Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9650869Z         except KeyError:
2025-01-10T12:40:39.9651090Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9651214Z     
2025-01-10T12:40:39.9651363Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9651513Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9651659Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9651871Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9652015Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9652158Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9652341Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9652461Z             else:
2025-01-10T12:40:39.9652628Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9652802Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9652808Z 
2025-01-10T12:40:39.9652998Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9653182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9653567Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9653691Z     ???
2025-01-10T12:40:39.9653871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9653878Z 
2025-01-10T12:40:39.9654004Z >   ???
2025-01-10T12:40:39.9654200Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9654316Z E   
2025-01-10T12:40:39.9654516Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9654702Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9654828Z E          ...
2025-01-10T12:40:39.9654976Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9655186Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9655368Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9655494Z E          ...
2025-01-10T12:40:39.9655630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9655848Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9656016Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9656022Z 
2025-01-10T12:40:39.9656323Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9656663Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-10T12:40:39.9656669Z 
2025-01-10T12:40:39.9656887Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9657105Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9657261Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9657482Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9657681Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9657845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9657986Z err_msg = None
2025-01-10T12:40:39.9657993Z 
2025-01-10T12:40:39.9658176Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9658312Z         if err_msg is None:
2025-01-10T12:40:39.9658474Z             if left.shape != right.shape:
2025-01-10T12:40:39.9658623Z                 raise_assert_detail(
2025-01-10T12:40:39.9658832Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9658954Z                 )
2025-01-10T12:40:39.9659079Z     
2025-01-10T12:40:39.9659201Z             diff = 0
2025-01-10T12:40:39.9659522Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9659672Z                 # count up differences
2025-01-10T12:40:39.9659927Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9660056Z                     diff += 1
2025-01-10T12:40:39.9660166Z     
2025-01-10T12:40:39.9660312Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9660507Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9660772Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9660950Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9661072Z E           
2025-01-10T12:40:39.9661240Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9661664Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9662075Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9662229Z 
2025-01-10T12:40:39.9662678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9662684Z 
2025-01-10T12:40:39.9662942Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9662948Z 
2025-01-10T12:40:39.9663299Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7adb0>
2025-01-10T12:40:39.9663562Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9663685Z attr = 'lines'
2025-01-10T12:40:39.9663691Z 
2025-01-10T12:40:39.9663903Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9664094Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9664230Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9664369Z         try:
2025-01-10T12:40:39.9664587Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9664725Z         except KeyError:
2025-01-10T12:40:39.9664941Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9665062Z     
2025-01-10T12:40:39.9665208Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9665357Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9665510Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9665723Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9665879Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9666028Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9666345Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9666461Z             else:
2025-01-10T12:40:39.9666620Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9666801Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9666815Z 
2025-01-10T12:40:39.9667033Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9667223Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9667485Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9667615Z     ???
2025-01-10T12:40:39.9667793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9667799Z 
2025-01-10T12:40:39.9667921Z >   ???
2025-01-10T12:40:39.9668128Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9668252Z E   
2025-01-10T12:40:39.9668617Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9668812Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9668929Z E          ...
2025-01-10T12:40:39.9669076Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9669279Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9669470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9669589Z E          ...
2025-01-10T12:40:39.9669735Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9669944Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9670113Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9670118Z 
2025-01-10T12:40:39.9670276Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9670723Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-10T12:40:39.9670730Z 
2025-01-10T12:40:39.9671135Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7ae70>
2025-01-10T12:40:39.9671407Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9671546Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9671551Z 
2025-01-10T12:40:39.9671758Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9672094Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9672229Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9672346Z         try:
2025-01-10T12:40:39.9672576Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9672711Z         except KeyError:
2025-01-10T12:40:39.9672949Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9673072Z     
2025-01-10T12:40:39.9673226Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9673378Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9673542Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9673776Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9673930Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9674085Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9674276Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9674291Z 
2025-01-10T12:40:39.9674511Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9674703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9674709Z 
2025-01-10T12:40:39.9674945Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9675089Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9675277Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9675415Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9675662Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9675804Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9675987Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9676259Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9676399Z err_msg = None
2025-01-10T12:40:39.9676414Z 
2025-01-10T12:40:39.9676602Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9676743Z         if err_msg is None:
2025-01-10T12:40:39.9676908Z             if left.shape != right.shape:
2025-01-10T12:40:39.9677053Z                 raise_assert_detail(
2025-01-10T12:40:39.9677302Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9677430Z                 )
2025-01-10T12:40:39.9677560Z     
2025-01-10T12:40:39.9677688Z             diff = 0
2025-01-10T12:40:39.9677885Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9678204Z                 # count up differences
2025-01-10T12:40:39.9678510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9678644Z                     diff += 1
2025-01-10T12:40:39.9678773Z     
2025-01-10T12:40:39.9678923Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9679149Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9679458Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9679636Z E           AssertionError: Series are different
2025-01-10T12:40:39.9679771Z E           
2025-01-10T12:40:39.9679943Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9680611Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9681215Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9681951Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9681958Z 
2025-01-10T12:40:39.9682512Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9682943Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-10T12:40:39.9682957Z 
2025-01-10T12:40:39.9683292Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7af30>
2025-01-10T12:40:39.9683563Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9683705Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9683711Z 
2025-01-10T12:40:39.9683938Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9684123Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9684267Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9684389Z         try:
2025-01-10T12:40:39.9684634Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9684773Z         except KeyError:
2025-01-10T12:40:39.9685025Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9685150Z     
2025-01-10T12:40:39.9685312Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9685484Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9685636Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9685871Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9686035Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9686342Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9686537Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9686543Z 
2025-01-10T12:40:39.9686767Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9686961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9686966Z 
2025-01-10T12:40:39.9687207Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9687537Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9687736Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9687878Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9688115Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9688270Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9688460Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9688633Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9688788Z err_msg = None
2025-01-10T12:40:39.9688793Z 
2025-01-10T12:40:39.9688987Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9689129Z         if err_msg is None:
2025-01-10T12:40:39.9689303Z             if left.shape != right.shape:
2025-01-10T12:40:39.9689451Z                 raise_assert_detail(
2025-01-10T12:40:39.9689704Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9689849Z                 )
2025-01-10T12:40:39.9689974Z     
2025-01-10T12:40:39.9690113Z             diff = 0
2025-01-10T12:40:39.9690303Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9690460Z                 # count up differences
2025-01-10T12:40:39.9690761Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9691058Z                     diff += 1
2025-01-10T12:40:39.9691180Z     
2025-01-10T12:40:39.9691335Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9691560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9691860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9692036Z E           AssertionError: Series are different
2025-01-10T12:40:39.9692170Z E           
2025-01-10T12:40:39.9692345Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9693036Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9693733Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9694426Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9694434Z 
2025-01-10T12:40:39.9694974Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9695342Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-10T12:40:39.9695348Z 
2025-01-10T12:40:39.9695551Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9695744Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9695887Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9696218Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9696556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9696709Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9696844Z err_msg = None
2025-01-10T12:40:39.9696850Z 
2025-01-10T12:40:39.9697026Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9697186Z         if err_msg is None:
2025-01-10T12:40:39.9697349Z             if left.shape != right.shape:
2025-01-10T12:40:39.9697506Z                 raise_assert_detail(
2025-01-10T12:40:39.9697743Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9697873Z                 )
2025-01-10T12:40:39.9697993Z     
2025-01-10T12:40:39.9698128Z             diff = 0
2025-01-10T12:40:39.9698311Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9698463Z                 # count up differences
2025-01-10T12:40:39.9698745Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9698911Z                     diff += 1
2025-01-10T12:40:39.9699033Z     
2025-01-10T12:40:39.9699172Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9699407Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9699679Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9700116Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9700244Z E           
2025-01-10T12:40:39.9700441Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9700846Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9701275Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9701282Z 
2025-01-10T12:40:39.9701773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9701779Z 
2025-01-10T12:40:39.9702065Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9702071Z 
2025-01-10T12:40:39.9702466Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7b170>
2025-01-10T12:40:39.9702815Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>, attr = 'nu'
2025-01-10T12:40:39.9702821Z 
2025-01-10T12:40:39.9703059Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9703273Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9703421Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9703561Z         try:
2025-01-10T12:40:39.9703802Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9703952Z         except KeyError:
2025-01-10T12:40:39.9704183Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9704325Z     
2025-01-10T12:40:39.9704477Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9704645Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9704796Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9705033Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9705186Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9705340Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9705533Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9705539Z 
2025-01-10T12:40:39.9705864Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9706208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9706466Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9706596Z     ???
2025-01-10T12:40:39.9706785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9706800Z 
2025-01-10T12:40:39.9706928Z >   ???
2025-01-10T12:40:39.9707145Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9707274Z E   
2025-01-10T12:40:39.9707504Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9707694Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9707829Z E          ...
2025-01-10T12:40:39.9707978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9708205Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9708408Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9708540Z E          ...
2025-01-10T12:40:39.9708692Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9708914Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9709095Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9709101Z 
2025-01-10T12:40:39.9709422Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9709818Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-10T12:40:39.9709833Z 
2025-01-10T12:40:39.9710051Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9710269Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9710431Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9710662Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9710884Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9711053Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9711185Z err_msg = None
2025-01-10T12:40:39.9711190Z 
2025-01-10T12:40:39.9711378Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9711529Z         if err_msg is None:
2025-01-10T12:40:39.9711697Z             if left.shape != right.shape:
2025-01-10T12:40:39.9711855Z                 raise_assert_detail(
2025-01-10T12:40:39.9712105Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9712236Z                 )
2025-01-10T12:40:39.9712358Z     
2025-01-10T12:40:39.9712494Z             diff = 0
2025-01-10T12:40:39.9712680Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9712835Z                 # count up differences
2025-01-10T12:40:39.9713131Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9713273Z                     diff += 1
2025-01-10T12:40:39.9713393Z     
2025-01-10T12:40:39.9713554Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9713785Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9714087Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9714295Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9714430Z E           
2025-01-10T12:40:39.9714629Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9715092Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9715718Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9715726Z 
2025-01-10T12:40:39.9716399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9716416Z 
2025-01-10T12:40:39.9716709Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9716715Z 
2025-01-10T12:40:39.9717113Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7b230>
2025-01-10T12:40:39.9717406Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9717558Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9717564Z 
2025-01-10T12:40:39.9717801Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9718011Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9718158Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9718288Z         try:
2025-01-10T12:40:39.9718531Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9718681Z         except KeyError:
2025-01-10T12:40:39.9718923Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9719229Z     
2025-01-10T12:40:39.9719379Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9719525Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9719669Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9719884Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9720037Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9720194Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9720392Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9720398Z 
2025-01-10T12:40:39.9720610Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9720804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9721040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9721167Z     ???
2025-01-10T12:40:39.9721354Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9721367Z 
2025-01-10T12:40:39.9744322Z >   ???
2025-01-10T12:40:39.9744567Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9744679Z E   
2025-01-10T12:40:39.9744896Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9745077Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9745206Z E          ...
2025-01-10T12:40:39.9745355Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9745591Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9745809Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9745936Z E          ...
2025-01-10T12:40:39.9746233Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9746458Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9746659Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9746678Z 
2025-01-10T12:40:39.9746827Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9747147Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-10T12:40:39.9747153Z 
2025-01-10T12:40:39.9747345Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9747553Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9747718Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9748120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9748326Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9748467Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9748609Z err_msg = None
2025-01-10T12:40:39.9748614Z 
2025-01-10T12:40:39.9748786Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9748928Z         if err_msg is None:
2025-01-10T12:40:39.9749069Z             if left.shape != right.shape:
2025-01-10T12:40:39.9749203Z                 raise_assert_detail(
2025-01-10T12:40:39.9749424Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9749543Z                 )
2025-01-10T12:40:39.9749653Z     
2025-01-10T12:40:39.9749776Z             diff = 0
2025-01-10T12:40:39.9749972Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9750126Z                 # count up differences
2025-01-10T12:40:39.9750439Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9750582Z                     diff += 1
2025-01-10T12:40:39.9750719Z     
2025-01-10T12:40:39.9750857Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9751090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9751395Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9751756Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9751884Z E           
2025-01-10T12:40:39.9752086Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9752564Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9752983Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9752999Z 
2025-01-10T12:40:39.9753485Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9753491Z 
2025-01-10T12:40:39.9753760Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9753773Z 
2025-01-10T12:40:39.9754154Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7b2f0>
2025-01-10T12:40:39.9754519Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>, attr = 'f_lu'
2025-01-10T12:40:39.9754526Z 
2025-01-10T12:40:39.9754764Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9754982Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9755130Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9755265Z         try:
2025-01-10T12:40:39.9755510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9755659Z         except KeyError:
2025-01-10T12:40:39.9755892Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9756029Z     
2025-01-10T12:40:39.9756311Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9756489Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9756655Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9756883Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9757038Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9757195Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9757388Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9757394Z 
2025-01-10T12:40:39.9757765Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9757977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9758226Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9758358Z     ???
2025-01-10T12:40:39.9758545Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9758558Z 
2025-01-10T12:40:39.9758693Z >   ???
2025-01-10T12:40:39.9758924Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9759045Z E   
2025-01-10T12:40:39.9759270Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9759457Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9759597Z E          ...
2025-01-10T12:40:39.9759749Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9759974Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9760179Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9760314Z E          ...
2025-01-10T12:40:39.9760463Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9760683Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9760864Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9761059Z 
2025-01-10T12:40:39.9761229Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9761604Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-10T12:40:39.9761610Z 
2025-01-10T12:40:39.9761831Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9762063Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9762230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9762475Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9762689Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9762860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9762991Z err_msg = None
2025-01-10T12:40:39.9762996Z 
2025-01-10T12:40:39.9763191Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9763353Z         if err_msg is None:
2025-01-10T12:40:39.9763512Z             if left.shape != right.shape:
2025-01-10T12:40:39.9763669Z                 raise_assert_detail(
2025-01-10T12:40:39.9763915Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9764051Z                 )
2025-01-10T12:40:39.9764174Z     
2025-01-10T12:40:39.9764312Z             diff = 0
2025-01-10T12:40:39.9764503Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9764662Z                 # count up differences
2025-01-10T12:40:39.9764963Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9765109Z                     diff += 1
2025-01-10T12:40:39.9765232Z     
2025-01-10T12:40:39.9765397Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9765630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9765931Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9766285Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9766413Z E           
2025-01-10T12:40:39.9766612Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9767077Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9767703Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9767711Z 
2025-01-10T12:40:39.9768276Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9768282Z 
2025-01-10T12:40:39.9768576Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9768582Z 
2025-01-10T12:40:39.9768982Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7ba70>
2025-01-10T12:40:39.9769269Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9769412Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9769417Z 
2025-01-10T12:40:39.9769655Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9769862Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9770007Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9770141Z         try:
2025-01-10T12:40:39.9770393Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9770531Z         except KeyError:
2025-01-10T12:40:39.9770965Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9771072Z     
2025-01-10T12:40:39.9771208Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9771344Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9771486Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9771680Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9771815Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9771949Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9772121Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9772239Z             else:
2025-01-10T12:40:39.9772391Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9772548Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9772562Z 
2025-01-10T12:40:39.9772742Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9772913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9773135Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9773249Z     ???
2025-01-10T12:40:39.9773410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9773415Z 
2025-01-10T12:40:39.9773529Z >   ???
2025-01-10T12:40:39.9773719Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9773834Z E   
2025-01-10T12:40:39.9774018Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9774186Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9774302Z E          ...
2025-01-10T12:40:39.9774442Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9774636Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9774799Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9774915Z E          ...
2025-01-10T12:40:39.9775040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9775261Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9775433Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9775439Z 
2025-01-10T12:40:39.9775581Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9775896Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-10T12:40:39.9775901Z 
2025-01-10T12:40:39.9776239Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9776577Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9776733Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9776932Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9777110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9777261Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9777374Z err_msg = None
2025-01-10T12:40:39.9777380Z 
2025-01-10T12:40:39.9777545Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9777669Z         if err_msg is None:
2025-01-10T12:40:39.9777819Z             if left.shape != right.shape:
2025-01-10T12:40:39.9777951Z                 raise_assert_detail(
2025-01-10T12:40:39.9778173Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9778287Z                 )
2025-01-10T12:40:39.9778407Z     
2025-01-10T12:40:39.9778534Z             diff = 0
2025-01-10T12:40:39.9778699Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9778842Z                 # count up differences
2025-01-10T12:40:39.9779097Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9779225Z                     diff += 1
2025-01-10T12:40:39.9779491Z     
2025-01-10T12:40:39.9779632Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9779836Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9780101Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9780270Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9780390Z E           
2025-01-10T12:40:39.9780556Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9780973Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9781391Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9781411Z 
2025-01-10T12:40:39.9781877Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9781882Z 
2025-01-10T12:40:39.9782141Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9782147Z 
2025-01-10T12:40:39.9782500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7bb30>
2025-01-10T12:40:39.9782761Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9782895Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9782901Z 
2025-01-10T12:40:39.9783110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9783298Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9783432Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9783564Z         try:
2025-01-10T12:40:39.9783783Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9783926Z         except KeyError:
2025-01-10T12:40:39.9784146Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9784267Z     
2025-01-10T12:40:39.9784403Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9784551Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9784691Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9784890Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9785149Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9785298Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9785478Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9785594Z             else:
2025-01-10T12:40:39.9785752Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9785920Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9785937Z 
2025-01-10T12:40:39.9786282Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9786468Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9786703Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9786823Z     ???
2025-01-10T12:40:39.9786995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9787001Z 
2025-01-10T12:40:39.9787118Z >   ???
2025-01-10T12:40:39.9787329Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9787450Z E   
2025-01-10T12:40:39.9787653Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9787832Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9787949Z E          ...
2025-01-10T12:40:39.9788095Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9788296Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9788638Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9788750Z E          ...
2025-01-10T12:40:39.9788895Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9789108Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9789279Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9789285Z 
2025-01-10T12:40:39.9789437Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9789775Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-10T12:40:39.9789790Z 
2025-01-10T12:40:39.9789997Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9790200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9790363Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9790586Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9790801Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9790960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9791086Z err_msg = None
2025-01-10T12:40:39.9791091Z 
2025-01-10T12:40:39.9791272Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9791403Z         if err_msg is None:
2025-01-10T12:40:39.9791565Z             if left.shape != right.shape:
2025-01-10T12:40:39.9791714Z                 raise_assert_detail(
2025-01-10T12:40:39.9791957Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9792080Z                 )
2025-01-10T12:40:39.9792205Z     
2025-01-10T12:40:39.9792327Z             diff = 0
2025-01-10T12:40:39.9792512Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9792659Z                 # count up differences
2025-01-10T12:40:39.9792953Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9793086Z                     diff += 1
2025-01-10T12:40:39.9793200Z     
2025-01-10T12:40:39.9793350Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9793568Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9793858Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9794042Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9794311Z E           
2025-01-10T12:40:39.9794500Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9794938Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9795407Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9795413Z 
2025-01-10T12:40:39.9795913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9795919Z 
2025-01-10T12:40:39.9796324Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9796331Z 
2025-01-10T12:40:39.9796682Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7bcb0>
2025-01-10T12:40:39.9796957Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9797086Z attr = 'j_blues'
2025-01-10T12:40:39.9797251Z 
2025-01-10T12:40:39.9797489Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9797680Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9797809Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9797934Z         try:
2025-01-10T12:40:39.9798149Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9798289Z         except KeyError:
2025-01-10T12:40:39.9798506Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9798619Z     
2025-01-10T12:40:39.9798743Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9798937Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9799080Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9799287Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9799425Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9799586Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9799765Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9799876Z             else:
2025-01-10T12:40:39.9800029Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9800193Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9800199Z 
2025-01-10T12:40:39.9800403Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9800598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9800908Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9801031Z     ???
2025-01-10T12:40:39.9801237Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9801244Z 
2025-01-10T12:40:39.9801359Z >   ???
2025-01-10T12:40:39.9801557Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9801675Z E   
2025-01-10T12:40:39.9801892Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9802078Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9802202Z E          ...
2025-01-10T12:40:39.9802350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9802566Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9802763Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9802886Z E          ...
2025-01-10T12:40:39.9803038Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9803250Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9803571Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9803579Z 
2025-01-10T12:40:39.9803719Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9804121Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-10T12:40:39.9804127Z 
2025-01-10T12:40:39.9804335Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9804524Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9804669Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9804880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9805082Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9805216Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9805334Z err_msg = None
2025-01-10T12:40:39.9805339Z 
2025-01-10T12:40:39.9805508Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9805644Z         if err_msg is None:
2025-01-10T12:40:39.9805805Z             if left.shape != right.shape:
2025-01-10T12:40:39.9805946Z                 raise_assert_detail(
2025-01-10T12:40:39.9806315Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9806607Z                 )
2025-01-10T12:40:39.9806718Z     
2025-01-10T12:40:39.9806828Z             diff = 0
2025-01-10T12:40:39.9807015Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9807146Z                 # count up differences
2025-01-10T12:40:39.9807406Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9807523Z                     diff += 1
2025-01-10T12:40:39.9807642Z     
2025-01-10T12:40:39.9807782Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9808028Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9808311Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9808495Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9808610Z E           
2025-01-10T12:40:39.9808788Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9809202Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9809637Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9809644Z 
2025-01-10T12:40:39.9810127Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9810138Z 
2025-01-10T12:40:39.9810401Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9810406Z 
2025-01-10T12:40:39.9810768Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4a70>
2025-01-10T12:40:39.9811027Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9811150Z attr = 'lines'
2025-01-10T12:40:39.9811155Z 
2025-01-10T12:40:39.9811366Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9811551Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9811680Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9811800Z         try:
2025-01-10T12:40:39.9812010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9812293Z         except KeyError:
2025-01-10T12:40:39.9812510Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9812623Z     
2025-01-10T12:40:39.9812770Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9812914Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9813053Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9813281Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9813422Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9813563Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9813741Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9813863Z             else:
2025-01-10T12:40:39.9814026Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9814201Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9814207Z 
2025-01-10T12:40:39.9814419Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9814607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9814841Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9814956Z     ???
2025-01-10T12:40:39.9815134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9815140Z 
2025-01-10T12:40:39.9815368Z >   ???
2025-01-10T12:40:39.9815559Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9815673Z E   
2025-01-10T12:40:39.9815869Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9816196Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9816316Z E          ...
2025-01-10T12:40:39.9816462Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9816680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9816872Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9817001Z E          ...
2025-01-10T12:40:39.9817147Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9817363Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9817528Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9817533Z 
2025-01-10T12:40:39.9817684Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9818186Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-10T12:40:39.9818192Z 
2025-01-10T12:40:39.9818563Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4b30>
2025-01-10T12:40:39.9818827Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9818966Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9818971Z 
2025-01-10T12:40:39.9819200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9819384Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9819538Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9819663Z         try:
2025-01-10T12:40:39.9819912Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9820046Z         except KeyError:
2025-01-10T12:40:39.9820272Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9820394Z     
2025-01-10T12:40:39.9820542Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9820696Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9820844Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9821072Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9821224Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9821368Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9821550Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9821556Z 
2025-01-10T12:40:39.9821763Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9822093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9822100Z 
2025-01-10T12:40:39.9822312Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9822446Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9822620Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9822755Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9822996Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9823130Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9823305Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9823435Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9823559Z err_msg = None
2025-01-10T12:40:39.9823565Z 
2025-01-10T12:40:39.9823744Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9823886Z         if err_msg is None:
2025-01-10T12:40:39.9824046Z             if left.shape != right.shape:
2025-01-10T12:40:39.9824186Z                 raise_assert_detail(
2025-01-10T12:40:39.9824423Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9824537Z                 )
2025-01-10T12:40:39.9824654Z     
2025-01-10T12:40:39.9824919Z             diff = 0
2025-01-10T12:40:39.9825092Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9825223Z                 # count up differences
2025-01-10T12:40:39.9825493Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9825617Z                     diff += 1
2025-01-10T12:40:39.9825722Z     
2025-01-10T12:40:39.9825861Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9826189Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9826473Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9826627Z E           AssertionError: Series are different
2025-01-10T12:40:39.9826747Z E           
2025-01-10T12:40:39.9826910Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9827513Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9828029Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9828540Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9828551Z 
2025-01-10T12:40:39.9829016Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9829520Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-10T12:40:39.9829526Z 
2025-01-10T12:40:39.9829880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4bf0>
2025-01-10T12:40:39.9830155Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9830446Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9830453Z 
2025-01-10T12:40:39.9830679Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9830858Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9830997Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9831112Z         try:
2025-01-10T12:40:39.9831351Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9831479Z         except KeyError:
2025-01-10T12:40:39.9831699Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9831812Z     
2025-01-10T12:40:39.9831948Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9832104Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9832243Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9832461Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9832598Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9832754Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9832927Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9832933Z 
2025-01-10T12:40:39.9833139Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9833316Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9833472Z 
2025-01-10T12:40:39.9833694Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9833842Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9834011Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9834142Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9834359Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9834496Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9834668Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9834799Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9834920Z err_msg = None
2025-01-10T12:40:39.9834926Z 
2025-01-10T12:40:39.9835100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9835230Z         if err_msg is None:
2025-01-10T12:40:39.9835382Z             if left.shape != right.shape:
2025-01-10T12:40:39.9835521Z                 raise_assert_detail(
2025-01-10T12:40:39.9835736Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9835854Z                 )
2025-01-10T12:40:39.9835966Z     
2025-01-10T12:40:39.9836221Z             diff = 0
2025-01-10T12:40:39.9836396Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9836542Z                 # count up differences
2025-01-10T12:40:39.9836806Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9836929Z                     diff += 1
2025-01-10T12:40:39.9837046Z     
2025-01-10T12:40:39.9837187Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9837394Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9837669Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9837829Z E           AssertionError: Series are different
2025-01-10T12:40:39.9837960Z E           
2025-01-10T12:40:39.9838127Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9838734Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9839513Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9840133Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9840140Z 
2025-01-10T12:40:39.9840630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9841031Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-10T12:40:39.9841038Z 
2025-01-10T12:40:39.9841243Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9841453Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9841765Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9841972Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9842170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9842316Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9842441Z err_msg = None
2025-01-10T12:40:39.9842446Z 
2025-01-10T12:40:39.9842617Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9842749Z         if err_msg is None:
2025-01-10T12:40:39.9842899Z             if left.shape != right.shape:
2025-01-10T12:40:39.9843037Z                 raise_assert_detail(
2025-01-10T12:40:39.9843241Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9843357Z                 )
2025-01-10T12:40:39.9843466Z     
2025-01-10T12:40:39.9843575Z             diff = 0
2025-01-10T12:40:39.9843754Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9843880Z                 # count up differences
2025-01-10T12:40:39.9844136Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9844250Z                     diff += 1
2025-01-10T12:40:39.9844362Z     
2025-01-10T12:40:39.9844492Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9844690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9844945Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9845124Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9845237Z E           
2025-01-10T12:40:39.9845405Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9845806Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9846348Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9846356Z 
2025-01-10T12:40:39.9846960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9846967Z 
2025-01-10T12:40:39.9847219Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9847231Z 
2025-01-10T12:40:39.9847562Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4e30>
2025-01-10T12:40:39.9847866Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>, attr = 'nu'
2025-01-10T12:40:39.9847879Z 
2025-01-10T12:40:39.9848084Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9848256Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9848383Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9848506Z         try:
2025-01-10T12:40:39.9848722Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9848855Z         except KeyError:
2025-01-10T12:40:39.9849053Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9849170Z     
2025-01-10T12:40:39.9849317Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9849477Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9849631Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9849862Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9850015Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9850159Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9850501Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9850507Z 
2025-01-10T12:40:39.9850704Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9850885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9851121Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9851240Z     ???
2025-01-10T12:40:39.9851420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9851431Z 
2025-01-10T12:40:39.9851545Z >   ???
2025-01-10T12:40:39.9851752Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9851862Z E   
2025-01-10T12:40:39.9852076Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9852242Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9852363Z E          ...
2025-01-10T12:40:39.9852496Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9852712Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9852897Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9853010Z E          ...
2025-01-10T12:40:39.9853143Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9853335Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9853489Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9853495Z 
2025-01-10T12:40:39.9853634Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9854074Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-10T12:40:39.9854081Z 
2025-01-10T12:40:39.9854268Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9854465Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9854616Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9854824Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9855031Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9855194Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9855319Z err_msg = None
2025-01-10T12:40:39.9855331Z 
2025-01-10T12:40:39.9855498Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9855637Z         if err_msg is None:
2025-01-10T12:40:39.9855893Z             if left.shape != right.shape:
2025-01-10T12:40:39.9856044Z                 raise_assert_detail(
2025-01-10T12:40:39.9856415Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9856531Z                 )
2025-01-10T12:40:39.9856648Z     
2025-01-10T12:40:39.9856779Z             diff = 0
2025-01-10T12:40:39.9856954Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9857090Z                 # count up differences
2025-01-10T12:40:39.9857359Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9857481Z                     diff += 1
2025-01-10T12:40:39.9857587Z     
2025-01-10T12:40:39.9857724Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9857931Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9858219Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9858410Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9858531Z E           
2025-01-10T12:40:39.9858709Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9859131Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9859703Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9859710Z 
2025-01-10T12:40:39.9860193Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9860199Z 
2025-01-10T12:40:39.9860464Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9860470Z 
2025-01-10T12:40:39.9860833Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4ef0>
2025-01-10T12:40:39.9861086Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9861225Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9861231Z 
2025-01-10T12:40:39.9861437Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9861627Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9861758Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9861864Z         try:
2025-01-10T12:40:39.9862085Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9862206Z         except KeyError:
2025-01-10T12:40:39.9862420Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9862531Z     
2025-01-10T12:40:39.9862667Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9862809Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9862946Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9863141Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9863272Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9863421Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9863594Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9863599Z 
2025-01-10T12:40:39.9863791Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9863959Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9864199Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9864314Z     ???
2025-01-10T12:40:39.9864491Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9864643Z 
2025-01-10T12:40:39.9864760Z >   ???
2025-01-10T12:40:39.9864963Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9865071Z E   
2025-01-10T12:40:39.9865271Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9865439Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9865553Z E          ...
2025-01-10T12:40:39.9865689Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9865884Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9866190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9866302Z E          ...
2025-01-10T12:40:39.9866435Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9866622Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9866781Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9866786Z 
2025-01-10T12:40:39.9866926Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9867307Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-10T12:40:39.9867313Z 
2025-01-10T12:40:39.9867502Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9867691Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9867995Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9868229Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9868461Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9868631Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9868769Z err_msg = None
2025-01-10T12:40:39.9868775Z 
2025-01-10T12:40:39.9868959Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9869118Z         if err_msg is None:
2025-01-10T12:40:39.9869279Z             if left.shape != right.shape:
2025-01-10T12:40:39.9869429Z                 raise_assert_detail(
2025-01-10T12:40:39.9869674Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9869805Z                 )
2025-01-10T12:40:39.9869925Z     
2025-01-10T12:40:39.9870070Z             diff = 0
2025-01-10T12:40:39.9870267Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9870417Z                 # count up differences
2025-01-10T12:40:39.9870716Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9870855Z                     diff += 1
2025-01-10T12:40:39.9870981Z     
2025-01-10T12:40:39.9871133Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9871371Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9871676Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9871875Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9872000Z E           
2025-01-10T12:40:39.9872198Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9872663Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9873740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9873748Z 
2025-01-10T12:40:39.9874452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9874459Z 
2025-01-10T12:40:39.9874761Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9874779Z 
2025-01-10T12:40:39.9875172Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4fb0>
2025-01-10T12:40:39.9875546Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>, attr = 'f_lu'
2025-01-10T12:40:39.9875552Z 
2025-01-10T12:40:39.9875787Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9875989Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9876314Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9876446Z         try:
2025-01-10T12:40:39.9876687Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9876832Z         except KeyError:
2025-01-10T12:40:39.9877069Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9877202Z     
2025-01-10T12:40:39.9877352Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9877522Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9877683Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9877909Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9878060Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9878359Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9878541Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9878547Z 
2025-01-10T12:40:39.9878756Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9878937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9879170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9879293Z     ???
2025-01-10T12:40:39.9879476Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9879489Z 
2025-01-10T12:40:39.9879614Z >   ???
2025-01-10T12:40:39.9879836Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9879947Z E   
2025-01-10T12:40:39.9880144Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9880323Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9880445Z E          ...
2025-01-10T12:40:39.9880593Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9880791Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9880970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9881092Z E          ...
2025-01-10T12:40:39.9881230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9881441Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9881613Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9881619Z 
2025-01-10T12:40:39.9881770Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9882206Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-10T12:40:39.9882212Z 
2025-01-10T12:40:39.9882403Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9882597Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9882755Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9882963Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9883155Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9883304Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9883418Z err_msg = None
2025-01-10T12:40:39.9883423Z 
2025-01-10T12:40:39.9883586Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9883859Z         if err_msg is None:
2025-01-10T12:40:39.9884005Z             if left.shape != right.shape:
2025-01-10T12:40:39.9884136Z                 raise_assert_detail(
2025-01-10T12:40:39.9884346Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9884459Z                 )
2025-01-10T12:40:39.9884562Z     
2025-01-10T12:40:39.9884684Z             diff = 0
2025-01-10T12:40:39.9884848Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9884990Z                 # count up differences
2025-01-10T12:40:39.9885239Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9885367Z                     diff += 1
2025-01-10T12:40:39.9885474Z     
2025-01-10T12:40:39.9885612Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9885811Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9886237Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9886412Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9886523Z E           
2025-01-10T12:40:39.9886691Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9887108Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9887684Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9887691Z 
2025-01-10T12:40:39.9888158Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9888164Z 
2025-01-10T12:40:39.9888416Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9888421Z 
2025-01-10T12:40:39.9888760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea5730>
2025-01-10T12:40:39.9889028Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9889155Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9889161Z 
2025-01-10T12:40:39.9889371Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9889558Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9889689Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9889815Z         try:
2025-01-10T12:40:39.9890030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9890152Z         except KeyError:
2025-01-10T12:40:39.9890371Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9890475Z     
2025-01-10T12:40:39.9890608Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9890749Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9890885Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9891079Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9891223Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9891356Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9891526Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9891633Z             else:
2025-01-10T12:40:39.9891778Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9891934Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9891946Z 
2025-01-10T12:40:39.9892133Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9892308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9892690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9892814Z     ???
2025-01-10T12:40:39.9892984Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9892989Z 
2025-01-10T12:40:39.9893107Z >   ???
2025-01-10T12:40:39.9893300Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9893421Z E   
2025-01-10T12:40:39.9893615Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9893786Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9893901Z E          ...
2025-01-10T12:40:39.9894049Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9894264Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9894446Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9894565Z E          ...
2025-01-10T12:40:39.9894705Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9894897Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9895064Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9895070Z 
2025-01-10T12:40:39.9895213Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9895665Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-10T12:40:39.9895782Z 
2025-01-10T12:40:39.9895994Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9896338Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9896496Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9896716Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9896921Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9897088Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9897208Z err_msg = None
2025-01-10T12:40:39.9897213Z 
2025-01-10T12:40:39.9897377Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9897510Z         if err_msg is None:
2025-01-10T12:40:39.9897672Z             if left.shape != right.shape:
2025-01-10T12:40:39.9897822Z                 raise_assert_detail(
2025-01-10T12:40:39.9898065Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9898196Z                 )
2025-01-10T12:40:39.9898308Z     
2025-01-10T12:40:39.9898426Z             diff = 0
2025-01-10T12:40:39.9898593Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9898727Z                 # count up differences
2025-01-10T12:40:39.9899024Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9899149Z                     diff += 1
2025-01-10T12:40:39.9899253Z     
2025-01-10T12:40:39.9899395Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9899592Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9899851Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9900014Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9900137Z E           
2025-01-10T12:40:39.9900300Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9900695Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9901250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9901258Z 
2025-01-10T12:40:39.9901714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9901725Z 
2025-01-10T12:40:39.9901982Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9901987Z 
2025-01-10T12:40:39.9902328Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea57f0>
2025-01-10T12:40:39.9902578Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9902700Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9902705Z 
2025-01-10T12:40:39.9902909Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9903087Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9903218Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9903332Z         try:
2025-01-10T12:40:39.9903538Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9903667Z         except KeyError:
2025-01-10T12:40:39.9903872Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9903987Z     
2025-01-10T12:40:39.9904116Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9904440Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9904582Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9904780Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9904930Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9905078Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9905247Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9905357Z             else:
2025-01-10T12:40:39.9905511Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9905677Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9905683Z 
2025-01-10T12:40:39.9905881Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9906190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9906426Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9906544Z     ???
2025-01-10T12:40:39.9906721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9906727Z 
2025-01-10T12:40:39.9906848Z >   ???
2025-01-10T12:40:39.9907037Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9907147Z E   
2025-01-10T12:40:39.9907337Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9907504Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9907612Z E          ...
2025-01-10T12:40:39.9907748Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9907943Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9908118Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9908236Z E          ...
2025-01-10T12:40:39.9908379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9908564Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9908729Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9908735Z 
2025-01-10T12:40:39.9908873Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9909263Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-10T12:40:39.9909269Z 
2025-01-10T12:40:39.9909488Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9909692Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9909837Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9910177Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9910378Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9910532Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9910646Z err_msg = None
2025-01-10T12:40:39.9910658Z 
2025-01-10T12:40:39.9910820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9910938Z         if err_msg is None:
2025-01-10T12:40:39.9911087Z             if left.shape != right.shape:
2025-01-10T12:40:39.9911234Z                 raise_assert_detail(
2025-01-10T12:40:39.9911457Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9911566Z                 )
2025-01-10T12:40:39.9911691Z     
2025-01-10T12:40:39.9911817Z             diff = 0
2025-01-10T12:40:39.9911988Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9912123Z                 # count up differences
2025-01-10T12:40:39.9912401Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9912532Z                     diff += 1
2025-01-10T12:40:39.9912635Z     
2025-01-10T12:40:39.9912768Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9912979Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9913389Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9913565Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9913690Z E           
2025-01-10T12:40:39.9913870Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9914272Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9914689Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9914702Z 
2025-01-10T12:40:39.9915212Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9915218Z 
2025-01-10T12:40:39.9915493Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9915498Z 
2025-01-10T12:40:39.9915842Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea5970>
2025-01-10T12:40:39.9916261Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9916386Z attr = 'j_blues'
2025-01-10T12:40:39.9916405Z 
2025-01-10T12:40:39.9916622Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9916798Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9916929Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9917058Z         try:
2025-01-10T12:40:39.9917285Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9917435Z         except KeyError:
2025-01-10T12:40:39.9917652Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9917762Z     
2025-01-10T12:40:39.9917889Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9918032Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9918161Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9918361Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9918489Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9918633Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9918961Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9919074Z             else:
2025-01-10T12:40:39.9919219Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9919404Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9919410Z 
2025-01-10T12:40:39.9919601Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9919771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9920012Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9920126Z     ???
2025-01-10T12:40:39.9920292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9920298Z 
2025-01-10T12:40:39.9920401Z >   ???
2025-01-10T12:40:39.9920614Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9920729Z E   
2025-01-10T12:40:39.9920927Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9921116Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9921233Z E          ...
2025-01-10T12:40:39.9921389Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9921600Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9921797Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9922076Z E          ...
2025-01-10T12:40:39.9922226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9922428Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9922610Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9922616Z 
2025-01-10T12:40:39.9922770Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9923067Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-10T12:40:39.9923073Z 
2025-01-10T12:40:39.9923465Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9923618Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9924031Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c72ba8d0>
2025-01-10T12:40:39.9924037Z 
2025-01-10T12:40:39.9924276Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9924573Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9924776Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9924989Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9925176Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9925315Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9925452Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9925632Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9925638Z 
2025-01-10T12:40:39.9925801Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9925971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9925977Z 
2025-01-10T12:40:39.9926580Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4a958a0>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-01-10T12:40:39.9926693Z         0.01476858],
2025-01-10T12:40:39.9926891Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-10T12:40:39.9927008Z         0.01473787]]))
2025-01-10T12:40:39.9927398Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9927404Z 
2025-01-10T12:40:39.9927523Z     @wraps(func)
2025-01-10T12:40:39.9927647Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9927791Z         with self._recreate_cm():
2025-01-10T12:40:39.9927923Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9928051Z E           AssertionError: 
2025-01-10T12:40:39.9928362Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9928486Z E           
2025-01-10T12:40:39.9928636Z E           Mismatched elements: 80 / 584480 (0.0137%)
2025-01-10T12:40:39.9928817Z E           Max absolute difference among violations: 1.
2025-01-10T12:40:39.9928984Z E           Max relative difference among violations: 1.
2025-01-10T12:40:39.9929197Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9929377Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9929544Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:39.9929760Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9929910Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9930078Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:39.9930093Z 
2025-01-10T12:40:39.9930389Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9930632Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-10T12:40:39.9930638Z 
2025-01-10T12:40:39.9930980Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9931288Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9931701Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c16e4350>
2025-01-10T12:40:39.9931714Z 
2025-01-10T12:40:39.9931954Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9932224Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9932415Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9932619Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9932821Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9932970Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9933110Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9933284Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9933292Z 
2025-01-10T12:40:39.9933465Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9933648Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9933653Z 
2025-01-10T12:40:39.9934291Z args = (<function assert_allclose.<locals>.compare at 0x7f22c9d651c0>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-10T12:40:39.9934719Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9934726Z 
2025-01-10T12:40:39.9934822Z     @wraps(func)
2025-01-10T12:40:39.9934913Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9935015Z         with self._recreate_cm():
2025-01-10T12:40:39.9935104Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9935197Z E           AssertionError: 
2025-01-10T12:40:39.9935306Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9935384Z E           
2025-01-10T12:40:39.9935489Z E           Mismatched elements: 775 / 29224 (2.65%)
2025-01-10T12:40:39.9935629Z E           Max absolute difference among violations: 4005
2025-01-10T12:40:39.9935755Z E           Max relative difference among violations: 415.5
2025-01-10T12:40:39.9935888Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:39.9936024Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:39.9936029Z 
2025-01-10T12:40:39.9936462Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9936641Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-10T12:40:39.9936644Z 
2025-01-10T12:40:39.9937050Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9937155Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9937432Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c8077a70>
2025-01-10T12:40:39.9937441Z 
2025-01-10T12:40:39.9937588Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9937771Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9937898Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9938046Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9938168Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9938271Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9938365Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9938476Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9938485Z 
2025-01-10T12:40:39.9938595Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9938721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9938725Z 
2025-01-10T12:40:39.9939131Z args = (<function assert_allclose.<locals>.compare at 0x7f22c72f6fc0>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-10T12:40:39.9939527Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9939531Z 
2025-01-10T12:40:39.9939619Z     @wraps(func)
2025-01-10T12:40:39.9939709Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9939804Z         with self._recreate_cm():
2025-01-10T12:40:39.9939894Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9939991Z E           AssertionError: 
2025-01-10T12:40:39.9940099Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9940181Z E           
2025-01-10T12:40:39.9940290Z E           Mismatched elements: 1843 / 29224 (6.31%)
2025-01-10T12:40:39.9940423Z E           Max absolute difference among violations: 4046
2025-01-10T12:40:39.9940562Z E           Max relative difference among violations: 54.65079365
2025-01-10T12:40:39.9940686Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:39.9940829Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:39.9940833Z 
2025-01-10T12:40:39.9941035Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9941192Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-10T12:40:39.9941196Z 
2025-01-10T12:40:39.9941424Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9941512Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9941779Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22db095b50>
2025-01-10T12:40:39.9941794Z 
2025-01-10T12:40:39.9941941Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9942113Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9942236Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9942375Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9942500Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9942597Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9942689Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9942798Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9942802Z 
2025-01-10T12:40:39.9942908Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9943027Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9943030Z 
2025-01-10T12:40:39.9943400Z args = (<function assert_allclose.<locals>.compare at 0x7f22c72f7060>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9943479Z        [1., 1., .....,
2025-01-10T12:40:39.9943566Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9943644Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9943732Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T12:40:39.9943993Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9944001Z 
2025-01-10T12:40:39.9944086Z     @wraps(func)
2025-01-10T12:40:39.9944177Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9944272Z         with self._recreate_cm():
2025-01-10T12:40:39.9944362Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9944456Z E           AssertionError: 
2025-01-10T12:40:39.9944574Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9944647Z E           
2025-01-10T12:40:39.9944760Z E           Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:39.9944901Z E           Max absolute difference among violations: 0.99984222
2025-01-10T12:40:39.9945045Z E           Max relative difference among violations: 6337.12154973
2025-01-10T12:40:39.9945154Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945249Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945342Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.9945540Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945629Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945723Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.9945727Z 
2025-01-10T12:40:39.9945944Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9946272Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-10T12:40:39.9946279Z 
2025-01-10T12:40:39.9946547Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9946626Z attr = 'lines'
2025-01-10T12:40:39.9946908Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ca7527e0>
2025-01-10T12:40:39.9946912Z 
2025-01-10T12:40:39.9947061Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9947236Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9947370Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9947511Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9947643Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9947739Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9947842Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9947948Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9947952Z 
2025-01-10T12:40:39.9948064Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9948188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9948191Z 
2025-01-10T12:40:39.9948661Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4abd8a0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-10T12:40:39.9948776Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-10T12:40:39.9949044Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9949049Z 
2025-01-10T12:40:39.9949134Z     @wraps(func)
2025-01-10T12:40:39.9949224Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9949317Z         with self._recreate_cm():
2025-01-10T12:40:39.9949406Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9949568Z E           AssertionError: 
2025-01-10T12:40:39.9949716Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9949977Z E           
2025-01-10T12:40:39.9950323Z E           Mismatched elements: 13481 / 263016 (5.13%)
2025-01-10T12:40:39.9950552Z E           Max absolute difference among violations: 2.93004431e+13
2025-01-10T12:40:39.9950718Z E           Max relative difference among violations: 6160.70416047
2025-01-10T12:40:39.9950963Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:39.9951094Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T12:40:39.9951368Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:39.9951633Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:39.9951758Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T12:40:39.9951964Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:39.9951969Z 
2025-01-10T12:40:39.9952228Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9952480Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-10T12:40:39.9952485Z 
2025-01-10T12:40:39.9952764Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9952913Z attr = 'f_lu'
2025-01-10T12:40:39.9953250Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ca7506b0>
2025-01-10T12:40:39.9953388Z 
2025-01-10T12:40:39.9953570Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9953842Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9954011Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9954211Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9954383Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9954540Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9954658Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9954891Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9954896Z 
2025-01-10T12:40:39.9955069Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9955231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9955240Z 
2025-01-10T12:40:39.9955778Z args = (<function assert_allclose.<locals>.compare at 0x7f22c72f58a0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-10T12:40:39.9955903Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-10T12:40:39.9956505Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9956512Z 
2025-01-10T12:40:39.9956627Z     @wraps(func)
2025-01-10T12:40:39.9956800Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9956963Z         with self._recreate_cm():
2025-01-10T12:40:39.9957067Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9957288Z E           AssertionError: 
2025-01-10T12:40:39.9957431Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9957590Z E           
2025-01-10T12:40:39.9957725Z E           Mismatched elements: 2241 / 29224 (7.67%)
2025-01-10T12:40:39.9957907Z E           Max absolute difference among violations: 2.92713618
2025-01-10T12:40:39.9958123Z E           Max relative difference among violations: 6160.70416047
2025-01-10T12:40:39.9958396Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:39.9958528Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T12:40:39.9959206Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:39.9959366Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T12:40:39.9959371Z 
2025-01-10T12:40:39.9959747Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9959973Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-10T12:40:39.9959978Z 
2025-01-10T12:40:39.9960225Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9960438Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9960736Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22f6ea51c0>
2025-01-10T12:40:39.9960745Z 
2025-01-10T12:40:39.9960976Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9961206Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9961343Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9961601Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9961756Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9961927Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9962053Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9962206Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9962211Z 
2025-01-10T12:40:39.9962390Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9962585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9962721Z 
2025-01-10T12:40:39.9963244Z args = (<function assert_allclose.<locals>.compare at 0x7f22f5f602c0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-10T12:40:39.9963385Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-10T12:40:39.9963690Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9963695Z 
2025-01-10T12:40:39.9963851Z     @wraps(func)
2025-01-10T12:40:39.9964037Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9964162Z         with self._recreate_cm():
2025-01-10T12:40:39.9964317Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9964435Z E           AssertionError: 
2025-01-10T12:40:39.9964639Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9964810Z E           
2025-01-10T12:40:39.9964946Z E           Mismatched elements: 40040 / 584480 (6.85%)
2025-01-10T12:40:39.9965159Z E           Max absolute difference among violations: 604603.16180317
2025-01-10T12:40:39.9965328Z E           Max relative difference among violations: 4.12352828e+47
2025-01-10T12:40:39.9965595Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:39.9965750Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T12:40:39.9965957Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:39.9966283Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:39.9966447Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T12:40:39.9966704Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:39.9966710Z 
2025-01-10T12:40:39.9966957Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9967190Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-10T12:40:39.9967200Z 
2025-01-10T12:40:39.9967445Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9967591Z attr = 'iterations_w'
2025-01-10T12:40:39.9967891Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ca65aba0>
2025-01-10T12:40:39.9967895Z 
2025-01-10T12:40:39.9968148Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9968254Z         "attr",
2025-01-10T12:40:39.9968394Z         [
2025-01-10T12:40:39.9968540Z             "iterations_w",
2025-01-10T12:40:39.9968655Z             "iterations_t_rad",
2025-01-10T12:40:39.9968999Z             "iterations_electron_densities",
2025-01-10T12:40:39.9969124Z             "iterations_t_inner",
2025-01-10T12:40:39.9969261Z         ],
2025-01-10T12:40:39.9969383Z     )
2025-01-10T12:40:39.9969636Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9969830Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9970011Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9970128Z             actual = actual.value
2025-01-10T12:40:39.9970303Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9970460Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.9970736Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:39.9970741Z 
2025-01-10T12:40:39.9970944Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:39.9971091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9971327Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9971430Z     ???
2025-01-10T12:40:39.9971632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9971637Z 
2025-01-10T12:40:39.9971756Z >   ???
2025-01-10T12:40:39.9972004Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9972241Z E   
2025-01-10T12:40:39.9972471Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:39.9972647Z E   [index]: [0, 1]
2025-01-10T12:40:39.9972803Z E   [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-10T12:40:39.9972992Z E   [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T12:40:39.9973195Z E   At positional index 1, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:39.9973200Z 
2025-01-10T12:40:39.9973357Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9973535Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:39.9974090Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:39.9974595Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:39.9974818Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T12:40:39.9974831Z 
2025-01-10T12:40:39.9974835Z 
2025-01-10T12:40:39.9975141Z Packets:                                                                                   4031/? [04:51<00:00, 10.36it/s]   [A
2025-01-10T12:40:39.9975150Z 
2025-01-10T12:40:39.9975392Z Packets:                                                                                   14195/? [04:51<00:00, 60.17it/s][A
2025-01-10T12:40:39.9975397Z 
2025-01-10T12:40:39.9975771Z Packets:                                                                                   24680/? [04:51<00:00, 133.50it/s][A
2025-01-10T12:40:39.9975776Z 
2025-01-10T12:40:39.9976245Z Packets:                                                                                   35101/? [04:51<00:00, 237.44it/s][A
2025-01-10T12:40:39.9976943Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:51<00:00, 102.58s/it]
2025-01-10T12:40:39.9976949Z 
2025-01-10T12:40:39.9977263Z Packets:                                                                                   44030/? [04:51<00:00, 237.44it/s][A
2025-01-10T12:40:39.9977278Z 
2025-01-10T12:40:39.9977518Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-10T12:40:39.9977523Z 
2025-01-10T12:40:39.9977952Z Packets:   ██████████████████▊                                                             9436/40000 [00:00<00:00, 35158.86it/s][A
2025-01-10T12:40:39.9977958Z 
2025-01-10T12:40:39.9978479Z Packets:   █████████████████████████▉                                                      12952/40000 [00:00<00:00, 34991.61it/s][A
2025-01-10T12:40:39.9978485Z 
2025-01-10T12:40:39.9978853Z Packets:   ████████████████████████████████▉                                               16440/40000 [00:00<00:00, 34546.62it/s][A
2025-01-10T12:40:39.9978858Z 
2025-01-10T12:40:39.9979250Z Packets:   ███████████████████████████████████████▊                                        19916/40000 [00:00<00:00, 34611.57it/s][A
2025-01-10T12:40:39.9979267Z 
2025-01-10T12:40:39.9979592Z Packets:   ██████████████████████████████████████████████▉                                 23444/40000 [00:00<00:00, 34820.22it/s][A
2025-01-10T12:40:39.9979632Z 
2025-01-10T12:40:39.9979960Z Packets:   █████████████████████████████████████████████████████▉                          26986/40000 [00:00<00:00, 35003.11it/s][A
2025-01-10T12:40:39.9979965Z 
2025-01-10T12:40:39.9980327Z Packets:   ████████████████████████████████████████████████████████████▉                   30486/40000 [00:00<00:00, 34989.89it/s][A
2025-01-10T12:40:39.9980346Z 
2025-01-10T12:40:39.9980748Z Packets:   ███████████████████████████████████████████████████████████████████▉            33985/40000 [00:00<00:00, 34908.99it/s][A
2025-01-10T12:40:39.9980753Z 
2025-01-10T12:40:39.9981178Z Packets:   ███████████████████████████████████████████████████████████████████████████     37539/40000 [00:01<00:00, 35098.48it/s][A
2025-01-10T12:40:39.9981529Z Iterations:                                                                                6/? [04:54<00:00, 68.52s/it] 
2025-01-10T12:40:39.9981534Z 
2025-01-10T12:40:39.9981899Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35098.48it/s][A
2025-01-10T12:40:39.9982111Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:39.9982720Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:39.9982996Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-10T12:40:39.9983000Z 
2025-01-10T12:40:39.9983288Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9983406Z attr = 'iterations_t_rad'
2025-01-10T12:40:39.9983727Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0ea17f0>
2025-01-10T12:40:39.9983742Z 
2025-01-10T12:40:39.9983935Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9984095Z         "attr",
2025-01-10T12:40:39.9984201Z         [
2025-01-10T12:40:39.9984350Z             "iterations_w",
2025-01-10T12:40:39.9984465Z             "iterations_t_rad",
2025-01-10T12:40:39.9984682Z             "iterations_electron_densities",
2025-01-10T12:40:39.9984818Z             "iterations_t_inner",
2025-01-10T12:40:39.9984958Z         ],
2025-01-10T12:40:39.9985062Z     )
2025-01-10T12:40:39.9985427Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9985641Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9985780Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9985931Z             actual = actual.value
2025-01-10T12:40:39.9986230Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9986454Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.9986658Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:39.9986663Z 
2025-01-10T12:40:39.9986914Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:39.9987061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9987299Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9987402Z     ???
2025-01-10T12:40:39.9987564Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9987569Z 
2025-01-10T12:40:39.9987765Z >   ???
2025-01-10T12:40:39.9987984Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9988138Z E   
2025-01-10T12:40:39.9988331Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:39.9988459Z E   [index]: [0, 1]
2025-01-10T12:40:39.9988634Z E   [left]:  [9967.488442185557, 10090.337237980311]
2025-01-10T12:40:39.9988966Z E   [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T12:40:39.9989167Z E   At positional index 1, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:39.9989171Z 
2025-01-10T12:40:39.9989330Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9989564Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-10T12:40:39.9989568Z 
2025-01-10T12:40:39.9989863Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9990060Z attr = 'iterations_electron_densities'
2025-01-10T12:40:39.9990363Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0c22c30>
2025-01-10T12:40:39.9990368Z 
2025-01-10T12:40:39.9990529Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9990633Z         "attr",
2025-01-10T12:40:39.9990802Z         [
2025-01-10T12:40:39.9990948Z             "iterations_w",
2025-01-10T12:40:39.9991098Z             "iterations_t_rad",
2025-01-10T12:40:39.9991276Z             "iterations_electron_densities",
2025-01-10T12:40:39.9991392Z             "iterations_t_inner",
2025-01-10T12:40:39.9991558Z         ],
2025-01-10T12:40:39.9991696Z     )
2025-01-10T12:40:39.9991962Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9992105Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9992261Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9992361Z             actual = actual.value
2025-01-10T12:40:39.9992598Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9992760Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.9993004Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:39.9993009Z 
2025-01-10T12:40:39.9993159Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:39.9993323Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9993609Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9993719Z     ???
2025-01-10T12:40:39.9993891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9993896Z 
2025-01-10T12:40:39.9993997Z >   ???
2025-01-10T12:40:39.9994222Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9995133Z E   
2025-01-10T12:40:39.9995381Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:39.9995491Z E   [index]: [0, 1]
2025-01-10T12:40:39.9995664Z E   [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-10T12:40:39.9995929Z E   [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T12:40:39.9996329Z E   At positional index 1, first diff: 2880937482.0686474 != 2881024886.0882792
2025-01-10T12:40:39.9996335Z 
2025-01-10T12:40:39.9996512Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9996727Z _______________ test_plasma_state_iterations[iterations_t_inner] _______________
2025-01-10T12:40:39.9996737Z 
2025-01-10T12:40:39.9997041Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9997159Z attr = 'iterations_t_inner'
2025-01-10T12:40:39.9997545Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d3f2f0>
2025-01-10T12:40:39.9997550Z 
2025-01-10T12:40:39.9997676Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9997827Z         "attr",
2025-01-10T12:40:39.9998041Z         [
2025-01-10T12:40:39.9998155Z             "iterations_w",
2025-01-10T12:40:39.9998308Z             "iterations_t_rad",
2025-01-10T12:40:39.9998446Z             "iterations_electron_densities",
2025-01-10T12:40:39.9998582Z             "iterations_t_inner",
2025-01-10T12:40:39.9998728Z         ],
2025-01-10T12:40:39.9998935Z     )
2025-01-10T12:40:39.9999164Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9999343Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9999589Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9999800Z             actual = actual.value
2025-01-10T12:40:39.9999940Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:40.0000134Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0000378Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0000383Z 
2025-01-10T12:40:40.0000550Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:40.0000762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0000960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0001100Z     ???
2025-01-10T12:40:40.0001251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0001255Z 
2025-01-10T12:40:40.0001409Z >   ???
2025-01-10T12:40:40.0001603Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.0001807Z E   
2025-01-10T12:40:40.0002033Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.0002143Z E   [index]: [0, 1]
2025-01-10T12:40:40.0002324Z E   [left]:  [9974.969233778693, 10755.649243810945]
2025-01-10T12:40:40.0002440Z E   [right]: [9974.969233778693, 10755.075718840653]
2025-01-10T12:40:40.0002735Z E   At positional index 1, first diff: 10755.649243810945 != 10755.075718840653
2025-01-10T12:40:40.0002740Z 
2025-01-10T12:40:40.0002864Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0003095Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-10T12:40:40.0003105Z 
2025-01-10T12:40:40.0003367Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0003486Z attr = 'nu_bar_estimator'
2025-01-10T12:40:40.0011271Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d49d90>
2025-01-10T12:40:40.0011293Z 
2025-01-10T12:40:40.0011429Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0011516Z         "attr",
2025-01-10T12:40:40.0011591Z         [
2025-01-10T12:40:40.0011686Z             "nu_bar_estimator",
2025-01-10T12:40:40.0011767Z             "j_estimator",
2025-01-10T12:40:40.0011851Z             "t_radiative",
2025-01-10T12:40:40.0011936Z             "dilution_factor",
2025-01-10T12:40:40.0012025Z             "output_nus",
2025-01-10T12:40:40.0012113Z             "output_energies",
2025-01-10T12:40:40.0012192Z         ],
2025-01-10T12:40:40.0012263Z     )
2025-01-10T12:40:40.0012465Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0012756Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0012851Z             actual = getattr(
2025-01-10T12:40:40.0013057Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0013137Z                 attr,
2025-01-10T12:40:40.0013216Z             )
2025-01-10T12:40:40.0013349Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0013515Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0013637Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0013729Z             actual = getattr(
2025-01-10T12:40:40.0013912Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0013994Z                 attr,
2025-01-10T12:40:40.0014067Z             )
2025-01-10T12:40:40.0014145Z         else:
2025-01-10T12:40:40.0014285Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0014368Z     
2025-01-10T12:40:40.0014459Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0014551Z             actual = actual.value
2025-01-10T12:40:40.0014642Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0014776Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0014967Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0015089Z 
2025-01-10T12:40:40.0015218Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0015344Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0015500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0015580Z     ???
2025-01-10T12:40:40.0015701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0015705Z 
2025-01-10T12:40:40.0015784Z >   ???
2025-01-10T12:40:40.0015885Z E   AssertionError: Series are different
2025-01-10T12:40:40.0015970Z E   
2025-01-10T12:40:40.0016274Z E   Series values are different (100.0 %)
2025-01-10T12:40:40.0016468Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0017673Z E   [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-10T12:40:40.0018883Z E   [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T12:40:40.0019087Z E   At positional index 0, first diff: 1.0165718020021351e+29 != 1.0202042777991753e+29
2025-01-10T12:40:40.0019092Z 
2025-01-10T12:40:40.0019191Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0019353Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-10T12:40:40.0019357Z 
2025-01-10T12:40:40.0019582Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0019665Z attr = 'j_estimator'
2025-01-10T12:40:40.0019940Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5ef00>
2025-01-10T12:40:40.0019945Z 
2025-01-10T12:40:40.0020040Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0020125Z         "attr",
2025-01-10T12:40:40.0020201Z         [
2025-01-10T12:40:40.0020417Z             "nu_bar_estimator",
2025-01-10T12:40:40.0020508Z             "j_estimator",
2025-01-10T12:40:40.0020587Z             "t_radiative",
2025-01-10T12:40:40.0020677Z             "dilution_factor",
2025-01-10T12:40:40.0020757Z             "output_nus",
2025-01-10T12:40:40.0020845Z             "output_energies",
2025-01-10T12:40:40.0020918Z         ],
2025-01-10T12:40:40.0021002Z     )
2025-01-10T12:40:40.0021186Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0021307Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0021388Z             actual = getattr(
2025-01-10T12:40:40.0021588Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0021664Z                 attr,
2025-01-10T12:40:40.0021743Z             )
2025-01-10T12:40:40.0021864Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0022024Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0022144Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0022225Z             actual = getattr(
2025-01-10T12:40:40.0022405Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0022483Z                 attr,
2025-01-10T12:40:40.0022562Z             )
2025-01-10T12:40:40.0022781Z         else:
2025-01-10T12:40:40.0022923Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0022997Z     
2025-01-10T12:40:40.0023095Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0023181Z             actual = actual.value
2025-01-10T12:40:40.0023278Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0023404Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0023590Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0023595Z 
2025-01-10T12:40:40.0023725Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0023845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0024005Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0024081Z     ???
2025-01-10T12:40:40.0024198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0024207Z 
2025-01-10T12:40:40.0024279Z >   ???
2025-01-10T12:40:40.0024390Z E   AssertionError: Series are different
2025-01-10T12:40:40.0024461Z E   
2025-01-10T12:40:40.0024565Z E   Series values are different (100.0 %)
2025-01-10T12:40:40.0024692Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0025661Z E   [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-10T12:40:40.0026726Z E   [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T12:40:40.0026906Z E   At positional index 0, first diff: 116384046125782.77 != 116635492761989.08
2025-01-10T12:40:40.0026910Z 
2025-01-10T12:40:40.0027008Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0027167Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-10T12:40:40.0027177Z 
2025-01-10T12:40:40.0027396Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0027626Z attr = 't_radiative'
2025-01-10T12:40:40.0027902Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5dfa0>
2025-01-10T12:40:40.0027907Z 
2025-01-10T12:40:40.0028009Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0028084Z         "attr",
2025-01-10T12:40:40.0028162Z         [
2025-01-10T12:40:40.0028246Z             "nu_bar_estimator",
2025-01-10T12:40:40.0028338Z             "j_estimator",
2025-01-10T12:40:40.0028417Z             "t_radiative",
2025-01-10T12:40:40.0028506Z             "dilution_factor",
2025-01-10T12:40:40.0028586Z             "output_nus",
2025-01-10T12:40:40.0028678Z             "output_energies",
2025-01-10T12:40:40.0028750Z         ],
2025-01-10T12:40:40.0028828Z     )
2025-01-10T12:40:40.0029009Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0029132Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0029220Z             actual = getattr(
2025-01-10T12:40:40.0029419Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0029501Z                 attr,
2025-01-10T12:40:40.0029571Z             )
2025-01-10T12:40:40.0029690Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0029836Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0030070Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0030151Z             actual = getattr(
2025-01-10T12:40:40.0030330Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0030407Z                 attr,
2025-01-10T12:40:40.0030488Z             )
2025-01-10T12:40:40.0030563Z         else:
2025-01-10T12:40:40.0030704Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0030786Z     
2025-01-10T12:40:40.0030876Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0030967Z             actual = actual.value
2025-01-10T12:40:40.0031061Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0031191Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0031374Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0031383Z 
2025-01-10T12:40:40.0031508Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0031626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0031784Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0031857Z     ???
2025-01-10T12:40:40.0031972Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0031975Z 
2025-01-10T12:40:40.0032053Z >   ???
2025-01-10T12:40:40.0032154Z E   AssertionError: Series are different
2025-01-10T12:40:40.0032232Z E   
2025-01-10T12:40:40.0032328Z E   Series values are different (100.0 %)
2025-01-10T12:40:40.0032468Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0033470Z E   [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-10T12:40:40.0034472Z E   [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T12:40:40.0034649Z E   At positional index 0, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:40.0034737Z 
2025-01-10T12:40:40.0034830Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0034998Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-10T12:40:40.0035002Z 
2025-01-10T12:40:40.0035216Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0035306Z attr = 'dilution_factor'
2025-01-10T12:40:40.0035577Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5d250>
2025-01-10T12:40:40.0035582Z 
2025-01-10T12:40:40.0035681Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0035763Z         "attr",
2025-01-10T12:40:40.0035837Z         [
2025-01-10T12:40:40.0035925Z             "nu_bar_estimator",
2025-01-10T12:40:40.0036004Z             "j_estimator",
2025-01-10T12:40:40.0036255Z             "t_radiative",
2025-01-10T12:40:40.0036352Z             "dilution_factor",
2025-01-10T12:40:40.0036444Z             "output_nus",
2025-01-10T12:40:40.0036527Z             "output_energies",
2025-01-10T12:40:40.0036612Z         ],
2025-01-10T12:40:40.0036685Z     )
2025-01-10T12:40:40.0036872Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0036987Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0037076Z             actual = getattr(
2025-01-10T12:40:40.0037267Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0037485Z                 attr,
2025-01-10T12:40:40.0037559Z             )
2025-01-10T12:40:40.0037682Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0037838Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0037952Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0038038Z             actual = getattr(
2025-01-10T12:40:40.0038208Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0038288Z                 attr,
2025-01-10T12:40:40.0038370Z             )
2025-01-10T12:40:40.0038451Z         else:
2025-01-10T12:40:40.0038584Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0038659Z     
2025-01-10T12:40:40.0038747Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0038845Z             actual = actual.value
2025-01-10T12:40:40.0038934Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0039066Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0039243Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0039247Z 
2025-01-10T12:40:40.0039371Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0039485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0039637Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0039709Z     ???
2025-01-10T12:40:40.0039829Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0039832Z 
2025-01-10T12:40:40.0039906Z >   ???
2025-01-10T12:40:40.0040011Z E   AssertionError: Series are different
2025-01-10T12:40:40.0040088Z E   
2025-01-10T12:40:40.0040183Z E   Series values are different (95.0 %)
2025-01-10T12:40:40.0040314Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0041408Z E   [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-10T12:40:40.0042604Z E   [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T12:40:40.0042786Z E   At positional index 0, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:40.0042796Z 
2025-01-10T12:40:40.0042888Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0043048Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-10T12:40:40.0043053Z 
2025-01-10T12:40:40.0043269Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0043358Z attr = 'output_nus'
2025-01-10T12:40:40.0043620Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5ca40>
2025-01-10T12:40:40.0043624Z 
2025-01-10T12:40:40.0043723Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0043808Z         "attr",
2025-01-10T12:40:40.0043886Z         [
2025-01-10T12:40:40.0043975Z             "nu_bar_estimator",
2025-01-10T12:40:40.0044056Z             "j_estimator",
2025-01-10T12:40:40.0044143Z             "t_radiative",
2025-01-10T12:40:40.0044228Z             "dilution_factor",
2025-01-10T12:40:40.0044314Z             "output_nus",
2025-01-10T12:40:40.0044395Z             "output_energies",
2025-01-10T12:40:40.0044564Z         ],
2025-01-10T12:40:40.0044636Z     )
2025-01-10T12:40:40.0044820Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0044933Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0045020Z             actual = getattr(
2025-01-10T12:40:40.0045208Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0045289Z                 attr,
2025-01-10T12:40:40.0045361Z             )
2025-01-10T12:40:40.0045481Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0045642Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0045755Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0045842Z             actual = getattr(
2025-01-10T12:40:40.0046009Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0046193Z                 attr,
2025-01-10T12:40:40.0046275Z             )
2025-01-10T12:40:40.0046355Z         else:
2025-01-10T12:40:40.0046489Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0046571Z     
2025-01-10T12:40:40.0046660Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0046750Z             actual = actual.value
2025-01-10T12:40:40.0046837Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0046965Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0047140Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0047155Z 
2025-01-10T12:40:40.0047272Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0047390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0047534Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0047611Z     ???
2025-01-10T12:40:40.0047721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0047730Z 
2025-01-10T12:40:40.0047810Z >   ???
2025-01-10T12:40:40.0047910Z E   AssertionError: Series are different
2025-01-10T12:40:40.0047986Z E   
2025-01-10T12:40:40.0048085Z E   Series values are different (93.3075 %)
2025-01-10T12:40:40.0048573Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0053690Z E   [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-10T12:40:40.0059095Z E   [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T12:40:40.0059427Z E   At positional index 0, first diff: 1806608624563428.5 != 1806512041912368.8
2025-01-10T12:40:40.0059433Z 
2025-01-10T12:40:40.0059527Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0059703Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-10T12:40:40.0059707Z 
2025-01-10T12:40:40.0059926Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0060023Z attr = 'output_energies'
2025-01-10T12:40:40.0060292Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d661b0>
2025-01-10T12:40:40.0060296Z 
2025-01-10T12:40:40.0060398Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0060475Z         "attr",
2025-01-10T12:40:40.0060552Z         [
2025-01-10T12:40:40.0060644Z             "nu_bar_estimator",
2025-01-10T12:40:40.0060725Z             "j_estimator",
2025-01-10T12:40:40.0060803Z             "t_radiative",
2025-01-10T12:40:40.0060885Z             "dilution_factor",
2025-01-10T12:40:40.0060970Z             "output_nus",
2025-01-10T12:40:40.0061055Z             "output_energies",
2025-01-10T12:40:40.0061140Z         ],
2025-01-10T12:40:40.0061212Z     )
2025-01-10T12:40:40.0061396Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0061513Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0061724Z             actual = getattr(
2025-01-10T12:40:40.0061920Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0062004Z                 attr,
2025-01-10T12:40:40.0062077Z             )
2025-01-10T12:40:40.0062208Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0062360Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0062485Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0062571Z             actual = getattr(
2025-01-10T12:40:40.0062747Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0062831Z                 attr,
2025-01-10T12:40:40.0062904Z             )
2025-01-10T12:40:40.0062985Z         else:
2025-01-10T12:40:40.0063120Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0063199Z     
2025-01-10T12:40:40.0063290Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0063391Z             actual = actual.value
2025-01-10T12:40:40.0063480Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0063612Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0063787Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0063792Z 
2025-01-10T12:40:40.0063919Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0064038Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0064184Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0064266Z     ???
2025-01-10T12:40:40.0064375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0064379Z 
2025-01-10T12:40:40.0064458Z >   ???
2025-01-10T12:40:40.0064558Z E   AssertionError: Series are different
2025-01-10T12:40:40.0064635Z E   
2025-01-10T12:40:40.0064733Z E   Series values are different (5.69 %)
2025-01-10T12:40:40.0065102Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0071727Z E   [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.0078204Z E   [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.0078432Z E   At positional index 23, first diff: -2.49312723626409e-05 != -2.4320296346496788e-05
2025-01-10T12:40:40.0078437Z 
2025-01-10T12:40:40.0078535Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0078735Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-10T12:40:40.0078739Z 
2025-01-10T12:40:40.0079011Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f22f6da0650>
2025-01-10T12:40:40.0079213Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e80bb680>
2025-01-10T12:40:40.0079217Z 
2025-01-10T12:40:40.0079341Z     def test_spectrum_real_packets(self, simulation):
2025-01-10T12:40:40.0079496Z         transport_state = simulation.transport.transport_state
2025-01-10T12:40:40.0079796Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T12:40:40.0079875Z     
2025-01-10T12:40:40.0080062Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T12:40:40.0080193Z         result = solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0080369Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T12:40:40.0080471Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0080547Z     
2025-01-10T12:40:40.0080656Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0080735Z     
2025-01-10T12:40:40.0080829Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0080913Z             result,
2025-01-10T12:40:40.0080992Z             luminosity,
2025-01-10T12:40:40.0081071Z         )
2025-01-10T12:40:40.0081075Z 
2025-01-10T12:40:40.0081205Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-10T12:40:40.0081325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0081673Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0081773Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0081888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0081893Z 
2025-01-10T12:40:40.0082359Z args = (<function assert_allclose.<locals>.compare at 0x7f22e80fb380>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T12:40:40.0082478Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0082742Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0082746Z 
2025-01-10T12:40:40.0082829Z     @wraps(func)
2025-01-10T12:40:40.0082914Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0083006Z         with self._recreate_cm():
2025-01-10T12:40:40.0083103Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0083198Z E           AssertionError: 
2025-01-10T12:40:40.0083317Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0083393Z E           
2025-01-10T12:40:40.0083501Z E           Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.0083643Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.0083765Z E           Max relative difference among violations: 1.
2025-01-10T12:40:40.0084021Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0084120Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0084294Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0084387Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0084391Z 
2025-01-10T12:40:40.0084594Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0084804Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-10T12:40:40.0084808Z 
2025-01-10T12:40:40.0085074Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f22f6da08f0>
2025-01-10T12:40:40.0085270Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e80bb680>
2025-01-10T12:40:40.0085274Z 
2025-01-10T12:40:40.0085429Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-10T12:40:40.0085577Z         transport_state = simulation.transport.transport_state
2025-01-10T12:40:40.0085774Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T12:40:40.0085846Z     
2025-01-10T12:40:40.0086038Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T12:40:40.0086299Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-10T12:40:40.0086511Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-10T12:40:40.0086754Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0086827Z     
2025-01-10T12:40:40.0086941Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0087012Z     
2025-01-10T12:40:40.0087107Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0087183Z             result,
2025-01-10T12:40:40.0087269Z             luminosity,
2025-01-10T12:40:40.0087345Z         )
2025-01-10T12:40:40.0087349Z 
2025-01-10T12:40:40.0087482Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-10T12:40:40.0087601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0087944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0088037Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0088153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0088163Z 
2025-01-10T12:40:40.0088638Z args = (<function assert_allclose.<locals>.compare at 0x7f22b2d18040>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-10T12:40:40.0088744Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0089008Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0089013Z 
2025-01-10T12:40:40.0089090Z     @wraps(func)
2025-01-10T12:40:40.0089182Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0089271Z         with self._recreate_cm():
2025-01-10T12:40:40.0089367Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0089451Z E           AssertionError: 
2025-01-10T12:40:40.0089568Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0089651Z E           
2025-01-10T12:40:40.0089755Z E           Mismatched elements: 415 / 10000 (4.15%)
2025-01-10T12:40:40.0089906Z E           Max absolute difference among violations: 6.26425326e+37
2025-01-10T12:40:40.0090037Z E           Max relative difference among violations: 1.00484475
2025-01-10T12:40:40.0090212Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0090300Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0090474Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0090560Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0090564Z 
2025-01-10T12:40:40.0090889Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0091060Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-10T12:40:40.0091070Z 
2025-01-10T12:40:40.0091330Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f22f6da1850>
2025-01-10T12:40:40.0091543Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e80bb680>
2025-01-10T12:40:40.0091548Z 
2025-01-10T12:40:40.0091644Z     def test_solve(self, simulation):
2025-01-10T12:40:40.0091797Z         transport_state = simulation.transport.transport_state
2025-01-10T12:40:40.0091986Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T12:40:40.0092064Z     
2025-01-10T12:40:40.0092247Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T12:40:40.0092415Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-10T12:40:40.0092505Z             transport_state
2025-01-10T12:40:40.0092585Z         )
2025-01-10T12:40:40.0092772Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T12:40:40.0092891Z         expected_real = self.get_expected_data(key_real)
2025-01-10T12:40:40.0092968Z     
2025-01-10T12:40:40.0093101Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-10T12:40:40.0093258Z     
2025-01-10T12:40:40.0093345Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0093441Z             result_real.luminosity,
2025-01-10T12:40:40.0093524Z             luminosity_real,
2025-01-10T12:40:40.0093600Z         )
2025-01-10T12:40:40.0093604Z 
2025-01-10T12:40:40.0093732Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-10T12:40:40.0093847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0094176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0094282Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0094397Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0094401Z 
2025-01-10T12:40:40.0094863Z args = (<function assert_allclose.<locals>.compare at 0x7f22b2d18540>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T12:40:40.0094982Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0095240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0095244Z 
2025-01-10T12:40:40.0095327Z     @wraps(func)
2025-01-10T12:40:40.0095411Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0095503Z         with self._recreate_cm():
2025-01-10T12:40:40.0095592Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0095687Z E           AssertionError: 
2025-01-10T12:40:40.0095812Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0095892Z E           
2025-01-10T12:40:40.0096001Z E           Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.0096361Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.0096498Z E           Max relative difference among violations: 1.
2025-01-10T12:40:40.0096671Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0096774Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0096943Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0097034Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0097039Z 
2025-01-10T12:40:40.0097246Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0097438Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-10T12:40:40.0097442Z 
2025-01-10T12:40:40.0097781Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f22f6da1820>
2025-01-10T12:40:40.0097981Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1ea86b0>
2025-01-10T12:40:40.0097985Z 
2025-01-10T12:40:40.0098106Z     def test_j_blue_estimators(self, simulation):
2025-01-10T12:40:40.0098260Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-10T12:40:40.0098374Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0098445Z     
2025-01-10T12:40:40.0098537Z >       npt.assert_allclose(
2025-01-10T12:40:40.0098758Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-10T12:40:40.0098848Z             expected.values,
2025-01-10T12:40:40.0098954Z         )
2025-01-10T12:40:40.0098965Z 
2025-01-10T12:40:40.0099060Z tardis/tests/test_tardis_full.py:70: 
2025-01-10T12:40:40.0099181Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0099185Z 
2025-01-10T12:40:40.0099455Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4a97420>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0099537Z        [0., 0., .....,
2025-01-10T12:40:40.0099617Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0099700Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0099780Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0100182Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0100186Z 
2025-01-10T12:40:40.0100264Z     @wraps(func)
2025-01-10T12:40:40.0100357Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0100449Z         with self._recreate_cm():
2025-01-10T12:40:40.0100540Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0100632Z E           AssertionError: 
2025-01-10T12:40:40.0100742Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0100822Z E           
2025-01-10T12:40:40.0100940Z E           Mismatched elements: 490652 / 584480 (83.9%)
2025-01-10T12:40:40.0101089Z E           Max absolute difference among violations: 5.32418652e-19
2025-01-10T12:40:40.0101220Z E           Max relative difference among violations: 8.19556014
2025-01-10T12:40:40.0101331Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101422Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101525Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0101637Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101733Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101824Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0101835Z 
2025-01-10T12:40:40.0102042Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0102210Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0102487Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0102574Z 	
2025-01-10T12:40:40.0103144Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-10T12:40:40.0103333Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0103773Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-10T12:40:40.0103950Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0104440Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-10T12:40:40.0104687Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0105223Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0105411Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0105636Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0105804Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0105885Z 	
2025-01-10T12:40:40.0106041Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0106503Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0106576Z 	
2025-01-10T12:40:40.0106683Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T12:40:40.0106777Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T12:40:40.0106877Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0106995Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0107160Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0107235Z 	
2025-01-10T12:40:40.0107384Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0107556Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0107628Z 	
2025-01-10T12:40:40.0107742Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T12:40:40.0107832Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T12:40:40.0107925Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T12:40:40.0108014Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T12:40:40.0108231Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T12:40:40.0108341Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0108513Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0108585Z 	
2025-01-10T12:40:40.0108678Z 	Current t_inner = 9974.969 K
2025-01-10T12:40:40.0108797Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-10T12:40:40.0108907Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0109076Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0109150Z 	
2025-01-10T12:40:40.0109310Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0109475Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0109553Z 	
2025-01-10T12:40:40.0109647Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T12:40:40.0109745Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-10T12:40:40.0109833Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0109943Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0110106Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0110185Z 	
2025-01-10T12:40:40.0110331Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0110498Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0110569Z 	
2025-01-10T12:40:40.0110683Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0110778Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-10T12:40:40.0110864Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T12:40:40.0110958Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-10T12:40:40.0111049Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T12:40:40.0111161Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0111321Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0111403Z 	
2025-01-10T12:40:40.0111489Z 	Current t_inner = 10736.784 K
2025-01-10T12:40:40.0111612Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-10T12:40:40.0111719Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0111892Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0111966Z 	
2025-01-10T12:40:40.0112121Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0112282Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0112358Z 	
2025-01-10T12:40:40.0112454Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T12:40:40.0112550Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-10T12:40:40.0112649Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0112755Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0113045Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0113266Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T12:40:40.0113437Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0113509Z 	
2025-01-10T12:40:40.0113660Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0113823Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0113906Z 	
2025-01-10T12:40:40.0114013Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0114106Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-10T12:40:40.0114191Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T12:40:40.0114282Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-10T12:40:40.0114368Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-10T12:40:40.0114482Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0114650Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0114721Z 	
2025-01-10T12:40:40.0114813Z 	Current t_inner = 10718.886 K
2025-01-10T12:40:40.0114933Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-10T12:40:40.0115044Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0115207Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0115285Z 	
2025-01-10T12:40:40.0115437Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0115605Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0115784Z 	
2025-01-10T12:40:40.0115886Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T12:40:40.0115980Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-10T12:40:40.0116188Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0116301Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0116468Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0116689Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T12:40:40.0116850Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0116928Z 	
2025-01-10T12:40:40.0117080Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0117244Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0117316Z 	
2025-01-10T12:40:40.0117429Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0117514Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-10T12:40:40.0117607Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T12:40:40.0117700Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T12:40:40.0117790Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-10T12:40:40.0117897Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0118065Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0118136Z 	
2025-01-10T12:40:40.0118227Z 	Current t_inner = 10695.170 K
2025-01-10T12:40:40.0118351Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-10T12:40:40.0118456Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0118620Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0118698Z 	
2025-01-10T12:40:40.0118803Z 	Simulation finished in 4 iterations 
2025-01-10T12:40:40.0118889Z 	Simulation took 13.02 s
2025-01-10T12:40:40.0119001Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0119166Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0119245Z 	
2025-01-10T12:40:40.0119398Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0119576Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0119648Z 	
2025-01-10T12:40:40.0119753Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T12:40:40.0119847Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-10T12:40:40.0119944Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0120051Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0120217Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T12:40:40.0120221Z 
2025-01-10T12:40:40.0120225Z 
2025-01-10T12:40:40.0120604Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-10T12:40:40.0120610Z 
2025-01-10T12:40:40.0120836Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-10T12:40:40.0120841Z 
2025-01-10T12:40:40.0121107Z Packets:   ████                                                                            10289/200000 [00:00<00:01, 102886.66it/s][A
2025-01-10T12:40:40.0121121Z 
2025-01-10T12:40:40.0121377Z Packets:   ████████▍                                                                       20961/200000 [00:00<00:01, 105136.58it/s][A
2025-01-10T12:40:40.0121382Z 
2025-01-10T12:40:40.0121636Z Packets:   ████████████▌                                                                   31536/200000 [00:00<00:01, 105412.13it/s][A
2025-01-10T12:40:40.0121641Z 
2025-01-10T12:40:40.0121904Z Packets:   ████████████████▉                                                               42311/200000 [00:00<00:01, 106332.39it/s][A
2025-01-10T12:40:40.0121919Z 
2025-01-10T12:40:40.0122183Z Packets:   █████████████████████▏                                                          52945/200000 [00:00<00:01, 106239.45it/s][A
2025-01-10T12:40:40.0122187Z 
2025-01-10T12:40:40.0122464Z Packets:   █████████████████████████▍                                                      63673/200000 [00:00<00:01, 106590.55it/s][A
2025-01-10T12:40:40.0122594Z 
2025-01-10T12:40:40.0122877Z Packets:   █████████████████████████████▊                                                  74401/200000 [00:00<00:01, 106814.55it/s][A
2025-01-10T12:40:40.0122881Z 
2025-01-10T12:40:40.0123162Z Packets:   ██████████████████████████████████                                              85083/200000 [00:00<00:01, 106700.78it/s][A
2025-01-10T12:40:40.0123166Z 
2025-01-10T12:40:40.0123461Z Packets:   ██████████████████████████████████████▎                                         95754/200000 [00:00<00:00, 106396.93it/s][A
2025-01-10T12:40:40.0123465Z 
2025-01-10T12:40:40.0123778Z Packets:   ██████████████████████████████████████████▌                                     106458/200000 [00:01<00:00, 106594.34it/s][A
2025-01-10T12:40:40.0123788Z 
2025-01-10T12:40:40.0124411Z Packets:   ██████████████████████████████████████████████▊                                 117144/200000 [00:01<00:00, 106674.83it/s][A
2025-01-10T12:40:40.0124417Z 
2025-01-10T12:40:40.0124762Z Packets:   ███████████████████████████████████████████████████                             127812/200000 [00:01<00:00, 106080.30it/s][A
2025-01-10T12:40:40.0124767Z 
2025-01-10T12:40:40.0125076Z Packets:   ███████████████████████████████████████████████████████▍                        138566/200000 [00:01<00:00, 106519.72it/s][A
2025-01-10T12:40:40.0125080Z 
2025-01-10T12:40:40.0125403Z Packets:   ███████████████████████████████████████████████████████████▋                    149219/200000 [00:01<00:00, 106380.29it/s][A
2025-01-10T12:40:40.0125407Z 
2025-01-10T12:40:40.0125849Z Packets:   ███████████████████████████████████████████████████████████████▉                159889/200000 [00:01<00:00, 106475.69it/s][A
2025-01-10T12:40:40.0125854Z 
2025-01-10T12:40:40.0126377Z Packets:   ████████████████████████████████████████████████████████████████████▏           170537/200000 [00:01<00:00, 106295.58it/s][A
2025-01-10T12:40:40.0126383Z 
2025-01-10T12:40:40.0126734Z Packets:   ████████████████████████████████████████████████████████████████████████▍       181213/200000 [00:01<00:00, 106433.88it/s][A
2025-01-10T12:40:40.0126755Z 
2025-01-10T12:40:40.0127129Z Packets:   ████████████████████████████████████████████████████████████████████████████▊   191892/200000 [00:01<00:00, 106540.48it/s][A
2025-01-10T12:40:40.0127365Z Iterations:                                                                                13/? [05:56<00:00, 12.39s/it]
2025-01-10T12:40:40.0127370Z 
2025-01-10T12:40:40.0127750Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 106540.48it/s][A
2025-01-10T12:40:40.0127754Z 
2025-01-10T12:40:40.0127993Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0127998Z 
2025-01-10T12:40:40.0128249Z Packets:   ████▎                                                                           10655/200000 [00:00<00:01, 105648.85it/s][A
2025-01-10T12:40:40.0128400Z 
2025-01-10T12:40:40.0128656Z Packets:   ████████▌                                                                       21380/200000 [00:00<00:01, 106586.13it/s][A
2025-01-10T12:40:40.0128660Z 
2025-01-10T12:40:40.0128915Z Packets:   ████████████▊                                                                   32039/200000 [00:00<00:01, 105355.81it/s][A
2025-01-10T12:40:40.0128919Z 
2025-01-10T12:40:40.0129179Z Packets:   █████████████████                                                               42622/200000 [00:00<00:01, 105540.24it/s][A
2025-01-10T12:40:40.0129184Z 
2025-01-10T12:40:40.0129457Z Packets:   █████████████████████▎                                                          53217/200000 [00:00<00:01, 105686.09it/s][A
2025-01-10T12:40:40.0129461Z 
2025-01-10T12:40:40.0129875Z Packets:   █████████████████████████▌                                                      63881/200000 [00:00<00:01, 106008.12it/s][A
2025-01-10T12:40:40.0129901Z 
2025-01-10T12:40:40.0130277Z Packets:   █████████████████████████████▊                                                  74483/200000 [00:00<00:01, 105996.04it/s][A
2025-01-10T12:40:40.0130282Z 
2025-01-10T12:40:40.0130568Z Packets:   ██████████████████████████████████                                              85084/200000 [00:00<00:01, 104706.82it/s][A
2025-01-10T12:40:40.0130573Z 
2025-01-10T12:40:40.0130863Z Packets:   ██████████████████████████████████████▏                                         95559/200000 [00:00<00:01, 102433.33it/s][A
2025-01-10T12:40:40.0130867Z 
2025-01-10T12:40:40.0131317Z Packets:   ██████████████████████████████████████████▍                                     106055/200000 [00:01<00:00, 103196.25it/s][A
2025-01-10T12:40:40.0131328Z 
2025-01-10T12:40:40.0131635Z Packets:   ██████████████████████████████████████████████▋                                 116765/200000 [00:01<00:00, 104370.74it/s][A
2025-01-10T12:40:40.0131640Z 
2025-01-10T12:40:40.0131952Z Packets:   ██████████████████████████████████████████████████▉                             127382/200000 [00:01<00:00, 104910.56it/s][A
2025-01-10T12:40:40.0131970Z 
2025-01-10T12:40:40.0132280Z Packets:   ███████████████████████████████████████████████████████▎                        138128/200000 [00:01<00:00, 105672.98it/s][A
2025-01-10T12:40:40.0132284Z 
2025-01-10T12:40:40.0132605Z Packets:   ███████████████████████████████████████████████████████████▌                    148783/200000 [00:01<00:00, 105933.26it/s][A
2025-01-10T12:40:40.0132609Z 
2025-01-10T12:40:40.0132943Z Packets:   ███████████████████████████████████████████████████████████████▊                159473/200000 [00:01<00:00, 106223.46it/s][A
2025-01-10T12:40:40.0132947Z 
2025-01-10T12:40:40.0133274Z Packets:   ████████████████████████████████████████████████████████████████████            170098/200000 [00:01<00:00, 106084.38it/s][A
2025-01-10T12:40:40.0133279Z 
2025-01-10T12:40:40.0133616Z Packets:   ████████████████████████████████████████████████████████████████████████▎       180807/200000 [00:01<00:00, 106382.69it/s][A
2025-01-10T12:40:40.0133711Z 
2025-01-10T12:40:40.0134046Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   191447/200000 [00:01<00:00, 105900.12it/s][A
2025-01-10T12:40:40.0134198Z Iterations:                                                                                14/? [05:59<00:00,  9.64s/it]
2025-01-10T12:40:40.0134202Z 
2025-01-10T12:40:40.0134545Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105900.12it/s][A
2025-01-10T12:40:40.0134566Z 
2025-01-10T12:40:40.0134804Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0134808Z 
2025-01-10T12:40:40.0135053Z Packets:   ████▎                                                                           10711/200000 [00:00<00:01, 107102.19it/s][A
2025-01-10T12:40:40.0135070Z 
2025-01-10T12:40:40.0135319Z Packets:   ████████▌                                                                       21422/200000 [00:00<00:01, 106668.98it/s][A
2025-01-10T12:40:40.0135323Z 
2025-01-10T12:40:40.0135574Z Packets:   ████████████▊                                                                   32122/200000 [00:00<00:01, 106818.21it/s][A
2025-01-10T12:40:40.0135578Z 
2025-01-10T12:40:40.0135840Z Packets:   █████████████████▏                                                              42946/200000 [00:00<00:01, 107375.97it/s][A
2025-01-10T12:40:40.0135844Z 
2025-01-10T12:40:40.0136472Z Packets:   █████████████████████▌                                                          53780/200000 [00:00<00:01, 107722.41it/s][A
2025-01-10T12:40:40.0136480Z 
2025-01-10T12:40:40.0136787Z Packets:   █████████████████████████▊                                                      64553/200000 [00:00<00:01, 107011.26it/s][A
2025-01-10T12:40:40.0136791Z 
2025-01-10T12:40:40.0137084Z Packets:   ██████████████████████████████▏                                                 75349/200000 [00:00<00:01, 107317.21it/s][A
2025-01-10T12:40:40.0137088Z 
2025-01-10T12:40:40.0137369Z Packets:   ██████████████████████████████████▍                                             86206/200000 [00:00<00:01, 107712.21it/s][A
2025-01-10T12:40:40.0137374Z 
2025-01-10T12:40:40.0137667Z Packets:   ██████████████████████████████████████▊                                         96978/200000 [00:00<00:00, 107333.88it/s][A
2025-01-10T12:40:40.0137671Z 
2025-01-10T12:40:40.0137979Z Packets:   ███████████████████████████████████████████                                     107713/200000 [00:01<00:00, 107317.07it/s][A
2025-01-10T12:40:40.0137988Z 
2025-01-10T12:40:40.0138288Z Packets:   ███████████████████████████████████████████████▍                                118534/200000 [00:01<00:00, 107587.15it/s][A
2025-01-10T12:40:40.0138292Z 
2025-01-10T12:40:40.0138600Z Packets:   ███████████████████████████████████████████████████▋                            129294/200000 [00:01<00:00, 106920.90it/s][A
2025-01-10T12:40:40.0138722Z 
2025-01-10T12:40:40.0139035Z Packets:   ███████████████████████████████████████████████████████▉                        139988/200000 [00:01<00:00, 105916.29it/s][A
2025-01-10T12:40:40.0139039Z 
2025-01-10T12:40:40.0139360Z Packets:   ████████████████████████████████████████████████████████████▏                   150582/200000 [00:01<00:00, 105736.95it/s][A
2025-01-10T12:40:40.0139365Z 
2025-01-10T12:40:40.0139706Z Packets:   ████████████████████████████████████████████████████████████████▌               161294/200000 [00:01<00:00, 106149.12it/s][A
2025-01-10T12:40:40.0139710Z 
2025-01-10T12:40:40.0140035Z Packets:   ████████████████████████████████████████████████████████████████████▊           171911/200000 [00:01<00:00, 105279.59it/s][A
2025-01-10T12:40:40.0140040Z 
2025-01-10T12:40:40.0140378Z Packets:   █████████████████████████████████████████████████████████████████████████       182767/200000 [00:01<00:00, 106255.83it/s][A
2025-01-10T12:40:40.0140397Z 
2025-01-10T12:40:40.0140734Z Packets:   █████████████████████████████████████████████████████████████████████████████▍  193623/200000 [00:01<00:00, 106941.69it/s][A
2025-01-10T12:40:40.0140886Z Iterations:                                                                                15/? [06:02<00:00,  7.71s/it]
2025-01-10T12:40:40.0140889Z 
2025-01-10T12:40:40.0141240Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106941.69it/s][A
2025-01-10T12:40:40.0141245Z 
2025-01-10T12:40:40.0141579Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0141584Z 
2025-01-10T12:40:40.0141833Z Packets:   ████▎                                                                           10744/200000 [00:00<00:01, 107428.58it/s][A
2025-01-10T12:40:40.0141837Z 
2025-01-10T12:40:40.0142171Z Packets:   ████████▌                                                                       21487/200000 [00:00<00:01, 107329.08it/s][A
2025-01-10T12:40:40.0142176Z 
2025-01-10T12:40:40.0142427Z Packets:   ████████████▉                                                                   32285/200000 [00:00<00:01, 107622.80it/s][A
2025-01-10T12:40:40.0142431Z 
2025-01-10T12:40:40.0142695Z Packets:   █████████████████▏                                                              43100/200000 [00:00<00:01, 107827.04it/s][A
2025-01-10T12:40:40.0142700Z 
2025-01-10T12:40:40.0142973Z Packets:   █████████████████████▌                                                          53999/200000 [00:00<00:01, 108244.12it/s][A
2025-01-10T12:40:40.0142977Z 
2025-01-10T12:40:40.0143250Z Packets:   █████████████████████████▉                                                      64824/200000 [00:00<00:01, 108210.11it/s][A
2025-01-10T12:40:40.0143254Z 
2025-01-10T12:40:40.0143536Z Packets:   ██████████████████████████████▎                                                 75674/200000 [00:00<00:01, 108303.45it/s][A
2025-01-10T12:40:40.0143550Z 
2025-01-10T12:40:40.0143831Z Packets:   ██████████████████████████████████▌                                             86505/200000 [00:00<00:01, 108219.59it/s][A
2025-01-10T12:40:40.0143836Z 
2025-01-10T12:40:40.0144129Z Packets:   ██████████████████████████████████████▉                                         97352/200000 [00:00<00:00, 108295.67it/s][A
2025-01-10T12:40:40.0144133Z 
2025-01-10T12:40:40.0144441Z Packets:   ███████████████████████████████████████████▎                                    108182/200000 [00:01<00:00, 107988.47it/s][A
2025-01-10T12:40:40.0144452Z 
2025-01-10T12:40:40.0144753Z Packets:   ███████████████████████████████████████████████▌                                118982/200000 [00:01<00:00, 107730.94it/s][A
2025-01-10T12:40:40.0144757Z 
2025-01-10T12:40:40.0145064Z Packets:   ███████████████████████████████████████████████████▉                            129893/200000 [00:01<00:00, 108148.41it/s][A
2025-01-10T12:40:40.0145083Z 
2025-01-10T12:40:40.0145670Z Packets:   ████████████████████████████████████████████████████████▎                       140709/200000 [00:01<00:00, 107575.76it/s][A
2025-01-10T12:40:40.0145677Z 
2025-01-10T12:40:40.0146352Z Packets:   ████████████████████████████████████████████████████████████▌                   151468/200000 [00:01<00:00, 106116.32it/s][A
2025-01-10T12:40:40.0146358Z 
2025-01-10T12:40:40.0146697Z Packets:   ████████████████████████████████████████████████████████████████▉               162330/200000 [00:01<00:00, 106860.96it/s][A
2025-01-10T12:40:40.0146855Z 
2025-01-10T12:40:40.0147191Z Packets:   █████████████████████████████████████████████████████████████████████▎          173173/200000 [00:01<00:00, 107328.50it/s][A
2025-01-10T12:40:40.0147196Z 
2025-01-10T12:40:40.0147532Z Packets:   █████████████████████████████████████████████████████████████████████████▌      183989/200000 [00:01<00:00, 107575.47it/s][A
2025-01-10T12:40:40.0147659Z 
2025-01-10T12:40:40.0147997Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  194868/200000 [00:01<00:00, 107938.55it/s][A
2025-01-10T12:40:40.0148152Z Iterations:                                                                                16/? [06:05<00:00,  6.36s/it]
2025-01-10T12:40:40.0148156Z 
2025-01-10T12:40:40.0148505Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 107938.55it/s][A
2025-01-10T12:40:40.0148509Z 
2025-01-10T12:40:40.0148759Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0148764Z 
2025-01-10T12:40:40.0149003Z Packets:   █▋                                                                              10796/500000 [00:00<00:15, 32185.15it/s][A
2025-01-10T12:40:40.0149008Z 
2025-01-10T12:40:40.0149248Z Packets:   ██▎                                                                             14186/500000 [00:00<00:14, 32695.24it/s][A
2025-01-10T12:40:40.0149264Z 
2025-01-10T12:40:40.0149497Z Packets:   ██▊                                                                             17671/500000 [00:00<00:14, 33337.06it/s][A
2025-01-10T12:40:40.0149501Z 
2025-01-10T12:40:40.0149739Z Packets:   ███▍                                                                            21129/500000 [00:00<00:14, 33707.51it/s][A
2025-01-10T12:40:40.0149744Z 
2025-01-10T12:40:40.0149986Z Packets:   ███▉                                                                            24550/500000 [00:00<00:14, 33855.41it/s][A
2025-01-10T12:40:40.0149990Z 
2025-01-10T12:40:40.0150233Z Packets:   ████▍                                                                           27970/500000 [00:00<00:13, 33923.15it/s][A
2025-01-10T12:40:40.0150238Z 
2025-01-10T12:40:40.0150479Z Packets:   █████                                                                           31386/500000 [00:00<00:13, 33956.59it/s][A
2025-01-10T12:40:40.0150492Z 
2025-01-10T12:40:40.0150729Z Packets:   █████▌                                                                          34798/500000 [00:01<00:13, 33915.55it/s][A
2025-01-10T12:40:40.0150733Z 
2025-01-10T12:40:40.0150976Z Packets:   ██████                                                                          38201/500000 [00:01<00:14, 32877.86it/s][A
2025-01-10T12:40:40.0150980Z 
2025-01-10T12:40:40.0151216Z Packets:   ██████▋                                                                         41646/500000 [00:01<00:13, 33337.33it/s][A
2025-01-10T12:40:40.0151317Z 
2025-01-10T12:40:40.0151561Z Packets:   ███████▏                                                                        45075/500000 [00:01<00:13, 33617.80it/s][A
2025-01-10T12:40:40.0151566Z 
2025-01-10T12:40:40.0151812Z Packets:   ███████▊                                                                        48528/500000 [00:01<00:13, 33888.11it/s][A
2025-01-10T12:40:40.0151896Z 
2025-01-10T12:40:40.0152138Z Packets:   ████████▎                                                                       52038/500000 [00:01<00:13, 34247.80it/s][A
2025-01-10T12:40:40.0152142Z 
2025-01-10T12:40:40.0152385Z Packets:   ████████▊                                                                       55468/500000 [00:01<00:13, 34065.29it/s][A
2025-01-10T12:40:40.0152389Z 
2025-01-10T12:40:40.0152638Z Packets:   █████████▍                                                                      58971/500000 [00:01<00:12, 34351.93it/s][A
2025-01-10T12:40:40.0152641Z 
2025-01-10T12:40:40.0152892Z Packets:   █████████▉                                                                      62409/500000 [00:01<00:12, 34242.22it/s][A
2025-01-10T12:40:40.0152896Z 
2025-01-10T12:40:40.0153145Z Packets:   ██████████▌                                                                     65859/500000 [00:01<00:12, 34316.87it/s][A
2025-01-10T12:40:40.0153149Z 
2025-01-10T12:40:40.0153401Z Packets:   ███████████                                                                     69293/500000 [00:02<00:12, 34179.94it/s][A
2025-01-10T12:40:40.0153413Z 
2025-01-10T12:40:40.0153659Z Packets:   ███████████▋                                                                    72713/500000 [00:02<00:12, 33403.90it/s][A
2025-01-10T12:40:40.0153663Z 
2025-01-10T12:40:40.0153916Z Packets:   ████████████▏                                                                   76199/500000 [00:02<00:12, 33829.84it/s][A
2025-01-10T12:40:40.0153920Z 
2025-01-10T12:40:40.0154176Z Packets:   ████████████▋                                                                   79608/500000 [00:02<00:12, 33904.74it/s][A
2025-01-10T12:40:40.0154180Z 
2025-01-10T12:40:40.0154433Z Packets:   █████████████▎                                                                  83068/500000 [00:02<00:12, 34109.81it/s][A
2025-01-10T12:40:40.0154438Z 
2025-01-10T12:40:40.0154691Z Packets:   █████████████▊                                                                  86482/500000 [00:02<00:12, 34071.14it/s][A
2025-01-10T12:40:40.0154704Z 
2025-01-10T12:40:40.0154952Z Packets:   ██████████████▍                                                                 89914/500000 [00:02<00:12, 34143.23it/s][A
2025-01-10T12:40:40.0154956Z 
2025-01-10T12:40:40.0155213Z Packets:   ██████████████▉                                                                 93330/500000 [00:02<00:11, 33968.13it/s][A
2025-01-10T12:40:40.0155217Z 
2025-01-10T12:40:40.0155595Z Packets:   ███████████████▍                                                                96728/500000 [00:02<00:11, 33825.11it/s][A
2025-01-10T12:40:40.0155607Z 
2025-01-10T12:40:40.0155878Z Packets:   ████████████████                                                                100112/500000 [00:02<00:11, 33783.58it/s][A
2025-01-10T12:40:40.0155882Z 
2025-01-10T12:40:40.0156255Z Packets:   ████████████████▌                                                               103491/500000 [00:03<00:11, 33544.93it/s][A
2025-01-10T12:40:40.0156271Z 
2025-01-10T12:40:40.0156529Z Packets:   █████████████████                                                               106847/500000 [00:03<00:12, 32481.99it/s][A
2025-01-10T12:40:40.0156534Z 
2025-01-10T12:40:40.0156794Z Packets:   █████████████████▋                                                              110270/500000 [00:03<00:11, 32990.80it/s][A
2025-01-10T12:40:40.0156798Z 
2025-01-10T12:40:40.0157062Z Packets:   ██████████████████▏                                                             113722/500000 [00:03<00:11, 33438.78it/s][A
2025-01-10T12:40:40.0157079Z 
2025-01-10T12:40:40.0157336Z Packets:   ██████████████████▋                                                             117143/500000 [00:03<00:11, 33662.54it/s][A
2025-01-10T12:40:40.0157340Z 
2025-01-10T12:40:40.0157601Z Packets:   ███████████████████▎                                                            120526/500000 [00:03<00:11, 33711.00it/s][A
2025-01-10T12:40:40.0157727Z 
2025-01-10T12:40:40.0157989Z Packets:   ███████████████████▊                                                            123990/500000 [00:03<00:11, 33985.24it/s][A
2025-01-10T12:40:40.0157993Z 
2025-01-10T12:40:40.0158256Z Packets:   ████████████████████▍                                                           127452/500000 [00:03<00:10, 34173.87it/s][A
2025-01-10T12:40:40.0158260Z 
2025-01-10T12:40:40.0158524Z Packets:   ████████████████████▉                                                           130872/500000 [00:03<00:10, 34067.36it/s][A
2025-01-10T12:40:40.0158528Z 
2025-01-10T12:40:40.0158804Z Packets:   █████████████████████▍                                                          134280/500000 [00:03<00:10, 34050.62it/s][A
2025-01-10T12:40:40.0158808Z 
2025-01-10T12:40:40.0159073Z Packets:   ██████████████████████                                                          137710/500000 [00:04<00:10, 34124.52it/s][A
2025-01-10T12:40:40.0159077Z 
2025-01-10T12:40:40.0159353Z Packets:   ██████████████████████▌                                                         141124/500000 [00:04<00:10, 32832.61it/s][A
2025-01-10T12:40:40.0159358Z 
2025-01-10T12:40:40.0159620Z Packets:   ███████████████████████▏                                                        144539/500000 [00:04<00:10, 33215.04it/s][A
2025-01-10T12:40:40.0159624Z 
2025-01-10T12:40:40.0159892Z Packets:   ███████████████████████▋                                                        147963/500000 [00:04<00:10, 33515.79it/s][A
2025-01-10T12:40:40.0159897Z 
2025-01-10T12:40:40.0160170Z Packets:   ████████████████████████▏                                                       151392/500000 [00:04<00:10, 33744.12it/s][A
2025-01-10T12:40:40.0160174Z 
2025-01-10T12:40:40.0160443Z Packets:   ████████████████████████▊                                                       154826/500000 [00:04<00:10, 33920.58it/s][A
2025-01-10T12:40:40.0160447Z 
2025-01-10T12:40:40.0160714Z Packets:   █████████████████████████▎                                                      158229/500000 [00:04<00:10, 33952.97it/s][A
2025-01-10T12:40:40.0160728Z 
2025-01-10T12:40:40.0160993Z Packets:   █████████████████████████▊                                                      161631/500000 [00:04<00:09, 33971.29it/s][A
2025-01-10T12:40:40.0160997Z 
2025-01-10T12:40:40.0161272Z Packets:   ██████████████████████████▍                                                     165030/500000 [00:04<00:09, 33886.76it/s][A
2025-01-10T12:40:40.0161276Z 
2025-01-10T12:40:40.0161677Z Packets:   ██████████████████████████▉                                                     168489/500000 [00:04<00:09, 34096.80it/s][A
2025-01-10T12:40:40.0161687Z 
2025-01-10T12:40:40.0161961Z Packets:   ███████████████████████████▌                                                    171969/500000 [00:05<00:09, 34304.05it/s][A
2025-01-10T12:40:40.0161966Z 
2025-01-10T12:40:40.0162241Z Packets:   ████████████████████████████                                                    175455/500000 [00:05<00:09, 34464.85it/s][A
2025-01-10T12:40:40.0162329Z 
2025-01-10T12:40:40.0162602Z Packets:   ████████████████████████████▌                                                   178903/500000 [00:05<00:09, 33319.06it/s][A
2025-01-10T12:40:40.0162606Z 
2025-01-10T12:40:40.0162886Z Packets:   █████████████████████████████▏                                                  182330/500000 [00:05<00:09, 33596.03it/s][A
2025-01-10T12:40:40.0162890Z 
2025-01-10T12:40:40.0163167Z Packets:   █████████████████████████████▋                                                  185764/500000 [00:05<00:09, 33815.23it/s][A
2025-01-10T12:40:40.0163183Z 
2025-01-10T12:40:40.0163456Z Packets:   ██████████████████████████████▎                                                 189187/500000 [00:05<00:09, 33929.44it/s][A
2025-01-10T12:40:40.0163460Z 
2025-01-10T12:40:40.0163740Z Packets:   ██████████████████████████████▊                                                 192585/500000 [00:05<00:09, 33943.76it/s][A
2025-01-10T12:40:40.0163755Z 
2025-01-10T12:40:40.0164034Z Packets:   ███████████████████████████████▎                                                195982/500000 [00:05<00:08, 33943.20it/s][A
2025-01-10T12:40:40.0164043Z 
2025-01-10T12:40:40.0164318Z Packets:   ███████████████████████████████▉                                                199445/500000 [00:05<00:08, 34144.96it/s][A
2025-01-10T12:40:40.0164323Z 
2025-01-10T12:40:40.0164602Z Packets:   ████████████████████████████████▍                                               202861/500000 [00:06<00:08, 34113.98it/s][A
2025-01-10T12:40:40.0164607Z 
2025-01-10T12:40:40.0164893Z Packets:   █████████████████████████████████                                               206319/500000 [00:06<00:08, 34251.77it/s][A
2025-01-10T12:40:40.0164897Z 
2025-01-10T12:40:40.0165180Z Packets:   █████████████████████████████████▌                                              209745/500000 [00:06<00:08, 34119.70it/s][A
2025-01-10T12:40:40.0165184Z 
2025-01-10T12:40:40.0165468Z Packets:   ██████████████████████████████████                                              213158/500000 [00:06<00:08, 33052.44it/s][A
2025-01-10T12:40:40.0165483Z 
2025-01-10T12:40:40.0165762Z Packets:   ██████████████████████████████████▋                                             216614/500000 [00:06<00:08, 33490.02it/s][A
2025-01-10T12:40:40.0165767Z 
2025-01-10T12:40:40.0166050Z Packets:   ███████████████████████████████████▏                                            220042/500000 [00:06<00:08, 33721.23it/s][A
2025-01-10T12:40:40.0166151Z 
2025-01-10T12:40:40.0166565Z Packets:   ███████████████████████████████████▊                                            223440/500000 [00:06<00:08, 33796.01it/s][A
2025-01-10T12:40:40.0166575Z 
2025-01-10T12:40:40.0166860Z Packets:   ████████████████████████████████████▎                                           226874/500000 [00:06<00:08, 33956.54it/s][A
2025-01-10T12:40:40.0166865Z 
2025-01-10T12:40:40.0167151Z Packets:   ████████████████████████████████████▊                                           230314/500000 [00:06<00:07, 34086.97it/s][A
2025-01-10T12:40:40.0167268Z 
2025-01-10T12:40:40.0167550Z Packets:   █████████████████████████████████████▍                                          233812/500000 [00:06<00:07, 34349.11it/s][A
2025-01-10T12:40:40.0167554Z 
2025-01-10T12:40:40.0167842Z Packets:   █████████████████████████████████████▉                                          237264/500000 [00:07<00:07, 34399.88it/s][A
2025-01-10T12:40:40.0167846Z 
2025-01-10T12:40:40.0168148Z Packets:   ██████████████████████████████████████▌                                         240705/500000 [00:07<00:07, 34243.63it/s][A
2025-01-10T12:40:40.0168152Z 
2025-01-10T12:40:40.0168435Z Packets:   ███████████████████████████████████████                                         244177/500000 [00:07<00:07, 34383.49it/s][A
2025-01-10T12:40:40.0168439Z 
2025-01-10T12:40:40.0168731Z Packets:   ███████████████████████████████████████▌                                        247616/500000 [00:07<00:07, 33132.71it/s][A
2025-01-10T12:40:40.0168748Z 
2025-01-10T12:40:40.0169031Z Packets:   ████████████████████████████████████████▏                                       251073/500000 [00:07<00:07, 33549.28it/s][A
2025-01-10T12:40:40.0169035Z 
2025-01-10T12:40:40.0169325Z Packets:   ████████████████████████████████████████▋                                       254550/500000 [00:07<00:07, 33907.02it/s][A
2025-01-10T12:40:40.0169329Z 
2025-01-10T12:40:40.0169628Z Packets:   █████████████████████████████████████████▎                                      257948/500000 [00:07<00:07, 33855.37it/s][A
2025-01-10T12:40:40.0169647Z 
2025-01-10T12:40:40.0169937Z Packets:   █████████████████████████████████████████▊                                      261452/500000 [00:07<00:06, 34205.66it/s][A
2025-01-10T12:40:40.0169942Z 
2025-01-10T12:40:40.0170241Z Packets:   ██████████████████████████████████████████▍                                     264877/500000 [00:07<00:06, 34181.88it/s][A
2025-01-10T12:40:40.0170257Z 
2025-01-10T12:40:40.0170552Z Packets:   ██████████████████████████████████████████▉                                     268303/500000 [00:07<00:06, 34200.44it/s][A
2025-01-10T12:40:40.0170556Z 
2025-01-10T12:40:40.0170847Z Packets:   ███████████████████████████████████████████▍                                    271728/500000 [00:08<00:06, 34209.35it/s][A
2025-01-10T12:40:40.0170851Z 
2025-01-10T12:40:40.0171148Z Packets:   ████████████████████████████████████████████                                    275151/500000 [00:08<00:06, 34068.09it/s][A
2025-01-10T12:40:40.0171151Z 
2025-01-10T12:40:40.0171539Z Packets:   ████████████████████████████████████████████▌                                   278578/500000 [00:08<00:06, 34128.11it/s][A
2025-01-10T12:40:40.0171544Z 
2025-01-10T12:40:40.0171843Z Packets:   █████████████████████████████████████████████                                   281992/500000 [00:08<00:06, 32933.65it/s][A
2025-01-10T12:40:40.0171848Z 
2025-01-10T12:40:40.0172148Z Packets:   █████████████████████████████████████████████▋                                  285473/500000 [00:08<00:06, 33480.50it/s][A
2025-01-10T12:40:40.0172256Z 
2025-01-10T12:40:40.0172551Z Packets:   ██████████████████████████████████████████████▏                                 288923/500000 [00:08<00:06, 33779.91it/s][A
2025-01-10T12:40:40.0172555Z 
2025-01-10T12:40:40.0172851Z Packets:   ██████████████████████████████████████████████▊                                 292386/500000 [00:08<00:06, 34027.77it/s][A
2025-01-10T12:40:40.0172855Z 
2025-01-10T12:40:40.0173165Z Packets:   ███████████████████████████████████████████████▎                                295871/500000 [00:08<00:05, 34270.27it/s][A
2025-01-10T12:40:40.0173174Z 
2025-01-10T12:40:40.0173468Z Packets:   ███████████████████████████████████████████████▉                                299353/500000 [00:08<00:05, 34423.80it/s][A
2025-01-10T12:40:40.0173472Z 
2025-01-10T12:40:40.0173775Z Packets:   ████████████████████████████████████████████████▍                               302798/500000 [00:08<00:05, 34200.06it/s][A
2025-01-10T12:40:40.0173793Z 
2025-01-10T12:40:40.0174091Z Packets:   █████████████████████████████████████████████████                               306307/500000 [00:09<00:05, 34464.11it/s][A
2025-01-10T12:40:40.0174095Z 
2025-01-10T12:40:40.0174398Z Packets:   █████████████████████████████████████████████████▌                              309757/500000 [00:09<00:05, 34474.80it/s][A
2025-01-10T12:40:40.0174402Z 
2025-01-10T12:40:40.0174794Z Packets:   ██████████████████████████████████████████████████                              313260/500000 [00:09<00:05, 34639.68it/s][A
2025-01-10T12:40:40.0174799Z 
2025-01-10T12:40:40.0175105Z Packets:   ██████████████████████████████████████████████████▋                             316725/500000 [00:09<00:05, 33035.61it/s][A
2025-01-10T12:40:40.0175109Z 
2025-01-10T12:40:40.0175415Z Packets:   ███████████████████████████████████████████████████▏                            320198/500000 [00:09<00:05, 33524.99it/s][A
2025-01-10T12:40:40.0175433Z 
2025-01-10T12:40:40.0175734Z Packets:   ███████████████████████████████████████████████████▊                            323675/500000 [00:09<00:05, 33888.47it/s][A
2025-01-10T12:40:40.0175744Z 
2025-01-10T12:40:40.0176047Z Packets:   ████████████████████████████████████████████████████▎                           327110/500000 [00:09<00:05, 34022.85it/s][A
2025-01-10T12:40:40.0176051Z 
2025-01-10T12:40:40.0176590Z Packets:   ████████████████████████████████████████████████████▉                           330591/500000 [00:09<00:04, 34254.65it/s][A
2025-01-10T12:40:40.0176595Z 
2025-01-10T12:40:40.0176914Z Packets:   █████████████████████████████████████████████████████▍                          334091/500000 [00:09<00:04, 34473.39it/s][A
2025-01-10T12:40:40.0176919Z 
2025-01-10T12:40:40.0177228Z Packets:   ██████████████████████████████████████████████████████                          337568/500000 [00:09<00:04, 34559.92it/s][A
2025-01-10T12:40:40.0177369Z 
2025-01-10T12:40:40.0177682Z Packets:   ██████████████████████████████████████████████████████▌                         341082/500000 [00:10<00:04, 34731.37it/s][A
2025-01-10T12:40:40.0177686Z 
2025-01-10T12:40:40.0177990Z Packets:   ███████████████████████████████████████████████████████▏                        344589/500000 [00:10<00:04, 34829.90it/s][A
2025-01-10T12:40:40.0177994Z 
2025-01-10T12:40:40.0178307Z Packets:   ███████████████████████████████████████████████████████▋                        348074/500000 [00:10<00:04, 34768.73it/s][A
2025-01-10T12:40:40.0178312Z 
2025-01-10T12:40:40.0178630Z Packets:   ████████████████████████████████████████████████████████▏                       351552/500000 [00:10<00:04, 32907.35it/s][A
2025-01-10T12:40:40.0178640Z 
2025-01-10T12:40:40.0178950Z Packets:   ████████████████████████████████████████████████████████▊                       354990/500000 [00:10<00:04, 33331.23it/s][A
2025-01-10T12:40:40.0178955Z 
2025-01-10T12:40:40.0179268Z Packets:   █████████████████████████████████████████████████████████▎                      358466/500000 [00:10<00:04, 33745.71it/s][A
2025-01-10T12:40:40.0179287Z 
2025-01-10T12:40:40.0179595Z Packets:   █████████████████████████████████████████████████████████▉                      361937/500000 [00:10<00:04, 34022.37it/s][A
2025-01-10T12:40:40.0179599Z 
2025-01-10T12:40:40.0179915Z Packets:   ██████████████████████████████████████████████████████████▍                     365372/500000 [00:10<00:03, 34119.02it/s][A
2025-01-10T12:40:40.0179920Z 
2025-01-10T12:40:40.0180354Z Packets:   ███████████████████████████████████████████████████████████                     368898/500000 [00:10<00:03, 34457.73it/s][A
2025-01-10T12:40:40.0180360Z 
2025-01-10T12:40:40.0180671Z Packets:   ███████████████████████████████████████████████████████████▌                    372412/500000 [00:10<00:03, 34659.69it/s][A
2025-01-10T12:40:40.0180675Z 
2025-01-10T12:40:40.0180989Z Packets:   ████████████████████████████████████████████████████████████▏                   375913/500000 [00:11<00:03, 34759.65it/s][A
2025-01-10T12:40:40.0181080Z 
2025-01-10T12:40:40.0181394Z Packets:   ████████████████████████████████████████████████████████████▋                   379392/500000 [00:11<00:03, 34689.47it/s][A
2025-01-10T12:40:40.0181398Z 
2025-01-10T12:40:40.0181718Z Packets:   █████████████████████████████████████████████████████████████▎                  382863/500000 [00:11<00:03, 34629.58it/s][A
2025-01-10T12:40:40.0181722Z 
2025-01-10T12:40:40.0182057Z Packets:   █████████████████████████████████████████████████████████████▊                  386328/500000 [00:11<00:03, 33516.01it/s][A
2025-01-10T12:40:40.0182060Z 
2025-01-10T12:40:40.0182376Z Packets:   ██████████████████████████████████████████████████████████████▎                 389792/500000 [00:11<00:03, 33844.20it/s][A
2025-01-10T12:40:40.0182380Z 
2025-01-10T12:40:40.0182695Z Packets:   ██████████████████████████████████████████████████████████████▉                 393275/500000 [00:11<00:03, 34131.39it/s][A
2025-01-10T12:40:40.0182715Z 
2025-01-10T12:40:40.0183037Z Packets:   ███████████████████████████████████████████████████████████████▍                396815/500000 [00:11<00:02, 34506.57it/s][A
2025-01-10T12:40:40.0183041Z 
2025-01-10T12:40:40.0183354Z Packets:   ████████████████████████████████████████████████████████████████                400300/500000 [00:11<00:02, 34607.87it/s][A
2025-01-10T12:40:40.0183358Z 
2025-01-10T12:40:40.0183684Z Packets:   ████████████████████████████████████████████████████████████████▌               403792/500000 [00:11<00:02, 34699.02it/s][A
2025-01-10T12:40:40.0183688Z 
2025-01-10T12:40:40.0184094Z Packets:   █████████████████████████████████████████████████████████████████▏              407278/500000 [00:11<00:02, 34743.67it/s][A
2025-01-10T12:40:40.0184099Z 
2025-01-10T12:40:40.0184424Z Packets:   █████████████████████████████████████████████████████████████████▋              410754/500000 [00:12<00:02, 34489.03it/s][A
2025-01-10T12:40:40.0184446Z 
2025-01-10T12:40:40.0184772Z Packets:   ██████████████████████████████████████████████████████████████████▎             414233/500000 [00:12<00:02, 34578.48it/s][A
2025-01-10T12:40:40.0184777Z 
2025-01-10T12:40:40.0185092Z Packets:   ██████████████████████████████████████████████████████████████████▊             417746/500000 [00:12<00:02, 34741.40it/s][A
2025-01-10T12:40:40.0185096Z 
2025-01-10T12:40:40.0185423Z Packets:   ███████████████████████████████████████████████████████████████████▍            421221/500000 [00:12<00:02, 34558.44it/s][A
2025-01-10T12:40:40.0185427Z 
2025-01-10T12:40:40.0185766Z Packets:   ███████████████████████████████████████████████████████████████████▉            424678/500000 [00:12<00:02, 33271.94it/s][A
2025-01-10T12:40:40.0185775Z 
2025-01-10T12:40:40.0186297Z Packets:   ████████████████████████████████████████████████████████████████████▍           428096/500000 [00:12<00:02, 33533.11it/s][A
2025-01-10T12:40:40.0186302Z 
2025-01-10T12:40:40.0186635Z Packets:   █████████████████████████████████████████████████████████████████████           431567/500000 [00:12<00:02, 33875.81it/s][A
2025-01-10T12:40:40.0186771Z 
2025-01-10T12:40:40.0187097Z Packets:   █████████████████████████████████████████████████████████████████████▌          435102/500000 [00:12<00:01, 34311.15it/s][A
2025-01-10T12:40:40.0187101Z 
2025-01-10T12:40:40.0187427Z Packets:   ██████████████████████████████████████████████████████████████████████▏         438587/500000 [00:12<00:01, 34469.45it/s][A
2025-01-10T12:40:40.0187432Z 
2025-01-10T12:40:40.0187779Z Packets:   ██████████████████████████████████████████████████████████████████████▋         442108/500000 [00:13<00:01, 34687.09it/s][A
2025-01-10T12:40:40.0187783Z 
2025-01-10T12:40:40.0188110Z Packets:   ███████████████████████████████████████████████████████████████████████▎        445580/500000 [00:13<00:01, 34661.88it/s][A
2025-01-10T12:40:40.0188114Z 
2025-01-10T12:40:40.0188442Z Packets:   ███████████████████████████████████████████████████████████████████████▊        449049/500000 [00:13<00:01, 34583.29it/s][A
2025-01-10T12:40:40.0188463Z 
2025-01-10T12:40:40.0188789Z Packets:   ████████████████████████████████████████████████████████████████████████▍       452568/500000 [00:13<00:01, 34764.30it/s][A
2025-01-10T12:40:40.0188799Z 
2025-01-10T12:40:40.0189123Z Packets:   ████████████████████████████████████████████████████████████████████████▉       456103/500000 [00:13<00:01, 34937.97it/s][A
2025-01-10T12:40:40.0189127Z 
2025-01-10T12:40:40.0189582Z Packets:   █████████████████████████████████████████████████████████████████████████▌      459598/500000 [00:13<00:01, 33724.00it/s][A
2025-01-10T12:40:40.0189586Z 
2025-01-10T12:40:40.0189914Z Packets:   ██████████████████████████████████████████████████████████████████████████      463063/500000 [00:13<00:01, 33993.36it/s][A
2025-01-10T12:40:40.0189918Z 
2025-01-10T12:40:40.0190250Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     466579/500000 [00:13<00:00, 34335.71it/s][A
2025-01-10T12:40:40.0190362Z 
2025-01-10T12:40:40.0190695Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    470123/500000 [00:13<00:00, 34656.94it/s][A
2025-01-10T12:40:40.0190699Z 
2025-01-10T12:40:40.0191029Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    473594/500000 [00:13<00:00, 34566.64it/s][A
2025-01-10T12:40:40.0191034Z 
2025-01-10T12:40:40.0191366Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   477054/500000 [00:14<00:00, 34570.91it/s][A
2025-01-10T12:40:40.0191370Z 
2025-01-10T12:40:40.0191722Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   480554/500000 [00:14<00:00, 34698.11it/s][A
2025-01-10T12:40:40.0191733Z 
2025-01-10T12:40:40.0192070Z Packets:   █████████████████████████████████████████████████████████████████████████████▍  484046/500000 [00:14<00:00, 34763.53it/s][A
2025-01-10T12:40:40.0192090Z 
2025-01-10T12:40:40.0192427Z Packets:   ██████████████████████████████████████████████████████████████████████████████  487524/500000 [00:14<00:00, 34659.13it/s][A
2025-01-10T12:40:40.0192430Z 
2025-01-10T12:40:40.0192760Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 491038/500000 [00:14<00:00, 34800.62it/s][A
2025-01-10T12:40:40.0192764Z 
2025-01-10T12:40:40.0193097Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 494519/500000 [00:14<00:00, 33061.27it/s][A
2025-01-10T12:40:40.0193101Z 
2025-01-10T12:40:40.0193532Z Packets:   ███████████████████████████████████████████████████████████████████████████████▋498039/500000 [00:14<00:00, 33676.97it/s][A
2025-01-10T12:40:40.0193686Z Iterations:                                                                                17/? [06:22<00:00,  9.53s/it]
2025-01-10T12:40:40.0193690Z 
2025-01-10T12:40:40.0194033Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 33676.97it/s][A
2025-01-10T12:40:40.0194289Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0194457Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-10T12:40:40.0194806Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-10T12:40:40.0195191Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-10T12:40:40.0195638Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-10T12:40:40.0196321Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0196570Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0196687Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0196786Z 	Starting iteration 1 of 5
2025-01-10T12:40:40.0196893Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0196995Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T12:40:40.0197089Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T12:40:40.0197187Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0197192Z 
2025-01-10T12:40:40.0197304Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0197399Z 	Plasma stratification:
2025-01-10T12:40:40.0197511Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0197620Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T12:40:40.0197716Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T12:40:40.0197801Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T12:40:40.0197896Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T12:40:40.0197986Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T12:40:40.0197990Z 
2025-01-10T12:40:40.0198100Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0198189Z 	Current t_inner = 9974.969 K
2025-01-10T12:40:40.0198315Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-10T12:40:40.0198319Z 
2025-01-10T12:40:40.0198422Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0198517Z 	Starting iteration 2 of 5
2025-01-10T12:40:40.0198626Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0198858Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T12:40:40.0198990Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-10T12:40:40.0199084Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0199088Z 
2025-01-10T12:40:40.0199198Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0199284Z 	Plasma stratification:
2025-01-10T12:40:40.0199394Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0199513Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0199608Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-10T12:40:40.0199694Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T12:40:40.0199788Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-10T12:40:40.0199875Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T12:40:40.0199884Z 
2025-01-10T12:40:40.0199988Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0200079Z 	Current t_inner = 10736.784 K
2025-01-10T12:40:40.0200200Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-10T12:40:40.0200204Z 
2025-01-10T12:40:40.0200315Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0200401Z 	Starting iteration 3 of 5
2025-01-10T12:40:40.0200518Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0200609Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T12:40:40.0200710Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-10T12:40:40.0200924Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0200929Z 
2025-01-10T12:40:40.0201162Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-10T12:40:40.0201268Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0201369Z 	Plasma stratification:
2025-01-10T12:40:40.0201481Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0201587Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0201679Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-10T12:40:40.0201769Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T12:40:40.0201859Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-10T12:40:40.0201944Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-10T12:40:40.0201948Z 
2025-01-10T12:40:40.0202059Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0202146Z 	Current t_inner = 10718.886 K
2025-01-10T12:40:40.0202265Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-10T12:40:40.0202276Z 
2025-01-10T12:40:40.0202380Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0202474Z 	Starting iteration 4 of 5
2025-01-10T12:40:40.0202584Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0202686Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T12:40:40.0202785Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-10T12:40:40.0202880Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0202884Z 
2025-01-10T12:40:40.0203101Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-10T12:40:40.0203213Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0203305Z 	Plasma stratification:
2025-01-10T12:40:40.0203408Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0203519Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0203606Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-10T12:40:40.0203696Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T12:40:40.0203787Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T12:40:40.0203881Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-10T12:40:40.0203885Z 
2025-01-10T12:40:40.0203993Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0204080Z 	Current t_inner = 10695.170 K
2025-01-10T12:40:40.0204198Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-10T12:40:40.0204202Z 
2025-01-10T12:40:40.0204305Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0204407Z 	Simulation finished in 4 iterations 
2025-01-10T12:40:40.0204596Z 	Simulation took 13.02 s
2025-01-10T12:40:40.0204602Z 
2025-01-10T12:40:40.0204713Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0204799Z 	Starting iteration 5 of 5
2025-01-10T12:40:40.0204905Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0204996Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T12:40:40.0205093Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-10T12:40:40.0205195Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0205373Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-10T12:40:40.0205378Z 
2025-01-10T12:40:40.0205599Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f22f6da1b50>
2025-01-10T12:40:40.0205797Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1ea86b0>
2025-01-10T12:40:40.0205801Z 
2025-01-10T12:40:40.0205904Z     def test_spectrum(self, simulation):
2025-01-10T12:40:40.0206176Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T12:40:40.0206296Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0206370Z     
2025-01-10T12:40:40.0206486Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0206557Z     
2025-01-10T12:40:40.0206653Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0206827Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-10T12:40:40.0207028Z             luminosity,
2025-01-10T12:40:40.0207107Z         )
2025-01-10T12:40:40.0207110Z 
2025-01-10T12:40:40.0207206Z tardis/tests/test_tardis_full.py:81: 
2025-01-10T12:40:40.0207329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0207670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0207769Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0207883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0207892Z 
2025-01-10T12:40:40.0208368Z args = (<function assert_allclose.<locals>.compare at 0x7f22e39e4040>, array([1.47106443e+39, 1.69486782e+39, 1.38661095e+39,...), array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, ...,
2025-01-10T12:40:40.0208482Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0208743Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0208753Z 
2025-01-10T12:40:40.0208838Z     @wraps(func)
2025-01-10T12:40:40.0208923Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0209016Z         with self._recreate_cm():
2025-01-10T12:40:40.0209105Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0209197Z E           AssertionError: 
2025-01-10T12:40:40.0209308Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0209389Z E           
2025-01-10T12:40:40.0209493Z E           Mismatched elements: 4783 / 10000 (47.8%)
2025-01-10T12:40:40.0209649Z E           Max absolute difference among violations: 1.1803545e+39
2025-01-10T12:40:40.0209781Z E           Max relative difference among violations: 4.31231392
2025-01-10T12:40:40.0209960Z E            ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0210055Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0210232Z E            DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0210324Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0210328Z 
2025-01-10T12:40:40.0210533Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0210719Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-10T12:40:40.0210724Z 
2025-01-10T12:40:40.0210938Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f22f6da1d90>
2025-01-10T12:40:40.0211282Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1ea86b0>
2025-01-10T12:40:40.0211286Z 
2025-01-10T12:40:40.0211408Z     def test_virtual_spectrum(self, simulation):
2025-01-10T12:40:40.0211596Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-10T12:40:40.0211702Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0211773Z     
2025-01-10T12:40:40.0211892Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0211965Z     
2025-01-10T12:40:40.0212057Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0212229Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-10T12:40:40.0212316Z             luminosity,
2025-01-10T12:40:40.0212392Z         )
2025-01-10T12:40:40.0212396Z 
2025-01-10T12:40:40.0212497Z tardis/tests/test_tardis_full.py:92: 
2025-01-10T12:40:40.0212609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0212952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0213050Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0213159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0213163Z 
2025-01-10T12:40:40.0213631Z args = (<function assert_allclose.<locals>.compare at 0x7f22e39d1940>, array([1.43474324e+39, 1.36762963e+39, 1.39613134e+39,...), array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, ...,
2025-01-10T12:40:40.0213819Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0214083Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0214088Z 
2025-01-10T12:40:40.0214166Z     @wraps(func)
2025-01-10T12:40:40.0214256Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0214348Z         with self._recreate_cm():
2025-01-10T12:40:40.0214437Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0214532Z E           AssertionError: 
2025-01-10T12:40:40.0214640Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0214719Z E           
2025-01-10T12:40:40.0214819Z E           Mismatched elements: 5925 / 10000 (59.2%)
2025-01-10T12:40:40.0214965Z E           Max absolute difference among violations: 3.03195861e+38
2025-01-10T12:40:40.0215098Z E           Max relative difference among violations: 21041.9645284
2025-01-10T12:40:40.0215279Z E            ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0215365Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0215537Z E            DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0215620Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0215624Z 
2025-01-10T12:40:40.0215827Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0216245Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-10T12:40:40.0216253Z 
2025-01-10T12:40:40.0216616Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da27b0>
2025-01-10T12:40:40.0216817Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c1600cb0>
2025-01-10T12:40:40.0217017Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-10T12:40:40.0217028Z 
2025-01-10T12:40:40.0217166Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0217275Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0217367Z         j_blue_estimator = (
2025-01-10T12:40:40.0217582Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0217659Z         )
2025-01-10T12:40:40.0217809Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0217927Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0218055Z 
2025-01-10T12:40:40.0218198Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0218310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0218315Z 
2025-01-10T12:40:40.0218584Z args = (<function assert_allclose.<locals>.compare at 0x7f22d651f4c0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0218664Z        [0., 0., .....,
2025-01-10T12:40:40.0218750Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0218829Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0218914Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0219178Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0219183Z 
2025-01-10T12:40:40.0219262Z     @wraps(func)
2025-01-10T12:40:40.0219353Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0219440Z         with self._recreate_cm():
2025-01-10T12:40:40.0219541Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0219628Z E           AssertionError: 
2025-01-10T12:40:40.0219741Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0219815Z E           
2025-01-10T12:40:40.0219929Z E           Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.0220069Z E           Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.0220321Z E           Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.0220428Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220523Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220619Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0220729Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220820Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220910Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0220914Z 
2025-01-10T12:40:40.0221125Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0221345Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-10T12:40:40.0221349Z 
2025-01-10T12:40:40.0221686Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da2e10>
2025-01-10T12:40:40.0221887Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c1600cb0>
2025-01-10T12:40:40.0222073Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-10T12:40:40.0222077Z 
2025-01-10T12:40:40.0222197Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0222306Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0222505Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0222665Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0222776Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0222894Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0222898Z 
2025-01-10T12:40:40.0223038Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0223146Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0223482Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0223585Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0223698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0223702Z 
2025-01-10T12:40:40.0224171Z args = (<function assert_allclose.<locals>.compare at 0x7f22c6ce1440>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T12:40:40.0224275Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0224636Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0224644Z 
2025-01-10T12:40:40.0224792Z     @wraps(func)
2025-01-10T12:40:40.0224954Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0225084Z         with self._recreate_cm():
2025-01-10T12:40:40.0225177Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0225278Z E           AssertionError: 
2025-01-10T12:40:40.0225387Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0225465Z E           
2025-01-10T12:40:40.0225566Z E           Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.0225713Z E           Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.0225842Z E           Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.0226017Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0226210Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0226389Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0226475Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0226479Z 
2025-01-10T12:40:40.0226684Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0227051Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-10T12:40:40.0227055Z 
2025-01-10T12:40:40.0227380Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3650>
2025-01-10T12:40:40.0227581Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c1600cb0>
2025-01-10T12:40:40.0227787Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-10T12:40:40.0227791Z 
2025-01-10T12:40:40.0227942Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0228066Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0228262Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0228427Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0228531Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0228653Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0228663Z 
2025-01-10T12:40:40.0228795Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0228913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0229243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0229343Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0229452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0229456Z 
2025-01-10T12:40:40.0229929Z args = (<function assert_allclose.<locals>.compare at 0x7f22d651d120>, array([1.54239369e+39, 1.54471048e+39, 1.53959524e+39,...), array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, ...,
2025-01-10T12:40:40.0230038Z        2.25671263e+31, 2.27943572e+31, 2.24394350e+31]))
2025-01-10T12:40:40.0230296Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0230303Z 
2025-01-10T12:40:40.0230387Z     @wraps(func)
2025-01-10T12:40:40.0230473Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0230565Z         with self._recreate_cm():
2025-01-10T12:40:40.0230654Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0230745Z E           AssertionError: 
2025-01-10T12:40:40.0230849Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0230930Z E           
2025-01-10T12:40:40.0231030Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0231175Z E           Max absolute difference among violations: 7.22899675e+37
2025-01-10T12:40:40.0231424Z E           Max relative difference among violations: 19.3073128
2025-01-10T12:40:40.0231595Z E            ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-10T12:40:40.0231689Z E                  2.268272e+31, 2.225999e+31])
2025-01-10T12:40:40.0231866Z E            DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T12:40:40.0231962Z E                  2.279436e+31, 2.243943e+31])
2025-01-10T12:40:40.0231966Z 
2025-01-10T12:40:40.0232163Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0232323Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0232327Z 
2025-01-10T12:40:40.0232330Z 
2025-01-10T12:40:40.0232715Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:16<00:00, 112634.09it/s][A
2025-01-10T12:40:40.0232959Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-10T12:40:40.0232964Z 
2025-01-10T12:40:40.0233292Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da2fc0>
2025-01-10T12:40:40.0233488Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c90405f0>
2025-01-10T12:40:40.0233688Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-10T12:40:40.0233783Z 
2025-01-10T12:40:40.0233914Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0234025Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0234109Z         j_blue_estimator = (
2025-01-10T12:40:40.0234334Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0234416Z         )
2025-01-10T12:40:40.0234561Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0234684Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0234697Z 
2025-01-10T12:40:40.0234828Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0234943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0234947Z 
2025-01-10T12:40:40.0235211Z args = (<function assert_allclose.<locals>.compare at 0x7f22f5f61260>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0235298Z        [0., 0., .....,
2025-01-10T12:40:40.0235380Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0235463Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0235542Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0235803Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0235808Z 
2025-01-10T12:40:40.0235890Z     @wraps(func)
2025-01-10T12:40:40.0235975Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0236165Z         with self._recreate_cm():
2025-01-10T12:40:40.0236260Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0236349Z E           AssertionError: 
2025-01-10T12:40:40.0236453Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0236531Z E           
2025-01-10T12:40:40.0236639Z E           Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.0236783Z E           Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.0236917Z E           Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.0237027Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237113Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237208Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0237320Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237406Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237500Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0237504Z 
2025-01-10T12:40:40.0237840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0238069Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-10T12:40:40.0238074Z 
2025-01-10T12:40:40.0238395Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3800>
2025-01-10T12:40:40.0238598Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c90405f0>
2025-01-10T12:40:40.0238770Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-10T12:40:40.0238782Z 
2025-01-10T12:40:40.0238891Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0238998Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0239193Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0239356Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0239464Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0239586Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0239591Z 
2025-01-10T12:40:40.0239722Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0239836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0240280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0240378Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0240495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0240499Z 
2025-01-10T12:40:40.0240962Z args = (<function assert_allclose.<locals>.compare at 0x7f22f0d56020>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T12:40:40.0241069Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0241329Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0241333Z 
2025-01-10T12:40:40.0241418Z     @wraps(func)
2025-01-10T12:40:40.0241506Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0241605Z         with self._recreate_cm():
2025-01-10T12:40:40.0241698Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0241789Z E           AssertionError: 
2025-01-10T12:40:40.0241903Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0241977Z E           
2025-01-10T12:40:40.0242084Z E           Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.0242227Z E           Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.0242362Z E           Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.0242537Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0242638Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0242810Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0242905Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0242909Z 
2025-01-10T12:40:40.0243108Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0243349Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-10T12:40:40.0243353Z 
2025-01-10T12:40:40.0243684Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3e30>
2025-01-10T12:40:40.0243880Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c90405f0>
2025-01-10T12:40:40.0244088Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-10T12:40:40.0244092Z 
2025-01-10T12:40:40.0244230Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0244431Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0244625Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0244795Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0244904Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0245023Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0245032Z 
2025-01-10T12:40:40.0245170Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0245280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0245618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0245709Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0245826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0245831Z 
2025-01-10T12:40:40.0246394Z args = (<function assert_allclose.<locals>.compare at 0x7f22e1a20860>, array([1.54231806e+39, 1.55225124e+39, 1.54284817e+39,...), array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, ...,
2025-01-10T12:40:40.0246506Z        1.35260736e+31, 1.33049749e+31, 1.29446216e+31]))
2025-01-10T12:40:40.0246771Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0246894Z 
2025-01-10T12:40:40.0246973Z     @wraps(func)
2025-01-10T12:40:40.0247064Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0247152Z         with self._recreate_cm():
2025-01-10T12:40:40.0247247Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0247335Z E           AssertionError: 
2025-01-10T12:40:40.0247449Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0247523Z E           
2025-01-10T12:40:40.0247629Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0247768Z E           Max absolute difference among violations: 6.03670637e+37
2025-01-10T12:40:40.0247910Z E           Max relative difference among violations: 9.913521
2025-01-10T12:40:40.0248088Z E            ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-10T12:40:40.0248180Z E                  1.315549e+31, 1.281291e+31])
2025-01-10T12:40:40.0248357Z E            DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T12:40:40.0248452Z E                  1.330497e+31, 1.294462e+31])
2025-01-10T12:40:40.0248456Z 
2025-01-10T12:40:40.0248665Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0248894Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-10T12:40:40.0248898Z 
2025-01-10T12:40:40.0249227Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3380>
2025-01-10T12:40:40.0249423Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1238e30>
2025-01-10T12:40:40.0249628Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-10T12:40:40.0249633Z 
2025-01-10T12:40:40.0249768Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0249875Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0249965Z         j_blue_estimator = (
2025-01-10T12:40:40.0250188Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0250267Z         )
2025-01-10T12:40:40.0250414Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0250539Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0250543Z 
2025-01-10T12:40:40.0250675Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0250793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0250797Z 
2025-01-10T12:40:40.0251186Z args = (<function assert_allclose.<locals>.compare at 0x7f22c729a840>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0251265Z        [0., 0., .....,
2025-01-10T12:40:40.0251351Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0251430Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0251514Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0251771Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0251781Z 
2025-01-10T12:40:40.0251865Z     @wraps(func)
2025-01-10T12:40:40.0251949Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0252044Z         with self._recreate_cm():
2025-01-10T12:40:40.0252133Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0252223Z E           AssertionError: 
2025-01-10T12:40:40.0252332Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0252406Z E           
2025-01-10T12:40:40.0252520Z E           Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.0252667Z E           Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.0252802Z E           Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.0252908Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0252999Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0253092Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0253291Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0253377Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0253471Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0253475Z 
2025-01-10T12:40:40.0253675Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0253900Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-10T12:40:40.0253905Z 
2025-01-10T12:40:40.0254239Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3a40>
2025-01-10T12:40:40.0254436Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1238e30>
2025-01-10T12:40:40.0254612Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-10T12:40:40.0254617Z 
2025-01-10T12:40:40.0254727Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0254842Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0255037Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0255201Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0255309Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0255427Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0255431Z 
2025-01-10T12:40:40.0255565Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0255680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0256017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0256296Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0256431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0256436Z 
2025-01-10T12:40:40.0256910Z args = (<function assert_allclose.<locals>.compare at 0x7f22f0fe99e0>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T12:40:40.0257020Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0257283Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0257287Z 
2025-01-10T12:40:40.0257365Z     @wraps(func)
2025-01-10T12:40:40.0257455Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0257541Z         with self._recreate_cm():
2025-01-10T12:40:40.0257760Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0257849Z E           AssertionError: 
2025-01-10T12:40:40.0257963Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0258037Z E           
2025-01-10T12:40:40.0258147Z E           Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.0258287Z E           Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.0258427Z E           Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.0258604Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0258691Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0258867Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0258955Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0258960Z 
2025-01-10T12:40:40.0259173Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0259403Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-10T12:40:40.0259407Z 
2025-01-10T12:40:40.0259736Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6dd9310>
2025-01-10T12:40:40.0259932Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1238e30>
2025-01-10T12:40:40.0260273Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-10T12:40:40.0260277Z 
2025-01-10T12:40:40.0260423Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0260529Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0260836Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0261032Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0261209Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0261365Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0261369Z 
2025-01-10T12:40:40.0261594Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0261917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0262337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0262470Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0262649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0262653Z 
2025-01-10T12:40:40.0263166Z args = (<function assert_allclose.<locals>.compare at 0x7f22f0fe9760>, array([1.54085030e+39, 1.54785895e+39, 1.54018958e+39,...), array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, ...,
2025-01-10T12:40:40.0263376Z        1.27325829e+31, 1.26097974e+31, 1.22258748e+31]))
2025-01-10T12:40:40.0263684Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0263726Z 
2025-01-10T12:40:40.0263840Z     @wraps(func)
2025-01-10T12:40:40.0263994Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0264133Z         with self._recreate_cm():
2025-01-10T12:40:40.0264319Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0264456Z E           AssertionError: 
2025-01-10T12:40:40.0264634Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0264742Z E           
2025-01-10T12:40:40.0264929Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0265085Z E           Max absolute difference among violations: 5.49004665e+37
2025-01-10T12:40:40.0265344Z E           Max relative difference among violations: 9.345234
2025-01-10T12:40:40.0272949Z E            ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-10T12:40:40.0273080Z E                  1.146857e+31, 1.117191e+31])
2025-01-10T12:40:40.0273455Z E            DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T12:40:40.0273558Z E                  1.260980e+31, 1.222587e+31])
2025-01-10T12:40:40.0273564Z 
2025-01-10T12:40:40.0273798Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0273967Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0273977Z 
2025-01-10T12:40:40.0273981Z 
2025-01-10T12:40:40.0274414Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:14<00:00, 109474.09it/s][A
2025-01-10T12:40:40.0274661Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-10T12:40:40.0274666Z 
2025-01-10T12:40:40.0274997Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3260>
2025-01-10T12:40:40.0275205Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e11ae0f0>
2025-01-10T12:40:40.0275417Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-10T12:40:40.0275421Z 
2025-01-10T12:40:40.0275562Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0275674Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0275768Z         j_blue_estimator = (
2025-01-10T12:40:40.0276284Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0276365Z         )
2025-01-10T12:40:40.0276525Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0276646Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0276650Z 
2025-01-10T12:40:40.0276796Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0276916Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0276920Z 
2025-01-10T12:40:40.0277205Z args = (<function assert_allclose.<locals>.compare at 0x7f22d651e2a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0277283Z        [0., 0., .....,
2025-01-10T12:40:40.0277378Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0277458Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0277545Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0277820Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0277829Z 
2025-01-10T12:40:40.0277909Z     @wraps(func)
2025-01-10T12:40:40.0278003Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0278090Z         with self._recreate_cm():
2025-01-10T12:40:40.0278190Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0278281Z E           AssertionError: 
2025-01-10T12:40:40.0278403Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0278478Z E           
2025-01-10T12:40:40.0278597Z E           Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.0278745Z E           Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.0278882Z E           Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.0278990Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279086Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279183Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0279297Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279390Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279481Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0279485Z 
2025-01-10T12:40:40.0279704Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0279930Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-10T12:40:40.0279933Z 
2025-01-10T12:40:40.0280414Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3980>
2025-01-10T12:40:40.0280619Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e11ae0f0>
2025-01-10T12:40:40.0280802Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-10T12:40:40.0280806Z 
2025-01-10T12:40:40.0280925Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0281035Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0281241Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0281403Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0281513Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0281635Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0281640Z 
2025-01-10T12:40:40.0281781Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0281901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0282249Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0282352Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0282465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0282469Z 
2025-01-10T12:40:40.0283063Z args = (<function assert_allclose.<locals>.compare at 0x7f22c6c0db20>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T12:40:40.0283171Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0283443Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0283448Z 
2025-01-10T12:40:40.0283527Z     @wraps(func)
2025-01-10T12:40:40.0283620Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0283715Z         with self._recreate_cm():
2025-01-10T12:40:40.0283812Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0283906Z E           AssertionError: 
2025-01-10T12:40:40.0284014Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0284096Z E           
2025-01-10T12:40:40.0284198Z E           Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.0284342Z E           Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.0284475Z E           Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.0284649Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0284735Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0284914Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0285001Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0285005Z 
2025-01-10T12:40:40.0285219Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0285459Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-10T12:40:40.0285464Z 
2025-01-10T12:40:40.0285789Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3f80>
2025-01-10T12:40:40.0285990Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e11ae0f0>
2025-01-10T12:40:40.0286474Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-10T12:40:40.0286483Z 
2025-01-10T12:40:40.0286702Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0286818Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0287016Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0287183Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0287286Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0287545Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0287550Z 
2025-01-10T12:40:40.0287686Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0287806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0288141Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0288245Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0288354Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0288358Z 
2025-01-10T12:40:40.0288835Z args = (<function assert_allclose.<locals>.compare at 0x7f22b2a8ac00>, array([1.54088344e+39, 1.54038935e+39, 1.53613853e+39,...), array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, ...,
2025-01-10T12:40:40.0288945Z        2.08252810e+31, 2.08867593e+31, 2.06027793e+31]))
2025-01-10T12:40:40.0289209Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0289213Z 
2025-01-10T12:40:40.0289298Z     @wraps(func)
2025-01-10T12:40:40.0289384Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0289477Z         with self._recreate_cm():
2025-01-10T12:40:40.0289567Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0289660Z E           AssertionError: 
2025-01-10T12:40:40.0289886Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0289970Z E           
2025-01-10T12:40:40.0290072Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0290218Z E           Max absolute difference among violations: 7.72948946e+37
2025-01-10T12:40:40.0290355Z E           Max relative difference among violations: 17.81369197
2025-01-10T12:40:40.0290527Z E            ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-10T12:40:40.0290626Z E                  2.087889e+31, 2.059957e+31])
2025-01-10T12:40:40.0290809Z E            DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T12:40:40.0290905Z E                  2.088676e+31, 2.060278e+31])
2025-01-10T12:40:40.0290909Z 
2025-01-10T12:40:40.0291112Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0291277Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-10T12:40:40.0291287Z 
2025-01-10T12:40:40.0291976Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T12:40:40.0292259Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22f0c5ebd0>
2025-01-10T12:40:40.0292623Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T12:40:40.0292628Z 
2025-01-10T12:40:40.0292723Z     def test_montecarlo_main_loop(
2025-01-10T12:40:40.0292823Z         montecarlo_main_loop_config,
2025-01-10T12:40:40.0292908Z         regression_data,
2025-01-10T12:40:40.0292996Z         atomic_dataset,
2025-01-10T12:40:40.0293072Z     ):
2025-01-10T12:40:40.0293191Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T12:40:40.0293348Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T12:40:40.0293450Z             montecarlo_main_loop_config,
2025-01-10T12:40:40.0293548Z             atom_data=atomic_dataset,
2025-01-10T12:40:40.0293643Z             virtual_packet_logging=False,
2025-01-10T12:40:40.0293743Z             legacy_mode_enabled=True,
2025-01-10T12:40:40.0293818Z         )
2025-01-10T12:40:40.0293955Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T12:40:40.0294068Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T12:40:40.0294145Z     
2025-01-10T12:40:40.0294368Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T12:40:40.0294478Z             montecarlo_main_loop_simulation
2025-01-10T12:40:40.0294555Z         )
2025-01-10T12:40:40.0294634Z     
2025-01-10T12:40:40.0294725Z         # Load compare data from refdata
2025-01-10T12:40:40.0294804Z     
2025-01-10T12:40:40.0294897Z         expected_nu = expected_hdf_store[
2025-01-10T12:40:40.0295036Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T12:40:40.0295109Z         ]
2025-01-10T12:40:40.0295219Z         expected_energy = expected_hdf_store[
2025-01-10T12:40:40.0295359Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T12:40:40.0295433Z         ]
2025-01-10T12:40:40.0295563Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T12:40:40.0295707Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T12:40:40.0295786Z         ]
2025-01-10T12:40:40.0295899Z         expected_j_estimator = expected_hdf_store[
2025-01-10T12:40:40.0296037Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T12:40:40.0296317Z         ]
2025-01-10T12:40:40.0296431Z         expected_hdf_store.close()
2025-01-10T12:40:40.0296640Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-10T12:40:40.0296820Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T12:40:40.0297092Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T12:40:40.0297189Z         actual_nu_bar_estimator = (
2025-01-10T12:40:40.0297342Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T12:40:40.0297417Z         )
2025-01-10T12:40:40.0297606Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T12:40:40.0297678Z     
2025-01-10T12:40:40.0297765Z         # Compare
2025-01-10T12:40:40.0297852Z >       npt.assert_allclose(
2025-01-10T12:40:40.0298021Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-10T12:40:40.0298095Z         )
2025-01-10T12:40:40.0298099Z 
2025-01-10T12:40:40.0298286Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-10T12:40:40.0298402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0298415Z 
2025-01-10T12:40:40.0298860Z args = (<function assert_allclose.<locals>.compare at 0x7f22b014d6c0>, array([9.40448351e+28, 8.06019278e+28, 7.19997537e+28,....88449508e+28, 3.76156653e+28, 3.64401717e+28,
2025-01-10T12:40:40.0299038Z        3.53517538e+28, 3.45355503e+28, 3.34541304e+28, 3.26838651e+28]))
2025-01-10T12:40:40.0299301Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0299305Z 
2025-01-10T12:40:40.0299390Z     @wraps(func)
2025-01-10T12:40:40.0299477Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0299574Z         with self._recreate_cm():
2025-01-10T12:40:40.0299672Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0299764Z E           AssertionError: 
2025-01-10T12:40:40.0299875Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T12:40:40.0299954Z E           
2025-01-10T12:40:40.0300053Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.0300196Z E           Max absolute difference among violations: 6.92504451e+25
2025-01-10T12:40:40.0300336Z E           Max relative difference among violations: 0.00085843
2025-01-10T12:40:40.0300497Z E            ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-10T12:40:40.0300624Z E                  6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-10T12:40:40.0300750Z E                  4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-10T12:40:40.0300916Z E            DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T12:40:40.0301150Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T12:40:40.0301281Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T12:40:40.0301285Z 
2025-01-10T12:40:40.0301490Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0301653Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T12:40:40.0301930Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0302377Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0302567Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0302779Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0302955Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0303025Z 	
2025-01-10T12:40:40.0303128Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0303219Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0303335Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0303501Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0303578Z 	
2025-01-10T12:40:40.0303735Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0303902Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0304066Z 	
2025-01-10T12:40:40.0304163Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0304263Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0304355Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0304472Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0304627Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0304632Z 
2025-01-10T12:40:40.0304635Z 
2025-01-10T12:40:40.0304879Z Packets:                                                                                   11032/? [00:10<00:00, 1055.48it/s][A
2025-01-10T12:40:40.0304884Z 
2025-01-10T12:40:40.0305116Z Packets:                                                                                   21526/? [00:10<00:00, 2456.20it/s][A
2025-01-10T12:40:40.0305128Z 
2025-01-10T12:40:40.0305351Z Packets:                                                                                   32368/? [00:10<00:00, 4458.71it/s][A
2025-01-10T12:40:40.0305355Z 
2025-01-10T12:40:40.0305592Z Packets:                                                                                   43237/? [00:10<00:00, 7198.69it/s][A
2025-01-10T12:40:40.0305596Z 
2025-01-10T12:40:40.0305822Z Packets:                                                                                   54170/? [00:10<00:00, 10895.25it/s][A
2025-01-10T12:40:40.0305826Z 
2025-01-10T12:40:40.0306166Z Packets:                                                                                   65008/? [00:10<00:00, 15657.29it/s][A
2025-01-10T12:40:40.0306171Z 
2025-01-10T12:40:40.0306411Z Packets:                                                                                   75957/? [00:11<00:00, 21803.65it/s][A
2025-01-10T12:40:40.0306416Z 
2025-01-10T12:40:40.0306640Z Packets:                                                                                   86922/? [00:11<00:00, 29320.68it/s][A
2025-01-10T12:40:40.0306644Z 
2025-01-10T12:40:40.0306872Z Packets:                                                                                   97868/? [00:11<00:00, 38050.04it/s][A
2025-01-10T12:40:40.0307028Z Iterations:                                                                                40/? [08:01<00:00,  5.61s/it]
2025-01-10T12:40:40.0307032Z 
2025-01-10T12:40:40.0307269Z Packets:                                                                                   104009/? [00:11<00:00, 38050.04it/s][A
2025-01-10T12:40:40.0307426Z ------------------------------ Captured log call -------------------------------
2025-01-10T12:40:40.0308069Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0308304Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0308417Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0308520Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0308606Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0308615Z 
2025-01-10T12:40:40.0308734Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0308823Z 	Starting iteration 1 of 1
2025-01-10T12:40:40.0308934Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0309034Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0309133Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0309234Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0309402Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-10T12:40:40.0309406Z 
2025-01-10T12:40:40.0310092Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T12:40:40.0310371Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c6fe9400>
2025-01-10T12:40:40.0310843Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T12:40:40.0310848Z 
2025-01-10T12:40:40.0310965Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-10T12:40:40.0311056Z         montecarlo_main_loop_config,
2025-01-10T12:40:40.0311146Z         regression_data,
2025-01-10T12:40:40.0311228Z         atomic_dataset,
2025-01-10T12:40:40.0311309Z     ):
2025-01-10T12:40:40.0311419Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T12:40:40.0311605Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-10T12:40:40.0311677Z     
2025-01-10T12:40:40.0311840Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T12:40:40.0311934Z             montecarlo_main_loop_config,
2025-01-10T12:40:40.0312030Z             atom_data=atomic_dataset,
2025-01-10T12:40:40.0312121Z             virtual_packet_logging=True,
2025-01-10T12:40:40.0312214Z             legacy_mode_enabled=True,
2025-01-10T12:40:40.0312294Z         )
2025-01-10T12:40:40.0312433Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T12:40:40.0312549Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T12:40:40.0312621Z     
2025-01-10T12:40:40.0312767Z         transport = montecarlo_main_loop_simulation.transport
2025-01-10T12:40:40.0312838Z     
2025-01-10T12:40:40.0313046Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-10T12:40:40.0313118Z     
2025-01-10T12:40:40.0313254Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T12:40:40.0313356Z             montecarlo_main_loop_simulation
2025-01-10T12:40:40.0313435Z         )
2025-01-10T12:40:40.0313507Z     
2025-01-10T12:40:40.0313608Z         expected_nu = expected_hdf_store[
2025-01-10T12:40:40.0313734Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T12:40:40.0313816Z         ]
2025-01-10T12:40:40.0313916Z         expected_energy = expected_hdf_store[
2025-01-10T12:40:40.0314061Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T12:40:40.0314135Z         ]
2025-01-10T12:40:40.0314259Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T12:40:40.0314409Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T12:40:40.0314483Z         ]
2025-01-10T12:40:40.0314597Z         expected_j_estimator = expected_hdf_store[
2025-01-10T12:40:40.0314726Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T12:40:40.0314805Z         ]
2025-01-10T12:40:40.0315011Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-10T12:40:40.0315163Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-10T12:40:40.0315237Z         ]
2025-01-10T12:40:40.0315367Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-10T12:40:40.0315523Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-10T12:40:40.0315605Z         ]
2025-01-10T12:40:40.0315677Z     
2025-01-10T12:40:40.0315798Z         transport_state = transport.transport_state
2025-01-10T12:40:40.0315873Z     
2025-01-10T12:40:40.0316244Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T12:40:40.0316418Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T12:40:40.0316559Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-10T12:40:40.0316680Z         actual_j_estimator = transport_state.j_estimator
2025-01-10T12:40:40.0316841Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-10T12:40:40.0317027Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-10T12:40:40.0317098Z     
2025-01-10T12:40:40.0317198Z         expected_hdf_store.close()
2025-01-10T12:40:40.0317274Z         # Compare
2025-01-10T12:40:40.0317363Z >       npt.assert_allclose(
2025-01-10T12:40:40.0317461Z             actual_nu_bar_estimator,
2025-01-10T12:40:40.0317681Z             expected_nu_bar_estimator,
2025-01-10T12:40:40.0317769Z             rtol=1e-12,
2025-01-10T12:40:40.0317848Z             atol=1e-15,
2025-01-10T12:40:40.0317925Z         )
2025-01-10T12:40:40.0317928Z 
2025-01-10T12:40:40.0318121Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-10T12:40:40.0318241Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0318244Z 
2025-01-10T12:40:40.0318693Z args = (<function assert_allclose.<locals>.compare at 0x7f22e12e6f20>, array([9.39632189e+28, 8.06452049e+28, 7.18754600e+28,....86491193e+28, 3.76603462e+28, 3.65184134e+28,
2025-01-10T12:40:40.0318835Z        3.55625311e+28, 3.45809153e+28, 3.35093337e+28, 3.25549805e+28]))
2025-01-10T12:40:40.0319112Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-10T12:40:40.0319117Z 
2025-01-10T12:40:40.0319195Z     @wraps(func)
2025-01-10T12:40:40.0319295Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0319384Z         with self._recreate_cm():
2025-01-10T12:40:40.0319481Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0319572Z E           AssertionError: 
2025-01-10T12:40:40.0319691Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T12:40:40.0319771Z E           
2025-01-10T12:40:40.0319872Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.0320015Z E           Max absolute difference among violations: 2.81924274e+25
2025-01-10T12:40:40.0320143Z E           Max relative difference among violations: 0.0005693
2025-01-10T12:40:40.0320312Z E            ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-10T12:40:40.0320435Z E                  6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-10T12:40:40.0320567Z E                  4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-10T12:40:40.0320729Z E            DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T12:40:40.0320861Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T12:40:40.0320988Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T12:40:40.0320992Z 
2025-01-10T12:40:40.0321197Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0321356Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T12:40:40.0321614Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0322190Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0322376Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0322595Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0322765Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0322849Z 	
2025-01-10T12:40:40.0322953Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0323038Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0323151Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0323313Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0323389Z 	
2025-01-10T12:40:40.0323545Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0323711Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0323782Z 	
2025-01-10T12:40:40.0323881Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T12:40:40.0323980Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T12:40:40.0324079Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0324186Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0324344Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0324349Z 
2025-01-10T12:40:40.0324352Z 
2025-01-10T12:40:40.0324597Z Packets:                                                                                   108741/? [00:14<00:00, 10392.87it/s][A
2025-01-10T12:40:40.0324690Z 
2025-01-10T12:40:40.0324923Z Packets:                                                                                   116338/? [00:14<00:00, 12452.01it/s][A
2025-01-10T12:40:40.0324927Z 
2025-01-10T12:40:40.0325161Z Packets:                                                                                   122673/? [00:14<00:00, 14497.34it/s][A
2025-01-10T12:40:40.0325165Z 
2025-01-10T12:40:40.0325393Z Packets:                                                                                   128143/? [00:14<00:00, 16574.25it/s][A
2025-01-10T12:40:40.0325398Z 
2025-01-10T12:40:40.0325626Z Packets:                                                                                   133024/? [00:14<00:00, 18650.19it/s][A
2025-01-10T12:40:40.0325630Z 
2025-01-10T12:40:40.0325858Z Packets:                                                                                   137477/? [00:14<00:00, 20756.41it/s][A
2025-01-10T12:40:40.0325866Z 
2025-01-10T12:40:40.0326267Z Packets:                                                                                   141642/? [00:14<00:00, 22906.58it/s][A
2025-01-10T12:40:40.0326275Z 
2025-01-10T12:40:40.0326515Z Packets:                                                                                   145625/? [00:15<00:00, 24944.49it/s][A
2025-01-10T12:40:40.0326518Z 
2025-01-10T12:40:40.0326746Z Packets:                                                                                   149466/? [00:15<00:00, 26876.69it/s][A
2025-01-10T12:40:40.0326755Z 
2025-01-10T12:40:40.0326983Z Packets:                                                                                   153214/? [00:15<00:00, 28588.74it/s][A
2025-01-10T12:40:40.0326986Z 
2025-01-10T12:40:40.0327214Z Packets:                                                                                   156892/? [00:15<00:00, 30050.45it/s][A
2025-01-10T12:40:40.0327218Z 
2025-01-10T12:40:40.0327447Z Packets:                                                                                   160519/? [00:15<00:00, 31257.42it/s][A
2025-01-10T12:40:40.0327450Z 
2025-01-10T12:40:40.0327678Z Packets:                                                                                   164110/? [00:15<00:00, 32256.90it/s][A
2025-01-10T12:40:40.0327682Z 
2025-01-10T12:40:40.0327908Z Packets:                                                                                   167680/? [00:15<00:00, 33105.19it/s][A
2025-01-10T12:40:40.0327912Z 
2025-01-10T12:40:40.0328254Z Packets:                                                                                   171244/? [00:15<00:00, 33547.35it/s][A
2025-01-10T12:40:40.0328259Z 
2025-01-10T12:40:40.0328491Z Packets:                                                                                   174780/? [00:15<00:00, 33929.84it/s][A
2025-01-10T12:40:40.0328495Z 
2025-01-10T12:40:40.0328721Z Packets:                                                                                   178302/? [00:15<00:00, 34236.88it/s][A
2025-01-10T12:40:40.0328735Z 
2025-01-10T12:40:40.0328959Z Packets:                                                                                   181818/? [00:16<00:00, 33805.06it/s][A
2025-01-10T12:40:40.0328963Z 
2025-01-10T12:40:40.0329193Z Packets:                                                                                   185336/? [00:16<00:00, 34196.50it/s][A
2025-01-10T12:40:40.0329197Z 
2025-01-10T12:40:40.0329421Z Packets:                                                                                   188854/? [00:16<00:00, 34482.20it/s][A
2025-01-10T12:40:40.0329429Z 
2025-01-10T12:40:40.0329657Z Packets:                                                                                   192395/? [00:16<00:00, 34753.66it/s][A
2025-01-10T12:40:40.0329660Z 
2025-01-10T12:40:40.0329890Z Packets:                                                                                   195895/? [00:16<00:00, 34664.69it/s][A
2025-01-10T12:40:40.0330018Z 
2025-01-10T12:40:40.0330245Z Packets:                                                                                   199379/? [00:16<00:00, 34688.52it/s][A
2025-01-10T12:40:40.0330249Z 
2025-01-10T12:40:40.0330482Z Packets:                                                                                   202891/? [00:16<00:00, 34816.31it/s][A
2025-01-10T12:40:40.0330634Z Iterations:                                                                                41/? [08:07<00:00,  5.57s/it]
2025-01-10T12:40:40.0330638Z 
2025-01-10T12:40:40.0330876Z Packets:                                                                                   204009/? [00:16<00:00, 34816.31it/s][A
2025-01-10T12:40:40.0331032Z ------------------------------ Captured log call -------------------------------
2025-01-10T12:40:40.0331530Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0331771Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0331882Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0331983Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0332068Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0332072Z 
2025-01-10T12:40:40.0332186Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0332274Z 	Starting iteration 1 of 1
2025-01-10T12:40:40.0332380Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0332471Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T12:40:40.0332571Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T12:40:40.0332670Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0332825Z __________________________ test_boundary_interactions __________________________
2025-01-10T12:40:40.0332829Z 
2025-01-10T12:40:40.0333619Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f23019aa8a0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f22b29c8e50>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f22b29ca2c0>])
2025-01-10T12:40:40.0333897Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ab2aad80>
2025-01-10T12:40:40.0333902Z 
2025-01-10T12:40:40.0334074Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-10T12:40:40.0334173Z         no_of_packets = len(rpacket_tracker)
2025-01-10T12:40:40.0334251Z     
2025-01-10T12:40:40.0334347Z         # Hard coding the number of columns
2025-01-10T12:40:40.0334587Z         # Based on the largest size of boundary_interaction array (60)
2025-01-10T12:40:40.0334702Z         obtained_boundary_interaction = np.full(
2025-01-10T12:40:40.0334789Z             (no_of_packets, 64),
2025-01-10T12:40:40.0334867Z             [-1],
2025-01-10T12:40:40.0335004Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-10T12:40:40.0335088Z         )
2025-01-10T12:40:40.0335160Z     
2025-01-10T12:40:40.0335281Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-10T12:40:40.0335377Z >           obtained_boundary_interaction[
2025-01-10T12:40:40.0335492Z                 i, : tracker.boundary_interaction.size
2025-01-10T12:40:40.0335588Z             ] = tracker.boundary_interaction
2025-01-10T12:40:40.0335799Z E           ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-10T12:40:40.0335804Z 
2025-01-10T12:40:40.0336014Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:147: ValueError
2025-01-10T12:40:40.0336387Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-10T12:40:40.0336393Z 
2025-01-10T12:40:40.0337073Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T12:40:40.0337473Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c45d1400>
2025-01-10T12:40:40.0337824Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T12:40:40.0338224Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f22ca8ae5a0>
2025-01-10T12:40:40.0338234Z 
2025-01-10T12:40:40.0338335Z     def test_montecarlo_main_loop_weighted(
2025-01-10T12:40:40.0338430Z         montecarlo_main_loop_config,
2025-01-10T12:40:40.0338519Z         regression_data,
2025-01-10T12:40:40.0338608Z         atomic_dataset,
2025-01-10T12:40:40.0338701Z         simple_weighted_packet_source,
2025-01-10T12:40:40.0338780Z     ):
2025-01-10T12:40:40.0338887Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T12:40:40.0339065Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-10T12:40:40.0339163Z             montecarlo_main_loop_config,
2025-01-10T12:40:40.0339257Z             atom_data=atomic_dataset,
2025-01-10T12:40:40.0339350Z             virtual_packet_logging=False,
2025-01-10T12:40:40.0339442Z             legacy_mode_enabled=True,
2025-01-10T12:40:40.0339515Z         )
2025-01-10T12:40:40.0339676Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-10T12:40:40.0339773Z             simple_weighted_packet_source
2025-01-10T12:40:40.0339851Z         )
2025-01-10T12:40:40.0340006Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-10T12:40:40.0340144Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-10T12:40:40.0340220Z     
2025-01-10T12:40:40.0340330Z         # Get the montecarlo simple regression data
2025-01-10T12:40:40.0340422Z         regression_data_dir = (
2025-01-10T12:40:40.0340600Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-10T12:40:40.0340753Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-10T12:40:40.0340825Z         )
2025-01-10T12:40:40.0340994Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-10T12:40:40.0341065Z     
2025-01-10T12:40:40.0341163Z         # Load compare data from refdata
2025-01-10T12:40:40.0341233Z     
2025-01-10T12:40:40.0341331Z         expected_nu = expected_hdf_store[
2025-01-10T12:40:40.0341458Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T12:40:40.0341536Z         ]
2025-01-10T12:40:40.0341641Z         expected_energy = expected_hdf_store[
2025-01-10T12:40:40.0341895Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T12:40:40.0341977Z         ]
2025-01-10T12:40:40.0342097Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T12:40:40.0342249Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T12:40:40.0342320Z         ]
2025-01-10T12:40:40.0342431Z         expected_j_estimator = expected_hdf_store[
2025-01-10T12:40:40.0342566Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T12:40:40.0342643Z         ]
2025-01-10T12:40:40.0342736Z         expected_hdf_store.close()
2025-01-10T12:40:40.0342831Z         transport_state = (
2025-01-10T12:40:40.0343012Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-10T12:40:40.0343090Z         )
2025-01-10T12:40:40.0343269Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T12:40:40.0343410Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T12:40:40.0343514Z         actual_nu_bar_estimator = (
2025-01-10T12:40:40.0343658Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T12:40:40.0343737Z         )
2025-01-10T12:40:40.0343920Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T12:40:40.0343997Z     
2025-01-10T12:40:40.0344075Z         # Compare
2025-01-10T12:40:40.0344285Z         npt.assert_allclose(
2025-01-10T12:40:40.0344446Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-10T12:40:40.0344524Z         )
2025-01-10T12:40:40.0344709Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-10T12:40:40.0344868Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-10T12:40:40.0344873Z 
2025-01-10T12:40:40.0345120Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-10T12:40:40.0345241Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0345245Z 
2025-01-10T12:40:40.0345717Z args = (<function assert_allclose.<locals>.compare at 0x7f22ca7be980>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-10T12:40:40.0345830Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-10T12:40:40.0346280Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0346288Z 
2025-01-10T12:40:40.0346372Z     @wraps(func)
2025-01-10T12:40:40.0346469Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0346557Z         with self._recreate_cm():
2025-01-10T12:40:40.0346655Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0346751Z E           AssertionError: 
2025-01-10T12:40:40.0346862Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-10T12:40:40.0346941Z E           
2025-01-10T12:40:40.0347052Z E           Mismatched elements: 75 / 100000 (0.075%)
2025-01-10T12:40:40.0347197Z E           Max absolute difference among violations: 2.01554089e-05
2025-01-10T12:40:40.0347325Z E           Max relative difference among violations: 2.08104546
2025-01-10T12:40:40.0347510Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.0347607Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.0347795Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.0347887Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.0347891Z 
2025-01-10T12:40:40.0348102Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0348260Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T12:40:40.0348520Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0349094Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0349284Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0349503Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0349671Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0349752Z 	
2025-01-10T12:40:40.0349848Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0349938Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0350047Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0350214Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0350286Z 	
2025-01-10T12:40:40.0350445Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0350611Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0350682Z 	
2025-01-10T12:40:40.0350782Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0350875Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0350980Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0351087Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0351247Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0351252Z 
2025-01-10T12:40:40.0351255Z 
2025-01-10T12:40:40.0351496Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-10T12:40:40.0351619Z 
2025-01-10T12:40:40.0351850Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-10T12:40:40.0351854Z 
2025-01-10T12:40:40.0352123Z Packets:   ████████▍                                                                       10605/100000 [00:00<00:00, 106048.33it/s][A
2025-01-10T12:40:40.0352128Z 
2025-01-10T12:40:40.0352390Z Packets:   █████████████████▎                                                              21602/100000 [00:00<00:00, 108353.42it/s][A
2025-01-10T12:40:40.0352404Z 
2025-01-10T12:40:40.0352677Z Packets:   █████████████████████████▉                                                      32438/100000 [00:00<00:00, 108344.79it/s][A
2025-01-10T12:40:40.0352681Z 
2025-01-10T12:40:40.0352963Z Packets:   ██████████████████████████████████▋                                             43403/100000 [00:00<00:00, 108857.41it/s][A
2025-01-10T12:40:40.0352982Z 
2025-01-10T12:40:40.0353273Z Packets:   ███████████████████████████████████████████▍                                    54340/100000 [00:00<00:00, 109039.85it/s][A
2025-01-10T12:40:40.0353277Z 
2025-01-10T12:40:40.0353587Z Packets:   ████████████████████████████████████████████████████▏                           65244/100000 [00:00<00:00, 108981.54it/s][A
2025-01-10T12:40:40.0353591Z 
2025-01-10T12:40:40.0353905Z Packets:   ████████████████████████████████████████████████████████████▉                   76157/100000 [00:00<00:00, 109028.56it/s][A
2025-01-10T12:40:40.0353909Z 
2025-01-10T12:40:40.0354252Z Packets:   █████████████████████████████████████████████████████████████████████▋          87077/100000 [00:00<00:00, 109081.67it/s][A
2025-01-10T12:40:40.0354257Z 
2025-01-10T12:40:40.0354600Z Packets:   ██████████████████████████████████████████████████████████████████████████████▍ 98003/100000 [00:00<00:00, 109136.06it/s][A
2025-01-10T12:40:40.0354749Z Iterations:                                                                                45/? [08:57<00:00,  8.12s/it]
2025-01-10T12:40:40.0354767Z 
2025-01-10T12:40:40.0355113Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:01<00:00, 109136.06it/s][A
2025-01-10T12:40:40.0355269Z ------------------------------ Captured log call -------------------------------
2025-01-10T12:40:40.0355769Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0356288Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0356421Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0356526Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0356610Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0356614Z 
2025-01-10T12:40:40.0356730Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0356952Z 	Starting iteration 1 of 1
2025-01-10T12:40:40.0357062Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0357157Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0357254Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0357347Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0357577Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-10T12:40:40.0357581Z 
2025-01-10T12:40:40.0357849Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba44a0>
2025-01-10T12:40:40.0358147Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0358423Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-10T12:40:40.0358511Z attribute = 'plot_data'
2025-01-10T12:40:40.0358515Z 
2025-01-10T12:40:40.0358618Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0358701Z         "attribute",
2025-01-10T12:40:40.0358783Z         [
2025-01-10T12:40:40.0358864Z             "plot_data",
2025-01-10T12:40:40.0358952Z             "plot_colors",
2025-01-10T12:40:40.0359032Z             "new_bin_edges",
2025-01-10T12:40:40.0359108Z         ],
2025-01-10T12:40:40.0359178Z     )
2025-01-10T12:40:40.0359272Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0359347Z         self,
2025-01-10T12:40:40.0359444Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0359520Z         request,
2025-01-10T12:40:40.0359602Z         attribute,
2025-01-10T12:40:40.0359678Z     ):
2025-01-10T12:40:40.0359754Z         """
2025-01-10T12:40:40.0359901Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0359973Z     
2025-01-10T12:40:40.0360061Z         Parameters:
2025-01-10T12:40:40.0360141Z         -----------
2025-01-10T12:40:40.0360326Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0360432Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0360607Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0360680Z         """
2025-01-10T12:40:40.0360796Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0360935Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0361088Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0361249Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0361509Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0361648Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0361769Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0361892Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0361896Z 
2025-01-10T12:40:40.0362041Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0362169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0362173Z 
2025-01-10T12:40:40.0362610Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af9c0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T12:40:40.0362754Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T12:40:40.0363019Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0363028Z 
2025-01-10T12:40:40.0363108Z     @wraps(func)
2025-01-10T12:40:40.0363203Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0363293Z         with self._recreate_cm():
2025-01-10T12:40:40.0363388Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0363476Z E           AssertionError: 
2025-01-10T12:40:40.0363593Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0363751Z E           
2025-01-10T12:40:40.0363853Z E           (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.0364385Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.0364512Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.0364638Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.0364796Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.0364920Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.0365042Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.0365046Z 
2025-01-10T12:40:40.0365257Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0365414Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0365665Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0365917Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0366209Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0366567Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0366781Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-10T12:40:40.0366785Z 
2025-01-10T12:40:40.0367061Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba4920>
2025-01-10T12:40:40.0367344Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0367622Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-10T12:40:40.0367714Z attribute = 'plot_data'
2025-01-10T12:40:40.0367718Z 
2025-01-10T12:40:40.0367817Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0367895Z         "attribute",
2025-01-10T12:40:40.0367973Z         [
2025-01-10T12:40:40.0368058Z             "plot_data",
2025-01-10T12:40:40.0368138Z             "plot_colors",
2025-01-10T12:40:40.0368226Z             "new_bin_edges",
2025-01-10T12:40:40.0368298Z         ],
2025-01-10T12:40:40.0368375Z     )
2025-01-10T12:40:40.0368463Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0368542Z         self,
2025-01-10T12:40:40.0368636Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0368842Z         request,
2025-01-10T12:40:40.0368922Z         attribute,
2025-01-10T12:40:40.0368999Z     ):
2025-01-10T12:40:40.0369071Z         """
2025-01-10T12:40:40.0369214Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0369285Z     
2025-01-10T12:40:40.0369369Z         Parameters:
2025-01-10T12:40:40.0369449Z         -----------
2025-01-10T12:40:40.0369638Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0369739Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0369917Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0369995Z         """
2025-01-10T12:40:40.0370103Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0370249Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0370398Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0370568Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0370717Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0370847Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0370969Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0371097Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0371215Z 
2025-01-10T12:40:40.0371364Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0371483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0371487Z 
2025-01-10T12:40:40.0371833Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17acae0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...47464 ,
2025-01-10T12:40:40.0371971Z        12229.96880815, 12113.40540961, 12605.43283975, 12605.43283975,
2025-01-10T12:40:40.0372058Z        11152.96259546, 11172.04481521]))
2025-01-10T12:40:40.0372318Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0372322Z 
2025-01-10T12:40:40.0372405Z     @wraps(func)
2025-01-10T12:40:40.0372491Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0372584Z         with self._recreate_cm():
2025-01-10T12:40:40.0372673Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0372772Z E           AssertionError: 
2025-01-10T12:40:40.0372887Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0372961Z E           
2025-01-10T12:40:40.0373066Z E           Mismatched elements: 558 / 558 (100%)
2025-01-10T12:40:40.0373201Z E           Max absolute difference among violations: 5978.84516144
2025-01-10T12:40:40.0373334Z E           Max relative difference among violations: 0.4321623
2025-01-10T12:40:40.0373489Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.0373619Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.0373742Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.0373906Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.0374023Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.0374158Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.0374162Z 
2025-01-10T12:40:40.0374367Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0374577Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-10T12:40:40.0374581Z 
2025-01-10T12:40:40.0374845Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba4b60>
2025-01-10T12:40:40.0375125Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0375489Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-10T12:40:40.0375579Z attribute = 'plot_data'
2025-01-10T12:40:40.0375583Z 
2025-01-10T12:40:40.0375683Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0375760Z         "attribute",
2025-01-10T12:40:40.0375838Z         [
2025-01-10T12:40:40.0375928Z             "plot_data",
2025-01-10T12:40:40.0376006Z             "plot_colors",
2025-01-10T12:40:40.0376239Z             "new_bin_edges",
2025-01-10T12:40:40.0376338Z         ],
2025-01-10T12:40:40.0376422Z     )
2025-01-10T12:40:40.0376513Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0376592Z         self,
2025-01-10T12:40:40.0376683Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0376763Z         request,
2025-01-10T12:40:40.0376838Z         attribute,
2025-01-10T12:40:40.0376916Z     ):
2025-01-10T12:40:40.0376989Z         """
2025-01-10T12:40:40.0377134Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0377206Z     
2025-01-10T12:40:40.0377290Z         Parameters:
2025-01-10T12:40:40.0377369Z         -----------
2025-01-10T12:40:40.0377551Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0377649Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0377817Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0378022Z         """
2025-01-10T12:40:40.0378130Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0378270Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0378416Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0378582Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0378731Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0378865Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0378984Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0379109Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0379114Z 
2025-01-10T12:40:40.0379255Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0379376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0379385Z 
2025-01-10T12:40:40.0379868Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af9c0>, array([11193.08324978, 13536.93126023, 11647.60804688,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T12:40:40.0379971Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T12:40:40.0380239Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0380243Z 
2025-01-10T12:40:40.0380322Z     @wraps(func)
2025-01-10T12:40:40.0380419Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0380508Z         with self._recreate_cm():
2025-01-10T12:40:40.0380604Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0380690Z E           AssertionError: 
2025-01-10T12:40:40.0380805Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0380887Z E           
2025-01-10T12:40:40.0380982Z E           (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.0381153Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.0381271Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.0381400Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.0381560Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.0381682Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.0381936Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.0381942Z 
2025-01-10T12:40:40.0382147Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0382369Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-10T12:40:40.0382373Z 
2025-01-10T12:40:40.0382636Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba4da0>
2025-01-10T12:40:40.0382924Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0383193Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-10T12:40:40.0383284Z attribute = 'plot_data'
2025-01-10T12:40:40.0383288Z 
2025-01-10T12:40:40.0383382Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0383467Z         "attribute",
2025-01-10T12:40:40.0383538Z         [
2025-01-10T12:40:40.0383626Z             "plot_data",
2025-01-10T12:40:40.0383710Z             "plot_colors",
2025-01-10T12:40:40.0383798Z             "new_bin_edges",
2025-01-10T12:40:40.0383877Z         ],
2025-01-10T12:40:40.0383950Z     )
2025-01-10T12:40:40.0384042Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0384116Z         self,
2025-01-10T12:40:40.0384212Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0384286Z         request,
2025-01-10T12:40:40.0384455Z         attribute,
2025-01-10T12:40:40.0384526Z     ):
2025-01-10T12:40:40.0384602Z         """
2025-01-10T12:40:40.0384734Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0384810Z     
2025-01-10T12:40:40.0384888Z         Parameters:
2025-01-10T12:40:40.0384968Z         -----------
2025-01-10T12:40:40.0385144Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0385246Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0385408Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0385487Z         """
2025-01-10T12:40:40.0385601Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0385743Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0385894Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0386154Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0386322Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0386447Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0386571Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0386690Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0386694Z 
2025-01-10T12:40:40.0386842Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0386956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0386959Z 
2025-01-10T12:40:40.0387444Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af380>, array([11193.08324978, 13536.93126023, 11647.60804688,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T12:40:40.0387555Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T12:40:40.0387810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0387820Z 
2025-01-10T12:40:40.0387905Z     @wraps(func)
2025-01-10T12:40:40.0387990Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0388082Z         with self._recreate_cm():
2025-01-10T12:40:40.0388170Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0388262Z E           AssertionError: 
2025-01-10T12:40:40.0388371Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0388452Z E           
2025-01-10T12:40:40.0388544Z E           (shapes (147,), (159,) mismatch)
2025-01-10T12:40:40.0388820Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.0388949Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.0389073Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.0389234Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.0389355Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.0389481Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.0389486Z 
2025-01-10T12:40:40.0389683Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0389898Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-10T12:40:40.0389902Z 
2025-01-10T12:40:40.0390171Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5010>
2025-01-10T12:40:40.0390456Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0390731Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-10T12:40:40.0390818Z attribute = 'plot_data'
2025-01-10T12:40:40.0390821Z 
2025-01-10T12:40:40.0390919Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0391112Z         "attribute",
2025-01-10T12:40:40.0391189Z         [
2025-01-10T12:40:40.0391268Z             "plot_data",
2025-01-10T12:40:40.0391356Z             "plot_colors",
2025-01-10T12:40:40.0391440Z             "new_bin_edges",
2025-01-10T12:40:40.0391521Z         ],
2025-01-10T12:40:40.0391594Z     )
2025-01-10T12:40:40.0391689Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0391765Z         self,
2025-01-10T12:40:40.0391864Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0391944Z         request,
2025-01-10T12:40:40.0392021Z         attribute,
2025-01-10T12:40:40.0392097Z     ):
2025-01-10T12:40:40.0392177Z         """
2025-01-10T12:40:40.0392317Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0392388Z     
2025-01-10T12:40:40.0392473Z         Parameters:
2025-01-10T12:40:40.0392549Z         -----------
2025-01-10T12:40:40.0392731Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0392833Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0392999Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0393071Z         """
2025-01-10T12:40:40.0393179Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0393314Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0393469Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0393636Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0393789Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0393918Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0394037Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0394162Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0394166Z 
2025-01-10T12:40:40.0394307Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0394436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0394440Z 
2025-01-10T12:40:40.0394880Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af7e0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T12:40:40.0395021Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T12:40:40.0395286Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0395377Z 
2025-01-10T12:40:40.0395457Z     @wraps(func)
2025-01-10T12:40:40.0395546Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0395632Z         with self._recreate_cm():
2025-01-10T12:40:40.0395726Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0395811Z E           AssertionError: 
2025-01-10T12:40:40.0395927Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0396005Z E           
2025-01-10T12:40:40.0396195Z E           (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.0396358Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.0396474Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.0396601Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.0396760Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.0396883Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.0397004Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.0397008Z 
2025-01-10T12:40:40.0397216Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0397370Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0397896Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0398164Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0398323Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0398736Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0399189Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-10T12:40:40.0399198Z 
2025-01-10T12:40:40.0399716Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5250>
2025-01-10T12:40:40.0400245Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0400768Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-10T12:40:40.0400941Z attribute = 'plot_data'
2025-01-10T12:40:40.0400948Z 
2025-01-10T12:40:40.0401120Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0401265Z         "attribute",
2025-01-10T12:40:40.0401393Z         [
2025-01-10T12:40:40.0401542Z             "plot_data",
2025-01-10T12:40:40.0401684Z             "plot_colors",
2025-01-10T12:40:40.0401834Z             "new_bin_edges",
2025-01-10T12:40:40.0401960Z         ],
2025-01-10T12:40:40.0402087Z     )
2025-01-10T12:40:40.0402241Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0402369Z         self,
2025-01-10T12:40:40.0402511Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0402650Z         request,
2025-01-10T12:40:40.0402782Z         attribute,
2025-01-10T12:40:40.0402901Z     ):
2025-01-10T12:40:40.0403029Z         """
2025-01-10T12:40:40.0403272Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0403392Z     
2025-01-10T12:40:40.0403529Z         Parameters:
2025-01-10T12:40:40.0403660Z         -----------
2025-01-10T12:40:40.0403968Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0404140Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0404415Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0404540Z         """
2025-01-10T12:40:40.0404718Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0404956Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0405207Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0405683Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0405941Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0406402Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0406609Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0406816Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0406831Z 
2025-01-10T12:40:40.0407084Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0407276Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0407283Z 
2025-01-10T12:40:40.0408117Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17acf40>, array([11061.80943238, 12248.18222883, 11489.53606278,...), array([13692.75973672, 11362.93720064, 12466.53861691, ...,
2025-01-10T12:40:40.0408306Z        12605.43283975, 11152.96259546, 11172.04481521]))
2025-01-10T12:40:40.0408755Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0408764Z 
2025-01-10T12:40:40.0408905Z     @wraps(func)
2025-01-10T12:40:40.0409048Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0409195Z         with self._recreate_cm():
2025-01-10T12:40:40.0409340Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0409692Z E           AssertionError: 
2025-01-10T12:40:40.0409874Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0410007Z E           
2025-01-10T12:40:40.0410162Z E           (shapes (1435,), (1466,) mismatch)
2025-01-10T12:40:40.0410441Z E            ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-10T12:40:40.0410582Z E                  11383.689745, 11102.237019])
2025-01-10T12:40:40.0410847Z E            DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T12:40:40.0410994Z E                  11152.962595, 11172.044815])
2025-01-10T12:40:40.0411001Z 
2025-01-10T12:40:40.0411347Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0411618Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0412076Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0412687Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0412948Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0413572Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0413948Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-10T12:40:40.0413958Z 
2025-01-10T12:40:40.0414430Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5310>
2025-01-10T12:40:40.0414958Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0415453Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors]>>
2025-01-10T12:40:40.0415607Z attribute = 'plot_colors'
2025-01-10T12:40:40.0415624Z 
2025-01-10T12:40:40.0415784Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0415923Z         "attribute",
2025-01-10T12:40:40.0416045Z         [
2025-01-10T12:40:40.0416400Z             "plot_data",
2025-01-10T12:40:40.0416543Z             "plot_colors",
2025-01-10T12:40:40.0416676Z             "new_bin_edges",
2025-01-10T12:40:40.0416804Z         ],
2025-01-10T12:40:40.0416927Z     )
2025-01-10T12:40:40.0417083Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0417208Z         self,
2025-01-10T12:40:40.0417374Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0417501Z         request,
2025-01-10T12:40:40.0417894Z         attribute,
2025-01-10T12:40:40.0418024Z     ):
2025-01-10T12:40:40.0418163Z         """
2025-01-10T12:40:40.0418405Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0418540Z     
2025-01-10T12:40:40.0418688Z         Parameters:
2025-01-10T12:40:40.0418838Z         -----------
2025-01-10T12:40:40.0419174Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0419369Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0419669Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0419820Z         """
2025-01-10T12:40:40.0420025Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0420265Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0420533Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0420812Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0421068Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0421289Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0421504Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0421700Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0421895Z 
2025-01-10T12:40:40.0422142Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0422330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0422347Z 
2025-01-10T12:40:40.0422885Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17ad080>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-10T12:40:40.0423036Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-10T12:40:40.0423464Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0423472Z 
2025-01-10T12:40:40.0423613Z     @wraps(func)
2025-01-10T12:40:40.0423751Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0423903Z         with self._recreate_cm():
2025-01-10T12:40:40.0424042Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0424192Z E           AssertionError: 
2025-01-10T12:40:40.0424371Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0424505Z E           
2025-01-10T12:40:40.0424668Z E           (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.0424901Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0425071Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0425259Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0425395Z E                  0.      , 1.      ])
2025-01-10T12:40:40.0425633Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0425808Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0425998Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0426363Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.0426381Z 
2025-01-10T12:40:40.0426728Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0427093Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-10T12:40:40.0427100Z 
2025-01-10T12:40:40.0427539Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5490>
2025-01-10T12:40:40.0428043Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0428679Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-10T12:40:40.0428828Z attribute = 'plot_data'
2025-01-10T12:40:40.0428835Z 
2025-01-10T12:40:40.0428990Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0429117Z         "attribute",
2025-01-10T12:40:40.0429237Z         [
2025-01-10T12:40:40.0429364Z             "plot_data",
2025-01-10T12:40:40.0429516Z             "plot_colors",
2025-01-10T12:40:40.0429662Z             "new_bin_edges",
2025-01-10T12:40:40.0429775Z         ],
2025-01-10T12:40:40.0429890Z     )
2025-01-10T12:40:40.0430036Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0430177Z         self,
2025-01-10T12:40:40.0430327Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0430468Z         request,
2025-01-10T12:40:40.0430612Z         attribute,
2025-01-10T12:40:40.0430745Z     ):
2025-01-10T12:40:40.0430872Z         """
2025-01-10T12:40:40.0431112Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0431230Z     
2025-01-10T12:40:40.0431383Z         Parameters:
2025-01-10T12:40:40.0431515Z         -----------
2025-01-10T12:40:40.0431833Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0432005Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0432289Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0432626Z         """
2025-01-10T12:40:40.0432812Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0433051Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0433305Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0433576Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0433832Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0434066Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0434272Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0434472Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0434480Z 
2025-01-10T12:40:40.0434711Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0434902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0434916Z 
2025-01-10T12:40:40.0435721Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17aec00>, array([11193.08324978, 13536.93126023, 11647.60804688,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T12:40:40.0435912Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T12:40:40.0436527Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0436537Z 
2025-01-10T12:40:40.0436666Z     @wraps(func)
2025-01-10T12:40:40.0436819Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0436968Z         with self._recreate_cm():
2025-01-10T12:40:40.0437120Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0437265Z E           AssertionError: 
2025-01-10T12:40:40.0437457Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0437586Z E           
2025-01-10T12:40:40.0437733Z E           (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.0438012Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.0438205Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.0438413Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.0438674Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.0438872Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.0439070Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.0439280Z 
2025-01-10T12:40:40.0439663Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0440008Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-10T12:40:40.0440027Z 
2025-01-10T12:40:40.0440452Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5670>
2025-01-10T12:40:40.0440939Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0441392Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-10T12:40:40.0441558Z attribute = 'plot_data'
2025-01-10T12:40:40.0441566Z 
2025-01-10T12:40:40.0441735Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0441876Z         "attribute",
2025-01-10T12:40:40.0442003Z         [
2025-01-10T12:40:40.0442144Z             "plot_data",
2025-01-10T12:40:40.0442271Z             "plot_colors",
2025-01-10T12:40:40.0442427Z             "new_bin_edges",
2025-01-10T12:40:40.0442540Z         ],
2025-01-10T12:40:40.0442665Z     )
2025-01-10T12:40:40.0442817Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0442937Z         self,
2025-01-10T12:40:40.0443090Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0443208Z         request,
2025-01-10T12:40:40.0443344Z         attribute,
2025-01-10T12:40:40.0443683Z     ):
2025-01-10T12:40:40.0443813Z         """
2025-01-10T12:40:40.0444035Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0444162Z     
2025-01-10T12:40:40.0444287Z         Parameters:
2025-01-10T12:40:40.0444423Z         -----------
2025-01-10T12:40:40.0444710Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0444885Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0445150Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0445275Z         """
2025-01-10T12:40:40.0445457Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0445708Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0445960Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0446466Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0446742Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0446958Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0447165Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0447374Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0447382Z 
2025-01-10T12:40:40.0447659Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0447842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0447849Z 
2025-01-10T12:40:40.0448618Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd6ade0>, array([11107.03324206, 11193.08324978, 13536.93126023,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T12:40:40.0448791Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T12:40:40.0449222Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0449237Z 
2025-01-10T12:40:40.0449366Z     @wraps(func)
2025-01-10T12:40:40.0449512Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0449670Z         with self._recreate_cm():
2025-01-10T12:40:40.0449819Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0449990Z E           AssertionError: 
2025-01-10T12:40:40.0450176Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0450318Z E           
2025-01-10T12:40:40.0450472Z E           (shapes (367,), (379,) mismatch)
2025-01-10T12:40:40.0450946Z E            ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-10T12:40:40.0451174Z E                  11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-10T12:40:40.0451385Z E                  15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-10T12:40:40.0451643Z E            DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T12:40:40.0451842Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T12:40:40.0452071Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T12:40:40.0452079Z 
2025-01-10T12:40:40.0452410Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0452675Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0453123Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0453564Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0453828Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0454350Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0454723Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-10T12:40:40.0454947Z 
2025-01-10T12:40:40.0455398Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5760>
2025-01-10T12:40:40.0455899Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0456545Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors]>>
2025-01-10T12:40:40.0456701Z attribute = 'plot_colors'
2025-01-10T12:40:40.0456708Z 
2025-01-10T12:40:40.0456862Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0456992Z         "attribute",
2025-01-10T12:40:40.0457120Z         [
2025-01-10T12:40:40.0457267Z             "plot_data",
2025-01-10T12:40:40.0457406Z             "plot_colors",
2025-01-10T12:40:40.0457532Z             "new_bin_edges",
2025-01-10T12:40:40.0457665Z         ],
2025-01-10T12:40:40.0457787Z     )
2025-01-10T12:40:40.0457940Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0458077Z         self,
2025-01-10T12:40:40.0458255Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0458390Z         request,
2025-01-10T12:40:40.0458530Z         attribute,
2025-01-10T12:40:40.0458647Z     ):
2025-01-10T12:40:40.0458770Z         """
2025-01-10T12:40:40.0458995Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0459116Z     
2025-01-10T12:40:40.0459246Z         Parameters:
2025-01-10T12:40:40.0459377Z         -----------
2025-01-10T12:40:40.0459668Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0459837Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0460128Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0460245Z         """
2025-01-10T12:40:40.0460431Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0460660Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0460907Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0461181Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0461437Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0461645Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0461848Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0462042Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0462049Z 
2025-01-10T12:40:40.0462301Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0462696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0462707Z 
2025-01-10T12:40:40.0463289Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd6aac0>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-10T12:40:40.0463456Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-10T12:40:40.0463907Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0463915Z 
2025-01-10T12:40:40.0464048Z     @wraps(func)
2025-01-10T12:40:40.0464187Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0464331Z         with self._recreate_cm():
2025-01-10T12:40:40.0464466Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0464613Z E           AssertionError: 
2025-01-10T12:40:40.0464796Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0464913Z E           
2025-01-10T12:40:40.0465078Z E           (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.0465320Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0465503Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0465697Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0466224Z E                  0.      , 1.      ])
2025-01-10T12:40:40.0466485Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0466668Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0466858Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0467036Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.0467042Z 
2025-01-10T12:40:40.0467379Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0467718Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-01-10T12:40:40.0467726Z 
2025-01-10T12:40:40.0468178Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5af0>
2025-01-10T12:40:40.0468683Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e3686ff0>
2025-01-10T12:40:40.0469504Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0469891Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-01-10T12:40:40.0469906Z 
2025-01-10T12:40:40.0470057Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0470331Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0470452Z     ):
2025-01-10T12:40:40.0470580Z         """
2025-01-10T12:40:40.0470803Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0470933Z     
2025-01-10T12:40:40.0471138Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0471262Z     
2025-01-10T12:40:40.0471393Z         Parameters:
2025-01-10T12:40:40.0471542Z         -----------
2025-01-10T12:40:40.0471838Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0472101Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0472256Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0472377Z         """
2025-01-10T12:40:40.0472526Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0472712Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0472978Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0473231Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0473593Z             expected_values = expected.get(
2025-01-10T12:40:40.0473755Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0473907Z             ).values.flatten()
2025-01-10T12:40:40.0474142Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0474271Z     
2025-01-10T12:40:40.0474497Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0474675Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0474812Z                     expected_values,
2025-01-10T12:40:40.0474958Z                     actual_values,
2025-01-10T12:40:40.0475080Z                     rtol=0.3,
2025-01-10T12:40:40.0475215Z                     atol=3,
2025-01-10T12:40:40.0475343Z                 )
2025-01-10T12:40:40.0475350Z 
2025-01-10T12:40:40.0475582Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0475798Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0475805Z 
2025-01-10T12:40:40.0476655Z args = (<function assert_allclose.<locals>.compare at 0x7f22e3b8b1a0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0476802Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0477181Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0477374Z 
2025-01-10T12:40:40.0477506Z     @wraps(func)
2025-01-10T12:40:40.0477635Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0477774Z         with self._recreate_cm():
2025-01-10T12:40:40.0477915Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0478049Z E           AssertionError: 
2025-01-10T12:40:40.0478227Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0478340Z E           
2025-01-10T12:40:40.0478499Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0478694Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0478939Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0479205Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0479358Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0479623Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0479801Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0479810Z 
2025-01-10T12:40:40.0480176Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0480443Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0480871Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0481572Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-01-10T12:40:40.0481858Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0482568Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T12:40:40.0482912Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-01-10T12:40:40.0482928Z 
2025-01-10T12:40:40.0483381Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5bb0>
2025-01-10T12:40:40.0483885Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22dbb099a0>
2025-01-10T12:40:40.0484715Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0485107Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-01-10T12:40:40.0485302Z 
2025-01-10T12:40:40.0485464Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0485716Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0485848Z     ):
2025-01-10T12:40:40.0485971Z         """
2025-01-10T12:40:40.0486388Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0486516Z     
2025-01-10T12:40:40.0486748Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0486897Z     
2025-01-10T12:40:40.0487043Z         Parameters:
2025-01-10T12:40:40.0487179Z         -----------
2025-01-10T12:40:40.0487459Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0487717Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0487879Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0488004Z         """
2025-01-10T12:40:40.0488162Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0488363Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0488632Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0488879Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0489047Z             expected_values = expected.get(
2025-01-10T12:40:40.0489198Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0489536Z             ).values.flatten()
2025-01-10T12:40:40.0489763Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0489887Z     
2025-01-10T12:40:40.0490108Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0490280Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0490414Z                     expected_values,
2025-01-10T12:40:40.0490555Z                     actual_values,
2025-01-10T12:40:40.0490681Z                     rtol=0.3,
2025-01-10T12:40:40.0490815Z                     atol=3,
2025-01-10T12:40:40.0490956Z                 )
2025-01-10T12:40:40.0490965Z 
2025-01-10T12:40:40.0491226Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0491411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0491418Z 
2025-01-10T12:40:40.0492043Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4abcd60>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0492186Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0492578Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0492586Z 
2025-01-10T12:40:40.0492728Z     @wraps(func)
2025-01-10T12:40:40.0492874Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0493036Z         with self._recreate_cm():
2025-01-10T12:40:40.0493198Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0493362Z E           AssertionError: 
2025-01-10T12:40:40.0493545Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0493675Z E           
2025-01-10T12:40:40.0493837Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0494037Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0494266Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0494521Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0494685Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0494935Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0495092Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0495099Z 
2025-01-10T12:40:40.0495428Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0495970Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-10T12:40:40.0495981Z 
2025-01-10T12:40:40.0496628Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5fa0>
2025-01-10T12:40:40.0497184Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22cb476db0>
2025-01-10T12:40:40.0497974Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0498397Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-10T12:40:40.0498406Z 
2025-01-10T12:40:40.0498578Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0498843Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0499037Z     ):
2025-01-10T12:40:40.0499166Z         """
2025-01-10T12:40:40.0499397Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0499700Z     
2025-01-10T12:40:40.0500027Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0500192Z     
2025-01-10T12:40:40.0500647Z         Parameters:
2025-01-10T12:40:40.0500857Z         -----------
2025-01-10T12:40:40.0501260Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0501559Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0502035Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0502186Z         """
2025-01-10T12:40:40.0502576Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0502809Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0503182Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0503531Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0503721Z             expected_values = expected.get(
2025-01-10T12:40:40.0504099Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0504296Z             ).values.flatten()
2025-01-10T12:40:40.0518977Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0519140Z     
2025-01-10T12:40:40.0519384Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0519570Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0519732Z                     expected_values,
2025-01-10T12:40:40.0519878Z                     actual_values,
2025-01-10T12:40:40.0520024Z                     rtol=0.3,
2025-01-10T12:40:40.0520152Z                     atol=3,
2025-01-10T12:40:40.0520293Z                 )
2025-01-10T12:40:40.0520302Z 
2025-01-10T12:40:40.0520562Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0520776Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0520784Z 
2025-01-10T12:40:40.0521464Z args = (<function assert_allclose.<locals>.compare at 0x7f22e8f4f240>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0521619Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-10T12:40:40.0522028Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0522055Z 
2025-01-10T12:40:40.0522191Z     @wraps(func)
2025-01-10T12:40:40.0522341Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0522491Z         with self._recreate_cm():
2025-01-10T12:40:40.0522646Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0522791Z E           AssertionError: 
2025-01-10T12:40:40.0522978Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0523101Z E           
2025-01-10T12:40:40.0523270Z E           Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.0523479Z E           Max absolute difference among violations: 18
2025-01-10T12:40:40.0523920Z E           Max relative difference among violations: 0.5
2025-01-10T12:40:40.0524187Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.0524346Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.0524615Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0524778Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.0524785Z 
2025-01-10T12:40:40.0525141Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0525428Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0525884Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0526519Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0526796Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0527314Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0527672Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-10T12:40:40.0527680Z 
2025-01-10T12:40:40.0528124Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba6060>
2025-01-10T12:40:40.0528853Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22b29da180>
2025-01-10T12:40:40.0529676Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0530100Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-10T12:40:40.0530108Z 
2025-01-10T12:40:40.0530270Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0530547Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0530696Z     ):
2025-01-10T12:40:40.0530830Z         """
2025-01-10T12:40:40.0531060Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0531193Z     
2025-01-10T12:40:40.0531400Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0531527Z     
2025-01-10T12:40:40.0531668Z         Parameters:
2025-01-10T12:40:40.0531804Z         -----------
2025-01-10T12:40:40.0532060Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0532303Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0532470Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0532604Z         """
2025-01-10T12:40:40.0532757Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0532948Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0533217Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0533475Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0533646Z             expected_values = expected.get(
2025-01-10T12:40:40.0533811Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0533957Z             ).values.flatten()
2025-01-10T12:40:40.0534179Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0534308Z     
2025-01-10T12:40:40.0534532Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0534702Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0534840Z                     expected_values,
2025-01-10T12:40:40.0534979Z                     actual_values,
2025-01-10T12:40:40.0535109Z                     rtol=0.3,
2025-01-10T12:40:40.0535248Z                     atol=3,
2025-01-10T12:40:40.0535372Z                 )
2025-01-10T12:40:40.0535379Z 
2025-01-10T12:40:40.0535632Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0536032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0536044Z 
2025-01-10T12:40:40.0536938Z args = (<function assert_allclose.<locals>.compare at 0x7f22d66e7060>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0537095Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0537480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0537487Z 
2025-01-10T12:40:40.0537625Z     @wraps(func)
2025-01-10T12:40:40.0537766Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0537919Z         with self._recreate_cm():
2025-01-10T12:40:40.0538071Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0538223Z E           AssertionError: 
2025-01-10T12:40:40.0538403Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0538529Z E           
2025-01-10T12:40:40.0538704Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0538930Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0539162Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0539409Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0539811Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0540064Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0540222Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0540229Z 
2025-01-10T12:40:40.0540555Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0540829Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0541235Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0541804Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0542069Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0542651Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0542996Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _______
2025-01-10T12:40:40.0543005Z 
2025-01-10T12:40:40.0543455Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba61e0>
2025-01-10T12:40:40.0543945Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22f0cf1c40>
2025-01-10T12:40:40.0544689Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0545111Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl7]>>
2025-01-10T12:40:40.0545118Z 
2025-01-10T12:40:40.0545281Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0545547Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0545686Z     ):
2025-01-10T12:40:40.0545813Z         """
2025-01-10T12:40:40.0546218Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0546347Z     
2025-01-10T12:40:40.0546583Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0546702Z     
2025-01-10T12:40:40.0546842Z         Parameters:
2025-01-10T12:40:40.0546968Z         -----------
2025-01-10T12:40:40.0547235Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0547481Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0547937Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0548080Z         """
2025-01-10T12:40:40.0548246Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0548426Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0548697Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0548944Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0549115Z             expected_values = expected.get(
2025-01-10T12:40:40.0549275Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0549413Z             ).values.flatten()
2025-01-10T12:40:40.0549637Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0549749Z     
2025-01-10T12:40:40.0549973Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0550139Z                 np.testing.assert_allclose(
2025-01-10T12:40:40.0550281Z                     expected_values,
2025-01-10T12:40:40.0550433Z                     actual_values,
2025-01-10T12:40:40.0550574Z                     rtol=0.3,
2025-01-10T12:40:40.0550711Z                     atol=3,
2025-01-10T12:40:40.0550830Z                 )
2025-01-10T12:40:40.0550958Z             else:
2025-01-10T12:40:40.0551186Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T12:40:40.0551325Z     
2025-01-10T12:40:40.0551699Z         labels = expected["plot_data_hdf/scalars"]
2025-01-10T12:40:40.0551914Z         for index1, data in enumerate(fig.get_children()):
2025-01-10T12:40:40.0552075Z             if isinstance(data.get_label(), str):
2025-01-10T12:40:40.0552203Z                 assert (
2025-01-10T12:40:40.0552391Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-10T12:40:40.0552534Z                     == data.get_label()
2025-01-10T12:40:40.0552651Z                 )
2025-01-10T12:40:40.0552807Z             if isinstance(data, Line2D):
2025-01-10T12:40:40.0552973Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0553132Z                     data.get_xydata(),
2025-01-10T12:40:40.0553373Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-10T12:40:40.0553499Z                     rtol=0.3,
2025-01-10T12:40:40.0553644Z                     atol=3,
2025-01-10T12:40:40.0553774Z                 )
2025-01-10T12:40:40.0553782Z 
2025-01-10T12:40:40.0554045Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-10T12:40:40.0554232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0554238Z 
2025-01-10T12:40:40.0554651Z args = (<function assert_allclose.<locals>.compare at 0x7f22c374a3e0>, array([[1.10e+04, 6.00e+01],
2025-01-10T12:40:40.0554783Z        [1.19e+04, 6.00e+0...,
2025-01-10T12:40:40.0554918Z        [1.82e+04, 0.00e+00],
2025-01-10T12:40:40.0555039Z        [1.91e+04, 0.00e+00],
2025-01-10T12:40:40.0555170Z        [1.91e+04, 0.00e+00],
2025-01-10T12:40:40.0555297Z        [2.00e+04, 0.00e+00]]))
2025-01-10T12:40:40.0555732Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0555739Z 
2025-01-10T12:40:40.0555872Z     @wraps(func)
2025-01-10T12:40:40.0556008Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0556606Z         with self._recreate_cm():
2025-01-10T12:40:40.0556772Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0556901Z E           AssertionError: 
2025-01-10T12:40:40.0557040Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0557136Z E           
2025-01-10T12:40:40.0557259Z E           Mismatched elements: 12 / 40 (30%)
2025-01-10T12:40:40.0557415Z E           Max absolute difference among violations: 58.
2025-01-10T12:40:40.0557554Z E           Max relative difference among violations: 30.
2025-01-10T12:40:40.0557674Z E            ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-10T12:40:40.0557776Z E                  [1.19e+04, 6.00e+01],
2025-01-10T12:40:40.0558077Z E                  [1.19e+04, 3.10e+01],...
2025-01-10T12:40:40.0558202Z E            DESIRED: array([[1.10e+04, 2.00e+00],
2025-01-10T12:40:40.0558304Z E                  [1.19e+04, 2.00e+00],
2025-01-10T12:40:40.0558410Z E                  [1.19e+04, 1.00e+00],...
2025-01-10T12:40:40.0558415Z 
2025-01-10T12:40:40.0558807Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0559075Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0559425Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0559741Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0559925Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0560307Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0560564Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-01-10T12:40:40.0560568Z 
2025-01-10T12:40:40.0560887Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba6f00>
2025-01-10T12:40:40.0561280Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e0590680>
2025-01-10T12:40:40.0561545Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0561739Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0561901Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0562151Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0562447Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-01-10T12:40:40.0562464Z 
2025-01-10T12:40:40.0562635Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0562937Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0563083Z     ):
2025-01-10T12:40:40.0563181Z         """
2025-01-10T12:40:40.0563342Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0563432Z     
2025-01-10T12:40:40.0563585Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0563677Z     
2025-01-10T12:40:40.0563780Z         Parameters:
2025-01-10T12:40:40.0563877Z         ----------
2025-01-10T12:40:40.0564069Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0564238Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0564354Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0564446Z         """
2025-01-10T12:40:40.0564560Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0564693Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0564910Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0565001Z     
2025-01-10T12:40:40.0565181Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0565304Z             expected_values = expected.get(
2025-01-10T12:40:40.0565415Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0565519Z             ).values.flatten()
2025-01-10T12:40:40.0565692Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0565781Z     
2025-01-10T12:40:40.0565943Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0566263Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0566442Z                     expected_values,
2025-01-10T12:40:40.0566543Z                     actual_values,
2025-01-10T12:40:40.0566643Z                     rtol=0.3,
2025-01-10T12:40:40.0566734Z                     atol=3,
2025-01-10T12:40:40.0566826Z                 )
2025-01-10T12:40:40.0566831Z 
2025-01-10T12:40:40.0567155Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0567298Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0567302Z 
2025-01-10T12:40:40.0567916Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd82ac0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0568071Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0568432Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0568437Z 
2025-01-10T12:40:40.0568528Z     @wraps(func)
2025-01-10T12:40:40.0568633Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0568745Z         with self._recreate_cm():
2025-01-10T12:40:40.0568852Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0568961Z E           AssertionError: 
2025-01-10T12:40:40.0569091Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0569192Z E           
2025-01-10T12:40:40.0569308Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0569456Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0569614Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0569809Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0570081Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0570275Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0570378Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0570388Z 
2025-01-10T12:40:40.0570637Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0570832Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0571130Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0571650Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-01-10T12:40:40.0571832Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0572375Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T12:40:40.0572624Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-01-10T12:40:40.0572628Z 
2025-01-10T12:40:40.0573072Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba6fc0>
2025-01-10T12:40:40.0573525Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e3bffb30>
2025-01-10T12:40:40.0573634Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0573806Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0573948Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0574173Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0574424Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-01-10T12:40:40.0574436Z 
2025-01-10T12:40:40.0574534Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0574717Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0574790Z     ):
2025-01-10T12:40:40.0574874Z         """
2025-01-10T12:40:40.0575015Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0575088Z     
2025-01-10T12:40:40.0575225Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0575297Z     
2025-01-10T12:40:40.0575388Z         Parameters:
2025-01-10T12:40:40.0575468Z         ----------
2025-01-10T12:40:40.0575734Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0575882Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0575988Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0576195Z         """
2025-01-10T12:40:40.0576307Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0576416Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0576610Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0576683Z     
2025-01-10T12:40:40.0576840Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0576948Z             expected_values = expected.get(
2025-01-10T12:40:40.0577037Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0577131Z             ).values.flatten()
2025-01-10T12:40:40.0577270Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0577346Z     
2025-01-10T12:40:40.0577491Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0577590Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0577678Z                     expected_values,
2025-01-10T12:40:40.0577765Z                     actual_values,
2025-01-10T12:40:40.0577848Z                     rtol=0.3,
2025-01-10T12:40:40.0577928Z                     atol=3,
2025-01-10T12:40:40.0578126Z                 )
2025-01-10T12:40:40.0578131Z 
2025-01-10T12:40:40.0578287Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0578407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0578418Z 
2025-01-10T12:40:40.0578964Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd839c0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0579072Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0579443Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0579449Z 
2025-01-10T12:40:40.0579538Z     @wraps(func)
2025-01-10T12:40:40.0579627Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0579724Z         with self._recreate_cm():
2025-01-10T12:40:40.0579815Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0579918Z E           AssertionError: 
2025-01-10T12:40:40.0580027Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0580109Z E           
2025-01-10T12:40:40.0580212Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0580335Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0580472Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0580631Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0580731Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0580895Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0580990Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0580994Z 
2025-01-10T12:40:40.0581206Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0581418Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-10T12:40:40.0581426Z 
2025-01-10T12:40:40.0581696Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba73e0>
2025-01-10T12:40:40.0582013Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22b29b07d0>
2025-01-10T12:40:40.0582115Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0582264Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0582406Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0582758Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0583016Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-10T12:40:40.0583020Z 
2025-01-10T12:40:40.0583114Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0583291Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0583378Z     ):
2025-01-10T12:40:40.0583455Z         """
2025-01-10T12:40:40.0583595Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0583667Z     
2025-01-10T12:40:40.0583805Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0583878Z     
2025-01-10T12:40:40.0583968Z         Parameters:
2025-01-10T12:40:40.0584047Z         ----------
2025-01-10T12:40:40.0584212Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0584400Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0584597Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0584681Z         """
2025-01-10T12:40:40.0584856Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0584997Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0585185Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0585357Z     
2025-01-10T12:40:40.0585511Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0585622Z             expected_values = expected.get(
2025-01-10T12:40:40.0585711Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0585810Z             ).values.flatten()
2025-01-10T12:40:40.0585955Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0586038Z     
2025-01-10T12:40:40.0586284Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0586387Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0586478Z                     expected_values,
2025-01-10T12:40:40.0586573Z                     actual_values,
2025-01-10T12:40:40.0586654Z                     rtol=0.3,
2025-01-10T12:40:40.0586739Z                     atol=3,
2025-01-10T12:40:40.0586814Z                 )
2025-01-10T12:40:40.0586818Z 
2025-01-10T12:40:40.0586979Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0587119Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0587124Z 
2025-01-10T12:40:40.0587540Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd279c0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0587631Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-10T12:40:40.0587885Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0587890Z 
2025-01-10T12:40:40.0587980Z     @wraps(func)
2025-01-10T12:40:40.0588067Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0588161Z         with self._recreate_cm():
2025-01-10T12:40:40.0588251Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0588345Z E           AssertionError: 
2025-01-10T12:40:40.0588460Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0588604Z E           
2025-01-10T12:40:40.0588791Z E           Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.0588959Z E           Max absolute difference among violations: 18
2025-01-10T12:40:40.0589146Z E           Max relative difference among violations: 0.5
2025-01-10T12:40:40.0589310Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.0589408Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.0589567Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0589800Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.0589806Z 
2025-01-10T12:40:40.0590016Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0590177Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0590430Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0590690Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0590850Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0591150Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0591356Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-10T12:40:40.0591360Z 
2025-01-10T12:40:40.0591618Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba74d0>
2025-01-10T12:40:40.0591949Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22c6c1ddc0>
2025-01-10T12:40:40.0592048Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0592213Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0592356Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0592674Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0592952Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-10T12:40:40.0592957Z 
2025-01-10T12:40:40.0593048Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0593221Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0593293Z     ):
2025-01-10T12:40:40.0593371Z         """
2025-01-10T12:40:40.0593500Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0593583Z     
2025-01-10T12:40:40.0593713Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0593792Z     
2025-01-10T12:40:40.0593871Z         Parameters:
2025-01-10T12:40:40.0593956Z         ----------
2025-01-10T12:40:40.0594129Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0594384Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0594528Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0594666Z         """
2025-01-10T12:40:40.0594809Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0594921Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0595110Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0595185Z     
2025-01-10T12:40:40.0595338Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0595436Z             expected_values = expected.get(
2025-01-10T12:40:40.0595537Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0595624Z             ).values.flatten()
2025-01-10T12:40:40.0595770Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0595849Z     
2025-01-10T12:40:40.0595981Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0596205Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0596301Z                     expected_values,
2025-01-10T12:40:40.0596392Z                     actual_values,
2025-01-10T12:40:40.0596472Z                     rtol=0.3,
2025-01-10T12:40:40.0596557Z                     atol=3,
2025-01-10T12:40:40.0596631Z                 )
2025-01-10T12:40:40.0596635Z 
2025-01-10T12:40:40.0596787Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0596902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0596907Z 
2025-01-10T12:40:40.0597442Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd27740>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0597538Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0597790Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0597798Z 
2025-01-10T12:40:40.0597882Z     @wraps(func)
2025-01-10T12:40:40.0597968Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0598061Z         with self._recreate_cm():
2025-01-10T12:40:40.0598150Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0598309Z E           AssertionError: 
2025-01-10T12:40:40.0598483Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0598573Z E           
2025-01-10T12:40:40.0598739Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0598872Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0599012Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0599176Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0599271Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0599429Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0599683Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0599688Z 
2025-01-10T12:40:40.0599896Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0600057Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0600304Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0600656Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0600816Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0601189Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0601397Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _______
2025-01-10T12:40:40.0601407Z 
2025-01-10T12:40:40.0601669Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba7650>
2025-01-10T12:40:40.0601994Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e1fd40e0>
2025-01-10T12:40:40.0602100Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0602265Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0602405Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0602622Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0602875Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply7]>>
2025-01-10T12:40:40.0602879Z 
2025-01-10T12:40:40.0602968Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0603147Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0603225Z     ):
2025-01-10T12:40:40.0603304Z         """
2025-01-10T12:40:40.0603438Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0603515Z     
2025-01-10T12:40:40.0603644Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0603722Z     
2025-01-10T12:40:40.0603803Z         Parameters:
2025-01-10T12:40:40.0603887Z         ----------
2025-01-10T12:40:40.0604049Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0604229Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0604504Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0604636Z         """
2025-01-10T12:40:40.0604769Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0604888Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0605076Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0605148Z     
2025-01-10T12:40:40.0605303Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0605410Z             expected_values = expected.get(
2025-01-10T12:40:40.0605506Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0605594Z             ).values.flatten()
2025-01-10T12:40:40.0605745Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0605817Z     
2025-01-10T12:40:40.0605961Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0606233Z                 np.testing.assert_allclose(
2025-01-10T12:40:40.0606393Z                     expected_values,
2025-01-10T12:40:40.0606520Z                     actual_values,
2025-01-10T12:40:40.0606606Z                     rtol=0.3,
2025-01-10T12:40:40.0606690Z                     atol=3,
2025-01-10T12:40:40.0606766Z                 )
2025-01-10T12:40:40.0606854Z             else:
2025-01-10T12:40:40.0607001Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T12:40:40.0607256Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0607365Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0607460Z             if data.stackgroup:
2025-01-10T12:40:40.0607540Z                 assert (
2025-01-10T12:40:40.0607632Z                     data.stackgroup
2025-01-10T12:40:40.0607710Z                     == getattr(
2025-01-10T12:40:40.0607828Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0607932Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0608019Z                     ).decode()
2025-01-10T12:40:40.0608098Z                 )
2025-01-10T12:40:40.0608186Z             if data.name:
2025-01-10T12:40:40.0608270Z                 assert (
2025-01-10T12:40:40.0608349Z                     data.name
2025-01-10T12:40:40.0608432Z                     == getattr(
2025-01-10T12:40:40.0608536Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0608640Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0608725Z                     ).decode()
2025-01-10T12:40:40.0608809Z                 )
2025-01-10T12:40:40.0608907Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0608988Z                 data.x,
2025-01-10T12:40:40.0609103Z                 expected.get(group + "x").values.flatten(),
2025-01-10T12:40:40.0609194Z                 rtol=0.3,
2025-01-10T12:40:40.0609269Z                 atol=3,
2025-01-10T12:40:40.0609351Z             )
2025-01-10T12:40:40.0609445Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0609530Z                 data.y,
2025-01-10T12:40:40.0609641Z                 expected.get(group + "y").values.flatten(),
2025-01-10T12:40:40.0609726Z                 rtol=0.3,
2025-01-10T12:40:40.0609835Z                 atol=3,
2025-01-10T12:40:40.0609970Z             )
2025-01-10T12:40:40.0609977Z 
2025-01-10T12:40:40.0610202Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-10T12:40:40.0610413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0610426Z 
2025-01-10T12:40:40.0610774Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd26c00>, array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-10T12:40:40.0610908Z         1,  0,  0]), array([2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
2025-01-10T12:40:40.0611180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0611185Z 
2025-01-10T12:40:40.0611270Z     @wraps(func)
2025-01-10T12:40:40.0611481Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0611589Z         with self._recreate_cm():
2025-01-10T12:40:40.0611685Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0611781Z E           AssertionError: 
2025-01-10T12:40:40.0611889Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0611972Z E           
2025-01-10T12:40:40.0612076Z E           Mismatched elements: 12 / 20 (60%)
2025-01-10T12:40:40.0612200Z E           Max absolute difference among violations: 58
2025-01-10T12:40:40.0612318Z E           Max relative difference among violations: 30.
2025-01-10T12:40:40.0612478Z E            ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-10T12:40:40.0612557Z E                   1,  0,  0])
2025-01-10T12:40:40.0612713Z E            DESIRED: array([2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T12:40:40.0612718Z 
2025-01-10T12:40:40.0612938Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0613102Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0613357Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0613611Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0613766Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0614160Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0614391Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-10T12:40:40.0614395Z 
2025-01-10T12:40:40.0614662Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1ae40>
2025-01-10T12:40:40.0614982Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0615405Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e8fc2f90>
2025-01-10T12:40:40.0615859Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-10T12:40:40.0615866Z 
2025-01-10T12:40:40.0615976Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0616222Z         self,
2025-01-10T12:40:40.0616343Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0616437Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0616519Z         request,
2025-01-10T12:40:40.0616591Z     ):
2025-01-10T12:40:40.0616712Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0616903Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0616999Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0617188Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0617288Z             plot_object = getattr(
2025-01-10T12:40:40.0617429Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0617502Z             )
2025-01-10T12:40:40.0617611Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0617775Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0617892Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0617997Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0618132Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0618208Z                 )
2025-01-10T12:40:40.0618212Z 
2025-01-10T12:40:40.0618371Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0618494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0618498Z 
2025-01-10T12:40:40.0619104Z args = (<function assert_allclose.<locals>.compare at 0x7f22e176bba0>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0619222Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0619488Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0619492Z 
2025-01-10T12:40:40.0619580Z     @wraps(func)
2025-01-10T12:40:40.0619666Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0619762Z         with self._recreate_cm():
2025-01-10T12:40:40.0619852Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0619946Z E           AssertionError: 
2025-01-10T12:40:40.0620065Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0620141Z E           
2025-01-10T12:40:40.0620248Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0620394Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0620535Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0620706Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0620803Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0620973Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0621068Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0621186Z 
2025-01-10T12:40:40.0621495Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0621868Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-10T12:40:40.0621878Z 
2025-01-10T12:40:40.0622175Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1b530>
2025-01-10T12:40:40.0622496Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0622840Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c1642c30>
2025-01-10T12:40:40.0623118Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-10T12:40:40.0623122Z 
2025-01-10T12:40:40.0623226Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0623303Z         self,
2025-01-10T12:40:40.0623412Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0623504Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0623592Z         request,
2025-01-10T12:40:40.0623673Z     ):
2025-01-10T12:40:40.0623786Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0623976Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0624074Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0624255Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0624343Z             plot_object = getattr(
2025-01-10T12:40:40.0624481Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0624554Z             )
2025-01-10T12:40:40.0624663Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0624826Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0624943Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0625044Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0625178Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0625259Z                 )
2025-01-10T12:40:40.0625263Z 
2025-01-10T12:40:40.0625413Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0625538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0625542Z 
2025-01-10T12:40:40.0626265Z args = (<function assert_allclose.<locals>.compare at 0x7f22e176aa20>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0626387Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0626650Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0626654Z 
2025-01-10T12:40:40.0626740Z     @wraps(func)
2025-01-10T12:40:40.0626831Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0626923Z         with self._recreate_cm():
2025-01-10T12:40:40.0627018Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0627104Z E           AssertionError: 
2025-01-10T12:40:40.0627218Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0627295Z E           
2025-01-10T12:40:40.0627404Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0627575Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0627831Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0628060Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0628217Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0628393Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0628486Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0628628Z 
2025-01-10T12:40:40.0628844Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0629070Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-10T12:40:40.0629074Z 
2025-01-10T12:40:40.0629357Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1b9e0>
2025-01-10T12:40:40.0629671Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0630007Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c16408f0>
2025-01-10T12:40:40.0630286Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-10T12:40:40.0630290Z 
2025-01-10T12:40:40.0630390Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0630470Z         self,
2025-01-10T12:40:40.0630571Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0630673Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0630750Z         request,
2025-01-10T12:40:40.0630828Z     ):
2025-01-10T12:40:40.0630937Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0631124Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0631213Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0631396Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0631484Z             plot_object = getattr(
2025-01-10T12:40:40.0631721Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0631840Z             )
2025-01-10T12:40:40.0632233Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0632568Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0632697Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0632806Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0632951Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0633030Z                 )
2025-01-10T12:40:40.0633034Z 
2025-01-10T12:40:40.0633187Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0633307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0633312Z 
2025-01-10T12:40:40.0633786Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b1620>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0634102Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0634370Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0634383Z 
2025-01-10T12:40:40.0634460Z     @wraps(func)
2025-01-10T12:40:40.0634553Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0634647Z         with self._recreate_cm():
2025-01-10T12:40:40.0634742Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0634830Z E           AssertionError: 
2025-01-10T12:40:40.0634947Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0635021Z E           
2025-01-10T12:40:40.0635130Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0635277Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0635412Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0635696Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0635850Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0636303Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0636420Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0636425Z 
2025-01-10T12:40:40.0636795Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0637023Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-10T12:40:40.0637027Z 
2025-01-10T12:40:40.0637303Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bad0>
2025-01-10T12:40:40.0637617Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0637947Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e126df40>
2025-01-10T12:40:40.0638237Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-10T12:40:40.0638241Z 
2025-01-10T12:40:40.0638340Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0638421Z         self,
2025-01-10T12:40:40.0638519Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0638617Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0638698Z         request,
2025-01-10T12:40:40.0638782Z     ):
2025-01-10T12:40:40.0638893Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0639080Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0639168Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0639349Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0639436Z             plot_object = getattr(
2025-01-10T12:40:40.0639569Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0639654Z             )
2025-01-10T12:40:40.0639849Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0640092Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0640288Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0640403Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0640544Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0640624Z                 )
2025-01-10T12:40:40.0640628Z 
2025-01-10T12:40:40.0640777Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0640898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0640903Z 
2025-01-10T12:40:40.0641372Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b2a20>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0641613Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0641883Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0641887Z 
2025-01-10T12:40:40.0641964Z     @wraps(func)
2025-01-10T12:40:40.0642055Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0642143Z         with self._recreate_cm():
2025-01-10T12:40:40.0642243Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0642331Z E           AssertionError: 
2025-01-10T12:40:40.0642449Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0642524Z E           
2025-01-10T12:40:40.0642632Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0642775Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0642912Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0643091Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0643181Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0643355Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0643441Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0643445Z 
2025-01-10T12:40:40.0643654Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0643960Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-10T12:40:40.0643965Z 
2025-01-10T12:40:40.0644241Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bb90>
2025-01-10T12:40:40.0644548Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0644882Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e126c9e0>
2025-01-10T12:40:40.0645169Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-10T12:40:40.0645173Z 
2025-01-10T12:40:40.0645267Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0645346Z         self,
2025-01-10T12:40:40.0645444Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0645539Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0645618Z         request,
2025-01-10T12:40:40.0645694Z     ):
2025-01-10T12:40:40.0645803Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0645989Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0646228Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0646415Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0646508Z             plot_object = getattr(
2025-01-10T12:40:40.0646634Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0646712Z             )
2025-01-10T12:40:40.0646815Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0646982Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0647090Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0647193Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0647321Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0647404Z                 )
2025-01-10T12:40:40.0647407Z 
2025-01-10T12:40:40.0647556Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0647674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0647678Z 
2025-01-10T12:40:40.0648150Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009e480>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0648254Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0648843Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0648853Z 
2025-01-10T12:40:40.0648988Z     @wraps(func)
2025-01-10T12:40:40.0649083Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0649174Z         with self._recreate_cm():
2025-01-10T12:40:40.0649276Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0649362Z E           AssertionError: 
2025-01-10T12:40:40.0649478Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0649553Z E           
2025-01-10T12:40:40.0649658Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0649804Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0649944Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0650118Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0650213Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0650386Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0650472Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0650477Z 
2025-01-10T12:40:40.0650687Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0651029Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-10T12:40:40.0651033Z 
2025-01-10T12:40:40.0651311Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bc50>
2025-01-10T12:40:40.0651626Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0651954Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22b29661e0>
2025-01-10T12:40:40.0652244Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-10T12:40:40.0652248Z 
2025-01-10T12:40:40.0652345Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0652424Z         self,
2025-01-10T12:40:40.0652523Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0652623Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0652698Z         request,
2025-01-10T12:40:40.0652781Z     ):
2025-01-10T12:40:40.0652886Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0653072Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0653165Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0653340Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0653431Z             plot_object = getattr(
2025-01-10T12:40:40.0653555Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0653685Z             )
2025-01-10T12:40:40.0653877Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0654125Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0654300Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0654407Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0654536Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0654621Z                 )
2025-01-10T12:40:40.0654625Z 
2025-01-10T12:40:40.0654775Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0654890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0654895Z 
2025-01-10T12:40:40.0655364Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cd60>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0655465Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0655821Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0655826Z 
2025-01-10T12:40:40.0655905Z     @wraps(func)
2025-01-10T12:40:40.0655994Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0656194Z         with self._recreate_cm():
2025-01-10T12:40:40.0656294Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0656388Z E           AssertionError: 
2025-01-10T12:40:40.0656497Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0656575Z E           
2025-01-10T12:40:40.0656673Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0656816Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0656954Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0657127Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0657215Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0657393Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0657480Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0657484Z 
2025-01-10T12:40:40.0657688Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0657914Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-10T12:40:40.0658040Z 
2025-01-10T12:40:40.0658307Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bd10>
2025-01-10T12:40:40.0658619Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0658941Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e126f380>
2025-01-10T12:40:40.0659222Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-10T12:40:40.0659231Z 
2025-01-10T12:40:40.0659325Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0659406Z         self,
2025-01-10T12:40:40.0659550Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0659724Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0659843Z         request,
2025-01-10T12:40:40.0659940Z     ):
2025-01-10T12:40:40.0660145Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0660328Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0660420Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0660590Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0660683Z             plot_object = getattr(
2025-01-10T12:40:40.0660806Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0660884Z             )
2025-01-10T12:40:40.0660983Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0661153Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0661260Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0661361Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0661496Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0661569Z                 )
2025-01-10T12:40:40.0661576Z 
2025-01-10T12:40:40.0661733Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0661848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0661852Z 
2025-01-10T12:40:40.0662319Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009c400>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0662419Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0662819Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0662825Z 
2025-01-10T12:40:40.0662913Z     @wraps(func)
2025-01-10T12:40:40.0662998Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0663091Z         with self._recreate_cm():
2025-01-10T12:40:40.0663180Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0663295Z E           AssertionError: 
2025-01-10T12:40:40.0663494Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0663612Z E           
2025-01-10T12:40:40.0663751Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0663960Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0664100Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0664273Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0664361Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0664541Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0664626Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0664635Z 
2025-01-10T12:40:40.0664836Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0665063Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-10T12:40:40.0665160Z 
2025-01-10T12:40:40.0665429Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bdd0>
2025-01-10T12:40:40.0665740Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0666169Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e11954c0>
2025-01-10T12:40:40.0666460Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-10T12:40:40.0666465Z 
2025-01-10T12:40:40.0666571Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0666645Z         self,
2025-01-10T12:40:40.0666746Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0666839Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0666918Z         request,
2025-01-10T12:40:40.0666989Z     ):
2025-01-10T12:40:40.0667098Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0667429Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0667527Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0667807Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0667903Z             plot_object = getattr(
2025-01-10T12:40:40.0668029Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0668106Z             )
2025-01-10T12:40:40.0668204Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0668374Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0668485Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0668579Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0668713Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0668786Z                 )
2025-01-10T12:40:40.0668790Z 
2025-01-10T12:40:40.0668946Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0669058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0669061Z 
2025-01-10T12:40:40.0669527Z args = (<function assert_allclose.<locals>.compare at 0x7f22e171fc40>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0669628Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0670014Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0670019Z 
2025-01-10T12:40:40.0670106Z     @wraps(func)
2025-01-10T12:40:40.0670189Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0670280Z         with self._recreate_cm():
2025-01-10T12:40:40.0670368Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0670457Z E           AssertionError: 
2025-01-10T12:40:40.0670565Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0670647Z E           
2025-01-10T12:40:40.0670744Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0670886Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0671023Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0671198Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0671289Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0671460Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0671554Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0671558Z 
2025-01-10T12:40:40.0671760Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0671987Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-10T12:40:40.0672105Z 
2025-01-10T12:40:40.0672373Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1be90>
2025-01-10T12:40:40.0672680Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0673003Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e053a1b0>
2025-01-10T12:40:40.0673283Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-10T12:40:40.0673286Z 
2025-01-10T12:40:40.0673388Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0673463Z         self,
2025-01-10T12:40:40.0673564Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0673655Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0673736Z         request,
2025-01-10T12:40:40.0673807Z     ):
2025-01-10T12:40:40.0673915Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0674098Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0674189Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0674360Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0674453Z             plot_object = getattr(
2025-01-10T12:40:40.0674577Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0674654Z             )
2025-01-10T12:40:40.0674758Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0674915Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0675029Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0675126Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0675259Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0675333Z                 )
2025-01-10T12:40:40.0675337Z 
2025-01-10T12:40:40.0675488Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0675605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0675609Z 
2025-01-10T12:40:40.0676207Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b2f20>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0676319Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0676573Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0676693Z 
2025-01-10T12:40:40.0676781Z     @wraps(func)
2025-01-10T12:40:40.0676866Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0676959Z         with self._recreate_cm():
2025-01-10T12:40:40.0677048Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0677137Z E           AssertionError: 
2025-01-10T12:40:40.0677252Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0677338Z E           
2025-01-10T12:40:40.0677442Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0677586Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0677722Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0677888Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0677981Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0678148Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0678249Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0678255Z 
2025-01-10T12:40:40.0678453Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0678679Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-10T12:40:40.0678683Z 
2025-01-10T12:40:40.0679064Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bf50>
2025-01-10T12:40:40.0679378Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0679713Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1b3e240>
2025-01-10T12:40:40.0679994Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-10T12:40:40.0679998Z 
2025-01-10T12:40:40.0680098Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0680179Z         self,
2025-01-10T12:40:40.0680282Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0680377Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0680460Z         request,
2025-01-10T12:40:40.0680532Z     ):
2025-01-10T12:40:40.0680648Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0680830Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0680929Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0681110Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0681197Z             plot_object = getattr(
2025-01-10T12:40:40.0681333Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0681406Z             )
2025-01-10T12:40:40.0681513Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0681671Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0681786Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0681882Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0682018Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0682097Z                 )
2025-01-10T12:40:40.0682101Z 
2025-01-10T12:40:40.0682254Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0682374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0682383Z 
2025-01-10T12:40:40.0682849Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009ce00>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0682957Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0683216Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0683220Z 
2025-01-10T12:40:40.0683386Z     @wraps(func)
2025-01-10T12:40:40.0683475Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0683569Z         with self._recreate_cm():
2025-01-10T12:40:40.0683658Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0683753Z E           AssertionError: 
2025-01-10T12:40:40.0683864Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0683944Z E           
2025-01-10T12:40:40.0684056Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0684195Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0684331Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0684500Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0684595Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0684765Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0684865Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0684869Z 
2025-01-10T12:40:40.0685074Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0685308Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-10T12:40:40.0685313Z 
2025-01-10T12:40:40.0685750Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd01d0>
2025-01-10T12:40:40.0686598Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0687029Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ac1520>
2025-01-10T12:40:40.0687316Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-10T12:40:40.0687320Z 
2025-01-10T12:40:40.0687422Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0687497Z         self,
2025-01-10T12:40:40.0687608Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0687699Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0687781Z         request,
2025-01-10T12:40:40.0687853Z     ):
2025-01-10T12:40:40.0687969Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0688158Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0688253Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0688436Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0688524Z             plot_object = getattr(
2025-01-10T12:40:40.0688656Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0688731Z             )
2025-01-10T12:40:40.0688844Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0689007Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0689121Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0689226Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0689364Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0689439Z                 )
2025-01-10T12:40:40.0689449Z 
2025-01-10T12:40:40.0689598Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0689718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0689726Z 
2025-01-10T12:40:40.0690192Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009dbc0>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0690303Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0690560Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0690564Z 
2025-01-10T12:40:40.0690648Z     @wraps(func)
2025-01-10T12:40:40.0690875Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0690977Z         with self._recreate_cm():
2025-01-10T12:40:40.0691072Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0691160Z E           AssertionError: 
2025-01-10T12:40:40.0691278Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0691352Z E           
2025-01-10T12:40:40.0691459Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0691603Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0691742Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0691911Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0692005Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0692175Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0692269Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0692278Z 
2025-01-10T12:40:40.0692487Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0692715Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-10T12:40:40.0692719Z 
2025-01-10T12:40:40.0693032Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd16a0>
2025-01-10T12:40:40.0693490Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0693821Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1d99f10>
2025-01-10T12:40:40.0694104Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-10T12:40:40.0694108Z 
2025-01-10T12:40:40.0694208Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0694283Z         self,
2025-01-10T12:40:40.0694386Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0694487Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0694563Z         request,
2025-01-10T12:40:40.0694640Z     ):
2025-01-10T12:40:40.0694748Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0694935Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0695021Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0695206Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0695295Z             plot_object = getattr(
2025-01-10T12:40:40.0695429Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0695503Z             )
2025-01-10T12:40:40.0695610Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0695771Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0695883Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0695990Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0696302Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0696390Z                 )
2025-01-10T12:40:40.0696395Z 
2025-01-10T12:40:40.0696544Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0696669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0696678Z 
2025-01-10T12:40:40.0697141Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009dc60>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0697249Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0697507Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0697520Z 
2025-01-10T12:40:40.0697597Z     @wraps(func)
2025-01-10T12:40:40.0697688Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0697898Z         with self._recreate_cm():
2025-01-10T12:40:40.0697995Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0698081Z E           AssertionError: 
2025-01-10T12:40:40.0698193Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0698268Z E           
2025-01-10T12:40:40.0698376Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0698520Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0698655Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0698823Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0698918Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0699085Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0699178Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0699182Z 
2025-01-10T12:40:40.0699391Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0699617Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-10T12:40:40.0699621Z 
2025-01-10T12:40:40.0699893Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd3710>
2025-01-10T12:40:40.0700314Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0700649Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e12f6630>
2025-01-10T12:40:40.0700933Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-10T12:40:40.0700942Z 
2025-01-10T12:40:40.0701038Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0701119Z         self,
2025-01-10T12:40:40.0701215Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0701317Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0701391Z         request,
2025-01-10T12:40:40.0701472Z     ):
2025-01-10T12:40:40.0701582Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0701768Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0701855Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0702040Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0702132Z             plot_object = getattr(
2025-01-10T12:40:40.0702262Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0702335Z             )
2025-01-10T12:40:40.0702441Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0702605Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0702711Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0702813Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0702946Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0703026Z                 )
2025-01-10T12:40:40.0703030Z 
2025-01-10T12:40:40.0703176Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0703295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0703304Z 
2025-01-10T12:40:40.0703768Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cfe0>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0703877Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0704136Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0704141Z 
2025-01-10T12:40:40.0704219Z     @wraps(func)
2025-01-10T12:40:40.0704310Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0704488Z         with self._recreate_cm():
2025-01-10T12:40:40.0704585Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0704669Z E           AssertionError: 
2025-01-10T12:40:40.0704784Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0704859Z E           
2025-01-10T12:40:40.0704965Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0705102Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0705244Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0705418Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0705506Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0705680Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0705770Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0705774Z 
2025-01-10T12:40:40.0705990Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0706383Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-10T12:40:40.0706389Z 
2025-01-10T12:40:40.0706667Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0c80>
2025-01-10T12:40:40.0706973Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0707419Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c16ef980>
2025-01-10T12:40:40.0707702Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-10T12:40:40.0707706Z 
2025-01-10T12:40:40.0707800Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0707879Z         self,
2025-01-10T12:40:40.0707976Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0708076Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0708157Z         request,
2025-01-10T12:40:40.0708236Z     ):
2025-01-10T12:40:40.0708340Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0708528Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0708616Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0708795Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0708886Z             plot_object = getattr(
2025-01-10T12:40:40.0709016Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0709094Z             )
2025-01-10T12:40:40.0709193Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0709357Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0709462Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0709563Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0709694Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0709775Z                 )
2025-01-10T12:40:40.0709778Z 
2025-01-10T12:40:40.0709923Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0710042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0710046Z 
2025-01-10T12:40:40.0710513Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b2f20>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0710620Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0710878Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0710882Z 
2025-01-10T12:40:40.0710960Z     @wraps(func)
2025-01-10T12:40:40.0711051Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0711138Z         with self._recreate_cm():
2025-01-10T12:40:40.0711347Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0711435Z E           AssertionError: 
2025-01-10T12:40:40.0711547Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0711620Z E           
2025-01-10T12:40:40.0711722Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0711863Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0712002Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0712175Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0712262Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0712435Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0712522Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0712526Z 
2025-01-10T12:40:40.0712728Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0712957Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-10T12:40:40.0712961Z 
2025-01-10T12:40:40.0713231Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0e00>
2025-01-10T12:40:40.0713541Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0713966Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1b3e780>
2025-01-10T12:40:40.0714253Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-10T12:40:40.0714257Z 
2025-01-10T12:40:40.0714350Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0714431Z         self,
2025-01-10T12:40:40.0714527Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0714622Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0714698Z         request,
2025-01-10T12:40:40.0714783Z     ):
2025-01-10T12:40:40.0714888Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0715074Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0715167Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0715338Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0715435Z             plot_object = getattr(
2025-01-10T12:40:40.0715557Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0715637Z             )
2025-01-10T12:40:40.0715737Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0715901Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0716006Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0716281Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0716415Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0716503Z                 )
2025-01-10T12:40:40.0716507Z 
2025-01-10T12:40:40.0716653Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0716778Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0716781Z 
2025-01-10T12:40:40.0717247Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009e520>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0717356Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0717615Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0717619Z 
2025-01-10T12:40:40.0717696Z     @wraps(func)
2025-01-10T12:40:40.0717787Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0717875Z         with self._recreate_cm():
2025-01-10T12:40:40.0717968Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0718172Z E           AssertionError: 
2025-01-10T12:40:40.0718288Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0718367Z E           
2025-01-10T12:40:40.0718464Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0718604Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0718741Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0718914Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0719001Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0719177Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0719262Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0719266Z 
2025-01-10T12:40:40.0719470Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0719706Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-10T12:40:40.0719711Z 
2025-01-10T12:40:40.0719976Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0da0>
2025-01-10T12:40:40.0720284Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0720721Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ac1f10>
2025-01-10T12:40:40.0721006Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-10T12:40:40.0721010Z 
2025-01-10T12:40:40.0721106Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0721187Z         self,
2025-01-10T12:40:40.0721283Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0721378Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0721458Z         request,
2025-01-10T12:40:40.0721531Z     ):
2025-01-10T12:40:40.0721645Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0721823Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0721914Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0722088Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0722183Z             plot_object = getattr(
2025-01-10T12:40:40.0722309Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0722388Z             )
2025-01-10T12:40:40.0722490Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0722653Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0722759Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0722862Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0722990Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0723069Z                 )
2025-01-10T12:40:40.0723077Z 
2025-01-10T12:40:40.0723229Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0723342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0723345Z 
2025-01-10T12:40:40.0723810Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cea0>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0723918Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0724174Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0724178Z 
2025-01-10T12:40:40.0724255Z     @wraps(func)
2025-01-10T12:40:40.0724348Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0724442Z         with self._recreate_cm():
2025-01-10T12:40:40.0724530Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0724721Z E           AssertionError: 
2025-01-10T12:40:40.0724831Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0724911Z E           
2025-01-10T12:40:40.0725007Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0725148Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0725279Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0725454Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0725541Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0725713Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0725798Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0725810Z 
2025-01-10T12:40:40.0726009Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0726405Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-10T12:40:40.0726411Z 
2025-01-10T12:40:40.0726678Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0410>
2025-01-10T12:40:40.0726999Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22eea46ba0>
2025-01-10T12:40:40.0727097Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0727316Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0727421Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0727562Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0727773Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0728026Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-10T12:40:40.0728031Z 
2025-01-10T12:40:40.0728129Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0728305Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0728392Z     ):
2025-01-10T12:40:40.0728492Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0728608Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0728783Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0728862Z     
2025-01-10T12:40:40.0728979Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0729085Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0729230Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0729350Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0729431Z             )
2025-01-10T12:40:40.0729504Z     
2025-01-10T12:40:40.0729613Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0729720Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0729818Z             if data.stackgroup:
2025-01-10T12:40:40.0729904Z                 assert (
2025-01-10T12:40:40.0729999Z                     data.stackgroup
2025-01-10T12:40:40.0730079Z                     == getattr(
2025-01-10T12:40:40.0730196Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0730295Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0730385Z                     ).decode()
2025-01-10T12:40:40.0730464Z                 )
2025-01-10T12:40:40.0730553Z             if data.name:
2025-01-10T12:40:40.0730632Z                 assert (
2025-01-10T12:40:40.0730718Z                     data.name
2025-01-10T12:40:40.0730797Z                     == getattr(
2025-01-10T12:40:40.0730913Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0731018Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0731098Z                     ).decode()
2025-01-10T12:40:40.0731179Z                 )
2025-01-10T12:40:40.0731273Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0731530Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0731609Z             )
2025-01-10T12:40:40.0731707Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0731830Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0731909Z             )
2025-01-10T12:40:40.0731914Z 
2025-01-10T12:40:40.0732066Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0732189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0732192Z 
2025-01-10T12:40:40.0732659Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6090400>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0732760Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0733136Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0733141Z 
2025-01-10T12:40:40.0733273Z     @wraps(func)
2025-01-10T12:40:40.0733428Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0733702Z         with self._recreate_cm():
2025-01-10T12:40:40.0733876Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0733994Z E           AssertionError: 
2025-01-10T12:40:40.0734269Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0734377Z E           
2025-01-10T12:40:40.0734582Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0734770Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0734985Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0735187Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0735342Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0735619Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0735756Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0735760Z 
2025-01-10T12:40:40.0736047Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0736478Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-10T12:40:40.0736490Z 
2025-01-10T12:40:40.0736831Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd04d0>
2025-01-10T12:40:40.0737162Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e0ed3a10>
2025-01-10T12:40:40.0737417Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0737543Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0737719Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0737887Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0738119Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0738514Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-10T12:40:40.0738519Z 
2025-01-10T12:40:40.0738641Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0738877Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0738987Z     ):
2025-01-10T12:40:40.0739136Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0739315Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0739594Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0739736Z     
2025-01-10T12:40:40.0739878Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0740030Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0740262Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0740580Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0740692Z             )
2025-01-10T12:40:40.0740830Z     
2025-01-10T12:40:40.0740981Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0741188Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0748970Z             if data.stackgroup:
2025-01-10T12:40:40.0749084Z                 assert (
2025-01-10T12:40:40.0749196Z                     data.stackgroup
2025-01-10T12:40:40.0749286Z                     == getattr(
2025-01-10T12:40:40.0749408Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0749520Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0749602Z                     ).decode()
2025-01-10T12:40:40.0749684Z                 )
2025-01-10T12:40:40.0749764Z             if data.name:
2025-01-10T12:40:40.0749851Z                 assert (
2025-01-10T12:40:40.0749933Z                     data.name
2025-01-10T12:40:40.0750018Z                     == getattr(
2025-01-10T12:40:40.0750139Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0750242Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0750323Z                     ).decode()
2025-01-10T12:40:40.0750405Z                 )
2025-01-10T12:40:40.0750505Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0750659Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0750964Z             )
2025-01-10T12:40:40.0751070Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0751209Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0751282Z             )
2025-01-10T12:40:40.0751288Z 
2025-01-10T12:40:40.0751456Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0751578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0751582Z 
2025-01-10T12:40:40.0752068Z args = (<function assert_allclose.<locals>.compare at 0x7f22e1744540>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0752181Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0752453Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0752466Z 
2025-01-10T12:40:40.0752557Z     @wraps(func)
2025-01-10T12:40:40.0752645Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0752745Z         with self._recreate_cm():
2025-01-10T12:40:40.0752836Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0752932Z E           AssertionError: 
2025-01-10T12:40:40.0753046Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0753127Z E           
2025-01-10T12:40:40.0753230Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0753387Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0753529Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0753710Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0753803Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0753978Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0754076Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0754080Z 
2025-01-10T12:40:40.0754299Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0754512Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-10T12:40:40.0754517Z 
2025-01-10T12:40:40.0754788Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0920>
2025-01-10T12:40:40.0755117Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22eea465d0>
2025-01-10T12:40:40.0755331Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0755430Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0755538Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0755648Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0755867Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0756415Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-10T12:40:40.0756422Z 
2025-01-10T12:40:40.0756528Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0756698Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0756777Z     ):
2025-01-10T12:40:40.0756875Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0756990Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0757166Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0757245Z     
2025-01-10T12:40:40.0757365Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0757478Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0757630Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0757741Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0757820Z             )
2025-01-10T12:40:40.0758031Z     
2025-01-10T12:40:40.0758141Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0758248Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0758342Z             if data.stackgroup:
2025-01-10T12:40:40.0758426Z                 assert (
2025-01-10T12:40:40.0758518Z                     data.stackgroup
2025-01-10T12:40:40.0758596Z                     == getattr(
2025-01-10T12:40:40.0758712Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0758809Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0758899Z                     ).decode()
2025-01-10T12:40:40.0758979Z                 )
2025-01-10T12:40:40.0759065Z             if data.name:
2025-01-10T12:40:40.0759141Z                 assert (
2025-01-10T12:40:40.0759226Z                     data.name
2025-01-10T12:40:40.0759308Z                     == getattr(
2025-01-10T12:40:40.0759411Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0759516Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0759593Z                     ).decode()
2025-01-10T12:40:40.0759672Z                 )
2025-01-10T12:40:40.0759766Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0759906Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0759980Z             )
2025-01-10T12:40:40.0760077Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0760197Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0760280Z             )
2025-01-10T12:40:40.0760288Z 
2025-01-10T12:40:40.0760438Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0760561Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0760565Z 
2025-01-10T12:40:40.0761044Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009d760>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0761157Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0761425Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0761429Z 
2025-01-10T12:40:40.0761508Z     @wraps(func)
2025-01-10T12:40:40.0761601Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0761687Z         with self._recreate_cm():
2025-01-10T12:40:40.0761780Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0761868Z E           AssertionError: 
2025-01-10T12:40:40.0762099Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0762183Z E           
2025-01-10T12:40:40.0762284Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0762432Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0762564Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0762747Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0762837Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0763019Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0763105Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0763108Z 
2025-01-10T12:40:40.0763321Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0763528Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-10T12:40:40.0763542Z 
2025-01-10T12:40:40.0763815Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd09e0>
2025-01-10T12:40:40.0764141Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e05555e0>
2025-01-10T12:40:40.0764236Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0764412Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0764517Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0764622Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0764828Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0765077Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-10T12:40:40.0765081Z 
2025-01-10T12:40:40.0765169Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0765340Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0765423Z     ):
2025-01-10T12:40:40.0765522Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0765636Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0765810Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0765886Z     
2025-01-10T12:40:40.0765999Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0766282Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0766434Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0766547Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0766622Z             )
2025-01-10T12:40:40.0766698Z     
2025-01-10T12:40:40.0766797Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0766907Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0766993Z             if data.stackgroup:
2025-01-10T12:40:40.0767074Z                 assert (
2025-01-10T12:40:40.0767164Z                     data.stackgroup
2025-01-10T12:40:40.0767247Z                     == getattr(
2025-01-10T12:40:40.0767352Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0767453Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0767530Z                     ).decode()
2025-01-10T12:40:40.0767618Z                 )
2025-01-10T12:40:40.0767699Z             if data.name:
2025-01-10T12:40:40.0767781Z                 assert (
2025-01-10T12:40:40.0767864Z                     data.name
2025-01-10T12:40:40.0767940Z                     == getattr(
2025-01-10T12:40:40.0768047Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0768140Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0768222Z                     ).decode()
2025-01-10T12:40:40.0768294Z                 )
2025-01-10T12:40:40.0768390Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0768684Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0768769Z             )
2025-01-10T12:40:40.0768863Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0768993Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0769066Z             )
2025-01-10T12:40:40.0769070Z 
2025-01-10T12:40:40.0769218Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0769341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0769345Z 
2025-01-10T12:40:40.0769809Z args = (<function assert_allclose.<locals>.compare at 0x7f22d60907c0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0769915Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0770174Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0770183Z 
2025-01-10T12:40:40.0770265Z     @wraps(func)
2025-01-10T12:40:40.0770349Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0770440Z         with self._recreate_cm():
2025-01-10T12:40:40.0770528Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0770618Z E           AssertionError: 
2025-01-10T12:40:40.0770731Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0770920Z E           
2025-01-10T12:40:40.0771028Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0771165Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0771302Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0771472Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0771562Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0771729Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0771823Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0771827Z 
2025-01-10T12:40:40.0772029Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0772238Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-10T12:40:40.0772242Z 
2025-01-10T12:40:40.0772527Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1b2c0>
2025-01-10T12:40:40.0772844Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e11a7350>
2025-01-10T12:40:40.0772947Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0773036Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0773145Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0773242Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0773465Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0773711Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-10T12:40:40.0773715Z 
2025-01-10T12:40:40.0773809Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0773979Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0774052Z     ):
2025-01-10T12:40:40.0774159Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0774267Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0774446Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0774519Z     
2025-01-10T12:40:40.0774633Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0774730Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0774877Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0774983Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0775145Z             )
2025-01-10T12:40:40.0775217Z     
2025-01-10T12:40:40.0775325Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0775432Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0775525Z             if data.stackgroup:
2025-01-10T12:40:40.0775609Z                 assert (
2025-01-10T12:40:40.0775695Z                     data.stackgroup
2025-01-10T12:40:40.0775781Z                     == getattr(
2025-01-10T12:40:40.0775889Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0775987Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0776218Z                     ).decode()
2025-01-10T12:40:40.0776310Z                 )
2025-01-10T12:40:40.0776394Z             if data.name:
2025-01-10T12:40:40.0776478Z                 assert (
2025-01-10T12:40:40.0776555Z                     data.name
2025-01-10T12:40:40.0776637Z                     == getattr(
2025-01-10T12:40:40.0776749Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0776849Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0776926Z                     ).decode()
2025-01-10T12:40:40.0777005Z                 )
2025-01-10T12:40:40.0777104Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0777232Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0777430Z             )
2025-01-10T12:40:40.0777522Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0777647Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0777720Z             )
2025-01-10T12:40:40.0777724Z 
2025-01-10T12:40:40.0777875Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0777988Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0777992Z 
2025-01-10T12:40:40.0778466Z args = (<function assert_allclose.<locals>.compare at 0x7f22d60914e0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0778567Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0778834Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0778838Z 
2025-01-10T12:40:40.0778925Z     @wraps(func)
2025-01-10T12:40:40.0779010Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0779103Z         with self._recreate_cm():
2025-01-10T12:40:40.0779194Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0779285Z E           AssertionError: 
2025-01-10T12:40:40.0779396Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0779476Z E           
2025-01-10T12:40:40.0779579Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0779727Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0779866Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0780041Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0780135Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0780304Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0780397Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0780406Z 
2025-01-10T12:40:40.0780612Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0780826Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-10T12:40:40.0780830Z 
2025-01-10T12:40:40.0781102Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c19940>
2025-01-10T12:40:40.0781427Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ef6840>
2025-01-10T12:40:40.0781639Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0781738Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0781850Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0781952Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0782168Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0782416Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-10T12:40:40.0782420Z 
2025-01-10T12:40:40.0782515Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0782690Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0782763Z     ):
2025-01-10T12:40:40.0782865Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0782974Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0783153Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0783226Z     
2025-01-10T12:40:40.0783346Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0783449Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0783591Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0783705Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0783781Z             )
2025-01-10T12:40:40.0783942Z     
2025-01-10T12:40:40.0784044Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0784155Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0784243Z             if data.stackgroup:
2025-01-10T12:40:40.0784326Z                 assert (
2025-01-10T12:40:40.0784412Z                     data.stackgroup
2025-01-10T12:40:40.0784494Z                     == getattr(
2025-01-10T12:40:40.0784604Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0784711Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0784796Z                     ).decode()
2025-01-10T12:40:40.0784874Z                 )
2025-01-10T12:40:40.0784959Z             if data.name:
2025-01-10T12:40:40.0785037Z                 assert (
2025-01-10T12:40:40.0785122Z                     data.name
2025-01-10T12:40:40.0785202Z                     == getattr(
2025-01-10T12:40:40.0785314Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0785415Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0785499Z                     ).decode()
2025-01-10T12:40:40.0785572Z                 )
2025-01-10T12:40:40.0785673Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0785808Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0785885Z             )
2025-01-10T12:40:40.0785978Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0786275Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0786397Z             )
2025-01-10T12:40:40.0786407Z 
2025-01-10T12:40:40.0786654Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0786781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0786785Z 
2025-01-10T12:40:40.0787256Z args = (<function assert_allclose.<locals>.compare at 0x7f22e1769f80>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0787370Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0787632Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0787636Z 
2025-01-10T12:40:40.0787720Z     @wraps(func)
2025-01-10T12:40:40.0787806Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0787900Z         with self._recreate_cm():
2025-01-10T12:40:40.0787988Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0788079Z E           AssertionError: 
2025-01-10T12:40:40.0788322Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0788400Z E           
2025-01-10T12:40:40.0788506Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0788647Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0788786Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0788962Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0789057Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0789228Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0789320Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0789324Z 
2025-01-10T12:40:40.0789531Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0789741Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-10T12:40:40.0789751Z 
2025-01-10T12:40:40.0790027Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0b90>
2025-01-10T12:40:40.0790347Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e054fa70>
2025-01-10T12:40:40.0790452Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0790540Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0790779Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0790879Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0791089Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0791329Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-10T12:40:40.0791338Z 
2025-01-10T12:40:40.0791427Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0791597Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0791679Z     ):
2025-01-10T12:40:40.0791781Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0791893Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0792070Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0792141Z     
2025-01-10T12:40:40.0792256Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0792360Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0792509Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0792616Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0792693Z             )
2025-01-10T12:40:40.0792802Z     
2025-01-10T12:40:40.0792910Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0793023Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0793111Z             if data.stackgroup:
2025-01-10T12:40:40.0793196Z                 assert (
2025-01-10T12:40:40.0793285Z                     data.stackgroup
2025-01-10T12:40:40.0793369Z                     == getattr(
2025-01-10T12:40:40.0793476Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0793579Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0793658Z                     ).decode()
2025-01-10T12:40:40.0793736Z                 )
2025-01-10T12:40:40.0793822Z             if data.name:
2025-01-10T12:40:40.0793906Z                 assert (
2025-01-10T12:40:40.0793988Z                     data.name
2025-01-10T12:40:40.0794071Z                     == getattr(
2025-01-10T12:40:40.0794175Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0794275Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0794354Z                     ).decode()
2025-01-10T12:40:40.0794433Z                 )
2025-01-10T12:40:40.0794534Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0794749Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0794830Z             )
2025-01-10T12:40:40.0794921Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0795046Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0795118Z             )
2025-01-10T12:40:40.0795122Z 
2025-01-10T12:40:40.0795274Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0795392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0795397Z 
2025-01-10T12:40:40.0795866Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6093c40>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0795972Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0796343Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0796355Z 
2025-01-10T12:40:40.0796441Z     @wraps(func)
2025-01-10T12:40:40.0796525Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0796619Z         with self._recreate_cm():
2025-01-10T12:40:40.0796707Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0796797Z E           AssertionError: 
2025-01-10T12:40:40.0796905Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0797104Z E           
2025-01-10T12:40:40.0797206Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0797354Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0797486Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0797661Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0797756Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0797925Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0798021Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0798025Z 
2025-01-10T12:40:40.0798227Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0798434Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-10T12:40:40.0798438Z 
2025-01-10T12:40:40.0798714Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0c50>
2025-01-10T12:40:40.0799035Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22f074fad0>
2025-01-10T12:40:40.0799137Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0799227Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0799337Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0799435Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0799649Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0799890Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-10T12:40:40.0799894Z 
2025-01-10T12:40:40.0799991Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0800160Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0800238Z     ):
2025-01-10T12:40:40.0800340Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0800454Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0800633Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0800705Z     
2025-01-10T12:40:40.0800820Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0800916Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0801062Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0801170Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0801366Z             )
2025-01-10T12:40:40.0801439Z     
2025-01-10T12:40:40.0801548Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0801654Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0801748Z             if data.stackgroup:
2025-01-10T12:40:40.0801825Z                 assert (
2025-01-10T12:40:40.0801916Z                     data.stackgroup
2025-01-10T12:40:40.0802002Z                     == getattr(
2025-01-10T12:40:40.0802116Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0802213Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0802296Z                     ).decode()
2025-01-10T12:40:40.0802374Z                 )
2025-01-10T12:40:40.0802455Z             if data.name:
2025-01-10T12:40:40.0802536Z                 assert (
2025-01-10T12:40:40.0802615Z                     data.name
2025-01-10T12:40:40.0802699Z                     == getattr(
2025-01-10T12:40:40.0802810Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0802912Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0802992Z                     ).decode()
2025-01-10T12:40:40.0803073Z                 )
2025-01-10T12:40:40.0803167Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0803298Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0803460Z             )
2025-01-10T12:40:40.0803558Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0803678Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0803760Z             )
2025-01-10T12:40:40.0803764Z 
2025-01-10T12:40:40.0803914Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0804026Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0804030Z 
2025-01-10T12:40:40.0804503Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6093240>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0804605Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0804871Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0804875Z 
2025-01-10T12:40:40.0804952Z     @wraps(func)
2025-01-10T12:40:40.0805048Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0805139Z         with self._recreate_cm():
2025-01-10T12:40:40.0805230Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0805323Z E           AssertionError: 
2025-01-10T12:40:40.0805432Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0805513Z E           
2025-01-10T12:40:40.0805615Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0805760Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0805898Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0806203Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0806294Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0806472Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0806557Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0806572Z 
2025-01-10T12:40:40.0806774Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0806982Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-10T12:40:40.0806986Z 
2025-01-10T12:40:40.0807253Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0ec0>
2025-01-10T12:40:40.0807576Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e12dffb0>
2025-01-10T12:40:40.0807673Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0807885Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0807992Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0808101Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0808307Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0808550Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-10T12:40:40.0808559Z 
2025-01-10T12:40:40.0808654Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0808824Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0808904Z     ):
2025-01-10T12:40:40.0809001Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0809113Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0809286Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0809362Z     
2025-01-10T12:40:40.0809477Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0809578Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0809718Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0809827Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0809901Z             )
2025-01-10T12:40:40.0810094Z     
2025-01-10T12:40:40.0810203Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0810307Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0810398Z             if data.stackgroup:
2025-01-10T12:40:40.0810475Z                 assert (
2025-01-10T12:40:40.0810566Z                     data.stackgroup
2025-01-10T12:40:40.0810644Z                     == getattr(
2025-01-10T12:40:40.0810758Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0810853Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0810936Z                     ).decode()
2025-01-10T12:40:40.0811014Z                 )
2025-01-10T12:40:40.0811100Z             if data.name:
2025-01-10T12:40:40.0811176Z                 assert (
2025-01-10T12:40:40.0811264Z                     data.name
2025-01-10T12:40:40.0811341Z                     == getattr(
2025-01-10T12:40:40.0811449Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0811552Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0811630Z                     ).decode()
2025-01-10T12:40:40.0811707Z                 )
2025-01-10T12:40:40.0811798Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0811932Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0812004Z             )
2025-01-10T12:40:40.0812099Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0812219Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0812295Z             )
2025-01-10T12:40:40.0812299Z 
2025-01-10T12:40:40.0812446Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0812568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0812572Z 
2025-01-10T12:40:40.0813053Z args = (<function assert_allclose.<locals>.compare at 0x7f22e06d8220>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0813158Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0813423Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0813428Z 
2025-01-10T12:40:40.0813505Z     @wraps(func)
2025-01-10T12:40:40.0813594Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0813681Z         with self._recreate_cm():
2025-01-10T12:40:40.0813776Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0813863Z E           AssertionError: 
2025-01-10T12:40:40.0814064Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0814140Z E           
2025-01-10T12:40:40.0814244Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0814381Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0814516Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0814696Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0814782Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0814963Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0815049Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0815053Z 
2025-01-10T12:40:40.0815259Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0815459Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-10T12:40:40.0815463Z 
2025-01-10T12:40:40.0815739Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0f80>
2025-01-10T12:40:40.0816266Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22dc6a7bc0>
2025-01-10T12:40:40.0816368Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0816460Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0816698Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0816802Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0817007Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0817250Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-10T12:40:40.0817255Z 
2025-01-10T12:40:40.0817342Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0817514Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0817591Z     ):
2025-01-10T12:40:40.0817693Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0817804Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0817977Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0818053Z     
2025-01-10T12:40:40.0818161Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0818270Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0818410Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0818521Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0818593Z             )
2025-01-10T12:40:40.0818670Z     
2025-01-10T12:40:40.0818768Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0818879Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0818966Z             if data.stackgroup:
2025-01-10T12:40:40.0819048Z                 assert (
2025-01-10T12:40:40.0819137Z                     data.stackgroup
2025-01-10T12:40:40.0819221Z                     == getattr(
2025-01-10T12:40:40.0819332Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0819427Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0819514Z                     ).decode()
2025-01-10T12:40:40.0819591Z                 )
2025-01-10T12:40:40.0819680Z             if data.name:
2025-01-10T12:40:40.0819757Z                 assert (
2025-01-10T12:40:40.0819840Z                     data.name
2025-01-10T12:40:40.0819917Z                     == getattr(
2025-01-10T12:40:40.0820024Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0820115Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0820198Z                     ).decode()
2025-01-10T12:40:40.0820271Z                 )
2025-01-10T12:40:40.0820372Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0820614Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0820698Z             )
2025-01-10T12:40:40.0820790Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0820915Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0820997Z             )
2025-01-10T12:40:40.0821001Z 
2025-01-10T12:40:40.0821147Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0821271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0821275Z 
2025-01-10T12:40:40.0821743Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cd60>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0821854Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0822110Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0822114Z 
2025-01-10T12:40:40.0822201Z     @wraps(func)
2025-01-10T12:40:40.0822291Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0822379Z         with self._recreate_cm():
2025-01-10T12:40:40.0822472Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0822557Z E           AssertionError: 
2025-01-10T12:40:40.0822667Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0822836Z E           
2025-01-10T12:40:40.0822941Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0823080Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0823215Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0823383Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0823475Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0823641Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0823741Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0823745Z 
2025-01-10T12:40:40.0823954Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0824155Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-10T12:40:40.0824159Z 
2025-01-10T12:40:40.0824427Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1040>
2025-01-10T12:40:40.0824746Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c16f5490>
2025-01-10T12:40:40.0824848Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0824937Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0825045Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0825145Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0825354Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0825607Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-10T12:40:40.0825612Z 
2025-01-10T12:40:40.0825703Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0825873Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0825951Z     ):
2025-01-10T12:40:40.0826147Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0826262Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0826439Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0826513Z     
2025-01-10T12:40:40.0826629Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0826724Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0826868Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0826980Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0827052Z             )
2025-01-10T12:40:40.0827245Z     
2025-01-10T12:40:40.0827350Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0827461Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0827548Z             if data.stackgroup:
2025-01-10T12:40:40.0827631Z                 assert (
2025-01-10T12:40:40.0827717Z                     data.stackgroup
2025-01-10T12:40:40.0827806Z                     == getattr(
2025-01-10T12:40:40.0827912Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0828012Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0828091Z                     ).decode()
2025-01-10T12:40:40.0828174Z                 )
2025-01-10T12:40:40.0828254Z             if data.name:
2025-01-10T12:40:40.0828337Z                 assert (
2025-01-10T12:40:40.0828417Z                     data.name
2025-01-10T12:40:40.0828502Z                     == getattr(
2025-01-10T12:40:40.0828609Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0828705Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0828792Z                     ).decode()
2025-01-10T12:40:40.0828866Z                 )
2025-01-10T12:40:40.0828964Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0829091Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0829285Z             )
2025-01-10T12:40:40.0829376Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0829504Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0829578Z             )
2025-01-10T12:40:40.0829581Z 
2025-01-10T12:40:40.0829733Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0829844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0829854Z 
2025-01-10T12:40:40.0830320Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6091940>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0830427Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0830685Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0830689Z 
2025-01-10T12:40:40.0830772Z     @wraps(func)
2025-01-10T12:40:40.0830861Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0830954Z         with self._recreate_cm():
2025-01-10T12:40:40.0831042Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0831131Z E           AssertionError: 
2025-01-10T12:40:40.0831238Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0831318Z E           
2025-01-10T12:40:40.0831417Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0831561Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0831694Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0831866Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0831961Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0832131Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0832222Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0832231Z 
2025-01-10T12:40:40.0832431Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0832635Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-10T12:40:40.0832639Z 
2025-01-10T12:40:40.0832907Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1100>
2025-01-10T12:40:40.0833223Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22b2816300>
2025-01-10T12:40:40.0833327Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0833522Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0833632Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0833731Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0833942Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0834186Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-10T12:40:40.0834194Z 
2025-01-10T12:40:40.0834287Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0834456Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0834535Z     ):
2025-01-10T12:40:40.0834634Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0834739Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0834915Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0834987Z     
2025-01-10T12:40:40.0835106Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0835202Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0835348Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0835453Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0835532Z             )
2025-01-10T12:40:40.0835602Z     
2025-01-10T12:40:40.0835793Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0835898Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0835989Z             if data.stackgroup:
2025-01-10T12:40:40.0836157Z                 assert (
2025-01-10T12:40:40.0836251Z                     data.stackgroup
2025-01-10T12:40:40.0836335Z                     == getattr(
2025-01-10T12:40:40.0836440Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0836544Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0836623Z                     ).decode()
2025-01-10T12:40:40.0836710Z                 )
2025-01-10T12:40:40.0836789Z             if data.name:
2025-01-10T12:40:40.0836871Z                 assert (
2025-01-10T12:40:40.0836949Z                     data.name
2025-01-10T12:40:40.0837031Z                     == getattr(
2025-01-10T12:40:40.0837134Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0837231Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0837317Z                     ).decode()
2025-01-10T12:40:40.0837398Z                 )
2025-01-10T12:40:40.0837489Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0837621Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0837699Z             )
2025-01-10T12:40:40.0837791Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0837916Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0837990Z             )
2025-01-10T12:40:40.0837994Z 
2025-01-10T12:40:40.0838148Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0838259Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0838263Z 
2025-01-10T12:40:40.0838731Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6091620>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0838836Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0839097Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0839101Z 
2025-01-10T12:40:40.0839184Z     @wraps(func)
2025-01-10T12:40:40.0839270Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0839360Z         with self._recreate_cm():
2025-01-10T12:40:40.0839447Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0839536Z E           AssertionError: 
2025-01-10T12:40:40.0839776Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0839861Z E           
2025-01-10T12:40:40.0839961Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0840103Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0840231Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0840404Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0840494Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0840667Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0840757Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0840761Z 
2025-01-10T12:40:40.0840959Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0841168Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-10T12:40:40.0841172Z 
2025-01-10T12:40:40.0841440Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd11c0>
2025-01-10T12:40:40.0841801Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e11a04d0>
2025-01-10T12:40:40.0841896Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0841991Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0842206Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0842311Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0842523Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0842771Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-10T12:40:40.0842776Z 
2025-01-10T12:40:40.0842868Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0843036Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0843114Z     ):
2025-01-10T12:40:40.0843216Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0843325Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0843497Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0843574Z     
2025-01-10T12:40:40.0843684Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0843788Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0843934Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0844039Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0844116Z             )
2025-01-10T12:40:40.0844187Z     
2025-01-10T12:40:40.0844291Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0844397Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0844487Z             if data.stackgroup:
2025-01-10T12:40:40.0844563Z                 assert (
2025-01-10T12:40:40.0844659Z                     data.stackgroup
2025-01-10T12:40:40.0844736Z                     == getattr(
2025-01-10T12:40:40.0844845Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0844941Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0845027Z                     ).decode()
2025-01-10T12:40:40.0845099Z                 )
2025-01-10T12:40:40.0845193Z             if data.name:
2025-01-10T12:40:40.0845269Z                 assert (
2025-01-10T12:40:40.0845354Z                     data.name
2025-01-10T12:40:40.0845437Z                     == getattr(
2025-01-10T12:40:40.0845540Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0845638Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0845716Z                     ).decode()
2025-01-10T12:40:40.0845796Z                 )
2025-01-10T12:40:40.0845887Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0846017Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0846299Z             )
2025-01-10T12:40:40.0846402Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0846522Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0846602Z             )
2025-01-10T12:40:40.0846607Z 
2025-01-10T12:40:40.0846751Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0846873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0846876Z 
2025-01-10T12:40:40.0847345Z args = (<function assert_allclose.<locals>.compare at 0x7f22e06db600>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0847444Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0847709Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0847714Z 
2025-01-10T12:40:40.0847796Z     @wraps(func)
2025-01-10T12:40:40.0847889Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0847976Z         with self._recreate_cm():
2025-01-10T12:40:40.0848072Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0848157Z E           AssertionError: 
2025-01-10T12:40:40.0848270Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0848350Z E           
2025-01-10T12:40:40.0848571Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0848716Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0848852Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0849024Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0849111Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0849284Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0849377Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0849381Z 
2025-01-10T12:40:40.0849588Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0849790Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-10T12:40:40.0849799Z 
2025-01-10T12:40:40.0850066Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1280>
2025-01-10T12:40:40.0850392Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1288aa0>
2025-01-10T12:40:40.0850488Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0850584Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0850688Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0850792Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0851002Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0851257Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-10T12:40:40.0851261Z 
2025-01-10T12:40:40.0851348Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0851522Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0851600Z     ):
2025-01-10T12:40:40.0851696Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0851816Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0851989Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0852065Z     
2025-01-10T12:40:40.0852173Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0852275Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0852417Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0852529Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0852601Z             )
2025-01-10T12:40:40.0852767Z     
2025-01-10T12:40:40.0852871Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0852980Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0853066Z             if data.stackgroup:
2025-01-10T12:40:40.0853147Z                 assert (
2025-01-10T12:40:40.0853241Z                     data.stackgroup
2025-01-10T12:40:40.0853318Z                     == getattr(
2025-01-10T12:40:40.0853436Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0853533Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0853618Z                     ).decode()
2025-01-10T12:40:40.0853692Z                 )
2025-01-10T12:40:40.0853777Z             if data.name:
2025-01-10T12:40:40.0853853Z                 assert (
2025-01-10T12:40:40.0853939Z                     data.name
2025-01-10T12:40:40.0854016Z                     == getattr(
2025-01-10T12:40:40.0854125Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0854221Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0854307Z                     ).decode()
2025-01-10T12:40:40.0854380Z                 )
2025-01-10T12:40:40.0854478Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0854608Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0854681Z             )
2025-01-10T12:40:40.0854865Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0854987Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0855064Z             )
2025-01-10T12:40:40.0855068Z 
2025-01-10T12:40:40.0855211Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0855330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0855334Z 
2025-01-10T12:40:40.0855799Z args = (<function assert_allclose.<locals>.compare at 0x7f22d60907c0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0855905Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0856280Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0856286Z 
2025-01-10T12:40:40.0856365Z     @wraps(func)
2025-01-10T12:40:40.0856465Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0856552Z         with self._recreate_cm():
2025-01-10T12:40:40.0856645Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0856728Z E           AssertionError: 
2025-01-10T12:40:40.0856838Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0856912Z E           
2025-01-10T12:40:40.0857021Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0857157Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0857300Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0857474Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0857570Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0857744Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0857829Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0857842Z 
2025-01-10T12:40:40.0858048Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0858250Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-10T12:40:40.0858254Z 
2025-01-10T12:40:40.0858527Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1340>
2025-01-10T12:40:40.0858839Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ef73b0>
2025-01-10T12:40:40.0858947Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0859153Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0859268Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0859373Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0859576Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0859821Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-10T12:40:40.0859829Z 
2025-01-10T12:40:40.0859915Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0860087Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0860160Z     ):
2025-01-10T12:40:40.0860263Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0860369Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0860548Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0860619Z     
2025-01-10T12:40:40.0860738Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0860845Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0860985Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0861097Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0861169Z             )
2025-01-10T12:40:40.0861245Z     
2025-01-10T12:40:40.0861343Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0861570Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0861657Z             if data.stackgroup:
2025-01-10T12:40:40.0861740Z                 assert (
2025-01-10T12:40:40.0861825Z                     data.stackgroup
2025-01-10T12:40:40.0861908Z                     == getattr(
2025-01-10T12:40:40.0862013Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0862117Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0862197Z                     ).decode()
2025-01-10T12:40:40.0862276Z                 )
2025-01-10T12:40:40.0862367Z             if data.name:
2025-01-10T12:40:40.0862447Z                 assert (
2025-01-10T12:40:40.0862532Z                     data.name
2025-01-10T12:40:40.0862609Z                     == getattr(
2025-01-10T12:40:40.0862719Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0862811Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0862900Z                     ).decode()
2025-01-10T12:40:40.0862973Z                 )
2025-01-10T12:40:40.0863070Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0863195Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0863274Z             )
2025-01-10T12:40:40.0863365Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0863491Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0863564Z             )
2025-01-10T12:40:40.0863569Z 
2025-01-10T12:40:40.0863722Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0863840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0863844Z 
2025-01-10T12:40:40.0864305Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6091120>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0864418Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0864677Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0864681Z 
2025-01-10T12:40:40.0864765Z     @wraps(func)
2025-01-10T12:40:40.0864851Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0864944Z         with self._recreate_cm():
2025-01-10T12:40:40.0865032Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0865126Z E           AssertionError: 
2025-01-10T12:40:40.0865239Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0865420Z E           
2025-01-10T12:40:40.0865531Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0865669Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0865809Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0865975Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0866170Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0866341Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0866433Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0866437Z 
2025-01-10T12:40:40.0866637Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0866848Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-10T12:40:40.0866853Z 
2025-01-10T12:40:40.0867133Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1400>
2025-01-10T12:40:40.0867447Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e119e270>
2025-01-10T12:40:40.0867547Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0867638Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0867863Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0867963Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0868176Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0868418Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-10T12:40:40.0868428Z 
2025-01-10T12:40:40.0868515Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0868686Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0868758Z     ):
2025-01-10T12:40:40.0868874Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0868984Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0869165Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0869239Z     
2025-01-10T12:40:40.0869356Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0869454Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0869612Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0869723Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0869805Z             )
2025-01-10T12:40:40.0869878Z     
2025-01-10T12:40:40.0869986Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0870098Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0870186Z             if data.stackgroup:
2025-01-10T12:40:40.0870269Z                 assert (
2025-01-10T12:40:40.0870356Z                     data.stackgroup
2025-01-10T12:40:40.0870444Z                     == getattr(
2025-01-10T12:40:40.0870551Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0870654Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0870733Z                     ).decode()
2025-01-10T12:40:40.0870813Z                 )
2025-01-10T12:40:40.0870893Z             if data.name:
2025-01-10T12:40:40.0870983Z                 assert (
2025-01-10T12:40:40.0871063Z                     data.name
2025-01-10T12:40:40.0871147Z                     == getattr(
2025-01-10T12:40:40.0871249Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0871348Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0871428Z                     ).decode()
2025-01-10T12:40:40.0871510Z                 )
2025-01-10T12:40:40.0871608Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0871734Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0871931Z             )
2025-01-10T12:40:40.0872028Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0872155Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0872231Z             )
2025-01-10T12:40:40.0872235Z 
2025-01-10T12:40:40.0872381Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0872499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0872502Z 
2025-01-10T12:40:40.0872972Z args = (<function assert_allclose.<locals>.compare at 0x7f22e06dafc0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0873078Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0873335Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0873339Z 
2025-01-10T12:40:40.0873421Z     @wraps(func)
2025-01-10T12:40:40.0873514Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0873611Z         with self._recreate_cm():
2025-01-10T12:40:40.0873699Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0873788Z E           AssertionError: 
2025-01-10T12:40:40.0873893Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0873973Z E           
2025-01-10T12:40:40.0874162Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0874304Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0874438Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0874615Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0874708Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0874879Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0874978Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0874982Z 
2025-01-10T12:40:40.0875181Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0875306Z =============================== warnings summary ===============================
2025-01-10T12:40:40.0875422Z tardis/io/configuration/config_validator.py:6
2025-01-10T12:40:40.0875539Z tardis/io/configuration/config_validator.py:6
2025-01-10T12:40:40.0875855Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-10T12:40:40.0875938Z   
2025-01-10T12:40:40.0877160Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-10T12:40:40.0877165Z 
2025-01-10T12:40:40.0877406Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-10T12:40:40.0877785Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-10T12:40:40.0877857Z   
2025-01-10T12:40:40.0878022Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-10T12:40:40.0878183Z   given by the platformdirs library.  To remove this warning and
2025-01-10T12:40:40.0878352Z   see the appropriate new directories, set the environment variable
2025-01-10T12:40:40.0878507Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-10T12:40:40.0878661Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-10T12:40:40.0878666Z 
2025-01-10T12:40:40.0878775Z tardis/plasma/properties/__init__.py:17
2025-01-10T12:40:40.0879058Z   /home/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-10T12:40:40.0879137Z   
2025-01-10T12:40:40.0879805Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-10T12:40:40.0879812Z 
2025-01-10T12:40:40.0884343Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-10T12:40:40.0884634Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0884877Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-10T12:40:40.0884957Z   
2025-01-10T12:40:40.0885027Z   
2025-01-10T12:40:40.0885249Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T12:40:40.0885512Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T12:40:40.0885518Z 
2025-01-10T12:40:40.0885734Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-10T12:40:40.0885960Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-10T12:40:40.0886360Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-10T12:40:40.0886554Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-10T12:40:40.0886875Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-10T12:40:40.0887130Z   
2025-01-10T12:40:40.0887254Z   The current CMFGEN model parser is deprecated
2025-01-10T12:40:40.0887260Z 
2025-01-10T12:40:40.0887385Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-10T12:40:40.0887575Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-10T12:40:40.0887895Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-10T12:40:40.0887967Z   
2025-01-10T12:40:40.0888087Z   The current CMFGEN model parser is deprecated
2025-01-10T12:40:40.0888091Z 
2025-01-10T12:40:40.0888307Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-10T12:40:40.0888686Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-10T12:40:40.0888757Z   
2025-01-10T12:40:40.0889204Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-10T12:40:40.0889214Z 
2025-01-10T12:40:40.0889331Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T12:40:40.0889452Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T12:40:40.0889636Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T12:40:40.0889906Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-10T12:40:40.0889986Z   
2025-01-10T12:40:40.0890094Z   v_inner_boundary < 0, assuming default value
2025-01-10T12:40:40.0890098Z 
2025-01-10T12:40:40.0890207Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T12:40:40.0890326Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T12:40:40.0890500Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T12:40:40.0890756Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-10T12:40:40.0890833Z   
2025-01-10T12:40:40.0890941Z   v_outer_boundary < 0, assuming default value
2025-01-10T12:40:40.0890948Z 
2025-01-10T12:40:40.0891272Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0891591Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0891900Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0892209Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0892933Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0893486Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0894017Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0894463Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0894830Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0895082Z   /home/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-10T12:40:40.0895159Z   
2025-01-10T12:40:40.0896711Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T12:40:40.0896834Z 
2025-01-10T12:40:40.0897298Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0897607Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-10T12:40:40.0897677Z   
2025-01-10T12:40:40.0897963Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-10T12:40:40.0898405Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-10T12:40:40.0898481Z   
2025-01-10T12:40:40.0899007Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-10T12:40:40.0899018Z 
2025-01-10T12:40:40.0899386Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0899713Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1374: DeprecationWarning:
2025-01-10T12:40:40.0899783Z   
2025-01-10T12:40:40.0901172Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T12:40:40.0901183Z 
2025-01-10T12:40:40.0901340Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-10T12:40:40.0901622Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0901698Z   
2025-01-10T12:40:40.0901792Z   Property "atomic_mass" not found
2025-01-10T12:40:40.0901796Z 
2025-01-10T12:40:40.0902230Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-10T12:40:40.0902716Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-10T12:40:40.0903003Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0903082Z   
2025-01-10T12:40:40.0903185Z   Property "j_blues_norm_factor" not found
2025-01-10T12:40:40.0903189Z 
2025-01-10T12:40:40.0903605Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-10T12:40:40.0903974Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-10T12:40:40.0904253Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0904322Z   
2025-01-10T12:40:40.0904425Z   Property "j_blue_estimator" not found
2025-01-10T12:40:40.0904429Z 
2025-01-10T12:40:40.0904825Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-10T12:40:40.0905159Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-10T12:40:40.0905439Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0905510Z   
2025-01-10T12:40:40.0905606Z   Property "volume" not found
2025-01-10T12:40:40.0905728Z 
2025-01-10T12:40:40.0906215Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-10T12:40:40.0906557Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-10T12:40:40.0906830Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0906906Z   
2025-01-10T12:40:40.0907000Z   Property "r_inner" not found
2025-01-10T12:40:40.0907005Z 
2025-01-10T12:40:40.0907222Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-10T12:40:40.0907437Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-10T12:40:40.0907639Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-10T12:40:40.0907881Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-10T12:40:40.0907957Z   
2025-01-10T12:40:40.0908159Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-10T12:40:40.0908163Z 
2025-01-10T12:40:40.0908401Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-10T12:40:40.0908640Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-10T12:40:40.0908882Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-10T12:40:40.0909129Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-10T12:40:40.0909467Z   /home/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-10T12:40:40.0909539Z   
2025-01-10T12:40:40.0909838Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T12:40:40.0909842Z 
2025-01-10T12:40:40.0910059Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T12:40:40.0910264Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-10T12:40:40.0910334Z   
2025-01-10T12:40:40.0910668Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-10T12:40:40.0910673Z 
2025-01-10T12:40:40.0910891Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T12:40:40.0911089Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-10T12:40:40.0911168Z   
2025-01-10T12:40:40.0911629Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-10T12:40:40.0911634Z 
2025-01-10T12:40:40.0911847Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-10T12:40:40.0912041Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-10T12:40:40.0912269Z   /home/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-10T12:40:40.0912340Z   
2025-01-10T12:40:40.0912636Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T12:40:40.0912640Z 
2025-01-10T12:40:40.0912817Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T12:40:40.0913115Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-10T12:40:40.0913192Z   
2025-01-10T12:40:40.0913304Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T12:40:40.0913309Z 
2025-01-10T12:40:40.0913481Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T12:40:40.0913768Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-10T12:40:40.0913844Z   
2025-01-10T12:40:40.0913943Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T12:40:40.0914055Z 
2025-01-10T12:40:40.0914226Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T12:40:40.0914515Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-10T12:40:40.0914586Z   
2025-01-10T12:40:40.0914690Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T12:40:40.0914694Z 
2025-01-10T12:40:40.0915453Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0915458Z 
2025-01-10T12:40:40.0916241Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-10T12:40:40.0916247Z 
2025-01-10T12:40:40.0916571Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0916575Z 
2025-01-10T12:40:40.0917277Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-10T12:40:40.0917288Z 
2025-01-10T12:40:40.0917595Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0917599Z 
2025-01-10T12:40:40.0918299Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-10T12:40:40.0918303Z 
2025-01-10T12:40:40.0918620Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0918625Z 
2025-01-10T12:40:40.0919271Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-10T12:40:40.0919279Z 
2025-01-10T12:40:40.0919592Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0919596Z 
2025-01-10T12:40:40.0920239Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-10T12:40:40.0920250Z 
2025-01-10T12:40:40.0920674Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0920678Z 
2025-01-10T12:40:40.0921333Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-10T12:40:40.0921338Z 
2025-01-10T12:40:40.0921644Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0921657Z 
2025-01-10T12:40:40.0922312Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-10T12:40:40.0922316Z 
2025-01-10T12:40:40.0922637Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0922641Z 
2025-01-10T12:40:40.0923287Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5
2025-01-10T12:40:40.0923291Z 
2025-01-10T12:40:40.0923606Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0923610Z 
2025-01-10T12:40:40.0924252Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-10T12:40:40.0924360Z 
2025-01-10T12:40:40.0924681Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0924685Z 
2025-01-10T12:40:40.0925388Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-10T12:40:40.0925392Z 
2025-01-10T12:40:40.0925706Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0925710Z 
2025-01-10T12:40:40.0926501Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-10T12:40:40.0926514Z 
2025-01-10T12:40:40.0926828Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0926833Z 
2025-01-10T12:40:40.0927483Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-10T12:40:40.0927487Z 
2025-01-10T12:40:40.0927799Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0927803Z 
2025-01-10T12:40:40.0928508Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-10T12:40:40.0928513Z 
2025-01-10T12:40:40.0928821Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0928829Z 
2025-01-10T12:40:40.0929473Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-10T12:40:40.0929478Z 
2025-01-10T12:40:40.0929785Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0929798Z 
2025-01-10T12:40:40.0930611Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-10T12:40:40.0930616Z 
2025-01-10T12:40:40.0930930Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0930934Z 
2025-01-10T12:40:40.0931614Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-10T12:40:40.0931623Z 
2025-01-10T12:40:40.0931941Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0931945Z 
2025-01-10T12:40:40.0932602Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-10T12:40:40.0932606Z 
2025-01-10T12:40:40.0932920Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0932925Z 
2025-01-10T12:40:40.0933581Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-10T12:40:40.0933691Z 
2025-01-10T12:40:40.0934006Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0934010Z 
2025-01-10T12:40:40.0934654Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-10T12:40:40.0934657Z 
2025-01-10T12:40:40.0934973Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0934977Z 
2025-01-10T12:40:40.0935670Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-10T12:40:40.0935681Z 
2025-01-10T12:40:40.0935986Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0935997Z 
2025-01-10T12:40:40.0936833Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-10T12:40:40.0936838Z 
2025-01-10T12:40:40.0937145Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0937149Z 
2025-01-10T12:40:40.0937795Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-01-10T12:40:40.0937799Z 
2025-01-10T12:40:40.0938114Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0938117Z 
2025-01-10T12:40:40.0938752Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-01-10T12:40:40.0938762Z 
2025-01-10T12:40:40.0939078Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0939083Z 
2025-01-10T12:40:40.0939734Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-10T12:40:40.0939738Z 
2025-01-10T12:40:40.0940175Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0940181Z 
2025-01-10T12:40:40.0940856Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-10T12:40:40.0940860Z 
2025-01-10T12:40:40.0941180Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0941184Z 
2025-01-10T12:40:40.0941885Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-10T12:40:40.0941889Z 
2025-01-10T12:40:40.0942205Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0942209Z 
2025-01-10T12:40:40.0942868Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-10T12:40:40.0942872Z 
2025-01-10T12:40:40.0943192Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0943196Z 
2025-01-10T12:40:40.0944007Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-10T12:40:40.0944011Z 
2025-01-10T12:40:40.0944319Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0944322Z 
2025-01-10T12:40:40.0944982Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-10T12:40:40.0944986Z 
2025-01-10T12:40:40.0945292Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0945306Z 
2025-01-10T12:40:40.0945952Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-10T12:40:40.0945963Z 
2025-01-10T12:40:40.0946395Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0946400Z 
2025-01-10T12:40:40.0947046Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-10T12:40:40.0947051Z 
2025-01-10T12:40:40.0947370Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0947374Z 
2025-01-10T12:40:40.0948020Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-01-10T12:40:40.0948024Z 
2025-01-10T12:40:40.0948330Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0948341Z 
2025-01-10T12:40:40.0948985Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-01-10T12:40:40.0948989Z 
2025-01-10T12:40:40.0949304Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0949308Z 
2025-01-10T12:40:40.0950114Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-10T12:40:40.0950119Z 
2025-01-10T12:40:40.0950436Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0950440Z 
2025-01-10T12:40:40.0951126Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-10T12:40:40.0951140Z 
2025-01-10T12:40:40.0951449Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0951454Z 
2025-01-10T12:40:40.0952149Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-10T12:40:40.0952157Z 
2025-01-10T12:40:40.0952461Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0952465Z 
2025-01-10T12:40:40.0953106Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5
2025-01-10T12:40:40.0953218Z 
2025-01-10T12:40:40.0953554Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0953558Z 
2025-01-10T12:40:40.0954216Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-10T12:40:40.0954220Z 
2025-01-10T12:40:40.0954531Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0954540Z 
2025-01-10T12:40:40.0955196Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-10T12:40:40.0955199Z 
2025-01-10T12:40:40.0955509Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0955517Z 
2025-01-10T12:40:40.0956300Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-10T12:40:40.0956305Z 
2025-01-10T12:40:40.0956614Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0956618Z 
2025-01-10T12:40:40.0957309Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-10T12:40:40.0957313Z 
2025-01-10T12:40:40.0957628Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0957632Z 
2025-01-10T12:40:40.0958279Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-10T12:40:40.0958288Z 
2025-01-10T12:40:40.0958630Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-10T12:40:40.0958918Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-10T12:40:40.0958995Z   
2025-01-10T12:40:40.0959960Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-10T12:40:40.0959966Z 
2025-01-10T12:40:40.0960324Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0960677Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0961021Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0961369Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0961718Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0962067Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0962428Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T12:40:40.0962502Z   
2025-01-10T12:40:40.0962717Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-10T12:40:40.0963035Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T12:40:40.0963289Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T12:40:40.0963294Z 
2025-01-10T12:40:40.0963642Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0964005Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0964371Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T12:40:40.0964449Z   
2025-01-10T12:40:40.0964639Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-10T12:40:40.0964815Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T12:40:40.0965061Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T12:40:40.0965072Z 
2025-01-10T12:40:40.0965415Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0965767Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T12:40:40.0965851Z   
2025-01-10T12:40:40.0966030Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-10T12:40:40.0966327Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T12:40:40.0966566Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T12:40:40.0966571Z 
2025-01-10T12:40:40.0967011Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-10T12:40:40.0967338Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:820: DeprecationWarning:
2025-01-10T12:40:40.0967423Z   
2025-01-10T12:40:40.0967702Z   QgridWidget._precision_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-10T12:40:40.0967717Z 
2025-01-10T12:40:40.0967977Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0968199Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-10T12:40:40.0968274Z   
2025-01-10T12:40:40.0968358Z   
2025-01-10T12:40:40.0968564Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T12:40:40.0968967Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T12:40:40.0968973Z 
2025-01-10T12:40:40.0969237Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0969457Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-10T12:40:40.0969533Z   
2025-01-10T12:40:40.0969623Z   
2025-01-10T12:40:40.0969843Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T12:40:40.0970041Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-10T12:40:40.0970045Z 
2025-01-10T12:40:40.0970313Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0970561Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-10T12:40:40.0970647Z   
2025-01-10T12:40:40.0970840Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-10T12:40:40.0970848Z 
2025-01-10T12:40:40.0971075Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-10T12:40:40.0971080Z 
2025-01-10T12:40:40.0971255Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-10T12:40:40.0971393Z Coverage HTML written to dir coverage_html_report
2025-01-10T12:40:40.0971511Z Coverage XML written to file coverage.xml
2025-01-10T12:40:40.0971632Z 
2025-01-10T12:40:40.0971764Z =========================== short test summary info ============================
2025-01-10T12:40:40.0972190Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-10T12:40:40.0972194Z 
2025-01-10T12:40:40.0972333Z MultiIndex level [0] values are different (0.08897 %)
2025-01-10T12:40:40.0972475Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:40.0972556Z        ...
2025-01-10T12:40:40.0972669Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:40.0972796Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:40.0972934Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:40.0973011Z        ...
2025-01-10T12:40:40.0973121Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:40.0973259Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:40.0973379Z At positional index 480, first diff: 8 != 20
2025-01-10T12:40:40.0973678Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-10T12:40:40.0973786Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0973790Z 
2025-01-10T12:40:40.0973905Z Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:40.0974041Z Max absolute difference among violations: 0.99984222
2025-01-10T12:40:40.0974181Z Max relative difference among violations: 6337.12154973
2025-01-10T12:40:40.0974282Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974387Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974472Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.0974594Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974685Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974769Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.0975302Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0975313Z 
2025-01-10T12:40:40.0975446Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0975570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0975648Z        ...
2025-01-10T12:40:40.0975751Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0975880Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0976000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0976306Z        ...
2025-01-10T12:40:40.0976410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0976537Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0976648Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0977173Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.0977183Z 
2025-01-10T12:40:40.0977277Z Series values are different (2.42915 %)
2025-01-10T12:40:40.0977656Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0978004Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.0978438Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.0978962Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.0978967Z 
2025-01-10T12:40:40.0979072Z Series values are different (6.47773 %)
2025-01-10T12:40:40.0979453Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0979839Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.0980224Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.0980713Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0980720Z 
2025-01-10T12:40:40.0980855Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0980964Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0981050Z        ...
2025-01-10T12:40:40.0981137Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0981272Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0981383Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0981552Z        ...
2025-01-10T12:40:40.0981652Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0981779Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0981896Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0982432Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0982440Z 
2025-01-10T12:40:40.0982584Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0982694Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0982792Z        ...
2025-01-10T12:40:40.0982882Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0983022Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0983134Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0983222Z        ...
2025-01-10T12:40:40.0983331Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0983458Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0983574Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0984063Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0984153Z 
2025-01-10T12:40:40.0984335Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0984493Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0991505Z        ...
2025-01-10T12:40:40.0991632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0991779Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0991902Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0991975Z        ...
2025-01-10T12:40:40.0992063Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0992205Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0992312Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0992907Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0992919Z 
2025-01-10T12:40:40.0993051Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0993166Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0993240Z        ...
2025-01-10T12:40:40.0993324Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0993451Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0993559Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0993631Z        ...
2025-01-10T12:40:40.0993712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0993835Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0993936Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0994470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0994474Z 
2025-01-10T12:40:40.0994598Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0994710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0994783Z        ...
2025-01-10T12:40:40.0994864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0994987Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0995093Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0995166Z        ...
2025-01-10T12:40:40.0995245Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0995366Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0995626Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0996248Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0996253Z 
2025-01-10T12:40:40.0996378Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0996488Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0996562Z        ...
2025-01-10T12:40:40.0996645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0996773Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0996882Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0996961Z        ...
2025-01-10T12:40:40.0997044Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0997174Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0997276Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0997782Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0997787Z 
2025-01-10T12:40:40.0997912Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0998036Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0998268Z        ...
2025-01-10T12:40:40.0998357Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0998490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0998604Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0998692Z        ...
2025-01-10T12:40:40.0998776Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0998907Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0999012Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0999536Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.0999542Z 
2025-01-10T12:40:40.0999640Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1000022Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1000380Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1000707Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1001227Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1001232Z 
2025-01-10T12:40:40.1001337Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1001814Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1002204Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1002593Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1003073Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1003078Z 
2025-01-10T12:40:40.1003217Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1003336Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1003492Z        ...
2025-01-10T12:40:40.1003590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1003718Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1003837Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1003914Z        ...
2025-01-10T12:40:40.1004009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1004132Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1004239Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1004762Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1004767Z 
2025-01-10T12:40:40.1004907Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1005025Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1005100Z        ...
2025-01-10T12:40:40.1005208Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1005336Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1005457Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1005531Z        ...
2025-01-10T12:40:40.1005624Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1005747Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1005859Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1006439Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1006445Z 
2025-01-10T12:40:40.1006581Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1006697Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1006775Z        ...
2025-01-10T12:40:40.1006868Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1006997Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1007116Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1007190Z        ...
2025-01-10T12:40:40.1007285Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1007412Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1007529Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1008042Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1008165Z 
2025-01-10T12:40:40.1008306Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1008417Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1008498Z        ...
2025-01-10T12:40:40.1008591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1008717Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1008838Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1008914Z        ...
2025-01-10T12:40:40.1009011Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1009134Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1009249Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1009756Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1009761Z 
2025-01-10T12:40:40.1009904Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1010014Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1010096Z        ...
2025-01-10T12:40:40.1010185Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1010308Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1010427Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1010642Z        ...
2025-01-10T12:40:40.1010734Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1010862Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1010970Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1011458Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1011462Z 
2025-01-10T12:40:40.1011594Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1011708Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1011796Z        ...
2025-01-10T12:40:40.1011886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1012007Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1012122Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1012201Z        ...
2025-01-10T12:40:40.1012289Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1012411Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1012519Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1013004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1013008Z 
2025-01-10T12:40:40.1013139Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1013247Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1013337Z        ...
2025-01-10T12:40:40.1013427Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1013550Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1013668Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1013745Z        ...
2025-01-10T12:40:40.1013838Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1013965Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1014070Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1014551Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1014555Z 
2025-01-10T12:40:40.1014659Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1015113Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1015444Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1015780Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1016374Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1016379Z 
2025-01-10T12:40:40.1016477Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1016841Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1017342Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1017707Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1018179Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1018183Z 
2025-01-10T12:40:40.1018311Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1018431Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1018524Z        ...
2025-01-10T12:40:40.1018607Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1018738Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1018851Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1018932Z        ...
2025-01-10T12:40:40.1019017Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1019151Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1019252Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1019752Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1019757Z 
2025-01-10T12:40:40.1019880Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1020001Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1020080Z        ...
2025-01-10T12:40:40.1020274Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1020403Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1020512Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1020591Z        ...
2025-01-10T12:40:40.1020671Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1020796Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1020902Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1021367Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1021371Z 
2025-01-10T12:40:40.1021494Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1021604Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1021682Z        ...
2025-01-10T12:40:40.1021766Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1021898Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1022004Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1022082Z        ...
2025-01-10T12:40:40.1022166Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1022302Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1022487Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1022987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1022991Z 
2025-01-10T12:40:40.1023121Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1023239Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1023313Z        ...
2025-01-10T12:40:40.1023403Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1023539Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1023649Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1023732Z        ...
2025-01-10T12:40:40.1023818Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1023944Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1024044Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1024545Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1024550Z 
2025-01-10T12:40:40.1024674Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1024788Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1024861Z        ...
2025-01-10T12:40:40.1024951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1025078Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1025189Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1025269Z        ...
2025-01-10T12:40:40.1025352Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1025481Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1025579Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1026175Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1026188Z 
2025-01-10T12:40:40.1026318Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1026430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1026501Z        ...
2025-01-10T12:40:40.1026591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1026720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1026830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1027031Z        ...
2025-01-10T12:40:40.1027118Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1027243Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1027343Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1027845Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1027854Z 
2025-01-10T12:40:40.1027977Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1028089Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1028161Z        ...
2025-01-10T12:40:40.1028251Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1028378Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1028487Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1028567Z        ...
2025-01-10T12:40:40.1028657Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1028783Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1028882Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1029399Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1029537Z 
2025-01-10T12:40:40.1029639Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1030004Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1030338Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1030659Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1031182Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1031186Z 
2025-01-10T12:40:40.1031284Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1031644Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1032010Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1032454Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1032934Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1032942Z 
2025-01-10T12:40:40.1033071Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1033184Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1033257Z        ...
2025-01-10T12:40:40.1033346Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1033468Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1033583Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1033654Z        ...
2025-01-10T12:40:40.1033747Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1033867Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1033978Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1034498Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1034598Z 
2025-01-10T12:40:40.1034728Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1034834Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1034911Z        ...
2025-01-10T12:40:40.1034999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1035121Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1035234Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1035306Z        ...
2025-01-10T12:40:40.1035395Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1035519Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1035625Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1036202Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1036214Z 
2025-01-10T12:40:40.1036344Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1036452Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1036533Z        ...
2025-01-10T12:40:40.1036620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1036738Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1036852Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1036923Z        ...
2025-01-10T12:40:40.1037010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1037133Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1037239Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1037755Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1037760Z 
2025-01-10T12:40:40.1037892Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1038004Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1038082Z        ...
2025-01-10T12:40:40.1038172Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1038293Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1038414Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1038489Z        ...
2025-01-10T12:40:40.1038576Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1038695Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1038919Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1039438Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1039443Z 
2025-01-10T12:40:40.1039571Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1039682Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1039758Z        ...
2025-01-10T12:40:40.1039857Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1039986Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1040095Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1040178Z        ...
2025-01-10T12:40:40.1040265Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1040397Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1040498Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1041008Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1041012Z 
2025-01-10T12:40:40.1041139Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1041259Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1041452Z        ...
2025-01-10T12:40:40.1041541Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1041673Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1041782Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1041866Z        ...
2025-01-10T12:40:40.1041949Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1042077Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1042179Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1042753Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1042757Z 
2025-01-10T12:40:40.1042884Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1042998Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1043075Z        ...
2025-01-10T12:40:40.1043164Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1043290Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1043398Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1043479Z        ...
2025-01-10T12:40:40.1043561Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1043689Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1043788Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1044374Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1044380Z 
2025-01-10T12:40:40.1044474Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1044835Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1045243Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1045564Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1046264Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1046269Z 
2025-01-10T12:40:40.1046372Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1046730Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1047096Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1047588Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1048134Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1048146Z 
2025-01-10T12:40:40.1048269Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1048386Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1048462Z        ...
2025-01-10T12:40:40.1048552Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1048674Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1048790Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1048862Z        ...
2025-01-10T12:40:40.1048955Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1049079Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1049190Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1049779Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1049788Z 
2025-01-10T12:40:40.1049915Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1050029Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1050109Z        ...
2025-01-10T12:40:40.1050199Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1050324Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1050443Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1050520Z        ...
2025-01-10T12:40:40.1050614Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1050733Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1050837Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1051496Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1051510Z 
2025-01-10T12:40:40.1051636Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1051755Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1051833Z        ...
2025-01-10T12:40:40.1051926Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1052051Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1052165Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1052241Z        ...
2025-01-10T12:40:40.1052331Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1052454Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1052565Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1053148Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1053160Z 
2025-01-10T12:40:40.1053288Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1053401Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1053558Z        ...
2025-01-10T12:40:40.1053646Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1053768Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1053882Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1053954Z        ...
2025-01-10T12:40:40.1054043Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1054163Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1054268Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1054852Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1054864Z 
2025-01-10T12:40:40.1054988Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1055102Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1055175Z        ...
2025-01-10T12:40:40.1055271Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1055393Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1055509Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1055583Z        ...
2025-01-10T12:40:40.1055674Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1055798Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1055905Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1056595Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1056608Z 
2025-01-10T12:40:40.1056732Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1056847Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1056921Z        ...
2025-01-10T12:40:40.1057013Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1057140Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1057255Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1057329Z        ...
2025-01-10T12:40:40.1057417Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1057536Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1057642Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1058317Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1058330Z 
2025-01-10T12:40:40.1058457Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1058567Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1058639Z        ...
2025-01-10T12:40:40.1058726Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1058853Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1058967Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1059040Z        ...
2025-01-10T12:40:40.1059130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1059250Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1059357Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1059893Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1059910Z 
2025-01-10T12:40:40.1060006Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1060367Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1060796Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1061122Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1061661Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1061671Z 
2025-01-10T12:40:40.1061770Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1062138Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1062506Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1062876Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1063480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1063486Z 
2025-01-10T12:40:40.1063619Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1063730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1063808Z        ...
2025-01-10T12:40:40.1063893Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1064029Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1064138Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1064217Z        ...
2025-01-10T12:40:40.1064301Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1064431Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1064533Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1065093Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1065098Z 
2025-01-10T12:40:40.1065234Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1065342Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1065422Z        ...
2025-01-10T12:40:40.1065507Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1065722Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1065838Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1065919Z        ...
2025-01-10T12:40:40.1066012Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1066328Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1066433Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1066954Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1066963Z 
2025-01-10T12:40:40.1067109Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1067219Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1067307Z        ...
2025-01-10T12:40:40.1067394Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1067524Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1067640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1067721Z        ...
2025-01-10T12:40:40.1067806Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1067935Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1068038Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1068589Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1068593Z 
2025-01-10T12:40:40.1068728Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1068838Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1068920Z        ...
2025-01-10T12:40:40.1069025Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1069153Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1069270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1069352Z        ...
2025-01-10T12:40:40.1069438Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1069571Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1069674Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1070219Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1070224Z 
2025-01-10T12:40:40.1070473Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1070584Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1070667Z        ...
2025-01-10T12:40:40.1070753Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1070884Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1070994Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1071080Z        ...
2025-01-10T12:40:40.1071165Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1071296Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1071396Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1071929Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1071934Z 
2025-01-10T12:40:40.1072066Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1072181Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1072264Z        ...
2025-01-10T12:40:40.1072347Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1072477Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1072586Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1072666Z        ...
2025-01-10T12:40:40.1072861Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1072990Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1073090Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1073619Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1073623Z 
2025-01-10T12:40:40.1073751Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1073855Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1073931Z        ...
2025-01-10T12:40:40.1074012Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1074137Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1074245Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1074322Z        ...
2025-01-10T12:40:40.1074411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1074542Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1074642Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1075183Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1075188Z 
2025-01-10T12:40:40.1075291Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1075651Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1075976Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1076515Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1077059Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1077063Z 
2025-01-10T12:40:40.1077162Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1077522Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1077896Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1078261Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1078887Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1078891Z 
2025-01-10T12:40:40.1079018Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1079140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1079215Z        ...
2025-01-10T12:40:40.1079307Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1079431Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1079550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1079623Z        ...
2025-01-10T12:40:40.1079718Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1079841Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1079949Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1080506Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1080510Z 
2025-01-10T12:40:40.1080634Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1080747Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1080827Z        ...
2025-01-10T12:40:40.1080923Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1081044Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1081161Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1081234Z        ...
2025-01-10T12:40:40.1081325Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1081451Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1081559Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1082073Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1082077Z 
2025-01-10T12:40:40.1082202Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1082316Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1082390Z        ...
2025-01-10T12:40:40.1082582Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1082708Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1082825Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1082897Z        ...
2025-01-10T12:40:40.1082990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1083116Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1083231Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1083778Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1083783Z 
2025-01-10T12:40:40.1083906Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1084018Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1084093Z        ...
2025-01-10T12:40:40.1084188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1084308Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1084426Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1084501Z        ...
2025-01-10T12:40:40.1084593Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1084713Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1084907Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1085461Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1085466Z 
2025-01-10T12:40:40.1085590Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1085704Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1085778Z        ...
2025-01-10T12:40:40.1085868Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1085995Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1086209Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1086285Z        ...
2025-01-10T12:40:40.1086376Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1086497Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1086605Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1087138Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1087142Z 
2025-01-10T12:40:40.1087265Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1087378Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1087451Z        ...
2025-01-10T12:40:40.1087537Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1087662Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1087776Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1087848Z        ...
2025-01-10T12:40:40.1087936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1088056Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1088162Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1088721Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1088725Z 
2025-01-10T12:40:40.1088848Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1088963Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1089035Z        ...
2025-01-10T12:40:40.1089125Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1089248Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1089481Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1089557Z        ...
2025-01-10T12:40:40.1089648Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1089766Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1089872Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1090439Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1090449Z 
2025-01-10T12:40:40.1090541Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1090907Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1091223Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1091657Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1092234Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1092238Z 
2025-01-10T12:40:40.1092331Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1092737Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1093145Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1093516Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1094060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1094065Z 
2025-01-10T12:40:40.1094198Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1094306Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1094384Z        ...
2025-01-10T12:40:40.1094469Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1094675Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1094787Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1094866Z        ...
2025-01-10T12:40:40.1094956Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1095077Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1095182Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1095760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1095765Z 
2025-01-10T12:40:40.1095897Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1096006Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1096171Z        ...
2025-01-10T12:40:40.1096256Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1096390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1096502Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1096583Z        ...
2025-01-10T12:40:40.1096676Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1096795Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1096901Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1097553Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1097558Z 
2025-01-10T12:40:40.1097700Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1097811Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1097893Z        ...
2025-01-10T12:40:40.1097984Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1098125Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1098243Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1098323Z        ...
2025-01-10T12:40:40.1098418Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1098541Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1098651Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1099225Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1099235Z 
2025-01-10T12:40:40.1099368Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1099476Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1099553Z        ...
2025-01-10T12:40:40.1099637Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1099766Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1099880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1099959Z        ...
2025-01-10T12:40:40.1100048Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1100170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1100278Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1100850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1100859Z 
2025-01-10T12:40:40.1100989Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1101097Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1101178Z        ...
2025-01-10T12:40:40.1101262Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1101390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1101503Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1101693Z        ...
2025-01-10T12:40:40.1101785Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1101907Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1102013Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1102565Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1102576Z 
2025-01-10T12:40:40.1102704Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1102810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1102887Z        ...
2025-01-10T12:40:40.1102972Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1103098Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1103205Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1103284Z        ...
2025-01-10T12:40:40.1103381Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1103502Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1103611Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1104126Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1104229Z 
2025-01-10T12:40:40.1104359Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1104464Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1104545Z        ...
2025-01-10T12:40:40.1104627Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1104753Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1104862Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1104943Z        ...
2025-01-10T12:40:40.1105034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1105159Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1105266Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1105795Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1105805Z 
2025-01-10T12:40:40.1105908Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1106383Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1106716Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1107049Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1107585Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1107596Z 
2025-01-10T12:40:40.1107690Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1108160Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1108527Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1108899Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1109411Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1109517Z 
2025-01-10T12:40:40.1109647Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1109759Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1109832Z        ...
2025-01-10T12:40:40.1109923Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1110048Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1110163Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1110244Z        ...
2025-01-10T12:40:40.1110335Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1110461Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1110561Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1111109Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1111119Z 
2025-01-10T12:40:40.1111246Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1111361Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1111434Z        ...
2025-01-10T12:40:40.1111526Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1111650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1111765Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1111848Z        ...
2025-01-10T12:40:40.1111932Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1112062Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1112167Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1112685Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1112694Z 
2025-01-10T12:40:40.1112819Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1112933Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1113007Z        ...
2025-01-10T12:40:40.1113097Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1113219Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1113333Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1113413Z        ...
2025-01-10T12:40:40.1113495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1113705Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1113809Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1114353Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1114358Z 
2025-01-10T12:40:40.1114486Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1114595Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1114668Z        ...
2025-01-10T12:40:40.1114757Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1114879Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1114995Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1115073Z        ...
2025-01-10T12:40:40.1115154Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1115281Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1115386Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1115909Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1115914Z 
2025-01-10T12:40:40.1116036Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1116357Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1116433Z        ...
2025-01-10T12:40:40.1116521Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1116647Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1116763Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1116841Z        ...
2025-01-10T12:40:40.1116924Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1117054Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1117159Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1117691Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1117696Z 
2025-01-10T12:40:40.1117820Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1117931Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1118013Z        ...
2025-01-10T12:40:40.1118102Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1118224Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1118337Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1118417Z        ...
2025-01-10T12:40:40.1118501Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1118631Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1118730Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1119278Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1119283Z 
2025-01-10T12:40:40.1119378Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1119742Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1120205Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1120531Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1121077Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1121082Z 
2025-01-10T12:40:40.1121181Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1121538Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1121905Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1122373Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1122883Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1122888Z 
2025-01-10T12:40:40.1123016Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1123129Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1123210Z        ...
2025-01-10T12:40:40.1123302Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1123426Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1123541Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1123614Z        ...
2025-01-10T12:40:40.1123703Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1123824Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1123937Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1124488Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1124492Z 
2025-01-10T12:40:40.1124623Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1124730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1124816Z        ...
2025-01-10T12:40:40.1124905Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1125025Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1125139Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1125214Z        ...
2025-01-10T12:40:40.1125303Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1125424Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1125529Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1126262Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1126268Z 
2025-01-10T12:40:40.1126409Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1126518Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1126604Z        ...
2025-01-10T12:40:40.1126694Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1126817Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1126934Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1127008Z        ...
2025-01-10T12:40:40.1127097Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1127218Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1127324Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1127874Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1127878Z 
2025-01-10T12:40:40.1128012Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1128119Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1128201Z        ...
2025-01-10T12:40:40.1128422Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1128544Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1128658Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1128732Z        ...
2025-01-10T12:40:40.1128819Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1128941Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1129047Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1129592Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1129596Z 
2025-01-10T12:40:40.1129726Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1129833Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1129912Z        ...
2025-01-10T12:40:40.1130001Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1130126Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1130239Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1130314Z        ...
2025-01-10T12:40:40.1130401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1130523Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1130628Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1131156Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1131160Z 
2025-01-10T12:40:40.1131295Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1131401Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1131480Z        ...
2025-01-10T12:40:40.1131563Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1131701Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1131816Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1131888Z        ...
2025-01-10T12:40:40.1131976Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1132096Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1132202Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1132730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1132835Z 
2025-01-10T12:40:40.1132969Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1133078Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1133159Z        ...
2025-01-10T12:40:40.1133242Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1133376Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1133496Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1133575Z        ...
2025-01-10T12:40:40.1133665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1133786Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1133891Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1134447Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1134451Z 
2025-01-10T12:40:40.1134558Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1134929Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1135334Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1135670Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1136354Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1136365Z 
2025-01-10T12:40:40.1136460Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1136830Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1137207Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1137588Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1138231Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1138236Z 
2025-01-10T12:40:40.1138365Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1138481Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1138561Z        ...
2025-01-10T12:40:40.1138645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1138781Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1138892Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1138971Z        ...
2025-01-10T12:40:40.1139055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1139185Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1139286Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1139864Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1139874Z 
2025-01-10T12:40:40.1139999Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1140110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1140190Z        ...
2025-01-10T12:40:40.1140273Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1140401Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1140622Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1140700Z        ...
2025-01-10T12:40:40.1140784Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1140911Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1141012Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1141552Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1141556Z 
2025-01-10T12:40:40.1141686Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1141799Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1141879Z        ...
2025-01-10T12:40:40.1141962Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1142092Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1142209Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1142288Z        ...
2025-01-10T12:40:40.1142374Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1142502Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1142602Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1143171Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1143176Z 
2025-01-10T12:40:40.1143307Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1143420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1143498Z        ...
2025-01-10T12:40:40.1143580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1143711Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1143821Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1143907Z        ...
2025-01-10T12:40:40.1143993Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1144118Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1144220Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1144785Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1144790Z 
2025-01-10T12:40:40.1144915Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1145116Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1145196Z        ...
2025-01-10T12:40:40.1145279Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1145406Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1145514Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1145598Z        ...
2025-01-10T12:40:40.1145681Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1145808Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1145908Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1146578Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1146583Z 
2025-01-10T12:40:40.1146713Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1146830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1146909Z        ...
2025-01-10T12:40:40.1146991Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1147118Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1147228Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1147308Z        ...
2025-01-10T12:40:40.1147513Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1147639Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1147739Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1148285Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1148290Z 
2025-01-10T12:40:40.1148415Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1148528Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1148612Z        ...
2025-01-10T12:40:40.1148696Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1148825Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1148934Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1149014Z        ...
2025-01-10T12:40:40.1149097Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1149229Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1149331Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1149891Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1149895Z 
2025-01-10T12:40:40.1149991Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1150369Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1150699Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1151154Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1151721Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1151725Z 
2025-01-10T12:40:40.1151825Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1152192Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1152572Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1152953Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1153560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1153569Z 
2025-01-10T12:40:40.1153695Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1153813Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1153886Z        ...
2025-01-10T12:40:40.1153976Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1154099Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1154214Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1154288Z        ...
2025-01-10T12:40:40.1154383Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1154509Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1154616Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1155183Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1155194Z 
2025-01-10T12:40:40.1155320Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1155436Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1155521Z        ...
2025-01-10T12:40:40.1155612Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1155735Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1155854Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1155931Z        ...
2025-01-10T12:40:40.1156025Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1156248Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1156360Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1156891Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1156902Z 
2025-01-10T12:40:40.1157027Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1157141Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1157216Z        ...
2025-01-10T12:40:40.1157418Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1157544Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1157659Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1157733Z        ...
2025-01-10T12:40:40.1157824Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1157947Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1158058Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1158621Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1158632Z 
2025-01-10T12:40:40.1158762Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1158877Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1158951Z        ...
2025-01-10T12:40:40.1159046Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1159168Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1159283Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1159357Z        ...
2025-01-10T12:40:40.1159449Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1159571Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1159788Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1160351Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1160361Z 
2025-01-10T12:40:40.1160486Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1160597Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1160670Z        ...
2025-01-10T12:40:40.1160757Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1160884Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1160998Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1161071Z        ...
2025-01-10T12:40:40.1161160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1161281Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1161391Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1161933Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1161942Z 
2025-01-10T12:40:40.1162067Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1162178Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1162251Z        ...
2025-01-10T12:40:40.1162339Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1162469Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1162584Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1162657Z        ...
2025-01-10T12:40:40.1162746Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1162867Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1162973Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1163527Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1163539Z 
2025-01-10T12:40:40.1163664Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1163775Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1163848Z        ...
2025-01-10T12:40:40.1163937Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1164060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1164263Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1164341Z        ...
2025-01-10T12:40:40.1164432Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1164561Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1164672Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1165243Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1165259Z 
2025-01-10T12:40:40.1165356Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1165730Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1166146Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1166599Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1167177Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1167181Z 
2025-01-10T12:40:40.1167276Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1167644Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1168024Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1168400Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1168944Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1168949Z 
2025-01-10T12:40:40.1169081Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1169190Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1169271Z        ...
2025-01-10T12:40:40.1169356Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1169592Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1169704Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1169782Z        ...
2025-01-10T12:40:40.1169869Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1169995Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1170096Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1170678Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1170682Z 
2025-01-10T12:40:40.1170813Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1170924Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1171002Z        ...
2025-01-10T12:40:40.1171086Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1171213Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1171327Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1171407Z        ...
2025-01-10T12:40:40.1171491Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1171619Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1171720Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1172261Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1172345Z 
2025-01-10T12:40:40.1172481Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1172588Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1172667Z        ...
2025-01-10T12:40:40.1172750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1172878Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1172992Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1173072Z        ...
2025-01-10T12:40:40.1173157Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1173288Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1173390Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1173971Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1173983Z 
2025-01-10T12:40:40.1174118Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1174224Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1174303Z        ...
2025-01-10T12:40:40.1174387Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1174514Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1174625Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1174707Z        ...
2025-01-10T12:40:40.1174791Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1174918Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1175019Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1175593Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1175602Z 
2025-01-10T12:40:40.1175734Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1175840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1175919Z        ...
2025-01-10T12:40:40.1176003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1176225Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1176339Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1176417Z        ...
2025-01-10T12:40:40.1176633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1176768Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1176868Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1177424Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1177434Z 
2025-01-10T12:40:40.1177563Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1177669Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1177748Z        ...
2025-01-10T12:40:40.1177831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1177959Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1178069Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1178148Z        ...
2025-01-10T12:40:40.1178237Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1178364Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1178465Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1179056Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1179191Z 
2025-01-10T12:40:40.1179325Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1179432Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1179510Z        ...
2025-01-10T12:40:40.1179592Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1179719Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1179828Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1179910Z        ...
2025-01-10T12:40:40.1179996Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1180131Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1180231Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1180830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1180840Z 
2025-01-10T12:40:40.1180942Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1181307Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1181643Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1181978Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1182577Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1182582Z 
2025-01-10T12:40:40.1182685Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1183152Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1183530Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1183919Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1184491Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1184573Z 
2025-01-10T12:40:40.1184703Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1184817Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1184891Z        ...
2025-01-10T12:40:40.1184983Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1185106Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1185226Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1185304Z        ...
2025-01-10T12:40:40.1185397Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1185526Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1185628Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1186356Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1186369Z 
2025-01-10T12:40:40.1186498Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1186613Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1186687Z        ...
2025-01-10T12:40:40.1186777Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1186902Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1187024Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1187105Z        ...
2025-01-10T12:40:40.1187196Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1187326Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1187427Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1187999Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1188008Z 
2025-01-10T12:40:40.1188135Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1188251Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1188325Z        ...
2025-01-10T12:40:40.1188414Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1188539Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1188656Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1188730Z        ...
2025-01-10T12:40:40.1188949Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1189080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1189181Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1189904Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1189915Z 
2025-01-10T12:40:40.1190091Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T12:40:40.1190474Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1195262Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T12:40:40.1200345Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T12:40:40.1200550Z At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T12:40:40.1201193Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1201197Z 
2025-01-10T12:40:40.1201339Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1201449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1201529Z        ...
2025-01-10T12:40:40.1201615Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1201747Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1201856Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1202066Z        ...
2025-01-10T12:40:40.1202151Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1202279Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1202381Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1202989Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1202993Z 
2025-01-10T12:40:40.1203130Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1203239Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1203328Z        ...
2025-01-10T12:40:40.1203417Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1203546Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1203656Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1203739Z        ...
2025-01-10T12:40:40.1203822Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1203952Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1204055Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1204649Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1204653Z 
2025-01-10T12:40:40.1204789Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1204895Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1204973Z        ...
2025-01-10T12:40:40.1205056Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1205188Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1205298Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1205380Z        ...
2025-01-10T12:40:40.1205464Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1205592Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1205690Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1206372Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1206377Z 
2025-01-10T12:40:40.1206506Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1206727Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1206808Z        ...
2025-01-10T12:40:40.1206892Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1207021Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1207130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1207213Z        ...
2025-01-10T12:40:40.1207296Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1207421Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1207523Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1208078Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1208083Z 
2025-01-10T12:40:40.1208214Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1208326Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1208406Z        ...
2025-01-10T12:40:40.1208490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1208621Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1208730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1208918Z        ...
2025-01-10T12:40:40.1209001Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1209127Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1209228Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1209788Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1209793Z 
2025-01-10T12:40:40.1209894Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1210256Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1210583Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1210914Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1211470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1211478Z 
2025-01-10T12:40:40.1211577Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1211932Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1212374Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1212742Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1213284Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1213289Z 
2025-01-10T12:40:40.1213416Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1213529Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1213602Z        ...
2025-01-10T12:40:40.1213701Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1213824Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1214019Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1214093Z        ...
2025-01-10T12:40:40.1214182Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1214307Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1214412Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1214987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1214992Z 
2025-01-10T12:40:40.1215121Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1215233Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1215307Z        ...
2025-01-10T12:40:40.1215394Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1215517Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1215640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1215712Z        ...
2025-01-10T12:40:40.1215803Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1215924Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1216030Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1216683Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1216688Z 
2025-01-10T12:40:40.1216817Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1216930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1217002Z        ...
2025-01-10T12:40:40.1217090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1217211Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1217324Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1217407Z        ...
2025-01-10T12:40:40.1217495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1217614Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1217721Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1218400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1218404Z 
2025-01-10T12:40:40.1218694Z DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:40.1219059Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1223926Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:40.1229112Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:40.1229301Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:40.1229907Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1229915Z 
2025-01-10T12:40:40.1230048Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1230160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1230239Z        ...
2025-01-10T12:40:40.1230325Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1230456Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1230570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1230650Z        ...
2025-01-10T12:40:40.1230734Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1230862Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1230963Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1231533Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1231666Z 
2025-01-10T12:40:40.1231800Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1231910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1231990Z        ...
2025-01-10T12:40:40.1232073Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1232200Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1232317Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1232395Z        ...
2025-01-10T12:40:40.1232478Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1232605Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1232707Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1233277Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1233289Z 
2025-01-10T12:40:40.1233422Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1233529Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1233619Z        ...
2025-01-10T12:40:40.1233705Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1233835Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1233949Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1234033Z        ...
2025-01-10T12:40:40.1234117Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1234245Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1234349Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1234909Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1234921Z 
2025-01-10T12:40:40.1235052Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1235159Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1235241Z        ...
2025-01-10T12:40:40.1235325Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1235458Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1235568Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1235730Z        ...
2025-01-10T12:40:40.1235819Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1235950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1236145Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1236633Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1236643Z 
2025-01-10T12:40:40.1236774Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1236884Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1236965Z        ...
2025-01-10T12:40:40.1237051Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1237179Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1237286Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1237365Z        ...
2025-01-10T12:40:40.1237455Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1237582Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1237681Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1238175Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1238293Z 
2025-01-10T12:40:40.1238400Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1238760Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1239091Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1239413Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1239905Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1239909Z 
2025-01-10T12:40:40.1240012Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1240371Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1240738Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1241206Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1241673Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1241682Z 
2025-01-10T12:40:40.1241807Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1241921Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1241994Z        ...
2025-01-10T12:40:40.1247596Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1247778Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1247903Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1247990Z        ...
2025-01-10T12:40:40.1248096Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1248238Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1248350Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1248894Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1249068Z 
2025-01-10T12:40:40.1249225Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1249345Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1249430Z        ...
2025-01-10T12:40:40.1249521Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1249660Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1249774Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1249859Z        ...
2025-01-10T12:40:40.1249954Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1250086Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1250197Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1250688Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1250698Z 
2025-01-10T12:40:40.1250838Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1250947Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1251030Z        ...
2025-01-10T12:40:40.1251115Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1251248Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1251361Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1251441Z        ...
2025-01-10T12:40:40.1251525Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1251657Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1251761Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1252385Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1252394Z 
2025-01-10T12:40:40.1252572Z DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:40.1252931Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1258035Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:40.1263049Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:40.1263242Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:40.1263805Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1263809Z 
2025-01-10T12:40:40.1264046Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1264167Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1264244Z        ...
2025-01-10T12:40:40.1264339Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1264468Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1264590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1264662Z        ...
2025-01-10T12:40:40.1264755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1264879Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1264989Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1265504Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1265509Z 
2025-01-10T12:40:40.1265650Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1265766Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1265841Z        ...
2025-01-10T12:40:40.1265935Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1266185Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1266307Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1266498Z        ...
2025-01-10T12:40:40.1266594Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1266724Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1266842Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1267369Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1267373Z 
2025-01-10T12:40:40.1267513Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1267638Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1267713Z        ...
2025-01-10T12:40:40.1267803Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1267928Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1268046Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1268129Z        ...
2025-01-10T12:40:40.1268219Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1268342Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1268451Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1268954Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1268958Z 
2025-01-10T12:40:40.1269092Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1269213Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1269286Z        ...
2025-01-10T12:40:40.1269375Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1269499Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1269618Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1269692Z        ...
2025-01-10T12:40:40.1269787Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1269908Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1270016Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1270522Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1270526Z 
2025-01-10T12:40:40.1270659Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1270775Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1270961Z        ...
2025-01-10T12:40:40.1271054Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1271174Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1271289Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1271363Z        ...
2025-01-10T12:40:40.1271454Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1271585Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1271693Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1272214Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1272218Z 
2025-01-10T12:40:40.1272321Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1272699Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1273025Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1273441Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1273980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1273984Z 
2025-01-10T12:40:40.1274082Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1274452Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1274840Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1275212Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1275715Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1275719Z 
2025-01-10T12:40:40.1275856Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1275967Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1276238Z        ...
2025-01-10T12:40:40.1276331Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1276465Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1276578Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1276656Z        ...
2025-01-10T12:40:40.1276742Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1276875Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1276981Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1277523Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1277529Z 
2025-01-10T12:40:40.1277664Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1277771Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1277853Z        ...
2025-01-10T12:40:40.1277947Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1278078Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1278189Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1278268Z        ...
2025-01-10T12:40:40.1278353Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1278481Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1278695Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1279197Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1279202Z 
2025-01-10T12:40:40.1279338Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1279446Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1279526Z        ...
2025-01-10T12:40:40.1279611Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1279745Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1279855Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1279937Z        ...
2025-01-10T12:40:40.1280020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1280149Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1280258Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1280791Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1280796Z 
2025-01-10T12:40:40.1280931Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1281037Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1281119Z        ...
2025-01-10T12:40:40.1281204Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1281341Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1281450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1281531Z        ...
2025-01-10T12:40:40.1281613Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1281742Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1281845Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1282378Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1282383Z 
2025-01-10T12:40:40.1282514Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1282621Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1282700Z        ...
2025-01-10T12:40:40.1282784Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1282919Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1283135Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1283221Z        ...
2025-01-10T12:40:40.1283307Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1283441Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1283545Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1284070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1284074Z 
2025-01-10T12:40:40.1284210Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1284322Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1284403Z        ...
2025-01-10T12:40:40.1284489Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1284620Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1284736Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1284815Z        ...
2025-01-10T12:40:40.1284899Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1285031Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1285133Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1285635Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1285719Z 
2025-01-10T12:40:40.1285852Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1285967Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1286046Z        ...
2025-01-10T12:40:40.1286250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1286389Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1286501Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1286582Z        ...
2025-01-10T12:40:40.1286671Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1286799Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1286904Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1287423Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1287433Z 
2025-01-10T12:40:40.1287530Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1287903Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1288239Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1288568Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1289090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1289094Z 
2025-01-10T12:40:40.1289324Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1289693Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1290074Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1290455Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1290938Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1291050Z 
2025-01-10T12:40:40.1291180Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1291294Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1291370Z        ...
2025-01-10T12:40:40.1291460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1291584Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1291698Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1291776Z        ...
2025-01-10T12:40:40.1291866Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1291993Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1292098Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1292622Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1292638Z 
2025-01-10T12:40:40.1292765Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1292910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1292984Z        ...
2025-01-10T12:40:40.1293072Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1293194Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1293308Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1293380Z        ...
2025-01-10T12:40:40.1293471Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1293595Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1293701Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1294181Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1294196Z 
2025-01-10T12:40:40.1294323Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1294434Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1294506Z        ...
2025-01-10T12:40:40.1294596Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1294717Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1294830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1294902Z        ...
2025-01-10T12:40:40.1294991Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1295200Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1295306Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1295822Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1295831Z 
2025-01-10T12:40:40.1295961Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1296183Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1296257Z        ...
2025-01-10T12:40:40.1296344Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1296465Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1296579Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1296652Z        ...
2025-01-10T12:40:40.1296743Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1296871Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1296975Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1297490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1297500Z 
2025-01-10T12:40:40.1297625Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1297852Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1297925Z        ...
2025-01-10T12:40:40.1298013Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1298136Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1298248Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1298320Z        ...
2025-01-10T12:40:40.1298408Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1298528Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1298642Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1299137Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1299141Z 
2025-01-10T12:40:40.1299272Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1299387Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1299460Z        ...
2025-01-10T12:40:40.1299549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1299670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1299784Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1299857Z        ...
2025-01-10T12:40:40.1299944Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1300066Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1300170Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1300708Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1300712Z 
2025-01-10T12:40:40.1300844Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1300956Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1301036Z        ...
2025-01-10T12:40:40.1301123Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1301243Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1301357Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1301430Z        ...
2025-01-10T12:40:40.1301522Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1301643Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1301748Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1302406Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1302411Z 
2025-01-10T12:40:40.1302514Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1302882Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1303222Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1303556Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1304186Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1304191Z 
2025-01-10T12:40:40.1304287Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1304661Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1305034Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1305417Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1305938Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1305943Z 
2025-01-10T12:40:40.1306188Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1306300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1306384Z        ...
2025-01-10T12:40:40.1306470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1306602Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1306711Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1306791Z        ...
2025-01-10T12:40:40.1306886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1307009Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1307116Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1307796Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1307810Z 
2025-01-10T12:40:40.1307941Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1308056Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1308134Z        ...
2025-01-10T12:40:40.1308225Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1308348Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1308465Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1308539Z        ...
2025-01-10T12:40:40.1308630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1308751Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1308857Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1309388Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1309400Z 
2025-01-10T12:40:40.1309528Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1309641Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1309714Z        ...
2025-01-10T12:40:40.1309927Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1310049Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1310164Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1310239Z        ...
2025-01-10T12:40:40.1310329Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1310450Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1310556Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1311117Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1311127Z 
2025-01-10T12:40:40.1311251Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1311365Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1311437Z        ...
2025-01-10T12:40:40.1311530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1311658Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1311774Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1311848Z        ...
2025-01-10T12:40:40.1311937Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1312059Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1312165Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1312716Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1312726Z 
2025-01-10T12:40:40.1312851Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1312966Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1313039Z        ...
2025-01-10T12:40:40.1313127Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1313259Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1313379Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1313452Z        ...
2025-01-10T12:40:40.1313545Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1313666Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1313769Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1314313Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1314410Z 
2025-01-10T12:40:40.1314536Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1314647Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1314719Z        ...
2025-01-10T12:40:40.1314805Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1314927Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1315047Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1315120Z        ...
2025-01-10T12:40:40.1315206Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1315325Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1315431Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1316005Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1316016Z 
2025-01-10T12:40:40.1316241Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1316355Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1316428Z        ...
2025-01-10T12:40:40.1316516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1316637Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1316866Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1316941Z        ...
2025-01-10T12:40:40.1317028Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1317148Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1317250Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1317841Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1317851Z 
2025-01-10T12:40:40.1317948Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1318306Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1318630Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1318958Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1319551Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1319559Z 
2025-01-10T12:40:40.1319652Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1320010Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1320500Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1320868Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1321444Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1321449Z 
2025-01-10T12:40:40.1321582Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1321689Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1321769Z        ...
2025-01-10T12:40:40.1321853Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1322068Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1322178Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1322256Z        ...
2025-01-10T12:40:40.1322341Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1322468Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1322569Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1323181Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1323186Z 
2025-01-10T12:40:40.1323318Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1323432Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1323515Z        ...
2025-01-10T12:40:40.1323598Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1323727Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1323841Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1323921Z        ...
2025-01-10T12:40:40.1324004Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1324134Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1324241Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1324808Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1324816Z 
2025-01-10T12:40:40.1324948Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1325053Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1325144Z        ...
2025-01-10T12:40:40.1325235Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1325360Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1325474Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1325553Z        ...
2025-01-10T12:40:40.1325636Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1325761Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1325866Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1326582Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1326588Z 
2025-01-10T12:40:40.1326836Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1326949Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1327029Z        ...
2025-01-10T12:40:40.1327112Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1327239Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1327353Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1327436Z        ...
2025-01-10T12:40:40.1327519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1327644Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1327749Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1328340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1328345Z 
2025-01-10T12:40:40.1328477Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1328584Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1328664Z        ...
2025-01-10T12:40:40.1328747Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1328874Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1328982Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1329176Z        ...
2025-01-10T12:40:40.1329257Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1329384Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1329487Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1330062Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1330067Z 
2025-01-10T12:40:40.1330202Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1330308Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1330390Z        ...
2025-01-10T12:40:40.1330472Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1330600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1330709Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1330793Z        ...
2025-01-10T12:40:40.1330879Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1331004Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1331110Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1331416Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-10T12:40:40.1331527Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1331531Z 
2025-01-10T12:40:40.1331628Z Mismatched elements: 80 / 584480 (0.0137%)
2025-01-10T12:40:40.1331747Z Max absolute difference among violations: 1.
2025-01-10T12:40:40.1331854Z Max relative difference among violations: 1.
2025-01-10T12:40:40.1332008Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332114Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332223Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:40.1332375Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332484Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332594Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:40.1332889Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-10T12:40:40.1332998Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1333002Z 
2025-01-10T12:40:40.1333181Z Mismatched elements: 775 / 29224 (2.65%)
2025-01-10T12:40:40.1333308Z Max absolute difference among violations: 4005
2025-01-10T12:40:40.1333422Z Max relative difference among violations: 415.5
2025-01-10T12:40:40.1333550Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:40.1333672Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:40.1333971Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-10T12:40:40.1334078Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1334082Z 
2025-01-10T12:40:40.1334174Z Mismatched elements: 1843 / 29224 (6.31%)
2025-01-10T12:40:40.1334289Z Max absolute difference among violations: 4046
2025-01-10T12:40:40.1334417Z Max relative difference among violations: 54.65079365
2025-01-10T12:40:40.1334543Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:40.1334663Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:40.1334933Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-10T12:40:40.1335031Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1335035Z 
2025-01-10T12:40:40.1335138Z Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:40.1335265Z Max absolute difference among violations: 0.99984222
2025-01-10T12:40:40.1335503Z Max relative difference among violations: 6337.12154973
2025-01-10T12:40:40.1335610Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1335695Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1335785Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.1335886Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1335972Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1336142Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.1336390Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-10T12:40:40.1336497Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1336501Z 
2025-01-10T12:40:40.1336611Z Mismatched elements: 13481 / 263016 (5.13%)
2025-01-10T12:40:40.1336745Z Max absolute difference among violations: 2.93004431e+13
2025-01-10T12:40:40.1336876Z Max relative difference among violations: 6160.70416047
2025-01-10T12:40:40.1337046Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:40.1337145Z         4.043917e+10, 6.677200e-07],
2025-01-10T12:40:40.1337288Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:40.1337455Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:40.1337544Z         4.043917e+10, 6.677200e-07],
2025-01-10T12:40:40.1337676Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:40.1337921Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-10T12:40:40.1338025Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1338028Z 
2025-01-10T12:40:40.1338126Z Mismatched elements: 2241 / 29224 (7.67%)
2025-01-10T12:40:40.1338255Z Max absolute difference among violations: 2.92713618
2025-01-10T12:40:40.1338387Z Max relative difference among violations: 6160.70416047
2025-01-10T12:40:40.1338556Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:40.1338651Z        1.126883e+00, 4.414472e-04])
2025-01-10T12:40:40.1338820Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:40.1338900Z        1.126883e+00, 4.414472e-04])
2025-01-10T12:40:40.1339166Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-10T12:40:40.1339263Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1339267Z 
2025-01-10T12:40:40.1339370Z Mismatched elements: 40040 / 584480 (6.85%)
2025-01-10T12:40:40.1339506Z Max absolute difference among violations: 604603.16180317
2025-01-10T12:40:40.1339759Z Max relative difference among violations: 4.12352828e+47
2025-01-10T12:40:40.1339922Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:40.1340008Z         0.000000e+00, 0.000000e+00],
2025-01-10T12:40:40.1340147Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:40.1340314Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:40.1340401Z         0.000000e+00, 0.000000e+00],
2025-01-10T12:40:40.1340530Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:40.1341026Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1341031Z 
2025-01-10T12:40:40.1341196Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1341282Z [index]: [0, 1]
2025-01-10T12:40:40.1341386Z [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-10T12:40:40.1341492Z [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T12:40:40.1341663Z At positional index 1, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:40.1342153Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1342267Z 
2025-01-10T12:40:40.1342434Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1342512Z [index]: [0, 1]
2025-01-10T12:40:40.1342611Z [left]:  [9967.488442185557, 10090.337237980311]
2025-01-10T12:40:40.1342707Z [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T12:40:40.1342881Z At positional index 1, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:40.1343421Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1343426Z 
2025-01-10T12:40:40.1343589Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1343672Z [index]: [0, 1]
2025-01-10T12:40:40.1343769Z [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-10T12:40:40.1343871Z [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T12:40:40.1344040Z At positional index 1, first diff: 2880937482.0686474 != 2881024886.0882792
2025-01-10T12:40:40.1344534Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1344539Z 
2025-01-10T12:40:40.1344692Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1344775Z [index]: [0, 1]
2025-01-10T12:40:40.1344866Z [left]:  [9974.969233778693, 10755.649243810945]
2025-01-10T12:40:40.1344971Z [right]: [9974.969233778693, 10755.075718840653]
2025-01-10T12:40:40.1345130Z At positional index 1, first diff: 10755.649243810945 != 10755.075718840653
2025-01-10T12:40:40.1345510Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-10T12:40:40.1345514Z 
2025-01-10T12:40:40.1345612Z Series values are different (100.0 %)
2025-01-10T12:40:40.1345745Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1347063Z [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-10T12:40:40.1348375Z [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T12:40:40.1348576Z At positional index 0, first diff: 1.0165718020021351e+29 != 1.0202042777991753e+29
2025-01-10T12:40:40.1348940Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-10T12:40:40.1348944Z 
2025-01-10T12:40:40.1349039Z Series values are different (100.0 %)
2025-01-10T12:40:40.1349166Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1350130Z [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-10T12:40:40.1351082Z [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T12:40:40.1351363Z At positional index 0, first diff: 116384046125782.77 != 116635492761989.08
2025-01-10T12:40:40.1351718Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-10T12:40:40.1351737Z 
2025-01-10T12:40:40.1351837Z Series values are different (100.0 %)
2025-01-10T12:40:40.1351971Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1352955Z [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-10T12:40:40.1353961Z [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T12:40:40.1354133Z At positional index 0, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:40.1354500Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-10T12:40:40.1354504Z 
2025-01-10T12:40:40.1354605Z Series values are different (95.0 %)
2025-01-10T12:40:40.1354727Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1355817Z [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-10T12:40:40.1357098Z [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T12:40:40.1357273Z At positional index 0, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:40.1357634Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-10T12:40:40.1357638Z 
2025-01-10T12:40:40.1357735Z Series values are different (93.3075 %)
2025-01-10T12:40:40.1358098Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1363206Z [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-10T12:40:40.1368666Z [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T12:40:40.1368871Z At positional index 0, first diff: 1806608624563428.5 != 1806512041912368.8
2025-01-10T12:40:40.1369262Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-10T12:40:40.1369266Z 
2025-01-10T12:40:40.1369365Z Series values are different (5.69 %)
2025-01-10T12:40:40.1369835Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1376181Z [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.1382349Z [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.1382676Z At positional index 23, first diff: -2.49312723626409e-05 != -2.4320296346496788e-05
2025-01-10T12:40:40.1383046Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-10T12:40:40.1383148Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1383159Z 
2025-01-10T12:40:40.1383254Z Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.1383399Z Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.1383506Z Max relative difference among violations: 1.
2025-01-10T12:40:40.1383691Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1383773Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1383946Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1384030Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1384422Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-10T12:40:40.1384522Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1384526Z 
2025-01-10T12:40:40.1384624Z Mismatched elements: 415 / 10000 (4.15%)
2025-01-10T12:40:40.1384765Z Max absolute difference among violations: 6.26425326e+37
2025-01-10T12:40:40.1384889Z Max relative difference among violations: 1.00484475
2025-01-10T12:40:40.1385172Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1385254Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1385425Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1385503Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1385810Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-10T12:40:40.1385919Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1385923Z 
2025-01-10T12:40:40.1386023Z Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.1386271Z Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.1386384Z Max relative difference among violations: 1.
2025-01-10T12:40:40.1386549Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1386629Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1386799Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1386877Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1387171Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-10T12:40:40.1387270Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1387274Z 
2025-01-10T12:40:40.1387380Z Mismatched elements: 490652 / 584480 (83.9%)
2025-01-10T12:40:40.1387628Z Max absolute difference among violations: 5.32418652e-19
2025-01-10T12:40:40.1387759Z Max relative difference among violations: 8.19556014
2025-01-10T12:40:40.1387858Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1387947Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1388026Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1388133Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1388218Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1388299Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1388569Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-10T12:40:40.1388666Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1388670Z 
2025-01-10T12:40:40.1388768Z Mismatched elements: 4783 / 10000 (47.8%)
2025-01-10T12:40:40.1388898Z Max absolute difference among violations: 1.1803545e+39
2025-01-10T12:40:40.1389033Z Max relative difference among violations: 4.31231392
2025-01-10T12:40:40.1389190Z  ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1389275Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1389437Z  DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1389521Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1389816Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-10T12:40:40.1389916Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1389919Z 
2025-01-10T12:40:40.1390021Z Mismatched elements: 5925 / 10000 (59.2%)
2025-01-10T12:40:40.1390153Z Max absolute difference among violations: 3.03195861e+38
2025-01-10T12:40:40.1390285Z Max relative difference among violations: 21041.9645284
2025-01-10T12:40:40.1390441Z  ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1390533Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1390699Z  DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1390782Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1391229Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-10T12:40:40.1391330Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1391334Z 
2025-01-10T12:40:40.1391441Z Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.1391573Z Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.1391817Z Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.1391918Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392008Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392086Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1392191Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392274Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392364Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1392783Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-10T12:40:40.1392913Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1392917Z 
2025-01-10T12:40:40.1393014Z Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.1393146Z Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.1393272Z Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.1393435Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1393526Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1393686Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1393771Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1394220Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-10T12:40:40.1394407Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1394411Z 
2025-01-10T12:40:40.1394507Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1394634Z Max absolute difference among violations: 7.22899675e+37
2025-01-10T12:40:40.1394762Z Max relative difference among violations: 19.3073128
2025-01-10T12:40:40.1394920Z  ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-10T12:40:40.1395006Z        2.268272e+31, 2.225999e+31])
2025-01-10T12:40:40.1395172Z  DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T12:40:40.1395256Z        2.279436e+31, 2.243943e+31])
2025-01-10T12:40:40.1395692Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-10T12:40:40.1395795Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1395804Z 
2025-01-10T12:40:40.1395904Z Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.1396037Z Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.1396256Z Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.1396356Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396442Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396521Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1396627Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396715Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396798Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1397215Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-10T12:40:40.1397319Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1397323Z 
2025-01-10T12:40:40.1397420Z Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.1397555Z Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.1397680Z Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.1397836Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1397922Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1398084Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1398169Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1398765Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-10T12:40:40.1398874Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1398878Z 
2025-01-10T12:40:40.1398973Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1399112Z Max absolute difference among violations: 6.03670637e+37
2025-01-10T12:40:40.1399233Z Max relative difference among violations: 9.913521
2025-01-10T12:40:40.1399399Z  ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-10T12:40:40.1399490Z        1.315549e+31, 1.281291e+31])
2025-01-10T12:40:40.1399648Z  DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T12:40:40.1399733Z        1.330497e+31, 1.294462e+31])
2025-01-10T12:40:40.1400166Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-10T12:40:40.1400272Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1400282Z 
2025-01-10T12:40:40.1400380Z Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.1400513Z Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.1400632Z Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.1400735Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1400815Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1401014Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1401118Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1401197Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1401279Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1401691Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-10T12:40:40.1401794Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1401797Z 
2025-01-10T12:40:40.1401894Z Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.1402027Z Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.1402146Z Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.1402311Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1402393Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1402559Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1402648Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1403090Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-10T12:40:40.1403196Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1403199Z 
2025-01-10T12:40:40.1403289Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1403424Z Max absolute difference among violations: 5.49004665e+37
2025-01-10T12:40:40.1403552Z Max relative difference among violations: 9.345234
2025-01-10T12:40:40.1403712Z  ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-10T12:40:40.1403800Z        1.146857e+31, 1.117191e+31])
2025-01-10T12:40:40.1403962Z  DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T12:40:40.1404047Z        1.260980e+31, 1.222587e+31])
2025-01-10T12:40:40.1404491Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-10T12:40:40.1404595Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1404598Z 
2025-01-10T12:40:40.1404695Z Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.1404830Z Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.1404949Z Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.1405050Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405130Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405299Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1405400Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405485Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405564Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1405989Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-10T12:40:40.1406196Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1406200Z 
2025-01-10T12:40:40.1406294Z Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.1406429Z Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.1406549Z Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.1406714Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1406792Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1406964Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1407044Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1407500Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-10T12:40:40.1407605Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1407725Z 
2025-01-10T12:40:40.1407819Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1407951Z Max absolute difference among violations: 7.72948946e+37
2025-01-10T12:40:40.1408076Z Max relative difference among violations: 17.81369197
2025-01-10T12:40:40.1408238Z  ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-10T12:40:40.1408317Z        2.087889e+31, 2.059957e+31])
2025-01-10T12:40:40.1408482Z  DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T12:40:40.1408559Z        2.088676e+31, 2.060278e+31])
2025-01-10T12:40:40.1408913Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-10T12:40:40.1409010Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T12:40:40.1409019Z 
2025-01-10T12:40:40.1409105Z Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.1409238Z Max absolute difference among violations: 6.92504451e+25
2025-01-10T12:40:40.1409358Z Max relative difference among violations: 0.00085843
2025-01-10T12:40:40.1409521Z  ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-10T12:40:40.1409639Z        6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-10T12:40:40.1409766Z        4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-10T12:40:40.1409919Z  DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T12:40:40.1410037Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T12:40:40.1410155Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T12:40:40.1410550Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-10T12:40:40.1410666Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T12:40:40.1410670Z 
2025-01-10T12:40:40.1410758Z Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.1410891Z Max absolute difference among violations: 2.81924274e+25
2025-01-10T12:40:40.1411015Z Max relative difference among violations: 0.0005693
2025-01-10T12:40:40.1411173Z  ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-10T12:40:40.1411286Z        6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-10T12:40:40.1411409Z        4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-10T12:40:40.1411564Z  DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T12:40:40.1411681Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T12:40:40.1411910Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T12:40:40.1412431Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-10T12:40:40.1412854Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-10T12:40:40.1412955Z Not equal to tolerance rtol=0.01, atol=0
2025-01-10T12:40:40.1412960Z 
2025-01-10T12:40:40.1413058Z Mismatched elements: 75 / 100000 (0.075%)
2025-01-10T12:40:40.1413187Z Max absolute difference among violations: 2.01554089e-05
2025-01-10T12:40:40.1413315Z Max relative difference among violations: 2.08104546
2025-01-10T12:40:40.1413490Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.1413583Z        -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.1413754Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.1413852Z        -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.1414313Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-10T12:40:40.1414410Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1414414Z 
2025-01-10T12:40:40.1414586Z (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.1414735Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.1414852Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.1414968Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.1415126Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.1415235Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.1415358Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.1415823Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-10T12:40:40.1415923Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1415927Z 
2025-01-10T12:40:40.1416020Z Mismatched elements: 558 / 558 (100%)
2025-01-10T12:40:40.1416241Z Max absolute difference among violations: 5978.84516144
2025-01-10T12:40:40.1416373Z Max relative difference among violations: 0.4321623
2025-01-10T12:40:40.1416520Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.1416635Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.1416751Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.1416905Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.1417014Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.1417144Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.1417598Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-10T12:40:40.1417698Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1417702Z 
2025-01-10T12:40:40.1417795Z (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.1417944Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.1418063Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.1418181Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.1418338Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.1418448Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.1418570Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.1419140Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-10T12:40:40.1419243Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1419247Z 
2025-01-10T12:40:40.1419337Z (shapes (147,), (159,) mismatch)
2025-01-10T12:40:40.1419484Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.1419605Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.1419720Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.1419874Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.1419982Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.1420105Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.1420565Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-10T12:40:40.1420664Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1420667Z 
2025-01-10T12:40:40.1420755Z (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.1420900Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.1421012Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.1421257Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.1421410Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.1421518Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.1421643Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.1422086Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-10T12:40:40.1422189Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1422198Z 
2025-01-10T12:40:40.1422289Z (shapes (1435,), (1466,) mismatch)
2025-01-10T12:40:40.1422450Z  ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-10T12:40:40.1422535Z        11383.689745, 11102.237019])
2025-01-10T12:40:40.1422699Z  DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T12:40:40.1422788Z        11152.962595, 11172.044815])
2025-01-10T12:40:40.1423241Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - AssertionError: 
2025-01-10T12:40:40.1423344Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1423348Z 
2025-01-10T12:40:40.1423433Z (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.1423575Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1423681Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1423795Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1423882Z        0.      , 1.      ])
2025-01-10T12:40:40.1424017Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1424118Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1424225Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1424338Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.1424784Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-10T12:40:40.1424890Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1424894Z 
2025-01-10T12:40:40.1424983Z (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.1425127Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.1425327Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.1425449Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.1425604Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.1425712Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.1425834Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.1426399Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-10T12:40:40.1426504Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1426507Z 
2025-01-10T12:40:40.1426597Z (shapes (367,), (379,) mismatch)
2025-01-10T12:40:40.1426741Z  ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-10T12:40:40.1426856Z        11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-10T12:40:40.1426972Z        15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-10T12:40:40.1427135Z  DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T12:40:40.1427242Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T12:40:40.1427362Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T12:40:40.1427822Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - AssertionError: 
2025-01-10T12:40:40.1428045Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1428049Z 
2025-01-10T12:40:40.1428134Z (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.1428275Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1428376Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1428484Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1428566Z        0.      , 1.      ])
2025-01-10T12:40:40.1428707Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1428806Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1428913Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1429017Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.1429443Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-01-10T12:40:40.1429546Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1429550Z 
2025-01-10T12:40:40.1429646Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1429756Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1429888Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1430040Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1430133Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1430285Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1430376Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1430799Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-01-10T12:40:40.1430909Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1430913Z 
2025-01-10T12:40:40.1431000Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1431111Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1431238Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1431384Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1431470Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1431619Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1431818Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1432236Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-10T12:40:40.1432339Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1432343Z 
2025-01-10T12:40:40.1432431Z Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.1432549Z Max absolute difference among violations: 18
2025-01-10T12:40:40.1432659Z Max relative difference among violations: 0.5
2025-01-10T12:40:40.1432814Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.1432900Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.1433053Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.1433142Z          1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.1433559Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-10T12:40:40.1433660Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1433665Z 
2025-01-10T12:40:40.1433751Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1433864Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1433995Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1434147Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1434309Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1434461Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1434547Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1434957Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - AssertionError: 
2025-01-10T12:40:40.1435057Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1435060Z 
2025-01-10T12:40:40.1435155Z Mismatched elements: 12 / 40 (30%)
2025-01-10T12:40:40.1435271Z Max absolute difference among violations: 58.
2025-01-10T12:40:40.1435378Z Max relative difference among violations: 30.
2025-01-10T12:40:40.1435474Z  ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-10T12:40:40.1435554Z        [1.19e+04, 6.00e+01],
2025-01-10T12:40:40.1435641Z        [1.19e+04, 3.10e+01],...
2025-01-10T12:40:40.1435738Z  DESIRED: array([[1.10e+04, 2.00e+00],
2025-01-10T12:40:40.1435821Z        [1.19e+04, 2.00e+00],
2025-01-10T12:40:40.1435904Z        [1.19e+04, 1.00e+00],...
2025-01-10T12:40:40.1436411Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T12:40:40.1436510Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1436514Z 
2025-01-10T12:40:40.1436602Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1436711Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1436835Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1436984Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1437066Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1437218Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1437298Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1437721Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T12:40:40.1437818Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1437823Z 
2025-01-10T12:40:40.1437909Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1438019Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1438139Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1438291Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1438486Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1438643Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1438723Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1439138Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T12:40:40.1439245Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1439248Z 
2025-01-10T12:40:40.1439335Z Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.1439445Z Max absolute difference among violations: 18
2025-01-10T12:40:40.1439551Z Max relative difference among violations: 0.5
2025-01-10T12:40:40.1439704Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.1439785Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.1439940Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.1440025Z          1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.1440440Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T12:40:40.1440532Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1440542Z 
2025-01-10T12:40:40.1440629Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1440850Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1440972Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1441122Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1441202Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1441350Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1441430Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1441849Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T12:40:40.1441946Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1441950Z 
2025-01-10T12:40:40.1442046Z Mismatched elements: 12 / 20 (60%)
2025-01-10T12:40:40.1442153Z Max absolute difference among violations: 58
2025-01-10T12:40:40.1442268Z Max relative difference among violations: 30.
2025-01-10T12:40:40.1442423Z  ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-10T12:40:40.1442503Z         1,  0,  0])
2025-01-10T12:40:40.1442652Z  DESIRED: array([2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T12:40:40.1443124Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-10T12:40:40.1443231Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1443235Z 
2025-01-10T12:40:40.1443324Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1443479Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1443601Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1443770Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1443858Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1444017Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1444109Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1444579Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-10T12:40:40.1444688Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1444693Z 
2025-01-10T12:40:40.1444783Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1444923Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1445043Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1445288Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1445370Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1445534Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1445619Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1446217Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-10T12:40:40.1446334Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1446338Z 
2025-01-10T12:40:40.1446432Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1446569Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1446688Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1446851Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1446934Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1447105Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1447183Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1447658Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-10T12:40:40.1447761Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1447894Z 
2025-01-10T12:40:40.1447987Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1448122Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1448243Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1448406Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1448484Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1448649Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1448728Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1449201Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-10T12:40:40.1449304Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1449308Z 
2025-01-10T12:40:40.1449398Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1449535Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1449669Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1449830Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1449908Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1450070Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1450149Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1450622Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-10T12:40:40.1450725Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1450730Z 
2025-01-10T12:40:40.1450821Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1450961Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1451099Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1451269Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1451355Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1451526Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1451607Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1452087Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-10T12:40:40.1452186Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1452196Z 
2025-01-10T12:40:40.1452403Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1452546Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1452678Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1452848Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1452927Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1453099Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1453178Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1453654Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-10T12:40:40.1453754Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1453757Z 
2025-01-10T12:40:40.1453854Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1453988Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1454122Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1454290Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1454370Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1454534Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1454613Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1455164Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-10T12:40:40.1455264Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1455268Z 
2025-01-10T12:40:40.1455368Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1455499Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1455633Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1455799Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1455884Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1456052Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1456259Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1456735Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-10T12:40:40.1456842Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1456846Z 
2025-01-10T12:40:40.1456947Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1457075Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1457203Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1457368Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1457463Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1457635Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1457713Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1458189Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-10T12:40:40.1458288Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1458292Z 
2025-01-10T12:40:40.1458395Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1458530Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1458661Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1458818Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1458902Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1459067Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1459144Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1459730Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-10T12:40:40.1459832Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1459835Z 
2025-01-10T12:40:40.1459939Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1460068Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1460200Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1460357Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1460441Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1460600Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1460686Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1461156Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-10T12:40:40.1461260Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1461264Z 
2025-01-10T12:40:40.1461358Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1461487Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1461617Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1461773Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1461985Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1462142Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1462226Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1462689Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-10T12:40:40.1462792Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1462795Z 
2025-01-10T12:40:40.1462891Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1463025Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1463155Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1463310Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1463395Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1463553Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1463642Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1464106Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-10T12:40:40.1464212Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1464216Z 
2025-01-10T12:40:40.1464315Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1464443Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1464575Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1464752Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1464858Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1465016Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1465103Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1465568Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-10T12:40:40.1465677Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1465681Z 
2025-01-10T12:40:40.1465776Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1465907Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1466040Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1466311Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1466510Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1466675Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1466761Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1467192Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T12:40:40.1467303Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1467307Z 
2025-01-10T12:40:40.1467398Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1467536Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1467666Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1467824Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1467910Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1468071Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1468160Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1468608Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T12:40:40.1468713Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1468717Z 
2025-01-10T12:40:40.1468809Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1469077Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1469199Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1469368Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1469457Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1469618Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1469704Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1470134Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-10T12:40:40.1470241Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1470245Z 
2025-01-10T12:40:40.1470336Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1470470Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1470591Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1470763Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1470850Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1471007Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1471093Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1471513Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-10T12:40:40.1471621Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1471625Z 
2025-01-10T12:40:40.1471718Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1471854Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1471979Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1472145Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1472226Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1472394Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1472476Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1472900Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T12:40:40.1473003Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1473007Z 
2025-01-10T12:40:40.1473099Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1473234Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1473460Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1473625Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1473708Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1473879Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1473958Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1474391Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T12:40:40.1474496Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1474501Z 
2025-01-10T12:40:40.1474592Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1474727Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1474853Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1475019Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1475102Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1475270Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1475351Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1475775Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-10T12:40:40.1475964Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1475967Z 
2025-01-10T12:40:40.1476155Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1476293Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1476421Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1476583Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1476661Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1476824Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1476909Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1477339Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T12:40:40.1477439Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1477450Z 
2025-01-10T12:40:40.1477541Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1477681Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1477812Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1477976Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1478055Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1478223Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1478301Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1478732Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-10T12:40:40.1478831Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1478835Z 
2025-01-10T12:40:40.1478933Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1479072Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1479195Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1479365Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1479443Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1479610Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1479689Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1480116Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-10T12:40:40.1480216Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1480220Z 
2025-01-10T12:40:40.1480432Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1480563Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1480692Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1480855Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1480934Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1481105Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1481184Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1481618Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-10T12:40:40.1481717Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1481721Z 
2025-01-10T12:40:40.1481820Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1481948Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1482080Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1482235Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1482322Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1482484Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1482563Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1483106Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-10T12:40:40.1483207Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1483211Z 
2025-01-10T12:40:40.1483307Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1483435Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1483565Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1483723Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1483815Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1483974Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1484061Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1484490Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-10T12:40:40.1484596Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1484599Z 
2025-01-10T12:40:40.1484698Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1484825Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1484983Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1485140Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1485226Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1485399Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1485512Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1485941Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-10T12:40:40.1486038Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1486042Z 
2025-01-10T12:40:40.1486240Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1486372Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1486509Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1486674Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1486762Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1486926Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1487010Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1487548Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-10T12:40:40.1487655Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1487658Z 
2025-01-10T12:40:40.1487754Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1487895Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1488029Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1488192Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1488278Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1488435Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1488521Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1488946Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-10T12:40:40.1489052Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1489056Z 
2025-01-10T12:40:40.1489156Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1489280Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1489417Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1489573Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1489657Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1489924Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1490009Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1490283Z = 278 failed, 1160 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 251 warnings in 764.84s (0:12:44) =
2025-01-10T12:40:42.4336885Z ##[error]Process completed with exit code 1.
2025-01-10T12:40:42.4419006Z Post job cleanup.
2025-01-10T12:40:42.4450047Z Post job cleanup.
2025-01-10T12:40:42.5804355Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-01-10T12:40:42.5811072Z Removing micromamba run shell ...
2025-01-10T12:40:42.5814574Z ##[group]Deinitialize micromamba for bash
2025-01-10T12:40:42.5833732Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T12:40:42.5935276Z Resetting RC file "/home/runner/.bashrc"
2025-01-10T12:40:42.5935943Z Deleting config for root prefix 
2025-01-10T12:40:42.5936894Z Clearing mamba executable environment variable
2025-01-10T12:40:42.5938398Z Removing the following in your "/home/runner/.bashrc" file
2025-01-10T12:40:42.5938900Z # >>> mamba initialize >>>
2025-01-10T12:40:42.5939177Z ...
2025-01-10T12:40:42.5939397Z # <<< mamba initialize <<<
2025-01-10T12:40:42.5968833Z Removing mamba initialize block from .bash_profile
2025-01-10T12:40:42.5986957Z ##[endgroup]
2025-01-10T12:40:42.5991105Z Removing environment tardis from auto-activate bash ...
2025-01-10T12:40:42.6121433Z Post job cleanup.
2025-01-10T12:40:42.6160282Z Post job cleanup.
2025-01-10T12:40:42.7181739Z [command]/usr/bin/git version
2025-01-10T12:40:42.7218541Z git version 2.47.1
2025-01-10T12:40:42.7261695Z Temporarily overriding HOME='/home/runner/work/_temp/311b4611-76a8-4b2c-8dd7-ccbba3d984b3' before making global git config changes
2025-01-10T12:40:42.7262958Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T12:40:42.7275164Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T12:40:42.7311543Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T12:40:42.7347600Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T12:40:42.7581490Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T12:40:42.7604816Z http.https://github.com/.extraheader
2025-01-10T12:40:42.7618307Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T12:40:42.7652113Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T12:40:42.7991613Z Post job cleanup.
2025-01-10T12:40:42.8949467Z [command]/usr/bin/git version
2025-01-10T12:40:42.8987166Z git version 2.47.1
2025-01-10T12:40:42.9037566Z Temporarily overriding HOME='/home/runner/work/_temp/403e0106-5c96-47f9-ab4d-433b64343f34' before making global git config changes
2025-01-10T12:40:42.9038884Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T12:40:42.9043759Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-10T12:40:42.9079686Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T12:40:42.9112196Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T12:40:42.9353773Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T12:40:42.9377989Z http.https://github.com/.extraheader
2025-01-10T12:40:42.9391114Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T12:40:42.9426051Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T12:40:42.9783106Z Cleaning up orphan processes
