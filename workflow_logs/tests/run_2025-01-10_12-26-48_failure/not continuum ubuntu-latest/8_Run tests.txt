2025-01-10T12:27:47.9565717Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-10T12:27:47.9567334Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-10T12:27:47.9594118Z shell: /usr/bin/bash -l {0}
2025-01-10T12:27:47.9594374Z env:
2025-01-10T12:27:47.9594558Z   CACHE_NUMBER: 0
2025-01-10T12:27:47.9595183Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T12:27:47.9595829Z   CODECOV_TOKEN: 
2025-01-10T12:27:47.9596213Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-10T12:27:47.9596542Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-10T12:27:47.9596912Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T12:27:47.9597268Z ##[endgroup]
2025-01-10T12:27:56.9720938Z ============================= test session starts ==============================
2025-01-10T12:27:56.9721715Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-10T12:27:56.9722332Z rootdir: /home/runner/work/tardis/tardis
2025-01-10T12:27:56.9722863Z configfile: pyproject.toml
2025-01-10T12:27:56.9723967Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-10T12:27:56.9724661Z collected 1796 items / 2 deselected / 1794 selected
2025-01-10T12:27:56.9725025Z 
2025-01-10T12:28:02.0372497Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-10T12:28:03.7379469Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-10T12:28:05.3301511Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-10T12:28:07.1127224Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-10T12:28:07.1224055Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-10T12:28:08.4455533Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-10T12:28:08.7885114Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-10T12:28:08.7901443Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-10T12:28:12.4995892Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-10T12:28:12.5124937Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-10T12:28:12.5400045Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-10T12:28:52.7422214Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-10T12:28:52.7584993Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-10T12:28:52.7705482Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-10T12:28:52.8027600Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-10T12:28:52.8253226Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-10T12:28:53.1470120Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-10T12:28:53.4564470Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-10T12:28:53.4812749Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-10T12:28:53.7049523Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-10T12:28:53.7119692Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-10T12:29:53.1619106Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-10T12:29:54.1619372Z ............                                                             [ 10%]
2025-01-10T12:29:57.2688507Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-10T12:29:57.3187375Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-10T12:29:58.6390868Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-10T12:29:59.9735695Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-10T12:30:02.2140746Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-10T12:30:04.9796538Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-10T12:30:51.7578973Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-10T12:31:03.2598659Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-10T12:31:04.9321823Z tardis/plasma/tests/test_complete_plasmas.py ...........FFF..FFF..s..... [ 13%]
2025-01-10T12:31:08.5308435Z sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-10T12:31:10.8628867Z F..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-10T12:31:14.7231862Z ........s...FFF..FFF.ss.....sFF.F....ss............s...FFF..FFF.ss.....s [ 26%]
2025-01-10T12:31:18.2801651Z FF.F....ss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-10T12:31:19.5840042Z ..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFssFssssss..... [ 34%]
2025-01-10T12:31:23.1210920Z .......s...FFF..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sF [ 38%]
2025-01-10T12:31:26.8312919Z F.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF. [ 42%]
2025-01-10T12:31:30.5461175Z .FFF.ss.....sFF.Fssssss............s...FFF..FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-10T12:31:33.0781944Z ......s...FFF..FFF.s.....FFFF.Fssssss............s...FFF..FFF.s.....FFFF [ 50%]
2025-01-10T12:31:36.7931382Z .Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF.. [ 54%]
2025-01-10T12:31:40.5717486Z FFF.ss.....sFF.Fssssss................FFF..FFF..s.....sFF.Fssss......... [ 58%]
2025-01-10T12:31:41.2401959Z .........FFF..FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-10T12:31:41.4665082Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-10T12:31:41.4779439Z ......                                                                   [ 62%]
2025-01-10T12:31:41.6084030Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-10T12:34:00.2012023Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-10T12:34:00.2038923Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-10T12:34:23.2033762Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-10T12:34:36.6089238Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-10T12:34:37.3566456Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-10T12:34:46.3565066Z tardis/simulation/tests/test_simulation.py FFFFFFFFFF...                 [ 65%]
2025-01-10T12:34:46.3764410Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-10T12:34:46.8794691Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-10T12:34:46.8867073Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-10T12:34:49.1639462Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-10T12:34:49.1828438Z ..........                                                               [ 69%]
2025-01-10T12:34:49.3568951Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-10T12:34:49.3905183Z .........                                                                [ 72%]
2025-01-10T12:35:08.2007443Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-10T12:36:11.9608414Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-10T12:37:36.6488754Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-10T12:37:36.7207892Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-10T12:37:40.0423786Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-10T12:37:47.2964725Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-10T12:37:47.5170795Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-10T12:37:47.5343420Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-10T12:37:47.5748666Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-10T12:37:56.5353797Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-10T12:37:56.5419614Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-10T12:38:02.9011065Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-10T12:38:03.3863724Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-10T12:38:04.4157400Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-10T12:38:04.5530013Z XX.........                                                              [ 84%]
2025-01-10T12:38:04.5811089Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-10T12:38:04.8890151Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-10T12:38:05.3216651Z .....                                                                    [ 85%]
2025-01-10T12:38:40.4818855Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-10T12:38:40.5106228Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-10T12:38:40.5137627Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-10T12:38:43.5273636Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-10T12:38:43.5452984Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-10T12:38:47.0453428Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-10T12:38:47.0455678Z                                                                          [ 86%]
2025-01-10T12:38:47.8109725Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-10T12:38:49.1876305Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-10T12:38:51.4666414Z ......                                                                   [ 88%]
2025-01-10T12:38:57.1431585Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..FF.F [ 90%]
2025-01-10T12:39:00.2577613Z ..FF.FF..FF.F........FF..FF.F                                            [ 91%]
2025-01-10T12:39:03.2239490Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-10T12:39:10.3490979Z ....                                                                     [ 92%]
2025-01-10T12:39:16.6342036Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-10T12:39:25.6615924Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-10T12:39:26.0990562Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-10T12:39:26.1714762Z ....                                                                     [ 96%]
2025-01-10T12:39:27.2380567Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-10T12:39:27.8738920Z ..................                                                       [ 98%]
2025-01-10T12:40:31.4829440Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-10T12:40:39.7727032Z ......                                                                   [100%]
2025-01-10T12:40:39.7727460Z 
2025-01-10T12:40:39.7727641Z =================================== FAILURES ===================================
2025-01-10T12:40:39.7728278Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-10T12:40:39.7728701Z 
2025-01-10T12:40:39.7728886Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-10T12:40:39.7729440Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-10T12:40:39.7729814Z 
2025-01-10T12:40:39.7730034Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7730491Z         if err_msg is None:
2025-01-10T12:40:39.7730867Z             if left.shape != right.shape:
2025-01-10T12:40:39.7731281Z                 raise_assert_detail(
2025-01-10T12:40:39.7731817Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7732424Z                 )
2025-01-10T12:40:39.7732762Z     
2025-01-10T12:40:39.7733067Z             diff = 0
2025-01-10T12:40:39.7733552Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7734068Z                 # count up differences
2025-01-10T12:40:39.7734980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7735559Z                     diff += 1
2025-01-10T12:40:39.7735909Z     
2025-01-10T12:40:39.7736394Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7736910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7737571Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7738208Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7738628Z E           
2025-01-10T12:40:39.7738968Z E           numpy array values are different (0.08897 %)
2025-01-10T12:40:39.7739924Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T12:40:39.7741350Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T12:40:39.7742112Z 
2025-01-10T12:40:39.7742641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7743378Z 
2025-01-10T12:40:39.7743704Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7744181Z 
2025-01-10T12:40:39.7744640Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22eecb6240>
2025-01-10T12:40:39.7745732Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22eeae0680>
2025-01-10T12:40:39.7746544Z 
2025-01-10T12:40:39.7746730Z     def test_calculate_sobolev_line_opacity(
2025-01-10T12:40:39.7747223Z         nb_simulation_verysimple, regression_data
2025-01-10T12:40:39.7747688Z     ):
2025-01-10T12:40:39.7748049Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T12:40:39.7748506Z     
2025-01-10T12:40:39.7748831Z         actual = calculate_sobolev_line_opacity(
2025-01-10T12:40:39.7749281Z             legacy_plasma.lines,
2025-01-10T12:40:39.7749674Z             legacy_plasma.level_number_density,
2025-01-10T12:40:39.7750354Z             legacy_plasma.time_explosion,
2025-01-10T12:40:39.7750807Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T12:40:39.7751229Z         )
2025-01-10T12:40:39.7751574Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.7752073Z >       pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.7752383Z 
2025-01-10T12:40:39.7752571Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-10T12:40:39.7753061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7753622Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7754172Z     ???
2025-01-10T12:40:39.7754553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7754933Z 
2025-01-10T12:40:39.7755060Z >   ???
2025-01-10T12:40:39.7755467Z E   AssertionError: MultiIndex level [0] are different
2025-01-10T12:40:39.7755979Z E   
2025-01-10T12:40:39.7756623Z E   MultiIndex level [0] values are different (0.08897 %)
2025-01-10T12:40:39.7757227Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:39.7757685Z E          ...
2025-01-10T12:40:39.7758007Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:39.7758499Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:39.7759227Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:39.7759681Z E          ...
2025-01-10T12:40:39.7759999Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:39.7760529Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:39.7761050Z E   At positional index 480, first diff: 8 != 20
2025-01-10T12:40:39.7761348Z 
2025-01-10T12:40:39.7761498Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7761986Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:39.7762972Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:39.7764167Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:39.7765127Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T12:40:39.7765544Z 
2025-01-10T12:40:39.7766347Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.71s/it]
2025-01-10T12:40:39.7766877Z 
2025-01-10T12:40:39.7767332Z Packets:                                                                                   4030/? [00:12<00:00, 33805.12it/s][A
2025-01-10T12:40:39.7768043Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:39.7769425Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:39.7770752Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-10T12:40:39.7771174Z 
2025-01-10T12:40:39.7771596Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22eecb6240>
2025-01-10T12:40:39.7772639Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22eeaefda0>
2025-01-10T12:40:39.7773243Z 
2025-01-10T12:40:39.7773560Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-10T12:40:39.7774216Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T12:40:39.7774663Z     
2025-01-10T12:40:39.7774993Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-10T12:40:39.7775445Z             legacy_plasma.lines,
2025-01-10T12:40:39.7775843Z             legacy_plasma.level_number_density,
2025-01-10T12:40:39.7776451Z             legacy_plasma.time_explosion,
2025-01-10T12:40:39.7776910Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T12:40:39.7777536Z         )
2025-01-10T12:40:39.7777913Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-10T12:40:39.7778485Z         expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.7779030Z >       npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.7779370Z 
2025-01-10T12:40:39.7779583Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-10T12:40:39.7780157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7780539Z 
2025-01-10T12:40:39.7781010Z args = (<function assert_allclose.<locals>.compare at 0x7f22db0e65c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7781752Z        [1., 1., .....,
2025-01-10T12:40:39.7782089Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7782478Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7782858Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T12:40:39.7783554Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.7784151Z 
2025-01-10T12:40:39.7784283Z     @wraps(func)
2025-01-10T12:40:39.7784596Z     def inner(*args, **kwds):
2025-01-10T12:40:39.7784955Z         with self._recreate_cm():
2025-01-10T12:40:39.7785335Z >           return func(*args, **kwds)
2025-01-10T12:40:39.7785731Z E           AssertionError: 
2025-01-10T12:40:39.7786495Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.7786927Z E           
2025-01-10T12:40:39.7787256Z E           Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:39.7787763Z E           Max absolute difference among violations: 0.99984222
2025-01-10T12:40:39.7788318Z E           Max relative difference among violations: 6337.12154973
2025-01-10T12:40:39.7788826Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7789290Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7789765Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.7790276Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7790781Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.7791255Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.7791572Z 
2025-01-10T12:40:39.7791958Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.7792869Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-10T12:40:39.7793374Z 
2025-01-10T12:40:39.7793606Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7794196Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7794726Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7795254Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7795832Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7796533Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7796941Z err_msg = None
2025-01-10T12:40:39.7797120Z 
2025-01-10T12:40:39.7797298Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7797734Z         if err_msg is None:
2025-01-10T12:40:39.7798119Z             if left.shape != right.shape:
2025-01-10T12:40:39.7798534Z                 raise_assert_detail(
2025-01-10T12:40:39.7799020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7799506Z                 )
2025-01-10T12:40:39.7799795Z     
2025-01-10T12:40:39.7800053Z             diff = 0
2025-01-10T12:40:39.7800415Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7800859Z                 # count up differences
2025-01-10T12:40:39.7801425Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7802272Z                     diff += 1
2025-01-10T12:40:39.7802655Z     
2025-01-10T12:40:39.7802984Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7803534Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7804263Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7804921Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7805373Z E           
2025-01-10T12:40:39.7805833Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7806779Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7807826Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7808444Z 
2025-01-10T12:40:39.7808935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7809771Z 
2025-01-10T12:40:39.7810055Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7810476Z 
2025-01-10T12:40:39.7810848Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705b740>
2025-01-10T12:40:39.7811627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7812153Z attr = 'lines'
2025-01-10T12:40:39.7812322Z 
2025-01-10T12:40:39.7812548Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7813112Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7813641Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7814037Z         try:
2025-01-10T12:40:39.7814481Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7815041Z         except KeyError:
2025-01-10T12:40:39.7815541Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7816255Z     
2025-01-10T12:40:39.7816591Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7817032Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7817471Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7817981Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7818495Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7818904Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7819364Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7819815Z             else:
2025-01-10T12:40:39.7820159Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.7820619Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.7820923Z 
2025-01-10T12:40:39.7821125Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.7821637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7822206Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7822685Z     ???
2025-01-10T12:40:39.7823014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7823329Z 
2025-01-10T12:40:39.7823447Z >   ???
2025-01-10T12:40:39.7823791Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.7824227Z E   
2025-01-10T12:40:39.7824572Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.7825124Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7825613Z E          ...
2025-01-10T12:40:39.7825973Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7826991Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7827602Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7828106Z E          ...
2025-01-10T12:40:39.7828461Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7828973Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7829503Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.7829836Z 
2025-01-10T12:40:39.7829990Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7830630Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-10T12:40:39.7831167Z 
2025-01-10T12:40:39.7831550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058c50>
2025-01-10T12:40:39.7832366Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7832909Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.7833169Z 
2025-01-10T12:40:39.7833399Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7833939Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7834389Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7834734Z         try:
2025-01-10T12:40:39.7835120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7835788Z         except KeyError:
2025-01-10T12:40:39.7836406Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7836880Z     
2025-01-10T12:40:39.7837208Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7837669Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7838161Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7838713Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7839272Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7839720Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7840202Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7840541Z 
2025-01-10T12:40:39.7840753Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7841297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7841644Z 
2025-01-10T12:40:39.7841877Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.7842399Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.7842845Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7843304Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.7843772Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.7844263Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.7844691Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7845120Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.7845500Z err_msg = None
2025-01-10T12:40:39.7845671Z 
2025-01-10T12:40:39.7845850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7846466Z         if err_msg is None:
2025-01-10T12:40:39.7846837Z             if left.shape != right.shape:
2025-01-10T12:40:39.7847242Z                 raise_assert_detail(
2025-01-10T12:40:39.7847729Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7848241Z                 )
2025-01-10T12:40:39.7848572Z     
2025-01-10T12:40:39.7848868Z             diff = 0
2025-01-10T12:40:39.7849280Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7849789Z                 # count up differences
2025-01-10T12:40:39.7850407Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7850983Z                     diff += 1
2025-01-10T12:40:39.7851332Z     
2025-01-10T12:40:39.7851630Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7852347Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7853017Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7853640Z E           AssertionError: Series are different
2025-01-10T12:40:39.7854077Z E           
2025-01-10T12:40:39.7854409Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.7855327Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.7856866Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7858185Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7859040Z 
2025-01-10T12:40:39.7859606Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7860797Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-10T12:40:39.7861368Z 
2025-01-10T12:40:39.7861800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70581a0>
2025-01-10T12:40:39.7862705Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7863288Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.7863555Z 
2025-01-10T12:40:39.7863801Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7864378Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7864852Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7865213Z         try:
2025-01-10T12:40:39.7865611Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7866298Z         except KeyError:
2025-01-10T12:40:39.7866733Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7867191Z     
2025-01-10T12:40:39.7867473Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7867866Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7868282Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7868766Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7869247Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7869633Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7870077Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7870384Z 
2025-01-10T12:40:39.7870590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7871130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7871510Z 
2025-01-10T12:40:39.7871763Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.7872326Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.7872866Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.7873379Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.7873924Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.7874672Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.7875125Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.7875585Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.7875983Z err_msg = None
2025-01-10T12:40:39.7876329Z 
2025-01-10T12:40:39.7876523Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7876980Z         if err_msg is None:
2025-01-10T12:40:39.7877372Z             if left.shape != right.shape:
2025-01-10T12:40:39.7877806Z                 raise_assert_detail(
2025-01-10T12:40:39.7878296Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7878773Z                 )
2025-01-10T12:40:39.7879060Z     
2025-01-10T12:40:39.7879319Z             diff = 0
2025-01-10T12:40:39.7879682Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7880126Z                 # count up differences
2025-01-10T12:40:39.7880670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7881208Z                     diff += 1
2025-01-10T12:40:39.7881549Z     
2025-01-10T12:40:39.7881826Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7882297Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7883194Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7883875Z E           AssertionError: Series are different
2025-01-10T12:40:39.7884344Z E           
2025-01-10T12:40:39.7884719Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.7885777Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.7887394Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.7888836Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.7889641Z 
2025-01-10T12:40:39.7890145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7891089Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-10T12:40:39.7891538Z 
2025-01-10T12:40:39.7891750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7892300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7892798Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7893290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7893832Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7894328Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7894792Z err_msg = None
2025-01-10T12:40:39.7895213Z 
2025-01-10T12:40:39.7895416Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7895916Z         if err_msg is None:
2025-01-10T12:40:39.7896519Z             if left.shape != right.shape:
2025-01-10T12:40:39.7897006Z                 raise_assert_detail(
2025-01-10T12:40:39.7897569Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7898103Z                 )
2025-01-10T12:40:39.7898402Z     
2025-01-10T12:40:39.7898667Z             diff = 0
2025-01-10T12:40:39.7899045Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7899513Z                 # count up differences
2025-01-10T12:40:39.7900071Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7900640Z                     diff += 1
2025-01-10T12:40:39.7900986Z     
2025-01-10T12:40:39.7901283Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7901774Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7902395Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7902993Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7903413Z E           
2025-01-10T12:40:39.7903750Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7904700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7905691Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7906512Z 
2025-01-10T12:40:39.7907098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7907830Z 
2025-01-10T12:40:39.7908152Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7908641Z 
2025-01-10T12:40:39.7909074Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705a5d0>
2025-01-10T12:40:39.7910017Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>, attr = 'nu'
2025-01-10T12:40:39.7910527Z 
2025-01-10T12:40:39.7910765Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7911342Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7911817Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7912182Z         try:
2025-01-10T12:40:39.7912585Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7913109Z         except KeyError:
2025-01-10T12:40:39.7913555Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7914014Z     
2025-01-10T12:40:39.7914300Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7914698Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7915114Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7915602Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7916259Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7916654Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7917095Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7917401Z 
2025-01-10T12:40:39.7917609Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7918134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7918776Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7919341Z     ???
2025-01-10T12:40:39.7919943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7920317Z 
2025-01-10T12:40:39.7920454Z >   ???
2025-01-10T12:40:39.7920861Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.7921383Z E   
2025-01-10T12:40:39.7921756Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.7922308Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7922763Z E          ...
2025-01-10T12:40:39.7923084Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7923589Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7924134Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7924584Z E          ...
2025-01-10T12:40:39.7924905Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7925380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7925868Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.7926342Z 
2025-01-10T12:40:39.7926489Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7927066Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-10T12:40:39.7927548Z 
2025-01-10T12:40:39.7927759Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7928496Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7928994Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7929553Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7930478Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7931293Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7931989Z err_msg = None
2025-01-10T12:40:39.7932252Z 
2025-01-10T12:40:39.7932610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7933254Z         if err_msg is None:
2025-01-10T12:40:39.7933847Z             if left.shape != right.shape:
2025-01-10T12:40:39.7949134Z                 raise_assert_detail(
2025-01-10T12:40:39.7949677Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7950197Z                 )
2025-01-10T12:40:39.7950494Z     
2025-01-10T12:40:39.7950759Z             diff = 0
2025-01-10T12:40:39.7951133Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7951581Z                 # count up differences
2025-01-10T12:40:39.7952116Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7952663Z                     diff += 1
2025-01-10T12:40:39.7953040Z     
2025-01-10T12:40:39.7953375Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7953941Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7954674Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7955363Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7955823Z E           
2025-01-10T12:40:39.7956364Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7957167Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7958208Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7959036Z 
2025-01-10T12:40:39.7959555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7960242Z 
2025-01-10T12:40:39.7960522Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7960953Z 
2025-01-10T12:40:39.7961323Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058680>
2025-01-10T12:40:39.7962104Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.7962638Z attr = 'wavelength_cm'
2025-01-10T12:40:39.7962843Z 
2025-01-10T12:40:39.7963071Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7963603Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7964105Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7964518Z         try:
2025-01-10T12:40:39.7964984Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7965570Z         except KeyError:
2025-01-10T12:40:39.7966218Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7966770Z     
2025-01-10T12:40:39.7967102Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.7967565Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.7968014Z             if attr == "selected_atoms":
2025-01-10T12:40:39.7968723Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.7969244Z             elif actual.ndim == 1:
2025-01-10T12:40:39.7969654Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.7970118Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.7970452Z 
2025-01-10T12:40:39.7970666Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.7971203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7971757Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.7972253Z     ???
2025-01-10T12:40:39.7972579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.7972898Z 
2025-01-10T12:40:39.7973020Z >   ???
2025-01-10T12:40:39.7973368Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.7973813Z E   
2025-01-10T12:40:39.7974183Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.7974701Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7975124Z E          ...
2025-01-10T12:40:39.7975431Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7975916Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7976683Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.7977185Z E          ...
2025-01-10T12:40:39.7977543Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.7978093Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.7978685Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.7979044Z 
2025-01-10T12:40:39.7979210Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.7979800Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-10T12:40:39.7980292Z 
2025-01-10T12:40:39.7980512Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7981099Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7981621Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7982146Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.7982727Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.7983227Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.7983621Z err_msg = None
2025-01-10T12:40:39.7983982Z 
2025-01-10T12:40:39.7984171Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.7984610Z         if err_msg is None:
2025-01-10T12:40:39.7984987Z             if left.shape != right.shape:
2025-01-10T12:40:39.7985401Z                 raise_assert_detail(
2025-01-10T12:40:39.7985885Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.7986826Z                 )
2025-01-10T12:40:39.7987095Z     
2025-01-10T12:40:39.7987314Z             diff = 0
2025-01-10T12:40:39.7987626Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.7988002Z                 # count up differences
2025-01-10T12:40:39.7988530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.7989313Z                     diff += 1
2025-01-10T12:40:39.7989755Z     
2025-01-10T12:40:39.7990127Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.7990564Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.7991101Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.7991606Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.7991959Z E           
2025-01-10T12:40:39.7992245Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.7993055Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7993876Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.7994336Z 
2025-01-10T12:40:39.7994765Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.7995290Z 
2025-01-10T12:40:39.7995514Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.7995858Z 
2025-01-10T12:40:39.7996368Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058cb0>
2025-01-10T12:40:39.7997071Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>, attr = 'f_lu'
2025-01-10T12:40:39.7997463Z 
2025-01-10T12:40:39.7997644Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.7998111Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.7998447Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.7998679Z         try:
2025-01-10T12:40:39.7998937Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.7999264Z         except KeyError:
2025-01-10T12:40:39.7999545Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.7999848Z     
2025-01-10T12:40:39.8000035Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8000292Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8000569Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8000889Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8001204Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8001456Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8001745Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8001950Z 
2025-01-10T12:40:39.8002089Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8002424Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8002787Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8003239Z     ???
2025-01-10T12:40:39.8003456Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8003665Z 
2025-01-10T12:40:39.8003746Z >   ???
2025-01-10T12:40:39.8003977Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8004272Z E   
2025-01-10T12:40:39.8004502Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8004843Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8005120Z E          ...
2025-01-10T12:40:39.8005326Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8005644Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8005988Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8006380Z E          ...
2025-01-10T12:40:39.8006579Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8006885Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8007213Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8007412Z 
2025-01-10T12:40:39.8007509Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8007946Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-10T12:40:39.8008477Z 
2025-01-10T12:40:39.8008692Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8009212Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8009540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8009871Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8010232Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8010546Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8010808Z err_msg = None
2025-01-10T12:40:39.8010923Z 
2025-01-10T12:40:39.8011044Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8011328Z         if err_msg is None:
2025-01-10T12:40:39.8011570Z             if left.shape != right.shape:
2025-01-10T12:40:39.8011832Z                 raise_assert_detail(
2025-01-10T12:40:39.8012139Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8012459Z                 )
2025-01-10T12:40:39.8012666Z     
2025-01-10T12:40:39.8012837Z             diff = 0
2025-01-10T12:40:39.8013071Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8013355Z                 # count up differences
2025-01-10T12:40:39.8013689Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8014029Z                     diff += 1
2025-01-10T12:40:39.8014240Z     
2025-01-10T12:40:39.8014422Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8014728Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8015129Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8015513Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8015784Z E           
2025-01-10T12:40:39.8016000Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8016582Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8017200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8017662Z 
2025-01-10T12:40:39.8017978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8018370Z 
2025-01-10T12:40:39.8018539Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8018802Z 
2025-01-10T12:40:39.8019026Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705bb30>
2025-01-10T12:40:39.8019504Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.8019838Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8019962Z 
2025-01-10T12:40:39.8020110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8020443Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8020727Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8020948Z         try:
2025-01-10T12:40:39.8021195Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8021686Z         except KeyError:
2025-01-10T12:40:39.8021960Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8022260Z     
2025-01-10T12:40:39.8022443Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8022693Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8023078Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8023383Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8023694Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8023941Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8024228Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8024499Z             else:
2025-01-10T12:40:39.8024708Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8024991Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8025183Z 
2025-01-10T12:40:39.8025310Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8025638Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8025986Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8026509Z     ???
2025-01-10T12:40:39.8026721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8027041Z 
2025-01-10T12:40:39.8027171Z >   ???
2025-01-10T12:40:39.8027567Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8028060Z E   
2025-01-10T12:40:39.8028321Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8028649Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8028919Z E          ...
2025-01-10T12:40:39.8029117Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8029422Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8029753Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8030032Z E          ...
2025-01-10T12:40:39.8030227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8030524Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8030837Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8031025Z 
2025-01-10T12:40:39.8031124Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8031477Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-10T12:40:39.8031766Z 
2025-01-10T12:40:39.8031898Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8032247Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8032567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8032882Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8033238Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8033728Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8033983Z err_msg = None
2025-01-10T12:40:39.8034091Z 
2025-01-10T12:40:39.8034209Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8034487Z         if err_msg is None:
2025-01-10T12:40:39.8034723Z             if left.shape != right.shape:
2025-01-10T12:40:39.8034985Z                 raise_assert_detail(
2025-01-10T12:40:39.8035289Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8035592Z                 )
2025-01-10T12:40:39.8035776Z     
2025-01-10T12:40:39.8035944Z             diff = 0
2025-01-10T12:40:39.8036397Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8036685Z                 # count up differences
2025-01-10T12:40:39.8037020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8037366Z                     diff += 1
2025-01-10T12:40:39.8037576Z     
2025-01-10T12:40:39.8037758Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8038063Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8038455Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8038965Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8039235Z E           
2025-01-10T12:40:39.8039454Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8039908Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8040506Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8040847Z 
2025-01-10T12:40:39.8041162Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8041556Z 
2025-01-10T12:40:39.8041727Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8041985Z 
2025-01-10T12:40:39.8042207Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705ba70>
2025-01-10T12:40:39.8042686Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.8043018Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8043150Z 
2025-01-10T12:40:39.8043289Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8043623Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8043918Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8044144Z         try:
2025-01-10T12:40:39.8044397Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8044706Z         except KeyError:
2025-01-10T12:40:39.8044983Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8045283Z     
2025-01-10T12:40:39.8045465Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8045908Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8046504Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8047021Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8047409Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8047659Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8047943Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8048213Z             else:
2025-01-10T12:40:39.8048564Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8048847Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8049035Z 
2025-01-10T12:40:39.8049167Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8049491Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8049847Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8050150Z     ???
2025-01-10T12:40:39.8050360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8050563Z 
2025-01-10T12:40:39.8050634Z >   ???
2025-01-10T12:40:39.8050857Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8051136Z E   
2025-01-10T12:40:39.8051358Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8051681Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8051953Z E          ...
2025-01-10T12:40:39.8052161Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8052470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8052798Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8053080Z E          ...
2025-01-10T12:40:39.8053277Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8053696Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8054010Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8054194Z 
2025-01-10T12:40:39.8054292Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8054637Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-10T12:40:39.8054917Z 
2025-01-10T12:40:39.8055049Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8055393Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8055717Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8056026Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8056572Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8056891Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8057148Z err_msg = None
2025-01-10T12:40:39.8057261Z 
2025-01-10T12:40:39.8057373Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8057646Z         if err_msg is None:
2025-01-10T12:40:39.8057879Z             if left.shape != right.shape:
2025-01-10T12:40:39.8058144Z                 raise_assert_detail(
2025-01-10T12:40:39.8058453Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8058765Z                 )
2025-01-10T12:40:39.8058950Z     
2025-01-10T12:40:39.8059121Z             diff = 0
2025-01-10T12:40:39.8059354Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8059642Z                 # count up differences
2025-01-10T12:40:39.8059976Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8060314Z                     diff += 1
2025-01-10T12:40:39.8060526Z     
2025-01-10T12:40:39.8060713Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8061018Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8061413Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8061787Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8062055Z E           
2025-01-10T12:40:39.8062274Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8062724Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8063569Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8064222Z 
2025-01-10T12:40:39.8064758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8065373Z 
2025-01-10T12:40:39.8065556Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8065815Z 
2025-01-10T12:40:39.8066045Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705a750>
2025-01-10T12:40:39.8066711Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c235c0>
2025-01-10T12:40:39.8067049Z attr = 'j_blues'
2025-01-10T12:40:39.8067167Z 
2025-01-10T12:40:39.8067312Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8067658Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8067955Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8068318Z         try:
2025-01-10T12:40:39.8068567Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8068865Z         except KeyError:
2025-01-10T12:40:39.8069135Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8069426Z     
2025-01-10T12:40:39.8069609Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8069857Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8070122Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8070425Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8070728Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8070979Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8071258Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8071527Z             else:
2025-01-10T12:40:39.8071739Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8072021Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8072221Z 
2025-01-10T12:40:39.8072349Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8072669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8073018Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8073321Z     ???
2025-01-10T12:40:39.8073527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8073729Z 
2025-01-10T12:40:39.8073801Z >   ???
2025-01-10T12:40:39.8074025Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8074309Z E   
2025-01-10T12:40:39.8074539Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8074862Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8075132Z E          ...
2025-01-10T12:40:39.8075330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8075635Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8075967Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8076436Z E          ...
2025-01-10T12:40:39.8076644Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8076959Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8077283Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8077470Z 
2025-01-10T12:40:39.8077569Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8077926Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-10T12:40:39.8078208Z 
2025-01-10T12:40:39.8078341Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8078821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8079137Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8079454Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8079810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8080122Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8080379Z err_msg = None
2025-01-10T12:40:39.8080488Z 
2025-01-10T12:40:39.8080609Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8080886Z         if err_msg is None:
2025-01-10T12:40:39.8081126Z             if left.shape != right.shape:
2025-01-10T12:40:39.8081392Z                 raise_assert_detail(
2025-01-10T12:40:39.8081700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8082032Z                 )
2025-01-10T12:40:39.8082360Z     
2025-01-10T12:40:39.8082659Z             diff = 0
2025-01-10T12:40:39.8083053Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8083528Z                 # count up differences
2025-01-10T12:40:39.8084107Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8084454Z                     diff += 1
2025-01-10T12:40:39.8084669Z     
2025-01-10T12:40:39.8084852Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8085165Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8085558Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8085933Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8086320Z E           
2025-01-10T12:40:39.8086540Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8087001Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8087602Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8087939Z 
2025-01-10T12:40:39.8088258Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8088646Z 
2025-01-10T12:40:39.8088826Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8089090Z 
2025-01-10T12:40:39.8089314Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058e00>
2025-01-10T12:40:39.8089795Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8090123Z attr = 'lines'
2025-01-10T12:40:39.8090238Z 
2025-01-10T12:40:39.8090384Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8090726Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8091014Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8091237Z         try:
2025-01-10T12:40:39.8091486Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8091794Z         except KeyError:
2025-01-10T12:40:39.8092073Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8092371Z     
2025-01-10T12:40:39.8092554Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8092809Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8093218Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8093524Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8093830Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8094075Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8094358Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8094631Z             else:
2025-01-10T12:40:39.8094842Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8095125Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8095316Z 
2025-01-10T12:40:39.8095446Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8095769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8096220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8096521Z     ???
2025-01-10T12:40:39.8096725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8096930Z 
2025-01-10T12:40:39.8097005Z >   ???
2025-01-10T12:40:39.8097227Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8097508Z E   
2025-01-10T12:40:39.8097727Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8098080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8098472Z E          ...
2025-01-10T12:40:39.8098671Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8098977Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8099310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8099582Z E          ...
2025-01-10T12:40:39.8099834Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8100136Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8100452Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8100636Z 
2025-01-10T12:40:39.8100743Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8101368Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-10T12:40:39.8101788Z 
2025-01-10T12:40:39.8102020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7059730>
2025-01-10T12:40:39.8102504Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8102856Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8103016Z 
2025-01-10T12:40:39.8103156Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8103497Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8103785Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8104006Z         try:
2025-01-10T12:40:39.8104253Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8104564Z         except KeyError:
2025-01-10T12:40:39.8104838Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8105137Z     
2025-01-10T12:40:39.8105319Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8105571Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8105839Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8106351Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8106674Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8106920Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8107206Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8107398Z 
2025-01-10T12:40:39.8107527Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8107853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8108061Z 
2025-01-10T12:40:39.8108202Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8108516Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8108793Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8109215Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8109513Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8109835Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8110119Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8110398Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8110635Z err_msg = None
2025-01-10T12:40:39.8110749Z 
2025-01-10T12:40:39.8110861Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8111138Z         if err_msg is None:
2025-01-10T12:40:39.8111376Z             if left.shape != right.shape:
2025-01-10T12:40:39.8111638Z                 raise_assert_detail(
2025-01-10T12:40:39.8111944Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8112255Z                 )
2025-01-10T12:40:39.8112446Z     
2025-01-10T12:40:39.8112615Z             diff = 0
2025-01-10T12:40:39.8112850Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8113135Z                 # count up differences
2025-01-10T12:40:39.8113473Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8113935Z                     diff += 1
2025-01-10T12:40:39.8114149Z     
2025-01-10T12:40:39.8114328Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8114638Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8115034Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8115406Z E           AssertionError: Series are different
2025-01-10T12:40:39.8115667Z E           
2025-01-10T12:40:39.8115878Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8116628Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8117408Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8118134Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8118541Z 
2025-01-10T12:40:39.8118857Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8119459Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-10T12:40:39.8119762Z 
2025-01-10T12:40:39.8120010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705b2c0>
2025-01-10T12:40:39.8120871Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8121461Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8121694Z 
2025-01-10T12:40:39.8121842Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8122186Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8122471Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8122693Z         try:
2025-01-10T12:40:39.8123094Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8123401Z         except KeyError:
2025-01-10T12:40:39.8123676Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8123970Z     
2025-01-10T12:40:39.8124152Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8124407Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8124672Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8124976Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8125283Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8125528Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8125810Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8126004Z 
2025-01-10T12:40:39.8126252Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8126576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8126793Z 
2025-01-10T12:40:39.8126930Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8127244Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8127518Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8127806Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8128226Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8128541Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8128815Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8129093Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8129330Z err_msg = None
2025-01-10T12:40:39.8129439Z 
2025-01-10T12:40:39.8129555Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8129825Z         if err_msg is None:
2025-01-10T12:40:39.8130059Z             if left.shape != right.shape:
2025-01-10T12:40:39.8130320Z                 raise_assert_detail(
2025-01-10T12:40:39.8130625Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8130928Z                 )
2025-01-10T12:40:39.8131113Z     
2025-01-10T12:40:39.8131279Z             diff = 0
2025-01-10T12:40:39.8131513Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8131801Z                 # count up differences
2025-01-10T12:40:39.8132133Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8132473Z                     diff += 1
2025-01-10T12:40:39.8132689Z     
2025-01-10T12:40:39.8132872Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8133173Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8133565Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8133933Z E           AssertionError: Series are different
2025-01-10T12:40:39.8134195Z E           
2025-01-10T12:40:39.8134400Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8134946Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8135762Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8136795Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8137251Z 
2025-01-10T12:40:39.8137700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8138498Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-10T12:40:39.8138775Z 
2025-01-10T12:40:39.8138907Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8139259Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8139582Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8139895Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8140247Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8140713Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8140975Z err_msg = None
2025-01-10T12:40:39.8141084Z 
2025-01-10T12:40:39.8141201Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8141471Z         if err_msg is None:
2025-01-10T12:40:39.8141704Z             if left.shape != right.shape:
2025-01-10T12:40:39.8141964Z                 raise_assert_detail(
2025-01-10T12:40:39.8142271Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8142574Z                 )
2025-01-10T12:40:39.8142757Z     
2025-01-10T12:40:39.8142925Z             diff = 0
2025-01-10T12:40:39.8143162Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8143446Z                 # count up differences
2025-01-10T12:40:39.8143781Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8144120Z                     diff += 1
2025-01-10T12:40:39.8144335Z     
2025-01-10T12:40:39.8144521Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8144825Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8145218Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8145598Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8145868Z E           
2025-01-10T12:40:39.8146273Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8146743Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8147342Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8147693Z 
2025-01-10T12:40:39.8148002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8148393Z 
2025-01-10T12:40:39.8148567Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8148829Z 
2025-01-10T12:40:39.8149055Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705b770>
2025-01-10T12:40:39.8149573Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>, attr = 'nu'
2025-01-10T12:40:39.8149994Z 
2025-01-10T12:40:39.8150141Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8150484Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8150768Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8150993Z         try:
2025-01-10T12:40:39.8151245Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8151555Z         except KeyError:
2025-01-10T12:40:39.8151831Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8152125Z     
2025-01-10T12:40:39.8152313Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8152565Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8152829Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8153132Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8153437Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8153685Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8153973Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8154173Z 
2025-01-10T12:40:39.8154298Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8154620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8155089Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8155396Z     ???
2025-01-10T12:40:39.8155602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8155806Z 
2025-01-10T12:40:39.8155877Z >   ???
2025-01-10T12:40:39.8156268Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8156777Z E   
2025-01-10T12:40:39.8157142Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8157480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8157753Z E          ...
2025-01-10T12:40:39.8157951Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8158263Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8158591Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8158863Z E          ...
2025-01-10T12:40:39.8159058Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8159362Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8159675Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8159861Z 
2025-01-10T12:40:39.8159959Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8160312Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-10T12:40:39.8160602Z 
2025-01-10T12:40:39.8160734Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8161080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8161401Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8161718Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8162077Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8162395Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8162662Z err_msg = None
2025-01-10T12:40:39.8162772Z 
2025-01-10T12:40:39.8162894Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8163170Z         if err_msg is None:
2025-01-10T12:40:39.8163407Z             if left.shape != right.shape:
2025-01-10T12:40:39.8163670Z                 raise_assert_detail(
2025-01-10T12:40:39.8163980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8164287Z                 )
2025-01-10T12:40:39.8164472Z     
2025-01-10T12:40:39.8164640Z             diff = 0
2025-01-10T12:40:39.8164875Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8165299Z                 # count up differences
2025-01-10T12:40:39.8165632Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8165973Z                     diff += 1
2025-01-10T12:40:39.8166306Z     
2025-01-10T12:40:39.8166496Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8166802Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8167194Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8167573Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8167841Z E           
2025-01-10T12:40:39.8168059Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8168508Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8169126Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8169585Z 
2025-01-10T12:40:39.8169901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8170287Z 
2025-01-10T12:40:39.8170460Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8170719Z 
2025-01-10T12:40:39.8170944Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70597f0>
2025-01-10T12:40:39.8171424Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8171765Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8171898Z 
2025-01-10T12:40:39.8172037Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8172379Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8172674Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8172903Z         try:
2025-01-10T12:40:39.8173153Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8173465Z         except KeyError:
2025-01-10T12:40:39.8173741Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8174042Z     
2025-01-10T12:40:39.8174226Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8174478Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8174742Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8175209Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8175748Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8176312Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8176747Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8176950Z 
2025-01-10T12:40:39.8177085Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8177416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8177778Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8178085Z     ???
2025-01-10T12:40:39.8178295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8178498Z 
2025-01-10T12:40:39.8178570Z >   ???
2025-01-10T12:40:39.8178790Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8179396Z E   
2025-01-10T12:40:39.8179719Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8180128Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8180578Z E          ...
2025-01-10T12:40:39.8181014Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8181479Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8181923Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8182288Z E          ...
2025-01-10T12:40:39.8182645Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8183046Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8183457Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8183776Z 
2025-01-10T12:40:39.8183902Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8184337Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-10T12:40:39.8196938Z 
2025-01-10T12:40:39.8197252Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8197882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8198470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8198821Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8199194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8199715Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8199983Z err_msg = None
2025-01-10T12:40:39.8200100Z 
2025-01-10T12:40:39.8200219Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8200500Z         if err_msg is None:
2025-01-10T12:40:39.8200744Z             if left.shape != right.shape:
2025-01-10T12:40:39.8200833Z                 raise_assert_detail(
2025-01-10T12:40:39.8200989Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8201064Z                 )
2025-01-10T12:40:39.8201139Z     
2025-01-10T12:40:39.8201215Z             diff = 0
2025-01-10T12:40:39.8201340Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8201433Z                 # count up differences
2025-01-10T12:40:39.8201613Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8201694Z                     diff += 1
2025-01-10T12:40:39.8201779Z     
2025-01-10T12:40:39.8201872Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8202019Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8202195Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8202318Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8202399Z E           
2025-01-10T12:40:39.8202515Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8202777Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8203038Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8203047Z 
2025-01-10T12:40:39.8203372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8203376Z 
2025-01-10T12:40:39.8203560Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8203565Z 
2025-01-10T12:40:39.8203795Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70594f0>
2025-01-10T12:40:39.8204010Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>, attr = 'f_lu'
2025-01-10T12:40:39.8204133Z 
2025-01-10T12:40:39.8204286Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8204416Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8204505Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8204590Z         try:
2025-01-10T12:40:39.8204736Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8204826Z         except KeyError:
2025-01-10T12:40:39.8204975Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8205049Z     
2025-01-10T12:40:39.8205145Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8205238Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8205331Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8205464Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8205553Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8205649Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8205765Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8205769Z 
2025-01-10T12:40:39.8205898Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8206025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8206407Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8206494Z     ???
2025-01-10T12:40:39.8206616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8206620Z 
2025-01-10T12:40:39.8206693Z >   ???
2025-01-10T12:40:39.8206827Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8206900Z E   
2025-01-10T12:40:39.8207036Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8207152Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8207233Z E          ...
2025-01-10T12:40:39.8207329Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8207464Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8207577Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8207661Z E          ...
2025-01-10T12:40:39.8207748Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8207884Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8207995Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8207999Z 
2025-01-10T12:40:39.8208092Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8208297Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-10T12:40:39.8208302Z 
2025-01-10T12:40:39.8208434Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8208574Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8208677Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8208819Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8208944Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8209053Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8209136Z err_msg = None
2025-01-10T12:40:39.8209140Z 
2025-01-10T12:40:39.8209254Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8209342Z         if err_msg is None:
2025-01-10T12:40:39.8209441Z             if left.shape != right.shape:
2025-01-10T12:40:39.8209534Z                 raise_assert_detail(
2025-01-10T12:40:39.8209683Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8209762Z                 )
2025-01-10T12:40:39.8209834Z     
2025-01-10T12:40:39.8209915Z             diff = 0
2025-01-10T12:40:39.8210149Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8210246Z                 # count up differences
2025-01-10T12:40:39.8210418Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8210503Z                     diff += 1
2025-01-10T12:40:39.8210580Z     
2025-01-10T12:40:39.8210674Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8210817Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8210989Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8211107Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8211182Z E           
2025-01-10T12:40:39.8211300Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8211559Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8211827Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8211925Z 
2025-01-10T12:40:39.8212388Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8212399Z 
2025-01-10T12:40:39.8212691Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8212698Z 
2025-01-10T12:40:39.8213089Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705ae70>
2025-01-10T12:40:39.8213373Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8213472Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8213477Z 
2025-01-10T12:40:39.8213623Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8213745Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8213837Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8213916Z         try:
2025-01-10T12:40:39.8214063Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8214146Z         except KeyError:
2025-01-10T12:40:39.8214289Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8214360Z     
2025-01-10T12:40:39.8214452Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8214547Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8214642Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8214778Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8214870Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8214964Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8215083Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8215162Z             else:
2025-01-10T12:40:39.8215259Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8215371Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8215379Z 
2025-01-10T12:40:39.8215507Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8215632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8215780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8215859Z     ???
2025-01-10T12:40:39.8215970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8215975Z 
2025-01-10T12:40:39.8216174Z >   ???
2025-01-10T12:40:39.8216307Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8216384Z E   
2025-01-10T12:40:39.8216652Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8216766Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8216844Z E          ...
2025-01-10T12:40:39.8216933Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8217068Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8217190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8217269Z E          ...
2025-01-10T12:40:39.8217357Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8217485Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8217591Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8217596Z 
2025-01-10T12:40:39.8217690Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8217885Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-10T12:40:39.8217892Z 
2025-01-10T12:40:39.8218023Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8218158Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8218256Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8218395Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8218674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8218777Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8218855Z err_msg = None
2025-01-10T12:40:39.8218859Z 
2025-01-10T12:40:39.8218979Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8219064Z         if err_msg is None:
2025-01-10T12:40:39.8219165Z             if left.shape != right.shape:
2025-01-10T12:40:39.8219256Z                 raise_assert_detail(
2025-01-10T12:40:39.8219408Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8219488Z                 )
2025-01-10T12:40:39.8219561Z     
2025-01-10T12:40:39.8219642Z             diff = 0
2025-01-10T12:40:39.8219753Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8219846Z                 # count up differences
2025-01-10T12:40:39.8220019Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8220107Z                     diff += 1
2025-01-10T12:40:39.8220179Z     
2025-01-10T12:40:39.8220272Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8220408Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8220582Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8220695Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8220777Z E           
2025-01-10T12:40:39.8220893Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8221153Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8221417Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8221423Z 
2025-01-10T12:40:39.8221735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8221745Z 
2025-01-10T12:40:39.8221913Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8222025Z 
2025-01-10T12:40:39.8222256Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f705ad50>
2025-01-10T12:40:39.8222426Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8222514Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8222522Z 
2025-01-10T12:40:39.8222660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8222779Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8222865Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8222944Z         try:
2025-01-10T12:40:39.8223083Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8223171Z         except KeyError:
2025-01-10T12:40:39.8223314Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8223386Z     
2025-01-10T12:40:39.8223480Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8223574Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8223673Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8223806Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8223899Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8223991Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8224189Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8224264Z             else:
2025-01-10T12:40:39.8224360Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8224477Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8224482Z 
2025-01-10T12:40:39.8224612Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8224725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8224876Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8224949Z     ???
2025-01-10T12:40:39.8225064Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8225077Z 
2025-01-10T12:40:39.8225148Z >   ???
2025-01-10T12:40:39.8225279Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8225350Z E   
2025-01-10T12:40:39.8225483Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8225599Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8225677Z E          ...
2025-01-10T12:40:39.8225763Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8225894Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8226011Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8226255Z E          ...
2025-01-10T12:40:39.8226391Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8226521Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8226632Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8226641Z 
2025-01-10T12:40:39.8226731Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8226927Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-10T12:40:39.8226931Z 
2025-01-10T12:40:39.8227060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8227197Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8227296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8227427Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8227552Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8227645Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8227726Z err_msg = None
2025-01-10T12:40:39.8227730Z 
2025-01-10T12:40:39.8227848Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8228064Z         if err_msg is None:
2025-01-10T12:40:39.8228160Z             if left.shape != right.shape:
2025-01-10T12:40:39.8228255Z                 raise_assert_detail(
2025-01-10T12:40:39.8228399Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8228481Z                 )
2025-01-10T12:40:39.8228552Z     
2025-01-10T12:40:39.8228632Z             diff = 0
2025-01-10T12:40:39.8228748Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8228838Z                 # count up differences
2025-01-10T12:40:39.8229027Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8229107Z                     diff += 1
2025-01-10T12:40:39.8229182Z     
2025-01-10T12:40:39.8229270Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8229411Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8229580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8229703Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8229778Z E           
2025-01-10T12:40:39.8229895Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8230148Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8230526Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8230532Z 
2025-01-10T12:40:39.8230852Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8230857Z 
2025-01-10T12:40:39.8231023Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8231035Z 
2025-01-10T12:40:39.8231370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7058710>
2025-01-10T12:40:39.8231683Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22ca720320>
2025-01-10T12:40:39.8231816Z attr = 'j_blues'
2025-01-10T12:40:39.8231823Z 
2025-01-10T12:40:39.8232059Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8232260Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8232375Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8232451Z         try:
2025-01-10T12:40:39.8232598Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8232680Z         except KeyError:
2025-01-10T12:40:39.8232829Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8232905Z     
2025-01-10T12:40:39.8232998Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8233092Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8233189Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8233324Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8233414Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8233510Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8233620Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8233701Z             else:
2025-01-10T12:40:39.8233795Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8233905Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8233909Z 
2025-01-10T12:40:39.8234035Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8234152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8234394Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8234474Z     ???
2025-01-10T12:40:39.8234589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8234594Z 
2025-01-10T12:40:39.8234664Z >   ???
2025-01-10T12:40:39.8234801Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8234872Z E   
2025-01-10T12:40:39.8235004Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8235114Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8235192Z E          ...
2025-01-10T12:40:39.8235281Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8235412Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8235524Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8235603Z E          ...
2025-01-10T12:40:39.8235690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8235826Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8235935Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8235939Z 
2025-01-10T12:40:39.8236029Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8236468Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-10T12:40:39.8236604Z 
2025-01-10T12:40:39.8236742Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8236876Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8236974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8237111Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8237237Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8237345Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8237426Z err_msg = None
2025-01-10T12:40:39.8237431Z 
2025-01-10T12:40:39.8237540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8237623Z         if err_msg is None:
2025-01-10T12:40:39.8237718Z             if left.shape != right.shape:
2025-01-10T12:40:39.8237813Z                 raise_assert_detail(
2025-01-10T12:40:39.8237955Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8238037Z                 )
2025-01-10T12:40:39.8238107Z     
2025-01-10T12:40:39.8238186Z             diff = 0
2025-01-10T12:40:39.8238298Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8238390Z                 # count up differences
2025-01-10T12:40:39.8238559Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8238645Z                     diff += 1
2025-01-10T12:40:39.8238725Z     
2025-01-10T12:40:39.8238813Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8238951Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8239119Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8239235Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8239314Z E           
2025-01-10T12:40:39.8239428Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8239681Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8239942Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8240064Z 
2025-01-10T12:40:39.8240371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8240381Z 
2025-01-10T12:40:39.8240546Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8240551Z 
2025-01-10T12:40:39.8240777Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f71c68d0>
2025-01-10T12:40:39.8240941Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8241023Z attr = 'lines'
2025-01-10T12:40:39.8241027Z 
2025-01-10T12:40:39.8241166Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8241279Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8241369Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8241447Z         try:
2025-01-10T12:40:39.8241590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8241672Z         except KeyError:
2025-01-10T12:40:39.8241813Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8241886Z     
2025-01-10T12:40:39.8242078Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8242173Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8242266Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8242396Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8242488Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8242577Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8242692Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8242767Z             else:
2025-01-10T12:40:39.8242859Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8242966Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8242975Z 
2025-01-10T12:40:39.8243100Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8243216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8243360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8243443Z     ???
2025-01-10T12:40:39.8243555Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8243559Z 
2025-01-10T12:40:39.8243637Z >   ???
2025-01-10T12:40:39.8243763Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8243840Z E   
2025-01-10T12:40:39.8243967Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8244081Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8244159Z E          ...
2025-01-10T12:40:39.8244248Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8244379Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8244495Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8244574Z E          ...
2025-01-10T12:40:39.8244660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8244789Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8244899Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8244903Z 
2025-01-10T12:40:39.8244998Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8245204Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-10T12:40:39.8245216Z 
2025-01-10T12:40:39.8245434Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f71c7a40>
2025-01-10T12:40:39.8245603Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8245693Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8245698Z 
2025-01-10T12:40:39.8245836Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8246037Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8246232Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8246309Z         try:
2025-01-10T12:40:39.8246451Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8246538Z         except KeyError:
2025-01-10T12:40:39.8246681Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8246752Z     
2025-01-10T12:40:39.8246843Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8246936Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8247031Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8247164Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8247251Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8247344Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8247453Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8247462Z 
2025-01-10T12:40:39.8247593Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8247704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8247709Z 
2025-01-10T12:40:39.8247847Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8248052Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8248173Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8248259Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8248397Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8248484Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8248588Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8248672Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8248750Z err_msg = None
2025-01-10T12:40:39.8248760Z 
2025-01-10T12:40:39.8248872Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8248954Z         if err_msg is None:
2025-01-10T12:40:39.8249054Z             if left.shape != right.shape:
2025-01-10T12:40:39.8249140Z                 raise_assert_detail(
2025-01-10T12:40:39.8249286Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8249364Z                 )
2025-01-10T12:40:39.8249504Z     
2025-01-10T12:40:39.8249648Z             diff = 0
2025-01-10T12:40:39.8249835Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8249988Z                 # count up differences
2025-01-10T12:40:39.8250275Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8250412Z                     diff += 1
2025-01-10T12:40:39.8250532Z     
2025-01-10T12:40:39.8250691Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8250832Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8251013Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8251115Z E           AssertionError: Series are different
2025-01-10T12:40:39.8251195Z E           
2025-01-10T12:40:39.8251298Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8251673Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8252002Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8252455Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8252470Z 
2025-01-10T12:40:39.8252778Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8252989Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-10T12:40:39.8252995Z 
2025-01-10T12:40:39.8253213Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f71c7b60>
2025-01-10T12:40:39.8253389Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8253482Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8253487Z 
2025-01-10T12:40:39.8253626Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8253741Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8253910Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8253990Z         try:
2025-01-10T12:40:39.8254129Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8254215Z         except KeyError:
2025-01-10T12:40:39.8254352Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8254432Z     
2025-01-10T12:40:39.8254519Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8254620Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8254708Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8254843Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8254935Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8255031Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8255141Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8255145Z 
2025-01-10T12:40:39.8255276Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8255400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8255404Z 
2025-01-10T12:40:39.8255537Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8255628Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8255741Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8255829Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8255966Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8256166Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8256279Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8256363Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8256443Z err_msg = None
2025-01-10T12:40:39.8256454Z 
2025-01-10T12:40:39.8256563Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8256655Z         if err_msg is None:
2025-01-10T12:40:39.8256750Z             if left.shape != right.shape:
2025-01-10T12:40:39.8256840Z                 raise_assert_detail(
2025-01-10T12:40:39.8256980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8257054Z                 )
2025-01-10T12:40:39.8257123Z     
2025-01-10T12:40:39.8257202Z             diff = 0
2025-01-10T12:40:39.8257314Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8257406Z                 # count up differences
2025-01-10T12:40:39.8257582Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8257786Z                     diff += 1
2025-01-10T12:40:39.8257863Z     
2025-01-10T12:40:39.8257956Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8258094Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8258266Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8258379Z E           AssertionError: Series are different
2025-01-10T12:40:39.8258452Z E           
2025-01-10T12:40:39.8258558Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8258916Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8259292Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8259773Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8259779Z 
2025-01-10T12:40:39.8260087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8260276Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-10T12:40:39.8260280Z 
2025-01-10T12:40:39.8260410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8260543Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8260648Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8260784Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8260906Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8261009Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8261087Z err_msg = None
2025-01-10T12:40:39.8261092Z 
2025-01-10T12:40:39.8261205Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8261290Z         if err_msg is None:
2025-01-10T12:40:39.8261389Z             if left.shape != right.shape:
2025-01-10T12:40:39.8261472Z                 raise_assert_detail(
2025-01-10T12:40:39.8261617Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8261697Z                 )
2025-01-10T12:40:39.8261773Z     
2025-01-10T12:40:39.8261846Z             diff = 0
2025-01-10T12:40:39.8261963Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8262055Z                 # count up differences
2025-01-10T12:40:39.8262224Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8262309Z                     diff += 1
2025-01-10T12:40:39.8262380Z     
2025-01-10T12:40:39.8262471Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8262604Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8262781Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8262982Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8263061Z E           
2025-01-10T12:40:39.8263172Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8263432Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8263696Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8263707Z 
2025-01-10T12:40:39.8264005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8264010Z 
2025-01-10T12:40:39.8264181Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8264186Z 
2025-01-10T12:40:39.8264407Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ee720>
2025-01-10T12:40:39.8264710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>, attr = 'nu'
2025-01-10T12:40:39.8264715Z 
2025-01-10T12:40:39.8264857Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8264972Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8265067Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8265142Z         try:
2025-01-10T12:40:39.8265286Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8265367Z         except KeyError:
2025-01-10T12:40:39.8265509Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8265586Z     
2025-01-10T12:40:39.8265676Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8265771Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8265864Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8265994Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8266265Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8266388Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8266501Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8266506Z 
2025-01-10T12:40:39.8266640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8266752Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8266902Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8266975Z     ???
2025-01-10T12:40:39.8267090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8267098Z 
2025-01-10T12:40:39.8267169Z >   ???
2025-01-10T12:40:39.8267301Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8267371Z E   
2025-01-10T12:40:39.8267502Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8267620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8267700Z E          ...
2025-01-10T12:40:39.8267797Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8267934Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8268051Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8268126Z E          ...
2025-01-10T12:40:39.8268217Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8268341Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8268453Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8268582Z 
2025-01-10T12:40:39.8268674Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8268873Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-10T12:40:39.8268878Z 
2025-01-10T12:40:39.8269007Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8269140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8269242Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8269374Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8269501Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8269596Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8269682Z err_msg = None
2025-01-10T12:40:39.8269686Z 
2025-01-10T12:40:39.8269794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8269888Z         if err_msg is None:
2025-01-10T12:40:39.8269984Z             if left.shape != right.shape:
2025-01-10T12:40:39.8270076Z                 raise_assert_detail(
2025-01-10T12:40:39.8270225Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8270299Z                 )
2025-01-10T12:40:39.8270488Z     
2025-01-10T12:40:39.8270565Z             diff = 0
2025-01-10T12:40:39.8270682Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8270770Z                 # count up differences
2025-01-10T12:40:39.8270945Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8271027Z                     diff += 1
2025-01-10T12:40:39.8271103Z     
2025-01-10T12:40:39.8271191Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8271328Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8271498Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8271620Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8271702Z E           
2025-01-10T12:40:39.8271813Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8272071Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8272329Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8272335Z 
2025-01-10T12:40:39.8272650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8272654Z 
2025-01-10T12:40:39.8272822Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8272826Z 
2025-01-10T12:40:39.8273048Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ee7e0>
2025-01-10T12:40:39.8273225Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8273307Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8273311Z 
2025-01-10T12:40:39.8273450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8273566Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8273654Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8273726Z         try:
2025-01-10T12:40:39.8273871Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8273958Z         except KeyError:
2025-01-10T12:40:39.8274199Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8274276Z     
2025-01-10T12:40:39.8274362Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8274461Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8274549Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8274686Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8274784Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8274880Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8275064Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8275073Z 
2025-01-10T12:40:39.8275292Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8275494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8275744Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8275872Z     ???
2025-01-10T12:40:39.8276194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8276211Z 
2025-01-10T12:40:39.8276340Z >   ???
2025-01-10T12:40:39.8276494Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8276567Z E   
2025-01-10T12:40:39.8276700Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8276947Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8277028Z E          ...
2025-01-10T12:40:39.8277120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8277256Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8277372Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8277453Z E          ...
2025-01-10T12:40:39.8277540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8277670Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8277781Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8277790Z 
2025-01-10T12:40:39.8277882Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8278081Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-10T12:40:39.8278086Z 
2025-01-10T12:40:39.8278215Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8278360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8278458Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8278598Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8278726Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8278826Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8278911Z err_msg = None
2025-01-10T12:40:39.8278915Z 
2025-01-10T12:40:39.8279029Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8279121Z         if err_msg is None:
2025-01-10T12:40:39.8279218Z             if left.shape != right.shape:
2025-01-10T12:40:39.8279313Z                 raise_assert_detail(
2025-01-10T12:40:39.8279461Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8279546Z                 )
2025-01-10T12:40:39.8279617Z     
2025-01-10T12:40:39.8279699Z             diff = 0
2025-01-10T12:40:39.8279810Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8279905Z                 # count up differences
2025-01-10T12:40:39.8280076Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8280161Z                     diff += 1
2025-01-10T12:40:39.8280238Z     
2025-01-10T12:40:39.8280329Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8280470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8280762Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8280881Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8280954Z E           
2025-01-10T12:40:39.8281071Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8281328Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8281594Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8281604Z 
2025-01-10T12:40:39.8281917Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8281922Z 
2025-01-10T12:40:39.8282093Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8282098Z 
2025-01-10T12:40:39.8282326Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ee8a0>
2025-01-10T12:40:39.8282632Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>, attr = 'f_lu'
2025-01-10T12:40:39.8282636Z 
2025-01-10T12:40:39.8282780Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8282903Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8282989Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8283070Z         try:
2025-01-10T12:40:39.8283211Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8283298Z         except KeyError:
2025-01-10T12:40:39.8283437Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8283518Z     
2025-01-10T12:40:39.8283605Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8283704Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8283799Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8283937Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8284030Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8284125Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8284240Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8284250Z 
2025-01-10T12:40:39.8284378Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8284497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8284646Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8284725Z     ???
2025-01-10T12:40:39.8284835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8284843Z 
2025-01-10T12:40:39.8284919Z >   ???
2025-01-10T12:40:39.8285052Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8285131Z E   
2025-01-10T12:40:39.8285263Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8285385Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8285460Z E          ...
2025-01-10T12:40:39.8285556Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8285690Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8285804Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8285883Z E          ...
2025-01-10T12:40:39.8285971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8286276Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8286392Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8286537Z 
2025-01-10T12:40:39.8286637Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8286836Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-10T12:40:39.8286840Z 
2025-01-10T12:40:39.8286973Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8287108Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8287211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8287350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8287478Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8287575Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8287650Z err_msg = None
2025-01-10T12:40:39.8287654Z 
2025-01-10T12:40:39.8287767Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8287856Z         if err_msg is None:
2025-01-10T12:40:39.8287958Z             if left.shape != right.shape:
2025-01-10T12:40:39.8288053Z                 raise_assert_detail(
2025-01-10T12:40:39.8288208Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8288397Z                 )
2025-01-10T12:40:39.8288475Z     
2025-01-10T12:40:39.8288557Z             diff = 0
2025-01-10T12:40:39.8288673Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8288766Z                 # count up differences
2025-01-10T12:40:39.8288938Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8289022Z                     diff += 1
2025-01-10T12:40:39.8289094Z     
2025-01-10T12:40:39.8289189Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8289330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8289506Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8289626Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8289706Z E           
2025-01-10T12:40:39.8289819Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8290082Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8290350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8290360Z 
2025-01-10T12:40:39.8290670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8290675Z 
2025-01-10T12:40:39.8290851Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8290856Z 
2025-01-10T12:40:39.8291085Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ef0b0>
2025-01-10T12:40:39.8291255Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8291344Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8291351Z 
2025-01-10T12:40:39.8291491Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8291613Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8291700Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8291779Z         try:
2025-01-10T12:40:39.8291920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8292008Z         except KeyError:
2025-01-10T12:40:39.8292239Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8292317Z     
2025-01-10T12:40:39.8292407Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8292506Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8292602Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8292740Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8292832Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8292924Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8293039Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8293115Z             else:
2025-01-10T12:40:39.8293218Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8293326Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8293331Z 
2025-01-10T12:40:39.8293462Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8293577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8293734Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8293814Z     ???
2025-01-10T12:40:39.8293928Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8293933Z 
2025-01-10T12:40:39.8294093Z >   ???
2025-01-10T12:40:39.8294329Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8294461Z E   
2025-01-10T12:40:39.8294681Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8294871Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8294997Z E          ...
2025-01-10T12:40:39.8295153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8295342Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8295464Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8295537Z E          ...
2025-01-10T12:40:39.8295637Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8295761Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8295873Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8295877Z 
2025-01-10T12:40:39.8295974Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8296284Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-10T12:40:39.8296290Z 
2025-01-10T12:40:39.8296425Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8296556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8296659Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8296794Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8296924Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8297027Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8297104Z err_msg = None
2025-01-10T12:40:39.8297109Z 
2025-01-10T12:40:39.8297224Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8297310Z         if err_msg is None:
2025-01-10T12:40:39.8297409Z             if left.shape != right.shape:
2025-01-10T12:40:39.8297498Z                 raise_assert_detail(
2025-01-10T12:40:39.8297647Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8298007Z                 )
2025-01-10T12:40:39.8298114Z     
2025-01-10T12:40:39.8298191Z             diff = 0
2025-01-10T12:40:39.8298310Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8298400Z                 # count up differences
2025-01-10T12:40:39.8298574Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8298662Z                     diff += 1
2025-01-10T12:40:39.8298873Z     
2025-01-10T12:40:39.8298972Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8299117Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8299293Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8299408Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8299490Z E           
2025-01-10T12:40:39.8299604Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8299863Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8300121Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8300133Z 
2025-01-10T12:40:39.8300438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8300553Z 
2025-01-10T12:40:39.8300731Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8300736Z 
2025-01-10T12:40:39.8300961Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ef170>
2025-01-10T12:40:39.8301136Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8301223Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8301227Z 
2025-01-10T12:40:39.8301367Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8301488Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8301579Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8301659Z         try:
2025-01-10T12:40:39.8301799Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8301884Z         except KeyError:
2025-01-10T12:40:39.8302020Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8302100Z     
2025-01-10T12:40:39.8302187Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8302287Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8302378Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8302514Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8302604Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8302701Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8302818Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8302893Z             else:
2025-01-10T12:40:39.8302998Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8303111Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8303116Z 
2025-01-10T12:40:39.8303245Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8303360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8303513Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8303593Z     ???
2025-01-10T12:40:39.8303710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8303715Z 
2025-01-10T12:40:39.8303785Z >   ???
2025-01-10T12:40:39.8303919Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8303997Z E   
2025-01-10T12:40:39.8304127Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8304246Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8304322Z E          ...
2025-01-10T12:40:39.8304416Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8304642Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8304763Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8304838Z E          ...
2025-01-10T12:40:39.8304931Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8305059Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8305175Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8305179Z 
2025-01-10T12:40:39.8305272Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8305475Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-10T12:40:39.8305479Z 
2025-01-10T12:40:39.8305615Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8305749Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8305852Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8305996Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8306318Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8306424Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8306637Z err_msg = None
2025-01-10T12:40:39.8306642Z 
2025-01-10T12:40:39.8306758Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8306845Z         if err_msg is None:
2025-01-10T12:40:39.8306946Z             if left.shape != right.shape:
2025-01-10T12:40:39.8307033Z                 raise_assert_detail(
2025-01-10T12:40:39.8307186Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8307260Z                 )
2025-01-10T12:40:39.8307337Z     
2025-01-10T12:40:39.8307412Z             diff = 0
2025-01-10T12:40:39.8307529Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8307623Z                 # count up differences
2025-01-10T12:40:39.8307803Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8307883Z                     diff += 1
2025-01-10T12:40:39.8307960Z     
2025-01-10T12:40:39.8308057Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8308204Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8308376Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8308497Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8308576Z E           
2025-01-10T12:40:39.8308689Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8308950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8309210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8309224Z 
2025-01-10T12:40:39.8309534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8309539Z 
2025-01-10T12:40:39.8309716Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8309721Z 
2025-01-10T12:40:39.8309945Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70ef2f0>
2025-01-10T12:40:39.8310117Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c8077590>
2025-01-10T12:40:39.8310196Z attr = 'j_blues'
2025-01-10T12:40:39.8310335Z 
2025-01-10T12:40:39.8310483Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8310599Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8310691Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8310765Z         try:
2025-01-10T12:40:39.8310913Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8311007Z         except KeyError:
2025-01-10T12:40:39.8311145Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8311223Z     
2025-01-10T12:40:39.8311311Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8311409Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8311501Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8311639Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8311727Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8311824Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8311940Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8312020Z             else:
2025-01-10T12:40:39.8312118Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8312282Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8312292Z 
2025-01-10T12:40:39.8312643Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8312841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8313100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8313225Z     ???
2025-01-10T12:40:39.8313418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8313425Z 
2025-01-10T12:40:39.8313547Z >   ???
2025-01-10T12:40:39.8313768Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8313891Z E   
2025-01-10T12:40:39.8314116Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8314310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8314442Z E          ...
2025-01-10T12:40:39.8314591Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8314816Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8315019Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8315151Z E          ...
2025-01-10T12:40:39.8315303Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8315516Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8315696Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8315702Z 
2025-01-10T12:40:39.8315797Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8316004Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-10T12:40:39.8316009Z 
2025-01-10T12:40:39.8316326Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8316472Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8316576Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8316709Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8316843Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8316940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8317023Z err_msg = None
2025-01-10T12:40:39.8317027Z 
2025-01-10T12:40:39.8317138Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8317227Z         if err_msg is None:
2025-01-10T12:40:39.8317322Z             if left.shape != right.shape:
2025-01-10T12:40:39.8317411Z                 raise_assert_detail(
2025-01-10T12:40:39.8317554Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8317765Z                 )
2025-01-10T12:40:39.8317845Z     
2025-01-10T12:40:39.8317927Z             diff = 0
2025-01-10T12:40:39.8318044Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8318132Z                 # count up differences
2025-01-10T12:40:39.8318309Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8318395Z                     diff += 1
2025-01-10T12:40:39.8318471Z     
2025-01-10T12:40:39.8318561Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8318700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8318869Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8318989Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8319064Z E           
2025-01-10T12:40:39.8319179Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8319434Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8319818Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8319825Z 
2025-01-10T12:40:39.8320134Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8320139Z 
2025-01-10T12:40:39.8320308Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8320319Z 
2025-01-10T12:40:39.8320548Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c0b0>
2025-01-10T12:40:39.8320720Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8320797Z attr = 'lines'
2025-01-10T12:40:39.8320802Z 
2025-01-10T12:40:39.8320943Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8321068Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8321163Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8321238Z         try:
2025-01-10T12:40:39.8321383Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8321465Z         except KeyError:
2025-01-10T12:40:39.8321610Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8321688Z     
2025-01-10T12:40:39.8321782Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8321876Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8321975Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8322117Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8322207Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8322303Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8322414Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8322494Z             else:
2025-01-10T12:40:39.8322594Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8322707Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8322712Z 
2025-01-10T12:40:39.8322837Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8322954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8323102Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8323181Z     ???
2025-01-10T12:40:39.8323297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8323301Z 
2025-01-10T12:40:39.8323462Z >   ???
2025-01-10T12:40:39.8323596Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8323667Z E   
2025-01-10T12:40:39.8323800Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8323911Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8323992Z E          ...
2025-01-10T12:40:39.8324086Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8324222Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8324333Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8324414Z E          ...
2025-01-10T12:40:39.8324500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8324631Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8324740Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8324744Z 
2025-01-10T12:40:39.8324835Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8325075Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-10T12:40:39.8325080Z 
2025-01-10T12:40:39.8325308Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c170>
2025-01-10T12:40:39.8325478Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8325655Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8325659Z 
2025-01-10T12:40:39.8325803Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8325919Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8326010Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8326183Z         try:
2025-01-10T12:40:39.8326337Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8326424Z         except KeyError:
2025-01-10T12:40:39.8326562Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8326640Z     
2025-01-10T12:40:39.8326728Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8326832Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8326926Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8327065Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8327154Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8327255Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8327363Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8327368Z 
2025-01-10T12:40:39.8327500Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8327612Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8327621Z 
2025-01-10T12:40:39.8327757Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8327849Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8327959Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8328049Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8328193Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8328283Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8328389Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8328483Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8328560Z err_msg = None
2025-01-10T12:40:39.8328564Z 
2025-01-10T12:40:39.8328679Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8328767Z         if err_msg is None:
2025-01-10T12:40:39.8328864Z             if left.shape != right.shape:
2025-01-10T12:40:39.8328954Z                 raise_assert_detail(
2025-01-10T12:40:39.8329096Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8329178Z                 )
2025-01-10T12:40:39.8329250Z     
2025-01-10T12:40:39.8329330Z             diff = 0
2025-01-10T12:40:39.8329562Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8329655Z                 # count up differences
2025-01-10T12:40:39.8329823Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8329906Z                     diff += 1
2025-01-10T12:40:39.8329980Z     
2025-01-10T12:40:39.8330071Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8330205Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8330383Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8330490Z E           AssertionError: Series are different
2025-01-10T12:40:39.8330566Z E           
2025-01-10T12:40:39.8330674Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8331108Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8331724Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8332394Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8332406Z 
2025-01-10T12:40:39.8332729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8332964Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-10T12:40:39.8332973Z 
2025-01-10T12:40:39.8333202Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c230>
2025-01-10T12:40:39.8333374Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8333473Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8333477Z 
2025-01-10T12:40:39.8333616Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8333737Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8333825Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8333903Z         try:
2025-01-10T12:40:39.8334045Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8334135Z         except KeyError:
2025-01-10T12:40:39.8334275Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8334353Z     
2025-01-10T12:40:39.8334440Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8334540Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8334634Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8334775Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8334866Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8334956Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8335074Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8335079Z 
2025-01-10T12:40:39.8335204Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8335322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8335326Z 
2025-01-10T12:40:39.8335463Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8335664Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8335772Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8335860Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8336007Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8336208Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8336324Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8336405Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8336490Z err_msg = None
2025-01-10T12:40:39.8336494Z 
2025-01-10T12:40:39.8336602Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8336690Z         if err_msg is None:
2025-01-10T12:40:39.8336788Z             if left.shape != right.shape:
2025-01-10T12:40:39.8336878Z                 raise_assert_detail(
2025-01-10T12:40:39.8337029Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8337110Z                 )
2025-01-10T12:40:39.8337185Z     
2025-01-10T12:40:39.8337265Z             diff = 0
2025-01-10T12:40:39.8337376Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8337592Z                 # count up differences
2025-01-10T12:40:39.8337765Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8337844Z                     diff += 1
2025-01-10T12:40:39.8337920Z     
2025-01-10T12:40:39.8338009Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8338147Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8338317Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8338428Z E           AssertionError: Series are different
2025-01-10T12:40:39.8338506Z E           
2025-01-10T12:40:39.8338622Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8338983Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8339362Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8339731Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8339744Z 
2025-01-10T12:40:39.8340057Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8340253Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-10T12:40:39.8340258Z 
2025-01-10T12:40:39.8340393Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8340523Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8340628Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8340875Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8341006Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8341108Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8341193Z err_msg = None
2025-01-10T12:40:39.8341197Z 
2025-01-10T12:40:39.8341312Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8341394Z         if err_msg is None:
2025-01-10T12:40:39.8341496Z             if left.shape != right.shape:
2025-01-10T12:40:39.8341580Z                 raise_assert_detail(
2025-01-10T12:40:39.8341727Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8341803Z                 )
2025-01-10T12:40:39.8341879Z     
2025-01-10T12:40:39.8341954Z             diff = 0
2025-01-10T12:40:39.8342069Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8342165Z                 # count up differences
2025-01-10T12:40:39.8342337Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8342419Z                     diff += 1
2025-01-10T12:40:39.8342497Z     
2025-01-10T12:40:39.8342593Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8342812Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8342986Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8343098Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8343177Z E           
2025-01-10T12:40:39.8343288Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8343546Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8343807Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8343822Z 
2025-01-10T12:40:39.8344121Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8344125Z 
2025-01-10T12:40:39.8344298Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8344303Z 
2025-01-10T12:40:39.8344525Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c470>
2025-01-10T12:40:39.8344729Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>, attr = 'nu'
2025-01-10T12:40:39.8344737Z 
2025-01-10T12:40:39.8344885Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8345001Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8345093Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8345167Z         try:
2025-01-10T12:40:39.8345312Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8345399Z         except KeyError:
2025-01-10T12:40:39.8345540Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8345615Z     
2025-01-10T12:40:39.8345708Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8345803Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8345897Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8346029Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8346311Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8346410Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8346653Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8346658Z 
2025-01-10T12:40:39.8346785Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8346899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8347053Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8347132Z     ???
2025-01-10T12:40:39.8347249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8347254Z 
2025-01-10T12:40:39.8347327Z >   ???
2025-01-10T12:40:39.8347461Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8347534Z E   
2025-01-10T12:40:39.8347666Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8347779Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8347859Z E          ...
2025-01-10T12:40:39.8347950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8348092Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8348210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8348284Z E          ...
2025-01-10T12:40:39.8348379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8348507Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8348737Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8348742Z 
2025-01-10T12:40:39.8348833Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8349045Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-10T12:40:39.8349049Z 
2025-01-10T12:40:39.8349178Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8349317Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8349420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8349556Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8349780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8349948Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8350092Z err_msg = None
2025-01-10T12:40:39.8350099Z 
2025-01-10T12:40:39.8350280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8350424Z         if err_msg is None:
2025-01-10T12:40:39.8350581Z             if left.shape != right.shape:
2025-01-10T12:40:39.8350730Z                 raise_assert_detail(
2025-01-10T12:40:39.8350934Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8351016Z                 )
2025-01-10T12:40:39.8351093Z     
2025-01-10T12:40:39.8351167Z             diff = 0
2025-01-10T12:40:39.8351286Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8351381Z                 # count up differences
2025-01-10T12:40:39.8351556Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8351634Z                     diff += 1
2025-01-10T12:40:39.8351712Z     
2025-01-10T12:40:39.8351801Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8351947Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8352119Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8352238Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8352312Z E           
2025-01-10T12:40:39.8352431Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8352684Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8353042Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8353051Z 
2025-01-10T12:40:39.8353360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8353364Z 
2025-01-10T12:40:39.8353534Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8353544Z 
2025-01-10T12:40:39.8353765Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c530>
2025-01-10T12:40:39.8353938Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8354020Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8354030Z 
2025-01-10T12:40:39.8354173Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8354290Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8354383Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8354457Z         try:
2025-01-10T12:40:39.8354601Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8354784Z         except KeyError:
2025-01-10T12:40:39.8354929Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8355001Z     
2025-01-10T12:40:39.8355093Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8355195Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8355286Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8355424Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8355510Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8355606Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8355722Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8355727Z 
2025-01-10T12:40:39.8355856Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8355969Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8356323Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8356410Z     ???
2025-01-10T12:40:39.8356531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8356536Z 
2025-01-10T12:40:39.8356613Z >   ???
2025-01-10T12:40:39.8356743Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8356819Z E   
2025-01-10T12:40:39.8356948Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8357063Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8357139Z E          ...
2025-01-10T12:40:39.8357232Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8357366Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8357484Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8357558Z E          ...
2025-01-10T12:40:39.8357650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8357779Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8357891Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8357896Z 
2025-01-10T12:40:39.8357989Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8358195Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-10T12:40:39.8358199Z 
2025-01-10T12:40:39.8358336Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8358464Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8358568Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8358833Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8358963Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8359058Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8359147Z err_msg = None
2025-01-10T12:40:39.8359151Z 
2025-01-10T12:40:39.8359265Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8359348Z         if err_msg is None:
2025-01-10T12:40:39.8359448Z             if left.shape != right.shape:
2025-01-10T12:40:39.8359535Z                 raise_assert_detail(
2025-01-10T12:40:39.8359682Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8359755Z                 )
2025-01-10T12:40:39.8359833Z     
2025-01-10T12:40:39.8359909Z             diff = 0
2025-01-10T12:40:39.8360024Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8360117Z                 # count up differences
2025-01-10T12:40:39.8360293Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8360375Z                     diff += 1
2025-01-10T12:40:39.8360449Z     
2025-01-10T12:40:39.8360535Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8360785Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8360962Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8361076Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8361156Z E           
2025-01-10T12:40:39.8361266Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8361530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8361793Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8361808Z 
2025-01-10T12:40:39.8362115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8362120Z 
2025-01-10T12:40:39.8362293Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8362298Z 
2025-01-10T12:40:39.8362518Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7c5f0>
2025-01-10T12:40:39.8362727Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>, attr = 'f_lu'
2025-01-10T12:40:39.8362736Z 
2025-01-10T12:40:39.8362878Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8362998Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8363085Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8363171Z         try:
2025-01-10T12:40:39.8363316Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8363403Z         except KeyError:
2025-01-10T12:40:39.8363547Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8363620Z     
2025-01-10T12:40:39.8363714Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8363808Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8363901Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8364030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8364121Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8364213Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8364415Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8364419Z 
2025-01-10T12:40:39.8364543Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8364661Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8364811Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8364892Z     ???
2025-01-10T12:40:39.8365006Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8365011Z 
2025-01-10T12:40:39.8365081Z >   ???
2025-01-10T12:40:39.8365216Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8365292Z E   
2025-01-10T12:40:39.8365425Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8365538Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8365621Z E          ...
2025-01-10T12:40:39.8365712Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8365851Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8365965Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8366044Z E          ...
2025-01-10T12:40:39.8366240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8366367Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8366595Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8366600Z 
2025-01-10T12:40:39.8366692Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8366904Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-10T12:40:39.8366908Z 
2025-01-10T12:40:39.8367036Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8367174Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8367272Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8367415Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8367609Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8367843Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8367999Z err_msg = None
2025-01-10T12:40:39.8368004Z 
2025-01-10T12:40:39.8368185Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8368343Z         if err_msg is None:
2025-01-10T12:40:39.8368470Z             if left.shape != right.shape:
2025-01-10T12:40:39.8368689Z                 raise_assert_detail(
2025-01-10T12:40:39.8369022Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8369271Z                 )
2025-01-10T12:40:39.8369512Z     
2025-01-10T12:40:39.8369760Z             diff = 0
2025-01-10T12:40:39.8369997Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8370278Z                 # count up differences
2025-01-10T12:40:39.8370620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8370892Z                     diff += 1
2025-01-10T12:40:39.8371086Z     
2025-01-10T12:40:39.8371337Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8371691Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8372032Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8372358Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8372558Z E           
2025-01-10T12:40:39.8372810Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8373104Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8382850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8382880Z 
2025-01-10T12:40:39.8383244Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8383255Z 
2025-01-10T12:40:39.8383442Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8383447Z 
2025-01-10T12:40:39.8383689Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7cd70>
2025-01-10T12:40:39.8383864Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8383960Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8383965Z 
2025-01-10T12:40:39.8384115Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8384243Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8384333Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8384415Z         try:
2025-01-10T12:40:39.8384740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8384836Z         except KeyError:
2025-01-10T12:40:39.8384982Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8385061Z     
2025-01-10T12:40:39.8385156Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8385253Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8385350Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8385487Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8385582Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8385673Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8385796Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8385873Z             else:
2025-01-10T12:40:39.8385978Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8386295Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8386317Z 
2025-01-10T12:40:39.8386563Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8386768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8387035Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8387167Z     ???
2025-01-10T12:40:39.8387360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8387367Z 
2025-01-10T12:40:39.8387500Z >   ???
2025-01-10T12:40:39.8387715Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8387797Z E   
2025-01-10T12:40:39.8387932Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8388059Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8388135Z E          ...
2025-01-10T12:40:39.8388232Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8388363Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8388490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8388564Z E          ...
2025-01-10T12:40:39.8388663Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8388797Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8388908Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8388912Z 
2025-01-10T12:40:39.8389010Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8389225Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-10T12:40:39.8389229Z 
2025-01-10T12:40:39.8389367Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8389645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8389754Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8389891Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8390030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8390130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8390208Z err_msg = None
2025-01-10T12:40:39.8390213Z 
2025-01-10T12:40:39.8390332Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8390415Z         if err_msg is None:
2025-01-10T12:40:39.8390515Z             if left.shape != right.shape:
2025-01-10T12:40:39.8390599Z                 raise_assert_detail(
2025-01-10T12:40:39.8390752Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8390834Z                 )
2025-01-10T12:40:39.8390912Z     
2025-01-10T12:40:39.8390986Z             diff = 0
2025-01-10T12:40:39.8391105Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8391196Z                 # count up differences
2025-01-10T12:40:39.8391372Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8391573Z                     diff += 1
2025-01-10T12:40:39.8391647Z     
2025-01-10T12:40:39.8391744Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8391889Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8392071Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8392186Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8392265Z E           
2025-01-10T12:40:39.8392379Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8392648Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8392915Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8392921Z 
2025-01-10T12:40:39.8393229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8393233Z 
2025-01-10T12:40:39.8393411Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8393416Z 
2025-01-10T12:40:39.8393646Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7ce30>
2025-01-10T12:40:39.8393818Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8393904Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8393908Z 
2025-01-10T12:40:39.8394048Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8394177Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8394263Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8394342Z         try:
2025-01-10T12:40:39.8394482Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8394571Z         except KeyError:
2025-01-10T12:40:39.8394710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8394787Z     
2025-01-10T12:40:39.8394875Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8394975Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8395065Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8395295Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8395382Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8395478Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8395593Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8395672Z             else:
2025-01-10T12:40:39.8395776Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8395885Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8395890Z 
2025-01-10T12:40:39.8396021Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8396265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8396425Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8396498Z     ???
2025-01-10T12:40:39.8396617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8396628Z 
2025-01-10T12:40:39.8396698Z >   ???
2025-01-10T12:40:39.8396832Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8396908Z E   
2025-01-10T12:40:39.8397036Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8397150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8397369Z E          ...
2025-01-10T12:40:39.8397458Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8397588Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8397708Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8397782Z E          ...
2025-01-10T12:40:39.8397873Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8397994Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8398138Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8398143Z 
2025-01-10T12:40:39.8398235Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8398455Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-10T12:40:39.8398459Z 
2025-01-10T12:40:39.8398593Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8398723Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8398830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8398962Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8399091Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8399183Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8399266Z err_msg = None
2025-01-10T12:40:39.8399270Z 
2025-01-10T12:40:39.8399380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8399467Z         if err_msg is None:
2025-01-10T12:40:39.8399576Z             if left.shape != right.shape:
2025-01-10T12:40:39.8399662Z                 raise_assert_detail(
2025-01-10T12:40:39.8399813Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8399887Z                 )
2025-01-10T12:40:39.8399965Z     
2025-01-10T12:40:39.8400044Z             diff = 0
2025-01-10T12:40:39.8400160Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8400248Z                 # count up differences
2025-01-10T12:40:39.8400423Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8400501Z                     diff += 1
2025-01-10T12:40:39.8400577Z     
2025-01-10T12:40:39.8400666Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8400805Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8400973Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8401213Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8401292Z E           
2025-01-10T12:40:39.8401402Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8401661Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8401920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8401931Z 
2025-01-10T12:40:39.8402239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8402250Z 
2025-01-10T12:40:39.8402422Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8402426Z 
2025-01-10T12:40:39.8402652Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7cfb0>
2025-01-10T12:40:39.8402962Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f06f3350>
2025-01-10T12:40:39.8403042Z attr = 'j_blues'
2025-01-10T12:40:39.8403046Z 
2025-01-10T12:40:39.8403190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8403304Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8403393Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8403464Z         try:
2025-01-10T12:40:39.8403607Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8403693Z         except KeyError:
2025-01-10T12:40:39.8403830Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8403917Z     
2025-01-10T12:40:39.8404004Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8404102Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8404190Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8404326Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8404421Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8404516Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8404625Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8404704Z             else:
2025-01-10T12:40:39.8404798Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8404978Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8404987Z 
2025-01-10T12:40:39.8405214Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8405404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8405663Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8405788Z     ???
2025-01-10T12:40:39.8405977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8405985Z 
2025-01-10T12:40:39.8406243Z >   ???
2025-01-10T12:40:39.8406395Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8406476Z E   
2025-01-10T12:40:39.8406612Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8406721Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8406801Z E          ...
2025-01-10T12:40:39.8406889Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8407022Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8407140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8407213Z E          ...
2025-01-10T12:40:39.8407305Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8407568Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8407678Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8407683Z 
2025-01-10T12:40:39.8407771Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8408023Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-10T12:40:39.8408031Z 
2025-01-10T12:40:39.8408168Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8408300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8408404Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8408536Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8408664Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8408756Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8408844Z err_msg = None
2025-01-10T12:40:39.8408848Z 
2025-01-10T12:40:39.8408956Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8409043Z         if err_msg is None:
2025-01-10T12:40:39.8409140Z             if left.shape != right.shape:
2025-01-10T12:40:39.8409343Z                 raise_assert_detail(
2025-01-10T12:40:39.8409488Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8409564Z                 )
2025-01-10T12:40:39.8409639Z     
2025-01-10T12:40:39.8409718Z             diff = 0
2025-01-10T12:40:39.8409830Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8409922Z                 # count up differences
2025-01-10T12:40:39.8410091Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8410176Z                     diff += 1
2025-01-10T12:40:39.8410247Z     
2025-01-10T12:40:39.8410342Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8410483Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8410659Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8410773Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8410856Z E           
2025-01-10T12:40:39.8410968Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8411227Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8411486Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8411494Z 
2025-01-10T12:40:39.8411803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8411808Z 
2025-01-10T12:40:39.8411983Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8411989Z 
2025-01-10T12:40:39.8412215Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7dd30>
2025-01-10T12:40:39.8412380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8412460Z attr = 'lines'
2025-01-10T12:40:39.8412465Z 
2025-01-10T12:40:39.8412600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8412722Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8412808Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8412886Z         try:
2025-01-10T12:40:39.8413114Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8413202Z         except KeyError:
2025-01-10T12:40:39.8413338Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8413414Z     
2025-01-10T12:40:39.8413502Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8413604Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8413698Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8413829Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8413925Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8414015Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8414130Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8414204Z             else:
2025-01-10T12:40:39.8414304Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8414410Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8414421Z 
2025-01-10T12:40:39.8414551Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8414666Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8414817Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8414893Z     ???
2025-01-10T12:40:39.8415085Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8415090Z 
2025-01-10T12:40:39.8415160Z >   ???
2025-01-10T12:40:39.8415285Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8415358Z E   
2025-01-10T12:40:39.8415484Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8415600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8415674Z E          ...
2025-01-10T12:40:39.8415769Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8415900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8416022Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8416199Z E          ...
2025-01-10T12:40:39.8416296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8416419Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8416528Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8416538Z 
2025-01-10T12:40:39.8416633Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8416933Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-10T12:40:39.8416938Z 
2025-01-10T12:40:39.8417165Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7ddf0>
2025-01-10T12:40:39.8417328Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8417423Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8417428Z 
2025-01-10T12:40:39.8417566Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8417692Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8417778Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8417856Z         try:
2025-01-10T12:40:39.8418005Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8418088Z         except KeyError:
2025-01-10T12:40:39.8418234Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8418313Z     
2025-01-10T12:40:39.8418406Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8418502Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8418595Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8418730Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8418822Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8418912Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8419028Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8419173Z 
2025-01-10T12:40:39.8419302Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8419425Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8419430Z 
2025-01-10T12:40:39.8419573Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8419665Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8419778Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8419861Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8420006Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8420090Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8420199Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8420279Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8420360Z err_msg = None
2025-01-10T12:40:39.8420369Z 
2025-01-10T12:40:39.8420485Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8420569Z         if err_msg is None:
2025-01-10T12:40:39.8420671Z             if left.shape != right.shape:
2025-01-10T12:40:39.8420757Z                 raise_assert_detail(
2025-01-10T12:40:39.8420905Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8421092Z                 )
2025-01-10T12:40:39.8421168Z     
2025-01-10T12:40:39.8421246Z             diff = 0
2025-01-10T12:40:39.8421362Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8421449Z                 # count up differences
2025-01-10T12:40:39.8421625Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8421705Z                     diff += 1
2025-01-10T12:40:39.8421783Z     
2025-01-10T12:40:39.8421871Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8422011Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8422194Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8422297Z E           AssertionError: Series are different
2025-01-10T12:40:39.8422376Z E           
2025-01-10T12:40:39.8422480Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8422852Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8423175Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8423506Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8423516Z 
2025-01-10T12:40:39.8423835Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8424214Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-10T12:40:39.8424225Z 
2025-01-10T12:40:39.8424620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7deb0>
2025-01-10T12:40:39.8425030Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8425191Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8425199Z 
2025-01-10T12:40:39.8425375Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8425492Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8425588Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8425662Z         try:
2025-01-10T12:40:39.8425808Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8425892Z         except KeyError:
2025-01-10T12:40:39.8426035Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8426325Z     
2025-01-10T12:40:39.8426427Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8426523Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8426619Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8426756Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8426848Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8426943Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8427055Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8427059Z 
2025-01-10T12:40:39.8427190Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8427441Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8427446Z 
2025-01-10T12:40:39.8427587Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8427673Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8427784Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8427869Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8428010Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8428099Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8428209Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8428294Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8428370Z err_msg = None
2025-01-10T12:40:39.8428375Z 
2025-01-10T12:40:39.8428488Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8428575Z         if err_msg is None:
2025-01-10T12:40:39.8428674Z             if left.shape != right.shape:
2025-01-10T12:40:39.8428759Z                 raise_assert_detail(
2025-01-10T12:40:39.8428906Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8428979Z                 )
2025-01-10T12:40:39.8429056Z     
2025-01-10T12:40:39.8429135Z             diff = 0
2025-01-10T12:40:39.8429249Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8429342Z                 # count up differences
2025-01-10T12:40:39.8429511Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8429597Z                     diff += 1
2025-01-10T12:40:39.8429668Z     
2025-01-10T12:40:39.8429761Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8429898Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8430072Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8430181Z E           AssertionError: Series are different
2025-01-10T12:40:39.8430260Z E           
2025-01-10T12:40:39.8430364Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8430729Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8431219Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8431591Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8431603Z 
2025-01-10T12:40:39.8431910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8432150Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-10T12:40:39.8432155Z 
2025-01-10T12:40:39.8432283Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8432492Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8432591Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8432731Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8432859Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8432954Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8433037Z err_msg = None
2025-01-10T12:40:39.8433041Z 
2025-01-10T12:40:39.8433148Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8433240Z         if err_msg is None:
2025-01-10T12:40:39.8433333Z             if left.shape != right.shape:
2025-01-10T12:40:39.8433422Z                 raise_assert_detail(
2025-01-10T12:40:39.8433567Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8433650Z                 )
2025-01-10T12:40:39.8433721Z     
2025-01-10T12:40:39.8433802Z             diff = 0
2025-01-10T12:40:39.8433912Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8434006Z                 # count up differences
2025-01-10T12:40:39.8434173Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8434256Z                     diff += 1
2025-01-10T12:40:39.8434335Z     
2025-01-10T12:40:39.8434423Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8434561Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8434732Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8434848Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8434921Z E           
2025-01-10T12:40:39.8435038Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8435291Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8435551Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8435645Z 
2025-01-10T12:40:39.8435950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8435955Z 
2025-01-10T12:40:39.8436229Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8436235Z 
2025-01-10T12:40:39.8436463Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e0f0>
2025-01-10T12:40:39.8436669Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>, attr = 'nu'
2025-01-10T12:40:39.8436679Z 
2025-01-10T12:40:39.8436815Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8436936Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8437022Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8437099Z         try:
2025-01-10T12:40:39.8437238Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8437325Z         except KeyError:
2025-01-10T12:40:39.8437461Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8437545Z     
2025-01-10T12:40:39.8437632Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8437732Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8437820Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8437955Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8438165Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8438271Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8438387Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8438392Z 
2025-01-10T12:40:39.8438524Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8438643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8438792Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8438874Z     ???
2025-01-10T12:40:39.8438985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8438994Z 
2025-01-10T12:40:39.8439071Z >   ???
2025-01-10T12:40:39.8439199Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8439277Z E   
2025-01-10T12:40:39.8439405Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8439528Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8439608Z E          ...
2025-01-10T12:40:39.8439702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8439837Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8439949Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8440027Z E          ...
2025-01-10T12:40:39.8440115Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8440244Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8440351Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8440359Z 
2025-01-10T12:40:39.8440458Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8440732Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-10T12:40:39.8440738Z 
2025-01-10T12:40:39.8440878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8441017Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8441118Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8441257Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8441381Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8441481Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8441558Z err_msg = None
2025-01-10T12:40:39.8441562Z 
2025-01-10T12:40:39.8441679Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8441928Z         if err_msg is None:
2025-01-10T12:40:39.8442030Z             if left.shape != right.shape:
2025-01-10T12:40:39.8442115Z                 raise_assert_detail(
2025-01-10T12:40:39.8442264Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8442345Z                 )
2025-01-10T12:40:39.8442415Z     
2025-01-10T12:40:39.8442492Z             diff = 0
2025-01-10T12:40:39.8442601Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8442713Z                 # count up differences
2025-01-10T12:40:39.8442894Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8442985Z                     diff += 1
2025-01-10T12:40:39.8443057Z     
2025-01-10T12:40:39.8443150Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8443383Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8443687Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8443876Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8444004Z E           
2025-01-10T12:40:39.8444194Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8444647Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8445012Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8445022Z 
2025-01-10T12:40:39.8445336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8445345Z 
2025-01-10T12:40:39.8445514Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8445519Z 
2025-01-10T12:40:39.8445754Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e1b0>
2025-01-10T12:40:39.8445920Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8446006Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8446011Z 
2025-01-10T12:40:39.8446251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8446376Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8446462Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8446540Z         try:
2025-01-10T12:40:39.8446682Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8446771Z         except KeyError:
2025-01-10T12:40:39.8446914Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8446989Z     
2025-01-10T12:40:39.8447081Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8447175Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8447267Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8447404Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8447496Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8447586Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8447701Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8447705Z 
2025-01-10T12:40:39.8447830Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8447949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8448094Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8448174Z     ???
2025-01-10T12:40:39.8448421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8448426Z 
2025-01-10T12:40:39.8448498Z >   ???
2025-01-10T12:40:39.8448631Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8448702Z E   
2025-01-10T12:40:39.8448835Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8448950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8449030Z E          ...
2025-01-10T12:40:39.8449120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8449252Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8449364Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8449443Z E          ...
2025-01-10T12:40:39.8449531Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8449662Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8449771Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8449780Z 
2025-01-10T12:40:39.8449870Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8450113Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-10T12:40:39.8450119Z 
2025-01-10T12:40:39.8450247Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8450586Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8450682Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8450818Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8450942Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8451040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8451121Z err_msg = None
2025-01-10T12:40:39.8451126Z 
2025-01-10T12:40:39.8451240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8451327Z         if err_msg is None:
2025-01-10T12:40:39.8451424Z             if left.shape != right.shape:
2025-01-10T12:40:39.8451514Z                 raise_assert_detail(
2025-01-10T12:40:39.8451657Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8451740Z                 )
2025-01-10T12:40:39.8451812Z     
2025-01-10T12:40:39.8451891Z             diff = 0
2025-01-10T12:40:39.8452001Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8452094Z                 # count up differences
2025-01-10T12:40:39.8452264Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8452349Z                     diff += 1
2025-01-10T12:40:39.8452421Z     
2025-01-10T12:40:39.8452517Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8452659Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8452832Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8452950Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8453022Z E           
2025-01-10T12:40:39.8453139Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8453393Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8453655Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8453746Z 
2025-01-10T12:40:39.8454055Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8454060Z 
2025-01-10T12:40:39.8454227Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8454235Z 
2025-01-10T12:40:39.8454462Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e270>
2025-01-10T12:40:39.8454662Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>, attr = 'f_lu'
2025-01-10T12:40:39.8454666Z 
2025-01-10T12:40:39.8454808Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8454927Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8455012Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8455089Z         try:
2025-01-10T12:40:39.8455228Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8455317Z         except KeyError:
2025-01-10T12:40:39.8455458Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8455534Z     
2025-01-10T12:40:39.8455621Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8455719Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8455807Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8456024Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8456291Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8456397Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8456510Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8456520Z 
2025-01-10T12:40:39.8456645Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8456761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8456905Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8456983Z     ???
2025-01-10T12:40:39.8457097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8457102Z 
2025-01-10T12:40:39.8457179Z >   ???
2025-01-10T12:40:39.8457304Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8457380Z E   
2025-01-10T12:40:39.8457506Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8457625Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8457698Z E          ...
2025-01-10T12:40:39.8457790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8457923Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8458034Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8458113Z E          ...
2025-01-10T12:40:39.8458200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8458327Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8458431Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8458438Z 
2025-01-10T12:40:39.8458532Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8458797Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-10T12:40:39.8458802Z 
2025-01-10T12:40:39.8458935Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8459066Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8459167Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8459304Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8459427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8459524Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8459615Z err_msg = None
2025-01-10T12:40:39.8459619Z 
2025-01-10T12:40:39.8459854Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8459941Z         if err_msg is None:
2025-01-10T12:40:39.8460036Z             if left.shape != right.shape:
2025-01-10T12:40:39.8460125Z                 raise_assert_detail(
2025-01-10T12:40:39.8460266Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8460347Z                 )
2025-01-10T12:40:39.8460417Z     
2025-01-10T12:40:39.8460496Z             diff = 0
2025-01-10T12:40:39.8460612Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8460699Z                 # count up differences
2025-01-10T12:40:39.8460873Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8460951Z                     diff += 1
2025-01-10T12:40:39.8461028Z     
2025-01-10T12:40:39.8461116Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8461256Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8461430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8461546Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8461619Z E           
2025-01-10T12:40:39.8461735Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8462142Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8462535Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8462551Z 
2025-01-10T12:40:39.8463075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8463082Z 
2025-01-10T12:40:39.8463372Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8463388Z 
2025-01-10T12:40:39.8463615Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7e9f0>
2025-01-10T12:40:39.8463783Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8463864Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8463869Z 
2025-01-10T12:40:39.8464011Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8464126Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8464219Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8464292Z         try:
2025-01-10T12:40:39.8464434Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8464519Z         except KeyError:
2025-01-10T12:40:39.8464661Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8464732Z     
2025-01-10T12:40:39.8464825Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8464923Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8465011Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8465149Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8465235Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8465329Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8465438Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8465517Z             else:
2025-01-10T12:40:39.8465612Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8465724Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8465729Z 
2025-01-10T12:40:39.8465852Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8466224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8466403Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8466483Z     ???
2025-01-10T12:40:39.8466600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8466610Z 
2025-01-10T12:40:39.8466681Z >   ???
2025-01-10T12:40:39.8466811Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8466886Z E   
2025-01-10T12:40:39.8467016Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8467126Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8467204Z E          ...
2025-01-10T12:40:39.8467292Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8467424Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8467536Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8467620Z E          ...
2025-01-10T12:40:39.8467706Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8467833Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8467941Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8467946Z 
2025-01-10T12:40:39.8468035Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8468431Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-10T12:40:39.8468436Z 
2025-01-10T12:40:39.8468563Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8468696Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8468792Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8468931Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8469053Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8469157Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8469239Z err_msg = None
2025-01-10T12:40:39.8469243Z 
2025-01-10T12:40:39.8469353Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8469446Z         if err_msg is None:
2025-01-10T12:40:39.8469544Z             if left.shape != right.shape:
2025-01-10T12:40:39.8469632Z                 raise_assert_detail(
2025-01-10T12:40:39.8469771Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8469849Z                 )
2025-01-10T12:40:39.8469919Z     
2025-01-10T12:40:39.8470000Z             diff = 0
2025-01-10T12:40:39.8470110Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8470201Z                 # count up differences
2025-01-10T12:40:39.8470368Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8470458Z                     diff += 1
2025-01-10T12:40:39.8470534Z     
2025-01-10T12:40:39.8470623Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8470765Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8470932Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8471050Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8471126Z E           
2025-01-10T12:40:39.8471242Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8471493Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8471753Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8471873Z 
2025-01-10T12:40:39.8472183Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8472192Z 
2025-01-10T12:40:39.8472359Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8472363Z 
2025-01-10T12:40:39.8472588Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7eab0>
2025-01-10T12:40:39.8472750Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8472838Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8472842Z 
2025-01-10T12:40:39.8472981Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8473096Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8473190Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8473263Z         try:
2025-01-10T12:40:39.8473407Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8473488Z         except KeyError:
2025-01-10T12:40:39.8473625Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8473776Z     
2025-01-10T12:40:39.8473867Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8473960Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8474054Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8474185Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8474276Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8474366Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8474480Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8474558Z             else:
2025-01-10T12:40:39.8474657Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8474768Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8474772Z 
2025-01-10T12:40:39.8474897Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8475016Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8475163Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8475241Z     ???
2025-01-10T12:40:39.8475350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8475355Z 
2025-01-10T12:40:39.8475431Z >   ???
2025-01-10T12:40:39.8475556Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8475633Z E   
2025-01-10T12:40:39.8475763Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8475872Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8475951Z E          ...
2025-01-10T12:40:39.8476043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8476284Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8476397Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8476474Z E          ...
2025-01-10T12:40:39.8476560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8476695Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8476799Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8476804Z 
2025-01-10T12:40:39.8476900Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8477148Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-10T12:40:39.8477159Z 
2025-01-10T12:40:39.8477288Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8477418Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8477632Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8477767Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8477889Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8477992Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8478067Z err_msg = None
2025-01-10T12:40:39.8478072Z 
2025-01-10T12:40:39.8478184Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8478271Z         if err_msg is None:
2025-01-10T12:40:39.8478365Z             if left.shape != right.shape:
2025-01-10T12:40:39.8478453Z                 raise_assert_detail(
2025-01-10T12:40:39.8478593Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8478670Z                 )
2025-01-10T12:40:39.8478741Z     
2025-01-10T12:40:39.8478820Z             diff = 0
2025-01-10T12:40:39.8478934Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8479027Z                 # count up differences
2025-01-10T12:40:39.8479194Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8479279Z                     diff += 1
2025-01-10T12:40:39.8479350Z     
2025-01-10T12:40:39.8479557Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8479691Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8479890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8480096Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8480223Z E           
2025-01-10T12:40:39.8480414Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8480867Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8481239Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8481251Z 
2025-01-10T12:40:39.8481558Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8481563Z 
2025-01-10T12:40:39.8481732Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8481736Z 
2025-01-10T12:40:39.8481960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7ec30>
2025-01-10T12:40:39.8482125Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22f0ebf530>
2025-01-10T12:40:39.8482210Z attr = 'j_blues'
2025-01-10T12:40:39.8482214Z 
2025-01-10T12:40:39.8482349Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8482470Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8482556Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8482637Z         try:
2025-01-10T12:40:39.8482779Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8482860Z         except KeyError:
2025-01-10T12:40:39.8482999Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8483070Z     
2025-01-10T12:40:39.8483160Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8483254Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8483347Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8483477Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8483568Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8483756Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8483869Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8483944Z             else:
2025-01-10T12:40:39.8484042Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8484148Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8484161Z 
2025-01-10T12:40:39.8484284Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8484401Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8484544Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8484621Z     ???
2025-01-10T12:40:39.8484730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8484735Z 
2025-01-10T12:40:39.8484809Z >   ???
2025-01-10T12:40:39.8484933Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8485010Z E   
2025-01-10T12:40:39.8485140Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8485256Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8485330Z E          ...
2025-01-10T12:40:39.8485423Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8485549Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8485770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8485848Z E          ...
2025-01-10T12:40:39.8485934Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8486171Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8486277Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8486281Z 
2025-01-10T12:40:39.8486373Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8486579Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-10T12:40:39.8486584Z 
2025-01-10T12:40:39.8486719Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8486843Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8486941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8487073Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8487200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8487299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8487383Z err_msg = None
2025-01-10T12:40:39.8487388Z 
2025-01-10T12:40:39.8487509Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8487590Z         if err_msg is None:
2025-01-10T12:40:39.8487688Z             if left.shape != right.shape:
2025-01-10T12:40:39.8487772Z                 raise_assert_detail(
2025-01-10T12:40:39.8487923Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8487995Z                 )
2025-01-10T12:40:39.8488070Z     
2025-01-10T12:40:39.8488151Z             diff = 0
2025-01-10T12:40:39.8488267Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8488359Z                 # count up differences
2025-01-10T12:40:39.8488546Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8488630Z                     diff += 1
2025-01-10T12:40:39.8488703Z     
2025-01-10T12:40:39.8488796Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8488947Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8489125Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8489236Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8489314Z E           
2025-01-10T12:40:39.8489424Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8489806Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8490068Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8490073Z 
2025-01-10T12:40:39.8490370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8490375Z 
2025-01-10T12:40:39.8490544Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8490553Z 
2025-01-10T12:40:39.8490778Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7f9b0>
2025-01-10T12:40:39.8490940Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8491038Z attr = 'lines'
2025-01-10T12:40:39.8491168Z 
2025-01-10T12:40:39.8491305Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8491425Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8491511Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8491589Z         try:
2025-01-10T12:40:39.8491727Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8491813Z         except KeyError:
2025-01-10T12:40:39.8491951Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8492027Z     
2025-01-10T12:40:39.8492113Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8492212Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8492310Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8492442Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8492532Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8492621Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8492736Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8492816Z             else:
2025-01-10T12:40:39.8492915Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8493020Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8493025Z 
2025-01-10T12:40:39.8493154Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8493265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8493415Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8493486Z     ???
2025-01-10T12:40:39.8493599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8493609Z 
2025-01-10T12:40:39.8493685Z >   ???
2025-01-10T12:40:39.8493811Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8493887Z E   
2025-01-10T12:40:39.8494015Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8494130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8494208Z E          ...
2025-01-10T12:40:39.8494303Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8494430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8494548Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8494622Z E          ...
2025-01-10T12:40:39.8494713Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8494838Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8494947Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8495041Z 
2025-01-10T12:40:39.8495136Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8495386Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-10T12:40:39.8495390Z 
2025-01-10T12:40:39.8495611Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fa70>
2025-01-10T12:40:39.8495780Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8495873Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8495878Z 
2025-01-10T12:40:39.8496012Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8496316Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8496406Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8496484Z         try:
2025-01-10T12:40:39.8496624Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8496709Z         except KeyError:
2025-01-10T12:40:39.8496851Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8496928Z     
2025-01-10T12:40:39.8497018Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8497114Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8497207Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8497336Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8497555Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8497648Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8497768Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8497772Z 
2025-01-10T12:40:39.8497902Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8498018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8498022Z 
2025-01-10T12:40:39.8498194Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8498282Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8498399Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8498482Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8498630Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8498715Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8498843Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8498941Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8499025Z err_msg = None
2025-01-10T12:40:39.8499029Z 
2025-01-10T12:40:39.8499141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8499255Z         if err_msg is None:
2025-01-10T12:40:39.8499424Z             if left.shape != right.shape:
2025-01-10T12:40:39.8499566Z                 raise_assert_detail(
2025-01-10T12:40:39.8499813Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8499936Z                 )
2025-01-10T12:40:39.8500066Z     
2025-01-10T12:40:39.8500191Z             diff = 0
2025-01-10T12:40:39.8500367Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8500460Z                 # count up differences
2025-01-10T12:40:39.8500634Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8500717Z                     diff += 1
2025-01-10T12:40:39.8500794Z     
2025-01-10T12:40:39.8500882Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8501020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8501188Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8501304Z E           AssertionError: Series are different
2025-01-10T12:40:39.8501381Z E           
2025-01-10T12:40:39.8501483Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8501845Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8502305Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8502630Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8502640Z 
2025-01-10T12:40:39.8502955Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8503283Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-10T12:40:39.8503288Z 
2025-01-10T12:40:39.8503512Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fb30>
2025-01-10T12:40:39.8503690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8503782Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8503787Z 
2025-01-10T12:40:39.8503932Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8504049Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8504138Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8504216Z         try:
2025-01-10T12:40:39.8504361Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8504443Z         except KeyError:
2025-01-10T12:40:39.8504586Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8504661Z     
2025-01-10T12:40:39.8504751Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8504852Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8504947Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8505082Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8505173Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8505268Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8505378Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8505382Z 
2025-01-10T12:40:39.8505514Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8505627Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8505635Z 
2025-01-10T12:40:39.8505775Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8505859Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8505975Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8506218Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8506411Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8506503Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8506608Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8506692Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8506771Z err_msg = None
2025-01-10T12:40:39.8506775Z 
2025-01-10T12:40:39.8506887Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8506970Z         if err_msg is None:
2025-01-10T12:40:39.8507070Z             if left.shape != right.shape:
2025-01-10T12:40:39.8507300Z                 raise_assert_detail(
2025-01-10T12:40:39.8507449Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8507523Z                 )
2025-01-10T12:40:39.8507599Z     
2025-01-10T12:40:39.8507673Z             diff = 0
2025-01-10T12:40:39.8507795Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8507887Z                 # count up differences
2025-01-10T12:40:39.8508055Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8508138Z                     diff += 1
2025-01-10T12:40:39.8508209Z     
2025-01-10T12:40:39.8508299Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8508434Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8508615Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8508719Z E           AssertionError: Series are different
2025-01-10T12:40:39.8508801Z E           
2025-01-10T12:40:39.8508902Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8509265Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8509750Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8510122Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8510136Z 
2025-01-10T12:40:39.8510444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8510653Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-10T12:40:39.8510658Z 
2025-01-10T12:40:39.8510784Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8510916Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8511018Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8511153Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8511275Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8511377Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8511459Z err_msg = None
2025-01-10T12:40:39.8511464Z 
2025-01-10T12:40:39.8511570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8511656Z         if err_msg is None:
2025-01-10T12:40:39.8511750Z             if left.shape != right.shape:
2025-01-10T12:40:39.8511840Z                 raise_assert_detail(
2025-01-10T12:40:39.8511983Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8512065Z                 )
2025-01-10T12:40:39.8512137Z     
2025-01-10T12:40:39.8512218Z             diff = 0
2025-01-10T12:40:39.8512414Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8512507Z                 # count up differences
2025-01-10T12:40:39.8512672Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8512758Z                     diff += 1
2025-01-10T12:40:39.8512838Z     
2025-01-10T12:40:39.8512924Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8513059Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8513228Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8513345Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8513418Z E           
2025-01-10T12:40:39.8513534Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8513788Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8514052Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8514136Z 
2025-01-10T12:40:39.8514442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8514447Z 
2025-01-10T12:40:39.8514613Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8514618Z 
2025-01-10T12:40:39.8514845Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fd70>
2025-01-10T12:40:39.8515048Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>, attr = 'nu'
2025-01-10T12:40:39.8515057Z 
2025-01-10T12:40:39.8515194Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8515316Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8515400Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8515481Z         try:
2025-01-10T12:40:39.8515620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8515704Z         except KeyError:
2025-01-10T12:40:39.8515841Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8515915Z     
2025-01-10T12:40:39.8516002Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8516208Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8516301Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8516435Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8516522Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8516622Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8516732Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8516742Z 
2025-01-10T12:40:39.8516866Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8516983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8517134Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8517212Z     ???
2025-01-10T12:40:39.8517322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8517326Z 
2025-01-10T12:40:39.8517403Z >   ???
2025-01-10T12:40:39.8517531Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8517608Z E   
2025-01-10T12:40:39.8517737Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8517854Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8517931Z E          ...
2025-01-10T12:40:39.8518255Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8518480Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8518667Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8518795Z E          ...
2025-01-10T12:40:39.8518940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8519168Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8519282Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8519288Z 
2025-01-10T12:40:39.8519383Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8519608Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-10T12:40:39.8519613Z 
2025-01-10T12:40:39.8519745Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8519877Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8519982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8520119Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8520242Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8520470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8520550Z err_msg = None
2025-01-10T12:40:39.8520554Z 
2025-01-10T12:40:39.8520668Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8520750Z         if err_msg is None:
2025-01-10T12:40:39.8520851Z             if left.shape != right.shape:
2025-01-10T12:40:39.8520935Z                 raise_assert_detail(
2025-01-10T12:40:39.8521083Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8521161Z                 )
2025-01-10T12:40:39.8521232Z     
2025-01-10T12:40:39.8521310Z             diff = 0
2025-01-10T12:40:39.8521427Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8521519Z                 # count up differences
2025-01-10T12:40:39.8521685Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8521767Z                     diff += 1
2025-01-10T12:40:39.8521842Z     
2025-01-10T12:40:39.8521934Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8522071Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8522243Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8522355Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8522432Z E           
2025-01-10T12:40:39.8522545Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8522807Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8523073Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8523083Z 
2025-01-10T12:40:39.8523389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8523394Z 
2025-01-10T12:40:39.8523567Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8523572Z 
2025-01-10T12:40:39.8523801Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fe30>
2025-01-10T12:40:39.8523966Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8524143Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8524148Z 
2025-01-10T12:40:39.8524286Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8524407Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8524493Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8524576Z         try:
2025-01-10T12:40:39.8524715Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8524804Z         except KeyError:
2025-01-10T12:40:39.8524941Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8525016Z     
2025-01-10T12:40:39.8525107Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8525204Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8525298Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8525430Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8525521Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8525617Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8525732Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8525738Z 
2025-01-10T12:40:39.8525864Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8525979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8526327Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8526405Z     ???
2025-01-10T12:40:39.8526513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8526524Z 
2025-01-10T12:40:39.8526595Z >   ???
2025-01-10T12:40:39.8526726Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8526797Z E   
2025-01-10T12:40:39.8526929Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8527041Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8527125Z E          ...
2025-01-10T12:40:39.8527214Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8527346Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8527456Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8527538Z E          ...
2025-01-10T12:40:39.8527629Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8527758Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8527864Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8527874Z 
2025-01-10T12:40:39.8527964Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8528169Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-10T12:40:39.8528174Z 
2025-01-10T12:40:39.8528299Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8528432Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8528532Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8528668Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8528792Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8528895Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8528972Z err_msg = None
2025-01-10T12:40:39.8528981Z 
2025-01-10T12:40:39.8529088Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8529176Z         if err_msg is None:
2025-01-10T12:40:39.8529271Z             if left.shape != right.shape:
2025-01-10T12:40:39.8529359Z                 raise_assert_detail(
2025-01-10T12:40:39.8529500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8529578Z                 )
2025-01-10T12:40:39.8529648Z     
2025-01-10T12:40:39.8529871Z             diff = 0
2025-01-10T12:40:39.8529983Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8530076Z                 # count up differences
2025-01-10T12:40:39.8530245Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8530329Z                     diff += 1
2025-01-10T12:40:39.8530405Z     
2025-01-10T12:40:39.8530501Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8530636Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8530808Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8530925Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8531000Z E           
2025-01-10T12:40:39.8531116Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8531368Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8531632Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8531748Z 
2025-01-10T12:40:39.8532065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8532070Z 
2025-01-10T12:40:39.8532235Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8532240Z 
2025-01-10T12:40:39.8532466Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6f7fef0>
2025-01-10T12:40:39.8532674Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>, attr = 'f_lu'
2025-01-10T12:40:39.8532679Z 
2025-01-10T12:40:39.8532817Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8532932Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8533023Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8533106Z         try:
2025-01-10T12:40:39.8533244Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8533330Z         except KeyError:
2025-01-10T12:40:39.8533469Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8533544Z     
2025-01-10T12:40:39.8533631Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8533727Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8533814Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8533952Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8534038Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8534139Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8534249Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8534253Z 
2025-01-10T12:40:39.8534381Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8534496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8534644Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8534723Z     ???
2025-01-10T12:40:39.8534830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8534835Z 
2025-01-10T12:40:39.8534911Z >   ???
2025-01-10T12:40:39.8535040Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8535116Z E   
2025-01-10T12:40:39.8535242Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8535358Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8535523Z E          ...
2025-01-10T12:40:39.8535618Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8535744Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8535862Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8535941Z E          ...
2025-01-10T12:40:39.8536034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8536396Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8536578Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8536585Z 
2025-01-10T12:40:39.8536744Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8537111Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-10T12:40:39.8537118Z 
2025-01-10T12:40:39.8537343Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8537477Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8537587Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8537723Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8537850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8538084Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8538162Z err_msg = None
2025-01-10T12:40:39.8538166Z 
2025-01-10T12:40:39.8538279Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8538361Z         if err_msg is None:
2025-01-10T12:40:39.8538460Z             if left.shape != right.shape:
2025-01-10T12:40:39.8538551Z                 raise_assert_detail(
2025-01-10T12:40:39.8538700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8538773Z                 )
2025-01-10T12:40:39.8538849Z     
2025-01-10T12:40:39.8538923Z             diff = 0
2025-01-10T12:40:39.8539044Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8539136Z                 # count up differences
2025-01-10T12:40:39.8539305Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8539389Z                     diff += 1
2025-01-10T12:40:39.8539465Z     
2025-01-10T12:40:39.8539559Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8539696Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8539869Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8539979Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8540058Z E           
2025-01-10T12:40:39.8540168Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8540423Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8540685Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8540695Z 
2025-01-10T12:40:39.8540996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8541001Z 
2025-01-10T12:40:39.8541171Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8541176Z 
2025-01-10T12:40:39.8541394Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa86b0>
2025-01-10T12:40:39.8541686Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8541770Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8541775Z 
2025-01-10T12:40:39.8541909Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8542028Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8542118Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8542195Z         try:
2025-01-10T12:40:39.8542332Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8542422Z         except KeyError:
2025-01-10T12:40:39.8542558Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8542635Z     
2025-01-10T12:40:39.8542723Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8542822Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8542912Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8543053Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8543150Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8543242Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8543359Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8543434Z             else:
2025-01-10T12:40:39.8543537Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8543735Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8543740Z 
2025-01-10T12:40:39.8543871Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8543987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8544137Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8544211Z     ???
2025-01-10T12:40:39.8544329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8544334Z 
2025-01-10T12:40:39.8544409Z >   ???
2025-01-10T12:40:39.8544536Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8544616Z E   
2025-01-10T12:40:39.8544746Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8544863Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8544941Z E          ...
2025-01-10T12:40:39.8545043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8545178Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8545299Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8545377Z E          ...
2025-01-10T12:40:39.8545474Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8545603Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8545715Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8545720Z 
2025-01-10T12:40:39.8545815Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8546031Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-10T12:40:39.8546040Z 
2025-01-10T12:40:39.8546370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8546508Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8546613Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8546754Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8546885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8546984Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8547066Z err_msg = None
2025-01-10T12:40:39.8547070Z 
2025-01-10T12:40:39.8547183Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8547265Z         if err_msg is None:
2025-01-10T12:40:39.8547365Z             if left.shape != right.shape:
2025-01-10T12:40:39.8547449Z                 raise_assert_detail(
2025-01-10T12:40:39.8547725Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8547799Z                 )
2025-01-10T12:40:39.8547876Z     
2025-01-10T12:40:39.8547951Z             diff = 0
2025-01-10T12:40:39.8548071Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8548167Z                 # count up differences
2025-01-10T12:40:39.8548342Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8548430Z                     diff += 1
2025-01-10T12:40:39.8548507Z     
2025-01-10T12:40:39.8548597Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8548739Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8548913Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8549027Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8549105Z E           
2025-01-10T12:40:39.8549224Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8549484Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8549871Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8549881Z 
2025-01-10T12:40:39.8550184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8550189Z 
2025-01-10T12:40:39.8550370Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8550376Z 
2025-01-10T12:40:39.8550600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa8770>
2025-01-10T12:40:39.8550772Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8550853Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8550862Z 
2025-01-10T12:40:39.8551004Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8551124Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8551212Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8551291Z         try:
2025-01-10T12:40:39.8551434Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8551526Z         except KeyError:
2025-01-10T12:40:39.8551664Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8551743Z     
2025-01-10T12:40:39.8551831Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8551934Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8552022Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8552160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8552246Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8552341Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8552458Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8552539Z             else:
2025-01-10T12:40:39.8552636Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8552749Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8552753Z 
2025-01-10T12:40:39.8552886Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8553000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8553151Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8553226Z     ???
2025-01-10T12:40:39.8553432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8553437Z 
2025-01-10T12:40:39.8553509Z >   ???
2025-01-10T12:40:39.8553646Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8553723Z E   
2025-01-10T12:40:39.8553856Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8553970Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8554092Z E          ...
2025-01-10T12:40:39.8554481Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8554759Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8566732Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8566906Z E          ...
2025-01-10T12:40:39.8567076Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8567308Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8567503Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8567520Z 
2025-01-10T12:40:39.8567678Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8568004Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-10T12:40:39.8568010Z 
2025-01-10T12:40:39.8568152Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8568483Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8568609Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8568756Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8568898Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8568999Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8569084Z err_msg = None
2025-01-10T12:40:39.8569089Z 
2025-01-10T12:40:39.8569214Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8569304Z         if err_msg is None:
2025-01-10T12:40:39.8569405Z             if left.shape != right.shape:
2025-01-10T12:40:39.8569498Z                 raise_assert_detail(
2025-01-10T12:40:39.8569659Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8569750Z                 )
2025-01-10T12:40:39.8569828Z     
2025-01-10T12:40:39.8569907Z             diff = 0
2025-01-10T12:40:39.8570027Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8570114Z                 # count up differences
2025-01-10T12:40:39.8570291Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8570370Z                     diff += 1
2025-01-10T12:40:39.8570446Z     
2025-01-10T12:40:39.8570538Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8570681Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8570859Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8570981Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8571055Z E           
2025-01-10T12:40:39.8571175Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8571439Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8571705Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8571830Z 
2025-01-10T12:40:39.8572154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8572159Z 
2025-01-10T12:40:39.8572332Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8572343Z 
2025-01-10T12:40:39.8572573Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa88f0>
2025-01-10T12:40:39.8572748Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c3c6b5c0>
2025-01-10T12:40:39.8572826Z attr = 'j_blues'
2025-01-10T12:40:39.8572830Z 
2025-01-10T12:40:39.8572975Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8573094Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8573185Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8573260Z         try:
2025-01-10T12:40:39.8573408Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8573552Z         except KeyError:
2025-01-10T12:40:39.8573815Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8573938Z     
2025-01-10T12:40:39.8574095Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8574264Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8574414Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8574792Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8574934Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8575083Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8575200Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8575280Z             else:
2025-01-10T12:40:39.8575375Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8575487Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8575492Z 
2025-01-10T12:40:39.8575620Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8575741Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8575896Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8575978Z     ???
2025-01-10T12:40:39.8576291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8576307Z 
2025-01-10T12:40:39.8576384Z >   ???
2025-01-10T12:40:39.8576526Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8576601Z E   
2025-01-10T12:40:39.8576740Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8576856Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8576937Z E          ...
2025-01-10T12:40:39.8577032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8577170Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8577284Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8577363Z E          ...
2025-01-10T12:40:39.8577456Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8577588Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8577703Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8577707Z 
2025-01-10T12:40:39.8577803Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8578027Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-10T12:40:39.8578032Z 
2025-01-10T12:40:39.8578166Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8578307Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8578410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8578560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8578688Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8578929Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8579014Z err_msg = None
2025-01-10T12:40:39.8579018Z 
2025-01-10T12:40:39.8579133Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8579222Z         if err_msg is None:
2025-01-10T12:40:39.8579328Z             if left.shape != right.shape:
2025-01-10T12:40:39.8579420Z                 raise_assert_detail(
2025-01-10T12:40:39.8579569Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8579651Z                 )
2025-01-10T12:40:39.8579724Z     
2025-01-10T12:40:39.8579808Z             diff = 0
2025-01-10T12:40:39.8580001Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8580150Z                 # count up differences
2025-01-10T12:40:39.8580381Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8580472Z                     diff += 1
2025-01-10T12:40:39.8580559Z     
2025-01-10T12:40:39.8580651Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8580799Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8580971Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8581220Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8581300Z E           
2025-01-10T12:40:39.8581419Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8581678Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8581941Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8581951Z 
2025-01-10T12:40:39.8582266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8582276Z 
2025-01-10T12:40:39.8582447Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8582451Z 
2025-01-10T12:40:39.8582680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9670>
2025-01-10T12:40:39.8582848Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8582934Z attr = 'lines'
2025-01-10T12:40:39.8582938Z 
2025-01-10T12:40:39.8583083Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8583202Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8583298Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8583371Z         try:
2025-01-10T12:40:39.8583520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8583602Z         except KeyError:
2025-01-10T12:40:39.8583746Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8583821Z     
2025-01-10T12:40:39.8583913Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8584009Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8584106Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8584237Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8584331Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8584422Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8584539Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8584618Z             else:
2025-01-10T12:40:39.8584714Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8584917Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8584922Z 
2025-01-10T12:40:39.8585048Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8585172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8585319Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8585402Z     ???
2025-01-10T12:40:39.8585517Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8585522Z 
2025-01-10T12:40:39.8585597Z >   ???
2025-01-10T12:40:39.8585727Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8585804Z E   
2025-01-10T12:40:39.8585937Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8586050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8586330Z E          ...
2025-01-10T12:40:39.8586426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8586573Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8586687Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8586767Z E          ...
2025-01-10T12:40:39.8586859Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8586992Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8587223Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8587229Z 
2025-01-10T12:40:39.8587324Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8587588Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-10T12:40:39.8587599Z 
2025-01-10T12:40:39.8587821Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9730>
2025-01-10T12:40:39.8587991Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8588081Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8588090Z 
2025-01-10T12:40:39.8588232Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8588348Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8588438Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8588511Z         try:
2025-01-10T12:40:39.8588663Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8588749Z         except KeyError:
2025-01-10T12:40:39.8588889Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8588962Z     
2025-01-10T12:40:39.8589055Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8589155Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8589243Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8589382Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8589472Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8589566Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8589677Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8589685Z 
2025-01-10T12:40:39.8589814Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8589931Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8589936Z 
2025-01-10T12:40:39.8590078Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8590173Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8590294Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8590383Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8590526Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8590616Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8590722Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8590808Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8591029Z err_msg = None
2025-01-10T12:40:39.8591033Z 
2025-01-10T12:40:39.8591149Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8591237Z         if err_msg is None:
2025-01-10T12:40:39.8591337Z             if left.shape != right.shape:
2025-01-10T12:40:39.8591423Z                 raise_assert_detail(
2025-01-10T12:40:39.8591579Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8591657Z                 )
2025-01-10T12:40:39.8591729Z     
2025-01-10T12:40:39.8591810Z             diff = 0
2025-01-10T12:40:39.8591923Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8592016Z                 # count up differences
2025-01-10T12:40:39.8592186Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8592294Z                     diff += 1
2025-01-10T12:40:39.8592371Z     
2025-01-10T12:40:39.8592466Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8592605Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8592783Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8592887Z E           AssertionError: Series are different
2025-01-10T12:40:39.8592965Z E           
2025-01-10T12:40:39.8593152Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8593520Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8593845Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8594169Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8594185Z 
2025-01-10T12:40:39.8594493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8594755Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-10T12:40:39.8594760Z 
2025-01-10T12:40:39.8594980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa97f0>
2025-01-10T12:40:39.8595149Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8595242Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8595246Z 
2025-01-10T12:40:39.8595388Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8595509Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8595593Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8595668Z         try:
2025-01-10T12:40:39.8596190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8596279Z         except KeyError:
2025-01-10T12:40:39.8596420Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8596495Z     
2025-01-10T12:40:39.8596582Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8596681Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8596771Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8597050Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8597141Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8597229Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8597340Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8597345Z 
2025-01-10T12:40:39.8597474Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8597591Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8597595Z 
2025-01-10T12:40:39.8597730Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8597816Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8597924Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8598005Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8598142Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8598230Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8598336Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8598414Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8598492Z err_msg = None
2025-01-10T12:40:39.8598496Z 
2025-01-10T12:40:39.8598759Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8598844Z         if err_msg is None:
2025-01-10T12:40:39.8598937Z             if left.shape != right.shape:
2025-01-10T12:40:39.8599023Z                 raise_assert_detail(
2025-01-10T12:40:39.8599168Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8599242Z                 )
2025-01-10T12:40:39.8599311Z     
2025-01-10T12:40:39.8599401Z             diff = 0
2025-01-10T12:40:39.8599606Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8599764Z                 # count up differences
2025-01-10T12:40:39.8600071Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8600204Z                     diff += 1
2025-01-10T12:40:39.8600325Z     
2025-01-10T12:40:39.8600468Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8600695Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8600989Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8601100Z E           AssertionError: Series are different
2025-01-10T12:40:39.8601172Z E           
2025-01-10T12:40:39.8601275Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8601635Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8602005Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8602377Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8602477Z 
2025-01-10T12:40:39.8602792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8602996Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-10T12:40:39.8603000Z 
2025-01-10T12:40:39.8603131Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8603266Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8603369Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8603502Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8603629Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8603726Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8603801Z err_msg = None
2025-01-10T12:40:39.8603809Z 
2025-01-10T12:40:39.8603922Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8604004Z         if err_msg is None:
2025-01-10T12:40:39.8604102Z             if left.shape != right.shape:
2025-01-10T12:40:39.8604186Z                 raise_assert_detail(
2025-01-10T12:40:39.8604332Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8604490Z                 )
2025-01-10T12:40:39.8604563Z     
2025-01-10T12:40:39.8604637Z             diff = 0
2025-01-10T12:40:39.8604758Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8604845Z                 # count up differences
2025-01-10T12:40:39.8605020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8605099Z                     diff += 1
2025-01-10T12:40:39.8605176Z     
2025-01-10T12:40:39.8605271Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8605409Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8605588Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8605704Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8605781Z E           
2025-01-10T12:40:39.8605897Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8606289Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8606547Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8606561Z 
2025-01-10T12:40:39.8606871Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8606876Z 
2025-01-10T12:40:39.8607054Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8607067Z 
2025-01-10T12:40:39.8607294Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9a30>
2025-01-10T12:40:39.8607496Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>, attr = 'nu'
2025-01-10T12:40:39.8607500Z 
2025-01-10T12:40:39.8607643Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8607762Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8607856Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8607930Z         try:
2025-01-10T12:40:39.8608075Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8608158Z         except KeyError:
2025-01-10T12:40:39.8608426Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8608499Z     
2025-01-10T12:40:39.8608592Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8608687Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8608783Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8608919Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8609011Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8609101Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8609218Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8609222Z 
2025-01-10T12:40:39.8609351Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8609465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8609616Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8609690Z     ???
2025-01-10T12:40:39.8609810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8609815Z 
2025-01-10T12:40:39.8609886Z >   ???
2025-01-10T12:40:39.8610020Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8610090Z E   
2025-01-10T12:40:39.8610222Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8610453Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8610532Z E          ...
2025-01-10T12:40:39.8610621Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8610756Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8610874Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8610948Z E          ...
2025-01-10T12:40:39.8611041Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8611167Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8611277Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8611287Z 
2025-01-10T12:40:39.8611376Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8611609Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-10T12:40:39.8611615Z 
2025-01-10T12:40:39.8611745Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8611888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8611994Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8612126Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8612254Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8612350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8612432Z err_msg = None
2025-01-10T12:40:39.8612436Z 
2025-01-10T12:40:39.8612551Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8612639Z         if err_msg is None:
2025-01-10T12:40:39.8612734Z             if left.shape != right.shape:
2025-01-10T12:40:39.8612826Z                 raise_assert_detail(
2025-01-10T12:40:39.8612973Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8613056Z                 )
2025-01-10T12:40:39.8613131Z     
2025-01-10T12:40:39.8613206Z             diff = 0
2025-01-10T12:40:39.8613324Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8613412Z                 # count up differences
2025-01-10T12:40:39.8613587Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8613669Z                     diff += 1
2025-01-10T12:40:39.8613745Z     
2025-01-10T12:40:39.8613833Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8613972Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8614232Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8614351Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8614425Z E           
2025-01-10T12:40:39.8614543Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8614803Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8615064Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8615073Z 
2025-01-10T12:40:39.8615383Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8615387Z 
2025-01-10T12:40:39.8615555Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8615640Z 
2025-01-10T12:40:39.8615867Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9af0>
2025-01-10T12:40:39.8616038Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8616242Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8616248Z 
2025-01-10T12:40:39.8616393Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8616511Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8616600Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8616673Z         try:
2025-01-10T12:40:39.8616816Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8616903Z         except KeyError:
2025-01-10T12:40:39.8617050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8617120Z     
2025-01-10T12:40:39.8617213Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8617310Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8617399Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8617542Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8617629Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8617725Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8617835Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8617839Z 
2025-01-10T12:40:39.8617967Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8618080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8618317Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8618464Z     ???
2025-01-10T12:40:39.8618662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8618669Z 
2025-01-10T12:40:39.8618793Z >   ???
2025-01-10T12:40:39.8619007Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8619131Z E   
2025-01-10T12:40:39.8619358Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8619518Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8619598Z E          ...
2025-01-10T12:40:39.8619690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8619822Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8619940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8620015Z E          ...
2025-01-10T12:40:39.8620107Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8620233Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8620499Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8620503Z 
2025-01-10T12:40:39.8620597Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8620799Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-10T12:40:39.8620803Z 
2025-01-10T12:40:39.8620935Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8621065Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8621167Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8621300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8621427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8621524Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8621607Z err_msg = None
2025-01-10T12:40:39.8621616Z 
2025-01-10T12:40:39.8621730Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8621812Z         if err_msg is None:
2025-01-10T12:40:39.8621912Z             if left.shape != right.shape:
2025-01-10T12:40:39.8621998Z                 raise_assert_detail(
2025-01-10T12:40:39.8622145Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8622334Z                 )
2025-01-10T12:40:39.8622409Z     
2025-01-10T12:40:39.8622484Z             diff = 0
2025-01-10T12:40:39.8622609Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8622702Z                 # count up differences
2025-01-10T12:40:39.8622878Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8622958Z                     diff += 1
2025-01-10T12:40:39.8623035Z     
2025-01-10T12:40:39.8623125Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8623266Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8623447Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8623560Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8623642Z E           
2025-01-10T12:40:39.8623755Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8624017Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8624271Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8624289Z 
2025-01-10T12:40:39.8624590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8624596Z 
2025-01-10T12:40:39.8624770Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8624777Z 
2025-01-10T12:40:39.8625002Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fa9bb0>
2025-01-10T12:40:39.8625212Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>, attr = 'f_lu'
2025-01-10T12:40:39.8625216Z 
2025-01-10T12:40:39.8625356Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8625478Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8625563Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8625642Z         try:
2025-01-10T12:40:39.8625787Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8625960Z         except KeyError:
2025-01-10T12:40:39.8626304Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8626389Z     
2025-01-10T12:40:39.8626486Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8626580Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8626674Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8626813Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8626909Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8626998Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8627114Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8627119Z 
2025-01-10T12:40:39.8627242Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8627362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8627511Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8627589Z     ???
2025-01-10T12:40:39.8627704Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8627709Z 
2025-01-10T12:40:39.8627780Z >   ???
2025-01-10T12:40:39.8627911Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8627983Z E   
2025-01-10T12:40:39.8628115Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8628353Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8628439Z E          ...
2025-01-10T12:40:39.8628526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8628663Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8628777Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8628856Z E          ...
2025-01-10T12:40:39.8628947Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8629077Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8629192Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8629197Z 
2025-01-10T12:40:39.8629288Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8629513Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-10T12:40:39.8629517Z 
2025-01-10T12:40:39.8629646Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8629789Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8629890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8630030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8630174Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8630270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8630354Z err_msg = None
2025-01-10T12:40:39.8630362Z 
2025-01-10T12:40:39.8630472Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8630560Z         if err_msg is None:
2025-01-10T12:40:39.8630655Z             if left.shape != right.shape:
2025-01-10T12:40:39.8630746Z                 raise_assert_detail(
2025-01-10T12:40:39.8630888Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8630972Z                 )
2025-01-10T12:40:39.8631043Z     
2025-01-10T12:40:39.8631122Z             diff = 0
2025-01-10T12:40:39.8631235Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8631330Z                 # count up differences
2025-01-10T12:40:39.8631505Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8631585Z                     diff += 1
2025-01-10T12:40:39.8631661Z     
2025-01-10T12:40:39.8631749Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8631889Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8632180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8632298Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8632372Z E           
2025-01-10T12:40:39.8632489Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8632748Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8633007Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8633017Z 
2025-01-10T12:40:39.8633321Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8633325Z 
2025-01-10T12:40:39.8633491Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8633572Z 
2025-01-10T12:40:39.8633799Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6faa330>
2025-01-10T12:40:39.8633971Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8634052Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8634057Z 
2025-01-10T12:40:39.8634198Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8634313Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8634403Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8634476Z         try:
2025-01-10T12:40:39.8634619Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8634708Z         except KeyError:
2025-01-10T12:40:39.8634851Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8634922Z     
2025-01-10T12:40:39.8635014Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8635107Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8635208Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8635341Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8635434Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8635530Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8635641Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8635719Z             else:
2025-01-10T12:40:39.8635814Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8635928Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8635933Z 
2025-01-10T12:40:39.8636159Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8636288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8636432Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8636510Z     ???
2025-01-10T12:40:39.8636619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8636637Z 
2025-01-10T12:40:39.8636708Z >   ???
2025-01-10T12:40:39.8636839Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8636909Z E   
2025-01-10T12:40:39.8637107Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8637296Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8637425Z E          ...
2025-01-10T12:40:39.8637570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8637787Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8637974Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8638252Z E          ...
2025-01-10T12:40:39.8638346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8638488Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8638593Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8638603Z 
2025-01-10T12:40:39.8638697Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8638924Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-10T12:40:39.8638929Z 
2025-01-10T12:40:39.8639054Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8639184Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8639282Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8639417Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8639538Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8639644Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8639727Z err_msg = None
2025-01-10T12:40:39.8639732Z 
2025-01-10T12:40:39.8639841Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8640064Z         if err_msg is None:
2025-01-10T12:40:39.8640159Z             if left.shape != right.shape:
2025-01-10T12:40:39.8640249Z                 raise_assert_detail(
2025-01-10T12:40:39.8640393Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8640472Z                 )
2025-01-10T12:40:39.8640546Z     
2025-01-10T12:40:39.8640625Z             diff = 0
2025-01-10T12:40:39.8640736Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8640827Z                 # count up differences
2025-01-10T12:40:39.8640996Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8641089Z                     diff += 1
2025-01-10T12:40:39.8641161Z     
2025-01-10T12:40:39.8641255Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8641393Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8641563Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8641685Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8641759Z E           
2025-01-10T12:40:39.8641875Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8642127Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8642390Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8642400Z 
2025-01-10T12:40:39.8642714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8642718Z 
2025-01-10T12:40:39.8642886Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8642890Z 
2025-01-10T12:40:39.8643116Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6faa3f0>
2025-01-10T12:40:39.8643282Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8643370Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8643374Z 
2025-01-10T12:40:39.8643510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8643632Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8643813Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8643887Z         try:
2025-01-10T12:40:39.8644031Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8644112Z         except KeyError:
2025-01-10T12:40:39.8644253Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8644329Z     
2025-01-10T12:40:39.8644422Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8644514Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8644610Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8644740Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8644830Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8644921Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8645036Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8645116Z             else:
2025-01-10T12:40:39.8645215Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8645330Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8645335Z 
2025-01-10T12:40:39.8645460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8645578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8645828Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8645906Z     ???
2025-01-10T12:40:39.8646014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8646018Z 
2025-01-10T12:40:39.8646321Z >   ???
2025-01-10T12:40:39.8646476Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8646555Z E   
2025-01-10T12:40:39.8646683Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8646799Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8646878Z E          ...
2025-01-10T12:40:39.8646975Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8647110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8647221Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8647300Z E          ...
2025-01-10T12:40:39.8647386Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8647522Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8647626Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8647631Z 
2025-01-10T12:40:39.8647725Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8647931Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-10T12:40:39.8647936Z 
2025-01-10T12:40:39.8648071Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8648203Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8648307Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8648443Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8648568Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8648675Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8648755Z err_msg = None
2025-01-10T12:40:39.8648760Z 
2025-01-10T12:40:39.8648876Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8648959Z         if err_msg is None:
2025-01-10T12:40:39.8649059Z             if left.shape != right.shape:
2025-01-10T12:40:39.8649145Z                 raise_assert_detail(
2025-01-10T12:40:39.8649292Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8649371Z                 )
2025-01-10T12:40:39.8649442Z     
2025-01-10T12:40:39.8649522Z             diff = 0
2025-01-10T12:40:39.8649768Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8649861Z                 # count up differences
2025-01-10T12:40:39.8650031Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8650117Z                     diff += 1
2025-01-10T12:40:39.8650189Z     
2025-01-10T12:40:39.8650288Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8650425Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8650600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8650714Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8650794Z E           
2025-01-10T12:40:39.8650911Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8651163Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8651426Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8651541Z 
2025-01-10T12:40:39.8651847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8651858Z 
2025-01-10T12:40:39.8652025Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8652030Z 
2025-01-10T12:40:39.8652258Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6faa570>
2025-01-10T12:40:39.8652423Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6d98d70>
2025-01-10T12:40:39.8652509Z attr = 'j_blues'
2025-01-10T12:40:39.8652513Z 
2025-01-10T12:40:39.8652650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8652771Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8652856Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8652942Z         try:
2025-01-10T12:40:39.8653081Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8653168Z         except KeyError:
2025-01-10T12:40:39.8653305Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8653382Z     
2025-01-10T12:40:39.8653482Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8653575Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8653674Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8653809Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8653896Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8653995Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8654103Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8654181Z             else:
2025-01-10T12:40:39.8654273Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8654389Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8654398Z 
2025-01-10T12:40:39.8654521Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8654643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8654793Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8654865Z     ???
2025-01-10T12:40:39.8654983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8654988Z 
2025-01-10T12:40:39.8655059Z >   ???
2025-01-10T12:40:39.8655191Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8655262Z E   
2025-01-10T12:40:39.8655502Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8655613Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8655695Z E          ...
2025-01-10T12:40:39.8655796Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8655932Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8656052Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8656333Z E          ...
2025-01-10T12:40:39.8656483Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8656696Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8656878Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8656885Z 
2025-01-10T12:40:39.8657037Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8657401Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-10T12:40:39.8657408Z 
2025-01-10T12:40:39.8657550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8657683Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8657780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8657916Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8658179Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8658275Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8658361Z err_msg = None
2025-01-10T12:40:39.8658365Z 
2025-01-10T12:40:39.8658477Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8658566Z         if err_msg is None:
2025-01-10T12:40:39.8658664Z             if left.shape != right.shape:
2025-01-10T12:40:39.8658758Z                 raise_assert_detail(
2025-01-10T12:40:39.8658904Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8658988Z                 )
2025-01-10T12:40:39.8659059Z     
2025-01-10T12:40:39.8659138Z             diff = 0
2025-01-10T12:40:39.8659251Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8659346Z                 # count up differences
2025-01-10T12:40:39.8659532Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8659612Z                     diff += 1
2025-01-10T12:40:39.8659688Z     
2025-01-10T12:40:39.8659777Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8659918Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8660092Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8660212Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8660286Z E           
2025-01-10T12:40:39.8660404Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8660663Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8660929Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8660934Z 
2025-01-10T12:40:39.8661245Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8661250Z 
2025-01-10T12:40:39.8661419Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8661537Z 
2025-01-10T12:40:39.8661769Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab2f0>
2025-01-10T12:40:39.8661933Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8662016Z attr = 'lines'
2025-01-10T12:40:39.8662020Z 
2025-01-10T12:40:39.8662168Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8662285Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8662376Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8662449Z         try:
2025-01-10T12:40:39.8662592Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8662676Z         except KeyError:
2025-01-10T12:40:39.8662823Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8662895Z     
2025-01-10T12:40:39.8662988Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8663085Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8663184Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8663315Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8663408Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8663502Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8663616Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8663800Z             else:
2025-01-10T12:40:39.8663895Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8664010Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8664015Z 
2025-01-10T12:40:39.8664141Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8664266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8664415Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8664498Z     ???
2025-01-10T12:40:39.8664608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8664617Z 
2025-01-10T12:40:39.8664693Z >   ???
2025-01-10T12:40:39.8664825Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8664897Z E   
2025-01-10T12:40:39.8665032Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8665145Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8665228Z E          ...
2025-01-10T12:40:39.8665322Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8665459Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8665574Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8665653Z E          ...
2025-01-10T12:40:39.8665741Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8665871Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8665979Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8665983Z 
2025-01-10T12:40:39.8666260Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8666580Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-10T12:40:39.8666587Z 
2025-01-10T12:40:39.8666810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab3b0>
2025-01-10T12:40:39.8666990Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8667080Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8667085Z 
2025-01-10T12:40:39.8667231Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8667347Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8667438Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8667515Z         try:
2025-01-10T12:40:39.8667660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8667741Z         except KeyError:
2025-01-10T12:40:39.8667884Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8668085Z     
2025-01-10T12:40:39.8668173Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8668271Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8668365Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8668504Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8668595Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8668686Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8668794Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8668798Z 
2025-01-10T12:40:39.8668924Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8669035Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8669039Z 
2025-01-10T12:40:39.8669176Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8669267Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8669381Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8669469Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8669610Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8669699Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8669921Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8670006Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8670084Z err_msg = None
2025-01-10T12:40:39.8670089Z 
2025-01-10T12:40:39.8670204Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8670286Z         if err_msg is None:
2025-01-10T12:40:39.8670387Z             if left.shape != right.shape:
2025-01-10T12:40:39.8670472Z                 raise_assert_detail(
2025-01-10T12:40:39.8670620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8670700Z                 )
2025-01-10T12:40:39.8670775Z     
2025-01-10T12:40:39.8670855Z             diff = 0
2025-01-10T12:40:39.8670967Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8671059Z                 # count up differences
2025-01-10T12:40:39.8671228Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8671319Z                     diff += 1
2025-01-10T12:40:39.8671390Z     
2025-01-10T12:40:39.8671483Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8671620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8671796Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8671901Z E           AssertionError: Series are different
2025-01-10T12:40:39.8671979Z E           
2025-01-10T12:40:39.8672086Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8672447Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8672784Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8673107Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8673204Z 
2025-01-10T12:40:39.8673515Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8673805Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-10T12:40:39.8673810Z 
2025-01-10T12:40:39.8674031Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab470>
2025-01-10T12:40:39.8674199Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8674288Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8674298Z 
2025-01-10T12:40:39.8674438Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8674560Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8674647Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8674729Z         try:
2025-01-10T12:40:39.8674869Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8674960Z         except KeyError:
2025-01-10T12:40:39.8675100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8675177Z     
2025-01-10T12:40:39.8675340Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8675630Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8675782Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8676014Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8676285Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8676445Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8676568Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8676572Z 
2025-01-10T12:40:39.8676699Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8676819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8676829Z 
2025-01-10T12:40:39.8676967Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8677059Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8677170Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8677261Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8677400Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8677490Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8677603Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8677682Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8677764Z err_msg = None
2025-01-10T12:40:39.8677768Z 
2025-01-10T12:40:39.8677877Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8677965Z         if err_msg is None:
2025-01-10T12:40:39.8678064Z             if left.shape != right.shape:
2025-01-10T12:40:39.8678154Z                 raise_assert_detail(
2025-01-10T12:40:39.8678294Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8678377Z                 )
2025-01-10T12:40:39.8678449Z     
2025-01-10T12:40:39.8678533Z             diff = 0
2025-01-10T12:40:39.8678650Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8678743Z                 # count up differences
2025-01-10T12:40:39.8678913Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8678998Z                     diff += 1
2025-01-10T12:40:39.8679075Z     
2025-01-10T12:40:39.8679161Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8679306Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8679476Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8679714Z E           AssertionError: Series are different
2025-01-10T12:40:39.8679787Z E           
2025-01-10T12:40:39.8679894Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8680254Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8680631Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8681005Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8681113Z 
2025-01-10T12:40:39.8681418Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8681635Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-10T12:40:39.8681641Z 
2025-01-10T12:40:39.8681771Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8681898Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8682005Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8682137Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8682265Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8682365Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8682448Z err_msg = None
2025-01-10T12:40:39.8682452Z 
2025-01-10T12:40:39.8682567Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8682650Z         if err_msg is None:
2025-01-10T12:40:39.8682753Z             if left.shape != right.shape:
2025-01-10T12:40:39.8682841Z                 raise_assert_detail(
2025-01-10T12:40:39.8682987Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8683061Z                 )
2025-01-10T12:40:39.8683140Z     
2025-01-10T12:40:39.8683215Z             diff = 0
2025-01-10T12:40:39.8683336Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8683424Z                 # count up differences
2025-01-10T12:40:39.8683598Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8683680Z                     diff += 1
2025-01-10T12:40:39.8683763Z     
2025-01-10T12:40:39.8683852Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8683992Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8684165Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8684279Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8684360Z E           
2025-01-10T12:40:39.8684474Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8684732Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8685100Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8685115Z 
2025-01-10T12:40:39.8685415Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8685420Z 
2025-01-10T12:40:39.8685592Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8685597Z 
2025-01-10T12:40:39.8685818Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab6b0>
2025-01-10T12:40:39.8686026Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>, attr = 'nu'
2025-01-10T12:40:39.8686031Z 
2025-01-10T12:40:39.8686391Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8686581Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8686718Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8687042Z         try:
2025-01-10T12:40:39.8687209Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8687292Z         except KeyError:
2025-01-10T12:40:39.8687436Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8687515Z     
2025-01-10T12:40:39.8687609Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8687703Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8687797Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8687929Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8688027Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8688124Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8688241Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8688245Z 
2025-01-10T12:40:39.8688371Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8688494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8688650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8688723Z     ???
2025-01-10T12:40:39.8688836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8688841Z 
2025-01-10T12:40:39.8688910Z >   ???
2025-01-10T12:40:39.8689039Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8689111Z E   
2025-01-10T12:40:39.8689245Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8689360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8689442Z E          ...
2025-01-10T12:40:39.8689538Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8689674Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8689788Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8689868Z E          ...
2025-01-10T12:40:39.8689965Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8690092Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8690202Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8690206Z 
2025-01-10T12:40:39.8690296Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8690553Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-10T12:40:39.8690559Z 
2025-01-10T12:40:39.8690686Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8690826Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8691058Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8691203Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8691334Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8691436Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8691523Z err_msg = None
2025-01-10T12:40:39.8691527Z 
2025-01-10T12:40:39.8691642Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8691729Z         if err_msg is None:
2025-01-10T12:40:39.8691828Z             if left.shape != right.shape:
2025-01-10T12:40:39.8691918Z                 raise_assert_detail(
2025-01-10T12:40:39.8692068Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8692148Z                 )
2025-01-10T12:40:39.8692219Z     
2025-01-10T12:40:39.8692299Z             diff = 0
2025-01-10T12:40:39.8692419Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8692513Z                 # count up differences
2025-01-10T12:40:39.8692688Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8692767Z                     diff += 1
2025-01-10T12:40:39.8692931Z     
2025-01-10T12:40:39.8693022Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8693164Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8693333Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8693456Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8693533Z E           
2025-01-10T12:40:39.8693651Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8693907Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8694171Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8694181Z 
2025-01-10T12:40:39.8694566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8694575Z 
2025-01-10T12:40:39.8694866Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8694873Z 
2025-01-10T12:40:39.8695263Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab770>
2025-01-10T12:40:39.8695572Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8695660Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8695665Z 
2025-01-10T12:40:39.8695811Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8695929Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8696024Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8696278Z         try:
2025-01-10T12:40:39.8696435Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8696520Z         except KeyError:
2025-01-10T12:40:39.8696665Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8696737Z     
2025-01-10T12:40:39.8696832Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8696928Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8697024Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8697161Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8697383Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8697480Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8697598Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8697603Z 
2025-01-10T12:40:39.8697736Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8697857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8698034Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8698108Z     ???
2025-01-10T12:40:39.8698225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8698229Z 
2025-01-10T12:40:39.8698301Z >   ???
2025-01-10T12:40:39.8698437Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8698513Z E   
2025-01-10T12:40:39.8698672Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8698802Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8698881Z E          ...
2025-01-10T12:40:39.8698976Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8699107Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8699227Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8699301Z E          ...
2025-01-10T12:40:39.8699513Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8699640Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8699752Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8699756Z 
2025-01-10T12:40:39.8699847Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8700072Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-10T12:40:39.8700077Z 
2025-01-10T12:40:39.8700211Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8700342Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8700446Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8700581Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8700711Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8700810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8700894Z err_msg = None
2025-01-10T12:40:39.8700898Z 
2025-01-10T12:40:39.8701010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8701100Z         if err_msg is None:
2025-01-10T12:40:39.8701202Z             if left.shape != right.shape:
2025-01-10T12:40:39.8701288Z                 raise_assert_detail(
2025-01-10T12:40:39.8701441Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8701516Z                 )
2025-01-10T12:40:39.8701593Z     
2025-01-10T12:40:39.8701672Z             diff = 0
2025-01-10T12:40:39.8701790Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8701878Z                 # count up differences
2025-01-10T12:40:39.8702054Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8702137Z                     diff += 1
2025-01-10T12:40:39.8702215Z     
2025-01-10T12:40:39.8702305Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8702448Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8702619Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8702737Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8702817Z E           
2025-01-10T12:40:39.8702930Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8703192Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8703545Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8703557Z 
2025-01-10T12:40:39.8703872Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8703876Z 
2025-01-10T12:40:39.8704050Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8704055Z 
2025-01-10T12:40:39.8704280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fab830>
2025-01-10T12:40:39.8704495Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>, attr = 'f_lu'
2025-01-10T12:40:39.8704500Z 
2025-01-10T12:40:39.8704638Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8704761Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8704945Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8705047Z         try:
2025-01-10T12:40:39.8705195Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8705285Z         except KeyError:
2025-01-10T12:40:39.8705430Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8705503Z     
2025-01-10T12:40:39.8705596Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8705691Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8705785Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8705919Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8706021Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8706304Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8706433Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8706438Z 
2025-01-10T12:40:39.8706568Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8706697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8706868Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8706946Z     ???
2025-01-10T12:40:39.8707061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8707065Z 
2025-01-10T12:40:39.8707138Z >   ???
2025-01-10T12:40:39.8707269Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8707342Z E   
2025-01-10T12:40:39.8707477Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8707588Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8707673Z E          ...
2025-01-10T12:40:39.8707763Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8707901Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8708014Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8708095Z E          ...
2025-01-10T12:40:39.8708189Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8708326Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8708440Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8708444Z 
2025-01-10T12:40:39.8708535Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8708786Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-10T12:40:39.8708792Z 
2025-01-10T12:40:39.8708923Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8709057Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8709491Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8709631Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8709755Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8709859Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8709945Z err_msg = None
2025-01-10T12:40:39.8709950Z 
2025-01-10T12:40:39.8710060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8710150Z         if err_msg is None:
2025-01-10T12:40:39.8710246Z             if left.shape != right.shape:
2025-01-10T12:40:39.8710341Z                 raise_assert_detail(
2025-01-10T12:40:39.8710484Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8710563Z                 )
2025-01-10T12:40:39.8710635Z     
2025-01-10T12:40:39.8710724Z             diff = 0
2025-01-10T12:40:39.8710836Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8710930Z                 # count up differences
2025-01-10T12:40:39.8711101Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8711186Z                     diff += 1
2025-01-10T12:40:39.8711383Z     
2025-01-10T12:40:39.8711474Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8711616Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8711787Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8711904Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8711979Z E           
2025-01-10T12:40:39.8712097Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8712515Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8713008Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8713023Z 
2025-01-10T12:40:39.8713504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8713510Z 
2025-01-10T12:40:39.8713683Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8713688Z 
2025-01-10T12:40:39.8713919Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fabfb0>
2025-01-10T12:40:39.8714104Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8714190Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8714194Z 
2025-01-10T12:40:39.8714337Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8714456Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8714555Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8714629Z         try:
2025-01-10T12:40:39.8714776Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8714857Z         except KeyError:
2025-01-10T12:40:39.8715003Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8715074Z     
2025-01-10T12:40:39.8715168Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8715263Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8715361Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8715498Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8715705Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8715804Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8715915Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8715995Z             else:
2025-01-10T12:40:39.8716206Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8716331Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8716336Z 
2025-01-10T12:40:39.8716464Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8716603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8716760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8716841Z     ???
2025-01-10T12:40:39.8716949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8716959Z 
2025-01-10T12:40:39.8717031Z >   ???
2025-01-10T12:40:39.8717162Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8717241Z E   
2025-01-10T12:40:39.8717379Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8717493Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8717572Z E          ...
2025-01-10T12:40:39.8717664Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8717925Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8718037Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8718119Z E          ...
2025-01-10T12:40:39.8718207Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8718339Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8718447Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8718487Z 
2025-01-10T12:40:39.8718589Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8718840Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-10T12:40:39.8718852Z 
2025-01-10T12:40:39.8718983Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8719118Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8719219Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8719364Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8719489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8719592Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8719671Z err_msg = None
2025-01-10T12:40:39.8719682Z 
2025-01-10T12:40:39.8719793Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8719885Z         if err_msg is None:
2025-01-10T12:40:39.8719981Z             if left.shape != right.shape:
2025-01-10T12:40:39.8720078Z                 raise_assert_detail(
2025-01-10T12:40:39.8720222Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8720307Z                 )
2025-01-10T12:40:39.8720380Z     
2025-01-10T12:40:39.8720465Z             diff = 0
2025-01-10T12:40:39.8720578Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8720679Z                 # count up differences
2025-01-10T12:40:39.8720851Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8720939Z                     diff += 1
2025-01-10T12:40:39.8721014Z     
2025-01-10T12:40:39.8721109Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8721245Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8721423Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8721541Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8721737Z E           
2025-01-10T12:40:39.8721857Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8722112Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8722382Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8722388Z 
2025-01-10T12:40:39.8722701Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8722709Z 
2025-01-10T12:40:39.8722876Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8722880Z 
2025-01-10T12:40:39.8723105Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd80b0>
2025-01-10T12:40:39.8723272Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8723438Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8723443Z 
2025-01-10T12:40:39.8723582Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8723704Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8723795Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8723869Z         try:
2025-01-10T12:40:39.8724014Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8724097Z         except KeyError:
2025-01-10T12:40:39.8724239Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8724311Z     
2025-01-10T12:40:39.8724406Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8724506Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8724602Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8724733Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8724827Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8724923Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8725041Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8725117Z             else:
2025-01-10T12:40:39.8725218Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8725329Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8725333Z 
2025-01-10T12:40:39.8725456Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8725574Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8725720Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8725803Z     ???
2025-01-10T12:40:39.8725915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8726032Z 
2025-01-10T12:40:39.8726309Z >   ???
2025-01-10T12:40:39.8726455Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8726537Z E   
2025-01-10T12:40:39.8726669Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8726796Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8726878Z E          ...
2025-01-10T12:40:39.8726970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8727107Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8727224Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8727304Z E          ...
2025-01-10T12:40:39.8727393Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8727525Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8727764Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8727769Z 
2025-01-10T12:40:39.8727866Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8728103Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-10T12:40:39.8728108Z 
2025-01-10T12:40:39.8728248Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8728393Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8728494Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8728634Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8728763Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8728864Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8728941Z err_msg = None
2025-01-10T12:40:39.8728950Z 
2025-01-10T12:40:39.8729068Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8729151Z         if err_msg is None:
2025-01-10T12:40:39.8729256Z             if left.shape != right.shape:
2025-01-10T12:40:39.8729343Z                 raise_assert_detail(
2025-01-10T12:40:39.8729497Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8729710Z                 )
2025-01-10T12:40:39.8729782Z     
2025-01-10T12:40:39.8729863Z             diff = 0
2025-01-10T12:40:39.8729978Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8730073Z                 # count up differences
2025-01-10T12:40:39.8730242Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8730329Z                     diff += 1
2025-01-10T12:40:39.8730402Z     
2025-01-10T12:40:39.8730498Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8730635Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8730817Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8730933Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8731012Z E           
2025-01-10T12:40:39.8731165Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8731666Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8732136Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8732151Z 
2025-01-10T12:40:39.8732555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8732568Z 
2025-01-10T12:40:39.8732737Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8732748Z 
2025-01-10T12:40:39.8732979Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd8230>
2025-01-10T12:40:39.8733150Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6dacce0>
2025-01-10T12:40:39.8733235Z attr = 'j_blues'
2025-01-10T12:40:39.8733240Z 
2025-01-10T12:40:39.8733381Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8733505Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8733591Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8733672Z         try:
2025-01-10T12:40:39.8733815Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8733999Z         except KeyError:
2025-01-10T12:40:39.8734139Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8734244Z     
2025-01-10T12:40:39.8734337Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8734431Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8734532Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8734664Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8734768Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8734861Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8734977Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8735050Z             else:
2025-01-10T12:40:39.8735151Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8735261Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8735265Z 
2025-01-10T12:40:39.8735396Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8735518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8735672Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8735753Z     ???
2025-01-10T12:40:39.8735864Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8735955Z 
2025-01-10T12:40:39.8736034Z >   ???
2025-01-10T12:40:39.8736293Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8736371Z E   
2025-01-10T12:40:39.8736500Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8736618Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8736693Z E          ...
2025-01-10T12:40:39.8736787Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8736917Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8737033Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8737114Z E          ...
2025-01-10T12:40:39.8737205Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8737346Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8737471Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8737476Z 
2025-01-10T12:40:39.8737577Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8737782Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-10T12:40:39.8737786Z 
2025-01-10T12:40:39.8737920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8738048Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8738151Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8738283Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8738415Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8738521Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8738598Z err_msg = None
2025-01-10T12:40:39.8738602Z 
2025-01-10T12:40:39.8738716Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8738803Z         if err_msg is None:
2025-01-10T12:40:39.8738904Z             if left.shape != right.shape:
2025-01-10T12:40:39.8738989Z                 raise_assert_detail(
2025-01-10T12:40:39.8739138Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8739211Z                 )
2025-01-10T12:40:39.8739289Z     
2025-01-10T12:40:39.8739364Z             diff = 0
2025-01-10T12:40:39.8739487Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8739578Z                 # count up differences
2025-01-10T12:40:39.8739755Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8739977Z                     diff += 1
2025-01-10T12:40:39.8740059Z     
2025-01-10T12:40:39.8740155Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8740290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8740463Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8740585Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8740664Z E           
2025-01-10T12:40:39.8740776Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8741034Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8749686Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8749718Z 
2025-01-10T12:40:39.8750080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8750269Z 
2025-01-10T12:40:39.8750599Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8750610Z 
2025-01-10T12:40:39.8751011Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd8fb0>
2025-01-10T12:40:39.8751304Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8751444Z attr = 'lines'
2025-01-10T12:40:39.8751452Z 
2025-01-10T12:40:39.8751693Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8751824Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8751935Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8752010Z         try:
2025-01-10T12:40:39.8752170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8752254Z         except KeyError:
2025-01-10T12:40:39.8752402Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8752486Z     
2025-01-10T12:40:39.8752581Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8752677Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8752777Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8752912Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8753007Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8753097Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8753219Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8753298Z             else:
2025-01-10T12:40:39.8753393Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8753513Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8753518Z 
2025-01-10T12:40:39.8753648Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8753772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8753929Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8754008Z     ???
2025-01-10T12:40:39.8754122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8754126Z 
2025-01-10T12:40:39.8754205Z >   ???
2025-01-10T12:40:39.8754338Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8754425Z E   
2025-01-10T12:40:39.8754556Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8754680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8754764Z E          ...
2025-01-10T12:40:39.8754857Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8755240Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8755361Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8755441Z E          ...
2025-01-10T12:40:39.8755531Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8755675Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8755784Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8755789Z 
2025-01-10T12:40:39.8755887Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8756279Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-10T12:40:39.8756292Z 
2025-01-10T12:40:39.8756514Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9070>
2025-01-10T12:40:39.8756686Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8756777Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8756787Z 
2025-01-10T12:40:39.8756931Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8757044Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8757136Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8757211Z         try:
2025-01-10T12:40:39.8757361Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8757570Z         except KeyError:
2025-01-10T12:40:39.8757746Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8757818Z     
2025-01-10T12:40:39.8757914Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8758010Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8758108Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8758250Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8758339Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8758435Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8758552Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8758557Z 
2025-01-10T12:40:39.8758687Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8758804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8758809Z 
2025-01-10T12:40:39.8758960Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8759048Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8759165Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8759256Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8759397Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8759486Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8759594Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8759683Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8759763Z err_msg = None
2025-01-10T12:40:39.8759768Z 
2025-01-10T12:40:39.8759887Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8759970Z         if err_msg is None:
2025-01-10T12:40:39.8760072Z             if left.shape != right.shape:
2025-01-10T12:40:39.8760167Z                 raise_assert_detail(
2025-01-10T12:40:39.8760322Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8760399Z                 )
2025-01-10T12:40:39.8760477Z     
2025-01-10T12:40:39.8760565Z             diff = 0
2025-01-10T12:40:39.8760679Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8760776Z                 # count up differences
2025-01-10T12:40:39.8760948Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8761037Z                     diff += 1
2025-01-10T12:40:39.8761110Z     
2025-01-10T12:40:39.8761203Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8761464Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8761647Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8761779Z E           AssertionError: Series are different
2025-01-10T12:40:39.8761865Z E           
2025-01-10T12:40:39.8761970Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8762338Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8762670Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8763001Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8763112Z 
2025-01-10T12:40:39.8763427Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8763681Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-10T12:40:39.8763687Z 
2025-01-10T12:40:39.8763914Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9130>
2025-01-10T12:40:39.8764086Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8764179Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8764184Z 
2025-01-10T12:40:39.8764326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8764448Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8764543Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8764623Z         try:
2025-01-10T12:40:39.8764767Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8764855Z         except KeyError:
2025-01-10T12:40:39.8764998Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8765075Z     
2025-01-10T12:40:39.8765165Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8765268Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8765359Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8765507Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8765595Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8765693Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8765806Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8765816Z 
2025-01-10T12:40:39.8765953Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8766177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8766183Z 
2025-01-10T12:40:39.8766322Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8766415Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8766529Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8766620Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8766758Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8766973Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8767081Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8767168Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8767246Z err_msg = None
2025-01-10T12:40:39.8767264Z 
2025-01-10T12:40:39.8767375Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8767464Z         if err_msg is None:
2025-01-10T12:40:39.8767561Z             if left.shape != right.shape:
2025-01-10T12:40:39.8767656Z                 raise_assert_detail(
2025-01-10T12:40:39.8767801Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8767881Z                 )
2025-01-10T12:40:39.8767955Z     
2025-01-10T12:40:39.8768042Z             diff = 0
2025-01-10T12:40:39.8768158Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8768255Z                 # count up differences
2025-01-10T12:40:39.8768436Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8768525Z                     diff += 1
2025-01-10T12:40:39.8768598Z     
2025-01-10T12:40:39.8768695Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8768834Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8769131Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8769248Z E           AssertionError: Series are different
2025-01-10T12:40:39.8769324Z E           
2025-01-10T12:40:39.8769442Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8769809Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8770397Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8771095Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8771110Z 
2025-01-10T12:40:39.8771435Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8771650Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-10T12:40:39.8771655Z 
2025-01-10T12:40:39.8771799Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8771933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8772044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8772182Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8772314Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8772412Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8772497Z err_msg = None
2025-01-10T12:40:39.8772619Z 
2025-01-10T12:40:39.8772735Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8772829Z         if err_msg is None:
2025-01-10T12:40:39.8772933Z             if left.shape != right.shape:
2025-01-10T12:40:39.8773022Z                 raise_assert_detail(
2025-01-10T12:40:39.8773187Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8773264Z                 )
2025-01-10T12:40:39.8773351Z     
2025-01-10T12:40:39.8773428Z             diff = 0
2025-01-10T12:40:39.8773548Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8773640Z                 # count up differences
2025-01-10T12:40:39.8773818Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8773901Z                     diff += 1
2025-01-10T12:40:39.8773984Z     
2025-01-10T12:40:39.8774073Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8774221Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8774399Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8774523Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8774606Z E           
2025-01-10T12:40:39.8774723Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8775079Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8775339Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8775348Z 
2025-01-10T12:40:39.8775661Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8775665Z 
2025-01-10T12:40:39.8775847Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8775860Z 
2025-01-10T12:40:39.8776206Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9370>
2025-01-10T12:40:39.8776422Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>, attr = 'nu'
2025-01-10T12:40:39.8776427Z 
2025-01-10T12:40:39.8776570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8776699Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8776789Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8776880Z         try:
2025-01-10T12:40:39.8777027Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8777127Z         except KeyError:
2025-01-10T12:40:39.8777277Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8777350Z     
2025-01-10T12:40:39.8777449Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8777544Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8777651Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8777784Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8777882Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8777974Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8778093Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8778097Z 
2025-01-10T12:40:39.8778225Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8778347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8778496Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8778740Z     ???
2025-01-10T12:40:39.8778854Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8778859Z 
2025-01-10T12:40:39.8778930Z >   ???
2025-01-10T12:40:39.8779065Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8779135Z E   
2025-01-10T12:40:39.8779273Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8779385Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8779462Z E          ...
2025-01-10T12:40:39.8779552Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8779687Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8779798Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8779876Z E          ...
2025-01-10T12:40:39.8779962Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8780093Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8780220Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8780232Z 
2025-01-10T12:40:39.8780324Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8780554Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-10T12:40:39.8780559Z 
2025-01-10T12:40:39.8780687Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8780941Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8781041Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8781179Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8781304Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8781404Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8781486Z err_msg = None
2025-01-10T12:40:39.8781496Z 
2025-01-10T12:40:39.8781608Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8781695Z         if err_msg is None:
2025-01-10T12:40:39.8781791Z             if left.shape != right.shape:
2025-01-10T12:40:39.8781878Z                 raise_assert_detail(
2025-01-10T12:40:39.8782022Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8782103Z                 )
2025-01-10T12:40:39.8782173Z     
2025-01-10T12:40:39.8782252Z             diff = 0
2025-01-10T12:40:39.8782364Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8782457Z                 # count up differences
2025-01-10T12:40:39.8782628Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8782716Z                     diff += 1
2025-01-10T12:40:39.8782795Z     
2025-01-10T12:40:39.8782887Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8783031Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8783205Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8783322Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8783397Z E           
2025-01-10T12:40:39.8783515Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8783774Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8784035Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8784145Z 
2025-01-10T12:40:39.8784460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8784465Z 
2025-01-10T12:40:39.8784635Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8784644Z 
2025-01-10T12:40:39.8784870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9430>
2025-01-10T12:40:39.8785035Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8785122Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8785127Z 
2025-01-10T12:40:39.8785269Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8785386Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8785478Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8785553Z         try:
2025-01-10T12:40:39.8785698Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8785791Z         except KeyError:
2025-01-10T12:40:39.8785934Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8786005Z     
2025-01-10T12:40:39.8786285Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8786402Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8786630Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8786766Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8786863Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8786956Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8787076Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8787081Z 
2025-01-10T12:40:39.8787215Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8787330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8787479Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8787558Z     ???
2025-01-10T12:40:39.8787674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8787678Z 
2025-01-10T12:40:39.8787750Z >   ???
2025-01-10T12:40:39.8787884Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8787962Z E   
2025-01-10T12:40:39.8788094Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8788207Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8788288Z E          ...
2025-01-10T12:40:39.8788383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8788512Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8788633Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8788708Z E          ...
2025-01-10T12:40:39.8788802Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8788936Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8789055Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8789059Z 
2025-01-10T12:40:39.8789151Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8789495Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-10T12:40:39.8789504Z 
2025-01-10T12:40:39.8789730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8789949Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8790119Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8790335Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8790471Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8790566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8790788Z err_msg = None
2025-01-10T12:40:39.8790792Z 
2025-01-10T12:40:39.8790907Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8790995Z         if err_msg is None:
2025-01-10T12:40:39.8791093Z             if left.shape != right.shape:
2025-01-10T12:40:39.8791184Z                 raise_assert_detail(
2025-01-10T12:40:39.8791337Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8791418Z                 )
2025-01-10T12:40:39.8791496Z     
2025-01-10T12:40:39.8791572Z             diff = 0
2025-01-10T12:40:39.8791691Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8791782Z                 # count up differences
2025-01-10T12:40:39.8791956Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8792038Z                     diff += 1
2025-01-10T12:40:39.8792114Z     
2025-01-10T12:40:39.8792204Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8792350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8792520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8792639Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8792713Z E           
2025-01-10T12:40:39.8792918Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8793176Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8793431Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8793442Z 
2025-01-10T12:40:39.8793751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8793756Z 
2025-01-10T12:40:39.8793934Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8793944Z 
2025-01-10T12:40:39.8794171Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd94f0>
2025-01-10T12:40:39.8794378Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>, attr = 'f_lu'
2025-01-10T12:40:39.8794382Z 
2025-01-10T12:40:39.8794521Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8794642Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8794728Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8794813Z         try:
2025-01-10T12:40:39.8794953Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8795051Z         except KeyError:
2025-01-10T12:40:39.8795189Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8795268Z     
2025-01-10T12:40:39.8795362Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8795458Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8795560Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8795698Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8795793Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8795886Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8796003Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8796008Z 
2025-01-10T12:40:39.8796263Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8796394Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8796540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8796773Z     ???
2025-01-10T12:40:39.8796885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8796897Z 
2025-01-10T12:40:39.8796969Z >   ???
2025-01-10T12:40:39.8797102Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8797174Z E   
2025-01-10T12:40:39.8797317Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8797433Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8797513Z E          ...
2025-01-10T12:40:39.8797603Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8797739Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8797854Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8797935Z E          ...
2025-01-10T12:40:39.8798023Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8798158Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8798271Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8798282Z 
2025-01-10T12:40:39.8798374Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8798597Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-10T12:40:39.8798602Z 
2025-01-10T12:40:39.8798891Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8799028Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8799125Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8799266Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8799390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8799490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8799576Z err_msg = None
2025-01-10T12:40:39.8799586Z 
2025-01-10T12:40:39.8799696Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8799783Z         if err_msg is None:
2025-01-10T12:40:39.8799880Z             if left.shape != right.shape:
2025-01-10T12:40:39.8799966Z                 raise_assert_detail(
2025-01-10T12:40:39.8800115Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8800197Z                 )
2025-01-10T12:40:39.8800268Z     
2025-01-10T12:40:39.8800353Z             diff = 0
2025-01-10T12:40:39.8800466Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8800562Z                 # count up differences
2025-01-10T12:40:39.8800731Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8800815Z                     diff += 1
2025-01-10T12:40:39.8800887Z     
2025-01-10T12:40:39.8800985Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8801134Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8801306Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8801464Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8801538Z E           
2025-01-10T12:40:39.8801655Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8801918Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8802180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8802272Z 
2025-01-10T12:40:39.8802590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8802595Z 
2025-01-10T12:40:39.8802763Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8802772Z 
2025-01-10T12:40:39.8802998Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9c70>
2025-01-10T12:40:39.8803168Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8803259Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8803263Z 
2025-01-10T12:40:39.8803399Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8803522Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8803612Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8803686Z         try:
2025-01-10T12:40:39.8803831Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8803917Z         except KeyError:
2025-01-10T12:40:39.8804062Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8804134Z     
2025-01-10T12:40:39.8804228Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8804322Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8804499Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8804632Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8804726Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8804818Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8804933Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8805008Z             else:
2025-01-10T12:40:39.8805109Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8805223Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8805227Z 
2025-01-10T12:40:39.8805353Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8805481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8805625Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8805707Z     ???
2025-01-10T12:40:39.8805817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8805829Z 
2025-01-10T12:40:39.8805909Z >   ???
2025-01-10T12:40:39.8806038Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8806218Z E   
2025-01-10T12:40:39.8806350Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8806469Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8806553Z E          ...
2025-01-10T12:40:39.8806642Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8806781Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8806894Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8806981Z E          ...
2025-01-10T12:40:39.8807071Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8807217Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8807410Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8807426Z 
2025-01-10T12:40:39.8807592Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8807950Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-10T12:40:39.8807957Z 
2025-01-10T12:40:39.8808180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8808410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8808524Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8808664Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8808952Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8809053Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8809132Z err_msg = None
2025-01-10T12:40:39.8809136Z 
2025-01-10T12:40:39.8809252Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8809341Z         if err_msg is None:
2025-01-10T12:40:39.8809446Z             if left.shape != right.shape:
2025-01-10T12:40:39.8809531Z                 raise_assert_detail(
2025-01-10T12:40:39.8809683Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8809768Z                 )
2025-01-10T12:40:39.8809841Z     
2025-01-10T12:40:39.8809923Z             diff = 0
2025-01-10T12:40:39.8810035Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8810133Z                 # count up differences
2025-01-10T12:40:39.8810303Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8810394Z                     diff += 1
2025-01-10T12:40:39.8810470Z     
2025-01-10T12:40:39.8810565Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8810702Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8810880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8811115Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8811199Z E           
2025-01-10T12:40:39.8811310Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8811569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8811831Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8811848Z 
2025-01-10T12:40:39.8812150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8812162Z 
2025-01-10T12:40:39.8812337Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8812342Z 
2025-01-10T12:40:39.8812572Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fd9eb0>
2025-01-10T12:40:39.8812741Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c73b7290>
2025-01-10T12:40:39.8812825Z attr = 'j_blues'
2025-01-10T12:40:39.8812829Z 
2025-01-10T12:40:39.8812966Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8813096Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8813182Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8813263Z         try:
2025-01-10T12:40:39.8813402Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8813495Z         except KeyError:
2025-01-10T12:40:39.8813638Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8813717Z     
2025-01-10T12:40:39.8813811Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8813905Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8814001Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8814133Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8814226Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8814318Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8814435Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8814511Z             else:
2025-01-10T12:40:39.8814703Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8814811Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8814816Z 
2025-01-10T12:40:39.8814946Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8815061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8815221Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8815302Z     ???
2025-01-10T12:40:39.8815411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8815416Z 
2025-01-10T12:40:39.8815492Z >   ???
2025-01-10T12:40:39.8815617Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8815696Z E   
2025-01-10T12:40:39.8815825Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8815944Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8816020Z E          ...
2025-01-10T12:40:39.8816235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8816366Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8816484Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8816560Z E          ...
2025-01-10T12:40:39.8816653Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8816907Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8817013Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8817018Z 
2025-01-10T12:40:39.8817113Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8817318Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-10T12:40:39.8817322Z 
2025-01-10T12:40:39.8817455Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8817587Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8817697Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8817832Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8817960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8818069Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8818146Z err_msg = None
2025-01-10T12:40:39.8818150Z 
2025-01-10T12:40:39.8818263Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8818343Z         if err_msg is None:
2025-01-10T12:40:39.8818441Z             if left.shape != right.shape:
2025-01-10T12:40:39.8818526Z                 raise_assert_detail(
2025-01-10T12:40:39.8818673Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8818755Z                 )
2025-01-10T12:40:39.8818833Z     
2025-01-10T12:40:39.8818907Z             diff = 0
2025-01-10T12:40:39.8819029Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8819127Z                 # count up differences
2025-01-10T12:40:39.8819301Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8819382Z                     diff += 1
2025-01-10T12:40:39.8819464Z     
2025-01-10T12:40:39.8819553Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8819694Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8819862Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8819984Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8820059Z E           
2025-01-10T12:40:39.8820179Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8820436Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8820815Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8820828Z 
2025-01-10T12:40:39.8821133Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8821139Z 
2025-01-10T12:40:39.8821309Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8821314Z 
2025-01-10T12:40:39.8821534Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdac30>
2025-01-10T12:40:39.8821705Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8821788Z attr = 'lines'
2025-01-10T12:40:39.8821791Z 
2025-01-10T12:40:39.8821936Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8822052Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8822144Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8822311Z         try:
2025-01-10T12:40:39.8822458Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8822541Z         except KeyError:
2025-01-10T12:40:39.8822686Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8822763Z     
2025-01-10T12:40:39.8822852Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8822953Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8823042Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8823182Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8823272Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8823377Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8823492Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8823572Z             else:
2025-01-10T12:40:39.8823668Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8823784Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8823794Z 
2025-01-10T12:40:39.8823920Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8824043Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8824197Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8824271Z     ???
2025-01-10T12:40:39.8824389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8824393Z 
2025-01-10T12:40:39.8824464Z >   ???
2025-01-10T12:40:39.8824598Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8824674Z E   
2025-01-10T12:40:39.8824810Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8824925Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8825008Z E          ...
2025-01-10T12:40:39.8825099Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8825238Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8825358Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8825439Z E          ...
2025-01-10T12:40:39.8825526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8825658Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8825806Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8825815Z 
2025-01-10T12:40:39.8825981Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8826575Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-10T12:40:39.8826746Z 
2025-01-10T12:40:39.8827146Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdacf0>
2025-01-10T12:40:39.8827342Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8827436Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8827440Z 
2025-01-10T12:40:39.8827588Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8827714Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8827800Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8827880Z         try:
2025-01-10T12:40:39.8828035Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8828139Z         except KeyError:
2025-01-10T12:40:39.8828278Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8828357Z     
2025-01-10T12:40:39.8828445Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8828548Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8828645Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8828785Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8828872Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8828976Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8829089Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8829238Z 
2025-01-10T12:40:39.8829372Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8829494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8829499Z 
2025-01-10T12:40:39.8829638Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8829733Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8829844Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8829933Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8830074Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8830171Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8830278Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8830366Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8830456Z err_msg = None
2025-01-10T12:40:39.8830461Z 
2025-01-10T12:40:39.8830574Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8830664Z         if err_msg is None:
2025-01-10T12:40:39.8830762Z             if left.shape != right.shape:
2025-01-10T12:40:39.8830854Z                 raise_assert_detail(
2025-01-10T12:40:39.8831002Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8831086Z                 )
2025-01-10T12:40:39.8831158Z     
2025-01-10T12:40:39.8831242Z             diff = 0
2025-01-10T12:40:39.8831357Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8831456Z                 # count up differences
2025-01-10T12:40:39.8831643Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8831734Z                     diff += 1
2025-01-10T12:40:39.8831807Z     
2025-01-10T12:40:39.8831901Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8832052Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8832227Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8832338Z E           AssertionError: Series are different
2025-01-10T12:40:39.8832412Z E           
2025-01-10T12:40:39.8832520Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8832884Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8833331Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8833666Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8833674Z 
2025-01-10T12:40:39.8833995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8834261Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-10T12:40:39.8834266Z 
2025-01-10T12:40:39.8834492Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdadb0>
2025-01-10T12:40:39.8834752Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8834849Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8834854Z 
2025-01-10T12:40:39.8834995Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8835121Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8835208Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8835289Z         try:
2025-01-10T12:40:39.8835432Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8835521Z         except KeyError:
2025-01-10T12:40:39.8835662Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8835744Z     
2025-01-10T12:40:39.8835845Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8835948Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8836039Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8836394Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8836494Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8836593Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8836707Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8836711Z 
2025-01-10T12:40:39.8836844Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8836965Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8836969Z 
2025-01-10T12:40:39.8837111Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8837199Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8837322Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8837409Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8837549Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8837648Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8837755Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8837845Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8837927Z err_msg = None
2025-01-10T12:40:39.8837932Z 
2025-01-10T12:40:39.8838047Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8838130Z         if err_msg is None:
2025-01-10T12:40:39.8838232Z             if left.shape != right.shape:
2025-01-10T12:40:39.8838317Z                 raise_assert_detail(
2025-01-10T12:40:39.8838466Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8838669Z                 )
2025-01-10T12:40:39.8838748Z     
2025-01-10T12:40:39.8838829Z             diff = 0
2025-01-10T12:40:39.8838945Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8839042Z                 # count up differences
2025-01-10T12:40:39.8839212Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8839305Z                     diff += 1
2025-01-10T12:40:39.8839377Z     
2025-01-10T12:40:39.8839470Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8839607Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8839782Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8839887Z E           AssertionError: Series are different
2025-01-10T12:40:39.8839965Z E           
2025-01-10T12:40:39.8840068Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8840437Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8840927Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8841295Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8841312Z 
2025-01-10T12:40:39.8841628Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8841839Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-10T12:40:39.8841844Z 
2025-01-10T12:40:39.8841974Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8842110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8842211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8842349Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8842485Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8842579Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8842666Z err_msg = None
2025-01-10T12:40:39.8842671Z 
2025-01-10T12:40:39.8842785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8842875Z         if err_msg is None:
2025-01-10T12:40:39.8842970Z             if left.shape != right.shape:
2025-01-10T12:40:39.8843060Z                 raise_assert_detail(
2025-01-10T12:40:39.8843208Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8843289Z                 )
2025-01-10T12:40:39.8843360Z     
2025-01-10T12:40:39.8843441Z             diff = 0
2025-01-10T12:40:39.8843552Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8843648Z                 # count up differences
2025-01-10T12:40:39.8843825Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8844007Z                     diff += 1
2025-01-10T12:40:39.8844085Z     
2025-01-10T12:40:39.8844173Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8844313Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8844488Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8844699Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8844829Z E           
2025-01-10T12:40:39.8845027Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8845482Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8845884Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8845987Z 
2025-01-10T12:40:39.8846407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8846413Z 
2025-01-10T12:40:39.8846583Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8846588Z 
2025-01-10T12:40:39.8846818Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdaff0>
2025-01-10T12:40:39.8847025Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>, attr = 'nu'
2025-01-10T12:40:39.8847030Z 
2025-01-10T12:40:39.8847170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8847299Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8847384Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8847465Z         try:
2025-01-10T12:40:39.8847606Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8847697Z         except KeyError:
2025-01-10T12:40:39.8847842Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8847921Z     
2025-01-10T12:40:39.8848010Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8848118Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8848209Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8848353Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8848446Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8848539Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8848660Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8848665Z 
2025-01-10T12:40:39.8848795Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8848916Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8849071Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8849150Z     ???
2025-01-10T12:40:39.8849260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8849270Z 
2025-01-10T12:40:39.8849348Z >   ???
2025-01-10T12:40:39.8849478Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8849556Z E   
2025-01-10T12:40:39.8849687Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8849806Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8849888Z E          ...
2025-01-10T12:40:39.8849978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8850115Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8850230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8850440Z E          ...
2025-01-10T12:40:39.8850529Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8850662Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8850768Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8850781Z 
2025-01-10T12:40:39.8850879Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8851108Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-10T12:40:39.8851119Z 
2025-01-10T12:40:39.8851244Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8851380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8851483Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8851624Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8851755Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8851855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8851934Z err_msg = None
2025-01-10T12:40:39.8851938Z 
2025-01-10T12:40:39.8852053Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8852273Z         if err_msg is None:
2025-01-10T12:40:39.8852379Z             if left.shape != right.shape:
2025-01-10T12:40:39.8852471Z                 raise_assert_detail(
2025-01-10T12:40:39.8852614Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8852698Z                 )
2025-01-10T12:40:39.8852771Z     
2025-01-10T12:40:39.8852851Z             diff = 0
2025-01-10T12:40:39.8852966Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8853059Z                 # count up differences
2025-01-10T12:40:39.8853227Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8853319Z                     diff += 1
2025-01-10T12:40:39.8853391Z     
2025-01-10T12:40:39.8853487Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8853621Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8853806Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8853921Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8854004Z E           
2025-01-10T12:40:39.8854123Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8854377Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8854640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8854649Z 
2025-01-10T12:40:39.8854953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8854966Z 
2025-01-10T12:40:39.8855137Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8855142Z 
2025-01-10T12:40:39.8855374Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb0b0>
2025-01-10T12:40:39.8855541Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8855631Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8855636Z 
2025-01-10T12:40:39.8855774Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8855988Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8856172Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8856255Z         try:
2025-01-10T12:40:39.8856395Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8856486Z         except KeyError:
2025-01-10T12:40:39.8856637Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8856709Z     
2025-01-10T12:40:39.8856802Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8856897Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8856992Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8857125Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8857220Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8857313Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8857428Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8857438Z 
2025-01-10T12:40:39.8857564Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8857682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8857828Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8857911Z     ???
2025-01-10T12:40:39.8858224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8858229Z 
2025-01-10T12:40:39.8858304Z >   ???
2025-01-10T12:40:39.8858439Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8858512Z E   
2025-01-10T12:40:39.8858645Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8858755Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8858837Z E          ...
2025-01-10T12:40:39.8858933Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8859069Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8859192Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8859274Z E          ...
2025-01-10T12:40:39.8859361Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8859492Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8859604Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8859613Z 
2025-01-10T12:40:39.8859705Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8859920Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-10T12:40:39.8859925Z 
2025-01-10T12:40:39.8860058Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8860197Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8860298Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8860443Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8860573Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8860676Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8860761Z err_msg = None
2025-01-10T12:40:39.8860765Z 
2025-01-10T12:40:39.8860883Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8860971Z         if err_msg is None:
2025-01-10T12:40:39.8861068Z             if left.shape != right.shape:
2025-01-10T12:40:39.8861163Z                 raise_assert_detail(
2025-01-10T12:40:39.8861306Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8861387Z                 )
2025-01-10T12:40:39.8861459Z     
2025-01-10T12:40:39.8861543Z             diff = 0
2025-01-10T12:40:39.8861656Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8861752Z                 # count up differences
2025-01-10T12:40:39.8862046Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8862133Z                     diff += 1
2025-01-10T12:40:39.8862210Z     
2025-01-10T12:40:39.8862298Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8862437Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8862613Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8862732Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8862807Z E           
2025-01-10T12:40:39.8862926Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8863182Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8863664Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8863789Z 
2025-01-10T12:40:39.8864320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8864328Z 
2025-01-10T12:40:39.8864617Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8864625Z 
2025-01-10T12:40:39.8864900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb170>
2025-01-10T12:40:39.8865104Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>, attr = 'f_lu'
2025-01-10T12:40:39.8865108Z 
2025-01-10T12:40:39.8865254Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8865383Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8865470Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8865550Z         try:
2025-01-10T12:40:39.8865690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8865781Z         except KeyError:
2025-01-10T12:40:39.8865926Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8866004Z     
2025-01-10T12:40:39.8866189Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8866293Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8866384Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8866522Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8866610Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8866705Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8866816Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8866831Z 
2025-01-10T12:40:39.8866959Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8867078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8867224Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8867302Z     ???
2025-01-10T12:40:39.8867421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8867426Z 
2025-01-10T12:40:39.8867503Z >   ???
2025-01-10T12:40:39.8867632Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8867722Z E   
2025-01-10T12:40:39.8867860Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8867978Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8868053Z E          ...
2025-01-10T12:40:39.8868151Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8868286Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8868533Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8868613Z E          ...
2025-01-10T12:40:39.8868700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8868833Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8868940Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8868951Z 
2025-01-10T12:40:39.8869054Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8869280Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-10T12:40:39.8869285Z 
2025-01-10T12:40:39.8869419Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8869548Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8869653Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8869793Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8869927Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8870032Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8870112Z err_msg = None
2025-01-10T12:40:39.8870116Z 
2025-01-10T12:40:39.8870349Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8870433Z         if err_msg is None:
2025-01-10T12:40:39.8870536Z             if left.shape != right.shape:
2025-01-10T12:40:39.8870624Z                 raise_assert_detail(
2025-01-10T12:40:39.8870778Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8870852Z                 )
2025-01-10T12:40:39.8870933Z     
2025-01-10T12:40:39.8871017Z             diff = 0
2025-01-10T12:40:39.8871131Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8871229Z                 # count up differences
2025-01-10T12:40:39.8871398Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8871493Z                     diff += 1
2025-01-10T12:40:39.8871565Z     
2025-01-10T12:40:39.8871660Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8871797Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8871976Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8872089Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8872168Z E           
2025-01-10T12:40:39.8872283Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8872543Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8872807Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8872815Z 
2025-01-10T12:40:39.8873119Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8873124Z 
2025-01-10T12:40:39.8873299Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8873304Z 
2025-01-10T12:40:39.8873533Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb8f0>
2025-01-10T12:40:39.8873703Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8873794Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8873799Z 
2025-01-10T12:40:39.8873933Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8874172Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8874260Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8874340Z         try:
2025-01-10T12:40:39.8874478Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8874571Z         except KeyError:
2025-01-10T12:40:39.8874710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8874788Z     
2025-01-10T12:40:39.8874878Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8874977Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8875072Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8875204Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8875296Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8875386Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8875502Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8875582Z             else:
2025-01-10T12:40:39.8875683Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8875792Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8875797Z 
2025-01-10T12:40:39.8875929Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8876325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8876486Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8876566Z     ???
2025-01-10T12:40:39.8876675Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8876679Z 
2025-01-10T12:40:39.8876758Z >   ???
2025-01-10T12:40:39.8876885Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8876965Z E   
2025-01-10T12:40:39.8877090Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8877205Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8877286Z E          ...
2025-01-10T12:40:39.8877380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8877510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8877627Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8877709Z E          ...
2025-01-10T12:40:39.8877802Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8877927Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8878039Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8878043Z 
2025-01-10T12:40:39.8878434Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8878662Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-10T12:40:39.8878667Z 
2025-01-10T12:40:39.8878802Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8878930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8879040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8879175Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8879310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8879416Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8879496Z err_msg = None
2025-01-10T12:40:39.8879500Z 
2025-01-10T12:40:39.8879614Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8879698Z         if err_msg is None:
2025-01-10T12:40:39.8879799Z             if left.shape != right.shape:
2025-01-10T12:40:39.8879887Z                 raise_assert_detail(
2025-01-10T12:40:39.8880039Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8880115Z                 )
2025-01-10T12:40:39.8880195Z     
2025-01-10T12:40:39.8880402Z             diff = 0
2025-01-10T12:40:39.8880520Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8880608Z                 # count up differences
2025-01-10T12:40:39.8880784Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8880877Z                     diff += 1
2025-01-10T12:40:39.8880949Z     
2025-01-10T12:40:39.8881045Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8881203Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8881514Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8881708Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8881841Z E           
2025-01-10T12:40:39.8882025Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8882488Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8882864Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8883006Z 
2025-01-10T12:40:39.8883314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8883319Z 
2025-01-10T12:40:39.8883494Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8883498Z 
2025-01-10T12:40:39.8883723Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdb9b0>
2025-01-10T12:40:39.8883900Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8883989Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8883994Z 
2025-01-10T12:40:39.8884129Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8884250Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8884341Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8884423Z         try:
2025-01-10T12:40:39.8884564Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8884653Z         except KeyError:
2025-01-10T12:40:39.8884790Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8884867Z     
2025-01-10T12:40:39.8884958Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8885063Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8885156Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8885299Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8885394Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8885493Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8885612Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8885689Z             else:
2025-01-10T12:40:39.8885794Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8885912Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8885916Z 
2025-01-10T12:40:39.8886050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8886286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8886441Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8886517Z     ???
2025-01-10T12:40:39.8886634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8886639Z 
2025-01-10T12:40:39.8886712Z >   ???
2025-01-10T12:40:39.8886849Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8887048Z E   
2025-01-10T12:40:39.8887178Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8887295Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8887369Z E          ...
2025-01-10T12:40:39.8887465Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8887600Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8887721Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8887795Z E          ...
2025-01-10T12:40:39.8887890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8888016Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8888129Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8888133Z 
2025-01-10T12:40:39.8888226Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8888441Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-10T12:40:39.8888455Z 
2025-01-10T12:40:39.8888590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8888725Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8888831Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8889098Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8889230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8889327Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8889411Z err_msg = None
2025-01-10T12:40:39.8889416Z 
2025-01-10T12:40:39.8889529Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8889622Z         if err_msg is None:
2025-01-10T12:40:39.8889723Z             if left.shape != right.shape:
2025-01-10T12:40:39.8889816Z                 raise_assert_detail(
2025-01-10T12:40:39.8889969Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8890043Z                 )
2025-01-10T12:40:39.8890123Z     
2025-01-10T12:40:39.8890199Z             diff = 0
2025-01-10T12:40:39.8890317Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8890414Z                 # count up differences
2025-01-10T12:40:39.8890591Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8890674Z                     diff += 1
2025-01-10T12:40:39.8890759Z     
2025-01-10T12:40:39.8890850Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8890994Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8891166Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8891289Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8891373Z E           
2025-01-10T12:40:39.8891489Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8891753Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8892016Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8892027Z 
2025-01-10T12:40:39.8892336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8892430Z 
2025-01-10T12:40:39.8892609Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8892614Z 
2025-01-10T12:40:39.8892840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6fdbb30>
2025-01-10T12:40:39.8893016Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc016870>
2025-01-10T12:40:39.8893098Z attr = 'j_blues'
2025-01-10T12:40:39.8893103Z 
2025-01-10T12:40:39.8893249Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8893366Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8893459Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8893533Z         try:
2025-01-10T12:40:39.8893683Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8893772Z         except KeyError:
2025-01-10T12:40:39.8893912Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8893991Z     
2025-01-10T12:40:39.8894081Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8894188Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8894279Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8894419Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8894507Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8894688Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8894800Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8894881Z             else:
2025-01-10T12:40:39.8894977Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8895094Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8895098Z 
2025-01-10T12:40:39.8895232Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8895347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8895498Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8895572Z     ???
2025-01-10T12:40:39.8895693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8895697Z 
2025-01-10T12:40:39.8895769Z >   ???
2025-01-10T12:40:39.8895901Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8895974Z E   
2025-01-10T12:40:39.8896205Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8896328Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8896408Z E          ...
2025-01-10T12:40:39.8896498Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8896634Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8896751Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8896825Z E          ...
2025-01-10T12:40:39.8896919Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8897046Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8897160Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8897165Z 
2025-01-10T12:40:39.8897256Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8897469Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-10T12:40:39.8897474Z 
2025-01-10T12:40:39.8897602Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8897743Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8897847Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8897982Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8898111Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8898206Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8898292Z err_msg = None
2025-01-10T12:40:39.8898434Z 
2025-01-10T12:40:39.8898549Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8898640Z         if err_msg is None:
2025-01-10T12:40:39.8898769Z             if left.shape != right.shape:
2025-01-10T12:40:39.8898863Z                 raise_assert_detail(
2025-01-10T12:40:39.8899005Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8899090Z                 )
2025-01-10T12:40:39.8899163Z     
2025-01-10T12:40:39.8899246Z             diff = 0
2025-01-10T12:40:39.8899366Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8899454Z                 # count up differences
2025-01-10T12:40:39.8899632Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8899715Z                     diff += 1
2025-01-10T12:40:39.8899794Z     
2025-01-10T12:40:39.8899940Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8900181Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8900481Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8900676Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8900800Z E           
2025-01-10T12:40:39.8900995Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8901424Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8901692Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8901703Z 
2025-01-10T12:40:39.8902025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8902030Z 
2025-01-10T12:40:39.8902203Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8902216Z 
2025-01-10T12:40:39.8902446Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff88f0>
2025-01-10T12:40:39.8902621Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8902699Z attr = 'lines'
2025-01-10T12:40:39.8902703Z 
2025-01-10T12:40:39.8902849Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8902968Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8903065Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8903140Z         try:
2025-01-10T12:40:39.8903289Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8903378Z         except KeyError:
2025-01-10T12:40:39.8903524Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8903599Z     
2025-01-10T12:40:39.8903694Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8903790Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8903886Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8904032Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8904120Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8904216Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8904326Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8904406Z             else:
2025-01-10T12:40:39.8904503Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8904617Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8904622Z 
2025-01-10T12:40:39.8904749Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8904958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8905107Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8905186Z     ???
2025-01-10T12:40:39.8905295Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8905311Z 
2025-01-10T12:40:39.8905382Z >   ???
2025-01-10T12:40:39.8905516Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8905589Z E   
2025-01-10T12:40:39.8905722Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8905832Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8905912Z E          ...
2025-01-10T12:40:39.8906003Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8906255Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8906371Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8906456Z E          ...
2025-01-10T12:40:39.8906545Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8906680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8906785Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8906795Z 
2025-01-10T12:40:39.8906885Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8907316Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-10T12:40:39.8907322Z 
2025-01-10T12:40:39.8907547Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff89b0>
2025-01-10T12:40:39.8907719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8907809Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8907814Z 
2025-01-10T12:40:39.8907956Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8908071Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8908167Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8908242Z         try:
2025-01-10T12:40:39.8908399Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8908490Z         except KeyError:
2025-01-10T12:40:39.8908628Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8908710Z     
2025-01-10T12:40:39.8908800Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8908899Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8908990Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8909138Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8909225Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8909324Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8909434Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8909438Z 
2025-01-10T12:40:39.8909567Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8909679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8909692Z 
2025-01-10T12:40:39.8909829Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8909923Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8910035Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8910128Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8910267Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8910359Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8910465Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8910551Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8910630Z err_msg = None
2025-01-10T12:40:39.8910634Z 
2025-01-10T12:40:39.8910755Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8910845Z         if err_msg is None:
2025-01-10T12:40:39.8911059Z             if left.shape != right.shape:
2025-01-10T12:40:39.8911153Z                 raise_assert_detail(
2025-01-10T12:40:39.8911296Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8911377Z                 )
2025-01-10T12:40:39.8911450Z     
2025-01-10T12:40:39.8911537Z             diff = 0
2025-01-10T12:40:39.8911651Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8911746Z                 # count up differences
2025-01-10T12:40:39.8911914Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8912000Z                     diff += 1
2025-01-10T12:40:39.8912073Z     
2025-01-10T12:40:39.8912167Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8912305Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8912484Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8912599Z E           AssertionError: Series are different
2025-01-10T12:40:39.8912674Z E           
2025-01-10T12:40:39.8912787Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.8913156Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8913573Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8913906Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8913916Z 
2025-01-10T12:40:39.8914227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8914495Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-10T12:40:39.8914500Z 
2025-01-10T12:40:39.8914728Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8a70>
2025-01-10T12:40:39.8914903Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8915000Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.8915008Z 
2025-01-10T12:40:39.8915145Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8915266Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8915353Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8915434Z         try:
2025-01-10T12:40:39.8915577Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8915664Z         except KeyError:
2025-01-10T12:40:39.8915802Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8915883Z     
2025-01-10T12:40:39.8915971Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8916234Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8916370Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8916513Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8916607Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8916701Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8917078Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8917086Z 
2025-01-10T12:40:39.8917301Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8917495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8917510Z 
2025-01-10T12:40:39.8917735Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8917887Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8918045Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8918136Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8918275Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.8918365Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.8918476Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.8918563Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.8918646Z err_msg = None
2025-01-10T12:40:39.8918651Z 
2025-01-10T12:40:39.8918762Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8918851Z         if err_msg is None:
2025-01-10T12:40:39.8918945Z             if left.shape != right.shape:
2025-01-10T12:40:39.8919194Z                 raise_assert_detail(
2025-01-10T12:40:39.8919340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8919419Z                 )
2025-01-10T12:40:39.8919491Z     
2025-01-10T12:40:39.8919572Z             diff = 0
2025-01-10T12:40:39.8919684Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8919780Z                 # count up differences
2025-01-10T12:40:39.8919956Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8920038Z                     diff += 1
2025-01-10T12:40:39.8920119Z     
2025-01-10T12:40:39.8920213Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8920354Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8920522Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8920632Z E           AssertionError: Series are different
2025-01-10T12:40:39.8920712Z E           
2025-01-10T12:40:39.8920821Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.8921187Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.8921559Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8921937Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.8921943Z 
2025-01-10T12:40:39.8922257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8922464Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-10T12:40:39.8922553Z 
2025-01-10T12:40:39.8922688Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8922819Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8922930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8923062Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8923192Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8923294Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8923376Z err_msg = None
2025-01-10T12:40:39.8923380Z 
2025-01-10T12:40:39.8923494Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8923586Z         if err_msg is None:
2025-01-10T12:40:39.8923689Z             if left.shape != right.shape:
2025-01-10T12:40:39.8923781Z                 raise_assert_detail(
2025-01-10T12:40:39.8923932Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8924008Z                 )
2025-01-10T12:40:39.8924090Z     
2025-01-10T12:40:39.8924169Z             diff = 0
2025-01-10T12:40:39.8924370Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8924461Z                 # count up differences
2025-01-10T12:40:39.8924638Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8924727Z                     diff += 1
2025-01-10T12:40:39.8924799Z     
2025-01-10T12:40:39.8924896Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8925033Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8925209Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8925327Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8925411Z E           
2025-01-10T12:40:39.8925525Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8933159Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8933473Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8933480Z 
2025-01-10T12:40:39.8933808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8933818Z 
2025-01-10T12:40:39.8934003Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8934007Z 
2025-01-10T12:40:39.8934239Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8cb0>
2025-01-10T12:40:39.8934448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>, attr = 'nu'
2025-01-10T12:40:39.8934460Z 
2025-01-10T12:40:39.8934605Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8934731Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8934820Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8934901Z         try:
2025-01-10T12:40:39.8935052Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8935144Z         except KeyError:
2025-01-10T12:40:39.8935285Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8935365Z     
2025-01-10T12:40:39.8935461Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8935735Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8935833Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8936029Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8936341Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8936509Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8936705Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8936712Z 
2025-01-10T12:40:39.8936927Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8937135Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8937325Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8937408Z     ???
2025-01-10T12:40:39.8937526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8937531Z 
2025-01-10T12:40:39.8937603Z >   ???
2025-01-10T12:40:39.8937745Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8937818Z E   
2025-01-10T12:40:39.8937954Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8938064Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8938145Z E          ...
2025-01-10T12:40:39.8938237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8938510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8938624Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8938706Z E          ...
2025-01-10T12:40:39.8938793Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8938922Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8939034Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8939039Z 
2025-01-10T12:40:39.8939130Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8939368Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-10T12:40:39.8939378Z 
2025-01-10T12:40:39.8939511Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8939653Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8939759Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8939900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8940025Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8940124Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8940207Z err_msg = None
2025-01-10T12:40:39.8940211Z 
2025-01-10T12:40:39.8940326Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8940416Z         if err_msg is None:
2025-01-10T12:40:39.8940513Z             if left.shape != right.shape:
2025-01-10T12:40:39.8940608Z                 raise_assert_detail(
2025-01-10T12:40:39.8940758Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8940837Z                 )
2025-01-10T12:40:39.8940911Z     
2025-01-10T12:40:39.8940994Z             diff = 0
2025-01-10T12:40:39.8941114Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8941213Z                 # count up differences
2025-01-10T12:40:39.8941383Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8941473Z                     diff += 1
2025-01-10T12:40:39.8941548Z     
2025-01-10T12:40:39.8941644Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8941787Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8941960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8942079Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8942278Z E           
2025-01-10T12:40:39.8942399Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8942658Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8942929Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8942934Z 
2025-01-10T12:40:39.8943250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8943260Z 
2025-01-10T12:40:39.8943431Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8943436Z 
2025-01-10T12:40:39.8943667Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8d70>
2025-01-10T12:40:39.8943840Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8944012Z attr = 'wavelength_cm'
2025-01-10T12:40:39.8944017Z 
2025-01-10T12:40:39.8944165Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8944283Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8944375Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8944450Z         try:
2025-01-10T12:40:39.8944599Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8944686Z         except KeyError:
2025-01-10T12:40:39.8944832Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8944904Z     
2025-01-10T12:40:39.8945004Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8945099Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8945197Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8945329Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8945423Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8945524Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8945641Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8945645Z 
2025-01-10T12:40:39.8945774Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8945890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8946045Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8946321Z     ???
2025-01-10T12:40:39.8946447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8946452Z 
2025-01-10T12:40:39.8946525Z >   ???
2025-01-10T12:40:39.8946665Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8946736Z E   
2025-01-10T12:40:39.8946869Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8946981Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8947062Z E          ...
2025-01-10T12:40:39.8947160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8947299Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8947420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8947495Z E          ...
2025-01-10T12:40:39.8947591Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8947717Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8947829Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8947834Z 
2025-01-10T12:40:39.8947926Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8948141Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-10T12:40:39.8948269Z 
2025-01-10T12:40:39.8948453Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8948588Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8948701Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8948834Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8948965Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8949058Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8949142Z err_msg = None
2025-01-10T12:40:39.8949147Z 
2025-01-10T12:40:39.8949260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8949349Z         if err_msg is None:
2025-01-10T12:40:39.8949446Z             if left.shape != right.shape:
2025-01-10T12:40:39.8949544Z                 raise_assert_detail(
2025-01-10T12:40:39.8949691Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8949773Z                 )
2025-01-10T12:40:39.8949853Z     
2025-01-10T12:40:39.8949928Z             diff = 0
2025-01-10T12:40:39.8950184Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8950272Z                 # count up differences
2025-01-10T12:40:39.8950452Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8950532Z                     diff += 1
2025-01-10T12:40:39.8950609Z     
2025-01-10T12:40:39.8950698Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8950840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8951012Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8951134Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8951215Z E           
2025-01-10T12:40:39.8951335Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8951590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8951855Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8951861Z 
2025-01-10T12:40:39.8952177Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8952186Z 
2025-01-10T12:40:39.8952362Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8952371Z 
2025-01-10T12:40:39.8952595Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff8e30>
2025-01-10T12:40:39.8952804Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>, attr = 'f_lu'
2025-01-10T12:40:39.8952813Z 
2025-01-10T12:40:39.8952952Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8953076Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8953166Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8953243Z         try:
2025-01-10T12:40:39.8953381Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8953467Z         except KeyError:
2025-01-10T12:40:39.8953602Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8953679Z     
2025-01-10T12:40:39.8953857Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8953959Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8954055Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8954187Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8954278Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8954373Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8954487Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8954492Z 
2025-01-10T12:40:39.8954616Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8954736Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8954888Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8954971Z     ???
2025-01-10T12:40:39.8955126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8955135Z 
2025-01-10T12:40:39.8955267Z >   ???
2025-01-10T12:40:39.8955498Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8955618Z E   
2025-01-10T12:40:39.8955841Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8956028Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8956328Z E          ...
2025-01-10T12:40:39.8956588Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8956734Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8956852Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8956931Z E          ...
2025-01-10T12:40:39.8957020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8957154Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8957259Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8957264Z 
2025-01-10T12:40:39.8957363Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8957597Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-10T12:40:39.8957608Z 
2025-01-10T12:40:39.8957742Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8957885Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8957993Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8958132Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8958256Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8958355Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8958435Z err_msg = None
2025-01-10T12:40:39.8958438Z 
2025-01-10T12:40:39.8958556Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8958648Z         if err_msg is None:
2025-01-10T12:40:39.8958744Z             if left.shape != right.shape:
2025-01-10T12:40:39.8958840Z                 raise_assert_detail(
2025-01-10T12:40:39.8958985Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8959063Z                 )
2025-01-10T12:40:39.8959134Z     
2025-01-10T12:40:39.8959215Z             diff = 0
2025-01-10T12:40:39.8959338Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8959432Z                 # count up differences
2025-01-10T12:40:39.8959602Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8959689Z                     diff += 1
2025-01-10T12:40:39.8959760Z     
2025-01-10T12:40:39.8959855Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8959992Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8960167Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8960285Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8960481Z E           
2025-01-10T12:40:39.8960599Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8960855Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8961120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8961125Z 
2025-01-10T12:40:39.8961438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8961447Z 
2025-01-10T12:40:39.8961620Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8961625Z 
2025-01-10T12:40:39.8961851Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff95b0>
2025-01-10T12:40:39.8962020Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8962186Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.8962190Z 
2025-01-10T12:40:39.8962328Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8962449Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8962538Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8962612Z         try:
2025-01-10T12:40:39.8962757Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8962840Z         except KeyError:
2025-01-10T12:40:39.8962986Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8963057Z     
2025-01-10T12:40:39.8963154Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8963247Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8963340Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8963472Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8963563Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8963658Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8963772Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8963847Z             else:
2025-01-10T12:40:39.8963945Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8964054Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8964064Z 
2025-01-10T12:40:39.8964187Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8964307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8964450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8964531Z     ???
2025-01-10T12:40:39.8964645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8964650Z 
2025-01-10T12:40:39.8964727Z >   ???
2025-01-10T12:40:39.8964855Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8964935Z E   
2025-01-10T12:40:39.8965069Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8965189Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8965264Z E          ...
2025-01-10T12:40:39.8965358Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8965493Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8965609Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8965687Z E          ...
2025-01-10T12:40:39.8965776Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8965906Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8966286Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8966293Z 
2025-01-10T12:40:39.8966394Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8966622Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-10T12:40:39.8966627Z 
2025-01-10T12:40:39.8966769Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8966900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8967009Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8967149Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8967274Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8967372Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8967459Z err_msg = None
2025-01-10T12:40:39.8967462Z 
2025-01-10T12:40:39.8967579Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8967661Z         if err_msg is None:
2025-01-10T12:40:39.8967764Z             if left.shape != right.shape:
2025-01-10T12:40:39.8967849Z                 raise_assert_detail(
2025-01-10T12:40:39.8968124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8968203Z                 )
2025-01-10T12:40:39.8968274Z     
2025-01-10T12:40:39.8968353Z             diff = 0
2025-01-10T12:40:39.8968465Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8968557Z                 # count up differences
2025-01-10T12:40:39.8968727Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8968813Z                     diff += 1
2025-01-10T12:40:39.8968884Z     
2025-01-10T12:40:39.8968977Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8969116Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8969290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8969401Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8969478Z E           
2025-01-10T12:40:39.8969595Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8969854Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8970114Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8970123Z 
2025-01-10T12:40:39.8970425Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8970430Z 
2025-01-10T12:40:39.8970603Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8970611Z 
2025-01-10T12:40:39.8970838Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff9670>
2025-01-10T12:40:39.8971008Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8971094Z attr = 'beta_sobolev'
2025-01-10T12:40:39.8971098Z 
2025-01-10T12:40:39.8971236Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8971357Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8971444Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8971522Z         try:
2025-01-10T12:40:39.8971662Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8971888Z         except KeyError:
2025-01-10T12:40:39.8972026Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8972104Z     
2025-01-10T12:40:39.8972193Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8972298Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8972399Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8972528Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8972620Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8972711Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8972825Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8972900Z             else:
2025-01-10T12:40:39.8973002Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8973112Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8973116Z 
2025-01-10T12:40:39.8973253Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8973368Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8973521Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8973599Z     ???
2025-01-10T12:40:39.8973709Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8973796Z 
2025-01-10T12:40:39.8973909Z >   ???
2025-01-10T12:40:39.8974128Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8974256Z E   
2025-01-10T12:40:39.8974473Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8974662Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8974784Z E          ...
2025-01-10T12:40:39.8974942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8975114Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8975236Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8975316Z E          ...
2025-01-10T12:40:39.8975410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8975544Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8975650Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8975659Z 
2025-01-10T12:40:39.8975757Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8975970Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-10T12:40:39.8975974Z 
2025-01-10T12:40:39.8976292Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8976440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8976544Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8976676Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8976811Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8976908Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8976988Z err_msg = None
2025-01-10T12:40:39.8976993Z 
2025-01-10T12:40:39.8977108Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8977195Z         if err_msg is None:
2025-01-10T12:40:39.8977296Z             if left.shape != right.shape:
2025-01-10T12:40:39.8977382Z                 raise_assert_detail(
2025-01-10T12:40:39.8977535Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8977609Z                 )
2025-01-10T12:40:39.8977686Z     
2025-01-10T12:40:39.8977762Z             diff = 0
2025-01-10T12:40:39.8977879Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8977967Z                 # count up differences
2025-01-10T12:40:39.8978146Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8978374Z                     diff += 1
2025-01-10T12:40:39.8978445Z     
2025-01-10T12:40:39.8978539Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8978677Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8978859Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8978971Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8979050Z E           
2025-01-10T12:40:39.8979160Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8979418Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8979675Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8979798Z 
2025-01-10T12:40:39.8980102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8980107Z 
2025-01-10T12:40:39.8980279Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8980284Z 
2025-01-10T12:40:39.8980543Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ff97f0>
2025-01-10T12:40:39.8980719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22dc0d3140>
2025-01-10T12:40:39.8980796Z attr = 'j_blues'
2025-01-10T12:40:39.8980805Z 
2025-01-10T12:40:39.8980942Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8981068Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8981154Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8981234Z         try:
2025-01-10T12:40:39.8981372Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8981459Z         except KeyError:
2025-01-10T12:40:39.8981602Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8981679Z     
2025-01-10T12:40:39.8981768Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8981869Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8981957Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8982093Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8982179Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8982274Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8982389Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8982463Z             else:
2025-01-10T12:40:39.8982567Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8982674Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8982679Z 
2025-01-10T12:40:39.8982809Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8982923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8983075Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8983147Z     ???
2025-01-10T12:40:39.8983262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8983266Z 
2025-01-10T12:40:39.8983337Z >   ???
2025-01-10T12:40:39.8983471Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8983546Z E   
2025-01-10T12:40:39.8983673Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8983786Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8983861Z E          ...
2025-01-10T12:40:39.8984054Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8984191Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8984315Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8984391Z E          ...
2025-01-10T12:40:39.8984494Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8984620Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8984734Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8984738Z 
2025-01-10T12:40:39.8984830Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8985047Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-10T12:40:39.8985052Z 
2025-01-10T12:40:39.8985189Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8985323Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8985433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8985569Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.8985701Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8985879Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.8985964Z err_msg = None
2025-01-10T12:40:39.8985968Z 
2025-01-10T12:40:39.8986183Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8986278Z         if err_msg is None:
2025-01-10T12:40:39.8986381Z             if left.shape != right.shape:
2025-01-10T12:40:39.8986471Z                 raise_assert_detail(
2025-01-10T12:40:39.8986623Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8986698Z                 )
2025-01-10T12:40:39.8986777Z     
2025-01-10T12:40:39.8986853Z             diff = 0
2025-01-10T12:40:39.8986980Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8987071Z                 # count up differences
2025-01-10T12:40:39.8987247Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8987327Z                     diff += 1
2025-01-10T12:40:39.8987407Z     
2025-01-10T12:40:39.8987495Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.8987638Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.8987811Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.8987931Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.8988012Z E           
2025-01-10T12:40:39.8988127Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.8988390Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8988652Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.8988661Z 
2025-01-10T12:40:39.8988973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.8988978Z 
2025-01-10T12:40:39.8989153Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.8989158Z 
2025-01-10T12:40:39.8989380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa570>
2025-01-10T12:40:39.8989678Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.8989756Z attr = 'lines'
2025-01-10T12:40:39.8989760Z 
2025-01-10T12:40:39.8989903Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8990019Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8990113Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8990199Z         try:
2025-01-10T12:40:39.8990363Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8990452Z         except KeyError:
2025-01-10T12:40:39.8990588Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8990670Z     
2025-01-10T12:40:39.8990758Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8990860Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8990950Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8991088Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8991183Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8991280Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8991389Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8991470Z             else:
2025-01-10T12:40:39.8991583Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.8991972Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.8991982Z 
2025-01-10T12:40:39.8992202Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.8992395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8992648Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.8992780Z     ???
2025-01-10T12:40:39.8992926Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8992932Z 
2025-01-10T12:40:39.8993006Z >   ???
2025-01-10T12:40:39.8993140Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.8993220Z E   
2025-01-10T12:40:39.8993357Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.8993469Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8993549Z E          ...
2025-01-10T12:40:39.8993640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8993782Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8993904Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.8993978Z E          ...
2025-01-10T12:40:39.8994075Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.8994207Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.8994316Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.8994321Z 
2025-01-10T12:40:39.8994412Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.8994679Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-10T12:40:39.8994689Z 
2025-01-10T12:40:39.8994911Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa630>
2025-01-10T12:40:39.8995084Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.8995174Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.8995184Z 
2025-01-10T12:40:39.8995326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.8995448Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.8995535Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.8995616Z         try:
2025-01-10T12:40:39.8995758Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.8995846Z         except KeyError:
2025-01-10T12:40:39.8995983Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.8996213Z     
2025-01-10T12:40:39.8996350Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.8996454Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.8996697Z             if attr == "selected_atoms":
2025-01-10T12:40:39.8996837Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.8996925Z             elif actual.ndim == 1:
2025-01-10T12:40:39.8997021Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.8997138Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.8997148Z 
2025-01-10T12:40:39.8997274Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.8997396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.8997400Z 
2025-01-10T12:40:39.8997538Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8997632Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8997744Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8997833Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8997974Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.8998070Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.8998180Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.8998264Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.8998460Z err_msg = None
2025-01-10T12:40:39.8998465Z 
2025-01-10T12:40:39.8998572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.8998659Z         if err_msg is None:
2025-01-10T12:40:39.8998785Z             if left.shape != right.shape:
2025-01-10T12:40:39.8998881Z                 raise_assert_detail(
2025-01-10T12:40:39.8999025Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.8999105Z                 )
2025-01-10T12:40:39.8999176Z     
2025-01-10T12:40:39.8999258Z             diff = 0
2025-01-10T12:40:39.8999371Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.8999479Z                 # count up differences
2025-01-10T12:40:39.8999654Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.8999735Z                     diff += 1
2025-01-10T12:40:39.8999812Z     
2025-01-10T12:40:39.8999900Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9000044Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9000218Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9000327Z E           AssertionError: Series are different
2025-01-10T12:40:39.9000401Z E           
2025-01-10T12:40:39.9000524Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9000891Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9001230Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9001563Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9001568Z 
2025-01-10T12:40:39.9001971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9002231Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-10T12:40:39.9002236Z 
2025-01-10T12:40:39.9002463Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa6f0>
2025-01-10T12:40:39.9002637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9002744Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9002749Z 
2025-01-10T12:40:39.9002886Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9003009Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9003094Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9003174Z         try:
2025-01-10T12:40:39.9003316Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9003404Z         except KeyError:
2025-01-10T12:40:39.9003552Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9003624Z     
2025-01-10T12:40:39.9003718Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9003811Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9003905Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9004039Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9004214Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9004305Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9004421Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9004425Z 
2025-01-10T12:40:39.9004550Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9004669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9004673Z 
2025-01-10T12:40:39.9004814Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9004900Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9005020Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9005102Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9005246Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9005338Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9005450Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9005530Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9005614Z err_msg = None
2025-01-10T12:40:39.9005618Z 
2025-01-10T12:40:39.9005727Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9005815Z         if err_msg is None:
2025-01-10T12:40:39.9005915Z             if left.shape != right.shape:
2025-01-10T12:40:39.9006005Z                 raise_assert_detail(
2025-01-10T12:40:39.9006260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9006341Z                 )
2025-01-10T12:40:39.9006420Z     
2025-01-10T12:40:39.9006494Z             diff = 0
2025-01-10T12:40:39.9006612Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9006701Z                 # count up differences
2025-01-10T12:40:39.9006871Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9006958Z                     diff += 1
2025-01-10T12:40:39.9007035Z     
2025-01-10T12:40:39.9007125Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9007264Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9007435Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9007545Z E           AssertionError: Series are different
2025-01-10T12:40:39.9007624Z E           
2025-01-10T12:40:39.9007728Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9008217Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9008589Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9008959Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9008968Z 
2025-01-10T12:40:39.9009390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9009595Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-10T12:40:39.9009600Z 
2025-01-10T12:40:39.9009734Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9009868Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9009967Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9010104Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9010234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9010340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9010417Z err_msg = None
2025-01-10T12:40:39.9010421Z 
2025-01-10T12:40:39.9010541Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9010633Z         if err_msg is None:
2025-01-10T12:40:39.9010743Z             if left.shape != right.shape:
2025-01-10T12:40:39.9010828Z                 raise_assert_detail(
2025-01-10T12:40:39.9010975Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9011054Z                 )
2025-01-10T12:40:39.9011126Z     
2025-01-10T12:40:39.9011208Z             diff = 0
2025-01-10T12:40:39.9011324Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9011417Z                 # count up differences
2025-01-10T12:40:39.9011591Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9011676Z                     diff += 1
2025-01-10T12:40:39.9011749Z     
2025-01-10T12:40:39.9011842Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9011975Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9012155Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9012272Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9012353Z E           
2025-01-10T12:40:39.9012465Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9012724Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9013095Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9013104Z 
2025-01-10T12:40:39.9013404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9013409Z 
2025-01-10T12:40:39.9013583Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9013588Z 
2025-01-10T12:40:39.9013816Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa930>
2025-01-10T12:40:39.9014020Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>, attr = 'nu'
2025-01-10T12:40:39.9014026Z 
2025-01-10T12:40:39.9014171Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9014293Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9014385Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9014459Z         try:
2025-01-10T12:40:39.9014604Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9014690Z         except KeyError:
2025-01-10T12:40:39.9014933Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9015007Z     
2025-01-10T12:40:39.9015100Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9015200Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9015291Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9015428Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9015515Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9015611Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9015721Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9015726Z 
2025-01-10T12:40:39.9015859Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9015973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9016218Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9016350Z     ???
2025-01-10T12:40:39.9016487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9016498Z 
2025-01-10T12:40:39.9016572Z >   ???
2025-01-10T12:40:39.9016705Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9016778Z E   
2025-01-10T12:40:39.9016911Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9017028Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9017109Z E          ...
2025-01-10T12:40:39.9017200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9017337Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9017458Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9017537Z E          ...
2025-01-10T12:40:39.9017624Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9017754Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9017860Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9017874Z 
2025-01-10T12:40:39.9017965Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9018203Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-10T12:40:39.9018208Z 
2025-01-10T12:40:39.9018337Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9018494Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9018600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9018737Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9018984Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9019084Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9019162Z err_msg = None
2025-01-10T12:40:39.9019171Z 
2025-01-10T12:40:39.9019287Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9019376Z         if err_msg is None:
2025-01-10T12:40:39.9019470Z             if left.shape != right.shape:
2025-01-10T12:40:39.9019560Z                 raise_assert_detail(
2025-01-10T12:40:39.9019703Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9019786Z                 )
2025-01-10T12:40:39.9019860Z     
2025-01-10T12:40:39.9019960Z             diff = 0
2025-01-10T12:40:39.9020074Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9020168Z                 # count up differences
2025-01-10T12:40:39.9020338Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9020432Z                     diff += 1
2025-01-10T12:40:39.9020504Z     
2025-01-10T12:40:39.9020604Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9020739Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9021029Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9021148Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9021224Z E           
2025-01-10T12:40:39.9021341Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9021594Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9021858Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9021869Z 
2025-01-10T12:40:39.9022173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9022178Z 
2025-01-10T12:40:39.9022349Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9022354Z 
2025-01-10T12:40:39.9022579Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffa9f0>
2025-01-10T12:40:39.9022748Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9022837Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9022842Z 
2025-01-10T12:40:39.9022982Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9023107Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9023198Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9023274Z         try:
2025-01-10T12:40:39.9023420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9023513Z         except KeyError:
2025-01-10T12:40:39.9023655Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9023728Z     
2025-01-10T12:40:39.9023821Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9023916Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9024011Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9024143Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9024235Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9024325Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9024443Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9024535Z 
2025-01-10T12:40:39.9024661Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9024780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9024929Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9025004Z     ???
2025-01-10T12:40:39.9025124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9025129Z 
2025-01-10T12:40:39.9025200Z >   ???
2025-01-10T12:40:39.9025331Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9025404Z E   
2025-01-10T12:40:39.9025538Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9025649Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9025729Z E          ...
2025-01-10T12:40:39.9025819Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9025954Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9026173Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9026252Z E          ...
2025-01-10T12:40:39.9026345Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9026470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9026702Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9026707Z 
2025-01-10T12:40:39.9026798Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9027007Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-10T12:40:39.9027011Z 
2025-01-10T12:40:39.9027138Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9027271Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9027369Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9027509Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9027643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9027739Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9027822Z err_msg = None
2025-01-10T12:40:39.9027831Z 
2025-01-10T12:40:39.9027941Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9028029Z         if err_msg is None:
2025-01-10T12:40:39.9028125Z             if left.shape != right.shape:
2025-01-10T12:40:39.9028216Z                 raise_assert_detail(
2025-01-10T12:40:39.9028358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9028439Z                 )
2025-01-10T12:40:39.9028511Z     
2025-01-10T12:40:39.9028592Z             diff = 0
2025-01-10T12:40:39.9028705Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9028805Z                 # count up differences
2025-01-10T12:40:39.9028983Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9029064Z                     diff += 1
2025-01-10T12:40:39.9029143Z     
2025-01-10T12:40:39.9029232Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9029370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9029547Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9029670Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9029745Z E           
2025-01-10T12:40:39.9029863Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9030115Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9030497Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9030506Z 
2025-01-10T12:40:39.9030811Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9030816Z 
2025-01-10T12:40:39.9030983Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9030988Z 
2025-01-10T12:40:39.9031214Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffaab0>
2025-01-10T12:40:39.9031423Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>, attr = 'f_lu'
2025-01-10T12:40:39.9031428Z 
2025-01-10T12:40:39.9031565Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9031689Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9031773Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9031853Z         try:
2025-01-10T12:40:39.9031993Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9032080Z         except KeyError:
2025-01-10T12:40:39.9032301Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9032379Z     
2025-01-10T12:40:39.9032466Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9032565Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9032654Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9032789Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9032881Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9032971Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9033086Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9033097Z 
2025-01-10T12:40:39.9033223Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9033339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9033484Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9033566Z     ???
2025-01-10T12:40:39.9033679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9033683Z 
2025-01-10T12:40:39.9033760Z >   ???
2025-01-10T12:40:39.9033885Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9033962Z E   
2025-01-10T12:40:39.9034090Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9034209Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9034290Z E          ...
2025-01-10T12:40:39.9034379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9034512Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9034629Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9034708Z E          ...
2025-01-10T12:40:39.9034796Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9034927Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9035033Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9035041Z 
2025-01-10T12:40:39.9035137Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9035363Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-10T12:40:39.9035374Z 
2025-01-10T12:40:39.9035501Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9035634Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9035730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9035868Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9036181Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9036329Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9036458Z err_msg = None
2025-01-10T12:40:39.9036467Z 
2025-01-10T12:40:39.9036668Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9036808Z         if err_msg is None:
2025-01-10T12:40:39.9036970Z             if left.shape != right.shape:
2025-01-10T12:40:39.9037114Z                 raise_assert_detail(
2025-01-10T12:40:39.9037355Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9037468Z                 )
2025-01-10T12:40:39.9037541Z     
2025-01-10T12:40:39.9037624Z             diff = 0
2025-01-10T12:40:39.9037742Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9037836Z                 # count up differences
2025-01-10T12:40:39.9038011Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9038096Z                     diff += 1
2025-01-10T12:40:39.9038168Z     
2025-01-10T12:40:39.9038263Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9038398Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9038769Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9038885Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9038966Z E           
2025-01-10T12:40:39.9039082Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9039372Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9039824Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9039838Z 
2025-01-10T12:40:39.9040142Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9040152Z 
2025-01-10T12:40:39.9040321Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9040333Z 
2025-01-10T12:40:39.9040680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffb230>
2025-01-10T12:40:39.9040855Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9040942Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9040946Z 
2025-01-10T12:40:39.9041084Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9041211Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9041297Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9041440Z         try:
2025-01-10T12:40:39.9041632Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9041728Z         except KeyError:
2025-01-10T12:40:39.9041871Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9041944Z     
2025-01-10T12:40:39.9042036Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9042131Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9042226Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9042423Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9042561Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9042655Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9042776Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9042983Z             else:
2025-01-10T12:40:39.9043085Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9043193Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9043198Z 
2025-01-10T12:40:39.9043396Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9043582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9043734Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9043814Z     ???
2025-01-10T12:40:39.9043922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9043927Z 
2025-01-10T12:40:39.9044003Z >   ???
2025-01-10T12:40:39.9044130Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9044213Z E   
2025-01-10T12:40:39.9044349Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9044556Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9044687Z E          ...
2025-01-10T12:40:39.9044830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9045015Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9045137Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9045315Z E          ...
2025-01-10T12:40:39.9045402Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9045574Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9045763Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9045771Z 
2025-01-10T12:40:39.9045868Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9046192Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-10T12:40:39.9046198Z 
2025-01-10T12:40:39.9046335Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9046463Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9046577Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9046714Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9046836Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9046945Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9047084Z err_msg = None
2025-01-10T12:40:39.9047093Z 
2025-01-10T12:40:39.9047268Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9047357Z         if err_msg is None:
2025-01-10T12:40:39.9047461Z             if left.shape != right.shape:
2025-01-10T12:40:39.9047547Z                 raise_assert_detail(
2025-01-10T12:40:39.9047700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9047774Z                 )
2025-01-10T12:40:39.9047858Z     
2025-01-10T12:40:39.9047934Z             diff = 0
2025-01-10T12:40:39.9048075Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9048242Z                 # count up differences
2025-01-10T12:40:39.9048442Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9048534Z                     diff += 1
2025-01-10T12:40:39.9048607Z     
2025-01-10T12:40:39.9048708Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9048848Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9049024Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9049222Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9049330Z E           
2025-01-10T12:40:39.9049448Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9049715Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9050191Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9050209Z 
2025-01-10T12:40:39.9050564Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9050571Z 
2025-01-10T12:40:39.9050745Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9050750Z 
2025-01-10T12:40:39.9050971Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffb2f0>
2025-01-10T12:40:39.9051269Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9051363Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9051368Z 
2025-01-10T12:40:39.9051507Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9051627Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9051842Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9051927Z         try:
2025-01-10T12:40:39.9052144Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9052278Z         except KeyError:
2025-01-10T12:40:39.9052423Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9052502Z     
2025-01-10T12:40:39.9052591Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9052691Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9052780Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9052917Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9053072Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9053221Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9053342Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9053418Z             else:
2025-01-10T12:40:39.9053519Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9053632Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9053637Z 
2025-01-10T12:40:39.9053765Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9053878Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9054126Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9054248Z     ???
2025-01-10T12:40:39.9054430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9054436Z 
2025-01-10T12:40:39.9054531Z >   ???
2025-01-10T12:40:39.9054659Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9054745Z E   
2025-01-10T12:40:39.9054873Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9055084Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9055208Z E          ...
2025-01-10T12:40:39.9055308Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9055447Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9055567Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9055641Z E          ...
2025-01-10T12:40:39.9055734Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9055862Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9056007Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9056019Z 
2025-01-10T12:40:39.9056311Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9056530Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-10T12:40:39.9056667Z 
2025-01-10T12:40:39.9056805Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9056933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9057042Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9057176Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9057346Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9057520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9057622Z err_msg = None
2025-01-10T12:40:39.9057627Z 
2025-01-10T12:40:39.9057748Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9057831Z         if err_msg is None:
2025-01-10T12:40:39.9057930Z             if left.shape != right.shape:
2025-01-10T12:40:39.9058022Z                 raise_assert_detail(
2025-01-10T12:40:39.9058176Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9058250Z                 )
2025-01-10T12:40:39.9058326Z     
2025-01-10T12:40:39.9058401Z             diff = 0
2025-01-10T12:40:39.9058594Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9058843Z                 # count up differences
2025-01-10T12:40:39.9059029Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9059110Z                     diff += 1
2025-01-10T12:40:39.9059189Z     
2025-01-10T12:40:39.9059281Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9059429Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9059687Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9059852Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9059941Z E           
2025-01-10T12:40:39.9060055Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9060316Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9060578Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9060597Z 
2025-01-10T12:40:39.9061013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9061025Z 
2025-01-10T12:40:39.9061203Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9061208Z 
2025-01-10T12:40:39.9061432Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ffb470>
2025-01-10T12:40:39.9061637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eed5c770>
2025-01-10T12:40:39.9061788Z attr = 'j_blues'
2025-01-10T12:40:39.9061797Z 
2025-01-10T12:40:39.9061951Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9062071Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9062164Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9062247Z         try:
2025-01-10T12:40:39.9062389Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9062477Z         except KeyError:
2025-01-10T12:40:39.9062658Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9062794Z     
2025-01-10T12:40:39.9062893Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9063115Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9063206Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9063343Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9063431Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9063533Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9063733Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9063850Z             else:
2025-01-10T12:40:39.9063949Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9064062Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9064067Z 
2025-01-10T12:40:39.9064199Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9064312Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9064464Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9064577Z     ???
2025-01-10T12:40:39.9064780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9064788Z 
2025-01-10T12:40:39.9064904Z >   ???
2025-01-10T12:40:39.9065102Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9065175Z E   
2025-01-10T12:40:39.9065410Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9065562Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9065704Z E          ...
2025-01-10T12:40:39.9065827Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9065960Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9066249Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9066334Z E          ...
2025-01-10T12:40:39.9066428Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9066558Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9066678Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9066683Z 
2025-01-10T12:40:39.9066775Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9066994Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-10T12:40:39.9066999Z 
2025-01-10T12:40:39.9067130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9067269Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9067433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9067649Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9067862Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9068021Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9068157Z err_msg = None
2025-01-10T12:40:39.9068169Z 
2025-01-10T12:40:39.9068352Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9068498Z         if err_msg is None:
2025-01-10T12:40:39.9068625Z             if left.shape != right.shape:
2025-01-10T12:40:39.9068722Z                 raise_assert_detail(
2025-01-10T12:40:39.9068869Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9068957Z                 )
2025-01-10T12:40:39.9069034Z     
2025-01-10T12:40:39.9069111Z             diff = 0
2025-01-10T12:40:39.9069228Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9069317Z                 # count up differences
2025-01-10T12:40:39.9069493Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9069573Z                     diff += 1
2025-01-10T12:40:39.9069651Z     
2025-01-10T12:40:39.9069739Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9069880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9070191Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9070309Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9070381Z E           
2025-01-10T12:40:39.9070500Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9070763Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9071020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9071029Z 
2025-01-10T12:40:39.9071340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9071345Z 
2025-01-10T12:40:39.9071517Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9071628Z 
2025-01-10T12:40:39.9071853Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024230>
2025-01-10T12:40:39.9072026Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9072106Z attr = 'lines'
2025-01-10T12:40:39.9072110Z 
2025-01-10T12:40:39.9072252Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9072369Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9072463Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9072538Z         try:
2025-01-10T12:40:39.9072683Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9072771Z         except KeyError:
2025-01-10T12:40:39.9072914Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9072992Z     
2025-01-10T12:40:39.9073080Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9073180Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9073275Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9073416Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9073504Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9073599Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9073712Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9073794Z             else:
2025-01-10T12:40:39.9073891Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9074006Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9074011Z 
2025-01-10T12:40:39.9074137Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9074260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9074413Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9074488Z     ???
2025-01-10T12:40:39.9074604Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9074613Z 
2025-01-10T12:40:39.9074686Z >   ???
2025-01-10T12:40:39.9074818Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9074891Z E   
2025-01-10T12:40:39.9075024Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9075137Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9075216Z E          ...
2025-01-10T12:40:39.9075305Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9075440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9075553Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9075743Z E          ...
2025-01-10T12:40:39.9075831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9075963Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9076249Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9076261Z 
2025-01-10T12:40:39.9076380Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9076653Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-10T12:40:39.9076659Z 
2025-01-10T12:40:39.9076880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70242f0>
2025-01-10T12:40:39.9077052Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9077143Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9077148Z 
2025-01-10T12:40:39.9077291Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9077413Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9077505Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9077584Z         try:
2025-01-10T12:40:39.9077725Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9077814Z         except KeyError:
2025-01-10T12:40:39.9077951Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9078168Z     
2025-01-10T12:40:39.9078327Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9078492Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9078641Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9078875Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9079021Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9079180Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9079332Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9079342Z 
2025-01-10T12:40:39.9079470Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9079594Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9079598Z 
2025-01-10T12:40:39.9079735Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9079827Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9079937Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9080031Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9080171Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9080262Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9080368Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9080455Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9080540Z err_msg = None
2025-01-10T12:40:39.9080544Z 
2025-01-10T12:40:39.9080654Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9080744Z         if err_msg is None:
2025-01-10T12:40:39.9080841Z             if left.shape != right.shape:
2025-01-10T12:40:39.9080936Z                 raise_assert_detail(
2025-01-10T12:40:39.9081079Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9081159Z                 )
2025-01-10T12:40:39.9081235Z     
2025-01-10T12:40:39.9081316Z             diff = 0
2025-01-10T12:40:39.9081429Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9081524Z                 # count up differences
2025-01-10T12:40:39.9081696Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9081786Z                     diff += 1
2025-01-10T12:40:39.9081859Z     
2025-01-10T12:40:39.9081954Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9082097Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9082269Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9082508Z E           AssertionError: Series are different
2025-01-10T12:40:39.9082583Z E           
2025-01-10T12:40:39.9082690Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9083055Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9083390Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9083740Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9083841Z 
2025-01-10T12:40:39.9084154Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9084425Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-10T12:40:39.9084430Z 
2025-01-10T12:40:39.9084661Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70243b0>
2025-01-10T12:40:39.9084829Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9084931Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9084936Z 
2025-01-10T12:40:39.9085074Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9085196Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9085282Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9085364Z         try:
2025-01-10T12:40:39.9085509Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9085599Z         except KeyError:
2025-01-10T12:40:39.9085738Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9085816Z     
2025-01-10T12:40:39.9085905Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9086005Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9086211Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9086349Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9086441Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9086537Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9086651Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9086656Z 
2025-01-10T12:40:39.9086781Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9086899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9086908Z 
2025-01-10T12:40:39.9087044Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9087134Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9087242Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9087330Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9087474Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9087557Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9087667Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9087886Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9087971Z err_msg = None
2025-01-10T12:40:39.9087976Z 
2025-01-10T12:40:39.9088086Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9088174Z         if err_msg is None:
2025-01-10T12:40:39.9088269Z             if left.shape != right.shape:
2025-01-10T12:40:39.9088364Z                 raise_assert_detail(
2025-01-10T12:40:39.9088509Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9088591Z                 )
2025-01-10T12:40:39.9088672Z     
2025-01-10T12:40:39.9088748Z             diff = 0
2025-01-10T12:40:39.9088867Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9088957Z                 # count up differences
2025-01-10T12:40:39.9089129Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9089208Z                     diff += 1
2025-01-10T12:40:39.9089289Z     
2025-01-10T12:40:39.9089377Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9089524Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9089696Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9089807Z E           AssertionError: Series are different
2025-01-10T12:40:39.9090025Z E           
2025-01-10T12:40:39.9090134Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9090495Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9090866Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9091246Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9091252Z 
2025-01-10T12:40:39.9091560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9091766Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-10T12:40:39.9091774Z 
2025-01-10T12:40:39.9091909Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9092039Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9092147Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9092279Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9092408Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9092509Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9092586Z err_msg = None
2025-01-10T12:40:39.9092590Z 
2025-01-10T12:40:39.9092705Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9092789Z         if err_msg is None:
2025-01-10T12:40:39.9092888Z             if left.shape != right.shape:
2025-01-10T12:40:39.9093062Z                 raise_assert_detail(
2025-01-10T12:40:39.9093210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9093284Z                 )
2025-01-10T12:40:39.9093362Z     
2025-01-10T12:40:39.9093437Z             diff = 0
2025-01-10T12:40:39.9093558Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9093647Z                 # count up differences
2025-01-10T12:40:39.9093823Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9093912Z                     diff += 1
2025-01-10T12:40:39.9093986Z     
2025-01-10T12:40:39.9094078Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9094213Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9094388Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9094501Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9094586Z E           
2025-01-10T12:40:39.9094697Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9094958Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9095309Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9095315Z 
2025-01-10T12:40:39.9095618Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9095627Z 
2025-01-10T12:40:39.9095801Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9095806Z 
2025-01-10T12:40:39.9096028Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70245f0>
2025-01-10T12:40:39.9096338Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>, attr = 'nu'
2025-01-10T12:40:39.9096349Z 
2025-01-10T12:40:39.9096497Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9096614Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9096763Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9096891Z         try:
2025-01-10T12:40:39.9097135Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9097274Z         except KeyError:
2025-01-10T12:40:39.9097512Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9097637Z     
2025-01-10T12:40:39.9097771Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9097876Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9097972Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9098105Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9098201Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9098302Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9098412Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9098416Z 
2025-01-10T12:40:39.9098547Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9098661Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9098842Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9098918Z     ???
2025-01-10T12:40:39.9099033Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9099037Z 
2025-01-10T12:40:39.9099109Z >   ???
2025-01-10T12:40:39.9099377Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9099450Z E   
2025-01-10T12:40:39.9099591Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9099710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9099784Z E          ...
2025-01-10T12:40:39.9099884Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9100014Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9100133Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9100208Z E          ...
2025-01-10T12:40:39.9100302Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9100428Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9100541Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9100545Z 
2025-01-10T12:40:39.9100638Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9100875Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-10T12:40:39.9100884Z 
2025-01-10T12:40:39.9101020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9101148Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9101366Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9101499Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9101628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9101724Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9101809Z err_msg = None
2025-01-10T12:40:39.9101813Z 
2025-01-10T12:40:39.9101924Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9102012Z         if err_msg is None:
2025-01-10T12:40:39.9102110Z             if left.shape != right.shape:
2025-01-10T12:40:39.9102206Z                 raise_assert_detail(
2025-01-10T12:40:39.9102354Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9102428Z                 )
2025-01-10T12:40:39.9102505Z     
2025-01-10T12:40:39.9102584Z             diff = 0
2025-01-10T12:40:39.9102706Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9102796Z                 # count up differences
2025-01-10T12:40:39.9102969Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9103048Z                     diff += 1
2025-01-10T12:40:39.9103126Z     
2025-01-10T12:40:39.9103220Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9103361Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9103531Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9103651Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9103735Z E           
2025-01-10T12:40:39.9103847Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9104106Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9104366Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9104372Z 
2025-01-10T12:40:39.9104677Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9104766Z 
2025-01-10T12:40:39.9104941Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9104946Z 
2025-01-10T12:40:39.9105168Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70246b0>
2025-01-10T12:40:39.9105338Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9105423Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9105427Z 
2025-01-10T12:40:39.9105569Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9105684Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9105779Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9105853Z         try:
2025-01-10T12:40:39.9105999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9106257Z         except KeyError:
2025-01-10T12:40:39.9106413Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9106494Z     
2025-01-10T12:40:39.9106589Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9106694Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9106785Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9106924Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9107014Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9107257Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9107371Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9107376Z 
2025-01-10T12:40:39.9107511Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9107625Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9107779Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9107859Z     ???
2025-01-10T12:40:39.9107975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9107979Z 
2025-01-10T12:40:39.9108064Z >   ???
2025-01-10T12:40:39.9108192Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9108273Z E   
2025-01-10T12:40:39.9108406Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9108527Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9108609Z E          ...
2025-01-10T12:40:39.9108707Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9108836Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9108956Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9109031Z E          ...
2025-01-10T12:40:39.9109128Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9109259Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9109365Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9109370Z 
2025-01-10T12:40:39.9109466Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9109675Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-10T12:40:39.9109679Z 
2025-01-10T12:40:39.9109815Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9109943Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9117515Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9117717Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9117865Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9117981Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9118096Z err_msg = None
2025-01-10T12:40:39.9118105Z 
2025-01-10T12:40:39.9118303Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9118452Z         if err_msg is None:
2025-01-10T12:40:39.9118816Z             if left.shape != right.shape:
2025-01-10T12:40:39.9118968Z                 raise_assert_detail(
2025-01-10T12:40:39.9119217Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9119300Z                 )
2025-01-10T12:40:39.9119373Z     
2025-01-10T12:40:39.9119451Z             diff = 0
2025-01-10T12:40:39.9119581Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9119673Z                 # count up differences
2025-01-10T12:40:39.9119854Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9119937Z                     diff += 1
2025-01-10T12:40:39.9120009Z     
2025-01-10T12:40:39.9120108Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9120255Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9120431Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9120560Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9120635Z E           
2025-01-10T12:40:39.9120754Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9121013Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9121401Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9121407Z 
2025-01-10T12:40:39.9121735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9121745Z 
2025-01-10T12:40:39.9121918Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9121922Z 
2025-01-10T12:40:39.9122149Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024770>
2025-01-10T12:40:39.9122363Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>, attr = 'f_lu'
2025-01-10T12:40:39.9122368Z 
2025-01-10T12:40:39.9122516Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9122642Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9122732Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9122812Z         try:
2025-01-10T12:40:39.9122957Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9123045Z         except KeyError:
2025-01-10T12:40:39.9123183Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9123261Z     
2025-01-10T12:40:39.9123354Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9123456Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9123546Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9123686Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9123774Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9123873Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9123985Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9123995Z 
2025-01-10T12:40:39.9124123Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9124244Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9124390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9124468Z     ???
2025-01-10T12:40:39.9124580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9124585Z 
2025-01-10T12:40:39.9124750Z >   ???
2025-01-10T12:40:39.9124879Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9124956Z E   
2025-01-10T12:40:39.9125083Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9125198Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9125273Z E          ...
2025-01-10T12:40:39.9125375Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9125505Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9125708Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9125844Z E          ...
2025-01-10T12:40:39.9125991Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9126350Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9126528Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9126534Z 
2025-01-10T12:40:39.9126695Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9127025Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-10T12:40:39.9127032Z 
2025-01-10T12:40:39.9127173Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9127309Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9127552Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9127694Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9127821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9127925Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9128008Z err_msg = None
2025-01-10T12:40:39.9128012Z 
2025-01-10T12:40:39.9128131Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9128214Z         if err_msg is None:
2025-01-10T12:40:39.9128321Z             if left.shape != right.shape:
2025-01-10T12:40:39.9128408Z                 raise_assert_detail(
2025-01-10T12:40:39.9128558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9128632Z                 )
2025-01-10T12:40:39.9128710Z     
2025-01-10T12:40:39.9128785Z             diff = 0
2025-01-10T12:40:39.9128910Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9129004Z                 # count up differences
2025-01-10T12:40:39.9129172Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9129260Z                     diff += 1
2025-01-10T12:40:39.9129331Z     
2025-01-10T12:40:39.9129425Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9129564Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9129746Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9129863Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9129944Z E           
2025-01-10T12:40:39.9130056Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9130320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9130585Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9130591Z 
2025-01-10T12:40:39.9130900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9131023Z 
2025-01-10T12:40:39.9131202Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9131207Z 
2025-01-10T12:40:39.9131436Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024ef0>
2025-01-10T12:40:39.9131608Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9131696Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9131701Z 
2025-01-10T12:40:39.9131840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9131964Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9132053Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9132133Z         try:
2025-01-10T12:40:39.9132276Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9132365Z         except KeyError:
2025-01-10T12:40:39.9132506Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9132592Z     
2025-01-10T12:40:39.9132685Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9132788Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9132888Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9133023Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9133205Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9133301Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9133418Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9133491Z             else:
2025-01-10T12:40:39.9133596Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9133706Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9133711Z 
2025-01-10T12:40:39.9133843Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9133961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9134114Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9134192Z     ???
2025-01-10T12:40:39.9134311Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9134316Z 
2025-01-10T12:40:39.9134391Z >   ???
2025-01-10T12:40:39.9134520Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9134605Z E   
2025-01-10T12:40:39.9134734Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9134851Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9134925Z E          ...
2025-01-10T12:40:39.9135021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9135152Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9135271Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9135346Z E          ...
2025-01-10T12:40:39.9135438Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9135564Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9135677Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9135681Z 
2025-01-10T12:40:39.9135781Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9136014Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-10T12:40:39.9136023Z 
2025-01-10T12:40:39.9136351Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9136490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9136597Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9136733Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9136865Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9136960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9137172Z err_msg = None
2025-01-10T12:40:39.9137176Z 
2025-01-10T12:40:39.9137291Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9137373Z         if err_msg is None:
2025-01-10T12:40:39.9137474Z             if left.shape != right.shape:
2025-01-10T12:40:39.9137560Z                 raise_assert_detail(
2025-01-10T12:40:39.9137718Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9137792Z                 )
2025-01-10T12:40:39.9137868Z     
2025-01-10T12:40:39.9137944Z             diff = 0
2025-01-10T12:40:39.9138063Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9138154Z                 # count up differences
2025-01-10T12:40:39.9138331Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9138413Z                     diff += 1
2025-01-10T12:40:39.9138487Z     
2025-01-10T12:40:39.9138576Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9138723Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9138898Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9139010Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9139090Z E           
2025-01-10T12:40:39.9139362Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9139733Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9140042Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9140071Z 
2025-01-10T12:40:39.9140582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9140592Z 
2025-01-10T12:40:39.9140898Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9140906Z 
2025-01-10T12:40:39.9141268Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7024fb0>
2025-01-10T12:40:39.9141445Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9141530Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9141535Z 
2025-01-10T12:40:39.9141680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9141806Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9141896Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9141975Z         try:
2025-01-10T12:40:39.9142125Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9142213Z         except KeyError:
2025-01-10T12:40:39.9142354Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9142432Z     
2025-01-10T12:40:39.9142526Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9142637Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9142728Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9142865Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9142953Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9143050Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9143166Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9143248Z             else:
2025-01-10T12:40:39.9143356Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9143466Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9143470Z 
2025-01-10T12:40:39.9143705Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9143890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9144152Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9144276Z     ???
2025-01-10T12:40:39.9144484Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9144491Z 
2025-01-10T12:40:39.9144614Z >   ???
2025-01-10T12:40:39.9144841Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9144959Z E   
2025-01-10T12:40:39.9145116Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9145233Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9145309Z E          ...
2025-01-10T12:40:39.9145406Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9145534Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9145660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9145734Z E          ...
2025-01-10T12:40:39.9145826Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9145948Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9146163Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9146295Z 
2025-01-10T12:40:39.9146398Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9146620Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-10T12:40:39.9146625Z 
2025-01-10T12:40:39.9146762Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9146894Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9147001Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9147137Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9147273Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9147368Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9147452Z err_msg = None
2025-01-10T12:40:39.9147456Z 
2025-01-10T12:40:39.9147573Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9147662Z         if err_msg is None:
2025-01-10T12:40:39.9147757Z             if left.shape != right.shape:
2025-01-10T12:40:39.9147849Z                 raise_assert_detail(
2025-01-10T12:40:39.9147999Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9148073Z                 )
2025-01-10T12:40:39.9148150Z     
2025-01-10T12:40:39.9148225Z             diff = 0
2025-01-10T12:40:39.9148342Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9148432Z                 # count up differences
2025-01-10T12:40:39.9148605Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9148688Z                     diff += 1
2025-01-10T12:40:39.9148764Z     
2025-01-10T12:40:39.9148854Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9148995Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9149170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9149290Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9149364Z E           
2025-01-10T12:40:39.9149481Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9149743Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9150122Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9150132Z 
2025-01-10T12:40:39.9150442Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9150447Z 
2025-01-10T12:40:39.9150624Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9150628Z 
2025-01-10T12:40:39.9150851Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7025130>
2025-01-10T12:40:39.9151025Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c4266000>
2025-01-10T12:40:39.9151101Z attr = 'j_blues'
2025-01-10T12:40:39.9151106Z 
2025-01-10T12:40:39.9151248Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9151371Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9151462Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9151535Z         try:
2025-01-10T12:40:39.9151680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9151763Z         except KeyError:
2025-01-10T12:40:39.9151986Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9152064Z     
2025-01-10T12:40:39.9152152Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9152251Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9152341Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9152478Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9152564Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9152658Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9152766Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9152849Z             else:
2025-01-10T12:40:39.9152944Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9153057Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9153061Z 
2025-01-10T12:40:39.9153187Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9153305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9153461Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9153541Z     ???
2025-01-10T12:40:39.9153655Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9153660Z 
2025-01-10T12:40:39.9153731Z >   ???
2025-01-10T12:40:39.9153863Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9153935Z E   
2025-01-10T12:40:39.9154069Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9154180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9154264Z E          ...
2025-01-10T12:40:39.9154355Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9154491Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9154604Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9154686Z E          ...
2025-01-10T12:40:39.9154783Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9154908Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9155017Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9155022Z 
2025-01-10T12:40:39.9155113Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9155383Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-10T12:40:39.9155388Z 
2025-01-10T12:40:39.9155517Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9155648Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9155836Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9155974Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9156286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9156414Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9156495Z err_msg = None
2025-01-10T12:40:39.9156500Z 
2025-01-10T12:40:39.9156608Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9156695Z         if err_msg is None:
2025-01-10T12:40:39.9156788Z             if left.shape != right.shape:
2025-01-10T12:40:39.9156876Z                 raise_assert_detail(
2025-01-10T12:40:39.9157018Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9157097Z                 )
2025-01-10T12:40:39.9157174Z     
2025-01-10T12:40:39.9157259Z             diff = 0
2025-01-10T12:40:39.9157371Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9157464Z                 # count up differences
2025-01-10T12:40:39.9157639Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9157842Z                     diff += 1
2025-01-10T12:40:39.9157918Z     
2025-01-10T12:40:39.9158007Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9158148Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9158319Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9158437Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9158510Z E           
2025-01-10T12:40:39.9158627Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9158884Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9159147Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9159157Z 
2025-01-10T12:40:39.9159468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9159473Z 
2025-01-10T12:40:39.9159652Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9159656Z 
2025-01-10T12:40:39.9159884Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7025eb0>
2025-01-10T12:40:39.9160059Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9160136Z attr = 'lines'
2025-01-10T12:40:39.9160141Z 
2025-01-10T12:40:39.9160284Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9160399Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9160495Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9160569Z         try:
2025-01-10T12:40:39.9160717Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9160799Z         except KeyError:
2025-01-10T12:40:39.9160943Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9161014Z     
2025-01-10T12:40:39.9161114Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9161211Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9161306Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9161437Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9161667Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9161763Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9161874Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9161954Z             else:
2025-01-10T12:40:39.9162048Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9162166Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9162171Z 
2025-01-10T12:40:39.9162296Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9162417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9162562Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9162644Z     ???
2025-01-10T12:40:39.9162755Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9162765Z 
2025-01-10T12:40:39.9162867Z >   ???
2025-01-10T12:40:39.9163095Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9163223Z E   
2025-01-10T12:40:39.9163454Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9163638Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9163768Z E          ...
2025-01-10T12:40:39.9163924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9164161Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9164275Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9164356Z E          ...
2025-01-10T12:40:39.9164443Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9164572Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9164679Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9164692Z 
2025-01-10T12:40:39.9164783Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9165102Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-10T12:40:39.9165113Z 
2025-01-10T12:40:39.9165337Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7025f70>
2025-01-10T12:40:39.9165509Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9165599Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9165608Z 
2025-01-10T12:40:39.9165751Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9165866Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9165957Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9166030Z         try:
2025-01-10T12:40:39.9166280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9166377Z         except KeyError:
2025-01-10T12:40:39.9166513Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9166591Z     
2025-01-10T12:40:39.9166679Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9166781Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9166870Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9167007Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9167093Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9167188Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9167305Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9167309Z 
2025-01-10T12:40:39.9167438Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9167550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9167560Z 
2025-01-10T12:40:39.9167697Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9167789Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9167898Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9167987Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9168252Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9168342Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9168447Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9168539Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9168618Z err_msg = None
2025-01-10T12:40:39.9168622Z 
2025-01-10T12:40:39.9168736Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9168819Z         if err_msg is None:
2025-01-10T12:40:39.9168919Z             if left.shape != right.shape:
2025-01-10T12:40:39.9169009Z                 raise_assert_detail(
2025-01-10T12:40:39.9169154Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9169235Z                 )
2025-01-10T12:40:39.9169308Z     
2025-01-10T12:40:39.9169388Z             diff = 0
2025-01-10T12:40:39.9169499Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9169598Z                 # count up differences
2025-01-10T12:40:39.9169776Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9169864Z                     diff += 1
2025-01-10T12:40:39.9169936Z     
2025-01-10T12:40:39.9170141Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9170274Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9170450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9170555Z E           AssertionError: Series are different
2025-01-10T12:40:39.9170635Z E           
2025-01-10T12:40:39.9170743Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9171106Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9171712Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9172052Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9172061Z 
2025-01-10T12:40:39.9172371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9172682Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-10T12:40:39.9172691Z 
2025-01-10T12:40:39.9172915Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026030>
2025-01-10T12:40:39.9173088Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9173184Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9173189Z 
2025-01-10T12:40:39.9173326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9173446Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9173531Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9173611Z         try:
2025-01-10T12:40:39.9173751Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9173928Z         except KeyError:
2025-01-10T12:40:39.9174065Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9174142Z     
2025-01-10T12:40:39.9174229Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9174333Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9174427Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9174581Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9174689Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9174792Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9174906Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9174911Z 
2025-01-10T12:40:39.9175034Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9175153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9175158Z 
2025-01-10T12:40:39.9175297Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9175415Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9175526Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9175614Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9175843Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9175927Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9176037Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9176214Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9176300Z err_msg = None
2025-01-10T12:40:39.9176304Z 
2025-01-10T12:40:39.9176411Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9176497Z         if err_msg is None:
2025-01-10T12:40:39.9176590Z             if left.shape != right.shape:
2025-01-10T12:40:39.9176683Z                 raise_assert_detail(
2025-01-10T12:40:39.9176830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9176908Z                 )
2025-01-10T12:40:39.9176980Z     
2025-01-10T12:40:39.9177061Z             diff = 0
2025-01-10T12:40:39.9177178Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9177280Z                 # count up differences
2025-01-10T12:40:39.9177456Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9177536Z                     diff += 1
2025-01-10T12:40:39.9177612Z     
2025-01-10T12:40:39.9177699Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9177841Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9178011Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9178121Z E           AssertionError: Series are different
2025-01-10T12:40:39.9178195Z E           
2025-01-10T12:40:39.9178306Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9178666Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9179040Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9179412Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9179542Z 
2025-01-10T12:40:39.9179867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9180128Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-10T12:40:39.9180133Z 
2025-01-10T12:40:39.9180268Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9180397Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9180501Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9180636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9180764Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9180864Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9181054Z err_msg = None
2025-01-10T12:40:39.9181059Z 
2025-01-10T12:40:39.9181181Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9181264Z         if err_msg is None:
2025-01-10T12:40:39.9181366Z             if left.shape != right.shape:
2025-01-10T12:40:39.9181452Z                 raise_assert_detail(
2025-01-10T12:40:39.9181606Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9181680Z                 )
2025-01-10T12:40:39.9181759Z     
2025-01-10T12:40:39.9181833Z             diff = 0
2025-01-10T12:40:39.9181950Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9182043Z                 # count up differences
2025-01-10T12:40:39.9182219Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9182304Z                     diff += 1
2025-01-10T12:40:39.9182382Z     
2025-01-10T12:40:39.9182520Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9182771Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9183061Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9183256Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9183379Z E           
2025-01-10T12:40:39.9183573Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9183901Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9184177Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9184187Z 
2025-01-10T12:40:39.9184507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9184513Z 
2025-01-10T12:40:39.9184684Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9184695Z 
2025-01-10T12:40:39.9184918Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026270>
2025-01-10T12:40:39.9185128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>, attr = 'nu'
2025-01-10T12:40:39.9185300Z 
2025-01-10T12:40:39.9185468Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9185590Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9185676Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9185754Z         try:
2025-01-10T12:40:39.9185895Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9185989Z         except KeyError:
2025-01-10T12:40:39.9186229Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9186308Z     
2025-01-10T12:40:39.9186396Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9186496Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9186590Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9186722Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9186815Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9186906Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9187027Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9187032Z 
2025-01-10T12:40:39.9187158Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9187277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9187424Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9187623Z     ???
2025-01-10T12:40:39.9187737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9187741Z 
2025-01-10T12:40:39.9187820Z >   ???
2025-01-10T12:40:39.9187956Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9188029Z E   
2025-01-10T12:40:39.9188163Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9188278Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9188358Z E          ...
2025-01-10T12:40:39.9188448Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9188589Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9188704Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9188783Z E          ...
2025-01-10T12:40:39.9188870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9189003Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9189113Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9189117Z 
2025-01-10T12:40:39.9189213Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9189500Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-10T12:40:39.9189505Z 
2025-01-10T12:40:39.9189633Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9189767Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9189864Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9190004Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9190127Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9190226Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9190305Z err_msg = None
2025-01-10T12:40:39.9190310Z 
2025-01-10T12:40:39.9190424Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9190511Z         if err_msg is None:
2025-01-10T12:40:39.9190608Z             if left.shape != right.shape:
2025-01-10T12:40:39.9190701Z                 raise_assert_detail(
2025-01-10T12:40:39.9190849Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9190928Z                 )
2025-01-10T12:40:39.9191000Z     
2025-01-10T12:40:39.9191080Z             diff = 0
2025-01-10T12:40:39.9191191Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9191407Z                 # count up differences
2025-01-10T12:40:39.9191580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9191665Z                     diff += 1
2025-01-10T12:40:39.9191737Z     
2025-01-10T12:40:39.9191830Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9191974Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9192155Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9192272Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9192347Z E           
2025-01-10T12:40:39.9192462Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9192717Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9192979Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9193065Z 
2025-01-10T12:40:39.9193374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9193379Z 
2025-01-10T12:40:39.9193547Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9193551Z 
2025-01-10T12:40:39.9193778Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026330>
2025-01-10T12:40:39.9193947Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9194039Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9194044Z 
2025-01-10T12:40:39.9194180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9194301Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9194387Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9194472Z         try:
2025-01-10T12:40:39.9194618Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9194702Z         except KeyError:
2025-01-10T12:40:39.9194843Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9194916Z     
2025-01-10T12:40:39.9195008Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9195103Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9195199Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9195330Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9195422Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9195515Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9195631Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9195636Z 
2025-01-10T12:40:39.9195760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9195878Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9196033Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9196287Z     ???
2025-01-10T12:40:39.9196418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9196423Z 
2025-01-10T12:40:39.9196495Z >   ???
2025-01-10T12:40:39.9196628Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9196703Z E   
2025-01-10T12:40:39.9196835Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9196947Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9197026Z E          ...
2025-01-10T12:40:39.9197243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9197376Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9197489Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9197568Z E          ...
2025-01-10T12:40:39.9197663Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9197793Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9197902Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9197906Z 
2025-01-10T12:40:39.9197995Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9198266Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-10T12:40:39.9198271Z 
2025-01-10T12:40:39.9198398Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9198531Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9198633Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9198802Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9198934Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9199163Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9199252Z err_msg = None
2025-01-10T12:40:39.9199257Z 
2025-01-10T12:40:39.9199373Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9199456Z         if err_msg is None:
2025-01-10T12:40:39.9199560Z             if left.shape != right.shape:
2025-01-10T12:40:39.9199646Z                 raise_assert_detail(
2025-01-10T12:40:39.9199797Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9199871Z                 )
2025-01-10T12:40:39.9199955Z     
2025-01-10T12:40:39.9200093Z             diff = 0
2025-01-10T12:40:39.9200305Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9200462Z                 # count up differences
2025-01-10T12:40:39.9200750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9200888Z                     diff += 1
2025-01-10T12:40:39.9201016Z     
2025-01-10T12:40:39.9201179Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9201330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9201507Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9201623Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9201703Z E           
2025-01-10T12:40:39.9201815Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9202073Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9202338Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9202349Z 
2025-01-10T12:40:39.9202653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9202657Z 
2025-01-10T12:40:39.9202829Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9202834Z 
2025-01-10T12:40:39.9203056Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70263f0>
2025-01-10T12:40:39.9203266Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>, attr = 'f_lu'
2025-01-10T12:40:39.9203367Z 
2025-01-10T12:40:39.9203511Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9203628Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9203718Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9203794Z         try:
2025-01-10T12:40:39.9203935Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9204017Z         except KeyError:
2025-01-10T12:40:39.9204154Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9204225Z     
2025-01-10T12:40:39.9204318Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9204410Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9204501Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9204631Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9204721Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9204818Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9204928Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9204933Z 
2025-01-10T12:40:39.9205062Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9205173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9205424Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9205498Z     ???
2025-01-10T12:40:39.9205610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9205615Z 
2025-01-10T12:40:39.9205687Z >   ???
2025-01-10T12:40:39.9205818Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9205890Z E   
2025-01-10T12:40:39.9206023Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9206254Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9206330Z E          ...
2025-01-10T12:40:39.9206431Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9206558Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9206674Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9206748Z E          ...
2025-01-10T12:40:39.9206840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9206970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9207079Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9207083Z 
2025-01-10T12:40:39.9207172Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9207494Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-10T12:40:39.9207500Z 
2025-01-10T12:40:39.9207727Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f70269f0>
2025-01-10T12:40:39.9207894Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9207994Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9207999Z 
2025-01-10T12:40:39.9208132Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9208249Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9208334Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9208415Z         try:
2025-01-10T12:40:39.9208552Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9208638Z         except KeyError:
2025-01-10T12:40:39.9208770Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9208847Z     
2025-01-10T12:40:39.9208933Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9209030Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9209126Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9209257Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9209347Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9209562Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9209675Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9209749Z             else:
2025-01-10T12:40:39.9209850Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9209956Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9209965Z 
2025-01-10T12:40:39.9210093Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9210203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9210358Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9210431Z     ???
2025-01-10T12:40:39.9210544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9210549Z 
2025-01-10T12:40:39.9210625Z >   ???
2025-01-10T12:40:39.9210805Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9210882Z E   
2025-01-10T12:40:39.9211053Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T12:40:39.9211417Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9216159Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T12:40:39.9221218Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T12:40:39.9221747Z E   At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T12:40:39.9221763Z 
2025-01-10T12:40:39.9221917Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9222375Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-10T12:40:39.9222496Z 
2025-01-10T12:40:39.9222630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9222769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9222869Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9223008Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9223134Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9223236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9223315Z err_msg = None
2025-01-10T12:40:39.9223327Z 
2025-01-10T12:40:39.9223438Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9223526Z         if err_msg is None:
2025-01-10T12:40:39.9223630Z             if left.shape != right.shape:
2025-01-10T12:40:39.9223724Z                 raise_assert_detail(
2025-01-10T12:40:39.9223872Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9223951Z                 )
2025-01-10T12:40:39.9224023Z     
2025-01-10T12:40:39.9224124Z             diff = 0
2025-01-10T12:40:39.9224244Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9224339Z                 # count up differences
2025-01-10T12:40:39.9224510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9224595Z                     diff += 1
2025-01-10T12:40:39.9224670Z     
2025-01-10T12:40:39.9224759Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9224897Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9225071Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9225193Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9225267Z E           
2025-01-10T12:40:39.9225384Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9225641Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9225902Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9225994Z 
2025-01-10T12:40:39.9226422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9226434Z 
2025-01-10T12:40:39.9226605Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9226610Z 
2025-01-10T12:40:39.9226840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026ab0>
2025-01-10T12:40:39.9227008Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9227105Z attr = 'previous_beta_sobolev'
2025-01-10T12:40:39.9227110Z 
2025-01-10T12:40:39.9227249Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9227370Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9227467Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9227541Z         try:
2025-01-10T12:40:39.9227687Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9227770Z         except KeyError:
2025-01-10T12:40:39.9227909Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9228098Z     
2025-01-10T12:40:39.9228192Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9228286Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9228383Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9228520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9228613Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9228703Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9228820Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9228895Z             else:
2025-01-10T12:40:39.9228997Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9229118Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9229123Z 
2025-01-10T12:40:39.9229247Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9229371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9229515Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9229600Z     ???
2025-01-10T12:40:39.9229709Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9229714Z 
2025-01-10T12:40:39.9229792Z >   ???
2025-01-10T12:40:39.9229920Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9229997Z E   
2025-01-10T12:40:39.9230126Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9230243Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9230327Z E          ...
2025-01-10T12:40:39.9230417Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9230555Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9230668Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9230745Z E          ...
2025-01-10T12:40:39.9230831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9230964Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9231077Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9231082Z 
2025-01-10T12:40:39.9231177Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9231455Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-10T12:40:39.9231460Z 
2025-01-10T12:40:39.9231593Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9231725Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9231823Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9232080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9232201Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9232302Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9232384Z err_msg = None
2025-01-10T12:40:39.9232389Z 
2025-01-10T12:40:39.9232503Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9232585Z         if err_msg is None:
2025-01-10T12:40:39.9232688Z             if left.shape != right.shape:
2025-01-10T12:40:39.9232774Z                 raise_assert_detail(
2025-01-10T12:40:39.9232924Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9233002Z                 )
2025-01-10T12:40:39.9233074Z     
2025-01-10T12:40:39.9233154Z             diff = 0
2025-01-10T12:40:39.9233266Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9233363Z                 # count up differences
2025-01-10T12:40:39.9233534Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9233618Z                     diff += 1
2025-01-10T12:40:39.9233689Z     
2025-01-10T12:40:39.9233782Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9234022Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9234197Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9234309Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9234389Z E           
2025-01-10T12:40:39.9234500Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9234758Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9235023Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9235033Z 
2025-01-10T12:40:39.9235339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9235349Z 
2025-01-10T12:40:39.9235514Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9235518Z 
2025-01-10T12:40:39.9235745Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026b70>
2025-01-10T12:40:39.9235910Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9235997Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9236002Z 
2025-01-10T12:40:39.9236333Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9236460Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9236546Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9236628Z         try:
2025-01-10T12:40:39.9236772Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9236862Z         except KeyError:
2025-01-10T12:40:39.9237002Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9237079Z     
2025-01-10T12:40:39.9237171Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9237265Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9237359Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9237490Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9237581Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9237796Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9237916Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9237989Z             else:
2025-01-10T12:40:39.9238091Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9238199Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9238216Z 
2025-01-10T12:40:39.9238442Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9238636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9238892Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9239018Z     ???
2025-01-10T12:40:39.9239200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9239209Z 
2025-01-10T12:40:39.9239338Z >   ???
2025-01-10T12:40:39.9239473Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9239554Z E   
2025-01-10T12:40:39.9239681Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9239810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9239884Z E          ...
2025-01-10T12:40:39.9239977Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9240106Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9240353Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9240428Z E          ...
2025-01-10T12:40:39.9240520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9240650Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9240753Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9240757Z 
2025-01-10T12:40:39.9240851Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9241124Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-10T12:40:39.9241128Z 
2025-01-10T12:40:39.9241276Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9241401Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9241504Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9241639Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9241768Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9241866Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9241942Z err_msg = None
2025-01-10T12:40:39.9241947Z 
2025-01-10T12:40:39.9242060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9242142Z         if err_msg is None:
2025-01-10T12:40:39.9242240Z             if left.shape != right.shape:
2025-01-10T12:40:39.9242329Z                 raise_assert_detail(
2025-01-10T12:40:39.9242480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9242558Z                 )
2025-01-10T12:40:39.9242633Z     
2025-01-10T12:40:39.9242707Z             diff = 0
2025-01-10T12:40:39.9242825Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9242913Z                 # count up differences
2025-01-10T12:40:39.9243101Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9243187Z                     diff += 1
2025-01-10T12:40:39.9243258Z     
2025-01-10T12:40:39.9243350Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9243491Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9243673Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9243787Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9243865Z E           
2025-01-10T12:40:39.9243977Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9244325Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9244587Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9244592Z 
2025-01-10T12:40:39.9244899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9244903Z 
2025-01-10T12:40:39.9245077Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9245085Z 
2025-01-10T12:40:39.9245305Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026c30>
2025-01-10T12:40:39.9245477Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9245561Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9245641Z 
2025-01-10T12:40:39.9245779Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9245899Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9245984Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9246198Z         try:
2025-01-10T12:40:39.9246340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9246427Z         except KeyError:
2025-01-10T12:40:39.9246566Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9246641Z     
2025-01-10T12:40:39.9246728Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9246827Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9246922Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9247057Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9247147Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9247238Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9247352Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9247432Z             else:
2025-01-10T12:40:39.9247531Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9247641Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9247645Z 
2025-01-10T12:40:39.9247774Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9247888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9248038Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9248114Z     ???
2025-01-10T12:40:39.9248228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9248236Z 
2025-01-10T12:40:39.9248311Z >   ???
2025-01-10T12:40:39.9248437Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9248514Z E   
2025-01-10T12:40:39.9248643Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9248759Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9248836Z E          ...
2025-01-10T12:40:39.9248930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9249059Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9249176Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9249249Z E          ...
2025-01-10T12:40:39.9249344Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9249469Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9249583Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9249732Z 
2025-01-10T12:40:39.9249825Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9250098Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-10T12:40:39.9250104Z 
2025-01-10T12:40:39.9250235Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9250368Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9250468Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9250601Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9250733Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9250826Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9250912Z err_msg = None
2025-01-10T12:40:39.9250916Z 
2025-01-10T12:40:39.9251030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9251116Z         if err_msg is None:
2025-01-10T12:40:39.9251215Z             if left.shape != right.shape:
2025-01-10T12:40:39.9251299Z                 raise_assert_detail(
2025-01-10T12:40:39.9251452Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9251642Z                 )
2025-01-10T12:40:39.9251718Z     
2025-01-10T12:40:39.9251793Z             diff = 0
2025-01-10T12:40:39.9251916Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9252003Z                 # count up differences
2025-01-10T12:40:39.9252182Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9252261Z                     diff += 1
2025-01-10T12:40:39.9252338Z     
2025-01-10T12:40:39.9252427Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9252566Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9252744Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9252856Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9252934Z E           
2025-01-10T12:40:39.9253044Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9253302Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9253563Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9253582Z 
2025-01-10T12:40:39.9253885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9253890Z 
2025-01-10T12:40:39.9254060Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9254065Z 
2025-01-10T12:40:39.9254287Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7026db0>
2025-01-10T12:40:39.9254462Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c17dbb60>
2025-01-10T12:40:39.9254542Z attr = 'j_blues'
2025-01-10T12:40:39.9254547Z 
2025-01-10T12:40:39.9254688Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9254803Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9254893Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9254970Z         try:
2025-01-10T12:40:39.9255109Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9255195Z         except KeyError:
2025-01-10T12:40:39.9255439Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9255515Z     
2025-01-10T12:40:39.9255602Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9255700Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9255788Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9255928Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9256016Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9256204Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9256317Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9256400Z             else:
2025-01-10T12:40:39.9256499Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9256612Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9256616Z 
2025-01-10T12:40:39.9256747Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9256861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9257068Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9257191Z     ???
2025-01-10T12:40:39.9257382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9257389Z 
2025-01-10T12:40:39.9257669Z >   ???
2025-01-10T12:40:39.9257892Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9258016Z E   
2025-01-10T12:40:39.9258192Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9258305Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9258384Z E          ...
2025-01-10T12:40:39.9258477Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9258606Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9258724Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9258796Z E          ...
2025-01-10T12:40:39.9258900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9259022Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9259133Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9259138Z 
2025-01-10T12:40:39.9259230Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9259493Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-10T12:40:39.9259499Z 
2025-01-10T12:40:39.9259629Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9259761Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9259872Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9260002Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9260129Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9260228Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9260309Z err_msg = None
2025-01-10T12:40:39.9260313Z 
2025-01-10T12:40:39.9260423Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9260512Z         if err_msg is None:
2025-01-10T12:40:39.9260609Z             if left.shape != right.shape:
2025-01-10T12:40:39.9260703Z                 raise_assert_detail(
2025-01-10T12:40:39.9260845Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9260924Z                 )
2025-01-10T12:40:39.9261000Z     
2025-01-10T12:40:39.9261075Z             diff = 0
2025-01-10T12:40:39.9261189Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9261279Z                 # count up differences
2025-01-10T12:40:39.9261453Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9261532Z                     diff += 1
2025-01-10T12:40:39.9261751Z     
2025-01-10T12:40:39.9261842Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9261984Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9262151Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9262273Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9262346Z E           
2025-01-10T12:40:39.9262463Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9262715Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9262976Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9262986Z 
2025-01-10T12:40:39.9263295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9263377Z 
2025-01-10T12:40:39.9263545Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9263554Z 
2025-01-10T12:40:39.9263777Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027b30>
2025-01-10T12:40:39.9263954Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9264030Z attr = 'lines'
2025-01-10T12:40:39.9264035Z 
2025-01-10T12:40:39.9264176Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9264293Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9264388Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9264461Z         try:
2025-01-10T12:40:39.9264605Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9264687Z         except KeyError:
2025-01-10T12:40:39.9264829Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9264905Z     
2025-01-10T12:40:39.9264998Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9265098Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9265187Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9265327Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9265413Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9265508Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9265617Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9265697Z             else:
2025-01-10T12:40:39.9265791Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9265905Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9265909Z 
2025-01-10T12:40:39.9266036Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9266275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9266422Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9266504Z     ???
2025-01-10T12:40:39.9266616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9266621Z 
2025-01-10T12:40:39.9266691Z >   ???
2025-01-10T12:40:39.9266822Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9266892Z E   
2025-01-10T12:40:39.9267022Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9267131Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9267209Z E          ...
2025-01-10T12:40:39.9267296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9267555Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9267666Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9267745Z E          ...
2025-01-10T12:40:39.9267831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9267960Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9268071Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9268075Z 
2025-01-10T12:40:39.9268166Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9268465Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-10T12:40:39.9268471Z 
2025-01-10T12:40:39.9268691Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027bf0>
2025-01-10T12:40:39.9268863Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9268954Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9268963Z 
2025-01-10T12:40:39.9269103Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9269217Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9269308Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9269386Z         try:
2025-01-10T12:40:39.9269524Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9269732Z         except KeyError:
2025-01-10T12:40:39.9269868Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9269944Z     
2025-01-10T12:40:39.9270031Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9270131Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9270219Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9270355Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9270441Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9270536Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9270648Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9270653Z 
2025-01-10T12:40:39.9270781Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9270896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9270901Z 
2025-01-10T12:40:39.9271038Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9271129Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9271238Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9271326Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9271466Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9271556Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9271660Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9271744Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9271823Z err_msg = None
2025-01-10T12:40:39.9271833Z 
2025-01-10T12:40:39.9271942Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9272028Z         if err_msg is None:
2025-01-10T12:40:39.9272123Z             if left.shape != right.shape:
2025-01-10T12:40:39.9272213Z                 raise_assert_detail(
2025-01-10T12:40:39.9272358Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9272437Z                 )
2025-01-10T12:40:39.9272512Z     
2025-01-10T12:40:39.9272591Z             diff = 0
2025-01-10T12:40:39.9272703Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9272798Z                 # count up differences
2025-01-10T12:40:39.9272967Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9273052Z                     diff += 1
2025-01-10T12:40:39.9273124Z     
2025-01-10T12:40:39.9273218Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9273444Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9273618Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9273727Z E           AssertionError: Series are different
2025-01-10T12:40:39.9273804Z E           
2025-01-10T12:40:39.9273910Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9274270Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9274596Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9274928Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9275012Z 
2025-01-10T12:40:39.9275323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9275616Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-10T12:40:39.9275621Z 
2025-01-10T12:40:39.9275847Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027cb0>
2025-01-10T12:40:39.9276015Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9276298Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9276309Z 
2025-01-10T12:40:39.9276459Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9276587Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9276672Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9276750Z         try:
2025-01-10T12:40:39.9276889Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9276977Z         except KeyError:
2025-01-10T12:40:39.9277114Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9277191Z     
2025-01-10T12:40:39.9277278Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9277378Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9277471Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9277611Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9277701Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9277790Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9277905Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9277914Z 
2025-01-10T12:40:39.9278038Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9278153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9278158Z 
2025-01-10T12:40:39.9278290Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9278381Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9278489Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9278575Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9278718Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9278946Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9279056Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9279136Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9279218Z err_msg = None
2025-01-10T12:40:39.9279226Z 
2025-01-10T12:40:39.9279334Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9279425Z         if err_msg is None:
2025-01-10T12:40:39.9279518Z             if left.shape != right.shape:
2025-01-10T12:40:39.9279611Z                 raise_assert_detail(
2025-01-10T12:40:39.9279751Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9279830Z                 )
2025-01-10T12:40:39.9279908Z     
2025-01-10T12:40:39.9279983Z             diff = 0
2025-01-10T12:40:39.9280099Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9280187Z                 # count up differences
2025-01-10T12:40:39.9280364Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9280443Z                     diff += 1
2025-01-10T12:40:39.9280519Z     
2025-01-10T12:40:39.9280606Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9280743Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9281026Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9281134Z E           AssertionError: Series are different
2025-01-10T12:40:39.9281208Z E           
2025-01-10T12:40:39.9281314Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9281676Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9282356Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9283016Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9283029Z 
2025-01-10T12:40:39.9283344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9283589Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-10T12:40:39.9283595Z 
2025-01-10T12:40:39.9283733Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9283861Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9283965Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9284096Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9284224Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9284323Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9284497Z err_msg = None
2025-01-10T12:40:39.9284502Z 
2025-01-10T12:40:39.9284614Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9284697Z         if err_msg is None:
2025-01-10T12:40:39.9284795Z             if left.shape != right.shape:
2025-01-10T12:40:39.9284881Z                 raise_assert_detail(
2025-01-10T12:40:39.9285034Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9285108Z                 )
2025-01-10T12:40:39.9285187Z     
2025-01-10T12:40:39.9285262Z             diff = 0
2025-01-10T12:40:39.9285380Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9285466Z                 # count up differences
2025-01-10T12:40:39.9285636Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9285720Z                     diff += 1
2025-01-10T12:40:39.9285791Z     
2025-01-10T12:40:39.9285883Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9286020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9286301Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9286416Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9286495Z E           
2025-01-10T12:40:39.9286728Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9286986Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9287248Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9287259Z 
2025-01-10T12:40:39.9287555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9287560Z 
2025-01-10T12:40:39.9287730Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9287740Z 
2025-01-10T12:40:39.9287961Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027ef0>
2025-01-10T12:40:39.9288166Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>, attr = 'nu'
2025-01-10T12:40:39.9288171Z 
2025-01-10T12:40:39.9288312Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9288427Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9288517Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9288590Z         try:
2025-01-10T12:40:39.9288734Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9288820Z         except KeyError:
2025-01-10T12:40:39.9288962Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9289044Z     
2025-01-10T12:40:39.9289149Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9289242Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9289338Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9289468Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9289561Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9289655Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9289766Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9289771Z 
2025-01-10T12:40:39.9289902Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9290021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9290175Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9290366Z     ???
2025-01-10T12:40:39.9290481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9290485Z 
2025-01-10T12:40:39.9290557Z >   ???
2025-01-10T12:40:39.9290692Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9290765Z E   
2025-01-10T12:40:39.9290901Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9291019Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9291094Z E          ...
2025-01-10T12:40:39.9291188Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9291318Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9291439Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9291513Z E          ...
2025-01-10T12:40:39.9291606Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9291729Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9291842Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9291847Z 
2025-01-10T12:40:39.9291936Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9292208Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-10T12:40:39.9292294Z 
2025-01-10T12:40:39.9292430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9292556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9292658Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9292789Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9292915Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9293011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9293097Z err_msg = None
2025-01-10T12:40:39.9293101Z 
2025-01-10T12:40:39.9293211Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9293299Z         if err_msg is None:
2025-01-10T12:40:39.9293393Z             if left.shape != right.shape:
2025-01-10T12:40:39.9293484Z                 raise_assert_detail(
2025-01-10T12:40:39.9293636Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9293711Z                 )
2025-01-10T12:40:39.9293788Z     
2025-01-10T12:40:39.9293863Z             diff = 0
2025-01-10T12:40:39.9293979Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9294066Z                 # count up differences
2025-01-10T12:40:39.9294239Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9294322Z                     diff += 1
2025-01-10T12:40:39.9294400Z     
2025-01-10T12:40:39.9294487Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9294636Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9294804Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9294924Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9295006Z E           
2025-01-10T12:40:39.9295122Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9295383Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9295642Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9295732Z 
2025-01-10T12:40:39.9296049Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9296146Z 
2025-01-10T12:40:39.9296330Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9296340Z 
2025-01-10T12:40:39.9296566Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f7027fb0>
2025-01-10T12:40:39.9296741Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9296827Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9296831Z 
2025-01-10T12:40:39.9296977Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9297096Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9297191Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9297267Z         try:
2025-01-10T12:40:39.9297422Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9297505Z         except KeyError:
2025-01-10T12:40:39.9297653Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9297735Z     
2025-01-10T12:40:39.9297827Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9298070Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9298163Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9298300Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9298388Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9298487Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9298599Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9298604Z 
2025-01-10T12:40:39.9298767Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9298888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9299050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9299130Z     ???
2025-01-10T12:40:39.9299242Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9299247Z 
2025-01-10T12:40:39.9299325Z >   ???
2025-01-10T12:40:39.9299456Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9299538Z E   
2025-01-10T12:40:39.9299667Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9299785Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9299861Z E          ...
2025-01-10T12:40:39.9299958Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9300091Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9300209Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9300283Z E          ...
2025-01-10T12:40:39.9300377Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9300508Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9300625Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9300630Z 
2025-01-10T12:40:39.9308010Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9308325Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-10T12:40:39.9308342Z 
2025-01-10T12:40:39.9308532Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9308759Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9308935Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9309166Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9309390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9309563Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9309844Z err_msg = None
2025-01-10T12:40:39.9309851Z 
2025-01-10T12:40:39.9309986Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9310072Z         if err_msg is None:
2025-01-10T12:40:39.9310178Z             if left.shape != right.shape:
2025-01-10T12:40:39.9310272Z                 raise_assert_detail(
2025-01-10T12:40:39.9310432Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9310508Z                 )
2025-01-10T12:40:39.9310585Z     
2025-01-10T12:40:39.9310661Z             diff = 0
2025-01-10T12:40:39.9310783Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9310877Z                 # count up differences
2025-01-10T12:40:39.9311066Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9311147Z                     diff += 1
2025-01-10T12:40:39.9311223Z     
2025-01-10T12:40:39.9311314Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9311469Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9311649Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9311767Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9311964Z E           
2025-01-10T12:40:39.9312078Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9312341Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9312598Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9312615Z 
2025-01-10T12:40:39.9312937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9312949Z 
2025-01-10T12:40:39.9313135Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9313140Z 
2025-01-10T12:40:39.9313367Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e500b0>
2025-01-10T12:40:39.9313582Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>, attr = 'f_lu'
2025-01-10T12:40:39.9313586Z 
2025-01-10T12:40:39.9313728Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9313855Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9313952Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9314026Z         try:
2025-01-10T12:40:39.9314179Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9314263Z         except KeyError:
2025-01-10T12:40:39.9314410Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9314484Z     
2025-01-10T12:40:39.9314578Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9314679Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9314777Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9314912Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9315006Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9315096Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9315213Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9315218Z 
2025-01-10T12:40:39.9315351Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9315474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9315723Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9315799Z     ???
2025-01-10T12:40:39.9315920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9315925Z 
2025-01-10T12:40:39.9315998Z >   ???
2025-01-10T12:40:39.9316362Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9316450Z E   
2025-01-10T12:40:39.9316591Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9316702Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9316782Z E          ...
2025-01-10T12:40:39.9316871Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9317010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9317130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9317205Z E          ...
2025-01-10T12:40:39.9317299Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9317430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9317544Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9317549Z 
2025-01-10T12:40:39.9317641Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9317957Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-10T12:40:39.9318089Z 
2025-01-10T12:40:39.9318318Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e506b0>
2025-01-10T12:40:39.9318494Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9318587Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9318598Z 
2025-01-10T12:40:39.9318739Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9318863Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9318951Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9319032Z         try:
2025-01-10T12:40:39.9319185Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9319276Z         except KeyError:
2025-01-10T12:40:39.9319415Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9319493Z     
2025-01-10T12:40:39.9319617Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9319813Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9319980Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9320224Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9320374Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9320539Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9320737Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9320875Z             else:
2025-01-10T12:40:39.9320987Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9321105Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9321110Z 
2025-01-10T12:40:39.9321259Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9321378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9321533Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9321608Z     ???
2025-01-10T12:40:39.9321734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9321738Z 
2025-01-10T12:40:39.9321814Z >   ???
2025-01-10T12:40:39.9321999Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9322078Z E   
2025-01-10T12:40:39.9322246Z E   DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:39.9322613Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9327717Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:39.9332714Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:39.9332913Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:39.9333044Z 
2025-01-10T12:40:39.9333146Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9333438Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-10T12:40:39.9333443Z 
2025-01-10T12:40:39.9333585Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9333729Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9333841Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9333986Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9334114Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9334217Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9334297Z err_msg = None
2025-01-10T12:40:39.9334302Z 
2025-01-10T12:40:39.9334434Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9334519Z         if err_msg is None:
2025-01-10T12:40:39.9334623Z             if left.shape != right.shape:
2025-01-10T12:40:39.9334714Z                 raise_assert_detail(
2025-01-10T12:40:39.9334869Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9335048Z                 )
2025-01-10T12:40:39.9335130Z     
2025-01-10T12:40:39.9335213Z             diff = 0
2025-01-10T12:40:39.9335332Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9335430Z                 # count up differences
2025-01-10T12:40:39.9335604Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9335695Z                     diff += 1
2025-01-10T12:40:39.9335770Z     
2025-01-10T12:40:39.9335867Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9336005Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9336290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9336410Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9336495Z E           
2025-01-10T12:40:39.9336610Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9336880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9337142Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9337152Z 
2025-01-10T12:40:39.9337464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9337469Z 
2025-01-10T12:40:39.9337647Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9337652Z 
2025-01-10T12:40:39.9337888Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e50770>
2025-01-10T12:40:39.9338054Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9338152Z attr = 'previous_beta_sobolev'
2025-01-10T12:40:39.9338156Z 
2025-01-10T12:40:39.9338300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9338424Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9338510Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9338589Z         try:
2025-01-10T12:40:39.9338735Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9338947Z         except KeyError:
2025-01-10T12:40:39.9339194Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9339335Z     
2025-01-10T12:40:39.9339487Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9339656Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9339816Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9340062Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9340167Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9340267Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9340387Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9340463Z             else:
2025-01-10T12:40:39.9340562Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9340672Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9340676Z 
2025-01-10T12:40:39.9340813Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9340938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9341094Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9341175Z     ???
2025-01-10T12:40:39.9341287Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9341421Z 
2025-01-10T12:40:39.9341501Z >   ???
2025-01-10T12:40:39.9341633Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9341716Z E   
2025-01-10T12:40:39.9341847Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9341967Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9342043Z E          ...
2025-01-10T12:40:39.9342139Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9342272Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9342394Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9342474Z E          ...
2025-01-10T12:40:39.9342573Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9342702Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9342814Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9342818Z 
2025-01-10T12:40:39.9342913Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9343187Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-10T12:40:39.9343193Z 
2025-01-10T12:40:39.9343331Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9343460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9343564Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9343698Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9343828Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9343932Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9344013Z err_msg = None
2025-01-10T12:40:39.9344017Z 
2025-01-10T12:40:39.9344134Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9344219Z         if err_msg is None:
2025-01-10T12:40:39.9344321Z             if left.shape != right.shape:
2025-01-10T12:40:39.9344412Z                 raise_assert_detail(
2025-01-10T12:40:39.9344564Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9344638Z                 )
2025-01-10T12:40:39.9344717Z     
2025-01-10T12:40:39.9344794Z             diff = 0
2025-01-10T12:40:39.9344913Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9345003Z                 # count up differences
2025-01-10T12:40:39.9345182Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9345356Z                     diff += 1
2025-01-10T12:40:39.9345429Z     
2025-01-10T12:40:39.9345526Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9345661Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9345831Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9345945Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9346019Z E           
2025-01-10T12:40:39.9346237Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9346498Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9346753Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9346769Z 
2025-01-10T12:40:39.9347076Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9347195Z 
2025-01-10T12:40:39.9347373Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9347379Z 
2025-01-10T12:40:39.9347600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e50830>
2025-01-10T12:40:39.9347771Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9347853Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9347862Z 
2025-01-10T12:40:39.9347998Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9348118Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9348210Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9348289Z         try:
2025-01-10T12:40:39.9348431Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9348521Z         except KeyError:
2025-01-10T12:40:39.9348661Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9348748Z     
2025-01-10T12:40:39.9348836Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9348937Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9349028Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9349167Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9349255Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9349355Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9349475Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9349552Z             else:
2025-01-10T12:40:39.9349661Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9349769Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9349774Z 
2025-01-10T12:40:39.9349906Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9350020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9350181Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9350256Z     ???
2025-01-10T12:40:39.9350373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9350377Z 
2025-01-10T12:40:39.9350451Z >   ???
2025-01-10T12:40:39.9350586Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9350667Z E   
2025-01-10T12:40:39.9350797Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9350917Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9350996Z E          ...
2025-01-10T12:40:39.9351224Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9351358Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9351484Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9351560Z E          ...
2025-01-10T12:40:39.9351660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9351794Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9351909Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9351913Z 
2025-01-10T12:40:39.9352007Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9352283Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-10T12:40:39.9352288Z 
2025-01-10T12:40:39.9352425Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9352559Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9352671Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9352809Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9352938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9353120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9353211Z err_msg = None
2025-01-10T12:40:39.9353215Z 
2025-01-10T12:40:39.9353328Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9353420Z         if err_msg is None:
2025-01-10T12:40:39.9353525Z             if left.shape != right.shape:
2025-01-10T12:40:39.9353616Z                 raise_assert_detail(
2025-01-10T12:40:39.9353770Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9353847Z                 )
2025-01-10T12:40:39.9353926Z     
2025-01-10T12:40:39.9354002Z             diff = 0
2025-01-10T12:40:39.9354127Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9354219Z                 # count up differences
2025-01-10T12:40:39.9354399Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9354481Z                     diff += 1
2025-01-10T12:40:39.9354565Z     
2025-01-10T12:40:39.9354657Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9354799Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9354973Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9355098Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9355179Z E           
2025-01-10T12:40:39.9355293Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9355556Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9355819Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9355829Z 
2025-01-10T12:40:39.9356351Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9356361Z 
2025-01-10T12:40:39.9356547Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9356552Z 
2025-01-10T12:40:39.9356780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e508f0>
2025-01-10T12:40:39.9356954Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9357193Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9357197Z 
2025-01-10T12:40:39.9357344Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9357464Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9357559Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9357639Z         try:
2025-01-10T12:40:39.9357900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9358050Z         except KeyError:
2025-01-10T12:40:39.9358283Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9358410Z     
2025-01-10T12:40:39.9358560Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9358733Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9358835Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9358974Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9359063Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9359165Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9359278Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9359358Z             else:
2025-01-10T12:40:39.9359454Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9359569Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9359698Z 
2025-01-10T12:40:39.9359835Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9359951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9360103Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9360179Z     ???
2025-01-10T12:40:39.9360294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9360299Z 
2025-01-10T12:40:39.9360371Z >   ???
2025-01-10T12:40:39.9360505Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9360582Z E   
2025-01-10T12:40:39.9360717Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9360830Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9360910Z E          ...
2025-01-10T12:40:39.9361001Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9361140Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9361263Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9361338Z E          ...
2025-01-10T12:40:39.9361432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9361557Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9361669Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9361674Z 
2025-01-10T12:40:39.9361764Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9362029Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-10T12:40:39.9362038Z 
2025-01-10T12:40:39.9362169Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9362302Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9362408Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9362552Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9362682Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9362780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9362863Z err_msg = None
2025-01-10T12:40:39.9362868Z 
2025-01-10T12:40:39.9362980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9363070Z         if err_msg is None:
2025-01-10T12:40:39.9363167Z             if left.shape != right.shape:
2025-01-10T12:40:39.9363262Z                 raise_assert_detail(
2025-01-10T12:40:39.9363495Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9363575Z                 )
2025-01-10T12:40:39.9363647Z     
2025-01-10T12:40:39.9363728Z             diff = 0
2025-01-10T12:40:39.9363847Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9363941Z                 # count up differences
2025-01-10T12:40:39.9364112Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9364192Z                     diff += 1
2025-01-10T12:40:39.9364269Z     
2025-01-10T12:40:39.9364360Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9364502Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9364672Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9364789Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9364866Z E           
2025-01-10T12:40:39.9364989Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9365245Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9365591Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9365597Z 
2025-01-10T12:40:39.9365906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9365911Z 
2025-01-10T12:40:39.9366191Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9366208Z 
2025-01-10T12:40:39.9366435Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e50a70>
2025-01-10T12:40:39.9366608Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6e4a150>
2025-01-10T12:40:39.9366687Z attr = 'j_blues'
2025-01-10T12:40:39.9366696Z 
2025-01-10T12:40:39.9366837Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9366953Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9367046Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9367120Z         try:
2025-01-10T12:40:39.9367266Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9367349Z         except KeyError:
2025-01-10T12:40:39.9367491Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9367564Z     
2025-01-10T12:40:39.9367659Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9367758Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9367854Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9367990Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9368079Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9368176Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9368291Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9368371Z             else:
2025-01-10T12:40:39.9368466Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9368580Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9368585Z 
2025-01-10T12:40:39.9368712Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9368830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9368977Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9369057Z     ???
2025-01-10T12:40:39.9369172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9369296Z 
2025-01-10T12:40:39.9369369Z >   ???
2025-01-10T12:40:39.9369510Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9369583Z E   
2025-01-10T12:40:39.9369716Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9369835Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9369922Z E          ...
2025-01-10T12:40:39.9370012Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9370147Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9370261Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9370341Z E          ...
2025-01-10T12:40:39.9370430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9370561Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9370673Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9370683Z 
2025-01-10T12:40:39.9370774Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9370977Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-10T12:40:39.9370982Z 
2025-01-10T12:40:39.9371113Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9371360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9371459Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9371600Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9371724Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9371826Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9371911Z err_msg = None
2025-01-10T12:40:39.9371915Z 
2025-01-10T12:40:39.9372025Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9372119Z         if err_msg is None:
2025-01-10T12:40:39.9372214Z             if left.shape != right.shape:
2025-01-10T12:40:39.9372303Z                 raise_assert_detail(
2025-01-10T12:40:39.9372446Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9372530Z                 )
2025-01-10T12:40:39.9372603Z     
2025-01-10T12:40:39.9372685Z             diff = 0
2025-01-10T12:40:39.9372797Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9372894Z                 # count up differences
2025-01-10T12:40:39.9373066Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9373145Z                     diff += 1
2025-01-10T12:40:39.9373216Z     
2025-01-10T12:40:39.9373309Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9373451Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9373630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9373748Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9373823Z E           
2025-01-10T12:40:39.9373941Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9374194Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9374460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9374549Z 
2025-01-10T12:40:39.9374858Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9374864Z 
2025-01-10T12:40:39.9375032Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9375037Z 
2025-01-10T12:40:39.9375272Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e517f0>
2025-01-10T12:40:39.9375436Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9375520Z attr = 'lines'
2025-01-10T12:40:39.9375524Z 
2025-01-10T12:40:39.9375659Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9375783Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9375876Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9375951Z         try:
2025-01-10T12:40:39.9376294Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9376440Z         except KeyError:
2025-01-10T12:40:39.9376689Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9376812Z     
2025-01-10T12:40:39.9376966Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9377129Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9377258Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9377526Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9377622Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9377715Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9377835Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9377916Z             else:
2025-01-10T12:40:39.9378015Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9378130Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9378134Z 
2025-01-10T12:40:39.9378263Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9378383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9378535Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9378618Z     ???
2025-01-10T12:40:39.9378729Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9378734Z 
2025-01-10T12:40:39.9378816Z >   ???
2025-01-10T12:40:39.9378944Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9379023Z E   
2025-01-10T12:40:39.9379153Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9379274Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9379354Z E          ...
2025-01-10T12:40:39.9379446Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9379582Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9379697Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9379777Z E          ...
2025-01-10T12:40:39.9379871Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9380003Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9380117Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9380121Z 
2025-01-10T12:40:39.9380216Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9380461Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-10T12:40:39.9380471Z 
2025-01-10T12:40:39.9380698Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e518b0>
2025-01-10T12:40:39.9380869Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9380960Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9380965Z 
2025-01-10T12:40:39.9381108Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9381227Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9381320Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9381533Z         try:
2025-01-10T12:40:39.9381681Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9381764Z         except KeyError:
2025-01-10T12:40:39.9381907Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9381980Z     
2025-01-10T12:40:39.9382074Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9382176Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9382272Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9382410Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9382498Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9382594Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9382707Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9382711Z 
2025-01-10T12:40:39.9382840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9382954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9382964Z 
2025-01-10T12:40:39.9383108Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9383196Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9383309Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9383483Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9383629Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9383712Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9383822Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9383902Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9383982Z err_msg = None
2025-01-10T12:40:39.9383986Z 
2025-01-10T12:40:39.9384100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9384188Z         if err_msg is None:
2025-01-10T12:40:39.9384287Z             if left.shape != right.shape:
2025-01-10T12:40:39.9384379Z                 raise_assert_detail(
2025-01-10T12:40:39.9384525Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9384605Z                 )
2025-01-10T12:40:39.9384677Z     
2025-01-10T12:40:39.9384760Z             diff = 0
2025-01-10T12:40:39.9384878Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9384974Z                 # count up differences
2025-01-10T12:40:39.9385151Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9385232Z                     diff += 1
2025-01-10T12:40:39.9385309Z     
2025-01-10T12:40:39.9385398Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9385539Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9385711Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9385827Z E           AssertionError: Series are different
2025-01-10T12:40:39.9385904Z E           
2025-01-10T12:40:39.9386012Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9386570Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9386910Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9387364Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9387374Z 
2025-01-10T12:40:39.9387693Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9387921Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-10T12:40:39.9387926Z 
2025-01-10T12:40:39.9388153Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51970>
2025-01-10T12:40:39.9388322Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9388420Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9388428Z 
2025-01-10T12:40:39.9388568Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9388687Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9388773Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9388856Z         try:
2025-01-10T12:40:39.9389004Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9389219Z         except KeyError:
2025-01-10T12:40:39.9389363Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9389438Z     
2025-01-10T12:40:39.9389530Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9389625Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9389722Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9389856Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9389949Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9390049Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9390170Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9390175Z 
2025-01-10T12:40:39.9390301Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9390422Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9390427Z 
2025-01-10T12:40:39.9390567Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9390660Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9390775Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9390857Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9391003Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9391088Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9391200Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9391282Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9391372Z err_msg = None
2025-01-10T12:40:39.9391376Z 
2025-01-10T12:40:39.9391483Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9391575Z         if err_msg is None:
2025-01-10T12:40:39.9391679Z             if left.shape != right.shape:
2025-01-10T12:40:39.9391768Z                 raise_assert_detail(
2025-01-10T12:40:39.9391922Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9391997Z                 )
2025-01-10T12:40:39.9392079Z     
2025-01-10T12:40:39.9392157Z             diff = 0
2025-01-10T12:40:39.9392275Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9392365Z                 # count up differences
2025-01-10T12:40:39.9392543Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9392624Z                     diff += 1
2025-01-10T12:40:39.9392703Z     
2025-01-10T12:40:39.9392792Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9393030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9393201Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9393312Z E           AssertionError: Series are different
2025-01-10T12:40:39.9393393Z E           
2025-01-10T12:40:39.9393502Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9393870Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9394235Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9394610Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9394695Z 
2025-01-10T12:40:39.9395065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9395402Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-10T12:40:39.9395416Z 
2025-01-10T12:40:39.9395642Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9395863Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9396036Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9396394Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9396523Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9396626Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9396704Z err_msg = None
2025-01-10T12:40:39.9396708Z 
2025-01-10T12:40:39.9396824Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9396908Z         if err_msg is None:
2025-01-10T12:40:39.9397007Z             if left.shape != right.shape:
2025-01-10T12:40:39.9397094Z                 raise_assert_detail(
2025-01-10T12:40:39.9397247Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9397327Z                 )
2025-01-10T12:40:39.9397400Z     
2025-01-10T12:40:39.9397482Z             diff = 0
2025-01-10T12:40:39.9397593Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9397693Z                 # count up differences
2025-01-10T12:40:39.9397860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9397946Z                     diff += 1
2025-01-10T12:40:39.9398018Z     
2025-01-10T12:40:39.9398113Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9398249Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9398422Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9398539Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9398787Z E           
2025-01-10T12:40:39.9398907Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9399170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9399435Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9399441Z 
2025-01-10T12:40:39.9399747Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9399757Z 
2025-01-10T12:40:39.9399932Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9399937Z 
2025-01-10T12:40:39.9400168Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51bb0>
2025-01-10T12:40:39.9400368Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>, attr = 'nu'
2025-01-10T12:40:39.9400500Z 
2025-01-10T12:40:39.9400648Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9400767Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9400858Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9400932Z         try:
2025-01-10T12:40:39.9401079Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9401165Z         except KeyError:
2025-01-10T12:40:39.9401308Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9401390Z     
2025-01-10T12:40:39.9401485Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9401580Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9401681Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9401814Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9401906Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9401997Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9402120Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9402126Z 
2025-01-10T12:40:39.9402252Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9402373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9402520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9402602Z     ???
2025-01-10T12:40:39.9402713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9402722Z 
2025-01-10T12:40:39.9402795Z >   ???
2025-01-10T12:40:39.9402927Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9403004Z E   
2025-01-10T12:40:39.9403138Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9403250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9403331Z E          ...
2025-01-10T12:40:39.9403421Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9403562Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9403675Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9403753Z E          ...
2025-01-10T12:40:39.9403840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9403970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9404075Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9404086Z 
2025-01-10T12:40:39.9404178Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9404389Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-10T12:40:39.9404483Z 
2025-01-10T12:40:39.9404616Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9404753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9404851Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9404994Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9405121Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9405224Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9405311Z err_msg = None
2025-01-10T12:40:39.9405315Z 
2025-01-10T12:40:39.9405427Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9405516Z         if err_msg is None:
2025-01-10T12:40:39.9405614Z             if left.shape != right.shape:
2025-01-10T12:40:39.9405708Z                 raise_assert_detail(
2025-01-10T12:40:39.9405859Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9405937Z                 )
2025-01-10T12:40:39.9406011Z     
2025-01-10T12:40:39.9406191Z             diff = 0
2025-01-10T12:40:39.9406305Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9406522Z                 # count up differences
2025-01-10T12:40:39.9406693Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9406780Z                     diff += 1
2025-01-10T12:40:39.9406852Z     
2025-01-10T12:40:39.9406949Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9407089Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9407261Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9407380Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9407455Z E           
2025-01-10T12:40:39.9407580Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9407834Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9408104Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9408110Z 
2025-01-10T12:40:39.9408417Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9408422Z 
2025-01-10T12:40:39.9408599Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9408604Z 
2025-01-10T12:40:39.9408836Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51c70>
2025-01-10T12:40:39.9409003Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9409096Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9409101Z 
2025-01-10T12:40:39.9409236Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9409360Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9409453Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9409529Z         try:
2025-01-10T12:40:39.9409677Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9409761Z         except KeyError:
2025-01-10T12:40:39.9409904Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9409977Z     
2025-01-10T12:40:39.9410074Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9410292Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9410386Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9410518Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9410611Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9410704Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9410826Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9410830Z 
2025-01-10T12:40:39.9410962Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9411076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9411227Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9411300Z     ???
2025-01-10T12:40:39.9411418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9411423Z 
2025-01-10T12:40:39.9411495Z >   ???
2025-01-10T12:40:39.9411631Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9411709Z E   
2025-01-10T12:40:39.9411848Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9411963Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9412047Z E          ...
2025-01-10T12:40:39.9412137Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9412360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9412481Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9412557Z E          ...
2025-01-10T12:40:39.9412652Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9412780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9412893Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9412897Z 
2025-01-10T12:40:39.9412989Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9413188Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-10T12:40:39.9413199Z 
2025-01-10T12:40:39.9413327Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9413461Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9413564Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9413704Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9413847Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9413955Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9414108Z err_msg = None
2025-01-10T12:40:39.9414117Z 
2025-01-10T12:40:39.9414299Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9414443Z         if err_msg is None:
2025-01-10T12:40:39.9414604Z             if left.shape != right.shape:
2025-01-10T12:40:39.9414759Z                 raise_assert_detail(
2025-01-10T12:40:39.9415004Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9415121Z                 )
2025-01-10T12:40:39.9415196Z     
2025-01-10T12:40:39.9415278Z             diff = 0
2025-01-10T12:40:39.9415398Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9415497Z                 # count up differences
2025-01-10T12:40:39.9415673Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9415754Z                     diff += 1
2025-01-10T12:40:39.9415832Z     
2025-01-10T12:40:39.9415921Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9416165Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9416339Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9416457Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9416663Z E           
2025-01-10T12:40:39.9416780Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9417033Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9417298Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9417304Z 
2025-01-10T12:40:39.9417616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9417626Z 
2025-01-10T12:40:39.9417794Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9417799Z 
2025-01-10T12:40:39.9418026Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e51d30>
2025-01-10T12:40:39.9418235Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>, attr = 'f_lu'
2025-01-10T12:40:39.9418350Z 
2025-01-10T12:40:39.9418492Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9418613Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9418700Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9418781Z         try:
2025-01-10T12:40:39.9418924Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9419012Z         except KeyError:
2025-01-10T12:40:39.9419150Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9419228Z     
2025-01-10T12:40:39.9419317Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9419423Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9419513Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9419650Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9419743Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9419833Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9419963Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9419969Z 
2025-01-10T12:40:39.9420094Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9420215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9420358Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9420443Z     ???
2025-01-10T12:40:39.9420552Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9420556Z 
2025-01-10T12:40:39.9420634Z >   ???
2025-01-10T12:40:39.9420768Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9420851Z E   
2025-01-10T12:40:39.9420989Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9421104Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9421186Z E          ...
2025-01-10T12:40:39.9421278Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9421419Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9421538Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9421618Z E          ...
2025-01-10T12:40:39.9421705Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9421835Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9421940Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9421944Z 
2025-01-10T12:40:39.9422042Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9422286Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-10T12:40:39.9422397Z 
2025-01-10T12:40:39.9422628Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e52330>
2025-01-10T12:40:39.9422805Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9422898Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9422906Z 
2025-01-10T12:40:39.9423048Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9423165Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9423260Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9423335Z         try:
2025-01-10T12:40:39.9423481Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9423565Z         except KeyError:
2025-01-10T12:40:39.9423707Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9423779Z     
2025-01-10T12:40:39.9423877Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9423977Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9424072Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9424211Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9424297Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9424393Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9424612Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9424693Z             else:
2025-01-10T12:40:39.9424790Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9424903Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9424908Z 
2025-01-10T12:40:39.9425031Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9425150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9425300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9425379Z     ???
2025-01-10T12:40:39.9425494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9425503Z 
2025-01-10T12:40:39.9425575Z >   ???
2025-01-10T12:40:39.9425760Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9425834Z E   
2025-01-10T12:40:39.9426008Z E   DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:39.9426476Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9431320Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:39.9437157Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:39.9437511Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:39.9437517Z 
2025-01-10T12:40:39.9437611Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9437855Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-10T12:40:39.9437860Z 
2025-01-10T12:40:39.9437999Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9438134Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9438245Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9438381Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9438514Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9438615Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9438699Z err_msg = None
2025-01-10T12:40:39.9438703Z 
2025-01-10T12:40:39.9438821Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9438910Z         if err_msg is None:
2025-01-10T12:40:39.9439014Z             if left.shape != right.shape:
2025-01-10T12:40:39.9439102Z                 raise_assert_detail(
2025-01-10T12:40:39.9439255Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9439331Z                 )
2025-01-10T12:40:39.9439522Z     
2025-01-10T12:40:39.9439598Z             diff = 0
2025-01-10T12:40:39.9439718Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9439809Z                 # count up differences
2025-01-10T12:40:39.9439987Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9440073Z                     diff += 1
2025-01-10T12:40:39.9440152Z     
2025-01-10T12:40:39.9440243Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9440386Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9440559Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9440680Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9440761Z E           
2025-01-10T12:40:39.9440875Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9441140Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9441403Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9441490Z 
2025-01-10T12:40:39.9441807Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9441811Z 
2025-01-10T12:40:39.9441989Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9441994Z 
2025-01-10T12:40:39.9442220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e523f0>
2025-01-10T12:40:39.9442397Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9442488Z attr = 'previous_beta_sobolev'
2025-01-10T12:40:39.9442493Z 
2025-01-10T12:40:39.9442639Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9442761Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9442852Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9442926Z         try:
2025-01-10T12:40:39.9443074Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9443164Z         except KeyError:
2025-01-10T12:40:39.9443303Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9443381Z     
2025-01-10T12:40:39.9443470Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9443570Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9443661Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9443796Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9443890Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9443986Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9444097Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9444181Z             else:
2025-01-10T12:40:39.9444285Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9444399Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9444403Z 
2025-01-10T12:40:39.9444536Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9444652Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9444805Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9444880Z     ???
2025-01-10T12:40:39.9444997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9445001Z 
2025-01-10T12:40:39.9445073Z >   ???
2025-01-10T12:40:39.9445295Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9445372Z E   
2025-01-10T12:40:39.9445511Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9445625Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9445705Z E          ...
2025-01-10T12:40:39.9445800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9445939Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9446158Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9446235Z E          ...
2025-01-10T12:40:39.9446331Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9446460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9446570Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9446575Z 
2025-01-10T12:40:39.9446665Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9446874Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-10T12:40:39.9446885Z 
2025-01-10T12:40:39.9447015Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9447157Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9447381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9447514Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9447644Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9447740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9447824Z err_msg = None
2025-01-10T12:40:39.9447828Z 
2025-01-10T12:40:39.9447939Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9448025Z         if err_msg is None:
2025-01-10T12:40:39.9448121Z             if left.shape != right.shape:
2025-01-10T12:40:39.9448216Z                 raise_assert_detail(
2025-01-10T12:40:39.9448360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9448439Z                 )
2025-01-10T12:40:39.9448512Z     
2025-01-10T12:40:39.9448594Z             diff = 0
2025-01-10T12:40:39.9448716Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9448805Z                 # count up differences
2025-01-10T12:40:39.9448980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9449062Z                     diff += 1
2025-01-10T12:40:39.9449141Z     
2025-01-10T12:40:39.9449231Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9449374Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9449544Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9449661Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9449738Z E           
2025-01-10T12:40:39.9449857Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9450113Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9450496Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9450507Z 
2025-01-10T12:40:39.9451041Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9451228Z 
2025-01-10T12:40:39.9451526Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9451542Z 
2025-01-10T12:40:39.9451775Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e524b0>
2025-01-10T12:40:39.9451948Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9452037Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9452042Z 
2025-01-10T12:40:39.9452185Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9452302Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9452395Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9452470Z         try:
2025-01-10T12:40:39.9452616Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9452700Z         except KeyError:
2025-01-10T12:40:39.9452845Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9452918Z     
2025-01-10T12:40:39.9453019Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9453116Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9453211Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9453347Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9453436Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9453644Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9453755Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9453835Z             else:
2025-01-10T12:40:39.9453935Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9454046Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9454051Z 
2025-01-10T12:40:39.9454176Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9454304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9454455Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9454539Z     ???
2025-01-10T12:40:39.9454655Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9454660Z 
2025-01-10T12:40:39.9454732Z >   ???
2025-01-10T12:40:39.9454863Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9454944Z E   
2025-01-10T12:40:39.9455078Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9455191Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9455268Z E          ...
2025-01-10T12:40:39.9455359Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9455496Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9455616Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9455699Z E          ...
2025-01-10T12:40:39.9455788Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9455920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9456036Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9456040Z 
2025-01-10T12:40:39.9456250Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9456465Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-10T12:40:39.9456470Z 
2025-01-10T12:40:39.9456605Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9456747Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9456845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9456984Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9457111Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9457211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9457417Z err_msg = None
2025-01-10T12:40:39.9457421Z 
2025-01-10T12:40:39.9457533Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9457622Z         if err_msg is None:
2025-01-10T12:40:39.9457718Z             if left.shape != right.shape:
2025-01-10T12:40:39.9457809Z                 raise_assert_detail(
2025-01-10T12:40:39.9457960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9458039Z                 )
2025-01-10T12:40:39.9458112Z     
2025-01-10T12:40:39.9458194Z             diff = 0
2025-01-10T12:40:39.9458308Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9458403Z                 # count up differences
2025-01-10T12:40:39.9458572Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9458658Z                     diff += 1
2025-01-10T12:40:39.9458730Z     
2025-01-10T12:40:39.9458825Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9458972Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9459143Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9459261Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9459336Z E           
2025-01-10T12:40:39.9459574Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9459829Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9460090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9460101Z 
2025-01-10T12:40:39.9460419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9460424Z 
2025-01-10T12:40:39.9460593Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9460602Z 
2025-01-10T12:40:39.9460834Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e52570>
2025-01-10T12:40:39.9461004Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9461091Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9461096Z 
2025-01-10T12:40:39.9461233Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9461356Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9461450Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9461525Z         try:
2025-01-10T12:40:39.9461673Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9461763Z         except KeyError:
2025-01-10T12:40:39.9461909Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9461982Z     
2025-01-10T12:40:39.9462077Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9462175Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9462275Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9462407Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9462502Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9462594Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9462712Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9462795Z             else:
2025-01-10T12:40:39.9462891Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9463004Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9463009Z 
2025-01-10T12:40:39.9463221Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9463341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9463489Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9463567Z     ???
2025-01-10T12:40:39.9463682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9463690Z 
2025-01-10T12:40:39.9463769Z >   ???
2025-01-10T12:40:39.9463896Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9463973Z E   
2025-01-10T12:40:39.9464103Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9464220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9464301Z E          ...
2025-01-10T12:40:39.9464392Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9464527Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9464642Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9464728Z E          ...
2025-01-10T12:40:39.9464818Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9464949Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9465054Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9465140Z 
2025-01-10T12:40:39.9465239Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9465441Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-10T12:40:39.9465445Z 
2025-01-10T12:40:39.9465582Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9465717Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9465815Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9465952Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9466176Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9466278Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9466353Z err_msg = None
2025-01-10T12:40:39.9466358Z 
2025-01-10T12:40:39.9466474Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9466563Z         if err_msg is None:
2025-01-10T12:40:39.9466663Z             if left.shape != right.shape:
2025-01-10T12:40:39.9466750Z                 raise_assert_detail(
2025-01-10T12:40:39.9466898Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9466978Z                 )
2025-01-10T12:40:39.9467050Z     
2025-01-10T12:40:39.9467136Z             diff = 0
2025-01-10T12:40:39.9467249Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9467343Z                 # count up differences
2025-01-10T12:40:39.9467515Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9467604Z                     diff += 1
2025-01-10T12:40:39.9467677Z     
2025-01-10T12:40:39.9467773Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9467911Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9468088Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9468206Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9468287Z E           
2025-01-10T12:40:39.9468404Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9468658Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9468918Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9469049Z 
2025-01-10T12:40:39.9469842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9469852Z 
2025-01-10T12:40:39.9470154Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9470161Z 
2025-01-10T12:40:39.9470548Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e526f0>
2025-01-10T12:40:39.9470728Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c6ab86e0>
2025-01-10T12:40:39.9470809Z attr = 'j_blues'
2025-01-10T12:40:39.9470814Z 
2025-01-10T12:40:39.9470962Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9471085Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9471178Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9471253Z         try:
2025-01-10T12:40:39.9471400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9471488Z         except KeyError:
2025-01-10T12:40:39.9471761Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9471841Z     
2025-01-10T12:40:39.9471930Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9472029Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9472119Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9472258Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9472349Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9472447Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9472559Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9472641Z             else:
2025-01-10T12:40:39.9472742Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9472857Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9472862Z 
2025-01-10T12:40:39.9472995Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9473111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9473272Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9473346Z     ???
2025-01-10T12:40:39.9473462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9473466Z 
2025-01-10T12:40:39.9473539Z >   ???
2025-01-10T12:40:39.9473674Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9473748Z E   
2025-01-10T12:40:39.9473883Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9474000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9474080Z E          ...
2025-01-10T12:40:39.9474174Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9474309Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9474431Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9474506Z E          ...
2025-01-10T12:40:39.9474604Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9474730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9474841Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9474845Z 
2025-01-10T12:40:39.9474935Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9475172Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-10T12:40:39.9475177Z 
2025-01-10T12:40:39.9475307Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9475445Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9475653Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9475793Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9475926Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9476027Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9476312Z err_msg = None
2025-01-10T12:40:39.9476321Z 
2025-01-10T12:40:39.9476450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9476541Z         if err_msg is None:
2025-01-10T12:40:39.9476640Z             if left.shape != right.shape:
2025-01-10T12:40:39.9476731Z                 raise_assert_detail(
2025-01-10T12:40:39.9476880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9476961Z                 )
2025-01-10T12:40:39.9477033Z     
2025-01-10T12:40:39.9477115Z             diff = 0
2025-01-10T12:40:39.9477233Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9477328Z                 # count up differences
2025-01-10T12:40:39.9477503Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9477585Z                     diff += 1
2025-01-10T12:40:39.9477786Z     
2025-01-10T12:40:39.9477877Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9478019Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9478188Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9478306Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9478381Z E           
2025-01-10T12:40:39.9478497Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9478753Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9479021Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9479031Z 
2025-01-10T12:40:39.9479341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9479346Z 
2025-01-10T12:40:39.9479513Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9479517Z 
2025-01-10T12:40:39.9479743Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e53470>
2025-01-10T12:40:39.9479914Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9479994Z attr = 'lines'
2025-01-10T12:40:39.9479998Z 
2025-01-10T12:40:39.9480141Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9480256Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9480349Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9480430Z         try:
2025-01-10T12:40:39.9480576Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9480662Z         except KeyError:
2025-01-10T12:40:39.9480805Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9480878Z     
2025-01-10T12:40:39.9480970Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9481065Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9481163Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9481299Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9481389Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9481604Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9481716Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9481797Z             else:
2025-01-10T12:40:39.9481893Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9482006Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9482015Z 
2025-01-10T12:40:39.9482142Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9482260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9482407Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9482485Z     ???
2025-01-10T12:40:39.9482595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9482603Z 
2025-01-10T12:40:39.9482675Z >   ???
2025-01-10T12:40:39.9482807Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9482885Z E   
2025-01-10T12:40:39.9483018Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9483131Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9483210Z E          ...
2025-01-10T12:40:39.9483299Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9483517Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9483631Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9483710Z E          ...
2025-01-10T12:40:39.9483796Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9483925Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9484031Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9484042Z 
2025-01-10T12:40:39.9484132Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9484365Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-10T12:40:39.9484375Z 
2025-01-10T12:40:39.9484596Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e53530>
2025-01-10T12:40:39.9484768Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9484860Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9484865Z 
2025-01-10T12:40:39.9485006Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9485125Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9485217Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9485291Z         try:
2025-01-10T12:40:39.9485439Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9485528Z         except KeyError:
2025-01-10T12:40:39.9485668Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9485750Z     
2025-01-10T12:40:39.9485838Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9485936Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9486027Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9486272Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9486362Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9486461Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9486583Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9486592Z 
2025-01-10T12:40:39.9486721Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9486835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9486844Z 
2025-01-10T12:40:39.9486980Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9487070Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9487180Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9487268Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9487409Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9487620Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9487727Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9487813Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9487896Z err_msg = None
2025-01-10T12:40:39.9487900Z 
2025-01-10T12:40:39.9488015Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9488122Z         if err_msg is None:
2025-01-10T12:40:39.9488306Z             if left.shape != right.shape:
2025-01-10T12:40:39.9488462Z                 raise_assert_detail(
2025-01-10T12:40:39.9488704Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9488833Z                 )
2025-01-10T12:40:39.9488953Z     
2025-01-10T12:40:39.9489085Z             diff = 0
2025-01-10T12:40:39.9489276Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9489398Z                 # count up differences
2025-01-10T12:40:39.9489579Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9489665Z                     diff += 1
2025-01-10T12:40:39.9489738Z     
2025-01-10T12:40:39.9489831Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9489967Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9490274Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9490380Z E           AssertionError: Series are different
2025-01-10T12:40:39.9490462Z E           
2025-01-10T12:40:39.9490570Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9490934Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9491267Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9491600Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9491606Z 
2025-01-10T12:40:39.9491913Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9492150Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-10T12:40:39.9492156Z 
2025-01-10T12:40:39.9492376Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e535f0>
2025-01-10T12:40:39.9492554Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9492651Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9492655Z 
2025-01-10T12:40:39.9492791Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9492911Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9492997Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9493076Z         try:
2025-01-10T12:40:39.9493216Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9493305Z         except KeyError:
2025-01-10T12:40:39.9493442Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9493604Z     
2025-01-10T12:40:39.9493693Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9493794Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9493883Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9494023Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9494116Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9494212Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9494327Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9494332Z 
2025-01-10T12:40:39.9494455Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9494574Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9494578Z 
2025-01-10T12:40:39.9494712Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9494804Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9494918Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9495006Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9495147Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9495236Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9495448Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9495529Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9495612Z err_msg = None
2025-01-10T12:40:39.9495616Z 
2025-01-10T12:40:39.9495724Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9495811Z         if err_msg is None:
2025-01-10T12:40:39.9495905Z             if left.shape != right.shape:
2025-01-10T12:40:39.9495996Z                 raise_assert_detail(
2025-01-10T12:40:39.9496244Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9496338Z                 )
2025-01-10T12:40:39.9496412Z     
2025-01-10T12:40:39.9496495Z             diff = 0
2025-01-10T12:40:39.9496609Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9496709Z                 # count up differences
2025-01-10T12:40:39.9496884Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9496971Z                     diff += 1
2025-01-10T12:40:39.9497049Z     
2025-01-10T12:40:39.9497136Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9497279Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9497452Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9497563Z E           AssertionError: Series are different
2025-01-10T12:40:39.9497640Z E           
2025-01-10T12:40:39.9497749Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9498114Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9498494Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9498897Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9499020Z 
2025-01-10T12:40:39.9499340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9499545Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-10T12:40:39.9499550Z 
2025-01-10T12:40:39.9499685Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9499817Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9499925Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9500060Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9500198Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9500296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9500386Z err_msg = None
2025-01-10T12:40:39.9500390Z 
2025-01-10T12:40:39.9500507Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9500770Z         if err_msg is None:
2025-01-10T12:40:39.9500876Z             if left.shape != right.shape:
2025-01-10T12:40:39.9500963Z                 raise_assert_detail(
2025-01-10T12:40:39.9501117Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9501194Z                 )
2025-01-10T12:40:39.9501273Z     
2025-01-10T12:40:39.9501349Z             diff = 0
2025-01-10T12:40:39.9501466Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9501556Z                 # count up differences
2025-01-10T12:40:39.9501732Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9509137Z                     diff += 1
2025-01-10T12:40:39.9509252Z     
2025-01-10T12:40:39.9509359Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9509517Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9509741Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9509952Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9510090Z E           
2025-01-10T12:40:39.9510291Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9510762Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9511121Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9511139Z 
2025-01-10T12:40:39.9511469Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9511474Z 
2025-01-10T12:40:39.9511656Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9511661Z 
2025-01-10T12:40:39.9511895Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e53830>
2025-01-10T12:40:39.9512107Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>, attr = 'nu'
2025-01-10T12:40:39.9512112Z 
2025-01-10T12:40:39.9512262Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9512560Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9512655Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9512731Z         try:
2025-01-10T12:40:39.9512884Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9512969Z         except KeyError:
2025-01-10T12:40:39.9513125Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9513198Z     
2025-01-10T12:40:39.9513292Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9513388Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9513485Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9513630Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9513726Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9513816Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9513935Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9513941Z 
2025-01-10T12:40:39.9514080Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9514198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9514353Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9514428Z     ???
2025-01-10T12:40:39.9514544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9514666Z 
2025-01-10T12:40:39.9514740Z >   ???
2025-01-10T12:40:39.9514874Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9514951Z E   
2025-01-10T12:40:39.9515089Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9515202Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9515283Z E          ...
2025-01-10T12:40:39.9515380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9515510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9515628Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9515707Z E          ...
2025-01-10T12:40:39.9515801Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9515926Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9516038Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9516047Z 
2025-01-10T12:40:39.9516370Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9516587Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-10T12:40:39.9516592Z 
2025-01-10T12:40:39.9516723Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9516863Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9516968Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9517105Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9517245Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9517340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9517429Z err_msg = None
2025-01-10T12:40:39.9517433Z 
2025-01-10T12:40:39.9517548Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9517646Z         if err_msg is None:
2025-01-10T12:40:39.9517744Z             if left.shape != right.shape:
2025-01-10T12:40:39.9517836Z                 raise_assert_detail(
2025-01-10T12:40:39.9517981Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9518060Z                 )
2025-01-10T12:40:39.9518137Z     
2025-01-10T12:40:39.9518214Z             diff = 0
2025-01-10T12:40:39.9518334Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9518424Z                 # count up differences
2025-01-10T12:40:39.9518601Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9518843Z                     diff += 1
2025-01-10T12:40:39.9518921Z     
2025-01-10T12:40:39.9519012Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9519161Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9519338Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9519460Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9519536Z E           
2025-01-10T12:40:39.9519658Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9519916Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9520182Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9520304Z 
2025-01-10T12:40:39.9520627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9520633Z 
2025-01-10T12:40:39.9520808Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9520819Z 
2025-01-10T12:40:39.9521047Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e538f0>
2025-01-10T12:40:39.9521222Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9521302Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9521307Z 
2025-01-10T12:40:39.9521449Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9521570Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9521660Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9521735Z         try:
2025-01-10T12:40:39.9521887Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9521971Z         except KeyError:
2025-01-10T12:40:39.9522121Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9522193Z     
2025-01-10T12:40:39.9522289Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9522389Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9522479Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9522621Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9522709Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9522809Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9522920Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9522929Z 
2025-01-10T12:40:39.9523059Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9523176Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9523329Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9523402Z     ???
2025-01-10T12:40:39.9523525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9523530Z 
2025-01-10T12:40:39.9523608Z >   ???
2025-01-10T12:40:39.9523737Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9523817Z E   
2025-01-10T12:40:39.9523945Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9524064Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9524138Z E          ...
2025-01-10T12:40:39.9524235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9524367Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9524577Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9524651Z E          ...
2025-01-10T12:40:39.9524744Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9524868Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9524980Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9524988Z 
2025-01-10T12:40:39.9525082Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9525278Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-10T12:40:39.9525282Z 
2025-01-10T12:40:39.9525422Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9525557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9525666Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9525801Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9525938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9526035Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9526226Z err_msg = None
2025-01-10T12:40:39.9526232Z 
2025-01-10T12:40:39.9526490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9526574Z         if err_msg is None:
2025-01-10T12:40:39.9526673Z             if left.shape != right.shape:
2025-01-10T12:40:39.9526759Z                 raise_assert_detail(
2025-01-10T12:40:39.9526916Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9526991Z                 )
2025-01-10T12:40:39.9527068Z     
2025-01-10T12:40:39.9527144Z             diff = 0
2025-01-10T12:40:39.9527266Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9527355Z                 # count up differences
2025-01-10T12:40:39.9527535Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9527621Z                     diff += 1
2025-01-10T12:40:39.9527702Z     
2025-01-10T12:40:39.9527791Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9527933Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9528118Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9528233Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9528314Z E           
2025-01-10T12:40:39.9528425Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9528688Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9528948Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9528961Z 
2025-01-10T12:40:39.9529268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9529273Z 
2025-01-10T12:40:39.9529445Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9529450Z 
2025-01-10T12:40:39.9529668Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e539b0>
2025-01-10T12:40:39.9529873Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>, attr = 'f_lu'
2025-01-10T12:40:39.9529878Z 
2025-01-10T12:40:39.9530020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9530259Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9530346Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9530425Z         try:
2025-01-10T12:40:39.9530571Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9530653Z         except KeyError:
2025-01-10T12:40:39.9530802Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9530874Z     
2025-01-10T12:40:39.9530970Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9531065Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9531162Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9531293Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9531383Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9531473Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9531591Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9531596Z 
2025-01-10T12:40:39.9531726Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9531845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9531998Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9532072Z     ???
2025-01-10T12:40:39.9532187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9532273Z 
2025-01-10T12:40:39.9532349Z >   ???
2025-01-10T12:40:39.9532484Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9532557Z E   
2025-01-10T12:40:39.9532692Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9532802Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9532881Z E          ...
2025-01-10T12:40:39.9532969Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9533104Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9533227Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9533310Z E          ...
2025-01-10T12:40:39.9533401Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9533526Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9533638Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9533651Z 
2025-01-10T12:40:39.9533741Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9533951Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-10T12:40:39.9533955Z 
2025-01-10T12:40:39.9534084Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9534221Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9534318Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9534458Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9534594Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9534688Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9534769Z err_msg = None
2025-01-10T12:40:39.9534773Z 
2025-01-10T12:40:39.9534881Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9534972Z         if err_msg is None:
2025-01-10T12:40:39.9535067Z             if left.shape != right.shape:
2025-01-10T12:40:39.9535157Z                 raise_assert_detail(
2025-01-10T12:40:39.9535301Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9535382Z                 )
2025-01-10T12:40:39.9535453Z     
2025-01-10T12:40:39.9535534Z             diff = 0
2025-01-10T12:40:39.9535652Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9535745Z                 # count up differences
2025-01-10T12:40:39.9535918Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9536175Z                     diff += 1
2025-01-10T12:40:39.9536250Z     
2025-01-10T12:40:39.9536336Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9536471Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9536645Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9536757Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9536828Z E           
2025-01-10T12:40:39.9536947Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9537201Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9537465Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9537586Z 
2025-01-10T12:40:39.9537899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9537904Z 
2025-01-10T12:40:39.9538070Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9538075Z 
2025-01-10T12:40:39.9538303Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e78170>
2025-01-10T12:40:39.9538473Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9538553Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9538558Z 
2025-01-10T12:40:39.9538705Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9538830Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9538920Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9538993Z         try:
2025-01-10T12:40:39.9539138Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9539220Z         except KeyError:
2025-01-10T12:40:39.9539367Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9539438Z     
2025-01-10T12:40:39.9539532Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9539626Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9539723Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9539855Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9539947Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9540042Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9540152Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9540236Z             else:
2025-01-10T12:40:39.9540332Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9540443Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9540448Z 
2025-01-10T12:40:39.9540576Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9540701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9540853Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9540931Z     ???
2025-01-10T12:40:39.9541040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9541050Z 
2025-01-10T12:40:39.9541121Z >   ???
2025-01-10T12:40:39.9541258Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9541329Z E   
2025-01-10T12:40:39.9541462Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9541574Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9541774Z E          ...
2025-01-10T12:40:39.9541863Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9541998Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9542109Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9542188Z E          ...
2025-01-10T12:40:39.9542280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9542409Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9542513Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9542523Z 
2025-01-10T12:40:39.9542612Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9542819Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-10T12:40:39.9542824Z 
2025-01-10T12:40:39.9542953Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9543089Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9543193Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9543335Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9543462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9543654Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9543733Z err_msg = None
2025-01-10T12:40:39.9543743Z 
2025-01-10T12:40:39.9543863Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9543950Z         if err_msg is None:
2025-01-10T12:40:39.9544048Z             if left.shape != right.shape:
2025-01-10T12:40:39.9544139Z                 raise_assert_detail(
2025-01-10T12:40:39.9544288Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9544368Z                 )
2025-01-10T12:40:39.9544439Z     
2025-01-10T12:40:39.9544526Z             diff = 0
2025-01-10T12:40:39.9544637Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9544730Z                 # count up differences
2025-01-10T12:40:39.9544902Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9544987Z                     diff += 1
2025-01-10T12:40:39.9545063Z     
2025-01-10T12:40:39.9545159Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9545293Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9545469Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9545587Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9545660Z E           
2025-01-10T12:40:39.9545777Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9546032Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9546389Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9546400Z 
2025-01-10T12:40:39.9546716Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9546721Z 
2025-01-10T12:40:39.9546891Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9546895Z 
2025-01-10T12:40:39.9547124Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e78230>
2025-01-10T12:40:39.9547446Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9547612Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9547621Z 
2025-01-10T12:40:39.9547861Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9548066Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9548220Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9548342Z         try:
2025-01-10T12:40:39.9548582Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9548728Z         except KeyError:
2025-01-10T12:40:39.9548883Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9548954Z     
2025-01-10T12:40:39.9549048Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9549142Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9549234Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9549365Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9549462Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9549553Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9549669Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9549743Z             else:
2025-01-10T12:40:39.9549848Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9550097Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9550102Z 
2025-01-10T12:40:39.9550226Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9550343Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9550489Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9550568Z     ???
2025-01-10T12:40:39.9550678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9550683Z 
2025-01-10T12:40:39.9550759Z >   ???
2025-01-10T12:40:39.9550883Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9550965Z E   
2025-01-10T12:40:39.9551091Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9551207Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9551286Z E          ...
2025-01-10T12:40:39.9551374Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9551516Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9551631Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9551712Z E          ...
2025-01-10T12:40:39.9551800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9551930Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9552033Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9552037Z 
2025-01-10T12:40:39.9552132Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9552330Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-10T12:40:39.9552338Z 
2025-01-10T12:40:39.9552472Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9552608Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9552705Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9552845Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9552970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9553069Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9553146Z err_msg = None
2025-01-10T12:40:39.9553150Z 
2025-01-10T12:40:39.9553266Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9553349Z         if err_msg is None:
2025-01-10T12:40:39.9553448Z             if left.shape != right.shape:
2025-01-10T12:40:39.9553534Z                 raise_assert_detail(
2025-01-10T12:40:39.9553775Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9553853Z                 )
2025-01-10T12:40:39.9553924Z     
2025-01-10T12:40:39.9554004Z             diff = 0
2025-01-10T12:40:39.9554115Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9554214Z                 # count up differences
2025-01-10T12:40:39.9554382Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9554466Z                     diff += 1
2025-01-10T12:40:39.9554538Z     
2025-01-10T12:40:39.9554631Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9554766Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9554938Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9555049Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9555131Z E           
2025-01-10T12:40:39.9555242Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9555497Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9555839Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9555845Z 
2025-01-10T12:40:39.9556361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9556369Z 
2025-01-10T12:40:39.9556553Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9556558Z 
2025-01-10T12:40:39.9556788Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e783b0>
2025-01-10T12:40:39.9556955Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c7883a40>
2025-01-10T12:40:39.9557042Z attr = 'j_blues'
2025-01-10T12:40:39.9557046Z 
2025-01-10T12:40:39.9557181Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9557303Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9557390Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9557472Z         try:
2025-01-10T12:40:39.9557611Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9557699Z         except KeyError:
2025-01-10T12:40:39.9557835Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9557913Z     
2025-01-10T12:40:39.9558007Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9558106Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9558201Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9558332Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9558423Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9558512Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9558632Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9558706Z             else:
2025-01-10T12:40:39.9558807Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9558914Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9558918Z 
2025-01-10T12:40:39.9559048Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9559161Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9559312Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9559389Z     ???
2025-01-10T12:40:39.9559628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9559633Z 
2025-01-10T12:40:39.9559710Z >   ???
2025-01-10T12:40:39.9559835Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9559912Z E   
2025-01-10T12:40:39.9560038Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9560159Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9560233Z E          ...
2025-01-10T12:40:39.9560327Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9560457Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9560574Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9560647Z E          ...
2025-01-10T12:40:39.9560741Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9560871Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9560976Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9560984Z 
2025-01-10T12:40:39.9561077Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9561271Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-10T12:40:39.9561275Z 
2025-01-10T12:40:39.9561408Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9561652Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9561756Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9561888Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9562017Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9562119Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9562201Z err_msg = None
2025-01-10T12:40:39.9562206Z 
2025-01-10T12:40:39.9562326Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9562407Z         if err_msg is None:
2025-01-10T12:40:39.9562507Z             if left.shape != right.shape:
2025-01-10T12:40:39.9562592Z                 raise_assert_detail(
2025-01-10T12:40:39.9562739Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9562819Z                 )
2025-01-10T12:40:39.9562896Z     
2025-01-10T12:40:39.9562970Z             diff = 0
2025-01-10T12:40:39.9563086Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9563172Z                 # count up differences
2025-01-10T12:40:39.9563346Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9563431Z                     diff += 1
2025-01-10T12:40:39.9563503Z     
2025-01-10T12:40:39.9563597Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9563732Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9563910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9564021Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9564096Z E           
2025-01-10T12:40:39.9564206Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9564468Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9564724Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9564821Z 
2025-01-10T12:40:39.9565124Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9565128Z 
2025-01-10T12:40:39.9565299Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9565304Z 
2025-01-10T12:40:39.9565530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79130>
2025-01-10T12:40:39.9565702Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9565778Z attr = 'lines'
2025-01-10T12:40:39.9565787Z 
2025-01-10T12:40:39.9565923Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9566045Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9566229Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9566365Z         try:
2025-01-10T12:40:39.9566606Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9566747Z         except KeyError:
2025-01-10T12:40:39.9566984Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9567110Z     
2025-01-10T12:40:39.9567264Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9567392Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9567484Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9567751Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9567838Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9567934Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9568049Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9568127Z             else:
2025-01-10T12:40:39.9568227Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9568334Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9568339Z 
2025-01-10T12:40:39.9568468Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9568585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9568732Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9568806Z     ???
2025-01-10T12:40:39.9568927Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9568935Z 
2025-01-10T12:40:39.9569008Z >   ???
2025-01-10T12:40:39.9569142Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9569219Z E   
2025-01-10T12:40:39.9569348Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9569471Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9569546Z E          ...
2025-01-10T12:40:39.9569642Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9569771Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9569890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9569967Z E          ...
2025-01-10T12:40:39.9570064Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9570188Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9570299Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9570304Z 
2025-01-10T12:40:39.9570394Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9570630Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-10T12:40:39.9570635Z 
2025-01-10T12:40:39.9570860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e791f0>
2025-01-10T12:40:39.9571025Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9571121Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9571125Z 
2025-01-10T12:40:39.9571263Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9571383Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9571468Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9571690Z         try:
2025-01-10T12:40:39.9571832Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9571919Z         except KeyError:
2025-01-10T12:40:39.9572056Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9572133Z     
2025-01-10T12:40:39.9572231Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9572325Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9572420Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9572553Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9572645Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9572738Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9572853Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9572857Z 
2025-01-10T12:40:39.9572984Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9573103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9573112Z 
2025-01-10T12:40:39.9573248Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9573341Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9573454Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9573725Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9573868Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9573953Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9574064Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9574146Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9574228Z err_msg = None
2025-01-10T12:40:39.9574232Z 
2025-01-10T12:40:39.9574350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9574433Z         if err_msg is None:
2025-01-10T12:40:39.9574537Z             if left.shape != right.shape:
2025-01-10T12:40:39.9574620Z                 raise_assert_detail(
2025-01-10T12:40:39.9574766Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9574839Z                 )
2025-01-10T12:40:39.9574916Z     
2025-01-10T12:40:39.9574995Z             diff = 0
2025-01-10T12:40:39.9575113Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9575201Z                 # count up differences
2025-01-10T12:40:39.9575377Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9575466Z                     diff += 1
2025-01-10T12:40:39.9575537Z     
2025-01-10T12:40:39.9575628Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9575764Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9575942Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9576271Z E           AssertionError: Series are different
2025-01-10T12:40:39.9576422Z E           
2025-01-10T12:40:39.9576544Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9576915Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9577251Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9577718Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9577730Z 
2025-01-10T12:40:39.9578050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9578281Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-10T12:40:39.9578286Z 
2025-01-10T12:40:39.9578509Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e792b0>
2025-01-10T12:40:39.9578681Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9578774Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9578782Z 
2025-01-10T12:40:39.9578925Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9579040Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9579134Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9579208Z         try:
2025-01-10T12:40:39.9579357Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9579560Z         except KeyError:
2025-01-10T12:40:39.9579699Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9579776Z     
2025-01-10T12:40:39.9579868Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9579967Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9580056Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9580201Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9580289Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9580385Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9580504Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9580508Z 
2025-01-10T12:40:39.9580639Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9580753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9580763Z 
2025-01-10T12:40:39.9580902Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9580992Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9581100Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9581187Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9581328Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9581417Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9581522Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9581608Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9581693Z err_msg = None
2025-01-10T12:40:39.9581697Z 
2025-01-10T12:40:39.9581811Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9581893Z         if err_msg is None:
2025-01-10T12:40:39.9581994Z             if left.shape != right.shape:
2025-01-10T12:40:39.9582086Z                 raise_assert_detail(
2025-01-10T12:40:39.9582234Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9582314Z                 )
2025-01-10T12:40:39.9582386Z     
2025-01-10T12:40:39.9582466Z             diff = 0
2025-01-10T12:40:39.9582581Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9582675Z                 # count up differences
2025-01-10T12:40:39.9582844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9582928Z                     diff += 1
2025-01-10T12:40:39.9583000Z     
2025-01-10T12:40:39.9583093Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9583315Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9583489Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9583593Z E           AssertionError: Series are different
2025-01-10T12:40:39.9583671Z E           
2025-01-10T12:40:39.9583781Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9584141Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9584510Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9584885Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9584965Z 
2025-01-10T12:40:39.9585273Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9585468Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-10T12:40:39.9585477Z 
2025-01-10T12:40:39.9585607Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9585740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9585843Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9585979Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9586209Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9586306Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9586387Z err_msg = None
2025-01-10T12:40:39.9586391Z 
2025-01-10T12:40:39.9586500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9586588Z         if err_msg is None:
2025-01-10T12:40:39.9586683Z             if left.shape != right.shape:
2025-01-10T12:40:39.9586778Z                 raise_assert_detail(
2025-01-10T12:40:39.9586920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9587000Z                 )
2025-01-10T12:40:39.9587076Z     
2025-01-10T12:40:39.9587154Z             diff = 0
2025-01-10T12:40:39.9587270Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9587364Z                 # count up differences
2025-01-10T12:40:39.9587537Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9587616Z                     diff += 1
2025-01-10T12:40:39.9587693Z     
2025-01-10T12:40:39.9587782Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9587924Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9588098Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9588219Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9588415Z E           
2025-01-10T12:40:39.9588536Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9588790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9589054Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9589060Z 
2025-01-10T12:40:39.9589371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9589375Z 
2025-01-10T12:40:39.9589549Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9589559Z 
2025-01-10T12:40:39.9589787Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e794f0>
2025-01-10T12:40:39.9589995Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>, attr = 'nu'
2025-01-10T12:40:39.9590122Z 
2025-01-10T12:40:39.9590263Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9590394Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9590480Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9590559Z         try:
2025-01-10T12:40:39.9590702Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9590793Z         except KeyError:
2025-01-10T12:40:39.9590949Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9591093Z     
2025-01-10T12:40:39.9591247Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9591413Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9591583Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9591810Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9591963Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9592124Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9592273Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9592278Z 
2025-01-10T12:40:39.9592412Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9592526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9592688Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9592761Z     ???
2025-01-10T12:40:39.9592877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9592882Z 
2025-01-10T12:40:39.9592960Z >   ???
2025-01-10T12:40:39.9593088Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9593174Z E   
2025-01-10T12:40:39.9593303Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9593420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9593496Z E          ...
2025-01-10T12:40:39.9593594Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9593728Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9593846Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9593920Z E          ...
2025-01-10T12:40:39.9594011Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9594138Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9594249Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9594253Z 
2025-01-10T12:40:39.9594347Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9594546Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-10T12:40:39.9594647Z 
2025-01-10T12:40:39.9594785Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9594915Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9595018Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9595158Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9595289Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9595383Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9595467Z err_msg = None
2025-01-10T12:40:39.9595472Z 
2025-01-10T12:40:39.9595586Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9595669Z         if err_msg is None:
2025-01-10T12:40:39.9595770Z             if left.shape != right.shape:
2025-01-10T12:40:39.9595857Z                 raise_assert_detail(
2025-01-10T12:40:39.9596011Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9596265Z                 )
2025-01-10T12:40:39.9596367Z     
2025-01-10T12:40:39.9596446Z             diff = 0
2025-01-10T12:40:39.9596566Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9596784Z                 # count up differences
2025-01-10T12:40:39.9596970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9597051Z                     diff += 1
2025-01-10T12:40:39.9597129Z     
2025-01-10T12:40:39.9597220Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9597365Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9597542Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9597659Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9597742Z E           
2025-01-10T12:40:39.9597855Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9598116Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9598380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9598392Z 
2025-01-10T12:40:39.9598702Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9598706Z 
2025-01-10T12:40:39.9598913Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9598918Z 
2025-01-10T12:40:39.9599143Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e795b0>
2025-01-10T12:40:39.9599315Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9599400Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9599405Z 
2025-01-10T12:40:39.9599547Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9599662Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9599753Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9599831Z         try:
2025-01-10T12:40:39.9599973Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9600061Z         except KeyError:
2025-01-10T12:40:39.9600199Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9600277Z     
2025-01-10T12:40:39.9600365Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9600592Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9600682Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9600819Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9600906Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9601003Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9601120Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9601125Z 
2025-01-10T12:40:39.9601256Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9601375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9601522Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9601601Z     ???
2025-01-10T12:40:39.9601710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9601714Z 
2025-01-10T12:40:39.9601790Z >   ???
2025-01-10T12:40:39.9601917Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9601999Z E   
2025-01-10T12:40:39.9602127Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9602247Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9602320Z E          ...
2025-01-10T12:40:39.9602418Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9602635Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9602757Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9602842Z E          ...
2025-01-10T12:40:39.9602930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9603062Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9603169Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9603173Z 
2025-01-10T12:40:39.9603270Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9603464Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-10T12:40:39.9603474Z 
2025-01-10T12:40:39.9603606Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9603737Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9603840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9603979Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9604108Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9604209Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9604287Z err_msg = None
2025-01-10T12:40:39.9604292Z 
2025-01-10T12:40:39.9604405Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9604486Z         if err_msg is None:
2025-01-10T12:40:39.9604587Z             if left.shape != right.shape:
2025-01-10T12:40:39.9604677Z                 raise_assert_detail(
2025-01-10T12:40:39.9604829Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9604909Z                 )
2025-01-10T12:40:39.9604986Z     
2025-01-10T12:40:39.9605062Z             diff = 0
2025-01-10T12:40:39.9605180Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9605279Z                 # count up differences
2025-01-10T12:40:39.9605449Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9605534Z                     diff += 1
2025-01-10T12:40:39.9605608Z     
2025-01-10T12:40:39.9605708Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9605848Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9606024Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9606246Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9606451Z E           
2025-01-10T12:40:39.9606562Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9606821Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9607088Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9607094Z 
2025-01-10T12:40:39.9607400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9607409Z 
2025-01-10T12:40:39.9607587Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9607592Z 
2025-01-10T12:40:39.9607830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79670>
2025-01-10T12:40:39.9608183Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>, attr = 'f_lu'
2025-01-10T12:40:39.9608356Z 
2025-01-10T12:40:39.9608604Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9608790Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9608930Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9609050Z         try:
2025-01-10T12:40:39.9609282Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9609418Z         except KeyError:
2025-01-10T12:40:39.9609650Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9609771Z     
2025-01-10T12:40:39.9609934Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9610102Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9610264Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9610517Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9610682Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9610855Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9611067Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9611076Z 
2025-01-10T12:40:39.9611304Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9611506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9611781Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9611918Z     ???
2025-01-10T12:40:39.9612120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9612129Z 
2025-01-10T12:40:39.9612255Z >   ???
2025-01-10T12:40:39.9612485Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9612621Z E   
2025-01-10T12:40:39.9612832Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9613003Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9613114Z E          ...
2025-01-10T12:40:39.9613249Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9613447Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9613621Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9613731Z E          ...
2025-01-10T12:40:39.9613865Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9614057Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9614218Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9614224Z 
2025-01-10T12:40:39.9614361Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9614675Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-10T12:40:39.9614814Z 
2025-01-10T12:40:39.9615020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9615215Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9615362Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9615572Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9615765Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9615901Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9616020Z err_msg = None
2025-01-10T12:40:39.9616026Z 
2025-01-10T12:40:39.9616370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9616502Z         if err_msg is None:
2025-01-10T12:40:39.9616643Z             if left.shape != right.shape:
2025-01-10T12:40:39.9616781Z                 raise_assert_detail(
2025-01-10T12:40:39.9617005Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9617116Z                 )
2025-01-10T12:40:39.9617232Z     
2025-01-10T12:40:39.9617350Z             diff = 0
2025-01-10T12:40:39.9617521Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9617860Z                 # count up differences
2025-01-10T12:40:39.9618149Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9618284Z                     diff += 1
2025-01-10T12:40:39.9618405Z     
2025-01-10T12:40:39.9618535Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9618741Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9619008Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9619211Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9619349Z E           
2025-01-10T12:40:39.9619535Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9619988Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9620439Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9620448Z 
2025-01-10T12:40:39.9620989Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9621010Z 
2025-01-10T12:40:39.9621322Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9621333Z 
2025-01-10T12:40:39.9621733Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79df0>
2025-01-10T12:40:39.9622049Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9622206Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9622215Z 
2025-01-10T12:40:39.9622478Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9622691Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9622857Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9622987Z         try:
2025-01-10T12:40:39.9623261Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9623415Z         except KeyError:
2025-01-10T12:40:39.9623668Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9623805Z     
2025-01-10T12:40:39.9623959Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9624320Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9624473Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9624687Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9624818Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9624971Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9625145Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9625281Z             else:
2025-01-10T12:40:39.9625442Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9625617Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9625623Z 
2025-01-10T12:40:39.9625819Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9625993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9626390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9626502Z     ???
2025-01-10T12:40:39.9626689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9626696Z 
2025-01-10T12:40:39.9626806Z >   ???
2025-01-10T12:40:39.9627008Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9627116Z E   
2025-01-10T12:40:39.9627326Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9627665Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9627793Z E          ...
2025-01-10T12:40:39.9627940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9628165Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9628353Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9628478Z E          ...
2025-01-10T12:40:39.9628609Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9628788Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9628954Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9628961Z 
2025-01-10T12:40:39.9629095Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9629422Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-10T12:40:39.9629429Z 
2025-01-10T12:40:39.9629648Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9629878Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9630040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9630265Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9630486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9630643Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9630784Z err_msg = None
2025-01-10T12:40:39.9630797Z 
2025-01-10T12:40:39.9630983Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9631132Z         if err_msg is None:
2025-01-10T12:40:39.9631296Z             if left.shape != right.shape:
2025-01-10T12:40:39.9631449Z                 raise_assert_detail(
2025-01-10T12:40:39.9631673Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9631799Z                 )
2025-01-10T12:40:39.9631903Z     
2025-01-10T12:40:39.9632024Z             diff = 0
2025-01-10T12:40:39.9632186Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9632322Z                 # count up differences
2025-01-10T12:40:39.9632575Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9632688Z                     diff += 1
2025-01-10T12:40:39.9632802Z     
2025-01-10T12:40:39.9632932Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9633135Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9633544Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9633719Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9633843Z E           
2025-01-10T12:40:39.9634030Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9634440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9634834Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9634850Z 
2025-01-10T12:40:39.9635295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9635302Z 
2025-01-10T12:40:39.9635544Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9635661Z 
2025-01-10T12:40:39.9635999Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e79eb0>
2025-01-10T12:40:39.9636395Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9636516Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9636522Z 
2025-01-10T12:40:39.9636730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9636898Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9637030Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9637141Z         try:
2025-01-10T12:40:39.9637354Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9637481Z         except KeyError:
2025-01-10T12:40:39.9637687Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9637792Z     
2025-01-10T12:40:39.9637925Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9638061Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9638207Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9638402Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9638538Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9638676Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9638838Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9638956Z             else:
2025-01-10T12:40:39.9639098Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9639264Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9639270Z 
2025-01-10T12:40:39.9639452Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9639630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9639843Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9639957Z     ???
2025-01-10T12:40:39.9640115Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9640136Z 
2025-01-10T12:40:39.9640239Z >   ???
2025-01-10T12:40:39.9640429Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9640533Z E   
2025-01-10T12:40:39.9640724Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9640885Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9641001Z E          ...
2025-01-10T12:40:39.9641129Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9641319Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9641480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9641752Z E          ...
2025-01-10T12:40:39.9641877Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9642063Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9642211Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9642225Z 
2025-01-10T12:40:39.9642362Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9642648Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-10T12:40:39.9642654Z 
2025-01-10T12:40:39.9642837Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9643029Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9643167Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9643369Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9643557Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9643722Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9643835Z err_msg = None
2025-01-10T12:40:39.9643847Z 
2025-01-10T12:40:39.9644006Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9644440Z         if err_msg is None:
2025-01-10T12:40:39.9644582Z             if left.shape != right.shape:
2025-01-10T12:40:39.9644721Z                 raise_assert_detail(
2025-01-10T12:40:39.9644934Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9645049Z                 )
2025-01-10T12:40:39.9645155Z     
2025-01-10T12:40:39.9645274Z             diff = 0
2025-01-10T12:40:39.9645437Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9645579Z                 # count up differences
2025-01-10T12:40:39.9645832Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9645981Z                     diff += 1
2025-01-10T12:40:39.9646249Z     
2025-01-10T12:40:39.9646401Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9646603Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9646866Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9647049Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9647165Z E           
2025-01-10T12:40:39.9647349Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9647759Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9648180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9648196Z 
2025-01-10T12:40:39.9648680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9648696Z 
2025-01-10T12:40:39.9648956Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9648962Z 
2025-01-10T12:40:39.9649301Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7a030>
2025-01-10T12:40:39.9649546Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22b2cfd1f0>
2025-01-10T12:40:39.9649667Z attr = 'j_blues'
2025-01-10T12:40:39.9649673Z 
2025-01-10T12:40:39.9649874Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9650052Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9650379Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9650499Z         try:
2025-01-10T12:40:39.9650735Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9650866Z         except KeyError:
2025-01-10T12:40:39.9651088Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9651211Z     
2025-01-10T12:40:39.9651360Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9651510Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9651657Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9651868Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9652012Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9652155Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9652338Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9652458Z             else:
2025-01-10T12:40:39.9652618Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9652800Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9652806Z 
2025-01-10T12:40:39.9652995Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9653180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9653563Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9653689Z     ???
2025-01-10T12:40:39.9653868Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9653876Z 
2025-01-10T12:40:39.9654002Z >   ???
2025-01-10T12:40:39.9654197Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9654313Z E   
2025-01-10T12:40:39.9654513Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9654699Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9654818Z E          ...
2025-01-10T12:40:39.9654967Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9655184Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9655365Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9655490Z E          ...
2025-01-10T12:40:39.9655628Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9655845Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9656014Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9656020Z 
2025-01-10T12:40:39.9656319Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9656660Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-10T12:40:39.9656667Z 
2025-01-10T12:40:39.9656884Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9657096Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9657258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9657479Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9657678Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9657842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9657984Z err_msg = None
2025-01-10T12:40:39.9657990Z 
2025-01-10T12:40:39.9658173Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9658309Z         if err_msg is None:
2025-01-10T12:40:39.9658471Z             if left.shape != right.shape:
2025-01-10T12:40:39.9658621Z                 raise_assert_detail(
2025-01-10T12:40:39.9658830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9658951Z                 )
2025-01-10T12:40:39.9659076Z     
2025-01-10T12:40:39.9659199Z             diff = 0
2025-01-10T12:40:39.9659366Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9659669Z                 # count up differences
2025-01-10T12:40:39.9659924Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9660053Z                     diff += 1
2025-01-10T12:40:39.9660163Z     
2025-01-10T12:40:39.9660310Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9660504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9660769Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9660947Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9661070Z E           
2025-01-10T12:40:39.9661237Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9661652Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9662072Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9662226Z 
2025-01-10T12:40:39.9662675Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9662682Z 
2025-01-10T12:40:39.9662939Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9662946Z 
2025-01-10T12:40:39.9663296Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7adb0>
2025-01-10T12:40:39.9663553Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9663682Z attr = 'lines'
2025-01-10T12:40:39.9663689Z 
2025-01-10T12:40:39.9663900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9664091Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9664227Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9664366Z         try:
2025-01-10T12:40:39.9664584Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9664723Z         except KeyError:
2025-01-10T12:40:39.9664938Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9665060Z     
2025-01-10T12:40:39.9665205Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9665354Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9665507Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9665721Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9665869Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9666026Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9666342Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9666458Z             else:
2025-01-10T12:40:39.9666617Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9666798Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9666813Z 
2025-01-10T12:40:39.9667030Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9667220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9667481Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9667612Z     ???
2025-01-10T12:40:39.9667791Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9667797Z 
2025-01-10T12:40:39.9667918Z >   ???
2025-01-10T12:40:39.9668125Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9668250Z E   
2025-01-10T12:40:39.9668460Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9668809Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9668927Z E          ...
2025-01-10T12:40:39.9669074Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9669276Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9669467Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9669586Z E          ...
2025-01-10T12:40:39.9669732Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9669941Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9670110Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9670116Z 
2025-01-10T12:40:39.9670273Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9670719Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-10T12:40:39.9670728Z 
2025-01-10T12:40:39.9671124Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7ae70>
2025-01-10T12:40:39.9671404Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9671543Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9671549Z 
2025-01-10T12:40:39.9671755Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9672091Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9672226Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9672344Z         try:
2025-01-10T12:40:39.9672574Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9672708Z         except KeyError:
2025-01-10T12:40:39.9672947Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9673069Z     
2025-01-10T12:40:39.9673223Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9673375Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9673531Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9673772Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9673927Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9674082Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9674273Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9674288Z 
2025-01-10T12:40:39.9674501Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9674699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9674706Z 
2025-01-10T12:40:39.9674941Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9675086Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9675275Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9675412Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9675652Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9675801Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9675984Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9676255Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9676397Z err_msg = None
2025-01-10T12:40:39.9676412Z 
2025-01-10T12:40:39.9676600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9676740Z         if err_msg is None:
2025-01-10T12:40:39.9676905Z             if left.shape != right.shape:
2025-01-10T12:40:39.9677051Z                 raise_assert_detail(
2025-01-10T12:40:39.9677299Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9677427Z                 )
2025-01-10T12:40:39.9677557Z     
2025-01-10T12:40:39.9677686Z             diff = 0
2025-01-10T12:40:39.9677882Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9678034Z                 # count up differences
2025-01-10T12:40:39.9678507Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9678642Z                     diff += 1
2025-01-10T12:40:39.9678771Z     
2025-01-10T12:40:39.9678920Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9679146Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9679455Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9679633Z E           AssertionError: Series are different
2025-01-10T12:40:39.9679769Z E           
2025-01-10T12:40:39.9679940Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9680599Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9681200Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9681947Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9681956Z 
2025-01-10T12:40:39.9682502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9682940Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-10T12:40:39.9682947Z 
2025-01-10T12:40:39.9683289Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7af30>
2025-01-10T12:40:39.9683560Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9683702Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9683708Z 
2025-01-10T12:40:39.9683935Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9684120Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9684264Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9684386Z         try:
2025-01-10T12:40:39.9684631Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9684770Z         except KeyError:
2025-01-10T12:40:39.9685014Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9685147Z     
2025-01-10T12:40:39.9685309Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9685475Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9685633Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9685868Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9686032Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9686338Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9686534Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9686540Z 
2025-01-10T12:40:39.9686764Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9686958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9686964Z 
2025-01-10T12:40:39.9687204Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9687351Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9687733Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9687876Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9688112Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9688268Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9688457Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9688629Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9688785Z err_msg = None
2025-01-10T12:40:39.9688791Z 
2025-01-10T12:40:39.9688985Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9689127Z         if err_msg is None:
2025-01-10T12:40:39.9689300Z             if left.shape != right.shape:
2025-01-10T12:40:39.9689448Z                 raise_assert_detail(
2025-01-10T12:40:39.9689700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9689829Z                 )
2025-01-10T12:40:39.9689971Z     
2025-01-10T12:40:39.9690110Z             diff = 0
2025-01-10T12:40:39.9690300Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9690457Z                 # count up differences
2025-01-10T12:40:39.9690758Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9691054Z                     diff += 1
2025-01-10T12:40:39.9691177Z     
2025-01-10T12:40:39.9691332Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9691557Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9691858Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9692033Z E           AssertionError: Series are different
2025-01-10T12:40:39.9692167Z E           
2025-01-10T12:40:39.9692343Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9693024Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9693728Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9694410Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9694432Z 
2025-01-10T12:40:39.9694971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9695339Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-10T12:40:39.9695346Z 
2025-01-10T12:40:39.9695548Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9695741Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9695884Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9696215Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9696405Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9696706Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9696841Z err_msg = None
2025-01-10T12:40:39.9696848Z 
2025-01-10T12:40:39.9697023Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9697183Z         if err_msg is None:
2025-01-10T12:40:39.9697346Z             if left.shape != right.shape:
2025-01-10T12:40:39.9697503Z                 raise_assert_detail(
2025-01-10T12:40:39.9697740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9697870Z                 )
2025-01-10T12:40:39.9697991Z     
2025-01-10T12:40:39.9698125Z             diff = 0
2025-01-10T12:40:39.9698308Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9698461Z                 # count up differences
2025-01-10T12:40:39.9698735Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9698908Z                     diff += 1
2025-01-10T12:40:39.9699030Z     
2025-01-10T12:40:39.9699169Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9699404Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9699676Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9700112Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9700242Z E           
2025-01-10T12:40:39.9700438Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9700841Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9701265Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9701280Z 
2025-01-10T12:40:39.9701770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9701777Z 
2025-01-10T12:40:39.9702062Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9702069Z 
2025-01-10T12:40:39.9702463Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7b170>
2025-01-10T12:40:39.9702811Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>, attr = 'nu'
2025-01-10T12:40:39.9702819Z 
2025-01-10T12:40:39.9703056Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9703265Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9703419Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9703559Z         try:
2025-01-10T12:40:39.9703799Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9703949Z         except KeyError:
2025-01-10T12:40:39.9704180Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9704322Z     
2025-01-10T12:40:39.9704474Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9704643Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9704793Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9705031Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9705183Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9705337Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9705530Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9705537Z 
2025-01-10T12:40:39.9705751Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9706204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9706463Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9706593Z     ???
2025-01-10T12:40:39.9706782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9706798Z 
2025-01-10T12:40:39.9706925Z >   ???
2025-01-10T12:40:39.9707142Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9707272Z E   
2025-01-10T12:40:39.9707495Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9707691Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9707826Z E          ...
2025-01-10T12:40:39.9707975Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9708202Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9708397Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9708537Z E          ...
2025-01-10T12:40:39.9708689Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9708911Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9709092Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9709099Z 
2025-01-10T12:40:39.9709419Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9709815Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-10T12:40:39.9709822Z 
2025-01-10T12:40:39.9710048Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9710267Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9710428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9710659Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9710872Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9711050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9711182Z err_msg = None
2025-01-10T12:40:39.9711188Z 
2025-01-10T12:40:39.9711376Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9711526Z         if err_msg is None:
2025-01-10T12:40:39.9711694Z             if left.shape != right.shape:
2025-01-10T12:40:39.9711844Z                 raise_assert_detail(
2025-01-10T12:40:39.9712102Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9712233Z                 )
2025-01-10T12:40:39.9712356Z     
2025-01-10T12:40:39.9712491Z             diff = 0
2025-01-10T12:40:39.9712677Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9712832Z                 # count up differences
2025-01-10T12:40:39.9713120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9713270Z                     diff += 1
2025-01-10T12:40:39.9713391Z     
2025-01-10T12:40:39.9713551Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9713782Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9714084Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9714292Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9714428Z E           
2025-01-10T12:40:39.9714626Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9715088Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9715563Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9715723Z 
2025-01-10T12:40:39.9716395Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9716414Z 
2025-01-10T12:40:39.9716706Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9716713Z 
2025-01-10T12:40:39.9717110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7b230>
2025-01-10T12:40:39.9717403Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9717555Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9717562Z 
2025-01-10T12:40:39.9717798Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9718001Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9718156Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9718285Z         try:
2025-01-10T12:40:39.9718528Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9718678Z         except KeyError:
2025-01-10T12:40:39.9718919Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9719225Z     
2025-01-10T12:40:39.9719376Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9719522Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9719666Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9719881Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9720035Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9720191Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9720389Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9720396Z 
2025-01-10T12:40:39.9720599Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9720801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9721037Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9721164Z     ???
2025-01-10T12:40:39.9721351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9721365Z 
2025-01-10T12:40:39.9744307Z >   ???
2025-01-10T12:40:39.9744563Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9744676Z E   
2025-01-10T12:40:39.9744893Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9745074Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9745203Z E          ...
2025-01-10T12:40:39.9745352Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9745588Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9745797Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9745933Z E          ...
2025-01-10T12:40:39.9746229Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9746455Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9746656Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9746674Z 
2025-01-10T12:40:39.9746824Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9747144Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-10T12:40:39.9747151Z 
2025-01-10T12:40:39.9747343Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9747550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9747715Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9747914Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9748323Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9748465Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9748606Z err_msg = None
2025-01-10T12:40:39.9748612Z 
2025-01-10T12:40:39.9748783Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9748925Z         if err_msg is None:
2025-01-10T12:40:39.9749066Z             if left.shape != right.shape:
2025-01-10T12:40:39.9749200Z                 raise_assert_detail(
2025-01-10T12:40:39.9749421Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9749540Z                 )
2025-01-10T12:40:39.9749650Z     
2025-01-10T12:40:39.9749773Z             diff = 0
2025-01-10T12:40:39.9749969Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9750123Z                 # count up differences
2025-01-10T12:40:39.9750428Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9750579Z                     diff += 1
2025-01-10T12:40:39.9750716Z     
2025-01-10T12:40:39.9750855Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9751086Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9751392Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9751752Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9751882Z E           
2025-01-10T12:40:39.9752083Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9752550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9752972Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9752997Z 
2025-01-10T12:40:39.9753481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9753489Z 
2025-01-10T12:40:39.9753756Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9753771Z 
2025-01-10T12:40:39.9754150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7b2f0>
2025-01-10T12:40:39.9754516Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>, attr = 'f_lu'
2025-01-10T12:40:39.9754524Z 
2025-01-10T12:40:39.9754761Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9754968Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9755127Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9755263Z         try:
2025-01-10T12:40:39.9755507Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9755656Z         except KeyError:
2025-01-10T12:40:39.9755889Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9756027Z     
2025-01-10T12:40:39.9756307Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9756486Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9756643Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9756880Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9757035Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9757193Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9757385Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9757392Z 
2025-01-10T12:40:39.9757606Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9757974Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9758223Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9758355Z     ???
2025-01-10T12:40:39.9758541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9758556Z 
2025-01-10T12:40:39.9758690Z >   ???
2025-01-10T12:40:39.9758914Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9759043Z E   
2025-01-10T12:40:39.9759267Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9759454Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9759595Z E          ...
2025-01-10T12:40:39.9759746Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9759970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9760167Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9760311Z E          ...
2025-01-10T12:40:39.9760460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9760680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9760861Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9761055Z 
2025-01-10T12:40:39.9761226Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9761594Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-10T12:40:39.9761608Z 
2025-01-10T12:40:39.9761828Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9762060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9762227Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9762463Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9762686Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9762857Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9762988Z err_msg = None
2025-01-10T12:40:39.9762994Z 
2025-01-10T12:40:39.9763188Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9763349Z         if err_msg is None:
2025-01-10T12:40:39.9763509Z             if left.shape != right.shape:
2025-01-10T12:40:39.9763665Z                 raise_assert_detail(
2025-01-10T12:40:39.9763912Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9764048Z                 )
2025-01-10T12:40:39.9764171Z     
2025-01-10T12:40:39.9764309Z             diff = 0
2025-01-10T12:40:39.9764500Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9764659Z                 # count up differences
2025-01-10T12:40:39.9764952Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9765106Z                     diff += 1
2025-01-10T12:40:39.9765229Z     
2025-01-10T12:40:39.9765394Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9765627Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9765927Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9766281Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9766410Z E           
2025-01-10T12:40:39.9766609Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9767073Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9767547Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9767709Z 
2025-01-10T12:40:39.9768273Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9768280Z 
2025-01-10T12:40:39.9768573Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9768580Z 
2025-01-10T12:40:39.9768978Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7ba70>
2025-01-10T12:40:39.9769265Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9769409Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9769415Z 
2025-01-10T12:40:39.9769644Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9769859Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9770003Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9770138Z         try:
2025-01-10T12:40:39.9770390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9770528Z         except KeyError:
2025-01-10T12:40:39.9770961Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9771070Z     
2025-01-10T12:40:39.9771205Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9771341Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9771483Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9771677Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9771813Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9771946Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9772118Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9772228Z             else:
2025-01-10T12:40:39.9772389Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9772545Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9772560Z 
2025-01-10T12:40:39.9772739Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9772910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9773132Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9773246Z     ???
2025-01-10T12:40:39.9773407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9773414Z 
2025-01-10T12:40:39.9773526Z >   ???
2025-01-10T12:40:39.9773717Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9773832Z E   
2025-01-10T12:40:39.9774015Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9774183Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9774291Z E          ...
2025-01-10T12:40:39.9774439Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9774633Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9774797Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9774912Z E          ...
2025-01-10T12:40:39.9775038Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9775258Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9775430Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9775437Z 
2025-01-10T12:40:39.9775578Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9775893Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-10T12:40:39.9775899Z 
2025-01-10T12:40:39.9776235Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9776425Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9776731Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9776929Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9777108Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9777258Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9777372Z err_msg = None
2025-01-10T12:40:39.9777377Z 
2025-01-10T12:40:39.9777542Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9777666Z         if err_msg is None:
2025-01-10T12:40:39.9777817Z             if left.shape != right.shape:
2025-01-10T12:40:39.9777948Z                 raise_assert_detail(
2025-01-10T12:40:39.9778170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9778284Z                 )
2025-01-10T12:40:39.9778404Z     
2025-01-10T12:40:39.9778524Z             diff = 0
2025-01-10T12:40:39.9778696Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9778839Z                 # count up differences
2025-01-10T12:40:39.9779094Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9779223Z                     diff += 1
2025-01-10T12:40:39.9779488Z     
2025-01-10T12:40:39.9779630Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9779834Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9780098Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9780268Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9780387Z E           
2025-01-10T12:40:39.9780553Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9780962Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9781387Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9781408Z 
2025-01-10T12:40:39.9781873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9781880Z 
2025-01-10T12:40:39.9782138Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9782145Z 
2025-01-10T12:40:39.9782498Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7bb30>
2025-01-10T12:40:39.9782752Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9782893Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9782899Z 
2025-01-10T12:40:39.9783107Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9783295Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9783429Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9783561Z         try:
2025-01-10T12:40:39.9783780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9783923Z         except KeyError:
2025-01-10T12:40:39.9784143Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9784264Z     
2025-01-10T12:40:39.9784400Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9784548Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9784688Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9784887Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9785034Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9785295Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9785476Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9785592Z             else:
2025-01-10T12:40:39.9785749Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9785917Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9785935Z 
2025-01-10T12:40:39.9786279Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9786465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9786700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9786814Z     ???
2025-01-10T12:40:39.9786993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9786999Z 
2025-01-10T12:40:39.9787115Z >   ???
2025-01-10T12:40:39.9787318Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9787447Z E   
2025-01-10T12:40:39.9787650Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9787829Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9787947Z E          ...
2025-01-10T12:40:39.9788092Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9788292Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9788634Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9788748Z E          ...
2025-01-10T12:40:39.9788893Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9789097Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9789276Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9789283Z 
2025-01-10T12:40:39.9789434Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9789771Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-10T12:40:39.9789779Z 
2025-01-10T12:40:39.9789994Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9790196Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9790359Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9790583Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9790795Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9790957Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9791083Z err_msg = None
2025-01-10T12:40:39.9791089Z 
2025-01-10T12:40:39.9791269Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9791400Z         if err_msg is None:
2025-01-10T12:40:39.9791562Z             if left.shape != right.shape:
2025-01-10T12:40:39.9791701Z                 raise_assert_detail(
2025-01-10T12:40:39.9791954Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9792078Z                 )
2025-01-10T12:40:39.9792202Z     
2025-01-10T12:40:39.9792324Z             diff = 0
2025-01-10T12:40:39.9792509Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9792656Z                 # count up differences
2025-01-10T12:40:39.9792950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9793077Z                     diff += 1
2025-01-10T12:40:39.9793198Z     
2025-01-10T12:40:39.9793347Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9793565Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9793855Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9794038Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9794163Z E           
2025-01-10T12:40:39.9794497Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9794935Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9795395Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9795411Z 
2025-01-10T12:40:39.9795910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9795917Z 
2025-01-10T12:40:39.9796313Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9796329Z 
2025-01-10T12:40:39.9796679Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6e7bcb0>
2025-01-10T12:40:39.9796954Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22eec1e540>
2025-01-10T12:40:39.9797083Z attr = 'j_blues'
2025-01-10T12:40:39.9797241Z 
2025-01-10T12:40:39.9797485Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9797677Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9797806Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9797932Z         try:
2025-01-10T12:40:39.9798146Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9798287Z         except KeyError:
2025-01-10T12:40:39.9798503Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9798616Z     
2025-01-10T12:40:39.9798740Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9798927Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9799077Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9799284Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9799422Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9799583Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9799756Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9799874Z             else:
2025-01-10T12:40:39.9800026Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9800190Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9800197Z 
2025-01-10T12:40:39.9800400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9800594Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9800905Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9801028Z     ???
2025-01-10T12:40:39.9801225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9801241Z 
2025-01-10T12:40:39.9801357Z >   ???
2025-01-10T12:40:39.9801554Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9801673Z E   
2025-01-10T12:40:39.9801889Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9802074Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9802199Z E          ...
2025-01-10T12:40:39.9802348Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9802564Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9802760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9802883Z E          ...
2025-01-10T12:40:39.9803036Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9803247Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9803416Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9803576Z 
2025-01-10T12:40:39.9803717Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9804117Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-10T12:40:39.9804125Z 
2025-01-10T12:40:39.9804332Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9804521Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9804666Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9804877Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9805080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9805214Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9805331Z err_msg = None
2025-01-10T12:40:39.9805337Z 
2025-01-10T12:40:39.9805497Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9805641Z         if err_msg is None:
2025-01-10T12:40:39.9805790Z             if left.shape != right.shape:
2025-01-10T12:40:39.9805943Z                 raise_assert_detail(
2025-01-10T12:40:39.9806311Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9806604Z                 )
2025-01-10T12:40:39.9806715Z     
2025-01-10T12:40:39.9806826Z             diff = 0
2025-01-10T12:40:39.9807013Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9807144Z                 # count up differences
2025-01-10T12:40:39.9807403Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9807520Z                     diff += 1
2025-01-10T12:40:39.9807640Z     
2025-01-10T12:40:39.9807779Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9808017Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9808308Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9808492Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9808607Z E           
2025-01-10T12:40:39.9808785Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9809198Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9809627Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9809642Z 
2025-01-10T12:40:39.9810124Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9810136Z 
2025-01-10T12:40:39.9810398Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9810404Z 
2025-01-10T12:40:39.9810765Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4a70>
2025-01-10T12:40:39.9811024Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9811147Z attr = 'lines'
2025-01-10T12:40:39.9811153Z 
2025-01-10T12:40:39.9811363Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9811548Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9811678Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9811798Z         try:
2025-01-10T12:40:39.9812007Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9812145Z         except KeyError:
2025-01-10T12:40:39.9812507Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9812621Z     
2025-01-10T12:40:39.9812767Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9812912Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9813050Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9813278Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9813420Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9813560Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9813738Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9813861Z             else:
2025-01-10T12:40:39.9814023Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9814198Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9814205Z 
2025-01-10T12:40:39.9814416Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9814596Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9814838Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9814954Z     ???
2025-01-10T12:40:39.9815131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9815137Z 
2025-01-10T12:40:39.9815365Z >   ???
2025-01-10T12:40:39.9815556Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9815671Z E   
2025-01-10T12:40:39.9815867Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9816192Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9816313Z E          ...
2025-01-10T12:40:39.9816459Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9816677Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9816869Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9816990Z E          ...
2025-01-10T12:40:39.9817145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9817360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9817525Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9817532Z 
2025-01-10T12:40:39.9817681Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9818183Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-10T12:40:39.9818190Z 
2025-01-10T12:40:39.9818560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4b30>
2025-01-10T12:40:39.9818824Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9818963Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9818969Z 
2025-01-10T12:40:39.9819198Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9819382Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9819527Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9819660Z         try:
2025-01-10T12:40:39.9819909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9820043Z         except KeyError:
2025-01-10T12:40:39.9820269Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9820392Z     
2025-01-10T12:40:39.9820539Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9820693Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9820841Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9821069Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9821221Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9821365Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9821547Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9821553Z 
2025-01-10T12:40:39.9821760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9821937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9822098Z 
2025-01-10T12:40:39.9822309Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9822444Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9822617Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9822752Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9822993Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T12:40:39.9823128Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T12:40:39.9823303Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9823433Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T12:40:39.9823556Z err_msg = None
2025-01-10T12:40:39.9823563Z 
2025-01-10T12:40:39.9823741Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9823876Z         if err_msg is None:
2025-01-10T12:40:39.9824043Z             if left.shape != right.shape:
2025-01-10T12:40:39.9824183Z                 raise_assert_detail(
2025-01-10T12:40:39.9824420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9824534Z                 )
2025-01-10T12:40:39.9824651Z     
2025-01-10T12:40:39.9824916Z             diff = 0
2025-01-10T12:40:39.9825089Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9825221Z                 # count up differences
2025-01-10T12:40:39.9825490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9825609Z                     diff += 1
2025-01-10T12:40:39.9825719Z     
2025-01-10T12:40:39.9825859Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9826186Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9826460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9826625Z E           AssertionError: Series are different
2025-01-10T12:40:39.9826744Z E           
2025-01-10T12:40:39.9826907Z E           Series values are different (2.42915 %)
2025-01-10T12:40:39.9827508Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9828012Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9828537Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9828549Z 
2025-01-10T12:40:39.9829012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9829508Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-10T12:40:39.9829524Z 
2025-01-10T12:40:39.9829877Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4bf0>
2025-01-10T12:40:39.9830152Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9830292Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9830451Z 
2025-01-10T12:40:39.9830676Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9830855Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9830994Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9831109Z         try:
2025-01-10T12:40:39.9831348Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9831476Z         except KeyError:
2025-01-10T12:40:39.9831696Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9831810Z     
2025-01-10T12:40:39.9831945Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9832101Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9832240Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9832458Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9832595Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9832744Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9832924Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9832931Z 
2025-01-10T12:40:39.9833136Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9833313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9833469Z 
2025-01-10T12:40:39.9833691Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9833840Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9834008Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9834140Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9834356Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T12:40:39.9834494Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T12:40:39.9834659Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T12:40:39.9834797Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T12:40:39.9834918Z err_msg = None
2025-01-10T12:40:39.9834924Z 
2025-01-10T12:40:39.9835097Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9835227Z         if err_msg is None:
2025-01-10T12:40:39.9835379Z             if left.shape != right.shape:
2025-01-10T12:40:39.9835512Z                 raise_assert_detail(
2025-01-10T12:40:39.9835733Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9835851Z                 )
2025-01-10T12:40:39.9835964Z     
2025-01-10T12:40:39.9836218Z             diff = 0
2025-01-10T12:40:39.9836393Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9836539Z                 # count up differences
2025-01-10T12:40:39.9836803Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9836926Z                     diff += 1
2025-01-10T12:40:39.9837034Z     
2025-01-10T12:40:39.9837184Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9837392Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9837666Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9837826Z E           AssertionError: Series are different
2025-01-10T12:40:39.9837958Z E           
2025-01-10T12:40:39.9838115Z E           Series values are different (6.47773 %)
2025-01-10T12:40:39.9838730Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:39.9839331Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9840122Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:39.9840138Z 
2025-01-10T12:40:39.9840627Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9841021Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-10T12:40:39.9841035Z 
2025-01-10T12:40:39.9841240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9841451Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9841762Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9841969Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9842167Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9842313Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9842438Z err_msg = None
2025-01-10T12:40:39.9842444Z 
2025-01-10T12:40:39.9842614Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9842746Z         if err_msg is None:
2025-01-10T12:40:39.9842886Z             if left.shape != right.shape:
2025-01-10T12:40:39.9843035Z                 raise_assert_detail(
2025-01-10T12:40:39.9843238Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9843355Z                 )
2025-01-10T12:40:39.9843458Z     
2025-01-10T12:40:39.9843573Z             diff = 0
2025-01-10T12:40:39.9843751Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9843877Z                 # count up differences
2025-01-10T12:40:39.9844133Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9844247Z                     diff += 1
2025-01-10T12:40:39.9844359Z     
2025-01-10T12:40:39.9844489Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9844687Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9844942Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9845113Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9845235Z E           
2025-01-10T12:40:39.9845402Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9845798Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9846344Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9846354Z 
2025-01-10T12:40:39.9846793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9846965Z 
2025-01-10T12:40:39.9847216Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9847229Z 
2025-01-10T12:40:39.9847559Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4e30>
2025-01-10T12:40:39.9847864Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>, attr = 'nu'
2025-01-10T12:40:39.9847877Z 
2025-01-10T12:40:39.9848081Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9848253Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9848381Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9848503Z         try:
2025-01-10T12:40:39.9848720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9848852Z         except KeyError:
2025-01-10T12:40:39.9849050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9849168Z     
2025-01-10T12:40:39.9849306Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9849474Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9849628Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9849859Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9850013Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9850156Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9850497Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9850505Z 
2025-01-10T12:40:39.9850701Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9850883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9851118Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9851238Z     ???
2025-01-10T12:40:39.9851417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9851423Z 
2025-01-10T12:40:39.9851542Z >   ???
2025-01-10T12:40:39.9851742Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9851859Z E   
2025-01-10T12:40:39.9852073Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9852240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9852360Z E          ...
2025-01-10T12:40:39.9852494Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9852709Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9852894Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9853007Z E          ...
2025-01-10T12:40:39.9853140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9853332Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9853487Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9853493Z 
2025-01-10T12:40:39.9853631Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9854063Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-10T12:40:39.9854079Z 
2025-01-10T12:40:39.9854265Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9854462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9854614Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9854821Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9855028Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9855191Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9855317Z err_msg = None
2025-01-10T12:40:39.9855323Z 
2025-01-10T12:40:39.9855496Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9855634Z         if err_msg is None:
2025-01-10T12:40:39.9855782Z             if left.shape != right.shape:
2025-01-10T12:40:39.9856041Z                 raise_assert_detail(
2025-01-10T12:40:39.9856411Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9856529Z                 )
2025-01-10T12:40:39.9856645Z     
2025-01-10T12:40:39.9856776Z             diff = 0
2025-01-10T12:40:39.9856952Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9857088Z                 # count up differences
2025-01-10T12:40:39.9857356Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9857479Z                     diff += 1
2025-01-10T12:40:39.9857585Z     
2025-01-10T12:40:39.9857722Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9857928Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9858216Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9858400Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9858528Z E           
2025-01-10T12:40:39.9858707Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9859127Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9859699Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9859708Z 
2025-01-10T12:40:39.9860184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9860197Z 
2025-01-10T12:40:39.9860461Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9860468Z 
2025-01-10T12:40:39.9860830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4ef0>
2025-01-10T12:40:39.9861083Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9861222Z attr = 'wavelength_cm'
2025-01-10T12:40:39.9861229Z 
2025-01-10T12:40:39.9861435Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9861624Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9861755Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9861861Z         try:
2025-01-10T12:40:39.9862083Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9862203Z         except KeyError:
2025-01-10T12:40:39.9862417Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9862521Z     
2025-01-10T12:40:39.9862665Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9862807Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9862944Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9863138Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9863269Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9863418Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9863591Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9863597Z 
2025-01-10T12:40:39.9863782Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9863956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9864196Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9864311Z     ???
2025-01-10T12:40:39.9864488Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9864494Z 
2025-01-10T12:40:39.9864757Z >   ???
2025-01-10T12:40:39.9864960Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9865069Z E   
2025-01-10T12:40:39.9865268Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9865436Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9865550Z E          ...
2025-01-10T12:40:39.9865687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9865882Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9866046Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9866299Z E          ...
2025-01-10T12:40:39.9866433Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9866620Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9866778Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9866784Z 
2025-01-10T12:40:39.9866916Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9867304Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-10T12:40:39.9867311Z 
2025-01-10T12:40:39.9867499Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9867689Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9867992Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9868226Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9868457Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9868628Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9868766Z err_msg = None
2025-01-10T12:40:39.9868772Z 
2025-01-10T12:40:39.9868956Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9869109Z         if err_msg is None:
2025-01-10T12:40:39.9869276Z             if left.shape != right.shape:
2025-01-10T12:40:39.9869426Z                 raise_assert_detail(
2025-01-10T12:40:39.9869671Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9869802Z                 )
2025-01-10T12:40:39.9869923Z     
2025-01-10T12:40:39.9870067Z             diff = 0
2025-01-10T12:40:39.9870257Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9870415Z                 # count up differences
2025-01-10T12:40:39.9870713Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9870852Z                     diff += 1
2025-01-10T12:40:39.9870978Z     
2025-01-10T12:40:39.9871130Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9871367Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9871666Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9871872Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9871997Z E           
2025-01-10T12:40:39.9872194Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9872659Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9873734Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9873746Z 
2025-01-10T12:40:39.9874277Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9874457Z 
2025-01-10T12:40:39.9874758Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9874765Z 
2025-01-10T12:40:39.9875169Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea4fb0>
2025-01-10T12:40:39.9875543Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>, attr = 'f_lu'
2025-01-10T12:40:39.9875549Z 
2025-01-10T12:40:39.9875784Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9875986Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9876310Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9876444Z         try:
2025-01-10T12:40:39.9876684Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9876830Z         except KeyError:
2025-01-10T12:40:39.9877066Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9877193Z     
2025-01-10T12:40:39.9877349Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9877519Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9877673Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9877906Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9878057Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9878356Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9878539Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9878545Z 
2025-01-10T12:40:39.9878753Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T12:40:39.9878935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9879167Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9879290Z     ???
2025-01-10T12:40:39.9879473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9879480Z 
2025-01-10T12:40:39.9879611Z >   ???
2025-01-10T12:40:39.9879827Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9879945Z E   
2025-01-10T12:40:39.9880142Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9880320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9880443Z E          ...
2025-01-10T12:40:39.9880590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9880788Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9880967Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9881090Z E          ...
2025-01-10T12:40:39.9881227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9881438Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9881611Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9881617Z 
2025-01-10T12:40:39.9881760Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9882197Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-10T12:40:39.9882210Z 
2025-01-10T12:40:39.9882400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9882594Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9882752Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9882960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9883152Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9883302Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9883416Z err_msg = None
2025-01-10T12:40:39.9883421Z 
2025-01-10T12:40:39.9883583Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9883707Z         if err_msg is None:
2025-01-10T12:40:39.9884002Z             if left.shape != right.shape:
2025-01-10T12:40:39.9884134Z                 raise_assert_detail(
2025-01-10T12:40:39.9884343Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9884456Z                 )
2025-01-10T12:40:39.9884559Z     
2025-01-10T12:40:39.9884682Z             diff = 0
2025-01-10T12:40:39.9884846Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9884987Z                 # count up differences
2025-01-10T12:40:39.9885237Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9885364Z                     diff += 1
2025-01-10T12:40:39.9885471Z     
2025-01-10T12:40:39.9885608Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9885809Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9886226Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9886410Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9886521Z E           
2025-01-10T12:40:39.9886689Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9887105Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9887680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9887689Z 
2025-01-10T12:40:39.9888149Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9888162Z 
2025-01-10T12:40:39.9888413Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9888419Z 
2025-01-10T12:40:39.9888757Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea5730>
2025-01-10T12:40:39.9889025Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9889152Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9889159Z 
2025-01-10T12:40:39.9889368Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9889556Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9889686Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9889812Z         try:
2025-01-10T12:40:39.9890027Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9890150Z         except KeyError:
2025-01-10T12:40:39.9890363Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9890472Z     
2025-01-10T12:40:39.9890605Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9890746Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9890882Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9891077Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9891220Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9891354Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9891524Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9891630Z             else:
2025-01-10T12:40:39.9891776Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9891931Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9891943Z 
2025-01-10T12:40:39.9892131Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9892305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9892540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9892811Z     ???
2025-01-10T12:40:39.9892981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9892987Z 
2025-01-10T12:40:39.9893104Z >   ???
2025-01-10T12:40:39.9893297Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9893419Z E   
2025-01-10T12:40:39.9893613Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9893783Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9893899Z E          ...
2025-01-10T12:40:39.9894046Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9894261Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9894443Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9894562Z E          ...
2025-01-10T12:40:39.9894696Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9894895Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9895062Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9895068Z 
2025-01-10T12:40:39.9895210Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9895662Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-10T12:40:39.9895779Z 
2025-01-10T12:40:39.9895991Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9896327Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9896493Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9896713Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9896918Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9897077Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9897205Z err_msg = None
2025-01-10T12:40:39.9897211Z 
2025-01-10T12:40:39.9897374Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9897507Z         if err_msg is None:
2025-01-10T12:40:39.9897669Z             if left.shape != right.shape:
2025-01-10T12:40:39.9897820Z                 raise_assert_detail(
2025-01-10T12:40:39.9898062Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9898188Z                 )
2025-01-10T12:40:39.9898306Z     
2025-01-10T12:40:39.9898423Z             diff = 0
2025-01-10T12:40:39.9898590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9898724Z                 # count up differences
2025-01-10T12:40:39.9899021Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9899146Z                     diff += 1
2025-01-10T12:40:39.9899250Z     
2025-01-10T12:40:39.9899386Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9899589Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9899848Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9900011Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9900134Z E           
2025-01-10T12:40:39.9900298Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9900692Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9901095Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9901256Z 
2025-01-10T12:40:39.9901711Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9901723Z 
2025-01-10T12:40:39.9901979Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9901985Z 
2025-01-10T12:40:39.9902325Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea57f0>
2025-01-10T12:40:39.9902575Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9902697Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9902703Z 
2025-01-10T12:40:39.9902906Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9903084Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9903208Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9903330Z         try:
2025-01-10T12:40:39.9903536Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9903665Z         except KeyError:
2025-01-10T12:40:39.9903869Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9903985Z     
2025-01-10T12:40:39.9904113Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9904436Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9904579Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9904777Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9904928Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9905076Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9905245Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9905355Z             else:
2025-01-10T12:40:39.9905509Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9905667Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9905681Z 
2025-01-10T12:40:39.9905878Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9906051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9906424Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9906533Z     ???
2025-01-10T12:40:39.9906718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9906725Z 
2025-01-10T12:40:39.9906845Z >   ???
2025-01-10T12:40:39.9907034Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9907144Z E   
2025-01-10T12:40:39.9907335Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9907501Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9907609Z E          ...
2025-01-10T12:40:39.9907745Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9907934Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9908115Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9908234Z E          ...
2025-01-10T12:40:39.9908376Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9908561Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9908727Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9908733Z 
2025-01-10T12:40:39.9908870Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9909260Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-10T12:40:39.9909267Z 
2025-01-10T12:40:39.9909485Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9909690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9909834Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9910028Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T12:40:39.9910375Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T12:40:39.9910530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T12:40:39.9910643Z err_msg = None
2025-01-10T12:40:39.9910656Z 
2025-01-10T12:40:39.9910818Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T12:40:39.9910935Z         if err_msg is None:
2025-01-10T12:40:39.9911085Z             if left.shape != right.shape:
2025-01-10T12:40:39.9911231Z                 raise_assert_detail(
2025-01-10T12:40:39.9911454Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T12:40:39.9911563Z                 )
2025-01-10T12:40:39.9911688Z     
2025-01-10T12:40:39.9911814Z             diff = 0
2025-01-10T12:40:39.9911986Z             for left_arr, right_arr in zip(left, right):
2025-01-10T12:40:39.9912112Z                 # count up differences
2025-01-10T12:40:39.9912398Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T12:40:39.9912523Z                     diff += 1
2025-01-10T12:40:39.9912633Z     
2025-01-10T12:40:39.9912766Z             diff = diff * 100.0 / left.size
2025-01-10T12:40:39.9912976Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T12:40:39.9913385Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T12:40:39.9913563Z E           AssertionError: numpy array are different
2025-01-10T12:40:39.9913687Z E           
2025-01-10T12:40:39.9913868Z E           numpy array values are different (2.42915 %)
2025-01-10T12:40:39.9914261Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9914676Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:39.9914700Z 
2025-01-10T12:40:39.9915209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T12:40:39.9915216Z 
2025-01-10T12:40:39.9915490Z During handling of the above exception, another exception occurred:
2025-01-10T12:40:39.9915497Z 
2025-01-10T12:40:39.9915839Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f22f6ea5970>
2025-01-10T12:40:39.9916257Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f22c72b8230>
2025-01-10T12:40:39.9916383Z attr = 'j_blues'
2025-01-10T12:40:39.9916396Z 
2025-01-10T12:40:39.9916620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T12:40:39.9916795Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T12:40:39.9916926Z         key = f"plasma/{attr}"
2025-01-10T12:40:39.9917055Z         try:
2025-01-10T12:40:39.9917283Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T12:40:39.9917432Z         except KeyError:
2025-01-10T12:40:39.9917649Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T12:40:39.9917760Z     
2025-01-10T12:40:39.9917886Z         if hasattr(plasma, attr):
2025-01-10T12:40:39.9918030Z             actual = getattr(plasma, attr)
2025-01-10T12:40:39.9918159Z             if attr == "selected_atoms":
2025-01-10T12:40:39.9918358Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T12:40:39.9918486Z             elif actual.ndim == 1:
2025-01-10T12:40:39.9918630Z                 actual = pd.Series(actual)
2025-01-10T12:40:39.9918795Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T12:40:39.9919071Z             else:
2025-01-10T12:40:39.9919216Z                 actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9919401Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T12:40:39.9919407Z 
2025-01-10T12:40:39.9919598Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T12:40:39.9919768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9920009Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9920124Z     ???
2025-01-10T12:40:39.9920290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9920296Z 
2025-01-10T12:40:39.9920399Z >   ???
2025-01-10T12:40:39.9920611Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:39.9920726Z E   
2025-01-10T12:40:39.9920924Z E   MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:39.9921105Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9921230Z E          ...
2025-01-10T12:40:39.9921386Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9921597Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9921794Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:39.9922072Z E          ...
2025-01-10T12:40:39.9922223Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:39.9922425Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:39.9922607Z E   At positional index 75, first diff: 7 != 6
2025-01-10T12:40:39.9922614Z 
2025-01-10T12:40:39.9922766Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9923064Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-10T12:40:39.9923071Z 
2025-01-10T12:40:39.9923462Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9923607Z attr = 'stimulated_emission_factor'
2025-01-10T12:40:39.9924028Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c72ba8d0>
2025-01-10T12:40:39.9924035Z 
2025-01-10T12:40:39.9924273Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9924570Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9924773Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9924986Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9925173Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9925312Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9925449Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9925629Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9925636Z 
2025-01-10T12:40:39.9925799Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9925962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9925975Z 
2025-01-10T12:40:39.9926576Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4a958a0>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-01-10T12:40:39.9926690Z         0.01476858],
2025-01-10T12:40:39.9926889Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-10T12:40:39.9927005Z         0.01473787]]))
2025-01-10T12:40:39.9927395Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9927402Z 
2025-01-10T12:40:39.9927514Z     @wraps(func)
2025-01-10T12:40:39.9927645Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9927788Z         with self._recreate_cm():
2025-01-10T12:40:39.9927920Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9928049Z E           AssertionError: 
2025-01-10T12:40:39.9928208Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9928483Z E           
2025-01-10T12:40:39.9928634Z E           Mismatched elements: 80 / 584480 (0.0137%)
2025-01-10T12:40:39.9928814Z E           Max absolute difference among violations: 1.
2025-01-10T12:40:39.9928982Z E           Max relative difference among violations: 1.
2025-01-10T12:40:39.9929194Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9929374Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9929541Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:39.9929751Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9929908Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:39.9930076Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:39.9930082Z 
2025-01-10T12:40:39.9930386Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9930630Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-10T12:40:39.9930636Z 
2025-01-10T12:40:39.9930978Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9931285Z attr = 'lines_lower_level_index'
2025-01-10T12:40:39.9931698Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c16e4350>
2025-01-10T12:40:39.9931712Z 
2025-01-10T12:40:39.9931952Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9932221Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9932412Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9932616Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9932810Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9932967Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9933107Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9933281Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9933289Z 
2025-01-10T12:40:39.9933462Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9933645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9933651Z 
2025-01-10T12:40:39.9934284Z args = (<function assert_allclose.<locals>.compare at 0x7f22c9d651c0>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-10T12:40:39.9934714Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9934724Z 
2025-01-10T12:40:39.9934820Z     @wraps(func)
2025-01-10T12:40:39.9934911Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9935006Z         with self._recreate_cm():
2025-01-10T12:40:39.9935102Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9935195Z E           AssertionError: 
2025-01-10T12:40:39.9935304Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9935382Z E           
2025-01-10T12:40:39.9935488Z E           Mismatched elements: 775 / 29224 (2.65%)
2025-01-10T12:40:39.9935627Z E           Max absolute difference among violations: 4005
2025-01-10T12:40:39.9935753Z E           Max relative difference among violations: 415.5
2025-01-10T12:40:39.9935885Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:39.9936022Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:39.9936027Z 
2025-01-10T12:40:39.9936459Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9936639Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-10T12:40:39.9936643Z 
2025-01-10T12:40:39.9936874Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9937153Z attr = 'lines_upper_level_index'
2025-01-10T12:40:39.9937429Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c8077a70>
2025-01-10T12:40:39.9937440Z 
2025-01-10T12:40:39.9937586Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9937769Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9937896Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9938044Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9938166Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9938269Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9938363Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9938474Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9938479Z 
2025-01-10T12:40:39.9938593Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9938719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9938723Z 
2025-01-10T12:40:39.9939128Z args = (<function assert_allclose.<locals>.compare at 0x7f22c72f6fc0>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-10T12:40:39.9939525Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9939530Z 
2025-01-10T12:40:39.9939616Z     @wraps(func)
2025-01-10T12:40:39.9939707Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9939802Z         with self._recreate_cm():
2025-01-10T12:40:39.9939892Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9939989Z E           AssertionError: 
2025-01-10T12:40:39.9940097Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9940179Z E           
2025-01-10T12:40:39.9940281Z E           Mismatched elements: 1843 / 29224 (6.31%)
2025-01-10T12:40:39.9940422Z E           Max absolute difference among violations: 4046
2025-01-10T12:40:39.9940560Z E           Max relative difference among violations: 54.65079365
2025-01-10T12:40:39.9940684Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:39.9940827Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:39.9940832Z 
2025-01-10T12:40:39.9941032Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9941190Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-10T12:40:39.9941195Z 
2025-01-10T12:40:39.9941422Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9941510Z attr = 'beta_sobolev'
2025-01-10T12:40:39.9941777Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22db095b50>
2025-01-10T12:40:39.9941789Z 
2025-01-10T12:40:39.9941939Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9942111Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9942234Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9942373Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9942498Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9942595Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9942687Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9942796Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9942801Z 
2025-01-10T12:40:39.9942906Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9943025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9943029Z 
2025-01-10T12:40:39.9943311Z args = (<function assert_allclose.<locals>.compare at 0x7f22c72f7060>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9943477Z        [1., 1., .....,
2025-01-10T12:40:39.9943564Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9943642Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9943730Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T12:40:39.9943990Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9944000Z 
2025-01-10T12:40:39.9944084Z     @wraps(func)
2025-01-10T12:40:39.9944175Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9944270Z         with self._recreate_cm():
2025-01-10T12:40:39.9944360Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9944454Z E           AssertionError: 
2025-01-10T12:40:39.9944566Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9944646Z E           
2025-01-10T12:40:39.9944758Z E           Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:39.9944894Z E           Max absolute difference among violations: 0.99984222
2025-01-10T12:40:39.9945042Z E           Max relative difference among violations: 6337.12154973
2025-01-10T12:40:39.9945151Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945247Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945340Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.9945538Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945627Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:39.9945722Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:39.9945726Z 
2025-01-10T12:40:39.9945936Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9946268Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-10T12:40:39.9946277Z 
2025-01-10T12:40:39.9946537Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9946624Z attr = 'lines'
2025-01-10T12:40:39.9946906Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ca7527e0>
2025-01-10T12:40:39.9946910Z 
2025-01-10T12:40:39.9947060Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9947234Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9947367Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9947509Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9947635Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9947737Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9947841Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9947946Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9947951Z 
2025-01-10T12:40:39.9948062Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9948182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9948190Z 
2025-01-10T12:40:39.9948658Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4abd8a0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-10T12:40:39.9948774Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-10T12:40:39.9949041Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9949047Z 
2025-01-10T12:40:39.9949132Z     @wraps(func)
2025-01-10T12:40:39.9949222Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9949315Z         with self._recreate_cm():
2025-01-10T12:40:39.9949404Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9949566Z E           AssertionError: 
2025-01-10T12:40:39.9949714Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9949857Z E           
2025-01-10T12:40:39.9950320Z E           Mismatched elements: 13481 / 263016 (5.13%)
2025-01-10T12:40:39.9950549Z E           Max absolute difference among violations: 2.93004431e+13
2025-01-10T12:40:39.9950716Z E           Max relative difference among violations: 6160.70416047
2025-01-10T12:40:39.9950960Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:39.9951092Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T12:40:39.9951365Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:39.9951631Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:39.9951757Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T12:40:39.9951962Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:39.9951967Z 
2025-01-10T12:40:39.9952220Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9952478Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-10T12:40:39.9952484Z 
2025-01-10T12:40:39.9952762Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9952911Z attr = 'f_lu'
2025-01-10T12:40:39.9953248Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ca7506b0>
2025-01-10T12:40:39.9953386Z 
2025-01-10T12:40:39.9953568Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9953840Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9954009Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9954209Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9954381Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9954538Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9954650Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9954888Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9954894Z 
2025-01-10T12:40:39.9955066Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9955229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9955239Z 
2025-01-10T12:40:39.9955775Z args = (<function assert_allclose.<locals>.compare at 0x7f22c72f58a0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-10T12:40:39.9955901Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-10T12:40:39.9956501Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9956510Z 
2025-01-10T12:40:39.9956625Z     @wraps(func)
2025-01-10T12:40:39.9956799Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9956955Z         with self._recreate_cm():
2025-01-10T12:40:39.9957065Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9957286Z E           AssertionError: 
2025-01-10T12:40:39.9957428Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9957588Z E           
2025-01-10T12:40:39.9957723Z E           Mismatched elements: 2241 / 29224 (7.67%)
2025-01-10T12:40:39.9957905Z E           Max absolute difference among violations: 2.92713618
2025-01-10T12:40:39.9958121Z E           Max relative difference among violations: 6160.70416047
2025-01-10T12:40:39.9958394Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:39.9958526Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T12:40:39.9959204Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:39.9959364Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T12:40:39.9959370Z 
2025-01-10T12:40:39.9959603Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9959971Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-10T12:40:39.9959976Z 
2025-01-10T12:40:39.9960223Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f22f577fb60>
2025-01-10T12:40:39.9960435Z attr = 'tau_sobolevs'
2025-01-10T12:40:39.9960733Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22f6ea51c0>
2025-01-10T12:40:39.9960744Z 
2025-01-10T12:40:39.9960974Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T12:40:39.9961204Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T12:40:39.9961340Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T12:40:39.9961599Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T12:40:39.9961754Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T12:40:39.9961925Z             if hasattr(actual, "cgs"):
2025-01-10T12:40:39.9962046Z                 actual = actual.cgs.value
2025-01-10T12:40:39.9962204Z >           npt.assert_allclose(actual, expected)
2025-01-10T12:40:39.9962209Z 
2025-01-10T12:40:39.9962388Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T12:40:39.9962583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9962719Z 
2025-01-10T12:40:39.9963241Z args = (<function assert_allclose.<locals>.compare at 0x7f22f5f602c0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-10T12:40:39.9963383Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-10T12:40:39.9963688Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:39.9963694Z 
2025-01-10T12:40:39.9963849Z     @wraps(func)
2025-01-10T12:40:39.9964035Z     def inner(*args, **kwds):
2025-01-10T12:40:39.9964154Z         with self._recreate_cm():
2025-01-10T12:40:39.9964315Z >           return func(*args, **kwds)
2025-01-10T12:40:39.9964433Z E           AssertionError: 
2025-01-10T12:40:39.9964637Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:39.9964808Z E           
2025-01-10T12:40:39.9964945Z E           Mismatched elements: 40040 / 584480 (6.85%)
2025-01-10T12:40:39.9965157Z E           Max absolute difference among violations: 604603.16180317
2025-01-10T12:40:39.9965326Z E           Max relative difference among violations: 4.12352828e+47
2025-01-10T12:40:39.9965593Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:39.9965748Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T12:40:39.9965955Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:39.9966281Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:39.9966440Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T12:40:39.9966596Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:39.9966708Z 
2025-01-10T12:40:39.9966954Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:39.9967187Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-10T12:40:39.9967198Z 
2025-01-10T12:40:39.9967443Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9967589Z attr = 'iterations_w'
2025-01-10T12:40:39.9967889Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ca65aba0>
2025-01-10T12:40:39.9967894Z 
2025-01-10T12:40:39.9968146Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9968252Z         "attr",
2025-01-10T12:40:39.9968392Z         [
2025-01-10T12:40:39.9968539Z             "iterations_w",
2025-01-10T12:40:39.9968653Z             "iterations_t_rad",
2025-01-10T12:40:39.9968873Z             "iterations_electron_densities",
2025-01-10T12:40:39.9969121Z             "iterations_t_inner",
2025-01-10T12:40:39.9969259Z         ],
2025-01-10T12:40:39.9969381Z     )
2025-01-10T12:40:39.9969634Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9969828Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9970009Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9970127Z             actual = actual.value
2025-01-10T12:40:39.9970301Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9970458Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.9970734Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:39.9970740Z 
2025-01-10T12:40:39.9970941Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:39.9971089Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9971320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9971428Z     ???
2025-01-10T12:40:39.9971630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9971635Z 
2025-01-10T12:40:39.9971754Z >   ???
2025-01-10T12:40:39.9972002Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9972239Z E   
2025-01-10T12:40:39.9972469Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:39.9972645Z E   [index]: [0, 1]
2025-01-10T12:40:39.9972801Z E   [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-10T12:40:39.9972990Z E   [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T12:40:39.9973192Z E   At positional index 1, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:39.9973198Z 
2025-01-10T12:40:39.9973355Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9973527Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:39.9974087Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:39.9974592Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:39.9974816Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T12:40:39.9974830Z 
2025-01-10T12:40:39.9974833Z 
2025-01-10T12:40:39.9975138Z Packets:                                                                                   4031/? [04:51<00:00, 10.36it/s]   [A
2025-01-10T12:40:39.9975148Z 
2025-01-10T12:40:39.9975389Z Packets:                                                                                   14195/? [04:51<00:00, 60.17it/s][A
2025-01-10T12:40:39.9975395Z 
2025-01-10T12:40:39.9975768Z Packets:                                                                                   24680/? [04:51<00:00, 133.50it/s][A
2025-01-10T12:40:39.9975775Z 
2025-01-10T12:40:39.9976028Z Packets:                                                                                   35101/? [04:51<00:00, 237.44it/s][A
2025-01-10T12:40:39.9976938Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:51<00:00, 102.58s/it]
2025-01-10T12:40:39.9976948Z 
2025-01-10T12:40:39.9977261Z Packets:                                                                                   44030/? [04:51<00:00, 237.44it/s][A
2025-01-10T12:40:39.9977277Z 
2025-01-10T12:40:39.9977516Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-10T12:40:39.9977521Z 
2025-01-10T12:40:39.9977949Z Packets:   ██████████████████▊                                                             9436/40000 [00:00<00:00, 35158.86it/s][A
2025-01-10T12:40:39.9977956Z 
2025-01-10T12:40:39.9978334Z Packets:   █████████████████████████▉                                                      12952/40000 [00:00<00:00, 34991.61it/s][A
2025-01-10T12:40:39.9978483Z 
2025-01-10T12:40:39.9978849Z Packets:   ████████████████████████████████▉                                               16440/40000 [00:00<00:00, 34546.62it/s][A
2025-01-10T12:40:39.9978856Z 
2025-01-10T12:40:39.9979247Z Packets:   ███████████████████████████████████████▊                                        19916/40000 [00:00<00:00, 34611.57it/s][A
2025-01-10T12:40:39.9979265Z 
2025-01-10T12:40:39.9979589Z Packets:   ██████████████████████████████████████████████▉                                 23444/40000 [00:00<00:00, 34820.22it/s][A
2025-01-10T12:40:39.9979630Z 
2025-01-10T12:40:39.9979957Z Packets:   █████████████████████████████████████████████████████▉                          26986/40000 [00:00<00:00, 35003.11it/s][A
2025-01-10T12:40:39.9979963Z 
2025-01-10T12:40:39.9980324Z Packets:   ████████████████████████████████████████████████████████████▉                   30486/40000 [00:00<00:00, 34989.89it/s][A
2025-01-10T12:40:39.9980329Z 
2025-01-10T12:40:39.9980745Z Packets:   ███████████████████████████████████████████████████████████████████▉            33985/40000 [00:00<00:00, 34908.99it/s][A
2025-01-10T12:40:39.9980751Z 
2025-01-10T12:40:39.9981176Z Packets:   ███████████████████████████████████████████████████████████████████████████     37539/40000 [00:01<00:00, 35098.48it/s][A
2025-01-10T12:40:39.9981526Z Iterations:                                                                                6/? [04:54<00:00, 68.52s/it] 
2025-01-10T12:40:39.9981532Z 
2025-01-10T12:40:39.9981897Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35098.48it/s][A
2025-01-10T12:40:39.9982109Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:39.9982716Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:39.9982977Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-10T12:40:39.9982999Z 
2025-01-10T12:40:39.9983251Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9983404Z attr = 'iterations_t_rad'
2025-01-10T12:40:39.9983725Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0ea17f0>
2025-01-10T12:40:39.9983740Z 
2025-01-10T12:40:39.9983933Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9984093Z         "attr",
2025-01-10T12:40:39.9984199Z         [
2025-01-10T12:40:39.9984348Z             "iterations_w",
2025-01-10T12:40:39.9984463Z             "iterations_t_rad",
2025-01-10T12:40:39.9984680Z             "iterations_electron_densities",
2025-01-10T12:40:39.9984816Z             "iterations_t_inner",
2025-01-10T12:40:39.9984956Z         ],
2025-01-10T12:40:39.9985060Z     )
2025-01-10T12:40:39.9985339Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9985639Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9985777Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9985929Z             actual = actual.value
2025-01-10T12:40:39.9986228Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9986451Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.9986656Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:39.9986661Z 
2025-01-10T12:40:39.9986911Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:39.9987059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9987297Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9987400Z     ???
2025-01-10T12:40:39.9987562Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9987567Z 
2025-01-10T12:40:39.9987763Z >   ???
2025-01-10T12:40:39.9987975Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9988136Z E   
2025-01-10T12:40:39.9988329Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:39.9988457Z E   [index]: [0, 1]
2025-01-10T12:40:39.9988632Z E   [left]:  [9967.488442185557, 10090.337237980311]
2025-01-10T12:40:39.9988963Z E   [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T12:40:39.9989165Z E   At positional index 1, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:39.9989170Z 
2025-01-10T12:40:39.9989328Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9989562Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-10T12:40:39.9989567Z 
2025-01-10T12:40:39.9989861Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9990058Z attr = 'iterations_electron_densities'
2025-01-10T12:40:39.9990356Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0c22c30>
2025-01-10T12:40:39.9990367Z 
2025-01-10T12:40:39.9990526Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9990631Z         "attr",
2025-01-10T12:40:39.9990800Z         [
2025-01-10T12:40:39.9990946Z             "iterations_w",
2025-01-10T12:40:39.9991096Z             "iterations_t_rad",
2025-01-10T12:40:39.9991239Z             "iterations_electron_densities",
2025-01-10T12:40:39.9991389Z             "iterations_t_inner",
2025-01-10T12:40:39.9991556Z         ],
2025-01-10T12:40:39.9991694Z     )
2025-01-10T12:40:39.9991960Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9992103Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9992259Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9992359Z             actual = actual.value
2025-01-10T12:40:39.9992595Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:39.9992752Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:39.9993002Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:39.9993007Z 
2025-01-10T12:40:39.9993157Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:39.9993320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9993606Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:39.9993717Z     ???
2025-01-10T12:40:39.9993890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:39.9993894Z 
2025-01-10T12:40:39.9993995Z >   ???
2025-01-10T12:40:39.9994220Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:39.9995131Z E   
2025-01-10T12:40:39.9995379Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:39.9995489Z E   [index]: [0, 1]
2025-01-10T12:40:39.9995662Z E   [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-10T12:40:39.9995795Z E   [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T12:40:39.9996326Z E   At positional index 1, first diff: 2880937482.0686474 != 2881024886.0882792
2025-01-10T12:40:39.9996333Z 
2025-01-10T12:40:39.9996511Z testing.pyx:173: AssertionError
2025-01-10T12:40:39.9996725Z _______________ test_plasma_state_iterations[iterations_t_inner] _______________
2025-01-10T12:40:39.9996736Z 
2025-01-10T12:40:39.9997039Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:39.9997157Z attr = 'iterations_t_inner'
2025-01-10T12:40:39.9997543Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d3f2f0>
2025-01-10T12:40:39.9997549Z 
2025-01-10T12:40:39.9997674Z     @pytest.mark.parametrize(
2025-01-10T12:40:39.9997825Z         "attr",
2025-01-10T12:40:39.9998039Z         [
2025-01-10T12:40:39.9998153Z             "iterations_w",
2025-01-10T12:40:39.9998306Z             "iterations_t_rad",
2025-01-10T12:40:39.9998438Z             "iterations_electron_densities",
2025-01-10T12:40:39.9998580Z             "iterations_t_inner",
2025-01-10T12:40:39.9998726Z         ],
2025-01-10T12:40:39.9998933Z     )
2025-01-10T12:40:39.9999162Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:39.9999340Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T12:40:39.9999587Z         if hasattr(actual, "value"):
2025-01-10T12:40:39.9999798Z             actual = actual.value
2025-01-10T12:40:39.9999938Z         actual = pd.DataFrame(actual)
2025-01-10T12:40:40.0000131Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0000340Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0000381Z 
2025-01-10T12:40:40.0000547Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T12:40:40.0000760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0000952Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0001098Z     ???
2025-01-10T12:40:40.0001248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0001253Z 
2025-01-10T12:40:40.0001408Z >   ???
2025-01-10T12:40:40.0001601Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.0001805Z E   
2025-01-10T12:40:40.0001996Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.0002141Z E   [index]: [0, 1]
2025-01-10T12:40:40.0002322Z E   [left]:  [9974.969233778693, 10755.649243810945]
2025-01-10T12:40:40.0002439Z E   [right]: [9974.969233778693, 10755.075718840653]
2025-01-10T12:40:40.0002733Z E   At positional index 1, first diff: 10755.649243810945 != 10755.075718840653
2025-01-10T12:40:40.0002739Z 
2025-01-10T12:40:40.0002863Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0003093Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-10T12:40:40.0003098Z 
2025-01-10T12:40:40.0003365Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0003484Z attr = 'nu_bar_estimator'
2025-01-10T12:40:40.0011257Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d49d90>
2025-01-10T12:40:40.0011290Z 
2025-01-10T12:40:40.0011426Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0011514Z         "attr",
2025-01-10T12:40:40.0011589Z         [
2025-01-10T12:40:40.0011684Z             "nu_bar_estimator",
2025-01-10T12:40:40.0011766Z             "j_estimator",
2025-01-10T12:40:40.0011849Z             "t_radiative",
2025-01-10T12:40:40.0011934Z             "dilution_factor",
2025-01-10T12:40:40.0012023Z             "output_nus",
2025-01-10T12:40:40.0012111Z             "output_energies",
2025-01-10T12:40:40.0012191Z         ],
2025-01-10T12:40:40.0012261Z     )
2025-01-10T12:40:40.0012462Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0012585Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0012850Z             actual = getattr(
2025-01-10T12:40:40.0013055Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0013135Z                 attr,
2025-01-10T12:40:40.0013214Z             )
2025-01-10T12:40:40.0013347Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0013513Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0013635Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0013727Z             actual = getattr(
2025-01-10T12:40:40.0013910Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0013993Z                 attr,
2025-01-10T12:40:40.0014065Z             )
2025-01-10T12:40:40.0014143Z         else:
2025-01-10T12:40:40.0014283Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0014361Z     
2025-01-10T12:40:40.0014456Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0014549Z             actual = actual.value
2025-01-10T12:40:40.0014640Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0014774Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0014965Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0015087Z 
2025-01-10T12:40:40.0015215Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0015342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0015498Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0015578Z     ???
2025-01-10T12:40:40.0015697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0015703Z 
2025-01-10T12:40:40.0015783Z >   ???
2025-01-10T12:40:40.0015883Z E   AssertionError: Series are different
2025-01-10T12:40:40.0015963Z E   
2025-01-10T12:40:40.0016269Z E   Series values are different (100.0 %)
2025-01-10T12:40:40.0016466Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0017669Z E   [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-10T12:40:40.0018871Z E   [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T12:40:40.0019085Z E   At positional index 0, first diff: 1.0165718020021351e+29 != 1.0202042777991753e+29
2025-01-10T12:40:40.0019090Z 
2025-01-10T12:40:40.0019189Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0019350Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-10T12:40:40.0019356Z 
2025-01-10T12:40:40.0019580Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0019663Z attr = 'j_estimator'
2025-01-10T12:40:40.0019938Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5ef00>
2025-01-10T12:40:40.0019943Z 
2025-01-10T12:40:40.0020038Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0020123Z         "attr",
2025-01-10T12:40:40.0020199Z         [
2025-01-10T12:40:40.0020287Z             "nu_bar_estimator",
2025-01-10T12:40:40.0020506Z             "j_estimator",
2025-01-10T12:40:40.0020585Z             "t_radiative",
2025-01-10T12:40:40.0020675Z             "dilution_factor",
2025-01-10T12:40:40.0020755Z             "output_nus",
2025-01-10T12:40:40.0020843Z             "output_energies",
2025-01-10T12:40:40.0020916Z         ],
2025-01-10T12:40:40.0021000Z     )
2025-01-10T12:40:40.0021184Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0021305Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0021386Z             actual = getattr(
2025-01-10T12:40:40.0021585Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0021662Z                 attr,
2025-01-10T12:40:40.0021741Z             )
2025-01-10T12:40:40.0021861Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0022017Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0022136Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0022223Z             actual = getattr(
2025-01-10T12:40:40.0022402Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0022481Z                 attr,
2025-01-10T12:40:40.0022560Z             )
2025-01-10T12:40:40.0022779Z         else:
2025-01-10T12:40:40.0022920Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0022995Z     
2025-01-10T12:40:40.0023093Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0023179Z             actual = actual.value
2025-01-10T12:40:40.0023276Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0023402Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0023588Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0023593Z 
2025-01-10T12:40:40.0023717Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0023843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0024003Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0024079Z     ???
2025-01-10T12:40:40.0024196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0024205Z 
2025-01-10T12:40:40.0024278Z >   ???
2025-01-10T12:40:40.0024388Z E   AssertionError: Series are different
2025-01-10T12:40:40.0024459Z E   
2025-01-10T12:40:40.0024563Z E   Series values are different (100.0 %)
2025-01-10T12:40:40.0024690Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0025653Z E   [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-10T12:40:40.0026723Z E   [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T12:40:40.0026904Z E   At positional index 0, first diff: 116384046125782.77 != 116635492761989.08
2025-01-10T12:40:40.0026909Z 
2025-01-10T12:40:40.0027006Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0027166Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-10T12:40:40.0027170Z 
2025-01-10T12:40:40.0027393Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0027483Z attr = 't_radiative'
2025-01-10T12:40:40.0027899Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5dfa0>
2025-01-10T12:40:40.0027905Z 
2025-01-10T12:40:40.0028006Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0028082Z         "attr",
2025-01-10T12:40:40.0028161Z         [
2025-01-10T12:40:40.0028244Z             "nu_bar_estimator",
2025-01-10T12:40:40.0028336Z             "j_estimator",
2025-01-10T12:40:40.0028415Z             "t_radiative",
2025-01-10T12:40:40.0028504Z             "dilution_factor",
2025-01-10T12:40:40.0028585Z             "output_nus",
2025-01-10T12:40:40.0028676Z             "output_energies",
2025-01-10T12:40:40.0028748Z         ],
2025-01-10T12:40:40.0028826Z     )
2025-01-10T12:40:40.0029007Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0029130Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0029218Z             actual = getattr(
2025-01-10T12:40:40.0029411Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0029498Z                 attr,
2025-01-10T12:40:40.0029569Z             )
2025-01-10T12:40:40.0029688Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0029834Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0030068Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0030149Z             actual = getattr(
2025-01-10T12:40:40.0030328Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0030405Z                 attr,
2025-01-10T12:40:40.0030486Z             )
2025-01-10T12:40:40.0030561Z         else:
2025-01-10T12:40:40.0030702Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0030784Z     
2025-01-10T12:40:40.0030874Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0030965Z             actual = actual.value
2025-01-10T12:40:40.0031054Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0031189Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0031370Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0031379Z 
2025-01-10T12:40:40.0031506Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0031624Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0031782Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0031855Z     ???
2025-01-10T12:40:40.0031970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0031974Z 
2025-01-10T12:40:40.0032046Z >   ???
2025-01-10T12:40:40.0032152Z E   AssertionError: Series are different
2025-01-10T12:40:40.0032230Z E   
2025-01-10T12:40:40.0032327Z E   Series values are different (100.0 %)
2025-01-10T12:40:40.0032461Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0033467Z E   [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-10T12:40:40.0034470Z E   [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T12:40:40.0034647Z E   At positional index 0, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:40.0034651Z 
2025-01-10T12:40:40.0034828Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0034996Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-10T12:40:40.0035000Z 
2025-01-10T12:40:40.0035214Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0035304Z attr = 'dilution_factor'
2025-01-10T12:40:40.0035575Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5d250>
2025-01-10T12:40:40.0035580Z 
2025-01-10T12:40:40.0035680Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0035754Z         "attr",
2025-01-10T12:40:40.0035835Z         [
2025-01-10T12:40:40.0035923Z             "nu_bar_estimator",
2025-01-10T12:40:40.0036002Z             "j_estimator",
2025-01-10T12:40:40.0036251Z             "t_radiative",
2025-01-10T12:40:40.0036349Z             "dilution_factor",
2025-01-10T12:40:40.0036442Z             "output_nus",
2025-01-10T12:40:40.0036525Z             "output_energies",
2025-01-10T12:40:40.0036603Z         ],
2025-01-10T12:40:40.0036684Z     )
2025-01-10T12:40:40.0036870Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0036985Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0037074Z             actual = getattr(
2025-01-10T12:40:40.0037265Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0037483Z                 attr,
2025-01-10T12:40:40.0037557Z             )
2025-01-10T12:40:40.0037680Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0037830Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0037950Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0038036Z             actual = getattr(
2025-01-10T12:40:40.0038206Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0038287Z                 attr,
2025-01-10T12:40:40.0038360Z             )
2025-01-10T12:40:40.0038449Z         else:
2025-01-10T12:40:40.0038581Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0038657Z     
2025-01-10T12:40:40.0038745Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0038842Z             actual = actual.value
2025-01-10T12:40:40.0038932Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0039064Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0039241Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0039246Z 
2025-01-10T12:40:40.0039369Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0039483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0039635Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0039707Z     ???
2025-01-10T12:40:40.0039823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0039831Z 
2025-01-10T12:40:40.0039904Z >   ???
2025-01-10T12:40:40.0040009Z E   AssertionError: Series are different
2025-01-10T12:40:40.0040079Z E   
2025-01-10T12:40:40.0040181Z E   Series values are different (95.0 %)
2025-01-10T12:40:40.0040312Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.0041405Z E   [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-10T12:40:40.0042481Z E   [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T12:40:40.0042784Z E   At positional index 0, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:40.0042795Z 
2025-01-10T12:40:40.0042886Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0043046Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-10T12:40:40.0043051Z 
2025-01-10T12:40:40.0043267Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0043356Z attr = 'output_nus'
2025-01-10T12:40:40.0043618Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d5ca40>
2025-01-10T12:40:40.0043623Z 
2025-01-10T12:40:40.0043721Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0043801Z         "attr",
2025-01-10T12:40:40.0043884Z         [
2025-01-10T12:40:40.0043973Z             "nu_bar_estimator",
2025-01-10T12:40:40.0044053Z             "j_estimator",
2025-01-10T12:40:40.0044141Z             "t_radiative",
2025-01-10T12:40:40.0044226Z             "dilution_factor",
2025-01-10T12:40:40.0044312Z             "output_nus",
2025-01-10T12:40:40.0044393Z             "output_energies",
2025-01-10T12:40:40.0044562Z         ],
2025-01-10T12:40:40.0044634Z     )
2025-01-10T12:40:40.0044818Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0044931Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0045018Z             actual = getattr(
2025-01-10T12:40:40.0045206Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0045287Z                 attr,
2025-01-10T12:40:40.0045359Z             )
2025-01-10T12:40:40.0045479Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0045629Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0045753Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0045840Z             actual = getattr(
2025-01-10T12:40:40.0046007Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0046191Z                 attr,
2025-01-10T12:40:40.0046273Z             )
2025-01-10T12:40:40.0046354Z         else:
2025-01-10T12:40:40.0046487Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0046569Z     
2025-01-10T12:40:40.0046658Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0046748Z             actual = actual.value
2025-01-10T12:40:40.0046836Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0046963Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0047137Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0047142Z 
2025-01-10T12:40:40.0047270Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0047388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0047533Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0047609Z     ???
2025-01-10T12:40:40.0047719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0047728Z 
2025-01-10T12:40:40.0047808Z >   ???
2025-01-10T12:40:40.0047909Z E   AssertionError: Series are different
2025-01-10T12:40:40.0047984Z E   
2025-01-10T12:40:40.0048083Z E   Series values are different (93.3075 %)
2025-01-10T12:40:40.0048450Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0053671Z E   [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-10T12:40:40.0059074Z E   [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T12:40:40.0059287Z E   At positional index 0, first diff: 1806608624563428.5 != 1806512041912368.8
2025-01-10T12:40:40.0059431Z 
2025-01-10T12:40:40.0059525Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0059701Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-10T12:40:40.0059706Z 
2025-01-10T12:40:40.0059924Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f22e0eb2de0>
2025-01-10T12:40:40.0060020Z attr = 'output_energies'
2025-01-10T12:40:40.0060289Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22e0d661b0>
2025-01-10T12:40:40.0060294Z 
2025-01-10T12:40:40.0060397Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0060473Z         "attr",
2025-01-10T12:40:40.0060550Z         [
2025-01-10T12:40:40.0060636Z             "nu_bar_estimator",
2025-01-10T12:40:40.0060723Z             "j_estimator",
2025-01-10T12:40:40.0060801Z             "t_radiative",
2025-01-10T12:40:40.0060883Z             "dilution_factor",
2025-01-10T12:40:40.0060964Z             "output_nus",
2025-01-10T12:40:40.0061053Z             "output_energies",
2025-01-10T12:40:40.0061138Z         ],
2025-01-10T12:40:40.0061210Z     )
2025-01-10T12:40:40.0061394Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T12:40:40.0061510Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T12:40:40.0061722Z             actual = getattr(
2025-01-10T12:40:40.0061918Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T12:40:40.0062002Z                 attr,
2025-01-10T12:40:40.0062075Z             )
2025-01-10T12:40:40.0062205Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T12:40:40.0062358Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T12:40:40.0062483Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T12:40:40.0062569Z             actual = getattr(
2025-01-10T12:40:40.0062740Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T12:40:40.0062829Z                 attr,
2025-01-10T12:40:40.0062902Z             )
2025-01-10T12:40:40.0062984Z         else:
2025-01-10T12:40:40.0063118Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T12:40:40.0063197Z     
2025-01-10T12:40:40.0063287Z         if hasattr(actual, "value"):
2025-01-10T12:40:40.0063388Z             actual = actual.value
2025-01-10T12:40:40.0063478Z         actual = pd.Series(actual)
2025-01-10T12:40:40.0063610Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T12:40:40.0063785Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T12:40:40.0063790Z 
2025-01-10T12:40:40.0063917Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T12:40:40.0064036Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0064182Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T12:40:40.0064261Z     ???
2025-01-10T12:40:40.0064373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0064378Z 
2025-01-10T12:40:40.0064456Z >   ???
2025-01-10T12:40:40.0064556Z E   AssertionError: Series are different
2025-01-10T12:40:40.0064633Z E   
2025-01-10T12:40:40.0064730Z E   Series values are different (5.69 %)
2025-01-10T12:40:40.0065099Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0071592Z E   [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.0078082Z E   [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.0078429Z E   At positional index 23, first diff: -2.49312723626409e-05 != -2.4320296346496788e-05
2025-01-10T12:40:40.0078435Z 
2025-01-10T12:40:40.0078533Z testing.pyx:173: AssertionError
2025-01-10T12:40:40.0078733Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-10T12:40:40.0078738Z 
2025-01-10T12:40:40.0079000Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f22f6da0650>
2025-01-10T12:40:40.0079211Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e80bb680>
2025-01-10T12:40:40.0079216Z 
2025-01-10T12:40:40.0079339Z     def test_spectrum_real_packets(self, simulation):
2025-01-10T12:40:40.0079494Z         transport_state = simulation.transport.transport_state
2025-01-10T12:40:40.0079794Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T12:40:40.0079873Z     
2025-01-10T12:40:40.0080060Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T12:40:40.0080191Z         result = solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0080367Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T12:40:40.0080469Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0080545Z     
2025-01-10T12:40:40.0080654Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0080733Z     
2025-01-10T12:40:40.0080821Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0080910Z             result,
2025-01-10T12:40:40.0080990Z             luminosity,
2025-01-10T12:40:40.0081069Z         )
2025-01-10T12:40:40.0081074Z 
2025-01-10T12:40:40.0081202Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-10T12:40:40.0081323Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0081670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0081770Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0081886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0081891Z 
2025-01-10T12:40:40.0082356Z args = (<function assert_allclose.<locals>.compare at 0x7f22e80fb380>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T12:40:40.0082472Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0082740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0082745Z 
2025-01-10T12:40:40.0082827Z     @wraps(func)
2025-01-10T12:40:40.0082912Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0083004Z         with self._recreate_cm():
2025-01-10T12:40:40.0083100Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0083196Z E           AssertionError: 
2025-01-10T12:40:40.0083315Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0083391Z E           
2025-01-10T12:40:40.0083499Z E           Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.0083641Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.0083763Z E           Max relative difference among violations: 1.
2025-01-10T12:40:40.0083933Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0084118Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0084292Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0084384Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0084389Z 
2025-01-10T12:40:40.0084592Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0084802Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-10T12:40:40.0084807Z 
2025-01-10T12:40:40.0085071Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f22f6da08f0>
2025-01-10T12:40:40.0085268Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e80bb680>
2025-01-10T12:40:40.0085273Z 
2025-01-10T12:40:40.0085427Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-10T12:40:40.0085574Z         transport_state = simulation.transport.transport_state
2025-01-10T12:40:40.0085768Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T12:40:40.0085844Z     
2025-01-10T12:40:40.0086036Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T12:40:40.0086296Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-10T12:40:40.0086509Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-10T12:40:40.0086752Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0086825Z     
2025-01-10T12:40:40.0086939Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0087010Z     
2025-01-10T12:40:40.0087105Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0087181Z             result,
2025-01-10T12:40:40.0087267Z             luminosity,
2025-01-10T12:40:40.0087343Z         )
2025-01-10T12:40:40.0087347Z 
2025-01-10T12:40:40.0087480Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-10T12:40:40.0087593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0087941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0088035Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0088151Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0088162Z 
2025-01-10T12:40:40.0088636Z args = (<function assert_allclose.<locals>.compare at 0x7f22b2d18040>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-10T12:40:40.0088742Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0089006Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0089011Z 
2025-01-10T12:40:40.0089088Z     @wraps(func)
2025-01-10T12:40:40.0089180Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0089266Z         with self._recreate_cm():
2025-01-10T12:40:40.0089365Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0089450Z E           AssertionError: 
2025-01-10T12:40:40.0089567Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0089648Z E           
2025-01-10T12:40:40.0089753Z E           Mismatched elements: 415 / 10000 (4.15%)
2025-01-10T12:40:40.0089903Z E           Max absolute difference among violations: 6.26425326e+37
2025-01-10T12:40:40.0090035Z E           Max relative difference among violations: 1.00484475
2025-01-10T12:40:40.0090209Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0090297Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0090472Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0090558Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0090562Z 
2025-01-10T12:40:40.0090769Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0091058Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-10T12:40:40.0091068Z 
2025-01-10T12:40:40.0091327Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f22f6da1850>
2025-01-10T12:40:40.0091541Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e80bb680>
2025-01-10T12:40:40.0091546Z 
2025-01-10T12:40:40.0091642Z     def test_solve(self, simulation):
2025-01-10T12:40:40.0091795Z         transport_state = simulation.transport.transport_state
2025-01-10T12:40:40.0091984Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T12:40:40.0092062Z     
2025-01-10T12:40:40.0092245Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T12:40:40.0092412Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-10T12:40:40.0092498Z             transport_state
2025-01-10T12:40:40.0092583Z         )
2025-01-10T12:40:40.0092764Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T12:40:40.0092889Z         expected_real = self.get_expected_data(key_real)
2025-01-10T12:40:40.0092966Z     
2025-01-10T12:40:40.0093099Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-10T12:40:40.0093256Z     
2025-01-10T12:40:40.0093343Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0093439Z             result_real.luminosity,
2025-01-10T12:40:40.0093522Z             luminosity_real,
2025-01-10T12:40:40.0093599Z         )
2025-01-10T12:40:40.0093603Z 
2025-01-10T12:40:40.0093730Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-10T12:40:40.0093845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0094173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0094275Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0094390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0094399Z 
2025-01-10T12:40:40.0094860Z args = (<function assert_allclose.<locals>.compare at 0x7f22b2d18540>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T12:40:40.0094980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0095238Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0095243Z 
2025-01-10T12:40:40.0095325Z     @wraps(func)
2025-01-10T12:40:40.0095410Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0095501Z         with self._recreate_cm():
2025-01-10T12:40:40.0095590Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0095685Z E           AssertionError: 
2025-01-10T12:40:40.0095798Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0095890Z E           
2025-01-10T12:40:40.0095999Z E           Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.0096357Z E           Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.0096496Z E           Max relative difference among violations: 1.
2025-01-10T12:40:40.0096669Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0096772Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0096941Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0097032Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0097037Z 
2025-01-10T12:40:40.0097243Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0097436Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-10T12:40:40.0097440Z 
2025-01-10T12:40:40.0097658Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f22f6da1820>
2025-01-10T12:40:40.0097979Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1ea86b0>
2025-01-10T12:40:40.0097984Z 
2025-01-10T12:40:40.0098103Z     def test_j_blue_estimators(self, simulation):
2025-01-10T12:40:40.0098257Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-10T12:40:40.0098372Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0098443Z     
2025-01-10T12:40:40.0098535Z >       npt.assert_allclose(
2025-01-10T12:40:40.0098756Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-10T12:40:40.0098846Z             expected.values,
2025-01-10T12:40:40.0098952Z         )
2025-01-10T12:40:40.0098957Z 
2025-01-10T12:40:40.0099058Z tardis/tests/test_tardis_full.py:70: 
2025-01-10T12:40:40.0099179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0099184Z 
2025-01-10T12:40:40.0099448Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4a97420>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0099535Z        [0., 0., .....,
2025-01-10T12:40:40.0099615Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0099698Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0099778Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0100180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0100185Z 
2025-01-10T12:40:40.0100263Z     @wraps(func)
2025-01-10T12:40:40.0100355Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0100442Z         with self._recreate_cm():
2025-01-10T12:40:40.0100538Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0100630Z E           AssertionError: 
2025-01-10T12:40:40.0100740Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0100820Z E           
2025-01-10T12:40:40.0100932Z E           Mismatched elements: 490652 / 584480 (83.9%)
2025-01-10T12:40:40.0101087Z E           Max absolute difference among violations: 5.32418652e-19
2025-01-10T12:40:40.0101218Z E           Max relative difference among violations: 8.19556014
2025-01-10T12:40:40.0101329Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101420Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101523Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0101634Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101731Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0101822Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0101833Z 
2025-01-10T12:40:40.0102040Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0102208Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0102480Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0102572Z 	
2025-01-10T12:40:40.0103141Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-10T12:40:40.0103331Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0103771Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-10T12:40:40.0103948Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0104432Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-10T12:40:40.0104685Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0105133Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0105409Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0105634Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0105802Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0105884Z 	
2025-01-10T12:40:40.0106039Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0106500Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0106574Z 	
2025-01-10T12:40:40.0106681Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T12:40:40.0106775Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T12:40:40.0106875Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0106993Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0107158Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0107233Z 	
2025-01-10T12:40:40.0107382Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0107547Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0107626Z 	
2025-01-10T12:40:40.0107740Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T12:40:40.0107830Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T12:40:40.0107923Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T12:40:40.0108011Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T12:40:40.0108228Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T12:40:40.0108339Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0108511Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0108583Z 	
2025-01-10T12:40:40.0108676Z 	Current t_inner = 9974.969 K
2025-01-10T12:40:40.0108795Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-10T12:40:40.0108905Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0109074Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0109148Z 	
2025-01-10T12:40:40.0109307Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0109468Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0109551Z 	
2025-01-10T12:40:40.0109645Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T12:40:40.0109743Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-10T12:40:40.0109831Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0109941Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0110104Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0110183Z 	
2025-01-10T12:40:40.0110329Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0110496Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0110567Z 	
2025-01-10T12:40:40.0110681Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0110770Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-10T12:40:40.0110862Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T12:40:40.0110956Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-10T12:40:40.0111042Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T12:40:40.0111160Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0111319Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0111402Z 	
2025-01-10T12:40:40.0111487Z 	Current t_inner = 10736.784 K
2025-01-10T12:40:40.0111610Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-10T12:40:40.0111718Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0111890Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0111964Z 	
2025-01-10T12:40:40.0112119Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0112280Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0112356Z 	
2025-01-10T12:40:40.0112452Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T12:40:40.0112548Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-10T12:40:40.0112647Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0112753Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0112928Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0113264Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T12:40:40.0113435Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0113507Z 	
2025-01-10T12:40:40.0113658Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0113821Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0113904Z 	
2025-01-10T12:40:40.0114011Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0114104Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-10T12:40:40.0114189Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T12:40:40.0114280Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-10T12:40:40.0114366Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-10T12:40:40.0114480Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0114648Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0114719Z 	
2025-01-10T12:40:40.0114811Z 	Current t_inner = 10718.886 K
2025-01-10T12:40:40.0114926Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-10T12:40:40.0115042Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0115205Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0115283Z 	
2025-01-10T12:40:40.0115435Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0115603Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0115782Z 	
2025-01-10T12:40:40.0115884Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T12:40:40.0115978Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-10T12:40:40.0116185Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0116298Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0116466Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0116682Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T12:40:40.0116848Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0116926Z 	
2025-01-10T12:40:40.0117072Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T12:40:40.0117242Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0117314Z 	
2025-01-10T12:40:40.0117427Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0117512Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-10T12:40:40.0117605Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T12:40:40.0117698Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T12:40:40.0117789Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-10T12:40:40.0117895Z  ([1mbase.py[0m:650)
2025-01-10T12:40:40.0118063Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0118134Z 	
2025-01-10T12:40:40.0118225Z 	Current t_inner = 10695.170 K
2025-01-10T12:40:40.0118342Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-10T12:40:40.0118454Z  ([1mbase.py[0m:652)
2025-01-10T12:40:40.0118618Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0118692Z 	
2025-01-10T12:40:40.0118800Z 	Simulation finished in 4 iterations 
2025-01-10T12:40:40.0118887Z 	Simulation took 13.02 s
2025-01-10T12:40:40.0118999Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0119164Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0119243Z 	
2025-01-10T12:40:40.0119396Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0119574Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0119646Z 	
2025-01-10T12:40:40.0119751Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T12:40:40.0119845Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-10T12:40:40.0119942Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0120049Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0120214Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T12:40:40.0120219Z 
2025-01-10T12:40:40.0120223Z 
2025-01-10T12:40:40.0120479Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-10T12:40:40.0120609Z 
2025-01-10T12:40:40.0120834Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-10T12:40:40.0120839Z 
2025-01-10T12:40:40.0121104Z Packets:   ████                                                                            10289/200000 [00:00<00:01, 102886.66it/s][A
2025-01-10T12:40:40.0121120Z 
2025-01-10T12:40:40.0121369Z Packets:   ████████▍                                                                       20961/200000 [00:00<00:01, 105136.58it/s][A
2025-01-10T12:40:40.0121380Z 
2025-01-10T12:40:40.0121633Z Packets:   ████████████▌                                                                   31536/200000 [00:00<00:01, 105412.13it/s][A
2025-01-10T12:40:40.0121639Z 
2025-01-10T12:40:40.0121901Z Packets:   ████████████████▉                                                               42311/200000 [00:00<00:01, 106332.39it/s][A
2025-01-10T12:40:40.0121906Z 
2025-01-10T12:40:40.0122180Z Packets:   █████████████████████▏                                                          52945/200000 [00:00<00:01, 106239.45it/s][A
2025-01-10T12:40:40.0122186Z 
2025-01-10T12:40:40.0122462Z Packets:   █████████████████████████▍                                                      63673/200000 [00:00<00:01, 106590.55it/s][A
2025-01-10T12:40:40.0122592Z 
2025-01-10T12:40:40.0122874Z Packets:   █████████████████████████████▊                                                  74401/200000 [00:00<00:01, 106814.55it/s][A
2025-01-10T12:40:40.0122880Z 
2025-01-10T12:40:40.0123160Z Packets:   ██████████████████████████████████                                              85083/200000 [00:00<00:01, 106700.78it/s][A
2025-01-10T12:40:40.0123165Z 
2025-01-10T12:40:40.0123459Z Packets:   ██████████████████████████████████████▎                                         95754/200000 [00:00<00:00, 106396.93it/s][A
2025-01-10T12:40:40.0123464Z 
2025-01-10T12:40:40.0123763Z Packets:   ██████████████████████████████████████████▌                                     106458/200000 [00:01<00:00, 106594.34it/s][A
2025-01-10T12:40:40.0123786Z 
2025-01-10T12:40:40.0124407Z Packets:   ██████████████████████████████████████████████▊                                 117144/200000 [00:01<00:00, 106674.83it/s][A
2025-01-10T12:40:40.0124416Z 
2025-01-10T12:40:40.0124760Z Packets:   ███████████████████████████████████████████████████                             127812/200000 [00:01<00:00, 106080.30it/s][A
2025-01-10T12:40:40.0124765Z 
2025-01-10T12:40:40.0125073Z Packets:   ███████████████████████████████████████████████████████▍                        138566/200000 [00:01<00:00, 106519.72it/s][A
2025-01-10T12:40:40.0125079Z 
2025-01-10T12:40:40.0125401Z Packets:   ███████████████████████████████████████████████████████████▋                    149219/200000 [00:01<00:00, 106380.29it/s][A
2025-01-10T12:40:40.0125406Z 
2025-01-10T12:40:40.0125731Z Packets:   ███████████████████████████████████████████████████████████████▉                159889/200000 [00:01<00:00, 106475.69it/s][A
2025-01-10T12:40:40.0125852Z 
2025-01-10T12:40:40.0126373Z Packets:   ████████████████████████████████████████████████████████████████████▏           170537/200000 [00:01<00:00, 106295.58it/s][A
2025-01-10T12:40:40.0126382Z 
2025-01-10T12:40:40.0126731Z Packets:   ████████████████████████████████████████████████████████████████████████▍       181213/200000 [00:01<00:00, 106433.88it/s][A
2025-01-10T12:40:40.0126754Z 
2025-01-10T12:40:40.0127125Z Packets:   ████████████████████████████████████████████████████████████████████████████▊   191892/200000 [00:01<00:00, 106540.48it/s][A
2025-01-10T12:40:40.0127362Z Iterations:                                                                                13/? [05:56<00:00, 12.39s/it]
2025-01-10T12:40:40.0127369Z 
2025-01-10T12:40:40.0127728Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 106540.48it/s][A
2025-01-10T12:40:40.0127752Z 
2025-01-10T12:40:40.0127991Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0127997Z 
2025-01-10T12:40:40.0128246Z Packets:   ████▎                                                                           10655/200000 [00:00<00:01, 105648.85it/s][A
2025-01-10T12:40:40.0128398Z 
2025-01-10T12:40:40.0128648Z Packets:   ████████▌                                                                       21380/200000 [00:00<00:01, 106586.13it/s][A
2025-01-10T12:40:40.0128659Z 
2025-01-10T12:40:40.0128912Z Packets:   ████████████▊                                                                   32039/200000 [00:00<00:01, 105355.81it/s][A
2025-01-10T12:40:40.0128918Z 
2025-01-10T12:40:40.0129177Z Packets:   █████████████████                                                               42622/200000 [00:00<00:01, 105540.24it/s][A
2025-01-10T12:40:40.0129183Z 
2025-01-10T12:40:40.0129445Z Packets:   █████████████████████▎                                                          53217/200000 [00:00<00:01, 105686.09it/s][A
2025-01-10T12:40:40.0129460Z 
2025-01-10T12:40:40.0129870Z Packets:   █████████████████████████▌                                                      63881/200000 [00:00<00:01, 106008.12it/s][A
2025-01-10T12:40:40.0129899Z 
2025-01-10T12:40:40.0130274Z Packets:   █████████████████████████████▊                                                  74483/200000 [00:00<00:01, 105996.04it/s][A
2025-01-10T12:40:40.0130280Z 
2025-01-10T12:40:40.0130565Z Packets:   ██████████████████████████████████                                              85084/200000 [00:00<00:01, 104706.82it/s][A
2025-01-10T12:40:40.0130571Z 
2025-01-10T12:40:40.0130861Z Packets:   ██████████████████████████████████████▏                                         95559/200000 [00:00<00:01, 102433.33it/s][A
2025-01-10T12:40:40.0130866Z 
2025-01-10T12:40:40.0131170Z Packets:   ██████████████████████████████████████████▍                                     106055/200000 [00:01<00:00, 103196.25it/s][A
2025-01-10T12:40:40.0131327Z 
2025-01-10T12:40:40.0131632Z Packets:   ██████████████████████████████████████████████▋                                 116765/200000 [00:01<00:00, 104370.74it/s][A
2025-01-10T12:40:40.0131639Z 
2025-01-10T12:40:40.0131949Z Packets:   ██████████████████████████████████████████████████▉                             127382/200000 [00:01<00:00, 104910.56it/s][A
2025-01-10T12:40:40.0131969Z 
2025-01-10T12:40:40.0132277Z Packets:   ███████████████████████████████████████████████████████▎                        138128/200000 [00:01<00:00, 105672.98it/s][A
2025-01-10T12:40:40.0132282Z 
2025-01-10T12:40:40.0132602Z Packets:   ███████████████████████████████████████████████████████████▌                    148783/200000 [00:01<00:00, 105933.26it/s][A
2025-01-10T12:40:40.0132608Z 
2025-01-10T12:40:40.0132926Z Packets:   ███████████████████████████████████████████████████████████████▊                159473/200000 [00:01<00:00, 106223.46it/s][A
2025-01-10T12:40:40.0132946Z 
2025-01-10T12:40:40.0133271Z Packets:   ████████████████████████████████████████████████████████████████████            170098/200000 [00:01<00:00, 106084.38it/s][A
2025-01-10T12:40:40.0133278Z 
2025-01-10T12:40:40.0133614Z Packets:   ████████████████████████████████████████████████████████████████████████▎       180807/200000 [00:01<00:00, 106382.69it/s][A
2025-01-10T12:40:40.0133709Z 
2025-01-10T12:40:40.0134043Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   191447/200000 [00:01<00:00, 105900.12it/s][A
2025-01-10T12:40:40.0134196Z Iterations:                                                                                14/? [05:59<00:00,  9.64s/it]
2025-01-10T12:40:40.0134201Z 
2025-01-10T12:40:40.0134542Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 105900.12it/s][A
2025-01-10T12:40:40.0134548Z 
2025-01-10T12:40:40.0134801Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0134806Z 
2025-01-10T12:40:40.0135051Z Packets:   ████▎                                                                           10711/200000 [00:00<00:01, 107102.19it/s][A
2025-01-10T12:40:40.0135068Z 
2025-01-10T12:40:40.0135312Z Packets:   ████████▌                                                                       21422/200000 [00:00<00:01, 106668.98it/s][A
2025-01-10T12:40:40.0135322Z 
2025-01-10T12:40:40.0135572Z Packets:   ████████████▊                                                                   32122/200000 [00:00<00:01, 106818.21it/s][A
2025-01-10T12:40:40.0135577Z 
2025-01-10T12:40:40.0135838Z Packets:   █████████████████▏                                                              42946/200000 [00:00<00:01, 107375.97it/s][A
2025-01-10T12:40:40.0135842Z 
2025-01-10T12:40:40.0136313Z Packets:   █████████████████████▌                                                          53780/200000 [00:00<00:01, 107722.41it/s][A
2025-01-10T12:40:40.0136478Z 
2025-01-10T12:40:40.0136784Z Packets:   █████████████████████████▊                                                      64553/200000 [00:00<00:01, 107011.26it/s][A
2025-01-10T12:40:40.0136790Z 
2025-01-10T12:40:40.0137081Z Packets:   ██████████████████████████████▏                                                 75349/200000 [00:00<00:01, 107317.21it/s][A
2025-01-10T12:40:40.0137086Z 
2025-01-10T12:40:40.0137367Z Packets:   ██████████████████████████████████▍                                             86206/200000 [00:00<00:01, 107712.21it/s][A
2025-01-10T12:40:40.0137372Z 
2025-01-10T12:40:40.0137665Z Packets:   ██████████████████████████████████████▊                                         96978/200000 [00:00<00:00, 107333.88it/s][A
2025-01-10T12:40:40.0137670Z 
2025-01-10T12:40:40.0137963Z Packets:   ███████████████████████████████████████████                                     107713/200000 [00:01<00:00, 107317.07it/s][A
2025-01-10T12:40:40.0137986Z 
2025-01-10T12:40:40.0138285Z Packets:   ███████████████████████████████████████████████▍                                118534/200000 [00:01<00:00, 107587.15it/s][A
2025-01-10T12:40:40.0138291Z 
2025-01-10T12:40:40.0138598Z Packets:   ███████████████████████████████████████████████████▋                            129294/200000 [00:01<00:00, 106920.90it/s][A
2025-01-10T12:40:40.0138720Z 
2025-01-10T12:40:40.0139032Z Packets:   ███████████████████████████████████████████████████████▉                        139988/200000 [00:01<00:00, 105916.29it/s][A
2025-01-10T12:40:40.0139038Z 
2025-01-10T12:40:40.0139358Z Packets:   ████████████████████████████████████████████████████████████▏                   150582/200000 [00:01<00:00, 105736.95it/s][A
2025-01-10T12:40:40.0139363Z 
2025-01-10T12:40:40.0139688Z Packets:   ████████████████████████████████████████████████████████████████▌               161294/200000 [00:01<00:00, 106149.12it/s][A
2025-01-10T12:40:40.0139709Z 
2025-01-10T12:40:40.0140033Z Packets:   ████████████████████████████████████████████████████████████████████▊           171911/200000 [00:01<00:00, 105279.59it/s][A
2025-01-10T12:40:40.0140038Z 
2025-01-10T12:40:40.0140375Z Packets:   █████████████████████████████████████████████████████████████████████████       182767/200000 [00:01<00:00, 106255.83it/s][A
2025-01-10T12:40:40.0140396Z 
2025-01-10T12:40:40.0140731Z Packets:   █████████████████████████████████████████████████████████████████████████████▍  193623/200000 [00:01<00:00, 106941.69it/s][A
2025-01-10T12:40:40.0140883Z Iterations:                                                                                15/? [06:02<00:00,  7.71s/it]
2025-01-10T12:40:40.0140888Z 
2025-01-10T12:40:40.0141238Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106941.69it/s][A
2025-01-10T12:40:40.0141243Z 
2025-01-10T12:40:40.0141487Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0141583Z 
2025-01-10T12:40:40.0141831Z Packets:   ████▎                                                                           10744/200000 [00:00<00:01, 107428.58it/s][A
2025-01-10T12:40:40.0141836Z 
2025-01-10T12:40:40.0142164Z Packets:   ████████▌                                                                       21487/200000 [00:00<00:01, 107329.08it/s][A
2025-01-10T12:40:40.0142174Z 
2025-01-10T12:40:40.0142425Z Packets:   ████████████▉                                                                   32285/200000 [00:00<00:01, 107622.80it/s][A
2025-01-10T12:40:40.0142430Z 
2025-01-10T12:40:40.0142693Z Packets:   █████████████████▏                                                              43100/200000 [00:00<00:01, 107827.04it/s][A
2025-01-10T12:40:40.0142699Z 
2025-01-10T12:40:40.0142959Z Packets:   █████████████████████▌                                                          53999/200000 [00:00<00:01, 108244.12it/s][A
2025-01-10T12:40:40.0142976Z 
2025-01-10T12:40:40.0143248Z Packets:   █████████████████████████▉                                                      64824/200000 [00:00<00:01, 108210.11it/s][A
2025-01-10T12:40:40.0143253Z 
2025-01-10T12:40:40.0143533Z Packets:   ██████████████████████████████▎                                                 75674/200000 [00:00<00:01, 108303.45it/s][A
2025-01-10T12:40:40.0143548Z 
2025-01-10T12:40:40.0143829Z Packets:   ██████████████████████████████████▌                                             86505/200000 [00:00<00:01, 108219.59it/s][A
2025-01-10T12:40:40.0143834Z 
2025-01-10T12:40:40.0144127Z Packets:   ██████████████████████████████████████▉                                         97352/200000 [00:00<00:00, 108295.67it/s][A
2025-01-10T12:40:40.0144132Z 
2025-01-10T12:40:40.0144428Z Packets:   ███████████████████████████████████████████▎                                    108182/200000 [00:01<00:00, 107988.47it/s][A
2025-01-10T12:40:40.0144451Z 
2025-01-10T12:40:40.0144751Z Packets:   ███████████████████████████████████████████████▌                                118982/200000 [00:01<00:00, 107730.94it/s][A
2025-01-10T12:40:40.0144756Z 
2025-01-10T12:40:40.0145062Z Packets:   ███████████████████████████████████████████████████▉                            129893/200000 [00:01<00:00, 108148.41it/s][A
2025-01-10T12:40:40.0145081Z 
2025-01-10T12:40:40.0145664Z Packets:   ████████████████████████████████████████████████████████▎                       140709/200000 [00:01<00:00, 107575.76it/s][A
2025-01-10T12:40:40.0145675Z 
2025-01-10T12:40:40.0146348Z Packets:   ████████████████████████████████████████████████████████████▌                   151468/200000 [00:01<00:00, 106116.32it/s][A
2025-01-10T12:40:40.0146356Z 
2025-01-10T12:40:40.0146694Z Packets:   ████████████████████████████████████████████████████████████████▉               162330/200000 [00:01<00:00, 106860.96it/s][A
2025-01-10T12:40:40.0146699Z 
2025-01-10T12:40:40.0147188Z Packets:   █████████████████████████████████████████████████████████████████████▎          173173/200000 [00:01<00:00, 107328.50it/s][A
2025-01-10T12:40:40.0147194Z 
2025-01-10T12:40:40.0147530Z Packets:   █████████████████████████████████████████████████████████████████████████▌      183989/200000 [00:01<00:00, 107575.47it/s][A
2025-01-10T12:40:40.0147657Z 
2025-01-10T12:40:40.0147995Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  194868/200000 [00:01<00:00, 107938.55it/s][A
2025-01-10T12:40:40.0148149Z Iterations:                                                                                16/? [06:05<00:00,  6.36s/it]
2025-01-10T12:40:40.0148155Z 
2025-01-10T12:40:40.0148503Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 107938.55it/s][A
2025-01-10T12:40:40.0148508Z 
2025-01-10T12:40:40.0148741Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-10T12:40:40.0148762Z 
2025-01-10T12:40:40.0149000Z Packets:   █▋                                                                              10796/500000 [00:00<00:15, 32185.15it/s][A
2025-01-10T12:40:40.0149006Z 
2025-01-10T12:40:40.0149241Z Packets:   ██▎                                                                             14186/500000 [00:00<00:14, 32695.24it/s][A
2025-01-10T12:40:40.0149262Z 
2025-01-10T12:40:40.0149495Z Packets:   ██▊                                                                             17671/500000 [00:00<00:14, 33337.06it/s][A
2025-01-10T12:40:40.0149500Z 
2025-01-10T12:40:40.0149737Z Packets:   ███▍                                                                            21129/500000 [00:00<00:14, 33707.51it/s][A
2025-01-10T12:40:40.0149742Z 
2025-01-10T12:40:40.0149976Z Packets:   ███▉                                                                            24550/500000 [00:00<00:14, 33855.41it/s][A
2025-01-10T12:40:40.0149988Z 
2025-01-10T12:40:40.0150230Z Packets:   ████▍                                                                           27970/500000 [00:00<00:13, 33923.15it/s][A
2025-01-10T12:40:40.0150236Z 
2025-01-10T12:40:40.0150477Z Packets:   █████                                                                           31386/500000 [00:00<00:13, 33956.59it/s][A
2025-01-10T12:40:40.0150490Z 
2025-01-10T12:40:40.0150727Z Packets:   █████▌                                                                          34798/500000 [00:01<00:13, 33915.55it/s][A
2025-01-10T12:40:40.0150732Z 
2025-01-10T12:40:40.0150973Z Packets:   ██████                                                                          38201/500000 [00:01<00:14, 32877.86it/s][A
2025-01-10T12:40:40.0150978Z 
2025-01-10T12:40:40.0151213Z Packets:   ██████▋                                                                         41646/500000 [00:01<00:13, 33337.33it/s][A
2025-01-10T12:40:40.0151226Z 
2025-01-10T12:40:40.0151558Z Packets:   ███████▏                                                                        45075/500000 [00:01<00:13, 33617.80it/s][A
2025-01-10T12:40:40.0151564Z 
2025-01-10T12:40:40.0151810Z Packets:   ███████▊                                                                        48528/500000 [00:01<00:13, 33888.11it/s][A
2025-01-10T12:40:40.0151895Z 
2025-01-10T12:40:40.0152136Z Packets:   ████████▎                                                                       52038/500000 [00:01<00:13, 34247.80it/s][A
2025-01-10T12:40:40.0152140Z 
2025-01-10T12:40:40.0152382Z Packets:   ████████▊                                                                       55468/500000 [00:01<00:13, 34065.29it/s][A
2025-01-10T12:40:40.0152387Z 
2025-01-10T12:40:40.0152635Z Packets:   █████████▍                                                                      58971/500000 [00:01<00:12, 34351.93it/s][A
2025-01-10T12:40:40.0152640Z 
2025-01-10T12:40:40.0152879Z Packets:   █████████▉                                                                      62409/500000 [00:01<00:12, 34242.22it/s][A
2025-01-10T12:40:40.0152895Z 
2025-01-10T12:40:40.0153142Z Packets:   ██████████▌                                                                     65859/500000 [00:01<00:12, 34316.87it/s][A
2025-01-10T12:40:40.0153148Z 
2025-01-10T12:40:40.0153399Z Packets:   ███████████                                                                     69293/500000 [00:02<00:12, 34179.94it/s][A
2025-01-10T12:40:40.0153412Z 
2025-01-10T12:40:40.0153656Z Packets:   ███████████▋                                                                    72713/500000 [00:02<00:12, 33403.90it/s][A
2025-01-10T12:40:40.0153662Z 
2025-01-10T12:40:40.0153914Z Packets:   ████████████▏                                                                   76199/500000 [00:02<00:12, 33829.84it/s][A
2025-01-10T12:40:40.0153919Z 
2025-01-10T12:40:40.0154163Z Packets:   ████████████▋                                                                   79608/500000 [00:02<00:12, 33904.74it/s][A
2025-01-10T12:40:40.0154179Z 
2025-01-10T12:40:40.0154431Z Packets:   █████████████▎                                                                  83068/500000 [00:02<00:12, 34109.81it/s][A
2025-01-10T12:40:40.0154436Z 
2025-01-10T12:40:40.0154689Z Packets:   █████████████▊                                                                  86482/500000 [00:02<00:12, 34071.14it/s][A
2025-01-10T12:40:40.0154703Z 
2025-01-10T12:40:40.0154950Z Packets:   ██████████████▍                                                                 89914/500000 [00:02<00:12, 34143.23it/s][A
2025-01-10T12:40:40.0154955Z 
2025-01-10T12:40:40.0155210Z Packets:   ██████████████▉                                                                 93330/500000 [00:02<00:11, 33968.13it/s][A
2025-01-10T12:40:40.0155216Z 
2025-01-10T12:40:40.0155467Z Packets:   ███████████████▍                                                                96728/500000 [00:02<00:11, 33825.11it/s][A
2025-01-10T12:40:40.0155599Z 
2025-01-10T12:40:40.0155876Z Packets:   ████████████████                                                                100112/500000 [00:02<00:11, 33783.58it/s][A
2025-01-10T12:40:40.0155881Z 
2025-01-10T12:40:40.0156252Z Packets:   ████████████████▌                                                               103491/500000 [00:03<00:11, 33544.93it/s][A
2025-01-10T12:40:40.0156270Z 
2025-01-10T12:40:40.0156526Z Packets:   █████████████████                                                               106847/500000 [00:03<00:12, 32481.99it/s][A
2025-01-10T12:40:40.0156532Z 
2025-01-10T12:40:40.0156791Z Packets:   █████████████████▋                                                              110270/500000 [00:03<00:11, 32990.80it/s][A
2025-01-10T12:40:40.0156797Z 
2025-01-10T12:40:40.0157054Z Packets:   ██████████████████▏                                                             113722/500000 [00:03<00:11, 33438.78it/s][A
2025-01-10T12:40:40.0157064Z 
2025-01-10T12:40:40.0157333Z Packets:   ██████████████████▋                                                             117143/500000 [00:03<00:11, 33662.54it/s][A
2025-01-10T12:40:40.0157338Z 
2025-01-10T12:40:40.0157599Z Packets:   ███████████████████▎                                                            120526/500000 [00:03<00:11, 33711.00it/s][A
2025-01-10T12:40:40.0157725Z 
2025-01-10T12:40:40.0157986Z Packets:   ███████████████████▊                                                            123990/500000 [00:03<00:11, 33985.24it/s][A
2025-01-10T12:40:40.0157992Z 
2025-01-10T12:40:40.0158254Z Packets:   ████████████████████▍                                                           127452/500000 [00:03<00:10, 34173.87it/s][A
2025-01-10T12:40:40.0158259Z 
2025-01-10T12:40:40.0158521Z Packets:   ████████████████████▉                                                           130872/500000 [00:03<00:10, 34067.36it/s][A
2025-01-10T12:40:40.0158526Z 
2025-01-10T12:40:40.0158788Z Packets:   █████████████████████▍                                                          134280/500000 [00:03<00:10, 34050.62it/s][A
2025-01-10T12:40:40.0158807Z 
2025-01-10T12:40:40.0159071Z Packets:   ██████████████████████                                                          137710/500000 [00:04<00:10, 34124.52it/s][A
2025-01-10T12:40:40.0159076Z 
2025-01-10T12:40:40.0159346Z Packets:   ██████████████████████▌                                                         141124/500000 [00:04<00:10, 32832.61it/s][A
2025-01-10T12:40:40.0159356Z 
2025-01-10T12:40:40.0159616Z Packets:   ███████████████████████▏                                                        144539/500000 [00:04<00:10, 33215.04it/s][A
2025-01-10T12:40:40.0159622Z 
2025-01-10T12:40:40.0159890Z Packets:   ███████████████████████▋                                                        147963/500000 [00:04<00:10, 33515.79it/s][A
2025-01-10T12:40:40.0159895Z 
2025-01-10T12:40:40.0160157Z Packets:   ████████████████████████▏                                                       151392/500000 [00:04<00:10, 33744.12it/s][A
2025-01-10T12:40:40.0160173Z 
2025-01-10T12:40:40.0160441Z Packets:   ████████████████████████▊                                                       154826/500000 [00:04<00:10, 33920.58it/s][A
2025-01-10T12:40:40.0160446Z 
2025-01-10T12:40:40.0160712Z Packets:   █████████████████████████▎                                                      158229/500000 [00:04<00:10, 33952.97it/s][A
2025-01-10T12:40:40.0160726Z 
2025-01-10T12:40:40.0160990Z Packets:   █████████████████████████▊                                                      161631/500000 [00:04<00:09, 33971.29it/s][A
2025-01-10T12:40:40.0160996Z 
2025-01-10T12:40:40.0161269Z Packets:   ██████████████████████████▍                                                     165030/500000 [00:04<00:09, 33886.76it/s][A
2025-01-10T12:40:40.0161274Z 
2025-01-10T12:40:40.0161547Z Packets:   ██████████████████████████▉                                                     168489/500000 [00:04<00:09, 34096.80it/s][A
2025-01-10T12:40:40.0161685Z 
2025-01-10T12:40:40.0161958Z Packets:   ███████████████████████████▌                                                    171969/500000 [00:05<00:09, 34304.05it/s][A
2025-01-10T12:40:40.0161964Z 
2025-01-10T12:40:40.0162239Z Packets:   ████████████████████████████                                                    175455/500000 [00:05<00:09, 34464.85it/s][A
2025-01-10T12:40:40.0162327Z 
2025-01-10T12:40:40.0162600Z Packets:   ████████████████████████████▌                                                   178903/500000 [00:05<00:09, 33319.06it/s][A
2025-01-10T12:40:40.0162605Z 
2025-01-10T12:40:40.0162883Z Packets:   █████████████████████████████▏                                                  182330/500000 [00:05<00:09, 33596.03it/s][A
2025-01-10T12:40:40.0162888Z 
2025-01-10T12:40:40.0163165Z Packets:   █████████████████████████████▋                                                  185764/500000 [00:05<00:09, 33815.23it/s][A
2025-01-10T12:40:40.0163170Z 
2025-01-10T12:40:40.0163453Z Packets:   ██████████████████████████████▎                                                 189187/500000 [00:05<00:09, 33929.44it/s][A
2025-01-10T12:40:40.0163459Z 
2025-01-10T12:40:40.0163738Z Packets:   ██████████████████████████████▊                                                 192585/500000 [00:05<00:09, 33943.76it/s][A
2025-01-10T12:40:40.0163754Z 
2025-01-10T12:40:40.0164031Z Packets:   ███████████████████████████████▎                                                195982/500000 [00:05<00:08, 33943.20it/s][A
2025-01-10T12:40:40.0164042Z 
2025-01-10T12:40:40.0164316Z Packets:   ███████████████████████████████▉                                                199445/500000 [00:05<00:08, 34144.96it/s][A
2025-01-10T12:40:40.0164321Z 
2025-01-10T12:40:40.0164600Z Packets:   ████████████████████████████████▍                                               202861/500000 [00:06<00:08, 34113.98it/s][A
2025-01-10T12:40:40.0164605Z 
2025-01-10T12:40:40.0164879Z Packets:   █████████████████████████████████                                               206319/500000 [00:06<00:08, 34251.77it/s][A
2025-01-10T12:40:40.0164896Z 
2025-01-10T12:40:40.0165177Z Packets:   █████████████████████████████████▌                                              209745/500000 [00:06<00:08, 34119.70it/s][A
2025-01-10T12:40:40.0165183Z 
2025-01-10T12:40:40.0165466Z Packets:   ██████████████████████████████████                                              213158/500000 [00:06<00:08, 33052.44it/s][A
2025-01-10T12:40:40.0165482Z 
2025-01-10T12:40:40.0165759Z Packets:   ██████████████████████████████████▋                                             216614/500000 [00:06<00:08, 33490.02it/s][A
2025-01-10T12:40:40.0165765Z 
2025-01-10T12:40:40.0166047Z Packets:   ███████████████████████████████████▏                                            220042/500000 [00:06<00:08, 33721.23it/s][A
2025-01-10T12:40:40.0166149Z 
2025-01-10T12:40:40.0166433Z Packets:   ███████████████████████████████████▊                                            223440/500000 [00:06<00:08, 33796.01it/s][A
2025-01-10T12:40:40.0166568Z 
2025-01-10T12:40:40.0166858Z Packets:   ████████████████████████████████████▎                                           226874/500000 [00:06<00:08, 33956.54it/s][A
2025-01-10T12:40:40.0166863Z 
2025-01-10T12:40:40.0167149Z Packets:   ████████████████████████████████████▊                                           230314/500000 [00:06<00:07, 34086.97it/s][A
2025-01-10T12:40:40.0167267Z 
2025-01-10T12:40:40.0167548Z Packets:   █████████████████████████████████████▍                                          233812/500000 [00:06<00:07, 34349.11it/s][A
2025-01-10T12:40:40.0167553Z 
2025-01-10T12:40:40.0167840Z Packets:   █████████████████████████████████████▉                                          237264/500000 [00:07<00:07, 34399.88it/s][A
2025-01-10T12:40:40.0167845Z 
2025-01-10T12:40:40.0168129Z Packets:   ██████████████████████████████████████▌                                         240705/500000 [00:07<00:07, 34243.63it/s][A
2025-01-10T12:40:40.0168151Z 
2025-01-10T12:40:40.0168432Z Packets:   ███████████████████████████████████████                                         244177/500000 [00:07<00:07, 34383.49it/s][A
2025-01-10T12:40:40.0168437Z 
2025-01-10T12:40:40.0168728Z Packets:   ███████████████████████████████████████▌                                        247616/500000 [00:07<00:07, 33132.71it/s][A
2025-01-10T12:40:40.0168746Z 
2025-01-10T12:40:40.0169029Z Packets:   ████████████████████████████████████████▏                                       251073/500000 [00:07<00:07, 33549.28it/s][A
2025-01-10T12:40:40.0169034Z 
2025-01-10T12:40:40.0169323Z Packets:   ████████████████████████████████████████▋                                       254550/500000 [00:07<00:07, 33907.02it/s][A
2025-01-10T12:40:40.0169328Z 
2025-01-10T12:40:40.0169626Z Packets:   █████████████████████████████████████████▎                                      257948/500000 [00:07<00:07, 33855.37it/s][A
2025-01-10T12:40:40.0169631Z 
2025-01-10T12:40:40.0169935Z Packets:   █████████████████████████████████████████▊                                      261452/500000 [00:07<00:06, 34205.66it/s][A
2025-01-10T12:40:40.0169940Z 
2025-01-10T12:40:40.0170238Z Packets:   ██████████████████████████████████████████▍                                     264877/500000 [00:07<00:06, 34181.88it/s][A
2025-01-10T12:40:40.0170255Z 
2025-01-10T12:40:40.0170545Z Packets:   ██████████████████████████████████████████▉                                     268303/500000 [00:07<00:06, 34200.44it/s][A
2025-01-10T12:40:40.0170555Z 
2025-01-10T12:40:40.0170845Z Packets:   ███████████████████████████████████████████▍                                    271728/500000 [00:08<00:06, 34209.35it/s][A
2025-01-10T12:40:40.0170850Z 
2025-01-10T12:40:40.0171145Z Packets:   ████████████████████████████████████████████                                    275151/500000 [00:08<00:06, 34068.09it/s][A
2025-01-10T12:40:40.0171150Z 
2025-01-10T12:40:40.0171442Z Packets:   ████████████████████████████████████████████▌                                   278578/500000 [00:08<00:06, 34128.11it/s][A
2025-01-10T12:40:40.0171543Z 
2025-01-10T12:40:40.0171841Z Packets:   █████████████████████████████████████████████                                   281992/500000 [00:08<00:06, 32933.65it/s][A
2025-01-10T12:40:40.0171846Z 
2025-01-10T12:40:40.0172145Z Packets:   █████████████████████████████████████████████▋                                  285473/500000 [00:08<00:06, 33480.50it/s][A
2025-01-10T12:40:40.0172254Z 
2025-01-10T12:40:40.0172548Z Packets:   ██████████████████████████████████████████████▏                                 288923/500000 [00:08<00:06, 33779.91it/s][A
2025-01-10T12:40:40.0172554Z 
2025-01-10T12:40:40.0172849Z Packets:   ██████████████████████████████████████████████▊                                 292386/500000 [00:08<00:06, 34027.77it/s][A
2025-01-10T12:40:40.0172854Z 
2025-01-10T12:40:40.0173149Z Packets:   ███████████████████████████████████████████████▎                                295871/500000 [00:08<00:05, 34270.27it/s][A
2025-01-10T12:40:40.0173173Z 
2025-01-10T12:40:40.0173465Z Packets:   ███████████████████████████████████████████████▉                                299353/500000 [00:08<00:05, 34423.80it/s][A
2025-01-10T12:40:40.0173471Z 
2025-01-10T12:40:40.0173773Z Packets:   ████████████████████████████████████████████████▍                               302798/500000 [00:08<00:05, 34200.06it/s][A
2025-01-10T12:40:40.0173791Z 
2025-01-10T12:40:40.0174089Z Packets:   █████████████████████████████████████████████████                               306307/500000 [00:09<00:05, 34464.11it/s][A
2025-01-10T12:40:40.0174094Z 
2025-01-10T12:40:40.0174396Z Packets:   █████████████████████████████████████████████████▌                              309757/500000 [00:09<00:05, 34474.80it/s][A
2025-01-10T12:40:40.0174401Z 
2025-01-10T12:40:40.0174704Z Packets:   ██████████████████████████████████████████████████                              313260/500000 [00:09<00:05, 34639.68it/s][A
2025-01-10T12:40:40.0174798Z 
2025-01-10T12:40:40.0175103Z Packets:   ██████████████████████████████████████████████████▋                             316725/500000 [00:09<00:05, 33035.61it/s][A
2025-01-10T12:40:40.0175108Z 
2025-01-10T12:40:40.0175412Z Packets:   ███████████████████████████████████████████████████▏                            320198/500000 [00:09<00:05, 33524.99it/s][A
2025-01-10T12:40:40.0175431Z 
2025-01-10T12:40:40.0175732Z Packets:   ███████████████████████████████████████████████████▊                            323675/500000 [00:09<00:05, 33888.47it/s][A
2025-01-10T12:40:40.0175742Z 
2025-01-10T12:40:40.0176045Z Packets:   ████████████████████████████████████████████████████▎                           327110/500000 [00:09<00:05, 34022.85it/s][A
2025-01-10T12:40:40.0176050Z 
2025-01-10T12:40:40.0176587Z Packets:   ████████████████████████████████████████████████████▉                           330591/500000 [00:09<00:04, 34254.65it/s][A
2025-01-10T12:40:40.0176594Z 
2025-01-10T12:40:40.0176896Z Packets:   █████████████████████████████████████████████████████▍                          334091/500000 [00:09<00:04, 34473.39it/s][A
2025-01-10T12:40:40.0176917Z 
2025-01-10T12:40:40.0177226Z Packets:   ██████████████████████████████████████████████████████                          337568/500000 [00:09<00:04, 34559.92it/s][A
2025-01-10T12:40:40.0177367Z 
2025-01-10T12:40:40.0177679Z Packets:   ██████████████████████████████████████████████████████▌                         341082/500000 [00:10<00:04, 34731.37it/s][A
2025-01-10T12:40:40.0177685Z 
2025-01-10T12:40:40.0177987Z Packets:   ███████████████████████████████████████████████████████▏                        344589/500000 [00:10<00:04, 34829.90it/s][A
2025-01-10T12:40:40.0177992Z 
2025-01-10T12:40:40.0178305Z Packets:   ███████████████████████████████████████████████████████▋                        348074/500000 [00:10<00:04, 34768.73it/s][A
2025-01-10T12:40:40.0178310Z 
2025-01-10T12:40:40.0178613Z Packets:   ████████████████████████████████████████████████████████▏                       351552/500000 [00:10<00:04, 32907.35it/s][A
2025-01-10T12:40:40.0178632Z 
2025-01-10T12:40:40.0178947Z Packets:   ████████████████████████████████████████████████████████▊                       354990/500000 [00:10<00:04, 33331.23it/s][A
2025-01-10T12:40:40.0178953Z 
2025-01-10T12:40:40.0179266Z Packets:   █████████████████████████████████████████████████████████▎                      358466/500000 [00:10<00:04, 33745.71it/s][A
2025-01-10T12:40:40.0179285Z 
2025-01-10T12:40:40.0179592Z Packets:   █████████████████████████████████████████████████████████▉                      361937/500000 [00:10<00:04, 34022.37it/s][A
2025-01-10T12:40:40.0179598Z 
2025-01-10T12:40:40.0179913Z Packets:   ██████████████████████████████████████████████████████████▍                     365372/500000 [00:10<00:03, 34119.02it/s][A
2025-01-10T12:40:40.0179918Z 
2025-01-10T12:40:40.0180226Z Packets:   ███████████████████████████████████████████████████████████                     368898/500000 [00:10<00:03, 34457.73it/s][A
2025-01-10T12:40:40.0180358Z 
2025-01-10T12:40:40.0180669Z Packets:   ███████████████████████████████████████████████████████████▌                    372412/500000 [00:10<00:03, 34659.69it/s][A
2025-01-10T12:40:40.0180674Z 
2025-01-10T12:40:40.0180987Z Packets:   ████████████████████████████████████████████████████████████▏                   375913/500000 [00:11<00:03, 34759.65it/s][A
2025-01-10T12:40:40.0181079Z 
2025-01-10T12:40:40.0181391Z Packets:   ████████████████████████████████████████████████████████████▋                   379392/500000 [00:11<00:03, 34689.47it/s][A
2025-01-10T12:40:40.0181396Z 
2025-01-10T12:40:40.0181715Z Packets:   █████████████████████████████████████████████████████████████▎                  382863/500000 [00:11<00:03, 34629.58it/s][A
2025-01-10T12:40:40.0181720Z 
2025-01-10T12:40:40.0182039Z Packets:   █████████████████████████████████████████████████████████████▊                  386328/500000 [00:11<00:03, 33516.01it/s][A
2025-01-10T12:40:40.0182059Z 
2025-01-10T12:40:40.0182374Z Packets:   ██████████████████████████████████████████████████████████████▎                 389792/500000 [00:11<00:03, 33844.20it/s][A
2025-01-10T12:40:40.0182379Z 
2025-01-10T12:40:40.0182693Z Packets:   ██████████████████████████████████████████████████████████████▉                 393275/500000 [00:11<00:03, 34131.39it/s][A
2025-01-10T12:40:40.0182714Z 
2025-01-10T12:40:40.0183028Z Packets:   ███████████████████████████████████████████████████████████████▍                396815/500000 [00:11<00:02, 34506.57it/s][A
2025-01-10T12:40:40.0183040Z 
2025-01-10T12:40:40.0183352Z Packets:   ████████████████████████████████████████████████████████████████                400300/500000 [00:11<00:02, 34607.87it/s][A
2025-01-10T12:40:40.0183357Z 
2025-01-10T12:40:40.0183682Z Packets:   ████████████████████████████████████████████████████████████████▌               403792/500000 [00:11<00:02, 34699.02it/s][A
2025-01-10T12:40:40.0183687Z 
2025-01-10T12:40:40.0184001Z Packets:   █████████████████████████████████████████████████████████████████▏              407278/500000 [00:11<00:02, 34743.67it/s][A
2025-01-10T12:40:40.0184097Z 
2025-01-10T12:40:40.0184422Z Packets:   █████████████████████████████████████████████████████████████████▋              410754/500000 [00:12<00:02, 34489.03it/s][A
2025-01-10T12:40:40.0184445Z 
2025-01-10T12:40:40.0184769Z Packets:   ██████████████████████████████████████████████████████████████████▎             414233/500000 [00:12<00:02, 34578.48it/s][A
2025-01-10T12:40:40.0184775Z 
2025-01-10T12:40:40.0185089Z Packets:   ██████████████████████████████████████████████████████████████████▊             417746/500000 [00:12<00:02, 34741.40it/s][A
2025-01-10T12:40:40.0185095Z 
2025-01-10T12:40:40.0185420Z Packets:   ███████████████████████████████████████████████████████████████████▍            421221/500000 [00:12<00:02, 34558.44it/s][A
2025-01-10T12:40:40.0185425Z 
2025-01-10T12:40:40.0185746Z Packets:   ███████████████████████████████████████████████████████████████████▉            424678/500000 [00:12<00:02, 33271.94it/s][A
2025-01-10T12:40:40.0185774Z 
2025-01-10T12:40:40.0186294Z Packets:   ████████████████████████████████████████████████████████████████████▍           428096/500000 [00:12<00:02, 33533.11it/s][A
2025-01-10T12:40:40.0186300Z 
2025-01-10T12:40:40.0186632Z Packets:   █████████████████████████████████████████████████████████████████████           431567/500000 [00:12<00:02, 33875.81it/s][A
2025-01-10T12:40:40.0186769Z 
2025-01-10T12:40:40.0187094Z Packets:   █████████████████████████████████████████████████████████████████████▌          435102/500000 [00:12<00:01, 34311.15it/s][A
2025-01-10T12:40:40.0187100Z 
2025-01-10T12:40:40.0187424Z Packets:   ██████████████████████████████████████████████████████████████████████▏         438587/500000 [00:12<00:01, 34469.45it/s][A
2025-01-10T12:40:40.0187430Z 
2025-01-10T12:40:40.0187759Z Packets:   ██████████████████████████████████████████████████████████████████████▋         442108/500000 [00:13<00:01, 34687.09it/s][A
2025-01-10T12:40:40.0187782Z 
2025-01-10T12:40:40.0188108Z Packets:   ███████████████████████████████████████████████████████████████████████▎        445580/500000 [00:13<00:01, 34661.88it/s][A
2025-01-10T12:40:40.0188113Z 
2025-01-10T12:40:40.0188439Z Packets:   ███████████████████████████████████████████████████████████████████████▊        449049/500000 [00:13<00:01, 34583.29it/s][A
2025-01-10T12:40:40.0188461Z 
2025-01-10T12:40:40.0188787Z Packets:   ████████████████████████████████████████████████████████████████████████▍       452568/500000 [00:13<00:01, 34764.30it/s][A
2025-01-10T12:40:40.0188797Z 
2025-01-10T12:40:40.0189121Z Packets:   ████████████████████████████████████████████████████████████████████████▉       456103/500000 [00:13<00:01, 34937.97it/s][A
2025-01-10T12:40:40.0189126Z 
2025-01-10T12:40:40.0189458Z Packets:   █████████████████████████████████████████████████████████████████████████▌      459598/500000 [00:13<00:01, 33724.00it/s][A
2025-01-10T12:40:40.0189585Z 
2025-01-10T12:40:40.0189912Z Packets:   ██████████████████████████████████████████████████████████████████████████      463063/500000 [00:13<00:01, 33993.36it/s][A
2025-01-10T12:40:40.0189917Z 
2025-01-10T12:40:40.0190247Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     466579/500000 [00:13<00:00, 34335.71it/s][A
2025-01-10T12:40:40.0190361Z 
2025-01-10T12:40:40.0190693Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    470123/500000 [00:13<00:00, 34656.94it/s][A
2025-01-10T12:40:40.0190698Z 
2025-01-10T12:40:40.0191027Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    473594/500000 [00:13<00:00, 34566.64it/s][A
2025-01-10T12:40:40.0191032Z 
2025-01-10T12:40:40.0191364Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   477054/500000 [00:14<00:00, 34570.91it/s][A
2025-01-10T12:40:40.0191369Z 
2025-01-10T12:40:40.0191699Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   480554/500000 [00:14<00:00, 34698.11it/s][A
2025-01-10T12:40:40.0191724Z 
2025-01-10T12:40:40.0192067Z Packets:   █████████████████████████████████████████████████████████████████████████████▍  484046/500000 [00:14<00:00, 34763.53it/s][A
2025-01-10T12:40:40.0192089Z 
2025-01-10T12:40:40.0192424Z Packets:   ██████████████████████████████████████████████████████████████████████████████  487524/500000 [00:14<00:00, 34659.13it/s][A
2025-01-10T12:40:40.0192429Z 
2025-01-10T12:40:40.0192758Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 491038/500000 [00:14<00:00, 34800.62it/s][A
2025-01-10T12:40:40.0192763Z 
2025-01-10T12:40:40.0193094Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 494519/500000 [00:14<00:00, 33061.27it/s][A
2025-01-10T12:40:40.0193099Z 
2025-01-10T12:40:40.0193429Z Packets:   ███████████████████████████████████████████████████████████████████████████████▋498039/500000 [00:14<00:00, 33676.97it/s][A
2025-01-10T12:40:40.0193683Z Iterations:                                                                                17/? [06:22<00:00,  9.53s/it]
2025-01-10T12:40:40.0193688Z 
2025-01-10T12:40:40.0194030Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 33676.97it/s][A
2025-01-10T12:40:40.0194286Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0194455Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-10T12:40:40.0194803Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-10T12:40:40.0195188Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-10T12:40:40.0195624Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-10T12:40:40.0196317Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0196568Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0196684Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0196783Z 	Starting iteration 1 of 5
2025-01-10T12:40:40.0196891Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0196993Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T12:40:40.0197087Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T12:40:40.0197185Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0197190Z 
2025-01-10T12:40:40.0197303Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0197390Z 	Plasma stratification:
2025-01-10T12:40:40.0197509Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0197618Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T12:40:40.0197714Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T12:40:40.0197799Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T12:40:40.0197894Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T12:40:40.0197984Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T12:40:40.0197989Z 
2025-01-10T12:40:40.0198098Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0198187Z 	Current t_inner = 9974.969 K
2025-01-10T12:40:40.0198313Z 	Expected t_inner for next iteration = 10736.784 K
2025-01-10T12:40:40.0198318Z 
2025-01-10T12:40:40.0198420Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0198515Z 	Starting iteration 2 of 5
2025-01-10T12:40:40.0198624Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0198716Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T12:40:40.0198988Z 	Luminosity absorbed  = 3.625e+42 erg / s
2025-01-10T12:40:40.0199082Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0199086Z 
2025-01-10T12:40:40.0199196Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0199282Z 	Plasma stratification:
2025-01-10T12:40:40.0199393Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0199511Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0199606Z 	0         1.01e+04 K  1.05e+04 K  0.449    0.48
2025-01-10T12:40:40.0199693Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T12:40:40.0199787Z 	10           1e+04 K  1.04e+04 K  0.129   0.126
2025-01-10T12:40:40.0199873Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T12:40:40.0199883Z 
2025-01-10T12:40:40.0199986Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0200077Z 	Current t_inner = 10736.784 K
2025-01-10T12:40:40.0200192Z 	Expected t_inner for next iteration = 10718.886 K
2025-01-10T12:40:40.0200203Z 
2025-01-10T12:40:40.0200313Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0200399Z 	Starting iteration 3 of 5
2025-01-10T12:40:40.0200517Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0200608Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T12:40:40.0200708Z 	Luminosity absorbed  = 3.508e+42 erg / s
2025-01-10T12:40:40.0200922Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0200927Z 
2025-01-10T12:40:40.0201159Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-10T12:40:40.0201266Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0201367Z 	Plasma stratification:
2025-01-10T12:40:40.0201479Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0201585Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0201677Z 	0         1.05e+04 K  1.07e+04 K   0.48    0.49
2025-01-10T12:40:40.0201762Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T12:40:40.0201857Z 	10        1.04e+04 K  1.07e+04 K  0.126   0.124
2025-01-10T12:40:40.0201942Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0923
2025-01-10T12:40:40.0201946Z 
2025-01-10T12:40:40.0202057Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0202143Z 	Current t_inner = 10718.886 K
2025-01-10T12:40:40.0202263Z 	Expected t_inner for next iteration = 10695.170 K
2025-01-10T12:40:40.0202275Z 
2025-01-10T12:40:40.0202378Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0202472Z 	Starting iteration 4 of 5
2025-01-10T12:40:40.0202577Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0202684Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T12:40:40.0202783Z 	Luminosity absorbed  = 3.430e+42 erg / s
2025-01-10T12:40:40.0202878Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0202882Z 
2025-01-10T12:40:40.0203099Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-10T12:40:40.0203206Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T12:40:40.0203303Z 	Plasma stratification:
2025-01-10T12:40:40.0203406Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T12:40:40.0203517Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T12:40:40.0203604Z 	0         1.07e+04 K  1.09e+04 K   0.49   0.488
2025-01-10T12:40:40.0203695Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T12:40:40.0203786Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T12:40:40.0203879Z 	15        1.04e+04 K  1.05e+04 K 0.0923  0.0906
2025-01-10T12:40:40.0203883Z 
2025-01-10T12:40:40.0203991Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T12:40:40.0204078Z 	Current t_inner = 10695.170 K
2025-01-10T12:40:40.0204196Z 	Expected t_inner for next iteration = 10682.561 K
2025-01-10T12:40:40.0204200Z 
2025-01-10T12:40:40.0204303Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0204404Z 	Simulation finished in 4 iterations 
2025-01-10T12:40:40.0204490Z 	Simulation took 13.02 s
2025-01-10T12:40:40.0204600Z 
2025-01-10T12:40:40.0204711Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0204796Z 	Starting iteration 5 of 5
2025-01-10T12:40:40.0204904Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0204994Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T12:40:40.0205092Z 	Luminosity absorbed  = 3.442e+42 erg / s
2025-01-10T12:40:40.0205193Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0205371Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-10T12:40:40.0205376Z 
2025-01-10T12:40:40.0205597Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f22f6da1b50>
2025-01-10T12:40:40.0205794Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1ea86b0>
2025-01-10T12:40:40.0205800Z 
2025-01-10T12:40:40.0205903Z     def test_spectrum(self, simulation):
2025-01-10T12:40:40.0206174Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T12:40:40.0206289Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0206367Z     
2025-01-10T12:40:40.0206484Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0206555Z     
2025-01-10T12:40:40.0206651Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0206820Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-10T12:40:40.0207025Z             luminosity,
2025-01-10T12:40:40.0207104Z         )
2025-01-10T12:40:40.0207109Z 
2025-01-10T12:40:40.0207204Z tardis/tests/test_tardis_full.py:81: 
2025-01-10T12:40:40.0207327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0207667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0207767Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0207881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0207886Z 
2025-01-10T12:40:40.0208365Z args = (<function assert_allclose.<locals>.compare at 0x7f22e39e4040>, array([1.47106443e+39, 1.69486782e+39, 1.38661095e+39,...), array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, ...,
2025-01-10T12:40:40.0208479Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0208741Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0208751Z 
2025-01-10T12:40:40.0208835Z     @wraps(func)
2025-01-10T12:40:40.0208921Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0209014Z         with self._recreate_cm():
2025-01-10T12:40:40.0209103Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0209195Z E           AssertionError: 
2025-01-10T12:40:40.0209306Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0209387Z E           
2025-01-10T12:40:40.0209491Z E           Mismatched elements: 4783 / 10000 (47.8%)
2025-01-10T12:40:40.0209642Z E           Max absolute difference among violations: 1.1803545e+39
2025-01-10T12:40:40.0209779Z E           Max relative difference among violations: 4.31231392
2025-01-10T12:40:40.0209958Z E            ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0210053Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0210229Z E            DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0210322Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0210327Z 
2025-01-10T12:40:40.0210530Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0210717Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-10T12:40:40.0210722Z 
2025-01-10T12:40:40.0210936Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f22f6da1d90>
2025-01-10T12:40:40.0211139Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1ea86b0>
2025-01-10T12:40:40.0211285Z 
2025-01-10T12:40:40.0211406Z     def test_virtual_spectrum(self, simulation):
2025-01-10T12:40:40.0211594Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-10T12:40:40.0211700Z         expected = self.get_expected_data(key)
2025-01-10T12:40:40.0211771Z     
2025-01-10T12:40:40.0211890Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0211963Z     
2025-01-10T12:40:40.0212055Z >       assert_quantity_allclose(
2025-01-10T12:40:40.0212228Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-10T12:40:40.0212314Z             luminosity,
2025-01-10T12:40:40.0212390Z         )
2025-01-10T12:40:40.0212394Z 
2025-01-10T12:40:40.0212495Z tardis/tests/test_tardis_full.py:92: 
2025-01-10T12:40:40.0212606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0212945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0213048Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0213157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0213161Z 
2025-01-10T12:40:40.0213628Z args = (<function assert_allclose.<locals>.compare at 0x7f22e39d1940>, array([1.43474324e+39, 1.36762963e+39, 1.39613134e+39,...), array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, ...,
2025-01-10T12:40:40.0213816Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0214081Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0214087Z 
2025-01-10T12:40:40.0214164Z     @wraps(func)
2025-01-10T12:40:40.0214254Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0214340Z         with self._recreate_cm():
2025-01-10T12:40:40.0214435Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0214526Z E           AssertionError: 
2025-01-10T12:40:40.0214637Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0214717Z E           
2025-01-10T12:40:40.0214817Z E           Mismatched elements: 5925 / 10000 (59.2%)
2025-01-10T12:40:40.0214963Z E           Max absolute difference among violations: 3.03195861e+38
2025-01-10T12:40:40.0215096Z E           Max relative difference among violations: 21041.9645284
2025-01-10T12:40:40.0215277Z E            ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0215363Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0215535Z E            DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0215618Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0215622Z 
2025-01-10T12:40:40.0215825Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0216230Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-10T12:40:40.0216251Z 
2025-01-10T12:40:40.0216613Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da27b0>
2025-01-10T12:40:40.0216815Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c1600cb0>
2025-01-10T12:40:40.0217015Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-10T12:40:40.0217027Z 
2025-01-10T12:40:40.0217163Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0217273Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0217365Z         j_blue_estimator = (
2025-01-10T12:40:40.0217580Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0217657Z         )
2025-01-10T12:40:40.0217807Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0217925Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0217930Z 
2025-01-10T12:40:40.0218196Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0218308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0218313Z 
2025-01-10T12:40:40.0218581Z args = (<function assert_allclose.<locals>.compare at 0x7f22d651f4c0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0218662Z        [0., 0., .....,
2025-01-10T12:40:40.0218748Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0218827Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0218912Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0219170Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0219182Z 
2025-01-10T12:40:40.0219260Z     @wraps(func)
2025-01-10T12:40:40.0219351Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0219438Z         with self._recreate_cm():
2025-01-10T12:40:40.0219532Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0219626Z E           AssertionError: 
2025-01-10T12:40:40.0219739Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0219813Z E           
2025-01-10T12:40:40.0219927Z E           Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.0220067Z E           Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.0220318Z E           Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.0220425Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220521Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220617Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0220727Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220818Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0220908Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0220912Z 
2025-01-10T12:40:40.0221117Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0221343Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-10T12:40:40.0221348Z 
2025-01-10T12:40:40.0221683Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da2e10>
2025-01-10T12:40:40.0221885Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c1600cb0>
2025-01-10T12:40:40.0222071Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-10T12:40:40.0222076Z 
2025-01-10T12:40:40.0222195Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0222304Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0222503Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0222663Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0222770Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0222892Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0222897Z 
2025-01-10T12:40:40.0223036Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0223144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0223480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0223583Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0223696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0223700Z 
2025-01-10T12:40:40.0224168Z args = (<function assert_allclose.<locals>.compare at 0x7f22c6ce1440>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T12:40:40.0224273Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0224541Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0224641Z 
2025-01-10T12:40:40.0224789Z     @wraps(func)
2025-01-10T12:40:40.0224950Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0225075Z         with self._recreate_cm():
2025-01-10T12:40:40.0225175Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0225276Z E           AssertionError: 
2025-01-10T12:40:40.0225384Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0225463Z E           
2025-01-10T12:40:40.0225564Z E           Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.0225710Z E           Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.0225840Z E           Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.0226015Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0226202Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0226386Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0226473Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0226477Z 
2025-01-10T12:40:40.0226682Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0227048Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-10T12:40:40.0227054Z 
2025-01-10T12:40:40.0227378Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3650>
2025-01-10T12:40:40.0227579Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c1600cb0>
2025-01-10T12:40:40.0227784Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-10T12:40:40.0227789Z 
2025-01-10T12:40:40.0227940Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0228059Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0228260Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0228419Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0228529Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0228651Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0228662Z 
2025-01-10T12:40:40.0228793Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0228912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0229241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0229340Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0229450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0229455Z 
2025-01-10T12:40:40.0229923Z args = (<function assert_allclose.<locals>.compare at 0x7f22d651d120>, array([1.54239369e+39, 1.54471048e+39, 1.53959524e+39,...), array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, ...,
2025-01-10T12:40:40.0230036Z        2.25671263e+31, 2.27943572e+31, 2.24394350e+31]))
2025-01-10T12:40:40.0230293Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0230301Z 
2025-01-10T12:40:40.0230385Z     @wraps(func)
2025-01-10T12:40:40.0230471Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0230563Z         with self._recreate_cm():
2025-01-10T12:40:40.0230652Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0230742Z E           AssertionError: 
2025-01-10T12:40:40.0230847Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0230929Z E           
2025-01-10T12:40:40.0231028Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0231172Z E           Max absolute difference among violations: 7.22899675e+37
2025-01-10T12:40:40.0231301Z E           Max relative difference among violations: 19.3073128
2025-01-10T12:40:40.0231593Z E            ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-10T12:40:40.0231687Z E                  2.268272e+31, 2.225999e+31])
2025-01-10T12:40:40.0231864Z E            DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T12:40:40.0231960Z E                  2.279436e+31, 2.243943e+31])
2025-01-10T12:40:40.0231965Z 
2025-01-10T12:40:40.0232161Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0232321Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0232326Z 
2025-01-10T12:40:40.0232329Z 
2025-01-10T12:40:40.0232712Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:16<00:00, 112634.09it/s][A
2025-01-10T12:40:40.0232947Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-10T12:40:40.0232962Z 
2025-01-10T12:40:40.0233289Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da2fc0>
2025-01-10T12:40:40.0233485Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c90405f0>
2025-01-10T12:40:40.0233686Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-10T12:40:40.0233781Z 
2025-01-10T12:40:40.0233913Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0234023Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0234107Z         j_blue_estimator = (
2025-01-10T12:40:40.0234332Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0234410Z         )
2025-01-10T12:40:40.0234559Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0234682Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0234687Z 
2025-01-10T12:40:40.0234826Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0234941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0234945Z 
2025-01-10T12:40:40.0235208Z args = (<function assert_allclose.<locals>.compare at 0x7f22f5f61260>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0235296Z        [0., 0., .....,
2025-01-10T12:40:40.0235378Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0235461Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0235540Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0235801Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0235806Z 
2025-01-10T12:40:40.0235888Z     @wraps(func)
2025-01-10T12:40:40.0235973Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0236162Z         with self._recreate_cm():
2025-01-10T12:40:40.0236253Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0236347Z E           AssertionError: 
2025-01-10T12:40:40.0236451Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0236529Z E           
2025-01-10T12:40:40.0236637Z E           Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.0236781Z E           Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.0236915Z E           Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.0237025Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237111Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237206Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0237318Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237404Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0237498Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0237503Z 
2025-01-10T12:40:40.0237697Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0238067Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-10T12:40:40.0238072Z 
2025-01-10T12:40:40.0238393Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3800>
2025-01-10T12:40:40.0238596Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c90405f0>
2025-01-10T12:40:40.0238768Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-10T12:40:40.0238781Z 
2025-01-10T12:40:40.0238889Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0238996Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0239191Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0239354Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0239458Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0239585Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0239589Z 
2025-01-10T12:40:40.0239720Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0239834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0240278Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0240376Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0240494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0240498Z 
2025-01-10T12:40:40.0240960Z args = (<function assert_allclose.<locals>.compare at 0x7f22f0d56020>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T12:40:40.0241068Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0241322Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0241331Z 
2025-01-10T12:40:40.0241416Z     @wraps(func)
2025-01-10T12:40:40.0241504Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0241603Z         with self._recreate_cm():
2025-01-10T12:40:40.0241691Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0241787Z E           AssertionError: 
2025-01-10T12:40:40.0241901Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0241975Z E           
2025-01-10T12:40:40.0242082Z E           Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.0242225Z E           Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.0242359Z E           Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.0242535Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0242631Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0242808Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0242902Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0242907Z 
2025-01-10T12:40:40.0243106Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0243347Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-10T12:40:40.0243351Z 
2025-01-10T12:40:40.0243682Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3e30>
2025-01-10T12:40:40.0243878Z simulation = <tardis.simulation.base.Simulation object at 0x7f22c90405f0>
2025-01-10T12:40:40.0244086Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-10T12:40:40.0244091Z 
2025-01-10T12:40:40.0244229Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0244344Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0244623Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0244792Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0244897Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0245021Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0245031Z 
2025-01-10T12:40:40.0245167Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0245279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0245616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0245707Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0245824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0245830Z 
2025-01-10T12:40:40.0246387Z args = (<function assert_allclose.<locals>.compare at 0x7f22e1a20860>, array([1.54231806e+39, 1.55225124e+39, 1.54284817e+39,...), array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, ...,
2025-01-10T12:40:40.0246504Z        1.35260736e+31, 1.33049749e+31, 1.29446216e+31]))
2025-01-10T12:40:40.0246768Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0246892Z 
2025-01-10T12:40:40.0246971Z     @wraps(func)
2025-01-10T12:40:40.0247062Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0247150Z         with self._recreate_cm():
2025-01-10T12:40:40.0247245Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0247333Z E           AssertionError: 
2025-01-10T12:40:40.0247447Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0247521Z E           
2025-01-10T12:40:40.0247627Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0247766Z E           Max absolute difference among violations: 6.03670637e+37
2025-01-10T12:40:40.0247903Z E           Max relative difference among violations: 9.913521
2025-01-10T12:40:40.0248080Z E            ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-10T12:40:40.0248177Z E                  1.315549e+31, 1.281291e+31])
2025-01-10T12:40:40.0248354Z E            DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T12:40:40.0248449Z E                  1.330497e+31, 1.294462e+31])
2025-01-10T12:40:40.0248454Z 
2025-01-10T12:40:40.0248663Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0248892Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-10T12:40:40.0248897Z 
2025-01-10T12:40:40.0249225Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3380>
2025-01-10T12:40:40.0249421Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1238e30>
2025-01-10T12:40:40.0249622Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-10T12:40:40.0249631Z 
2025-01-10T12:40:40.0249766Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0249873Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0249963Z         j_blue_estimator = (
2025-01-10T12:40:40.0250186Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0250265Z         )
2025-01-10T12:40:40.0250412Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0250537Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0250542Z 
2025-01-10T12:40:40.0250673Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0250790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0250795Z 
2025-01-10T12:40:40.0251068Z args = (<function assert_allclose.<locals>.compare at 0x7f22c729a840>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0251263Z        [0., 0., .....,
2025-01-10T12:40:40.0251349Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0251428Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0251512Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0251769Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0251779Z 
2025-01-10T12:40:40.0251863Z     @wraps(func)
2025-01-10T12:40:40.0251947Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0252042Z         with self._recreate_cm():
2025-01-10T12:40:40.0252131Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0252221Z E           AssertionError: 
2025-01-10T12:40:40.0252326Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0252405Z E           
2025-01-10T12:40:40.0252518Z E           Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.0252658Z E           Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.0252800Z E           Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.0252906Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0252998Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0253090Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0253289Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0253375Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0253469Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0253474Z 
2025-01-10T12:40:40.0253673Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0253898Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-10T12:40:40.0253904Z 
2025-01-10T12:40:40.0254231Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3a40>
2025-01-10T12:40:40.0254433Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1238e30>
2025-01-10T12:40:40.0254610Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-10T12:40:40.0254615Z 
2025-01-10T12:40:40.0254725Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0254840Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0255035Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0255199Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0255302Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0255425Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0255430Z 
2025-01-10T12:40:40.0255564Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0255674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0256015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0256290Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0256429Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0256434Z 
2025-01-10T12:40:40.0256908Z args = (<function assert_allclose.<locals>.compare at 0x7f22f0fe99e0>, array([1.88212833e+39, 1.30680905e+39, 1.43502890e+39,...), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T12:40:40.0257018Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0257281Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0257286Z 
2025-01-10T12:40:40.0257363Z     @wraps(func)
2025-01-10T12:40:40.0257453Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0257540Z         with self._recreate_cm():
2025-01-10T12:40:40.0257633Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0257847Z E           AssertionError: 
2025-01-10T12:40:40.0257961Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0258035Z E           
2025-01-10T12:40:40.0258144Z E           Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.0258285Z E           Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.0258424Z E           Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.0258594Z E            ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0258689Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0258865Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0258953Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0258958Z 
2025-01-10T12:40:40.0259166Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0259401Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-10T12:40:40.0259406Z 
2025-01-10T12:40:40.0259734Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6dd9310>
2025-01-10T12:40:40.0259930Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e1238e30>
2025-01-10T12:40:40.0260270Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-10T12:40:40.0260276Z 
2025-01-10T12:40:40.0260421Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0260527Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0260834Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0261030Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0261207Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0261356Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0261368Z 
2025-01-10T12:40:40.0261592Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0261915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0262335Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0262468Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0262646Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0262652Z 
2025-01-10T12:40:40.0263163Z args = (<function assert_allclose.<locals>.compare at 0x7f22f0fe9760>, array([1.54085030e+39, 1.54785895e+39, 1.54018958e+39,...), array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, ...,
2025-01-10T12:40:40.0263374Z        1.27325829e+31, 1.26097974e+31, 1.22258748e+31]))
2025-01-10T12:40:40.0263676Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0263688Z 
2025-01-10T12:40:40.0263838Z     @wraps(func)
2025-01-10T12:40:40.0263992Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0264132Z         with self._recreate_cm():
2025-01-10T12:40:40.0264317Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0264454Z E           AssertionError: 
2025-01-10T12:40:40.0264632Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0264740Z E           
2025-01-10T12:40:40.0264927Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0265083Z E           Max absolute difference among violations: 5.49004665e+37
2025-01-10T12:40:40.0265342Z E           Max relative difference among violations: 9.345234
2025-01-10T12:40:40.0272939Z E            ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-10T12:40:40.0273077Z E                  1.146857e+31, 1.117191e+31])
2025-01-10T12:40:40.0273283Z E            DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T12:40:40.0273556Z E                  1.260980e+31, 1.222587e+31])
2025-01-10T12:40:40.0273562Z 
2025-01-10T12:40:40.0273795Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0273965Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0273975Z 
2025-01-10T12:40:40.0273979Z 
2025-01-10T12:40:40.0274410Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:14<00:00, 109474.09it/s][A
2025-01-10T12:40:40.0274659Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-10T12:40:40.0274664Z 
2025-01-10T12:40:40.0274994Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3260>
2025-01-10T12:40:40.0275202Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e11ae0f0>
2025-01-10T12:40:40.0275405Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-10T12:40:40.0275420Z 
2025-01-10T12:40:40.0275560Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T12:40:40.0275672Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0275766Z         j_blue_estimator = (
2025-01-10T12:40:40.0276275Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T12:40:40.0276363Z         )
2025-01-10T12:40:40.0276522Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T12:40:40.0276644Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T12:40:40.0276649Z 
2025-01-10T12:40:40.0276794Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T12:40:40.0276914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0276919Z 
2025-01-10T12:40:40.0277194Z args = (<function assert_allclose.<locals>.compare at 0x7f22d651e2a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0277280Z        [0., 0., .....,
2025-01-10T12:40:40.0277376Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0277456Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0277543Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T12:40:40.0277811Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0277828Z 
2025-01-10T12:40:40.0277907Z     @wraps(func)
2025-01-10T12:40:40.0278001Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0278088Z         with self._recreate_cm():
2025-01-10T12:40:40.0278188Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0278279Z E           AssertionError: 
2025-01-10T12:40:40.0278401Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0278477Z E           
2025-01-10T12:40:40.0278595Z E           Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.0278738Z E           Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.0278880Z E           Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.0278988Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279084Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279181Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0279295Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279389Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.0279479Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.0279483Z 
2025-01-10T12:40:40.0279701Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0279927Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-10T12:40:40.0279932Z 
2025-01-10T12:40:40.0280267Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3980>
2025-01-10T12:40:40.0280617Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e11ae0f0>
2025-01-10T12:40:40.0280800Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-10T12:40:40.0280805Z 
2025-01-10T12:40:40.0280923Z     def test_spectrum(self, simulation, request):
2025-01-10T12:40:40.0281033Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0281239Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T12:40:40.0281401Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0281511Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0281633Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0281638Z 
2025-01-10T12:40:40.0281779Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T12:40:40.0281895Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0282247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0282350Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0282462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0282467Z 
2025-01-10T12:40:40.0283060Z args = (<function assert_allclose.<locals>.compare at 0x7f22c6c0db20>, array([2.01762966e+39, 1.58287171e+39, 1.28448103e+39,...), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T12:40:40.0283169Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0283440Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0283446Z 
2025-01-10T12:40:40.0283525Z     @wraps(func)
2025-01-10T12:40:40.0283619Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0283706Z         with self._recreate_cm():
2025-01-10T12:40:40.0283804Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0283905Z E           AssertionError: 
2025-01-10T12:40:40.0284012Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0284094Z E           
2025-01-10T12:40:40.0284196Z E           Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.0284340Z E           Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.0284473Z E           Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.0284647Z E            ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0284733Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0284912Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.0284999Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0285003Z 
2025-01-10T12:40:40.0285213Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0285457Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-10T12:40:40.0285462Z 
2025-01-10T12:40:40.0285787Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f22f6da3f80>
2025-01-10T12:40:40.0285988Z simulation = <tardis.simulation.base.Simulation object at 0x7f22e11ae0f0>
2025-01-10T12:40:40.0286468Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-10T12:40:40.0286480Z 
2025-01-10T12:40:40.0286699Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T12:40:40.0286816Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0287014Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T12:40:40.0287175Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T12:40:40.0287284Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T12:40:40.0287410Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T12:40:40.0287549Z 
2025-01-10T12:40:40.0287684Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T12:40:40.0287804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0288139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T12:40:40.0288244Z     np.testing.assert_allclose(
2025-01-10T12:40:40.0288352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0288357Z 
2025-01-10T12:40:40.0288833Z args = (<function assert_allclose.<locals>.compare at 0x7f22b2a8ac00>, array([1.54088344e+39, 1.54038935e+39, 1.53613853e+39,...), array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, ...,
2025-01-10T12:40:40.0288943Z        2.08252810e+31, 2.08867593e+31, 2.06027793e+31]))
2025-01-10T12:40:40.0289202Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0289211Z 
2025-01-10T12:40:40.0289296Z     @wraps(func)
2025-01-10T12:40:40.0289383Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0289475Z         with self._recreate_cm():
2025-01-10T12:40:40.0289565Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0289658Z E           AssertionError: 
2025-01-10T12:40:40.0289884Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0289968Z E           
2025-01-10T12:40:40.0290070Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.0290216Z E           Max absolute difference among violations: 7.72948946e+37
2025-01-10T12:40:40.0290348Z E           Max relative difference among violations: 17.81369197
2025-01-10T12:40:40.0290525Z E            ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-10T12:40:40.0290624Z E                  2.087889e+31, 2.059957e+31])
2025-01-10T12:40:40.0290800Z E            DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T12:40:40.0290903Z E                  2.088676e+31, 2.060278e+31])
2025-01-10T12:40:40.0290907Z 
2025-01-10T12:40:40.0291110Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0291275Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-10T12:40:40.0291285Z 
2025-01-10T12:40:40.0291973Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T12:40:40.0292256Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22f0c5ebd0>
2025-01-10T12:40:40.0292615Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T12:40:40.0292627Z 
2025-01-10T12:40:40.0292721Z     def test_montecarlo_main_loop(
2025-01-10T12:40:40.0292821Z         montecarlo_main_loop_config,
2025-01-10T12:40:40.0292906Z         regression_data,
2025-01-10T12:40:40.0292994Z         atomic_dataset,
2025-01-10T12:40:40.0293069Z     ):
2025-01-10T12:40:40.0293189Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T12:40:40.0293346Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T12:40:40.0293448Z             montecarlo_main_loop_config,
2025-01-10T12:40:40.0293540Z             atom_data=atomic_dataset,
2025-01-10T12:40:40.0293640Z             virtual_packet_logging=False,
2025-01-10T12:40:40.0293741Z             legacy_mode_enabled=True,
2025-01-10T12:40:40.0293816Z         )
2025-01-10T12:40:40.0293953Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T12:40:40.0294066Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T12:40:40.0294144Z     
2025-01-10T12:40:40.0294277Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T12:40:40.0294476Z             montecarlo_main_loop_simulation
2025-01-10T12:40:40.0294553Z         )
2025-01-10T12:40:40.0294632Z     
2025-01-10T12:40:40.0294723Z         # Load compare data from refdata
2025-01-10T12:40:40.0294802Z     
2025-01-10T12:40:40.0294895Z         expected_nu = expected_hdf_store[
2025-01-10T12:40:40.0295034Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T12:40:40.0295107Z         ]
2025-01-10T12:40:40.0295217Z         expected_energy = expected_hdf_store[
2025-01-10T12:40:40.0295357Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T12:40:40.0295431Z         ]
2025-01-10T12:40:40.0295562Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T12:40:40.0295705Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T12:40:40.0295784Z         ]
2025-01-10T12:40:40.0295892Z         expected_j_estimator = expected_hdf_store[
2025-01-10T12:40:40.0296034Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T12:40:40.0296313Z         ]
2025-01-10T12:40:40.0296428Z         expected_hdf_store.close()
2025-01-10T12:40:40.0296637Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-10T12:40:40.0296817Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T12:40:40.0297090Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T12:40:40.0297187Z         actual_nu_bar_estimator = (
2025-01-10T12:40:40.0297334Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T12:40:40.0297415Z         )
2025-01-10T12:40:40.0297604Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T12:40:40.0297676Z     
2025-01-10T12:40:40.0297763Z         # Compare
2025-01-10T12:40:40.0297850Z >       npt.assert_allclose(
2025-01-10T12:40:40.0298013Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-10T12:40:40.0298093Z         )
2025-01-10T12:40:40.0298098Z 
2025-01-10T12:40:40.0298284Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-10T12:40:40.0298400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0298405Z 
2025-01-10T12:40:40.0298857Z args = (<function assert_allclose.<locals>.compare at 0x7f22b014d6c0>, array([9.40448351e+28, 8.06019278e+28, 7.19997537e+28,....88449508e+28, 3.76156653e+28, 3.64401717e+28,
2025-01-10T12:40:40.0299036Z        3.53517538e+28, 3.45355503e+28, 3.34541304e+28, 3.26838651e+28]))
2025-01-10T12:40:40.0299298Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0299304Z 
2025-01-10T12:40:40.0299388Z     @wraps(func)
2025-01-10T12:40:40.0299475Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0299572Z         with self._recreate_cm():
2025-01-10T12:40:40.0299665Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0299761Z E           AssertionError: 
2025-01-10T12:40:40.0299873Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T12:40:40.0299952Z E           
2025-01-10T12:40:40.0300051Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.0300194Z E           Max absolute difference among violations: 6.92504451e+25
2025-01-10T12:40:40.0300334Z E           Max relative difference among violations: 0.00085843
2025-01-10T12:40:40.0300495Z E            ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-10T12:40:40.0300622Z E                  6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-10T12:40:40.0300748Z E                  4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-10T12:40:40.0300914Z E            DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T12:40:40.0301031Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T12:40:40.0301279Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T12:40:40.0301283Z 
2025-01-10T12:40:40.0301488Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0301651Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T12:40:40.0301928Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0302374Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0302565Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0302777Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0302953Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0303023Z 	
2025-01-10T12:40:40.0303126Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0303211Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0303332Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0303499Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0303577Z 	
2025-01-10T12:40:40.0303733Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0303900Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0304064Z 	
2025-01-10T12:40:40.0304161Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0304261Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0304353Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0304469Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0304625Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0304630Z 
2025-01-10T12:40:40.0304633Z 
2025-01-10T12:40:40.0304877Z Packets:                                                                                   11032/? [00:10<00:00, 1055.48it/s][A
2025-01-10T12:40:40.0304882Z 
2025-01-10T12:40:40.0305108Z Packets:                                                                                   21526/? [00:10<00:00, 2456.20it/s][A
2025-01-10T12:40:40.0305126Z 
2025-01-10T12:40:40.0305349Z Packets:                                                                                   32368/? [00:10<00:00, 4458.71it/s][A
2025-01-10T12:40:40.0305354Z 
2025-01-10T12:40:40.0305590Z Packets:                                                                                   43237/? [00:10<00:00, 7198.69it/s][A
2025-01-10T12:40:40.0305594Z 
2025-01-10T12:40:40.0305820Z Packets:                                                                                   54170/? [00:10<00:00, 10895.25it/s][A
2025-01-10T12:40:40.0305825Z 
2025-01-10T12:40:40.0306163Z Packets:                                                                                   65008/? [00:10<00:00, 15657.29it/s][A
2025-01-10T12:40:40.0306170Z 
2025-01-10T12:40:40.0306404Z Packets:                                                                                   75957/? [00:11<00:00, 21803.65it/s][A
2025-01-10T12:40:40.0306414Z 
2025-01-10T12:40:40.0306638Z Packets:                                                                                   86922/? [00:11<00:00, 29320.68it/s][A
2025-01-10T12:40:40.0306643Z 
2025-01-10T12:40:40.0306870Z Packets:                                                                                   97868/? [00:11<00:00, 38050.04it/s][A
2025-01-10T12:40:40.0307026Z Iterations:                                                                                40/? [08:01<00:00,  5.61s/it]
2025-01-10T12:40:40.0307031Z 
2025-01-10T12:40:40.0307267Z Packets:                                                                                   104009/? [00:11<00:00, 38050.04it/s][A
2025-01-10T12:40:40.0307423Z ------------------------------ Captured log call -------------------------------
2025-01-10T12:40:40.0307928Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0308302Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0308415Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0308518Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0308604Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0308614Z 
2025-01-10T12:40:40.0308731Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0308821Z 	Starting iteration 1 of 1
2025-01-10T12:40:40.0308932Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0309025Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0309131Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0309232Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0309400Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-10T12:40:40.0309405Z 
2025-01-10T12:40:40.0310083Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T12:40:40.0310368Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c6fe9400>
2025-01-10T12:40:40.0310840Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T12:40:40.0310846Z 
2025-01-10T12:40:40.0310957Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-10T12:40:40.0311054Z         montecarlo_main_loop_config,
2025-01-10T12:40:40.0311144Z         regression_data,
2025-01-10T12:40:40.0311226Z         atomic_dataset,
2025-01-10T12:40:40.0311307Z     ):
2025-01-10T12:40:40.0311416Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T12:40:40.0311597Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-10T12:40:40.0311675Z     
2025-01-10T12:40:40.0311838Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T12:40:40.0311932Z             montecarlo_main_loop_config,
2025-01-10T12:40:40.0312028Z             atom_data=atomic_dataset,
2025-01-10T12:40:40.0312119Z             virtual_packet_logging=True,
2025-01-10T12:40:40.0312212Z             legacy_mode_enabled=True,
2025-01-10T12:40:40.0312292Z         )
2025-01-10T12:40:40.0312431Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T12:40:40.0312541Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T12:40:40.0312620Z     
2025-01-10T12:40:40.0312764Z         transport = montecarlo_main_loop_simulation.transport
2025-01-10T12:40:40.0312836Z     
2025-01-10T12:40:40.0313043Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-10T12:40:40.0313116Z     
2025-01-10T12:40:40.0313252Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T12:40:40.0313349Z             montecarlo_main_loop_simulation
2025-01-10T12:40:40.0313433Z         )
2025-01-10T12:40:40.0313505Z     
2025-01-10T12:40:40.0313606Z         expected_nu = expected_hdf_store[
2025-01-10T12:40:40.0313732Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T12:40:40.0313813Z         ]
2025-01-10T12:40:40.0313914Z         expected_energy = expected_hdf_store[
2025-01-10T12:40:40.0314059Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T12:40:40.0314133Z         ]
2025-01-10T12:40:40.0314257Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T12:40:40.0314407Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T12:40:40.0314481Z         ]
2025-01-10T12:40:40.0314595Z         expected_j_estimator = expected_hdf_store[
2025-01-10T12:40:40.0314724Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T12:40:40.0314804Z         ]
2025-01-10T12:40:40.0314921Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-10T12:40:40.0315161Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-10T12:40:40.0315235Z         ]
2025-01-10T12:40:40.0315365Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-10T12:40:40.0315521Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-10T12:40:40.0315604Z         ]
2025-01-10T12:40:40.0315675Z     
2025-01-10T12:40:40.0315796Z         transport_state = transport.transport_state
2025-01-10T12:40:40.0315872Z     
2025-01-10T12:40:40.0316052Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T12:40:40.0316416Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T12:40:40.0316557Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-10T12:40:40.0316678Z         actual_j_estimator = transport_state.j_estimator
2025-01-10T12:40:40.0316831Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-10T12:40:40.0317025Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-10T12:40:40.0317097Z     
2025-01-10T12:40:40.0317195Z         expected_hdf_store.close()
2025-01-10T12:40:40.0317272Z         # Compare
2025-01-10T12:40:40.0317361Z >       npt.assert_allclose(
2025-01-10T12:40:40.0317459Z             actual_nu_bar_estimator,
2025-01-10T12:40:40.0317679Z             expected_nu_bar_estimator,
2025-01-10T12:40:40.0317766Z             rtol=1e-12,
2025-01-10T12:40:40.0317846Z             atol=1e-15,
2025-01-10T12:40:40.0317923Z         )
2025-01-10T12:40:40.0317927Z 
2025-01-10T12:40:40.0318119Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-10T12:40:40.0318239Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0318243Z 
2025-01-10T12:40:40.0318685Z args = (<function assert_allclose.<locals>.compare at 0x7f22e12e6f20>, array([9.39632189e+28, 8.06452049e+28, 7.18754600e+28,....86491193e+28, 3.76603462e+28, 3.65184134e+28,
2025-01-10T12:40:40.0318833Z        3.55625311e+28, 3.45809153e+28, 3.35093337e+28, 3.25549805e+28]))
2025-01-10T12:40:40.0319110Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-10T12:40:40.0319115Z 
2025-01-10T12:40:40.0319193Z     @wraps(func)
2025-01-10T12:40:40.0319293Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0319382Z         with self._recreate_cm():
2025-01-10T12:40:40.0319479Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0319570Z E           AssertionError: 
2025-01-10T12:40:40.0319689Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T12:40:40.0319769Z E           
2025-01-10T12:40:40.0319870Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.0320013Z E           Max absolute difference among violations: 2.81924274e+25
2025-01-10T12:40:40.0320141Z E           Max relative difference among violations: 0.0005693
2025-01-10T12:40:40.0320306Z E            ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-10T12:40:40.0320433Z E                  6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-10T12:40:40.0320565Z E                  4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-10T12:40:40.0320727Z E            DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T12:40:40.0320859Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T12:40:40.0320986Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T12:40:40.0320991Z 
2025-01-10T12:40:40.0321195Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0321354Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T12:40:40.0321612Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0322062Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0322374Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0322593Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0322762Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0322847Z 	
2025-01-10T12:40:40.0322943Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0323036Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0323148Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0323311Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0323387Z 	
2025-01-10T12:40:40.0323543Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0323709Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0323780Z 	
2025-01-10T12:40:40.0323879Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T12:40:40.0323973Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T12:40:40.0324077Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0324184Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0324342Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0324347Z 
2025-01-10T12:40:40.0324351Z 
2025-01-10T12:40:40.0324589Z Packets:                                                                                   108741/? [00:14<00:00, 10392.87it/s][A
2025-01-10T12:40:40.0324689Z 
2025-01-10T12:40:40.0324921Z Packets:                                                                                   116338/? [00:14<00:00, 12452.01it/s][A
2025-01-10T12:40:40.0324926Z 
2025-01-10T12:40:40.0325159Z Packets:                                                                                   122673/? [00:14<00:00, 14497.34it/s][A
2025-01-10T12:40:40.0325164Z 
2025-01-10T12:40:40.0325387Z Packets:                                                                                   128143/? [00:14<00:00, 16574.25it/s][A
2025-01-10T12:40:40.0325396Z 
2025-01-10T12:40:40.0325623Z Packets:                                                                                   133024/? [00:14<00:00, 18650.19it/s][A
2025-01-10T12:40:40.0325628Z 
2025-01-10T12:40:40.0325856Z Packets:                                                                                   137477/? [00:14<00:00, 20756.41it/s][A
2025-01-10T12:40:40.0325865Z 
2025-01-10T12:40:40.0326263Z Packets:                                                                                   141642/? [00:14<00:00, 22906.58it/s][A
2025-01-10T12:40:40.0326273Z 
2025-01-10T12:40:40.0326512Z Packets:                                                                                   145625/? [00:15<00:00, 24944.49it/s][A
2025-01-10T12:40:40.0326517Z 
2025-01-10T12:40:40.0326743Z Packets:                                                                                   149466/? [00:15<00:00, 26876.69it/s][A
2025-01-10T12:40:40.0326754Z 
2025-01-10T12:40:40.0326975Z Packets:                                                                                   153214/? [00:15<00:00, 28588.74it/s][A
2025-01-10T12:40:40.0326985Z 
2025-01-10T12:40:40.0327212Z Packets:                                                                                   156892/? [00:15<00:00, 30050.45it/s][A
2025-01-10T12:40:40.0327217Z 
2025-01-10T12:40:40.0327445Z Packets:                                                                                   160519/? [00:15<00:00, 31257.42it/s][A
2025-01-10T12:40:40.0327449Z 
2025-01-10T12:40:40.0327676Z Packets:                                                                                   164110/? [00:15<00:00, 32256.90it/s][A
2025-01-10T12:40:40.0327681Z 
2025-01-10T12:40:40.0327906Z Packets:                                                                                   167680/? [00:15<00:00, 33105.19it/s][A
2025-01-10T12:40:40.0327910Z 
2025-01-10T12:40:40.0328132Z Packets:                                                                                   171244/? [00:15<00:00, 33547.35it/s][A
2025-01-10T12:40:40.0328257Z 
2025-01-10T12:40:40.0328489Z Packets:                                                                                   174780/? [00:15<00:00, 33929.84it/s][A
2025-01-10T12:40:40.0328494Z 
2025-01-10T12:40:40.0328719Z Packets:                                                                                   178302/? [00:15<00:00, 34236.88it/s][A
2025-01-10T12:40:40.0328727Z 
2025-01-10T12:40:40.0328957Z Packets:                                                                                   181818/? [00:16<00:00, 33805.06it/s][A
2025-01-10T12:40:40.0328962Z 
2025-01-10T12:40:40.0329191Z Packets:                                                                                   185336/? [00:16<00:00, 34196.50it/s][A
2025-01-10T12:40:40.0329195Z 
2025-01-10T12:40:40.0329419Z Packets:                                                                                   188854/? [00:16<00:00, 34482.20it/s][A
2025-01-10T12:40:40.0329423Z 
2025-01-10T12:40:40.0329654Z Packets:                                                                                   192395/? [00:16<00:00, 34753.66it/s][A
2025-01-10T12:40:40.0329659Z 
2025-01-10T12:40:40.0329882Z Packets:                                                                                   195895/? [00:16<00:00, 34664.69it/s][A
2025-01-10T12:40:40.0330017Z 
2025-01-10T12:40:40.0330243Z Packets:                                                                                   199379/? [00:16<00:00, 34688.52it/s][A
2025-01-10T12:40:40.0330248Z 
2025-01-10T12:40:40.0330480Z Packets:                                                                                   202891/? [00:16<00:00, 34816.31it/s][A
2025-01-10T12:40:40.0330631Z Iterations:                                                                                41/? [08:07<00:00,  5.57s/it]
2025-01-10T12:40:40.0330636Z 
2025-01-10T12:40:40.0330869Z Packets:                                                                                   204009/? [00:16<00:00, 34816.31it/s][A
2025-01-10T12:40:40.0331025Z ------------------------------ Captured log call -------------------------------
2025-01-10T12:40:40.0331527Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0331769Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0331880Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0331981Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0332066Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0332070Z 
2025-01-10T12:40:40.0332184Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0332272Z 	Starting iteration 1 of 1
2025-01-10T12:40:40.0332379Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0332469Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T12:40:40.0332564Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T12:40:40.0332665Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0332823Z __________________________ test_boundary_interactions __________________________
2025-01-10T12:40:40.0332827Z 
2025-01-10T12:40:40.0333616Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f23019aa8a0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f22b29c8e50>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f22b29ca2c0>])
2025-01-10T12:40:40.0333895Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22ab2aad80>
2025-01-10T12:40:40.0333900Z 
2025-01-10T12:40:40.0334072Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-10T12:40:40.0334170Z         no_of_packets = len(rpacket_tracker)
2025-01-10T12:40:40.0334249Z     
2025-01-10T12:40:40.0334345Z         # Hard coding the number of columns
2025-01-10T12:40:40.0334498Z         # Based on the largest size of boundary_interaction array (60)
2025-01-10T12:40:40.0334700Z         obtained_boundary_interaction = np.full(
2025-01-10T12:40:40.0334787Z             (no_of_packets, 64),
2025-01-10T12:40:40.0334865Z             [-1],
2025-01-10T12:40:40.0335001Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-10T12:40:40.0335086Z         )
2025-01-10T12:40:40.0335158Z     
2025-01-10T12:40:40.0335279Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-10T12:40:40.0335375Z >           obtained_boundary_interaction[
2025-01-10T12:40:40.0335489Z                 i, : tracker.boundary_interaction.size
2025-01-10T12:40:40.0335586Z             ] = tracker.boundary_interaction
2025-01-10T12:40:40.0335797Z E           ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-10T12:40:40.0335802Z 
2025-01-10T12:40:40.0336006Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:147: ValueError
2025-01-10T12:40:40.0336379Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-10T12:40:40.0336392Z 
2025-01-10T12:40:40.0337070Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T12:40:40.0337470Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f22c45d1400>
2025-01-10T12:40:40.0337822Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T12:40:40.0338221Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f22ca8ae5a0>
2025-01-10T12:40:40.0338232Z 
2025-01-10T12:40:40.0338334Z     def test_montecarlo_main_loop_weighted(
2025-01-10T12:40:40.0338428Z         montecarlo_main_loop_config,
2025-01-10T12:40:40.0338512Z         regression_data,
2025-01-10T12:40:40.0338606Z         atomic_dataset,
2025-01-10T12:40:40.0338700Z         simple_weighted_packet_source,
2025-01-10T12:40:40.0338778Z     ):
2025-01-10T12:40:40.0338884Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T12:40:40.0339063Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-10T12:40:40.0339161Z             montecarlo_main_loop_config,
2025-01-10T12:40:40.0339255Z             atom_data=atomic_dataset,
2025-01-10T12:40:40.0339349Z             virtual_packet_logging=False,
2025-01-10T12:40:40.0339440Z             legacy_mode_enabled=True,
2025-01-10T12:40:40.0339513Z         )
2025-01-10T12:40:40.0339674Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-10T12:40:40.0339771Z             simple_weighted_packet_source
2025-01-10T12:40:40.0339849Z         )
2025-01-10T12:40:40.0340004Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-10T12:40:40.0340137Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-10T12:40:40.0340218Z     
2025-01-10T12:40:40.0340328Z         # Get the montecarlo simple regression data
2025-01-10T12:40:40.0340420Z         regression_data_dir = (
2025-01-10T12:40:40.0340598Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-10T12:40:40.0340751Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-10T12:40:40.0340823Z         )
2025-01-10T12:40:40.0340992Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-10T12:40:40.0341063Z     
2025-01-10T12:40:40.0341161Z         # Load compare data from refdata
2025-01-10T12:40:40.0341231Z     
2025-01-10T12:40:40.0341329Z         expected_nu = expected_hdf_store[
2025-01-10T12:40:40.0341456Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T12:40:40.0341534Z         ]
2025-01-10T12:40:40.0341639Z         expected_energy = expected_hdf_store[
2025-01-10T12:40:40.0341773Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T12:40:40.0341976Z         ]
2025-01-10T12:40:40.0342095Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T12:40:40.0342247Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T12:40:40.0342318Z         ]
2025-01-10T12:40:40.0342429Z         expected_j_estimator = expected_hdf_store[
2025-01-10T12:40:40.0342564Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T12:40:40.0342642Z         ]
2025-01-10T12:40:40.0342733Z         expected_hdf_store.close()
2025-01-10T12:40:40.0342828Z         transport_state = (
2025-01-10T12:40:40.0343009Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-10T12:40:40.0343089Z         )
2025-01-10T12:40:40.0343260Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T12:40:40.0343408Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T12:40:40.0343504Z         actual_nu_bar_estimator = (
2025-01-10T12:40:40.0343656Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T12:40:40.0343735Z         )
2025-01-10T12:40:40.0343918Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T12:40:40.0343995Z     
2025-01-10T12:40:40.0344073Z         # Compare
2025-01-10T12:40:40.0344283Z         npt.assert_allclose(
2025-01-10T12:40:40.0344444Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-10T12:40:40.0344522Z         )
2025-01-10T12:40:40.0344707Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-10T12:40:40.0344866Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-10T12:40:40.0344871Z 
2025-01-10T12:40:40.0345110Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-10T12:40:40.0345233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0345244Z 
2025-01-10T12:40:40.0345714Z args = (<function assert_allclose.<locals>.compare at 0x7f22ca7be980>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-10T12:40:40.0345828Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-10T12:40:40.0346276Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0346286Z 
2025-01-10T12:40:40.0346370Z     @wraps(func)
2025-01-10T12:40:40.0346466Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0346555Z         with self._recreate_cm():
2025-01-10T12:40:40.0346653Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0346749Z E           AssertionError: 
2025-01-10T12:40:40.0346860Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-10T12:40:40.0346939Z E           
2025-01-10T12:40:40.0347045Z E           Mismatched elements: 75 / 100000 (0.075%)
2025-01-10T12:40:40.0347195Z E           Max absolute difference among violations: 2.01554089e-05
2025-01-10T12:40:40.0347323Z E           Max relative difference among violations: 2.08104546
2025-01-10T12:40:40.0347508Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.0347605Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.0347793Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.0347885Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.0347890Z 
2025-01-10T12:40:40.0348099Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0348258Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T12:40:40.0348517Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T12:40:40.0348971Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T12:40:40.0349282Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0349502Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T12:40:40.0349669Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0349750Z 	
2025-01-10T12:40:40.0349846Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0349936Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0350045Z  ([1mbase.py[0m:542)
2025-01-10T12:40:40.0350212Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0350284Z 	
2025-01-10T12:40:40.0350443Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T12:40:40.0350609Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0350681Z 	
2025-01-10T12:40:40.0350780Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0350873Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0350971Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0351085Z  ([1mbase.py[0m:657)
2025-01-10T12:40:40.0351245Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T12:40:40.0351250Z 
2025-01-10T12:40:40.0351254Z 
2025-01-10T12:40:40.0351494Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-10T12:40:40.0351618Z 
2025-01-10T12:40:40.0351847Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-10T12:40:40.0351853Z 
2025-01-10T12:40:40.0352120Z Packets:   ████████▍                                                                       10605/100000 [00:00<00:00, 106048.33it/s][A
2025-01-10T12:40:40.0352127Z 
2025-01-10T12:40:40.0352387Z Packets:   █████████████████▎                                                              21602/100000 [00:00<00:00, 108353.42it/s][A
2025-01-10T12:40:40.0352393Z 
2025-01-10T12:40:40.0352674Z Packets:   █████████████████████████▉                                                      32438/100000 [00:00<00:00, 108344.79it/s][A
2025-01-10T12:40:40.0352680Z 
2025-01-10T12:40:40.0352960Z Packets:   ██████████████████████████████████▋                                             43403/100000 [00:00<00:00, 108857.41it/s][A
2025-01-10T12:40:40.0352980Z 
2025-01-10T12:40:40.0353271Z Packets:   ███████████████████████████████████████████▍                                    54340/100000 [00:00<00:00, 109039.85it/s][A
2025-01-10T12:40:40.0353276Z 
2025-01-10T12:40:40.0353585Z Packets:   ████████████████████████████████████████████████████▏                           65244/100000 [00:00<00:00, 108981.54it/s][A
2025-01-10T12:40:40.0353590Z 
2025-01-10T12:40:40.0353902Z Packets:   ████████████████████████████████████████████████████████████▉                   76157/100000 [00:00<00:00, 109028.56it/s][A
2025-01-10T12:40:40.0353907Z 
2025-01-10T12:40:40.0354236Z Packets:   █████████████████████████████████████████████████████████████████████▋          87077/100000 [00:00<00:00, 109081.67it/s][A
2025-01-10T12:40:40.0354255Z 
2025-01-10T12:40:40.0354598Z Packets:   ██████████████████████████████████████████████████████████████████████████████▍ 98003/100000 [00:00<00:00, 109136.06it/s][A
2025-01-10T12:40:40.0354747Z Iterations:                                                                                45/? [08:57<00:00,  8.12s/it]
2025-01-10T12:40:40.0354766Z 
2025-01-10T12:40:40.0355110Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:01<00:00, 109136.06it/s][A
2025-01-10T12:40:40.0355266Z ------------------------------ Captured log call -------------------------------
2025-01-10T12:40:40.0355766Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T12:40:40.0355990Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T12:40:40.0356418Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T12:40:40.0356524Z 	Simulation finished in 0 iterations 
2025-01-10T12:40:40.0356608Z 	Simulation took 0.00 s
2025-01-10T12:40:40.0356612Z 
2025-01-10T12:40:40.0356728Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T12:40:40.0356950Z 	Starting iteration 1 of 1
2025-01-10T12:40:40.0357060Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T12:40:40.0357154Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T12:40:40.0357252Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T12:40:40.0357345Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T12:40:40.0357575Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-10T12:40:40.0357580Z 
2025-01-10T12:40:40.0357847Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba44a0>
2025-01-10T12:40:40.0358138Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0358421Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-10T12:40:40.0358508Z attribute = 'plot_data'
2025-01-10T12:40:40.0358513Z 
2025-01-10T12:40:40.0358616Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0358699Z         "attribute",
2025-01-10T12:40:40.0358781Z         [
2025-01-10T12:40:40.0358862Z             "plot_data",
2025-01-10T12:40:40.0358950Z             "plot_colors",
2025-01-10T12:40:40.0359030Z             "new_bin_edges",
2025-01-10T12:40:40.0359106Z         ],
2025-01-10T12:40:40.0359176Z     )
2025-01-10T12:40:40.0359269Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0359345Z         self,
2025-01-10T12:40:40.0359442Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0359518Z         request,
2025-01-10T12:40:40.0359600Z         attribute,
2025-01-10T12:40:40.0359677Z     ):
2025-01-10T12:40:40.0359748Z         """
2025-01-10T12:40:40.0359898Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0359971Z     
2025-01-10T12:40:40.0360059Z         Parameters:
2025-01-10T12:40:40.0360140Z         -----------
2025-01-10T12:40:40.0360324Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0360430Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0360604Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0360677Z         """
2025-01-10T12:40:40.0360794Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0360933Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0361087Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0361247Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0361402Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0361647Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0361767Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0361890Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0361894Z 
2025-01-10T12:40:40.0362039Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0362167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0362171Z 
2025-01-10T12:40:40.0362608Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af9c0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T12:40:40.0362752Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T12:40:40.0363011Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0363022Z 
2025-01-10T12:40:40.0363106Z     @wraps(func)
2025-01-10T12:40:40.0363201Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0363291Z         with self._recreate_cm():
2025-01-10T12:40:40.0363386Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0363474Z E           AssertionError: 
2025-01-10T12:40:40.0363591Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0363749Z E           
2025-01-10T12:40:40.0363851Z E           (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.0364383Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.0364510Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.0364631Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.0364794Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.0364913Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.0365040Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.0365045Z 
2025-01-10T12:40:40.0365255Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0365412Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0365663Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0365915Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0366205Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0366564Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0366779Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-10T12:40:40.0366783Z 
2025-01-10T12:40:40.0367053Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba4920>
2025-01-10T12:40:40.0367341Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0367620Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-10T12:40:40.0367712Z attribute = 'plot_data'
2025-01-10T12:40:40.0367716Z 
2025-01-10T12:40:40.0367815Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0367893Z         "attribute",
2025-01-10T12:40:40.0367971Z         [
2025-01-10T12:40:40.0368052Z             "plot_data",
2025-01-10T12:40:40.0368136Z             "plot_colors",
2025-01-10T12:40:40.0368224Z             "new_bin_edges",
2025-01-10T12:40:40.0368296Z         ],
2025-01-10T12:40:40.0368373Z     )
2025-01-10T12:40:40.0368461Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0368541Z         self,
2025-01-10T12:40:40.0368634Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0368714Z         request,
2025-01-10T12:40:40.0368920Z         attribute,
2025-01-10T12:40:40.0368997Z     ):
2025-01-10T12:40:40.0369070Z         """
2025-01-10T12:40:40.0369212Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0369283Z     
2025-01-10T12:40:40.0369367Z         Parameters:
2025-01-10T12:40:40.0369447Z         -----------
2025-01-10T12:40:40.0369636Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0369737Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0369915Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0369993Z         """
2025-01-10T12:40:40.0370101Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0370246Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0370396Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0370561Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0370714Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0370845Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0370967Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0371095Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0371213Z 
2025-01-10T12:40:40.0371362Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0371482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0371486Z 
2025-01-10T12:40:40.0371830Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17acae0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...47464 ,
2025-01-10T12:40:40.0371969Z        12229.96880815, 12113.40540961, 12605.43283975, 12605.43283975,
2025-01-10T12:40:40.0372056Z        11152.96259546, 11172.04481521]))
2025-01-10T12:40:40.0372311Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0372321Z 
2025-01-10T12:40:40.0372403Z     @wraps(func)
2025-01-10T12:40:40.0372488Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0372582Z         with self._recreate_cm():
2025-01-10T12:40:40.0372671Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0372770Z E           AssertionError: 
2025-01-10T12:40:40.0372879Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0372959Z E           
2025-01-10T12:40:40.0373064Z E           Mismatched elements: 558 / 558 (100%)
2025-01-10T12:40:40.0373199Z E           Max absolute difference among violations: 5978.84516144
2025-01-10T12:40:40.0373331Z E           Max relative difference among violations: 0.4321623
2025-01-10T12:40:40.0373487Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.0373612Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.0373740Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.0373904Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.0374020Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.0374155Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.0374160Z 
2025-01-10T12:40:40.0374365Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0374575Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-10T12:40:40.0374580Z 
2025-01-10T12:40:40.0374843Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba4b60>
2025-01-10T12:40:40.0375123Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0375400Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-10T12:40:40.0375576Z attribute = 'plot_data'
2025-01-10T12:40:40.0375581Z 
2025-01-10T12:40:40.0375681Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0375759Z         "attribute",
2025-01-10T12:40:40.0375837Z         [
2025-01-10T12:40:40.0375926Z             "plot_data",
2025-01-10T12:40:40.0376005Z             "plot_colors",
2025-01-10T12:40:40.0376235Z             "new_bin_edges",
2025-01-10T12:40:40.0376336Z         ],
2025-01-10T12:40:40.0376420Z     )
2025-01-10T12:40:40.0376511Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0376590Z         self,
2025-01-10T12:40:40.0376681Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0376761Z         request,
2025-01-10T12:40:40.0376836Z         attribute,
2025-01-10T12:40:40.0376914Z     ):
2025-01-10T12:40:40.0376987Z         """
2025-01-10T12:40:40.0377126Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0377205Z     
2025-01-10T12:40:40.0377288Z         Parameters:
2025-01-10T12:40:40.0377367Z         -----------
2025-01-10T12:40:40.0377550Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0377647Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0377815Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0378020Z         """
2025-01-10T12:40:40.0378128Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0378269Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0378414Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0378579Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0378729Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0378858Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0378982Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0379107Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0379112Z 
2025-01-10T12:40:40.0379253Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0379374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0379384Z 
2025-01-10T12:40:40.0379865Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af9c0>, array([11193.08324978, 13536.93126023, 11647.60804688,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T12:40:40.0379969Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T12:40:40.0380237Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0380242Z 
2025-01-10T12:40:40.0380320Z     @wraps(func)
2025-01-10T12:40:40.0380413Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0380506Z         with self._recreate_cm():
2025-01-10T12:40:40.0380602Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0380688Z E           AssertionError: 
2025-01-10T12:40:40.0380802Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0380886Z E           
2025-01-10T12:40:40.0380980Z E           (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.0381150Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.0381269Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.0381398Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.0381558Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.0381680Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.0381801Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.0381940Z 
2025-01-10T12:40:40.0382145Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0382361Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-10T12:40:40.0382372Z 
2025-01-10T12:40:40.0382634Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba4da0>
2025-01-10T12:40:40.0382922Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0383191Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-10T12:40:40.0383282Z attribute = 'plot_data'
2025-01-10T12:40:40.0383287Z 
2025-01-10T12:40:40.0383380Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0383464Z         "attribute",
2025-01-10T12:40:40.0383537Z         [
2025-01-10T12:40:40.0383624Z             "plot_data",
2025-01-10T12:40:40.0383704Z             "plot_colors",
2025-01-10T12:40:40.0383796Z             "new_bin_edges",
2025-01-10T12:40:40.0383870Z         ],
2025-01-10T12:40:40.0383948Z     )
2025-01-10T12:40:40.0384040Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0384114Z         self,
2025-01-10T12:40:40.0384210Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0384285Z         request,
2025-01-10T12:40:40.0384453Z         attribute,
2025-01-10T12:40:40.0384524Z     ):
2025-01-10T12:40:40.0384600Z         """
2025-01-10T12:40:40.0384732Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0384808Z     
2025-01-10T12:40:40.0384886Z         Parameters:
2025-01-10T12:40:40.0384967Z         -----------
2025-01-10T12:40:40.0385142Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0385244Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0385406Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0385485Z         """
2025-01-10T12:40:40.0385591Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0385741Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0385892Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0386151Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0386320Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0386444Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0386570Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0386688Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0386693Z 
2025-01-10T12:40:40.0386840Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0386953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0386958Z 
2025-01-10T12:40:40.0387438Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af380>, array([11193.08324978, 13536.93126023, 11647.60804688,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T12:40:40.0387553Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T12:40:40.0387808Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0387818Z 
2025-01-10T12:40:40.0387903Z     @wraps(func)
2025-01-10T12:40:40.0387988Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0388080Z         with self._recreate_cm():
2025-01-10T12:40:40.0388168Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0388260Z E           AssertionError: 
2025-01-10T12:40:40.0388369Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0388450Z E           
2025-01-10T12:40:40.0388542Z E           (shapes (147,), (159,) mismatch)
2025-01-10T12:40:40.0388699Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.0388946Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.0389071Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.0389231Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.0389353Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.0389479Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.0389484Z 
2025-01-10T12:40:40.0389681Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0389896Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-10T12:40:40.0389901Z 
2025-01-10T12:40:40.0390162Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5010>
2025-01-10T12:40:40.0390449Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0390729Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-10T12:40:40.0390816Z attribute = 'plot_data'
2025-01-10T12:40:40.0390820Z 
2025-01-10T12:40:40.0390917Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0391110Z         "attribute",
2025-01-10T12:40:40.0391187Z         [
2025-01-10T12:40:40.0391267Z             "plot_data",
2025-01-10T12:40:40.0391354Z             "plot_colors",
2025-01-10T12:40:40.0391438Z             "new_bin_edges",
2025-01-10T12:40:40.0391519Z         ],
2025-01-10T12:40:40.0391592Z     )
2025-01-10T12:40:40.0391688Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0391763Z         self,
2025-01-10T12:40:40.0391862Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0391942Z         request,
2025-01-10T12:40:40.0392019Z         attribute,
2025-01-10T12:40:40.0392095Z     ):
2025-01-10T12:40:40.0392169Z         """
2025-01-10T12:40:40.0392315Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0392387Z     
2025-01-10T12:40:40.0392471Z         Parameters:
2025-01-10T12:40:40.0392547Z         -----------
2025-01-10T12:40:40.0392728Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0392831Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0392997Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0393069Z         """
2025-01-10T12:40:40.0393177Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0393312Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0393467Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0393633Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0393782Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0393916Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0394035Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0394160Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0394165Z 
2025-01-10T12:40:40.0394305Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0394433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0394438Z 
2025-01-10T12:40:40.0394872Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17af7e0>, array([11852.9138581 , 11852.9138581 , 11852.9138581 ,...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T12:40:40.0395019Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T12:40:40.0395283Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0395288Z 
2025-01-10T12:40:40.0395455Z     @wraps(func)
2025-01-10T12:40:40.0395544Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0395630Z         with self._recreate_cm():
2025-01-10T12:40:40.0395723Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0395809Z E           AssertionError: 
2025-01-10T12:40:40.0395925Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0396003Z E           
2025-01-10T12:40:40.0396193Z E           (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.0396350Z E            ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.0396472Z E                  12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.0396599Z E                  11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.0396757Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.0396876Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.0397002Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.0397007Z 
2025-01-10T12:40:40.0397214Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0397368Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0397892Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0398156Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0398321Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0398729Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0399184Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-10T12:40:40.0399195Z 
2025-01-10T12:40:40.0399701Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5250>
2025-01-10T12:40:40.0400241Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0400762Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-10T12:40:40.0400929Z attribute = 'plot_data'
2025-01-10T12:40:40.0400946Z 
2025-01-10T12:40:40.0401117Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0401262Z         "attribute",
2025-01-10T12:40:40.0401390Z         [
2025-01-10T12:40:40.0401539Z             "plot_data",
2025-01-10T12:40:40.0401681Z             "plot_colors",
2025-01-10T12:40:40.0401830Z             "new_bin_edges",
2025-01-10T12:40:40.0401957Z         ],
2025-01-10T12:40:40.0402085Z     )
2025-01-10T12:40:40.0402237Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0402366Z         self,
2025-01-10T12:40:40.0402508Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0402641Z         request,
2025-01-10T12:40:40.0402779Z         attribute,
2025-01-10T12:40:40.0402898Z     ):
2025-01-10T12:40:40.0403026Z         """
2025-01-10T12:40:40.0403269Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0403389Z     
2025-01-10T12:40:40.0403526Z         Parameters:
2025-01-10T12:40:40.0403657Z         -----------
2025-01-10T12:40:40.0403965Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0404137Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0404411Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0404537Z         """
2025-01-10T12:40:40.0404715Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0404953Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0405204Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0405479Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0405938Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0406394Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0406605Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0406813Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0406828Z 
2025-01-10T12:40:40.0407080Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0407272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0407281Z 
2025-01-10T12:40:40.0408110Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17acf40>, array([11061.80943238, 12248.18222883, 11489.53606278,...), array([13692.75973672, 11362.93720064, 12466.53861691, ...,
2025-01-10T12:40:40.0408302Z        12605.43283975, 11152.96259546, 11172.04481521]))
2025-01-10T12:40:40.0408739Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0408762Z 
2025-01-10T12:40:40.0408892Z     @wraps(func)
2025-01-10T12:40:40.0409045Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0409192Z         with self._recreate_cm():
2025-01-10T12:40:40.0409336Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0409689Z E           AssertionError: 
2025-01-10T12:40:40.0409870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0410004Z E           
2025-01-10T12:40:40.0410158Z E           (shapes (1435,), (1466,) mismatch)
2025-01-10T12:40:40.0410437Z E            ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-10T12:40:40.0410579Z E                  11383.689745, 11102.237019])
2025-01-10T12:40:40.0410844Z E            DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T12:40:40.0410982Z E                  11152.962595, 11172.044815])
2025-01-10T12:40:40.0410999Z 
2025-01-10T12:40:40.0411343Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0411607Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0412071Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0412682Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0412943Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0413566Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0413943Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-10T12:40:40.0413955Z 
2025-01-10T12:40:40.0414411Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5310>
2025-01-10T12:40:40.0414944Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0415449Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors]>>
2025-01-10T12:40:40.0415604Z attribute = 'plot_colors'
2025-01-10T12:40:40.0415621Z 
2025-01-10T12:40:40.0415781Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0415920Z         "attribute",
2025-01-10T12:40:40.0416042Z         [
2025-01-10T12:40:40.0416396Z             "plot_data",
2025-01-10T12:40:40.0416533Z             "plot_colors",
2025-01-10T12:40:40.0416673Z             "new_bin_edges",
2025-01-10T12:40:40.0416800Z         ],
2025-01-10T12:40:40.0416924Z     )
2025-01-10T12:40:40.0417079Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0417205Z         self,
2025-01-10T12:40:40.0417371Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0417498Z         request,
2025-01-10T12:40:40.0417636Z         attribute,
2025-01-10T12:40:40.0418021Z     ):
2025-01-10T12:40:40.0418159Z         """
2025-01-10T12:40:40.0418400Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0418536Z     
2025-01-10T12:40:40.0418683Z         Parameters:
2025-01-10T12:40:40.0418834Z         -----------
2025-01-10T12:40:40.0419169Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0419365Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0419664Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0419815Z         """
2025-01-10T12:40:40.0420020Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0420260Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0420529Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0420796Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0421064Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0421284Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0421500Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0421697Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0421892Z 
2025-01-10T12:40:40.0422139Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0422327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0422344Z 
2025-01-10T12:40:40.0422880Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17ad080>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-10T12:40:40.0423033Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-10T12:40:40.0423451Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0423470Z 
2025-01-10T12:40:40.0423610Z     @wraps(func)
2025-01-10T12:40:40.0423748Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0423899Z         with self._recreate_cm():
2025-01-10T12:40:40.0424039Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0424189Z E           AssertionError: 
2025-01-10T12:40:40.0424368Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0424502Z E           
2025-01-10T12:40:40.0424664Z E           (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.0424896Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0425068Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0425256Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0425391Z E                  0.      , 1.      ])
2025-01-10T12:40:40.0425622Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0425804Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0425995Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0426357Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.0426378Z 
2025-01-10T12:40:40.0426715Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0427089Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-10T12:40:40.0427098Z 
2025-01-10T12:40:40.0427535Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5490>
2025-01-10T12:40:40.0428035Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0428485Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-10T12:40:40.0428824Z attribute = 'plot_data'
2025-01-10T12:40:40.0428833Z 
2025-01-10T12:40:40.0428987Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0429113Z         "attribute",
2025-01-10T12:40:40.0429234Z         [
2025-01-10T12:40:40.0429361Z             "plot_data",
2025-01-10T12:40:40.0429513Z             "plot_colors",
2025-01-10T12:40:40.0429659Z             "new_bin_edges",
2025-01-10T12:40:40.0429772Z         ],
2025-01-10T12:40:40.0429887Z     )
2025-01-10T12:40:40.0430032Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0430173Z         self,
2025-01-10T12:40:40.0430323Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0430464Z         request,
2025-01-10T12:40:40.0430608Z         attribute,
2025-01-10T12:40:40.0430741Z     ):
2025-01-10T12:40:40.0430869Z         """
2025-01-10T12:40:40.0431108Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0431227Z     
2025-01-10T12:40:40.0431368Z         Parameters:
2025-01-10T12:40:40.0431511Z         -----------
2025-01-10T12:40:40.0431829Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0432002Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0432285Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0432613Z         """
2025-01-10T12:40:40.0432808Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0433047Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0433301Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0433572Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0433827Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0434061Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0434259Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0434469Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0434477Z 
2025-01-10T12:40:40.0434707Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0434898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0434913Z 
2025-01-10T12:40:40.0435714Z args = (<function assert_allclose.<locals>.compare at 0x7f22e17aec00>, array([11193.08324978, 13536.93126023, 11647.60804688,...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T12:40:40.0435907Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T12:40:40.0436520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0436535Z 
2025-01-10T12:40:40.0436663Z     @wraps(func)
2025-01-10T12:40:40.0436815Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0436955Z         with self._recreate_cm():
2025-01-10T12:40:40.0437117Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0437262Z E           AssertionError: 
2025-01-10T12:40:40.0437453Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0437570Z E           
2025-01-10T12:40:40.0437730Z E           (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.0438007Z E            ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.0438202Z E                  15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.0438409Z E                  11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.0438670Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.0438868Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.0439067Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.0439074Z 
2025-01-10T12:40:40.0439659Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0440005Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-10T12:40:40.0440025Z 
2025-01-10T12:40:40.0440448Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5670>
2025-01-10T12:40:40.0440935Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0441387Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-10T12:40:40.0441553Z attribute = 'plot_data'
2025-01-10T12:40:40.0441564Z 
2025-01-10T12:40:40.0441731Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0441872Z         "attribute",
2025-01-10T12:40:40.0441999Z         [
2025-01-10T12:40:40.0442140Z             "plot_data",
2025-01-10T12:40:40.0442268Z             "plot_colors",
2025-01-10T12:40:40.0442410Z             "new_bin_edges",
2025-01-10T12:40:40.0442537Z         ],
2025-01-10T12:40:40.0442662Z     )
2025-01-10T12:40:40.0442806Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0442934Z         self,
2025-01-10T12:40:40.0443087Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0443205Z         request,
2025-01-10T12:40:40.0443341Z         attribute,
2025-01-10T12:40:40.0443679Z     ):
2025-01-10T12:40:40.0443809Z         """
2025-01-10T12:40:40.0444031Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0444159Z     
2025-01-10T12:40:40.0444284Z         Parameters:
2025-01-10T12:40:40.0444420Z         -----------
2025-01-10T12:40:40.0444706Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0444882Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0445147Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0445272Z         """
2025-01-10T12:40:40.0445444Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0445704Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0445947Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0446460Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0446738Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0446954Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0447161Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0447370Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0447380Z 
2025-01-10T12:40:40.0447653Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0447838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0447846Z 
2025-01-10T12:40:40.0448605Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd6ade0>, array([11107.03324206, 11193.08324978, 13536.93126023,...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T12:40:40.0448788Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T12:40:40.0449218Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0449235Z 
2025-01-10T12:40:40.0449363Z     @wraps(func)
2025-01-10T12:40:40.0449508Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0449667Z         with self._recreate_cm():
2025-01-10T12:40:40.0449815Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0449986Z E           AssertionError: 
2025-01-10T12:40:40.0450173Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0450314Z E           
2025-01-10T12:40:40.0450469Z E           (shapes (367,), (379,) mismatch)
2025-01-10T12:40:40.0450733Z E            ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-10T12:40:40.0451157Z E                  11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-10T12:40:40.0451382Z E                  15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-10T12:40:40.0451639Z E            DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T12:40:40.0451838Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T12:40:40.0452068Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T12:40:40.0452077Z 
2025-01-10T12:40:40.0452407Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0452671Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0453117Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0453560Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0453808Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0454345Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0454719Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-10T12:40:40.0454943Z 
2025-01-10T12:40:40.0455394Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5760>
2025-01-10T12:40:40.0455893Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>
2025-01-10T12:40:40.0456541Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors]>>
2025-01-10T12:40:40.0456698Z attribute = 'plot_colors'
2025-01-10T12:40:40.0456706Z 
2025-01-10T12:40:40.0456859Z     @pytest.mark.parametrize(
2025-01-10T12:40:40.0456989Z         "attribute",
2025-01-10T12:40:40.0457118Z         [
2025-01-10T12:40:40.0457254Z             "plot_data",
2025-01-10T12:40:40.0457403Z             "plot_colors",
2025-01-10T12:40:40.0457529Z             "new_bin_edges",
2025-01-10T12:40:40.0457661Z         ],
2025-01-10T12:40:40.0457783Z     )
2025-01-10T12:40:40.0457937Z     def test_prepare_plot_data(
2025-01-10T12:40:40.0458072Z         self,
2025-01-10T12:40:40.0458251Z         plotter_prepare_plot_data,
2025-01-10T12:40:40.0458386Z         request,
2025-01-10T12:40:40.0458527Z         attribute,
2025-01-10T12:40:40.0458644Z     ):
2025-01-10T12:40:40.0458767Z         """
2025-01-10T12:40:40.0458991Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T12:40:40.0459114Z     
2025-01-10T12:40:40.0459243Z         Parameters:
2025-01-10T12:40:40.0459374Z         -----------
2025-01-10T12:40:40.0459664Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T12:40:40.0459833Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0460115Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T12:40:40.0460243Z         """
2025-01-10T12:40:40.0460427Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0460657Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T12:40:40.0460903Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T12:40:40.0461177Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T12:40:40.0461433Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T12:40:40.0461641Z                 plot_object = [item.value for item in plot_object]
2025-01-10T12:40:40.0461844Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T12:40:40.0462038Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T12:40:40.0462046Z 
2025-01-10T12:40:40.0462298Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T12:40:40.0462494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0462704Z 
2025-01-10T12:40:40.0463284Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd6aac0>, array([0.        , 0.        , 0.5       , 1.        ,...   1.        , 1.        , 0.40740741, 0.        , 1.        ,
2025-01-10T12:40:40.0463452Z        0.5       , 0.        , 0.        , 1.        ]))
2025-01-10T12:40:40.0463902Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0463913Z 
2025-01-10T12:40:40.0464044Z     @wraps(func)
2025-01-10T12:40:40.0464184Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0464328Z         with self._recreate_cm():
2025-01-10T12:40:40.0464462Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0464610Z E           AssertionError: 
2025-01-10T12:40:40.0464793Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0464910Z E           
2025-01-10T12:40:40.0465066Z E           (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.0465316Z E            ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0465499Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0465694Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0466217Z E                  0.      , 1.      ])
2025-01-10T12:40:40.0466481Z E            DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.0466665Z E                  1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.0466855Z E                  0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.0467031Z E                  0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.0467040Z 
2025-01-10T12:40:40.0467376Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0467705Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-01-10T12:40:40.0467723Z 
2025-01-10T12:40:40.0468174Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5af0>
2025-01-10T12:40:40.0468679Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e3686ff0>
2025-01-10T12:40:40.0469499Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0469886Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-01-10T12:40:40.0469904Z 
2025-01-10T12:40:40.0470054Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0470326Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0470448Z     ):
2025-01-10T12:40:40.0470576Z         """
2025-01-10T12:40:40.0470790Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0470930Z     
2025-01-10T12:40:40.0471134Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0471259Z     
2025-01-10T12:40:40.0471390Z         Parameters:
2025-01-10T12:40:40.0471538Z         -----------
2025-01-10T12:40:40.0471834Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0472097Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0472252Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0472375Z         """
2025-01-10T12:40:40.0472523Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0472708Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0472975Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0473228Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0473399Z             expected_values = expected.get(
2025-01-10T12:40:40.0473751Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0473904Z             ).values.flatten()
2025-01-10T12:40:40.0474137Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0474268Z     
2025-01-10T12:40:40.0474493Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0474672Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0474809Z                     expected_values,
2025-01-10T12:40:40.0474954Z                     actual_values,
2025-01-10T12:40:40.0475077Z                     rtol=0.3,
2025-01-10T12:40:40.0475211Z                     atol=3,
2025-01-10T12:40:40.0475329Z                 )
2025-01-10T12:40:40.0475347Z 
2025-01-10T12:40:40.0475578Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0475794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0475803Z 
2025-01-10T12:40:40.0476638Z args = (<function assert_allclose.<locals>.compare at 0x7f22e3b8b1a0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0476799Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0477177Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0477371Z 
2025-01-10T12:40:40.0477503Z     @wraps(func)
2025-01-10T12:40:40.0477633Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0477771Z         with self._recreate_cm():
2025-01-10T12:40:40.0477912Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0478046Z E           AssertionError: 
2025-01-10T12:40:40.0478224Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0478338Z E           
2025-01-10T12:40:40.0478496Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0478690Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0478926Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0479200Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0479355Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0479619Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0479798Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0479807Z 
2025-01-10T12:40:40.0480171Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0480438Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0480867Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0481567Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-01-10T12:40:40.0481844Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0482563Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T12:40:40.0482907Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-01-10T12:40:40.0482926Z 
2025-01-10T12:40:40.0483367Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5bb0>
2025-01-10T12:40:40.0483881Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22dbb099a0>
2025-01-10T12:40:40.0484709Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0485102Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-01-10T12:40:40.0485111Z 
2025-01-10T12:40:40.0485460Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0485713Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0485845Z     ):
2025-01-10T12:40:40.0485968Z         """
2025-01-10T12:40:40.0486383Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0486513Z     
2025-01-10T12:40:40.0486744Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0486892Z     
2025-01-10T12:40:40.0487038Z         Parameters:
2025-01-10T12:40:40.0487176Z         -----------
2025-01-10T12:40:40.0487455Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0487713Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0487875Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0488000Z         """
2025-01-10T12:40:40.0488159Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0488350Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0488628Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0488875Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0489044Z             expected_values = expected.get(
2025-01-10T12:40:40.0489195Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0489533Z             ).values.flatten()
2025-01-10T12:40:40.0489759Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0489884Z     
2025-01-10T12:40:40.0490104Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0490276Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0490411Z                     expected_values,
2025-01-10T12:40:40.0490552Z                     actual_values,
2025-01-10T12:40:40.0490678Z                     rtol=0.3,
2025-01-10T12:40:40.0490811Z                     atol=3,
2025-01-10T12:40:40.0490943Z                 )
2025-01-10T12:40:40.0490962Z 
2025-01-10T12:40:40.0491222Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0491408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0491415Z 
2025-01-10T12:40:40.0492039Z args = (<function assert_allclose.<locals>.compare at 0x7f22c4abcd60>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0492183Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0492574Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0492583Z 
2025-01-10T12:40:40.0492725Z     @wraps(func)
2025-01-10T12:40:40.0492871Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0493031Z         with self._recreate_cm():
2025-01-10T12:40:40.0493194Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0493351Z E           AssertionError: 
2025-01-10T12:40:40.0493541Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0493672Z E           
2025-01-10T12:40:40.0493833Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0494034Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0494253Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0494517Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0494682Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0494932Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0495087Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0495097Z 
2025-01-10T12:40:40.0495424Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0495773Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-10T12:40:40.0495979Z 
2025-01-10T12:40:40.0496623Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba5fa0>
2025-01-10T12:40:40.0497179Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22cb476db0>
2025-01-10T12:40:40.0497969Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0498392Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-10T12:40:40.0498404Z 
2025-01-10T12:40:40.0498573Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0498838Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0499031Z     ):
2025-01-10T12:40:40.0499163Z         """
2025-01-10T12:40:40.0499393Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0499683Z     
2025-01-10T12:40:40.0500022Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0500189Z     
2025-01-10T12:40:40.0500643Z         Parameters:
2025-01-10T12:40:40.0500853Z         -----------
2025-01-10T12:40:40.0501255Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0501554Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0502029Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0502182Z         """
2025-01-10T12:40:40.0502571Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0502805Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0503178Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0503478Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0503717Z             expected_values = expected.get(
2025-01-10T12:40:40.0504085Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0504292Z             ).values.flatten()
2025-01-10T12:40:40.0518956Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0519136Z     
2025-01-10T12:40:40.0519380Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0519566Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0519728Z                     expected_values,
2025-01-10T12:40:40.0519875Z                     actual_values,
2025-01-10T12:40:40.0520020Z                     rtol=0.3,
2025-01-10T12:40:40.0520149Z                     atol=3,
2025-01-10T12:40:40.0520289Z                 )
2025-01-10T12:40:40.0520299Z 
2025-01-10T12:40:40.0520557Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0520772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0520781Z 
2025-01-10T12:40:40.0521446Z args = (<function assert_allclose.<locals>.compare at 0x7f22e8f4f240>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0521616Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-10T12:40:40.0522024Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0522052Z 
2025-01-10T12:40:40.0522187Z     @wraps(func)
2025-01-10T12:40:40.0522337Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0522487Z         with self._recreate_cm():
2025-01-10T12:40:40.0522643Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0522788Z E           AssertionError: 
2025-01-10T12:40:40.0522974Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0523098Z E           
2025-01-10T12:40:40.0523267Z E           Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.0523475Z E           Max absolute difference among violations: 18
2025-01-10T12:40:40.0523698Z E           Max relative difference among violations: 0.5
2025-01-10T12:40:40.0524183Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.0524342Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.0524611Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0524775Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.0524782Z 
2025-01-10T12:40:40.0525136Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0525423Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0525878Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0526512Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0526791Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0527297Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0527669Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-10T12:40:40.0527678Z 
2025-01-10T12:40:40.0528119Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba6060>
2025-01-10T12:40:40.0528847Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22b29da180>
2025-01-10T12:40:40.0529671Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0530095Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-10T12:40:40.0530105Z 
2025-01-10T12:40:40.0530266Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0530535Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0530691Z     ):
2025-01-10T12:40:40.0530827Z         """
2025-01-10T12:40:40.0531056Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0531190Z     
2025-01-10T12:40:40.0531396Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0531523Z     
2025-01-10T12:40:40.0531665Z         Parameters:
2025-01-10T12:40:40.0531800Z         -----------
2025-01-10T12:40:40.0532055Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0532299Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0532466Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0532601Z         """
2025-01-10T12:40:40.0532755Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0532945Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0533213Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0533464Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0533643Z             expected_values = expected.get(
2025-01-10T12:40:40.0533807Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0533954Z             ).values.flatten()
2025-01-10T12:40:40.0534175Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0534305Z     
2025-01-10T12:40:40.0534528Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0534699Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0534837Z                     expected_values,
2025-01-10T12:40:40.0534975Z                     actual_values,
2025-01-10T12:40:40.0535106Z                     rtol=0.3,
2025-01-10T12:40:40.0535244Z                     atol=3,
2025-01-10T12:40:40.0535369Z                 )
2025-01-10T12:40:40.0535376Z 
2025-01-10T12:40:40.0535628Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T12:40:40.0535818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0536041Z 
2025-01-10T12:40:40.0536932Z args = (<function assert_allclose.<locals>.compare at 0x7f22d66e7060>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0537092Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0537476Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0537485Z 
2025-01-10T12:40:40.0537622Z     @wraps(func)
2025-01-10T12:40:40.0537763Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0537916Z         with self._recreate_cm():
2025-01-10T12:40:40.0538068Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0538219Z E           AssertionError: 
2025-01-10T12:40:40.0538399Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0538526Z E           
2025-01-10T12:40:40.0538689Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0538925Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0539158Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0539405Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0539806Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0540061Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0540219Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0540227Z 
2025-01-10T12:40:40.0540551Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0540825Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0541230Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0541791Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0542065Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0542644Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0542992Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _______
2025-01-10T12:40:40.0543002Z 
2025-01-10T12:40:40.0543450Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba61e0>
2025-01-10T12:40:40.0543940Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22f0cf1c40>
2025-01-10T12:40:40.0544675Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0545107Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl7]>>
2025-01-10T12:40:40.0545116Z 
2025-01-10T12:40:40.0545278Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0545543Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T12:40:40.0545682Z     ):
2025-01-10T12:40:40.0545809Z         """
2025-01-10T12:40:40.0546049Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0546344Z     
2025-01-10T12:40:40.0546579Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0546699Z     
2025-01-10T12:40:40.0546839Z         Parameters:
2025-01-10T12:40:40.0546964Z         -----------
2025-01-10T12:40:40.0547231Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T12:40:40.0547477Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T12:40:40.0547644Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0548076Z         """
2025-01-10T12:40:40.0548242Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T12:40:40.0548422Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0548694Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T12:40:40.0548940Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0549111Z             expected_values = expected.get(
2025-01-10T12:40:40.0549271Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0549410Z             ).values.flatten()
2025-01-10T12:40:40.0549633Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T12:40:40.0549746Z     
2025-01-10T12:40:40.0549969Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0550136Z                 np.testing.assert_allclose(
2025-01-10T12:40:40.0550277Z                     expected_values,
2025-01-10T12:40:40.0550418Z                     actual_values,
2025-01-10T12:40:40.0550570Z                     rtol=0.3,
2025-01-10T12:40:40.0550708Z                     atol=3,
2025-01-10T12:40:40.0550826Z                 )
2025-01-10T12:40:40.0550955Z             else:
2025-01-10T12:40:40.0551181Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T12:40:40.0551322Z     
2025-01-10T12:40:40.0551695Z         labels = expected["plot_data_hdf/scalars"]
2025-01-10T12:40:40.0551910Z         for index1, data in enumerate(fig.get_children()):
2025-01-10T12:40:40.0552072Z             if isinstance(data.get_label(), str):
2025-01-10T12:40:40.0552199Z                 assert (
2025-01-10T12:40:40.0552388Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-10T12:40:40.0552530Z                     == data.get_label()
2025-01-10T12:40:40.0552648Z                 )
2025-01-10T12:40:40.0552803Z             if isinstance(data, Line2D):
2025-01-10T12:40:40.0552969Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0553120Z                     data.get_xydata(),
2025-01-10T12:40:40.0553362Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-10T12:40:40.0553496Z                     rtol=0.3,
2025-01-10T12:40:40.0553640Z                     atol=3,
2025-01-10T12:40:40.0553770Z                 )
2025-01-10T12:40:40.0553779Z 
2025-01-10T12:40:40.0554041Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-10T12:40:40.0554228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0554236Z 
2025-01-10T12:40:40.0554646Z args = (<function assert_allclose.<locals>.compare at 0x7f22c374a3e0>, array([[1.10e+04, 6.00e+01],
2025-01-10T12:40:40.0554779Z        [1.19e+04, 6.00e+0...,
2025-01-10T12:40:40.0554915Z        [1.82e+04, 0.00e+00],
2025-01-10T12:40:40.0555035Z        [1.91e+04, 0.00e+00],
2025-01-10T12:40:40.0555167Z        [1.91e+04, 0.00e+00],
2025-01-10T12:40:40.0555294Z        [2.00e+04, 0.00e+00]]))
2025-01-10T12:40:40.0555721Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0555737Z 
2025-01-10T12:40:40.0555869Z     @wraps(func)
2025-01-10T12:40:40.0556005Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0556593Z         with self._recreate_cm():
2025-01-10T12:40:40.0556769Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0556898Z E           AssertionError: 
2025-01-10T12:40:40.0557038Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0557134Z E           
2025-01-10T12:40:40.0557256Z E           Mismatched elements: 12 / 40 (30%)
2025-01-10T12:40:40.0557412Z E           Max absolute difference among violations: 58.
2025-01-10T12:40:40.0557552Z E           Max relative difference among violations: 30.
2025-01-10T12:40:40.0557672Z E            ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-10T12:40:40.0557774Z E                  [1.19e+04, 6.00e+01],
2025-01-10T12:40:40.0557882Z E                  [1.19e+04, 3.10e+01],...
2025-01-10T12:40:40.0558200Z E            DESIRED: array([[1.10e+04, 2.00e+00],
2025-01-10T12:40:40.0558302Z E                  [1.19e+04, 2.00e+00],
2025-01-10T12:40:40.0558408Z E                  [1.19e+04, 1.00e+00],...
2025-01-10T12:40:40.0558413Z 
2025-01-10T12:40:40.0558800Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0559071Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0559422Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0559738Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0559923Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0560305Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0560554Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-01-10T12:40:40.0560567Z 
2025-01-10T12:40:40.0560885Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba6f00>
2025-01-10T12:40:40.0561277Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e0590680>
2025-01-10T12:40:40.0561542Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0561736Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0561899Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0562149Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0562445Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-01-10T12:40:40.0562461Z 
2025-01-10T12:40:40.0562630Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0562926Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0563079Z     ):
2025-01-10T12:40:40.0563179Z         """
2025-01-10T12:40:40.0563339Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0563431Z     
2025-01-10T12:40:40.0563583Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0563675Z     
2025-01-10T12:40:40.0563777Z         Parameters:
2025-01-10T12:40:40.0563875Z         ----------
2025-01-10T12:40:40.0564067Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0564236Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0564352Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0564444Z         """
2025-01-10T12:40:40.0564558Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0564691Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0564908Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0564994Z     
2025-01-10T12:40:40.0565179Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0565301Z             expected_values = expected.get(
2025-01-10T12:40:40.0565413Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0565517Z             ).values.flatten()
2025-01-10T12:40:40.0565690Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0565780Z     
2025-01-10T12:40:40.0565941Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0566259Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0566439Z                     expected_values,
2025-01-10T12:40:40.0566541Z                     actual_values,
2025-01-10T12:40:40.0566641Z                     rtol=0.3,
2025-01-10T12:40:40.0566732Z                     atol=3,
2025-01-10T12:40:40.0566825Z                 )
2025-01-10T12:40:40.0566829Z 
2025-01-10T12:40:40.0567012Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0567296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0567300Z 
2025-01-10T12:40:40.0567912Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd82ac0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0568067Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0568429Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0568435Z 
2025-01-10T12:40:40.0568526Z     @wraps(func)
2025-01-10T12:40:40.0568631Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0568736Z         with self._recreate_cm():
2025-01-10T12:40:40.0568850Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0568958Z E           AssertionError: 
2025-01-10T12:40:40.0569089Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0569184Z E           
2025-01-10T12:40:40.0569306Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0569454Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0569612Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0569807Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0570078Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0570273Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0570376Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0570380Z 
2025-01-10T12:40:40.0570635Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0570830Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0571122Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0571647Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-01-10T12:40:40.0571830Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0572372Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T12:40:40.0572622Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-01-10T12:40:40.0572627Z 
2025-01-10T12:40:40.0573069Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba6fc0>
2025-01-10T12:40:40.0573522Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e3bffb30>
2025-01-10T12:40:40.0573632Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0573798Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0573946Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0574171Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0574422Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-01-10T12:40:40.0574434Z 
2025-01-10T12:40:40.0574532Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0574715Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0574788Z     ):
2025-01-10T12:40:40.0574872Z         """
2025-01-10T12:40:40.0575007Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0575086Z     
2025-01-10T12:40:40.0575222Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0575296Z     
2025-01-10T12:40:40.0575385Z         Parameters:
2025-01-10T12:40:40.0575466Z         ----------
2025-01-10T12:40:40.0575632Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0575879Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0575986Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0576192Z         """
2025-01-10T12:40:40.0576305Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0576414Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0576608Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0576681Z     
2025-01-10T12:40:40.0576838Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0576938Z             expected_values = expected.get(
2025-01-10T12:40:40.0577035Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0577129Z             ).values.flatten()
2025-01-10T12:40:40.0577268Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0577344Z     
2025-01-10T12:40:40.0577482Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0577588Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0577675Z                     expected_values,
2025-01-10T12:40:40.0577763Z                     actual_values,
2025-01-10T12:40:40.0577846Z                     rtol=0.3,
2025-01-10T12:40:40.0577925Z                     atol=3,
2025-01-10T12:40:40.0578124Z                 )
2025-01-10T12:40:40.0578129Z 
2025-01-10T12:40:40.0578284Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0578405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0578416Z 
2025-01-10T12:40:40.0578957Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd839c0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0579069Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0579433Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0579447Z 
2025-01-10T12:40:40.0579536Z     @wraps(func)
2025-01-10T12:40:40.0579625Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0579721Z         with self._recreate_cm():
2025-01-10T12:40:40.0579813Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0579916Z E           AssertionError: 
2025-01-10T12:40:40.0580025Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0580107Z E           
2025-01-10T12:40:40.0580204Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0580333Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0580470Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0580629Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0580729Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0580888Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0580988Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0580992Z 
2025-01-10T12:40:40.0581204Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0581415Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-10T12:40:40.0581424Z 
2025-01-10T12:40:40.0581688Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba73e0>
2025-01-10T12:40:40.0582010Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22b29b07d0>
2025-01-10T12:40:40.0582113Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0582262Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0582404Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0582604Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0583013Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-10T12:40:40.0583018Z 
2025-01-10T12:40:40.0583112Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0583288Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0583368Z     ):
2025-01-10T12:40:40.0583453Z         """
2025-01-10T12:40:40.0583593Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0583665Z     
2025-01-10T12:40:40.0583803Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0583877Z     
2025-01-10T12:40:40.0583966Z         Parameters:
2025-01-10T12:40:40.0584045Z         ----------
2025-01-10T12:40:40.0584211Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0584396Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0584584Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0584679Z         """
2025-01-10T12:40:40.0584853Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0584995Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0585183Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0585355Z     
2025-01-10T12:40:40.0585509Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0585619Z             expected_values = expected.get(
2025-01-10T12:40:40.0585709Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0585808Z             ).values.flatten()
2025-01-10T12:40:40.0585953Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0586036Z     
2025-01-10T12:40:40.0586281Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0586385Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0586470Z                     expected_values,
2025-01-10T12:40:40.0586571Z                     actual_values,
2025-01-10T12:40:40.0586652Z                     rtol=0.3,
2025-01-10T12:40:40.0586737Z                     atol=3,
2025-01-10T12:40:40.0586812Z                 )
2025-01-10T12:40:40.0586816Z 
2025-01-10T12:40:40.0586977Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0587111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0587122Z 
2025-01-10T12:40:40.0587537Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd279c0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0587629Z          1,   0,   0,   5,   5,   0,   0]))
2025-01-10T12:40:40.0587883Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0587888Z 
2025-01-10T12:40:40.0587974Z     @wraps(func)
2025-01-10T12:40:40.0588065Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0588159Z         with self._recreate_cm():
2025-01-10T12:40:40.0588249Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0588343Z E           AssertionError: 
2025-01-10T12:40:40.0588450Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0588600Z E           
2025-01-10T12:40:40.0588786Z E           Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.0588955Z E           Max absolute difference among violations: 18
2025-01-10T12:40:40.0589143Z E           Max relative difference among violations: 0.5
2025-01-10T12:40:40.0589308Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.0589406Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.0589565Z E            DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.0589660Z E                    1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.0589804Z 
2025-01-10T12:40:40.0590015Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0590175Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0590428Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0590688Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0590848Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0591148Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0591354Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-10T12:40:40.0591359Z 
2025-01-10T12:40:40.0591616Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba74d0>
2025-01-10T12:40:40.0591941Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22c6c1ddc0>
2025-01-10T12:40:40.0592046Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0592211Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0592354Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0592672Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0592950Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-10T12:40:40.0592955Z 
2025-01-10T12:40:40.0593046Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0593218Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0593291Z     ):
2025-01-10T12:40:40.0593369Z         """
2025-01-10T12:40:40.0593498Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0593577Z     
2025-01-10T12:40:40.0593711Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0593790Z     
2025-01-10T12:40:40.0593869Z         Parameters:
2025-01-10T12:40:40.0593954Z         ----------
2025-01-10T12:40:40.0594126Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0594379Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0594525Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0594663Z         """
2025-01-10T12:40:40.0594806Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0594918Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0595107Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0595183Z     
2025-01-10T12:40:40.0595336Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0595434Z             expected_values = expected.get(
2025-01-10T12:40:40.0595529Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0595622Z             ).values.flatten()
2025-01-10T12:40:40.0595768Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0595841Z     
2025-01-10T12:40:40.0595980Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0596203Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0596298Z                     expected_values,
2025-01-10T12:40:40.0596390Z                     actual_values,
2025-01-10T12:40:40.0596470Z                     rtol=0.3,
2025-01-10T12:40:40.0596555Z                     atol=3,
2025-01-10T12:40:40.0596630Z                 )
2025-01-10T12:40:40.0596634Z 
2025-01-10T12:40:40.0596785Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T12:40:40.0596901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0596905Z 
2025-01-10T12:40:40.0597310Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd27740>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  1...]), array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0597536Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T12:40:40.0597788Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0597796Z 
2025-01-10T12:40:40.0597879Z     @wraps(func)
2025-01-10T12:40:40.0597967Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0598059Z         with self._recreate_cm():
2025-01-10T12:40:40.0598148Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0598306Z E           AssertionError: 
2025-01-10T12:40:40.0598480Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0598566Z E           
2025-01-10T12:40:40.0598736Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.0598870Z E           Max absolute difference among violations: 30
2025-01-10T12:40:40.0599002Z E           Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.0599173Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.0599269Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.0599427Z E            DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.0599680Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.0599686Z 
2025-01-10T12:40:40.0599894Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0600055Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0600302Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0600654Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0600808Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0601186Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0601394Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _______
2025-01-10T12:40:40.0601405Z 
2025-01-10T12:40:40.0601667Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f22f6ba7650>
2025-01-10T12:40:40.0601991Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f22e1fd40e0>
2025-01-10T12:40:40.0602098Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0602264Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T12:40:40.0602403Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T12:40:40.0602616Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f22d60b49b0>)
2025-01-10T12:40:40.0602872Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply7]>>
2025-01-10T12:40:40.0602877Z 
2025-01-10T12:40:40.0602966Z     def test_generate_plot_ply(
2025-01-10T12:40:40.0603145Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0603223Z     ):
2025-01-10T12:40:40.0603302Z         """
2025-01-10T12:40:40.0603436Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T12:40:40.0603513Z     
2025-01-10T12:40:40.0603643Z         Compares generated plot data with regression data.
2025-01-10T12:40:40.0603720Z     
2025-01-10T12:40:40.0603801Z         Parameters:
2025-01-10T12:40:40.0603885Z         ----------
2025-01-10T12:40:40.0604047Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T12:40:40.0604225Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T12:40:40.0604404Z         request: Pytest's request fixture.
2025-01-10T12:40:40.0604633Z         """
2025-01-10T12:40:40.0604767Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0604886Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0605074Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0605147Z     
2025-01-10T12:40:40.0605301Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T12:40:40.0605408Z             expected_values = expected.get(
2025-01-10T12:40:40.0605504Z                 "plot_data_hdf/" + item
2025-01-10T12:40:40.0605592Z             ).values.flatten()
2025-01-10T12:40:40.0605742Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T12:40:40.0605815Z     
2025-01-10T12:40:40.0605959Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T12:40:40.0606229Z                 np.testing.assert_allclose(
2025-01-10T12:40:40.0606390Z                     expected_values,
2025-01-10T12:40:40.0606504Z                     actual_values,
2025-01-10T12:40:40.0606604Z                     rtol=0.3,
2025-01-10T12:40:40.0606688Z                     atol=3,
2025-01-10T12:40:40.0606764Z                 )
2025-01-10T12:40:40.0606851Z             else:
2025-01-10T12:40:40.0606998Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T12:40:40.0607254Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0607362Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0607458Z             if data.stackgroup:
2025-01-10T12:40:40.0607538Z                 assert (
2025-01-10T12:40:40.0607630Z                     data.stackgroup
2025-01-10T12:40:40.0607708Z                     == getattr(
2025-01-10T12:40:40.0607826Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0607930Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0608017Z                     ).decode()
2025-01-10T12:40:40.0608092Z                 )
2025-01-10T12:40:40.0608184Z             if data.name:
2025-01-10T12:40:40.0608268Z                 assert (
2025-01-10T12:40:40.0608347Z                     data.name
2025-01-10T12:40:40.0608430Z                     == getattr(
2025-01-10T12:40:40.0608534Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0608638Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0608723Z                     ).decode()
2025-01-10T12:40:40.0608807Z                 )
2025-01-10T12:40:40.0608905Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0608986Z                 data.x,
2025-01-10T12:40:40.0609101Z                 expected.get(group + "x").values.flatten(),
2025-01-10T12:40:40.0609192Z                 rtol=0.3,
2025-01-10T12:40:40.0609267Z                 atol=3,
2025-01-10T12:40:40.0609349Z             )
2025-01-10T12:40:40.0609443Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0609528Z                 data.y,
2025-01-10T12:40:40.0609635Z                 expected.get(group + "y").values.flatten(),
2025-01-10T12:40:40.0609724Z                 rtol=0.3,
2025-01-10T12:40:40.0609831Z                 atol=3,
2025-01-10T12:40:40.0609966Z             )
2025-01-10T12:40:40.0609975Z 
2025-01-10T12:40:40.0610197Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-10T12:40:40.0610410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0610423Z 
2025-01-10T12:40:40.0610772Z args = (<function assert_allclose.<locals>.compare at 0x7f22abd26c00>, array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-10T12:40:40.0610905Z         1,  0,  0]), array([2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
2025-01-10T12:40:40.0611178Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T12:40:40.0611183Z 
2025-01-10T12:40:40.0611267Z     @wraps(func)
2025-01-10T12:40:40.0611354Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0611587Z         with self._recreate_cm():
2025-01-10T12:40:40.0611683Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0611780Z E           AssertionError: 
2025-01-10T12:40:40.0611887Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.0611970Z E           
2025-01-10T12:40:40.0612074Z E           Mismatched elements: 12 / 20 (60%)
2025-01-10T12:40:40.0612198Z E           Max absolute difference among violations: 58
2025-01-10T12:40:40.0612316Z E           Max relative difference among violations: 30.
2025-01-10T12:40:40.0612476Z E            ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-10T12:40:40.0612555Z E                   1,  0,  0])
2025-01-10T12:40:40.0612711Z E            DESIRED: array([2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T12:40:40.0612716Z 
2025-01-10T12:40:40.0612931Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0613100Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T12:40:40.0613355Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T12:40:40.0613609Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T12:40:40.0613764Z ------------------------------ Captured log setup ------------------------------
2025-01-10T12:40:40.0614158Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T12:40:40.0614389Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-10T12:40:40.0614394Z 
2025-01-10T12:40:40.0614660Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1ae40>
2025-01-10T12:40:40.0614979Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0615392Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e8fc2f90>
2025-01-10T12:40:40.0615855Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-10T12:40:40.0615864Z 
2025-01-10T12:40:40.0615973Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0616216Z         self,
2025-01-10T12:40:40.0616341Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0616435Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0616517Z         request,
2025-01-10T12:40:40.0616589Z     ):
2025-01-10T12:40:40.0616710Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0616901Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0616997Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0617186Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0617282Z             plot_object = getattr(
2025-01-10T12:40:40.0617426Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0617501Z             )
2025-01-10T12:40:40.0617609Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0617773Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0617890Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0617995Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0618130Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0618206Z                 )
2025-01-10T12:40:40.0618210Z 
2025-01-10T12:40:40.0618369Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0618487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0618497Z 
2025-01-10T12:40:40.0618971Z args = (<function assert_allclose.<locals>.compare at 0x7f22e176bba0>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0619220Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0619485Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0619490Z 
2025-01-10T12:40:40.0619578Z     @wraps(func)
2025-01-10T12:40:40.0619664Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0619759Z         with self._recreate_cm():
2025-01-10T12:40:40.0619850Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0619944Z E           AssertionError: 
2025-01-10T12:40:40.0620058Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0620139Z E           
2025-01-10T12:40:40.0620246Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0620392Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0620525Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0620703Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0620801Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0620971Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0621066Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0621184Z 
2025-01-10T12:40:40.0621491Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0621861Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-10T12:40:40.0621874Z 
2025-01-10T12:40:40.0622172Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1b530>
2025-01-10T12:40:40.0622493Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0622831Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c1642c30>
2025-01-10T12:40:40.0623116Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-10T12:40:40.0623121Z 
2025-01-10T12:40:40.0623224Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0623301Z         self,
2025-01-10T12:40:40.0623410Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0623502Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0623590Z         request,
2025-01-10T12:40:40.0623665Z     ):
2025-01-10T12:40:40.0623784Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0623974Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0624071Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0624253Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0624341Z             plot_object = getattr(
2025-01-10T12:40:40.0624474Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0624552Z             )
2025-01-10T12:40:40.0624661Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0624824Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0624941Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0625042Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0625176Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0625250Z                 )
2025-01-10T12:40:40.0625262Z 
2025-01-10T12:40:40.0625411Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0625536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0625541Z 
2025-01-10T12:40:40.0626010Z args = (<function assert_allclose.<locals>.compare at 0x7f22e176aa20>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0626384Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0626648Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0626653Z 
2025-01-10T12:40:40.0626738Z     @wraps(func)
2025-01-10T12:40:40.0626829Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0626921Z         with self._recreate_cm():
2025-01-10T12:40:40.0627016Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0627102Z E           AssertionError: 
2025-01-10T12:40:40.0627216Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0627293Z E           
2025-01-10T12:40:40.0627402Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0627571Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0627827Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0628043Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0628214Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0628391Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0628484Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0628626Z 
2025-01-10T12:40:40.0628842Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0629068Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-10T12:40:40.0629073Z 
2025-01-10T12:40:40.0629354Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1b9e0>
2025-01-10T12:40:40.0629668Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0630000Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c16408f0>
2025-01-10T12:40:40.0630284Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-10T12:40:40.0630289Z 
2025-01-10T12:40:40.0630388Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0630462Z         self,
2025-01-10T12:40:40.0630569Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0630671Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0630748Z         request,
2025-01-10T12:40:40.0630826Z     ):
2025-01-10T12:40:40.0630934Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0631122Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0631211Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0631394Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0631482Z             plot_object = getattr(
2025-01-10T12:40:40.0631706Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0631838Z             )
2025-01-10T12:40:40.0632223Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0632564Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0632695Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0632803Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0632949Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0633028Z                 )
2025-01-10T12:40:40.0633032Z 
2025-01-10T12:40:40.0633185Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0633306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0633310Z 
2025-01-10T12:40:40.0633784Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b1620>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0633894Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0634368Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0634381Z 
2025-01-10T12:40:40.0634458Z     @wraps(func)
2025-01-10T12:40:40.0634551Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0634645Z         with self._recreate_cm():
2025-01-10T12:40:40.0634740Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0634828Z E           AssertionError: 
2025-01-10T12:40:40.0634944Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0635019Z E           
2025-01-10T12:40:40.0635129Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0635275Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0635410Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0635683Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0635847Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0636283Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0636417Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0636423Z 
2025-01-10T12:40:40.0636793Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0637021Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-10T12:40:40.0637025Z 
2025-01-10T12:40:40.0637301Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bad0>
2025-01-10T12:40:40.0637615Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0637945Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e126df40>
2025-01-10T12:40:40.0638224Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-10T12:40:40.0638240Z 
2025-01-10T12:40:40.0638338Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0638419Z         self,
2025-01-10T12:40:40.0638517Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0638615Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0638696Z         request,
2025-01-10T12:40:40.0638780Z     ):
2025-01-10T12:40:40.0638891Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0639078Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0639166Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0639347Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0639434Z             plot_object = getattr(
2025-01-10T12:40:40.0639567Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0639646Z             )
2025-01-10T12:40:40.0639844Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0640088Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0640283Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0640400Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0640542Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0640622Z                 )
2025-01-10T12:40:40.0640627Z 
2025-01-10T12:40:40.0640775Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0640896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0640901Z 
2025-01-10T12:40:40.0641370Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b2a20>, array([1.52915501e-06, 1.14259976e-06, 1.97184927e-06,...), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T12:40:40.0641482Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0641881Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0641886Z 
2025-01-10T12:40:40.0641962Z     @wraps(func)
2025-01-10T12:40:40.0642052Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0642141Z         with self._recreate_cm():
2025-01-10T12:40:40.0642241Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0642329Z E           AssertionError: 
2025-01-10T12:40:40.0642447Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0642522Z E           
2025-01-10T12:40:40.0642631Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0642772Z E           Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.0642910Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0643080Z E            ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0643179Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0643353Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0643440Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0643444Z 
2025-01-10T12:40:40.0643652Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0643958Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-10T12:40:40.0643963Z 
2025-01-10T12:40:40.0644239Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bb90>
2025-01-10T12:40:40.0644546Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0644880Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e126c9e0>
2025-01-10T12:40:40.0645162Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-10T12:40:40.0645172Z 
2025-01-10T12:40:40.0645265Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0645344Z         self,
2025-01-10T12:40:40.0645442Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0645537Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0645616Z         request,
2025-01-10T12:40:40.0645693Z     ):
2025-01-10T12:40:40.0645801Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0645987Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0646226Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0646413Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0646506Z             plot_object = getattr(
2025-01-10T12:40:40.0646632Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0646710Z             )
2025-01-10T12:40:40.0646809Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0646980Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0647088Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0647191Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0647318Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0647402Z                 )
2025-01-10T12:40:40.0647406Z 
2025-01-10T12:40:40.0647554Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0647671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0647676Z 
2025-01-10T12:40:40.0648148Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009e480>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0648251Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0648662Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0648851Z 
2025-01-10T12:40:40.0648985Z     @wraps(func)
2025-01-10T12:40:40.0649081Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0649172Z         with self._recreate_cm():
2025-01-10T12:40:40.0649273Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0649360Z E           AssertionError: 
2025-01-10T12:40:40.0649476Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0649551Z E           
2025-01-10T12:40:40.0649657Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0649802Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0649942Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0650115Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0650206Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0650384Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0650470Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0650475Z 
2025-01-10T12:40:40.0650685Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0651027Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-10T12:40:40.0651032Z 
2025-01-10T12:40:40.0651309Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bc50>
2025-01-10T12:40:40.0651623Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0651951Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22b29661e0>
2025-01-10T12:40:40.0652236Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-10T12:40:40.0652247Z 
2025-01-10T12:40:40.0652343Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0652422Z         self,
2025-01-10T12:40:40.0652521Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0652621Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0652696Z         request,
2025-01-10T12:40:40.0652779Z     ):
2025-01-10T12:40:40.0652885Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0653070Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0653163Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0653338Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0653429Z             plot_object = getattr(
2025-01-10T12:40:40.0653553Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0653682Z             )
2025-01-10T12:40:40.0653865Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0654122Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0654298Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0654405Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0654534Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0654619Z                 )
2025-01-10T12:40:40.0654623Z 
2025-01-10T12:40:40.0654769Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0654888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0654893Z 
2025-01-10T12:40:40.0655362Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cd60>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0655463Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0655725Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0655825Z 
2025-01-10T12:40:40.0655903Z     @wraps(func)
2025-01-10T12:40:40.0655992Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0656191Z         with self._recreate_cm():
2025-01-10T12:40:40.0656292Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0656382Z E           AssertionError: 
2025-01-10T12:40:40.0656495Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0656573Z E           
2025-01-10T12:40:40.0656671Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0656813Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0656952Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0657125Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0657213Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0657386Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0657479Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0657483Z 
2025-01-10T12:40:40.0657685Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0657908Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-10T12:40:40.0658038Z 
2025-01-10T12:40:40.0658305Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bd10>
2025-01-10T12:40:40.0658617Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0658938Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e126f380>
2025-01-10T12:40:40.0659220Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-10T12:40:40.0659225Z 
2025-01-10T12:40:40.0659324Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0659404Z         self,
2025-01-10T12:40:40.0659546Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0659720Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0659841Z         request,
2025-01-10T12:40:40.0659937Z     ):
2025-01-10T12:40:40.0660142Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0660326Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0660418Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0660589Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0660681Z             plot_object = getattr(
2025-01-10T12:40:40.0660804Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0660882Z             )
2025-01-10T12:40:40.0660980Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0661146Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0661258Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0661359Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0661488Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0661567Z                 )
2025-01-10T12:40:40.0661575Z 
2025-01-10T12:40:40.0661731Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0661846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0661850Z 
2025-01-10T12:40:40.0662316Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009c400>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0662418Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0662673Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0662823Z 
2025-01-10T12:40:40.0662904Z     @wraps(func)
2025-01-10T12:40:40.0662996Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0663089Z         with self._recreate_cm():
2025-01-10T12:40:40.0663178Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0663291Z E           AssertionError: 
2025-01-10T12:40:40.0663490Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0663610Z E           
2025-01-10T12:40:40.0663747Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0663957Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0664098Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0664271Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0664359Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0664533Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0664624Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0664633Z 
2025-01-10T12:40:40.0664833Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0665061Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-10T12:40:40.0665158Z 
2025-01-10T12:40:40.0665427Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bdd0>
2025-01-10T12:40:40.0665737Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0666166Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e11954c0>
2025-01-10T12:40:40.0666458Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-10T12:40:40.0666463Z 
2025-01-10T12:40:40.0666556Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0666643Z         self,
2025-01-10T12:40:40.0666744Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0666837Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0666916Z         request,
2025-01-10T12:40:40.0666987Z     ):
2025-01-10T12:40:40.0667096Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0667425Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0667525Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0667804Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0667901Z             plot_object = getattr(
2025-01-10T12:40:40.0668026Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0668104Z             )
2025-01-10T12:40:40.0668202Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0668366Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0668483Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0668577Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0668711Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0668784Z                 )
2025-01-10T12:40:40.0668789Z 
2025-01-10T12:40:40.0668944Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0669056Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0669060Z 
2025-01-10T12:40:40.0669524Z args = (<function assert_allclose.<locals>.compare at 0x7f22e171fc40>, array([3.23052456e-06, 1.63478438e-06, 3.61797977e-06,...), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T12:40:40.0669626Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0669882Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0670017Z 
2025-01-10T12:40:40.0670104Z     @wraps(func)
2025-01-10T12:40:40.0670187Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0670278Z         with self._recreate_cm():
2025-01-10T12:40:40.0670366Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0670455Z E           AssertionError: 
2025-01-10T12:40:40.0670563Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0670646Z E           
2025-01-10T12:40:40.0670742Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0670884Z E           Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.0671021Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0671195Z E            ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0671282Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0671454Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.0671552Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0671557Z 
2025-01-10T12:40:40.0671758Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0671985Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-10T12:40:40.0672103Z 
2025-01-10T12:40:40.0672371Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1be90>
2025-01-10T12:40:40.0672678Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0673001Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e053a1b0>
2025-01-10T12:40:40.0673281Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-10T12:40:40.0673285Z 
2025-01-10T12:40:40.0673381Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0673461Z         self,
2025-01-10T12:40:40.0673562Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0673653Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0673734Z         request,
2025-01-10T12:40:40.0673805Z     ):
2025-01-10T12:40:40.0673913Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0674096Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0674187Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0674359Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0674451Z             plot_object = getattr(
2025-01-10T12:40:40.0674575Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0674653Z             )
2025-01-10T12:40:40.0674756Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0674913Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0675023Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0675124Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0675257Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0675331Z                 )
2025-01-10T12:40:40.0675336Z 
2025-01-10T12:40:40.0675486Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0675604Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0675608Z 
2025-01-10T12:40:40.0676205Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b2f20>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0676317Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0676571Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0676576Z 
2025-01-10T12:40:40.0676779Z     @wraps(func)
2025-01-10T12:40:40.0676865Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0676957Z         with self._recreate_cm():
2025-01-10T12:40:40.0677046Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0677136Z E           AssertionError: 
2025-01-10T12:40:40.0677250Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0677336Z E           
2025-01-10T12:40:40.0677440Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0677585Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0677713Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0677886Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0677979Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0678146Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0678238Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0678254Z 
2025-01-10T12:40:40.0678451Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0678677Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-10T12:40:40.0678682Z 
2025-01-10T12:40:40.0679062Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1bf50>
2025-01-10T12:40:40.0679376Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0679711Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1b3e240>
2025-01-10T12:40:40.0679992Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-10T12:40:40.0679997Z 
2025-01-10T12:40:40.0680096Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0680171Z         self,
2025-01-10T12:40:40.0680280Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0680375Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0680458Z         request,
2025-01-10T12:40:40.0680530Z     ):
2025-01-10T12:40:40.0680646Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0680828Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0680927Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0681102Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0681195Z             plot_object = getattr(
2025-01-10T12:40:40.0681330Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0681404Z             )
2025-01-10T12:40:40.0681511Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0681669Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0681779Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0681880Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0682016Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0682095Z                 )
2025-01-10T12:40:40.0682099Z 
2025-01-10T12:40:40.0682252Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0682371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0682381Z 
2025-01-10T12:40:40.0682847Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009ce00>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0682955Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0683214Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0683218Z 
2025-01-10T12:40:40.0683301Z     @wraps(func)
2025-01-10T12:40:40.0683473Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0683567Z         with self._recreate_cm():
2025-01-10T12:40:40.0683657Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0683751Z E           AssertionError: 
2025-01-10T12:40:40.0683862Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0683942Z E           
2025-01-10T12:40:40.0684054Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0684192Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0684329Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0684498Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0684593Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0684762Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0684858Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0684867Z 
2025-01-10T12:40:40.0685072Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0685305Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-10T12:40:40.0685311Z 
2025-01-10T12:40:40.0685743Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd01d0>
2025-01-10T12:40:40.0686590Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0687026Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ac1520>
2025-01-10T12:40:40.0687313Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-10T12:40:40.0687318Z 
2025-01-10T12:40:40.0687420Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0687495Z         self,
2025-01-10T12:40:40.0687599Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0687697Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0687779Z         request,
2025-01-10T12:40:40.0687851Z     ):
2025-01-10T12:40:40.0687967Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0688156Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0688250Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0688433Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0688522Z             plot_object = getattr(
2025-01-10T12:40:40.0688654Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0688729Z             )
2025-01-10T12:40:40.0688842Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0689006Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0689119Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0689217Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0689362Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0689437Z                 )
2025-01-10T12:40:40.0689447Z 
2025-01-10T12:40:40.0689596Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0689716Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0689724Z 
2025-01-10T12:40:40.0690190Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009dbc0>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0690301Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0690558Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0690563Z 
2025-01-10T12:40:40.0690647Z     @wraps(func)
2025-01-10T12:40:40.0690735Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0690974Z         with self._recreate_cm():
2025-01-10T12:40:40.0691064Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0691157Z E           AssertionError: 
2025-01-10T12:40:40.0691276Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0691350Z E           
2025-01-10T12:40:40.0691457Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0691601Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0691740Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0691909Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0692003Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0692173Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0692267Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0692272Z 
2025-01-10T12:40:40.0692480Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0692712Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-10T12:40:40.0692717Z 
2025-01-10T12:40:40.0693030Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd16a0>
2025-01-10T12:40:40.0693488Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0693818Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1d99f10>
2025-01-10T12:40:40.0694102Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-10T12:40:40.0694107Z 
2025-01-10T12:40:40.0694206Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0694282Z         self,
2025-01-10T12:40:40.0694384Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0694480Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0694561Z         request,
2025-01-10T12:40:40.0694638Z     ):
2025-01-10T12:40:40.0694746Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0694933Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0695019Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0695204Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0695292Z             plot_object = getattr(
2025-01-10T12:40:40.0695427Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0695501Z             )
2025-01-10T12:40:40.0695608Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0695769Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0695881Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0695979Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0696299Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0696388Z                 )
2025-01-10T12:40:40.0696393Z 
2025-01-10T12:40:40.0696542Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0696667Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0696677Z 
2025-01-10T12:40:40.0697138Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009dc60>, array([1.82962660e+46, 1.36711511e+46, 2.35930815e+46,...), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T12:40:40.0697248Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0697505Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0697518Z 
2025-01-10T12:40:40.0697595Z     @wraps(func)
2025-01-10T12:40:40.0697686Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0697775Z         with self._recreate_cm():
2025-01-10T12:40:40.0697993Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0698079Z E           AssertionError: 
2025-01-10T12:40:40.0698191Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0698266Z E           
2025-01-10T12:40:40.0698374Z E           Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.0698518Z E           Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.0698653Z E           Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.0698821Z E            ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0698916Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0699083Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0699176Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0699181Z 
2025-01-10T12:40:40.0699384Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0699615Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-10T12:40:40.0699620Z 
2025-01-10T12:40:40.0699891Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd3710>
2025-01-10T12:40:40.0700312Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0700646Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e12f6630>
2025-01-10T12:40:40.0700931Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-10T12:40:40.0700941Z 
2025-01-10T12:40:40.0701036Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0701117Z         self,
2025-01-10T12:40:40.0701213Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0701309Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0701389Z         request,
2025-01-10T12:40:40.0701470Z     ):
2025-01-10T12:40:40.0701579Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0701766Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0701853Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0702038Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0702130Z             plot_object = getattr(
2025-01-10T12:40:40.0702260Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0702334Z             )
2025-01-10T12:40:40.0702440Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0702598Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0702709Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0702811Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0702940Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0703024Z                 )
2025-01-10T12:40:40.0703029Z 
2025-01-10T12:40:40.0703174Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0703292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0703302Z 
2025-01-10T12:40:40.0703766Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cfe0>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0703876Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0704134Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0704139Z 
2025-01-10T12:40:40.0704218Z     @wraps(func)
2025-01-10T12:40:40.0704308Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0704395Z         with self._recreate_cm():
2025-01-10T12:40:40.0704582Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0704667Z E           AssertionError: 
2025-01-10T12:40:40.0704782Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0704858Z E           
2025-01-10T12:40:40.0704963Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0705100Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0705242Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0705411Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0705504Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0705678Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0705768Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0705772Z 
2025-01-10T12:40:40.0705983Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0706380Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-10T12:40:40.0706388Z 
2025-01-10T12:40:40.0706665Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0c80>
2025-01-10T12:40:40.0706971Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0707417Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c16ef980>
2025-01-10T12:40:40.0707700Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-10T12:40:40.0707705Z 
2025-01-10T12:40:40.0707798Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0707877Z         self,
2025-01-10T12:40:40.0707974Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0708074Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0708150Z         request,
2025-01-10T12:40:40.0708234Z     ):
2025-01-10T12:40:40.0708338Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0708526Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0708614Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0708793Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0708885Z             plot_object = getattr(
2025-01-10T12:40:40.0709014Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0709092Z             )
2025-01-10T12:40:40.0709191Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0709355Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0709460Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0709560Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0709688Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0709773Z                 )
2025-01-10T12:40:40.0709777Z 
2025-01-10T12:40:40.0709921Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0710040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0710045Z 
2025-01-10T12:40:40.0710506Z args = (<function assert_allclose.<locals>.compare at 0x7f22b00b2f20>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0710618Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0710876Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0710881Z 
2025-01-10T12:40:40.0710958Z     @wraps(func)
2025-01-10T12:40:40.0711049Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0711137Z         with self._recreate_cm():
2025-01-10T12:40:40.0711229Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0711433Z E           AssertionError: 
2025-01-10T12:40:40.0711545Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0711618Z E           
2025-01-10T12:40:40.0711720Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0711855Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0711999Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0712173Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0712260Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0712433Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0712520Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0712524Z 
2025-01-10T12:40:40.0712726Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0712950Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-10T12:40:40.0712959Z 
2025-01-10T12:40:40.0713229Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0e00>
2025-01-10T12:40:40.0713539Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0713964Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1b3e780>
2025-01-10T12:40:40.0714250Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-10T12:40:40.0714255Z 
2025-01-10T12:40:40.0714348Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0714429Z         self,
2025-01-10T12:40:40.0714525Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0714621Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0714697Z         request,
2025-01-10T12:40:40.0714774Z     ):
2025-01-10T12:40:40.0714886Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0715072Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0715165Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0715336Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0715433Z             plot_object = getattr(
2025-01-10T12:40:40.0715555Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0715635Z             )
2025-01-10T12:40:40.0715735Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0715899Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0716004Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0716278Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0716413Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0716495Z                 )
2025-01-10T12:40:40.0716506Z 
2025-01-10T12:40:40.0716651Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0716776Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0716780Z 
2025-01-10T12:40:40.0717244Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009e520>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0717354Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0717613Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0717618Z 
2025-01-10T12:40:40.0717695Z     @wraps(func)
2025-01-10T12:40:40.0717785Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0717873Z         with self._recreate_cm():
2025-01-10T12:40:40.0717966Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0718050Z E           AssertionError: 
2025-01-10T12:40:40.0718286Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0718365Z E           
2025-01-10T12:40:40.0718462Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0718602Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0718739Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0718912Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0718999Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0719175Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0719260Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0719264Z 
2025-01-10T12:40:40.0719468Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0719691Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-10T12:40:40.0719709Z 
2025-01-10T12:40:40.0719973Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0da0>
2025-01-10T12:40:40.0720282Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>
2025-01-10T12:40:40.0720719Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ac1f10>
2025-01-10T12:40:40.0721004Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-10T12:40:40.0721009Z 
2025-01-10T12:40:40.0721104Z     def test_calculate_plotting_data(
2025-01-10T12:40:40.0721185Z         self,
2025-01-10T12:40:40.0721281Z         plotter_calculate_plotting_data,
2025-01-10T12:40:40.0721376Z         calculate_plotting_data_hdf,
2025-01-10T12:40:40.0721450Z         request,
2025-01-10T12:40:40.0721529Z     ):
2025-01-10T12:40:40.0721639Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0721821Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T12:40:40.0721913Z         group = "plot_data_hdf/"
2025-01-10T12:40:40.0722086Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T12:40:40.0722181Z             plot_object = getattr(
2025-01-10T12:40:40.0722307Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T12:40:40.0722387Z             )
2025-01-10T12:40:40.0722488Z             if attribute_type == "attributes_np":
2025-01-10T12:40:40.0722651Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T12:40:40.0722757Z                     plot_object = plot_object.cgs.value
2025-01-10T12:40:40.0722861Z >               np.testing.assert_allclose(
2025-01-10T12:40:40.0722987Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T12:40:40.0723067Z                 )
2025-01-10T12:40:40.0723072Z 
2025-01-10T12:40:40.0723227Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T12:40:40.0723340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0723344Z 
2025-01-10T12:40:40.0723808Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cea0>, array([3.86530707e+46, 1.95601164e+46, 4.32889537e+46,...), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T12:40:40.0723916Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0724172Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0724177Z 
2025-01-10T12:40:40.0724253Z     @wraps(func)
2025-01-10T12:40:40.0724345Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0724440Z         with self._recreate_cm():
2025-01-10T12:40:40.0724529Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0724620Z E           AssertionError: 
2025-01-10T12:40:40.0724830Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0724909Z E           
2025-01-10T12:40:40.0725005Z E           Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.0725146Z E           Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.0725277Z E           Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.0725452Z E            ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0725539Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0725711Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.0725796Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0725808Z 
2025-01-10T12:40:40.0726007Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0726397Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-10T12:40:40.0726410Z 
2025-01-10T12:40:40.0726676Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0410>
2025-01-10T12:40:40.0726997Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22eea46ba0>
2025-01-10T12:40:40.0727094Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0727314Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0727419Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0727560Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0727771Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0728024Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-10T12:40:40.0728029Z 
2025-01-10T12:40:40.0728127Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0728299Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0728390Z     ):
2025-01-10T12:40:40.0728490Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0728606Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0728781Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0728860Z     
2025-01-10T12:40:40.0728977Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0729083Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0729228Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0729348Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0729423Z             )
2025-01-10T12:40:40.0729502Z     
2025-01-10T12:40:40.0729611Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0729719Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0729816Z             if data.stackgroup:
2025-01-10T12:40:40.0729898Z                 assert (
2025-01-10T12:40:40.0729996Z                     data.stackgroup
2025-01-10T12:40:40.0730077Z                     == getattr(
2025-01-10T12:40:40.0730194Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0730293Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0730383Z                     ).decode()
2025-01-10T12:40:40.0730463Z                 )
2025-01-10T12:40:40.0730551Z             if data.name:
2025-01-10T12:40:40.0730631Z                 assert (
2025-01-10T12:40:40.0730716Z                     data.name
2025-01-10T12:40:40.0730795Z                     == getattr(
2025-01-10T12:40:40.0730911Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0731016Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0731096Z                     ).decode()
2025-01-10T12:40:40.0731177Z                 )
2025-01-10T12:40:40.0731271Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0731411Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0731608Z             )
2025-01-10T12:40:40.0731705Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0731828Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0731907Z             )
2025-01-10T12:40:40.0731913Z 
2025-01-10T12:40:40.0732064Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0732186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0732191Z 
2025-01-10T12:40:40.0732652Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6090400>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0732758Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0733129Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0733139Z 
2025-01-10T12:40:40.0733271Z     @wraps(func)
2025-01-10T12:40:40.0733426Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0733700Z         with self._recreate_cm():
2025-01-10T12:40:40.0733874Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0733992Z E           AssertionError: 
2025-01-10T12:40:40.0734267Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0734375Z E           
2025-01-10T12:40:40.0734580Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0734768Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0734983Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0735185Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0735340Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0735523Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0735754Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0735759Z 
2025-01-10T12:40:40.0736045Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0736475Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-10T12:40:40.0736489Z 
2025-01-10T12:40:40.0736829Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd04d0>
2025-01-10T12:40:40.0737160Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e0ed3a10>
2025-01-10T12:40:40.0737415Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0737541Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0737717Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0737885Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0738110Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0738511Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-10T12:40:40.0738517Z 
2025-01-10T12:40:40.0738639Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0738875Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0738985Z     ):
2025-01-10T12:40:40.0739135Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0739313Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0739592Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0739734Z     
2025-01-10T12:40:40.0739876Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0740028Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0740260Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0740453Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0740690Z             )
2025-01-10T12:40:40.0740828Z     
2025-01-10T12:40:40.0740979Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0741186Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0748960Z             if data.stackgroup:
2025-01-10T12:40:40.0749081Z                 assert (
2025-01-10T12:40:40.0749194Z                     data.stackgroup
2025-01-10T12:40:40.0749276Z                     == getattr(
2025-01-10T12:40:40.0749406Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0749519Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0749600Z                     ).decode()
2025-01-10T12:40:40.0749682Z                 )
2025-01-10T12:40:40.0749762Z             if data.name:
2025-01-10T12:40:40.0749849Z                 assert (
2025-01-10T12:40:40.0749931Z                     data.name
2025-01-10T12:40:40.0750016Z                     == getattr(
2025-01-10T12:40:40.0750132Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0750240Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0750321Z                     ).decode()
2025-01-10T12:40:40.0750404Z                 )
2025-01-10T12:40:40.0750503Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0750657Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0750961Z             )
2025-01-10T12:40:40.0751068Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0751206Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0751280Z             )
2025-01-10T12:40:40.0751285Z 
2025-01-10T12:40:40.0751453Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0751576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0751581Z 
2025-01-10T12:40:40.0752058Z args = (<function assert_allclose.<locals>.compare at 0x7f22e1744540>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0752179Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0752450Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0752463Z 
2025-01-10T12:40:40.0752555Z     @wraps(func)
2025-01-10T12:40:40.0752643Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0752743Z         with self._recreate_cm():
2025-01-10T12:40:40.0752834Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0752930Z E           AssertionError: 
2025-01-10T12:40:40.0753044Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0753125Z E           
2025-01-10T12:40:40.0753228Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0753384Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0753524Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0753708Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0753801Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0753976Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0754074Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0754079Z 
2025-01-10T12:40:40.0754297Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0754510Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-10T12:40:40.0754515Z 
2025-01-10T12:40:40.0754786Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0920>
2025-01-10T12:40:40.0755115Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22eea465d0>
2025-01-10T12:40:40.0755215Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0755428Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0755535Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0755646Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0755865Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0756411Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-10T12:40:40.0756420Z 
2025-01-10T12:40:40.0756526Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0756695Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0756774Z     ):
2025-01-10T12:40:40.0756873Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0756988Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0757164Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0757243Z     
2025-01-10T12:40:40.0757356Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0757476Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0757623Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0757739Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0757818Z             )
2025-01-10T12:40:40.0758029Z     
2025-01-10T12:40:40.0758139Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0758246Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0758340Z             if data.stackgroup:
2025-01-10T12:40:40.0758424Z                 assert (
2025-01-10T12:40:40.0758516Z                     data.stackgroup
2025-01-10T12:40:40.0758594Z                     == getattr(
2025-01-10T12:40:40.0758710Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0758807Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0758893Z                     ).decode()
2025-01-10T12:40:40.0758977Z                 )
2025-01-10T12:40:40.0759063Z             if data.name:
2025-01-10T12:40:40.0759139Z                 assert (
2025-01-10T12:40:40.0759225Z                     data.name
2025-01-10T12:40:40.0759302Z                     == getattr(
2025-01-10T12:40:40.0759409Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0759514Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0759591Z                     ).decode()
2025-01-10T12:40:40.0759670Z                 )
2025-01-10T12:40:40.0759764Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0759904Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0759978Z             )
2025-01-10T12:40:40.0760075Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0760195Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0760278Z             )
2025-01-10T12:40:40.0760282Z 
2025-01-10T12:40:40.0760436Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0760559Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0760563Z 
2025-01-10T12:40:40.0761042Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009d760>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0761155Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0761422Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0761428Z 
2025-01-10T12:40:40.0761506Z     @wraps(func)
2025-01-10T12:40:40.0761599Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0761685Z         with self._recreate_cm():
2025-01-10T12:40:40.0761778Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0761866Z E           AssertionError: 
2025-01-10T12:40:40.0761981Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0762175Z E           
2025-01-10T12:40:40.0762282Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0762430Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0762562Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0762744Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0762835Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0763017Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0763103Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0763107Z 
2025-01-10T12:40:40.0763319Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0763526Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-10T12:40:40.0763531Z 
2025-01-10T12:40:40.0763813Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd09e0>
2025-01-10T12:40:40.0764139Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e05555e0>
2025-01-10T12:40:40.0764235Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0764410Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0764515Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0764620Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0764826Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0765075Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-10T12:40:40.0765080Z 
2025-01-10T12:40:40.0765167Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0765338Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0765417Z     ):
2025-01-10T12:40:40.0765520Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0765634Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0765808Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0765884Z     
2025-01-10T12:40:40.0765997Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0766273Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0766432Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0766545Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0766620Z             )
2025-01-10T12:40:40.0766696Z     
2025-01-10T12:40:40.0766795Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0766905Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0766991Z             if data.stackgroup:
2025-01-10T12:40:40.0767072Z                 assert (
2025-01-10T12:40:40.0767157Z                     data.stackgroup
2025-01-10T12:40:40.0767245Z                     == getattr(
2025-01-10T12:40:40.0767349Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0767451Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0767528Z                     ).decode()
2025-01-10T12:40:40.0767616Z                 )
2025-01-10T12:40:40.0767697Z             if data.name:
2025-01-10T12:40:40.0767779Z                 assert (
2025-01-10T12:40:40.0767862Z                     data.name
2025-01-10T12:40:40.0767938Z                     == getattr(
2025-01-10T12:40:40.0768045Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0768138Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0768220Z                     ).decode()
2025-01-10T12:40:40.0768292Z                 )
2025-01-10T12:40:40.0768388Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0768515Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0768767Z             )
2025-01-10T12:40:40.0768861Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0768991Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0769064Z             )
2025-01-10T12:40:40.0769068Z 
2025-01-10T12:40:40.0769216Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0769333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0769344Z 
2025-01-10T12:40:40.0769806Z args = (<function assert_allclose.<locals>.compare at 0x7f22d60907c0>, array([3.82152740e-15, 3.88350733e-15, 1.58629581e-14,...), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T12:40:40.0769913Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0770171Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0770177Z 
2025-01-10T12:40:40.0770263Z     @wraps(func)
2025-01-10T12:40:40.0770347Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0770439Z         with self._recreate_cm():
2025-01-10T12:40:40.0770526Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0770616Z E           AssertionError: 
2025-01-10T12:40:40.0770724Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0770918Z E           
2025-01-10T12:40:40.0771026Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0771162Z E           Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.0771299Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0771470Z E            ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0771560Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0771726Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0771816Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0771826Z 
2025-01-10T12:40:40.0772027Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0772235Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-10T12:40:40.0772240Z 
2025-01-10T12:40:40.0772525Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c1b2c0>
2025-01-10T12:40:40.0772842Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e11a7350>
2025-01-10T12:40:40.0772945Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0773034Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0773143Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0773240Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0773458Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0773709Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-10T12:40:40.0773713Z 
2025-01-10T12:40:40.0773807Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0773977Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0774050Z     ):
2025-01-10T12:40:40.0774156Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0774265Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0774444Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0774516Z     
2025-01-10T12:40:40.0774630Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0774728Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0774874Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0774981Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0775060Z             )
2025-01-10T12:40:40.0775216Z     
2025-01-10T12:40:40.0775323Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0775429Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0775524Z             if data.stackgroup:
2025-01-10T12:40:40.0775607Z                 assert (
2025-01-10T12:40:40.0775693Z                     data.stackgroup
2025-01-10T12:40:40.0775778Z                     == getattr(
2025-01-10T12:40:40.0775887Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0775985Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0776214Z                     ).decode()
2025-01-10T12:40:40.0776308Z                 )
2025-01-10T12:40:40.0776392Z             if data.name:
2025-01-10T12:40:40.0776476Z                 assert (
2025-01-10T12:40:40.0776553Z                     data.name
2025-01-10T12:40:40.0776635Z                     == getattr(
2025-01-10T12:40:40.0776741Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0776846Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0776924Z                     ).decode()
2025-01-10T12:40:40.0777003Z                 )
2025-01-10T12:40:40.0777097Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0777230Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0777428Z             )
2025-01-10T12:40:40.0777520Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0777645Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0777718Z             )
2025-01-10T12:40:40.0777723Z 
2025-01-10T12:40:40.0777873Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0777986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0777990Z 
2025-01-10T12:40:40.0778458Z args = (<function assert_allclose.<locals>.compare at 0x7f22d60914e0>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0778565Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0778831Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0778836Z 
2025-01-10T12:40:40.0778924Z     @wraps(func)
2025-01-10T12:40:40.0779008Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0779102Z         with self._recreate_cm():
2025-01-10T12:40:40.0779192Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0779283Z E           AssertionError: 
2025-01-10T12:40:40.0779394Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0779474Z E           
2025-01-10T12:40:40.0779577Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0779725Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0779860Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0780039Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0780133Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0780302Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0780394Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0780404Z 
2025-01-10T12:40:40.0780610Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0780824Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-10T12:40:40.0780829Z 
2025-01-10T12:40:40.0781099Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6c19940>
2025-01-10T12:40:40.0781425Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ef6840>
2025-01-10T12:40:40.0781524Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0781736Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0781848Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0781949Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0782166Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0782413Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-10T12:40:40.0782418Z 
2025-01-10T12:40:40.0782513Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0782688Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0782761Z     ):
2025-01-10T12:40:40.0782863Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0782971Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0783151Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0783224Z     
2025-01-10T12:40:40.0783340Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0783447Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0783589Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0783703Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0783779Z             )
2025-01-10T12:40:40.0783940Z     
2025-01-10T12:40:40.0784042Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0784153Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0784241Z             if data.stackgroup:
2025-01-10T12:40:40.0784324Z                 assert (
2025-01-10T12:40:40.0784410Z                     data.stackgroup
2025-01-10T12:40:40.0784492Z                     == getattr(
2025-01-10T12:40:40.0784602Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0784709Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0784789Z                     ).decode()
2025-01-10T12:40:40.0784872Z                 )
2025-01-10T12:40:40.0784957Z             if data.name:
2025-01-10T12:40:40.0785035Z                 assert (
2025-01-10T12:40:40.0785119Z                     data.name
2025-01-10T12:40:40.0785200Z                     == getattr(
2025-01-10T12:40:40.0785312Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0785412Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0785497Z                     ).decode()
2025-01-10T12:40:40.0785570Z                 )
2025-01-10T12:40:40.0785671Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0785806Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0785883Z             )
2025-01-10T12:40:40.0785976Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0786271Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0786394Z             )
2025-01-10T12:40:40.0786402Z 
2025-01-10T12:40:40.0786647Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0786779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0786784Z 
2025-01-10T12:40:40.0787253Z args = (<function assert_allclose.<locals>.compare at 0x7f22e1769f80>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0787368Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0787630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0787635Z 
2025-01-10T12:40:40.0787718Z     @wraps(func)
2025-01-10T12:40:40.0787804Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0787898Z         with self._recreate_cm():
2025-01-10T12:40:40.0787987Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0788077Z E           AssertionError: 
2025-01-10T12:40:40.0788196Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0788398Z E           
2025-01-10T12:40:40.0788504Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0788645Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0788784Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0788959Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0789055Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0789226Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0789318Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0789323Z 
2025-01-10T12:40:40.0789529Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0789739Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-10T12:40:40.0789743Z 
2025-01-10T12:40:40.0790025Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0b90>
2025-01-10T12:40:40.0790345Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e054fa70>
2025-01-10T12:40:40.0790450Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0790538Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0790777Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0790877Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0791087Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0791326Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-10T12:40:40.0791336Z 
2025-01-10T12:40:40.0791425Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0791595Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0791672Z     ):
2025-01-10T12:40:40.0791779Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0791891Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0792068Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0792139Z     
2025-01-10T12:40:40.0792254Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0792358Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0792507Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0792614Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0792691Z             )
2025-01-10T12:40:40.0792801Z     
2025-01-10T12:40:40.0792908Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0793016Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0793109Z             if data.stackgroup:
2025-01-10T12:40:40.0793194Z                 assert (
2025-01-10T12:40:40.0793279Z                     data.stackgroup
2025-01-10T12:40:40.0793367Z                     == getattr(
2025-01-10T12:40:40.0793474Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0793577Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0793656Z                     ).decode()
2025-01-10T12:40:40.0793734Z                 )
2025-01-10T12:40:40.0793821Z             if data.name:
2025-01-10T12:40:40.0793904Z                 assert (
2025-01-10T12:40:40.0793986Z                     data.name
2025-01-10T12:40:40.0794069Z                     == getattr(
2025-01-10T12:40:40.0794173Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0794272Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0794352Z                     ).decode()
2025-01-10T12:40:40.0794431Z                 )
2025-01-10T12:40:40.0794531Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0794660Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0794828Z             )
2025-01-10T12:40:40.0794919Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0795044Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0795117Z             )
2025-01-10T12:40:40.0795121Z 
2025-01-10T12:40:40.0795272Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0795390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0795395Z 
2025-01-10T12:40:40.0795864Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6093c40>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0795970Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0796340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0796347Z 
2025-01-10T12:40:40.0796439Z     @wraps(func)
2025-01-10T12:40:40.0796523Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0796617Z         with self._recreate_cm():
2025-01-10T12:40:40.0796705Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0796795Z E           AssertionError: 
2025-01-10T12:40:40.0796903Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0797102Z E           
2025-01-10T12:40:40.0797205Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0797352Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0797484Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0797659Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0797754Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0797923Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0798013Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0798024Z 
2025-01-10T12:40:40.0798225Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0798432Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-10T12:40:40.0798437Z 
2025-01-10T12:40:40.0798712Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0c50>
2025-01-10T12:40:40.0799033Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22f074fad0>
2025-01-10T12:40:40.0799130Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0799225Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0799335Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0799434Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T12:40:40.0799644Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0799888Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-10T12:40:40.0799892Z 
2025-01-10T12:40:40.0799989Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0800158Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0800236Z     ):
2025-01-10T12:40:40.0800338Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0800453Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0800625Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0800703Z     
2025-01-10T12:40:40.0800818Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0800914Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0801060Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0801168Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0801247Z             )
2025-01-10T12:40:40.0801437Z     
2025-01-10T12:40:40.0801546Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0801652Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0801746Z             if data.stackgroup:
2025-01-10T12:40:40.0801823Z                 assert (
2025-01-10T12:40:40.0801914Z                     data.stackgroup
2025-01-10T12:40:40.0802000Z                     == getattr(
2025-01-10T12:40:40.0802114Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0802211Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0802294Z                     ).decode()
2025-01-10T12:40:40.0802372Z                 )
2025-01-10T12:40:40.0802453Z             if data.name:
2025-01-10T12:40:40.0802534Z                 assert (
2025-01-10T12:40:40.0802614Z                     data.name
2025-01-10T12:40:40.0802697Z                     == getattr(
2025-01-10T12:40:40.0802802Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0802910Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0802990Z                     ).decode()
2025-01-10T12:40:40.0803071Z                 )
2025-01-10T12:40:40.0803165Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0803296Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0803458Z             )
2025-01-10T12:40:40.0803556Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0803676Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0803758Z             )
2025-01-10T12:40:40.0803762Z 
2025-01-10T12:40:40.0803912Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0804024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0804028Z 
2025-01-10T12:40:40.0804495Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6093240>, array([8.04164908e-15, 5.82923281e-15, 2.43062571e-14,...), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T12:40:40.0804603Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0804869Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0804874Z 
2025-01-10T12:40:40.0804950Z     @wraps(func)
2025-01-10T12:40:40.0805046Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0805132Z         with self._recreate_cm():
2025-01-10T12:40:40.0805228Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0805321Z E           AssertionError: 
2025-01-10T12:40:40.0805430Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0805511Z E           
2025-01-10T12:40:40.0805613Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0805758Z E           Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.0805890Z E           Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.0806200Z E            ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0806292Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0806470Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.0806555Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0806564Z 
2025-01-10T12:40:40.0806771Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0806980Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-10T12:40:40.0806984Z 
2025-01-10T12:40:40.0807251Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0ec0>
2025-01-10T12:40:40.0807574Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e12dffb0>
2025-01-10T12:40:40.0807670Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0807764Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0807989Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0808099Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0808305Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0808548Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-10T12:40:40.0808557Z 
2025-01-10T12:40:40.0808652Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0808822Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0808902Z     ):
2025-01-10T12:40:40.0808999Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0809111Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0809283Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0809360Z     
2025-01-10T12:40:40.0809470Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0809576Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0809716Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0809826Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0809899Z             )
2025-01-10T12:40:40.0810092Z     
2025-01-10T12:40:40.0810201Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0810305Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0810397Z             if data.stackgroup:
2025-01-10T12:40:40.0810473Z                 assert (
2025-01-10T12:40:40.0810564Z                     data.stackgroup
2025-01-10T12:40:40.0810642Z                     == getattr(
2025-01-10T12:40:40.0810756Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0810851Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0810934Z                     ).decode()
2025-01-10T12:40:40.0811007Z                 )
2025-01-10T12:40:40.0811098Z             if data.name:
2025-01-10T12:40:40.0811174Z                 assert (
2025-01-10T12:40:40.0811262Z                     data.name
2025-01-10T12:40:40.0811339Z                     == getattr(
2025-01-10T12:40:40.0811447Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0811545Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0811629Z                     ).decode()
2025-01-10T12:40:40.0811706Z                 )
2025-01-10T12:40:40.0811797Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0811930Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0812002Z             )
2025-01-10T12:40:40.0812098Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0812217Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0812294Z             )
2025-01-10T12:40:40.0812298Z 
2025-01-10T12:40:40.0812440Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0812566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0812570Z 
2025-01-10T12:40:40.0813045Z args = (<function assert_allclose.<locals>.compare at 0x7f22e06d8220>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0813156Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0813421Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0813426Z 
2025-01-10T12:40:40.0813503Z     @wraps(func)
2025-01-10T12:40:40.0813592Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0813679Z         with self._recreate_cm():
2025-01-10T12:40:40.0813774Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0813862Z E           AssertionError: 
2025-01-10T12:40:40.0813975Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0814138Z E           
2025-01-10T12:40:40.0814242Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0814379Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0814514Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0814694Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0814780Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0814961Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0815046Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0815051Z 
2025-01-10T12:40:40.0815257Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0815457Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-10T12:40:40.0815462Z 
2025-01-10T12:40:40.0815733Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd0f80>
2025-01-10T12:40:40.0816257Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22dc6a7bc0>
2025-01-10T12:40:40.0816365Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0816458Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0816696Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0816800Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0817005Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0817248Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-10T12:40:40.0817253Z 
2025-01-10T12:40:40.0817340Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0817512Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0817584Z     ):
2025-01-10T12:40:40.0817691Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0817797Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0817976Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0818051Z     
2025-01-10T12:40:40.0818159Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0818268Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0818408Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0818519Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0818591Z             )
2025-01-10T12:40:40.0818668Z     
2025-01-10T12:40:40.0818766Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0818878Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0818965Z             if data.stackgroup:
2025-01-10T12:40:40.0819046Z                 assert (
2025-01-10T12:40:40.0819131Z                     data.stackgroup
2025-01-10T12:40:40.0819219Z                     == getattr(
2025-01-10T12:40:40.0819325Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0819425Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0819512Z                     ).decode()
2025-01-10T12:40:40.0819589Z                 )
2025-01-10T12:40:40.0819678Z             if data.name:
2025-01-10T12:40:40.0819755Z                 assert (
2025-01-10T12:40:40.0819838Z                     data.name
2025-01-10T12:40:40.0819916Z                     == getattr(
2025-01-10T12:40:40.0820022Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0820113Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0820196Z                     ).decode()
2025-01-10T12:40:40.0820269Z                 )
2025-01-10T12:40:40.0820370Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0820496Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0820696Z             )
2025-01-10T12:40:40.0820788Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0820913Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0820995Z             )
2025-01-10T12:40:40.0820999Z 
2025-01-10T12:40:40.0821145Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0821268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0821274Z 
2025-01-10T12:40:40.0821741Z args = (<function assert_allclose.<locals>.compare at 0x7f22b009cd60>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0821852Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0822108Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0822113Z 
2025-01-10T12:40:40.0822195Z     @wraps(func)
2025-01-10T12:40:40.0822289Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0822377Z         with self._recreate_cm():
2025-01-10T12:40:40.0822470Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0822555Z E           AssertionError: 
2025-01-10T12:40:40.0822665Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0822835Z E           
2025-01-10T12:40:40.0822939Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0823078Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0823213Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0823381Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0823473Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0823638Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0823731Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0823743Z 
2025-01-10T12:40:40.0823952Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0824153Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-10T12:40:40.0824157Z 
2025-01-10T12:40:40.0824425Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1040>
2025-01-10T12:40:40.0824744Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22c16f5490>
2025-01-10T12:40:40.0824846Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0824935Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0825043Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0825142Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0825353Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0825600Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-10T12:40:40.0825610Z 
2025-01-10T12:40:40.0825701Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0825870Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0825949Z     ):
2025-01-10T12:40:40.0826051Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0826260Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0826437Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0826511Z     
2025-01-10T12:40:40.0826627Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0826722Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0826866Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0826973Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0827050Z             )
2025-01-10T12:40:40.0827126Z     
2025-01-10T12:40:40.0827348Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0827459Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0827546Z             if data.stackgroup:
2025-01-10T12:40:40.0827629Z                 assert (
2025-01-10T12:40:40.0827715Z                     data.stackgroup
2025-01-10T12:40:40.0827804Z                     == getattr(
2025-01-10T12:40:40.0827910Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0828011Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0828089Z                     ).decode()
2025-01-10T12:40:40.0828172Z                 )
2025-01-10T12:40:40.0828252Z             if data.name:
2025-01-10T12:40:40.0828335Z                 assert (
2025-01-10T12:40:40.0828415Z                     data.name
2025-01-10T12:40:40.0828500Z                     == getattr(
2025-01-10T12:40:40.0828601Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0828698Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0828790Z                     ).decode()
2025-01-10T12:40:40.0828864Z                 )
2025-01-10T12:40:40.0828962Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0829089Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0829283Z             )
2025-01-10T12:40:40.0829374Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0829502Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0829576Z             )
2025-01-10T12:40:40.0829580Z 
2025-01-10T12:40:40.0829731Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0829842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0829846Z 
2025-01-10T12:40:40.0830312Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6091940>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0830425Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0830683Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0830688Z 
2025-01-10T12:40:40.0830770Z     @wraps(func)
2025-01-10T12:40:40.0830859Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0830951Z         with self._recreate_cm():
2025-01-10T12:40:40.0831040Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0831129Z E           AssertionError: 
2025-01-10T12:40:40.0831236Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0831316Z E           
2025-01-10T12:40:40.0831415Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0831559Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0831692Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0831859Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0831959Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0832129Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0832220Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0832230Z 
2025-01-10T12:40:40.0832429Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0832633Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-10T12:40:40.0832637Z 
2025-01-10T12:40:40.0832900Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1100>
2025-01-10T12:40:40.0833221Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22b2816300>
2025-01-10T12:40:40.0833325Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0833413Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0833630Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0833729Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0833940Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0834183Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-10T12:40:40.0834192Z 
2025-01-10T12:40:40.0834285Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0834454Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0834534Z     ):
2025-01-10T12:40:40.0834627Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0834737Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0834913Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0834986Z     
2025-01-10T12:40:40.0835099Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0835200Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0835346Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0835451Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0835530Z             )
2025-01-10T12:40:40.0835600Z     
2025-01-10T12:40:40.0835791Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0835896Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0835987Z             if data.stackgroup:
2025-01-10T12:40:40.0836155Z                 assert (
2025-01-10T12:40:40.0836249Z                     data.stackgroup
2025-01-10T12:40:40.0836326Z                     == getattr(
2025-01-10T12:40:40.0836437Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0836542Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0836621Z                     ).decode()
2025-01-10T12:40:40.0836702Z                 )
2025-01-10T12:40:40.0836787Z             if data.name:
2025-01-10T12:40:40.0836869Z                 assert (
2025-01-10T12:40:40.0836946Z                     data.name
2025-01-10T12:40:40.0837029Z                     == getattr(
2025-01-10T12:40:40.0837131Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0837229Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0837315Z                     ).decode()
2025-01-10T12:40:40.0837396Z                 )
2025-01-10T12:40:40.0837487Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0837619Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0837692Z             )
2025-01-10T12:40:40.0837789Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0837914Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0837988Z             )
2025-01-10T12:40:40.0837992Z 
2025-01-10T12:40:40.0838142Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0838257Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0838261Z 
2025-01-10T12:40:40.0838729Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6091620>, array([4.57243913e+37, 4.64659781e+37, 1.89799530e+38,...), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T12:40:40.0838834Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0839095Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0839100Z 
2025-01-10T12:40:40.0839182Z     @wraps(func)
2025-01-10T12:40:40.0839268Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0839358Z         with self._recreate_cm():
2025-01-10T12:40:40.0839445Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0839535Z E           AssertionError: 
2025-01-10T12:40:40.0839640Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0839859Z E           
2025-01-10T12:40:40.0839959Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.0840101Z E           Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.0840229Z E           Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.0840402Z E            ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0840492Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0840665Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0840755Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0840759Z 
2025-01-10T12:40:40.0840958Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0841166Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-10T12:40:40.0841171Z 
2025-01-10T12:40:40.0841433Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd11c0>
2025-01-10T12:40:40.0841799Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e11a04d0>
2025-01-10T12:40:40.0841894Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0841989Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0842204Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0842309Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0842521Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0842769Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-10T12:40:40.0842774Z 
2025-01-10T12:40:40.0842866Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0843034Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0843112Z     ):
2025-01-10T12:40:40.0843209Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0843323Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0843494Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0843572Z     
2025-01-10T12:40:40.0843682Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0843786Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0843927Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0844038Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0844114Z             )
2025-01-10T12:40:40.0844185Z     
2025-01-10T12:40:40.0844289Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0844395Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0844485Z             if data.stackgroup:
2025-01-10T12:40:40.0844562Z                 assert (
2025-01-10T12:40:40.0844652Z                     data.stackgroup
2025-01-10T12:40:40.0844734Z                     == getattr(
2025-01-10T12:40:40.0844844Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0844939Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0845025Z                     ).decode()
2025-01-10T12:40:40.0845098Z                 )
2025-01-10T12:40:40.0845191Z             if data.name:
2025-01-10T12:40:40.0845267Z                 assert (
2025-01-10T12:40:40.0845352Z                     data.name
2025-01-10T12:40:40.0845436Z                     == getattr(
2025-01-10T12:40:40.0845538Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0845636Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0845714Z                     ).decode()
2025-01-10T12:40:40.0845794Z                 )
2025-01-10T12:40:40.0845885Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0846015Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0846181Z             )
2025-01-10T12:40:40.0846400Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0846520Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0846600Z             )
2025-01-10T12:40:40.0846605Z 
2025-01-10T12:40:40.0846749Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0846871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0846875Z 
2025-01-10T12:40:40.0847343Z args = (<function assert_allclose.<locals>.compare at 0x7f22e06db600>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0847442Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0847707Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0847712Z 
2025-01-10T12:40:40.0847789Z     @wraps(func)
2025-01-10T12:40:40.0847887Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0847974Z         with self._recreate_cm():
2025-01-10T12:40:40.0848070Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0848155Z E           AssertionError: 
2025-01-10T12:40:40.0848268Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0848342Z E           
2025-01-10T12:40:40.0848569Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0848714Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0848850Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0849022Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0849109Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0849282Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0849367Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0849379Z 
2025-01-10T12:40:40.0849586Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0849788Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-10T12:40:40.0849798Z 
2025-01-10T12:40:40.0850064Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1280>
2025-01-10T12:40:40.0850390Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1288aa0>
2025-01-10T12:40:40.0850486Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0850582Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0850686Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0850790Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0851000Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0851250Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-10T12:40:40.0851260Z 
2025-01-10T12:40:40.0851346Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0851520Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0851598Z     ):
2025-01-10T12:40:40.0851694Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0851813Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0851986Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0852063Z     
2025-01-10T12:40:40.0852171Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0852273Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0852415Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0852527Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0852599Z             )
2025-01-10T12:40:40.0852678Z     
2025-01-10T12:40:40.0852869Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0852978Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0853064Z             if data.stackgroup:
2025-01-10T12:40:40.0853146Z                 assert (
2025-01-10T12:40:40.0853239Z                     data.stackgroup
2025-01-10T12:40:40.0853316Z                     == getattr(
2025-01-10T12:40:40.0853434Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0853531Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0853616Z                     ).decode()
2025-01-10T12:40:40.0853690Z                 )
2025-01-10T12:40:40.0853776Z             if data.name:
2025-01-10T12:40:40.0853852Z                 assert (
2025-01-10T12:40:40.0853937Z                     data.name
2025-01-10T12:40:40.0854014Z                     == getattr(
2025-01-10T12:40:40.0854123Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0854215Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0854306Z                     ).decode()
2025-01-10T12:40:40.0854378Z                 )
2025-01-10T12:40:40.0854476Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0854600Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0854679Z             )
2025-01-10T12:40:40.0854863Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0854985Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0855062Z             )
2025-01-10T12:40:40.0855066Z 
2025-01-10T12:40:40.0855209Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0855328Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0855333Z 
2025-01-10T12:40:40.0855791Z args = (<function assert_allclose.<locals>.compare at 0x7f22d60907c0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0855903Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0856272Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0856284Z 
2025-01-10T12:40:40.0856363Z     @wraps(func)
2025-01-10T12:40:40.0856463Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0856550Z         with self._recreate_cm():
2025-01-10T12:40:40.0856643Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0856726Z E           AssertionError: 
2025-01-10T12:40:40.0856837Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0856911Z E           
2025-01-10T12:40:40.0857019Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0857155Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0857298Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0857467Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0857568Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0857742Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0857827Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0857840Z 
2025-01-10T12:40:40.0858046Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0858248Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-10T12:40:40.0858253Z 
2025-01-10T12:40:40.0858525Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1340>
2025-01-10T12:40:40.0858837Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e1ef73b0>
2025-01-10T12:40:40.0858945Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0859034Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0859266Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0859371Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0859574Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0859819Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-10T12:40:40.0859827Z 
2025-01-10T12:40:40.0859913Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0860085Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0860158Z     ):
2025-01-10T12:40:40.0860261Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0860367Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0860546Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0860618Z     
2025-01-10T12:40:40.0860730Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0860844Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0860983Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0861095Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0861167Z             )
2025-01-10T12:40:40.0861243Z     
2025-01-10T12:40:40.0861342Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0861568Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0861655Z             if data.stackgroup:
2025-01-10T12:40:40.0861738Z                 assert (
2025-01-10T12:40:40.0861823Z                     data.stackgroup
2025-01-10T12:40:40.0861906Z                     == getattr(
2025-01-10T12:40:40.0862012Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0862115Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0862195Z                     ).decode()
2025-01-10T12:40:40.0862274Z                 )
2025-01-10T12:40:40.0862354Z             if data.name:
2025-01-10T12:40:40.0862445Z                 assert (
2025-01-10T12:40:40.0862530Z                     data.name
2025-01-10T12:40:40.0862607Z                     == getattr(
2025-01-10T12:40:40.0862717Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0862809Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0862898Z                     ).decode()
2025-01-10T12:40:40.0862971Z                 )
2025-01-10T12:40:40.0863068Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0863193Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0863272Z             )
2025-01-10T12:40:40.0863364Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0863489Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0863562Z             )
2025-01-10T12:40:40.0863568Z 
2025-01-10T12:40:40.0863716Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0863838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0863843Z 
2025-01-10T12:40:40.0864303Z args = (<function assert_allclose.<locals>.compare at 0x7f22d6091120>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0864416Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0864674Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0864679Z 
2025-01-10T12:40:40.0864764Z     @wraps(func)
2025-01-10T12:40:40.0864849Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0864942Z         with self._recreate_cm():
2025-01-10T12:40:40.0865030Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0865124Z E           AssertionError: 
2025-01-10T12:40:40.0865237Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0865311Z E           
2025-01-10T12:40:40.0865530Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0865667Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0865807Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0865973Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0866168Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0866339Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0866431Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0866436Z 
2025-01-10T12:40:40.0866635Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0866846Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-10T12:40:40.0866851Z 
2025-01-10T12:40:40.0867126Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f22f6bd1400>
2025-01-10T12:40:40.0867445Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f22e119e270>
2025-01-10T12:40:40.0867546Z plotter_generate_plot_ply = (Figure({
2025-01-10T12:40:40.0867636Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T12:40:40.0867861Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T12:40:40.0867961Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T12:40:40.0868174Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f22f0dd9be0>)
2025-01-10T12:40:40.0868416Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-10T12:40:40.0868421Z 
2025-01-10T12:40:40.0868513Z     def test_generate_plot_mpl(
2025-01-10T12:40:40.0868684Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T12:40:40.0868756Z     ):
2025-01-10T12:40:40.0868867Z         fig, _ = plotter_generate_plot_ply
2025-01-10T12:40:40.0868982Z         regression_data = RegressionData(request)
2025-01-10T12:40:40.0869162Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T12:40:40.0869237Z     
2025-01-10T12:40:40.0869354Z         for item in ["_species_name", "_color_list"]:
2025-01-10T12:40:40.0869452Z             np.testing.assert_array_equal(
2025-01-10T12:40:40.0869610Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T12:40:40.0869722Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T12:40:40.0869803Z             )
2025-01-10T12:40:40.0869876Z     
2025-01-10T12:40:40.0869984Z         for index, data in enumerate(fig.data):
2025-01-10T12:40:40.0870088Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T12:40:40.0870184Z             if data.stackgroup:
2025-01-10T12:40:40.0870268Z                 assert (
2025-01-10T12:40:40.0870353Z                     data.stackgroup
2025-01-10T12:40:40.0870437Z                     == getattr(
2025-01-10T12:40:40.0870549Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0870652Z                         "_" + str(index) + "stackgroup",
2025-01-10T12:40:40.0870731Z                     ).decode()
2025-01-10T12:40:40.0870811Z                 )
2025-01-10T12:40:40.0870891Z             if data.name:
2025-01-10T12:40:40.0870982Z                 assert (
2025-01-10T12:40:40.0871061Z                     data.name
2025-01-10T12:40:40.0871145Z                     == getattr(
2025-01-10T12:40:40.0871246Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T12:40:40.0871346Z                         "_" + str(index) + "name",
2025-01-10T12:40:40.0871427Z                     ).decode()
2025-01-10T12:40:40.0871508Z                 )
2025-01-10T12:40:40.0871606Z             np.testing.assert_allclose(
2025-01-10T12:40:40.0871731Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T12:40:40.0871812Z             )
2025-01-10T12:40:40.0872026Z >           np.testing.assert_allclose(
2025-01-10T12:40:40.0872154Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T12:40:40.0872229Z             )
2025-01-10T12:40:40.0872233Z 
2025-01-10T12:40:40.0872379Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T12:40:40.0872496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T12:40:40.0872501Z 
2025-01-10T12:40:40.0872970Z args = (<function assert_allclose.<locals>.compare at 0x7f22e06dafc0>, array([9.62179439e+37, 6.97464897e+37, 2.90823196e+38,...), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T12:40:40.0873071Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T12:40:40.0873333Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T12:40:40.0873338Z 
2025-01-10T12:40:40.0873420Z     @wraps(func)
2025-01-10T12:40:40.0873505Z     def inner(*args, **kwds):
2025-01-10T12:40:40.0873609Z         with self._recreate_cm():
2025-01-10T12:40:40.0873697Z >           return func(*args, **kwds)
2025-01-10T12:40:40.0873786Z E           AssertionError: 
2025-01-10T12:40:40.0873891Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0873971Z E           
2025-01-10T12:40:40.0874160Z E           Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.0874302Z E           Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.0874436Z E           Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.0874613Z E            ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0874706Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0874877Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.0874972Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.0874981Z 
2025-01-10T12:40:40.0875179Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T12:40:40.0875304Z =============================== warnings summary ===============================
2025-01-10T12:40:40.0875420Z tardis/io/configuration/config_validator.py:6
2025-01-10T12:40:40.0875537Z tardis/io/configuration/config_validator.py:6
2025-01-10T12:40:40.0875852Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-10T12:40:40.0875936Z   
2025-01-10T12:40:40.0877151Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-10T12:40:40.0877164Z 
2025-01-10T12:40:40.0877400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-10T12:40:40.0877783Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-10T12:40:40.0877856Z   
2025-01-10T12:40:40.0878020Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-10T12:40:40.0878181Z   given by the platformdirs library.  To remove this warning and
2025-01-10T12:40:40.0878350Z   see the appropriate new directories, set the environment variable
2025-01-10T12:40:40.0878498Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-10T12:40:40.0878659Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-10T12:40:40.0878664Z 
2025-01-10T12:40:40.0878774Z tardis/plasma/properties/__init__.py:17
2025-01-10T12:40:40.0879055Z   /home/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-10T12:40:40.0879135Z   
2025-01-10T12:40:40.0879684Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-10T12:40:40.0879810Z 
2025-01-10T12:40:40.0884329Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-10T12:40:40.0884631Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0884875Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-10T12:40:40.0884955Z   
2025-01-10T12:40:40.0885026Z   
2025-01-10T12:40:40.0885247Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T12:40:40.0885509Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T12:40:40.0885515Z 
2025-01-10T12:40:40.0885732Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-10T12:40:40.0885952Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-10T12:40:40.0886358Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-10T12:40:40.0886551Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-10T12:40:40.0886873Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-10T12:40:40.0887120Z   
2025-01-10T12:40:40.0887252Z   The current CMFGEN model parser is deprecated
2025-01-10T12:40:40.0887258Z 
2025-01-10T12:40:40.0887383Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-10T12:40:40.0887572Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-10T12:40:40.0887893Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-10T12:40:40.0887966Z   
2025-01-10T12:40:40.0888085Z   The current CMFGEN model parser is deprecated
2025-01-10T12:40:40.0888090Z 
2025-01-10T12:40:40.0888301Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-10T12:40:40.0888684Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-10T12:40:40.0888755Z   
2025-01-10T12:40:40.0889201Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-10T12:40:40.0889212Z 
2025-01-10T12:40:40.0889329Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T12:40:40.0889449Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T12:40:40.0889634Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T12:40:40.0889904Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-10T12:40:40.0889984Z   
2025-01-10T12:40:40.0890092Z   v_inner_boundary < 0, assuming default value
2025-01-10T12:40:40.0890097Z 
2025-01-10T12:40:40.0890206Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T12:40:40.0890320Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T12:40:40.0890498Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T12:40:40.0890754Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-10T12:40:40.0890831Z   
2025-01-10T12:40:40.0890939Z   v_outer_boundary < 0, assuming default value
2025-01-10T12:40:40.0890946Z 
2025-01-10T12:40:40.0891270Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0891589Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0891898Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0892207Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T12:40:40.0892745Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0893484Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0894015Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0894461Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0894827Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0895079Z   /home/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-10T12:40:40.0895157Z   
2025-01-10T12:40:40.0896695Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T12:40:40.0896832Z 
2025-01-10T12:40:40.0897295Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0897605Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-10T12:40:40.0897676Z   
2025-01-10T12:40:40.0897956Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-10T12:40:40.0898402Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-10T12:40:40.0898480Z   
2025-01-10T12:40:40.0899004Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-10T12:40:40.0899016Z 
2025-01-10T12:40:40.0899384Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T12:40:40.0899710Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1374: DeprecationWarning:
2025-01-10T12:40:40.0899781Z   
2025-01-10T12:40:40.0901165Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T12:40:40.0901182Z 
2025-01-10T12:40:40.0901337Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-10T12:40:40.0901619Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0901697Z   
2025-01-10T12:40:40.0901789Z   Property "atomic_mass" not found
2025-01-10T12:40:40.0901795Z 
2025-01-10T12:40:40.0902228Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-10T12:40:40.0902601Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-10T12:40:40.0903001Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0903080Z   
2025-01-10T12:40:40.0903183Z   Property "j_blues_norm_factor" not found
2025-01-10T12:40:40.0903187Z 
2025-01-10T12:40:40.0903603Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-10T12:40:40.0903971Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-10T12:40:40.0904251Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0904321Z   
2025-01-10T12:40:40.0904422Z   Property "j_blue_estimator" not found
2025-01-10T12:40:40.0904428Z 
2025-01-10T12:40:40.0904809Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-10T12:40:40.0905157Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-10T12:40:40.0905437Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0905508Z   
2025-01-10T12:40:40.0905603Z   Property "volume" not found
2025-01-10T12:40:40.0905726Z 
2025-01-10T12:40:40.0906213Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-10T12:40:40.0906555Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-10T12:40:40.0906828Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T12:40:40.0906904Z   
2025-01-10T12:40:40.0906992Z   Property "r_inner" not found
2025-01-10T12:40:40.0907003Z 
2025-01-10T12:40:40.0907214Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-10T12:40:40.0907434Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-10T12:40:40.0907638Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-10T12:40:40.0907878Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-10T12:40:40.0907955Z   
2025-01-10T12:40:40.0908157Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-10T12:40:40.0908162Z 
2025-01-10T12:40:40.0908398Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-10T12:40:40.0908638Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-10T12:40:40.0908873Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-10T12:40:40.0909122Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-10T12:40:40.0909465Z   /home/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-10T12:40:40.0909537Z   
2025-01-10T12:40:40.0909836Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T12:40:40.0909841Z 
2025-01-10T12:40:40.0910057Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T12:40:40.0910262Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-10T12:40:40.0910333Z   
2025-01-10T12:40:40.0910666Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-10T12:40:40.0910672Z 
2025-01-10T12:40:40.0910889Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T12:40:40.0911087Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-10T12:40:40.0911166Z   
2025-01-10T12:40:40.0911508Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-10T12:40:40.0911633Z 
2025-01-10T12:40:40.0911845Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-10T12:40:40.0912039Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-10T12:40:40.0912267Z   /home/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-10T12:40:40.0912338Z   
2025-01-10T12:40:40.0912634Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T12:40:40.0912639Z 
2025-01-10T12:40:40.0912815Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T12:40:40.0913112Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-10T12:40:40.0913190Z   
2025-01-10T12:40:40.0913297Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T12:40:40.0913307Z 
2025-01-10T12:40:40.0913479Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T12:40:40.0913766Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-10T12:40:40.0913842Z   
2025-01-10T12:40:40.0913941Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T12:40:40.0914054Z 
2025-01-10T12:40:40.0914223Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T12:40:40.0914507Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-10T12:40:40.0914585Z   
2025-01-10T12:40:40.0914688Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T12:40:40.0914692Z 
2025-01-10T12:40:40.0915450Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0915457Z 
2025-01-10T12:40:40.0916233Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-10T12:40:40.0916246Z 
2025-01-10T12:40:40.0916569Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0916574Z 
2025-01-10T12:40:40.0917275Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-10T12:40:40.0917286Z 
2025-01-10T12:40:40.0917593Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0917598Z 
2025-01-10T12:40:40.0918292Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-10T12:40:40.0918302Z 
2025-01-10T12:40:40.0918618Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0918623Z 
2025-01-10T12:40:40.0919268Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-10T12:40:40.0919277Z 
2025-01-10T12:40:40.0919590Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0919595Z 
2025-01-10T12:40:40.0920237Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-10T12:40:40.0920249Z 
2025-01-10T12:40:40.0920553Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0920677Z 
2025-01-10T12:40:40.0921331Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-10T12:40:40.0921336Z 
2025-01-10T12:40:40.0921641Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0921655Z 
2025-01-10T12:40:40.0922309Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-10T12:40:40.0922315Z 
2025-01-10T12:40:40.0922635Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0922640Z 
2025-01-10T12:40:40.0923280Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5
2025-01-10T12:40:40.0923290Z 
2025-01-10T12:40:40.0923604Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0923608Z 
2025-01-10T12:40:40.0924243Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-10T12:40:40.0924359Z 
2025-01-10T12:40:40.0924679Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0924684Z 
2025-01-10T12:40:40.0925385Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-10T12:40:40.0925391Z 
2025-01-10T12:40:40.0925700Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0925709Z 
2025-01-10T12:40:40.0926499Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-10T12:40:40.0926513Z 
2025-01-10T12:40:40.0926826Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0926831Z 
2025-01-10T12:40:40.0927481Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-10T12:40:40.0927486Z 
2025-01-10T12:40:40.0927797Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0927802Z 
2025-01-10T12:40:40.0928501Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-10T12:40:40.0928511Z 
2025-01-10T12:40:40.0928819Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0928827Z 
2025-01-10T12:40:40.0929471Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-10T12:40:40.0929476Z 
2025-01-10T12:40:40.0929783Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0929797Z 
2025-01-10T12:40:40.0930481Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-10T12:40:40.0930614Z 
2025-01-10T12:40:40.0930928Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0930933Z 
2025-01-10T12:40:40.0931612Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-10T12:40:40.0931621Z 
2025-01-10T12:40:40.0931939Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0931944Z 
2025-01-10T12:40:40.0932600Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-10T12:40:40.0932605Z 
2025-01-10T12:40:40.0932913Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0932923Z 
2025-01-10T12:40:40.0933579Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-10T12:40:40.0933689Z 
2025-01-10T12:40:40.0934004Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0934008Z 
2025-01-10T12:40:40.0934651Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-10T12:40:40.0934656Z 
2025-01-10T12:40:40.0934971Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0934975Z 
2025-01-10T12:40:40.0935662Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-10T12:40:40.0935680Z 
2025-01-10T12:40:40.0935984Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0935995Z 
2025-01-10T12:40:40.0936829Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-10T12:40:40.0936836Z 
2025-01-10T12:40:40.0937143Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0937147Z 
2025-01-10T12:40:40.0937787Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-01-10T12:40:40.0937798Z 
2025-01-10T12:40:40.0938112Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0938116Z 
2025-01-10T12:40:40.0938749Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-01-10T12:40:40.0938761Z 
2025-01-10T12:40:40.0939076Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0939081Z 
2025-01-10T12:40:40.0939724Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-10T12:40:40.0939737Z 
2025-01-10T12:40:40.0940049Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0940179Z 
2025-01-10T12:40:40.0940854Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-10T12:40:40.0940859Z 
2025-01-10T12:40:40.0941179Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0941183Z 
2025-01-10T12:40:40.0941882Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-10T12:40:40.0941888Z 
2025-01-10T12:40:40.0942203Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0942207Z 
2025-01-10T12:40:40.0942858Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-10T12:40:40.0942870Z 
2025-01-10T12:40:40.0943190Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0943194Z 
2025-01-10T12:40:40.0944004Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-10T12:40:40.0944010Z 
2025-01-10T12:40:40.0944317Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0944321Z 
2025-01-10T12:40:40.0944974Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-10T12:40:40.0944985Z 
2025-01-10T12:40:40.0945290Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0945304Z 
2025-01-10T12:40:40.0945950Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-10T12:40:40.0945962Z 
2025-01-10T12:40:40.0946392Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0946398Z 
2025-01-10T12:40:40.0947044Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-10T12:40:40.0947049Z 
2025-01-10T12:40:40.0947365Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0947373Z 
2025-01-10T12:40:40.0948018Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-01-10T12:40:40.0948023Z 
2025-01-10T12:40:40.0948327Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0948339Z 
2025-01-10T12:40:40.0948983Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-01-10T12:40:40.0948988Z 
2025-01-10T12:40:40.0949296Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0949307Z 
2025-01-10T12:40:40.0949993Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-10T12:40:40.0950117Z 
2025-01-10T12:40:40.0950434Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0950438Z 
2025-01-10T12:40:40.0951123Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-10T12:40:40.0951139Z 
2025-01-10T12:40:40.0951447Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0951452Z 
2025-01-10T12:40:40.0952146Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-10T12:40:40.0952152Z 
2025-01-10T12:40:40.0952459Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0952464Z 
2025-01-10T12:40:40.0953104Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5
2025-01-10T12:40:40.0953217Z 
2025-01-10T12:40:40.0953552Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0953556Z 
2025-01-10T12:40:40.0954214Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-10T12:40:40.0954219Z 
2025-01-10T12:40:40.0954529Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0954534Z 
2025-01-10T12:40:40.0955187Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-10T12:40:40.0955198Z 
2025-01-10T12:40:40.0955506Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0955515Z 
2025-01-10T12:40:40.0956297Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-10T12:40:40.0956303Z 
2025-01-10T12:40:40.0956612Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0956616Z 
2025-01-10T12:40:40.0957303Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-10T12:40:40.0957312Z 
2025-01-10T12:40:40.0957626Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T12:40:40.0957630Z 
2025-01-10T12:40:40.0958277Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-10T12:40:40.0958286Z 
2025-01-10T12:40:40.0958627Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-10T12:40:40.0958909Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-10T12:40:40.0958993Z   
2025-01-10T12:40:40.0959842Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-10T12:40:40.0959965Z 
2025-01-10T12:40:40.0960322Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0960675Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0961020Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0961367Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0961716Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0962058Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0962426Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T12:40:40.0962501Z   
2025-01-10T12:40:40.0962714Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-10T12:40:40.0963033Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T12:40:40.0963287Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T12:40:40.0963292Z 
2025-01-10T12:40:40.0963640Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0964003Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0964364Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T12:40:40.0964447Z   
2025-01-10T12:40:40.0964637Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-10T12:40:40.0964813Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T12:40:40.0965059Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T12:40:40.0965071Z 
2025-01-10T12:40:40.0965413Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T12:40:40.0965765Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T12:40:40.0965849Z   
2025-01-10T12:40:40.0966028Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-10T12:40:40.0966325Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T12:40:40.0966556Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T12:40:40.0966569Z 
2025-01-10T12:40:40.0967008Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-10T12:40:40.0967337Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:820: DeprecationWarning:
2025-01-10T12:40:40.0967422Z   
2025-01-10T12:40:40.0967700Z   QgridWidget._precision_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-10T12:40:40.0967705Z 
2025-01-10T12:40:40.0967975Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0968197Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-10T12:40:40.0968272Z   
2025-01-10T12:40:40.0968356Z   
2025-01-10T12:40:40.0968562Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T12:40:40.0968836Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T12:40:40.0968972Z 
2025-01-10T12:40:40.0969234Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0969455Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-10T12:40:40.0969531Z   
2025-01-10T12:40:40.0969621Z   
2025-01-10T12:40:40.0969841Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T12:40:40.0970039Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-10T12:40:40.0970044Z 
2025-01-10T12:40:40.0970311Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T12:40:40.0970559Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-10T12:40:40.0970645Z   
2025-01-10T12:40:40.0970838Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-10T12:40:40.0970843Z 
2025-01-10T12:40:40.0971073Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-10T12:40:40.0971078Z 
2025-01-10T12:40:40.0971253Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-10T12:40:40.0971390Z Coverage HTML written to dir coverage_html_report
2025-01-10T12:40:40.0971498Z Coverage XML written to file coverage.xml
2025-01-10T12:40:40.0971630Z 
2025-01-10T12:40:40.0971762Z =========================== short test summary info ============================
2025-01-10T12:40:40.0972187Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-10T12:40:40.0972193Z 
2025-01-10T12:40:40.0972331Z MultiIndex level [0] values are different (0.08897 %)
2025-01-10T12:40:40.0972473Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:40.0972553Z        ...
2025-01-10T12:40:40.0972662Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:40.0972793Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:40.0972932Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T12:40:40.0973009Z        ...
2025-01-10T12:40:40.0973119Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T12:40:40.0973258Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T12:40:40.0973377Z At positional index 480, first diff: 8 != 20
2025-01-10T12:40:40.0973675Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-10T12:40:40.0973784Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.0973788Z 
2025-01-10T12:40:40.0973903Z Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:40.0974039Z Max absolute difference among violations: 0.99984222
2025-01-10T12:40:40.0974179Z Max relative difference among violations: 6337.12154973
2025-01-10T12:40:40.0974280Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974379Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974470Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.0974592Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974675Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.0974767Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.0975299Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0975312Z 
2025-01-10T12:40:40.0975444Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0975568Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0975647Z        ...
2025-01-10T12:40:40.0975749Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0975878Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0975999Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0976182Z        ...
2025-01-10T12:40:40.0976408Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0976535Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0976646Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0977170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.0977182Z 
2025-01-10T12:40:40.0977275Z Series values are different (2.42915 %)
2025-01-10T12:40:40.0977652Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0977987Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.0978435Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.0978960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.0978965Z 
2025-01-10T12:40:40.0979064Z Series values are different (6.47773 %)
2025-01-10T12:40:40.0979450Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.0979836Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.0980209Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.0980710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0980719Z 
2025-01-10T12:40:40.0980853Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0980962Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0981048Z        ...
2025-01-10T12:40:40.0981135Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0981270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0981381Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0981465Z        ...
2025-01-10T12:40:40.0981641Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0981777Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0981894Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0982430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0982438Z 
2025-01-10T12:40:40.0982582Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0982693Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0982790Z        ...
2025-01-10T12:40:40.0982880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0983021Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0983133Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0983220Z        ...
2025-01-10T12:40:40.0983310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0983456Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0983572Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0984060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0984151Z 
2025-01-10T12:40:40.0984333Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0984491Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0991496Z        ...
2025-01-10T12:40:40.0991629Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0991777Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0991900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0991973Z        ...
2025-01-10T12:40:40.0992061Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0992192Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0992310Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0992904Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0992916Z 
2025-01-10T12:40:40.0993049Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0993164Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0993238Z        ...
2025-01-10T12:40:40.0993322Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0993450Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0993557Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0993629Z        ...
2025-01-10T12:40:40.0993710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0993830Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0993934Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0994467Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0994473Z 
2025-01-10T12:40:40.0994596Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0994708Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0994781Z        ...
2025-01-10T12:40:40.0994863Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0994985Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0995092Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0995164Z        ...
2025-01-10T12:40:40.0995243Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0995364Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0995462Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0996245Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0996252Z 
2025-01-10T12:40:40.0996376Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0996486Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0996555Z        ...
2025-01-10T12:40:40.0996643Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0996771Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0996880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0996959Z        ...
2025-01-10T12:40:40.0997042Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0997172Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0997274Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0997771Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.0997785Z 
2025-01-10T12:40:40.0997911Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.0998034Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0998257Z        ...
2025-01-10T12:40:40.0998354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0998487Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0998602Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.0998690Z        ...
2025-01-10T12:40:40.0998774Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.0998906Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.0999009Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.0999527Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.0999539Z 
2025-01-10T12:40:40.0999638Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1000019Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1000369Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1000704Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1001225Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1001230Z 
2025-01-10T12:40:40.1001335Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1001701Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1002201Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1002590Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1003066Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1003076Z 
2025-01-10T12:40:40.1003215Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1003327Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1003490Z        ...
2025-01-10T12:40:40.1003588Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1003716Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1003835Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1003912Z        ...
2025-01-10T12:40:40.1004008Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1004131Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1004237Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1004755Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1004765Z 
2025-01-10T12:40:40.1004905Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1005016Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1005098Z        ...
2025-01-10T12:40:40.1005206Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1005334Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1005455Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1005529Z        ...
2025-01-10T12:40:40.1005623Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1005745Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1005857Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1006432Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1006443Z 
2025-01-10T12:40:40.1006579Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1006687Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1006773Z        ...
2025-01-10T12:40:40.1006867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1006995Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1007114Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1007188Z        ...
2025-01-10T12:40:40.1007283Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1007411Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1007527Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1008039Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1008044Z 
2025-01-10T12:40:40.1008304Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1008415Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1008496Z        ...
2025-01-10T12:40:40.1008589Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1008715Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1008836Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1008912Z        ...
2025-01-10T12:40:40.1009009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1009132Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1009247Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1009754Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1009759Z 
2025-01-10T12:40:40.1009896Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1010013Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1010095Z        ...
2025-01-10T12:40:40.1010183Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1010306Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1010425Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1010640Z        ...
2025-01-10T12:40:40.1010732Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1010860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1010968Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1011455Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1011461Z 
2025-01-10T12:40:40.1011591Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1011700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1011794Z        ...
2025-01-10T12:40:40.1011884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1012005Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1012120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1012199Z        ...
2025-01-10T12:40:40.1012287Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1012410Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1012517Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1013002Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1013007Z 
2025-01-10T12:40:40.1013137Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1013246Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1013327Z        ...
2025-01-10T12:40:40.1013419Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1013547Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1013666Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1013743Z        ...
2025-01-10T12:40:40.1013836Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1013963Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1014068Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1014549Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1014554Z 
2025-01-10T12:40:40.1014657Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1015017Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1015440Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1015774Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1016371Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1016378Z 
2025-01-10T12:40:40.1016475Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1016839Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1017318Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1017705Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1018177Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1018182Z 
2025-01-10T12:40:40.1018309Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1018429Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1018515Z        ...
2025-01-10T12:40:40.1018606Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1018736Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1018849Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1018930Z        ...
2025-01-10T12:40:40.1019015Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1019150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1019250Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1019750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1019756Z 
2025-01-10T12:40:40.1019878Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1019999Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1020071Z        ...
2025-01-10T12:40:40.1020159Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1020401Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1020510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1020589Z        ...
2025-01-10T12:40:40.1020670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1020794Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1020900Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1021365Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1021370Z 
2025-01-10T12:40:40.1021492Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1021603Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1021676Z        ...
2025-01-10T12:40:40.1021764Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1021890Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1022002Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1022081Z        ...
2025-01-10T12:40:40.1022164Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1022300Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1022485Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1022984Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1022990Z 
2025-01-10T12:40:40.1023119Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1023237Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1023311Z        ...
2025-01-10T12:40:40.1023401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1023531Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1023647Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1023730Z        ...
2025-01-10T12:40:40.1023816Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1023942Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1024043Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1024543Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1024548Z 
2025-01-10T12:40:40.1024672Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1024786Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1024859Z        ...
2025-01-10T12:40:40.1024950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1025076Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1025183Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1025267Z        ...
2025-01-10T12:40:40.1025350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1025479Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1025577Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1026172Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1026186Z 
2025-01-10T12:40:40.1026316Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1026428Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1026500Z        ...
2025-01-10T12:40:40.1026589Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1026718Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1026828Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1026910Z        ...
2025-01-10T12:40:40.1027117Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1027242Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1027342Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1027843Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1027852Z 
2025-01-10T12:40:40.1027975Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1028086Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1028159Z        ...
2025-01-10T12:40:40.1028249Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1028371Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1028485Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1028565Z        ...
2025-01-10T12:40:40.1028649Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1028781Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1028880Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1029396Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1029536Z 
2025-01-10T12:40:40.1029637Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1030001Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1030331Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1030657Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1031179Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1031184Z 
2025-01-10T12:40:40.1031282Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1031637Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1032008Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1032371Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1032932Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1032940Z 
2025-01-10T12:40:40.1033069Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1033176Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1033255Z        ...
2025-01-10T12:40:40.1033344Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1033467Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1033581Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1033652Z        ...
2025-01-10T12:40:40.1033741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1033865Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1033976Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1034495Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1034596Z 
2025-01-10T12:40:40.1034726Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1034832Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1034910Z        ...
2025-01-10T12:40:40.1034997Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1035119Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1035232Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1035304Z        ...
2025-01-10T12:40:40.1035394Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1035513Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1035623Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1036199Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1036212Z 
2025-01-10T12:40:40.1036342Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1036449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1036531Z        ...
2025-01-10T12:40:40.1036618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1036736Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1036850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1036921Z        ...
2025-01-10T12:40:40.1037008Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1037127Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1037237Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1037752Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1037758Z 
2025-01-10T12:40:40.1037890Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1038002Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1038080Z        ...
2025-01-10T12:40:40.1038170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1038291Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1038412Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1038487Z        ...
2025-01-10T12:40:40.1038574Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1038693Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1038798Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1039436Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1039441Z 
2025-01-10T12:40:40.1039569Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1039680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1039756Z        ...
2025-01-10T12:40:40.1039855Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1039984Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1040093Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1040176Z        ...
2025-01-10T12:40:40.1040263Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1040395Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1040496Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1041001Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1041011Z 
2025-01-10T12:40:40.1041137Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1041257Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1041450Z        ...
2025-01-10T12:40:40.1041539Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1041672Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1041780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1041864Z        ...
2025-01-10T12:40:40.1041948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1042075Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1042177Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1042744Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1042756Z 
2025-01-10T12:40:40.1042882Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1042996Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1043073Z        ...
2025-01-10T12:40:40.1043162Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1043288Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1043396Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1043477Z        ...
2025-01-10T12:40:40.1043560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1043687Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1043786Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1044365Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1044378Z 
2025-01-10T12:40:40.1044472Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1044832Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1045160Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1045561Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1046261Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1046267Z 
2025-01-10T12:40:40.1046370Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1046722Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1047093Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1047581Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1048131Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1048137Z 
2025-01-10T12:40:40.1048267Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1048384Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1048460Z        ...
2025-01-10T12:40:40.1048550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1048672Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1048789Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1048861Z        ...
2025-01-10T12:40:40.1048954Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1049077Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1049188Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1049773Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1049782Z 
2025-01-10T12:40:40.1049913Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1050027Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1050107Z        ...
2025-01-10T12:40:40.1050197Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1050322Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1050441Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1050518Z        ...
2025-01-10T12:40:40.1050612Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1050731Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1050836Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1051381Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1051499Z 
2025-01-10T12:40:40.1051634Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1051753Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1051831Z        ...
2025-01-10T12:40:40.1051924Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1052049Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1052163Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1052239Z        ...
2025-01-10T12:40:40.1052329Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1052452Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1052562Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1053142Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1053152Z 
2025-01-10T12:40:40.1053286Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1053399Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1053556Z        ...
2025-01-10T12:40:40.1053644Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1053766Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1053880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1053952Z        ...
2025-01-10T12:40:40.1054042Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1054161Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1054266Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1054844Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1054862Z 
2025-01-10T12:40:40.1054986Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1055100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1055173Z        ...
2025-01-10T12:40:40.1055269Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1055392Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1055507Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1055581Z        ...
2025-01-10T12:40:40.1055672Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1055796Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1055903Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1056586Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1056606Z 
2025-01-10T12:40:40.1056730Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1056845Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1056919Z        ...
2025-01-10T12:40:40.1057011Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1057138Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1057253Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1057327Z        ...
2025-01-10T12:40:40.1057415Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1057534Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1057640Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1058158Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1058322Z 
2025-01-10T12:40:40.1058455Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1058565Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1058637Z        ...
2025-01-10T12:40:40.1058725Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1058851Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1058965Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1059038Z        ...
2025-01-10T12:40:40.1059129Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1059248Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1059355Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1059890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1059896Z 
2025-01-10T12:40:40.1060004Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1060365Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1060793Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1061116Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1061659Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1061669Z 
2025-01-10T12:40:40.1061768Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1062131Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1062504Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1062874Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1063396Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1063484Z 
2025-01-10T12:40:40.1063617Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1063728Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1063806Z        ...
2025-01-10T12:40:40.1063891Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1064027Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1064136Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1064216Z        ...
2025-01-10T12:40:40.1064299Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1064428Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1064530Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1065086Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1065097Z 
2025-01-10T12:40:40.1065231Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1065339Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1065420Z        ...
2025-01-10T12:40:40.1065505Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1065720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1065836Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1065917Z        ...
2025-01-10T12:40:40.1066010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1066326Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1066431Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1066952Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1066957Z 
2025-01-10T12:40:40.1067107Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1067218Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1067305Z        ...
2025-01-10T12:40:40.1067392Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1067522Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1067638Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1067719Z        ...
2025-01-10T12:40:40.1067805Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1067933Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1068036Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1068587Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1068592Z 
2025-01-10T12:40:40.1068723Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1068836Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1068918Z        ...
2025-01-10T12:40:40.1069023Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1069151Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1069268Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1069350Z        ...
2025-01-10T12:40:40.1069436Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1069569Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1069672Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1070217Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1070222Z 
2025-01-10T12:40:40.1070354Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1070582Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1070665Z        ...
2025-01-10T12:40:40.1070752Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1070882Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1070992Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1071078Z        ...
2025-01-10T12:40:40.1071163Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1071294Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1071394Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1071927Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1071932Z 
2025-01-10T12:40:40.1072064Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1072171Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1072262Z        ...
2025-01-10T12:40:40.1072345Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1072475Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1072584Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1072664Z        ...
2025-01-10T12:40:40.1072860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1072988Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1073088Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1073617Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1073622Z 
2025-01-10T12:40:40.1073749Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1073853Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1073925Z        ...
2025-01-10T12:40:40.1074010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1074135Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1074243Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1074321Z        ...
2025-01-10T12:40:40.1074409Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1074540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1074639Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1075181Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1075186Z 
2025-01-10T12:40:40.1075289Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1075644Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1075973Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1076397Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1077056Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1077061Z 
2025-01-10T12:40:40.1077160Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1077519Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1077884Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1078258Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1078884Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1078890Z 
2025-01-10T12:40:40.1079016Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1079132Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1079213Z        ...
2025-01-10T12:40:40.1079305Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1079430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1079548Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1079621Z        ...
2025-01-10T12:40:40.1079716Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1079839Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1079948Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1080503Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1080509Z 
2025-01-10T12:40:40.1080632Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1080745Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1080822Z        ...
2025-01-10T12:40:40.1080921Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1081042Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1081159Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1081232Z        ...
2025-01-10T12:40:40.1081323Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1081449Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1081557Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1082070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1082076Z 
2025-01-10T12:40:40.1082199Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1082314Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1082388Z        ...
2025-01-10T12:40:40.1082479Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1082706Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1082823Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1082895Z        ...
2025-01-10T12:40:40.1082988Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1083113Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1083229Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1083769Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1083781Z 
2025-01-10T12:40:40.1083904Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1084016Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1084091Z        ...
2025-01-10T12:40:40.1084182Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1084306Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1084423Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1084499Z        ...
2025-01-10T12:40:40.1084591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1084711Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1084905Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1085451Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1085464Z 
2025-01-10T12:40:40.1085588Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1085702Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1085776Z        ...
2025-01-10T12:40:40.1085867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1085987Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1086207Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1086283Z        ...
2025-01-10T12:40:40.1086374Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1086495Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1086603Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1087128Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1087141Z 
2025-01-10T12:40:40.1087264Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1087376Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1087449Z        ...
2025-01-10T12:40:40.1087536Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1087655Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1087774Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1087846Z        ...
2025-01-10T12:40:40.1087934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1088053Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1088160Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1088711Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1088724Z 
2025-01-10T12:40:40.1088846Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1088961Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1089033Z        ...
2025-01-10T12:40:40.1089124Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1089246Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1089361Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1089555Z        ...
2025-01-10T12:40:40.1089646Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1089764Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1089870Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1090431Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1090447Z 
2025-01-10T12:40:40.1090539Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1090900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1091221Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1091654Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1092226Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1092237Z 
2025-01-10T12:40:40.1092329Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1092734Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1093135Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1093513Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1094058Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1094063Z 
2025-01-10T12:40:40.1094196Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1094304Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1094383Z        ...
2025-01-10T12:40:40.1094467Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1094594Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1094785Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1094864Z        ...
2025-01-10T12:40:40.1094948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1095075Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1095180Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1095757Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1095763Z 
2025-01-10T12:40:40.1095895Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1096004Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1096169Z        ...
2025-01-10T12:40:40.1096255Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1096383Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1096500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1096581Z        ...
2025-01-10T12:40:40.1096667Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1096793Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1096899Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1097551Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1097556Z 
2025-01-10T12:40:40.1097697Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1097810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1097891Z        ...
2025-01-10T12:40:40.1097982Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1098123Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1098237Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1098321Z        ...
2025-01-10T12:40:40.1098409Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1098539Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1098648Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1099222Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1099233Z 
2025-01-10T12:40:40.1099366Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1099474Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1099552Z        ...
2025-01-10T12:40:40.1099635Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1099764Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1099874Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1099957Z        ...
2025-01-10T12:40:40.1100041Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1100168Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1100277Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1100848Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1100858Z 
2025-01-10T12:40:40.1100987Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1101095Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1101176Z        ...
2025-01-10T12:40:40.1101260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1101388Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1101501Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1101580Z        ...
2025-01-10T12:40:40.1101778Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1101905Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1102011Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1102563Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1102575Z 
2025-01-10T12:40:40.1102702Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1102808Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1102885Z        ...
2025-01-10T12:40:40.1102970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1103096Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1103203Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1103282Z        ...
2025-01-10T12:40:40.1103366Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1103500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1103609Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1104124Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1104227Z 
2025-01-10T12:40:40.1104357Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1104462Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1104543Z        ...
2025-01-10T12:40:40.1104625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1104752Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1104860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1104941Z        ...
2025-01-10T12:40:40.1105024Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1105153Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1105264Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1105793Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1105803Z 
2025-01-10T12:40:40.1105905Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1106379Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1106707Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1107047Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1107582Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1107588Z 
2025-01-10T12:40:40.1107688Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1108042Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1108525Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1108892Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1109409Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1109515Z 
2025-01-10T12:40:40.1109645Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1109757Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1109830Z        ...
2025-01-10T12:40:40.1109921Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1110046Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1110161Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1110242Z        ...
2025-01-10T12:40:40.1110328Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1110459Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1110559Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1111107Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1111117Z 
2025-01-10T12:40:40.1111244Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1111359Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1111432Z        ...
2025-01-10T12:40:40.1111524Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1111648Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1111764Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1111846Z        ...
2025-01-10T12:40:40.1111930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1112056Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1112165Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1112683Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1112693Z 
2025-01-10T12:40:40.1112817Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1112931Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1113005Z        ...
2025-01-10T12:40:40.1113095Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1113217Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1113331Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1113411Z        ...
2025-01-10T12:40:40.1113494Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1113618Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1113807Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1114351Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1114356Z 
2025-01-10T12:40:40.1114484Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1114594Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1114666Z        ...
2025-01-10T12:40:40.1114755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1114877Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1114993Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1115071Z        ...
2025-01-10T12:40:40.1115153Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1115279Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1115380Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1115907Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1115912Z 
2025-01-10T12:40:40.1116034Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1116355Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1116432Z        ...
2025-01-10T12:40:40.1116520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1116645Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1116761Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1116839Z        ...
2025-01-10T12:40:40.1116922Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1117052Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1117152Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1117689Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1117694Z 
2025-01-10T12:40:40.1117818Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1117929Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1118011Z        ...
2025-01-10T12:40:40.1118100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1118222Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1118335Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1118415Z        ...
2025-01-10T12:40:40.1118499Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1118629Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1118728Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1119273Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1119281Z 
2025-01-10T12:40:40.1119376Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1119740Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1120070Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1120529Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1121075Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1121080Z 
2025-01-10T12:40:40.1121179Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1121531Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1121902Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1122365Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1122881Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1122886Z 
2025-01-10T12:40:40.1123014Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1123127Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1123208Z        ...
2025-01-10T12:40:40.1123294Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1123424Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1123539Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1123612Z        ...
2025-01-10T12:40:40.1123701Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1123822Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1123929Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1124486Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1124491Z 
2025-01-10T12:40:40.1124621Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1124729Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1124814Z        ...
2025-01-10T12:40:40.1124898Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1125024Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1125137Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1125212Z        ...
2025-01-10T12:40:40.1125301Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1125422Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1125527Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1126042Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1126266Z 
2025-01-10T12:40:40.1126407Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1126516Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1126602Z        ...
2025-01-10T12:40:40.1126687Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1126815Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1126932Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1127006Z        ...
2025-01-10T12:40:40.1127095Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1127216Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1127322Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1127866Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1127877Z 
2025-01-10T12:40:40.1128010Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1128117Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1128199Z        ...
2025-01-10T12:40:40.1128415Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1128542Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1128656Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1128730Z        ...
2025-01-10T12:40:40.1128817Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1128939Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1129045Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1129586Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1129595Z 
2025-01-10T12:40:40.1129724Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1129831Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1129911Z        ...
2025-01-10T12:40:40.1129994Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1130124Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1130237Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1130312Z        ...
2025-01-10T12:40:40.1130399Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1130521Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1130626Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1131149Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1131159Z 
2025-01-10T12:40:40.1131292Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1131399Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1131478Z        ...
2025-01-10T12:40:40.1131561Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1131699Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1131814Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1131886Z        ...
2025-01-10T12:40:40.1131974Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1132094Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1132200Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1132727Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1132732Z 
2025-01-10T12:40:40.1132967Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1133076Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1133157Z        ...
2025-01-10T12:40:40.1133240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1133374Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1133494Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1133573Z        ...
2025-01-10T12:40:40.1133663Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1133784Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1133889Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1134445Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1134450Z 
2025-01-10T12:40:40.1134549Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1134921Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1135331Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1135664Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1136346Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1136363Z 
2025-01-10T12:40:40.1136458Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1136828Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1137200Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1137585Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1138119Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1138234Z 
2025-01-10T12:40:40.1138363Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1138479Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1138559Z        ...
2025-01-10T12:40:40.1138643Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1138779Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1138891Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1138969Z        ...
2025-01-10T12:40:40.1139053Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1139183Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1139284Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1139862Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1139867Z 
2025-01-10T12:40:40.1139998Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1140108Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1140188Z        ...
2025-01-10T12:40:40.1140272Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1140399Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1140620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1140698Z        ...
2025-01-10T12:40:40.1140782Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1140909Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1141010Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1141550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1141555Z 
2025-01-10T12:40:40.1141680Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1141798Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1141877Z        ...
2025-01-10T12:40:40.1141960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1142090Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1142207Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1142287Z        ...
2025-01-10T12:40:40.1142372Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1142500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1142600Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1143169Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1143174Z 
2025-01-10T12:40:40.1143300Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1143418Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1143496Z        ...
2025-01-10T12:40:40.1143578Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1143709Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1143819Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1143905Z        ...
2025-01-10T12:40:40.1143991Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1144116Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1144218Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1144783Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1144788Z 
2025-01-10T12:40:40.1144913Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1145024Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1145195Z        ...
2025-01-10T12:40:40.1145277Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1145404Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1145512Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1145596Z        ...
2025-01-10T12:40:40.1145679Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1145807Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1145906Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1146575Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1146582Z 
2025-01-10T12:40:40.1146711Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1146823Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1146907Z        ...
2025-01-10T12:40:40.1146990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1147116Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1147226Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1147306Z        ...
2025-01-10T12:40:40.1147511Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1147637Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1147737Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1148283Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1148288Z 
2025-01-10T12:40:40.1148413Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1148526Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1148605Z        ...
2025-01-10T12:40:40.1148694Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1148823Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1148932Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1149012Z        ...
2025-01-10T12:40:40.1149095Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1149227Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1149329Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1149889Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1149894Z 
2025-01-10T12:40:40.1149989Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1150362Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1150696Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1151026Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1151719Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1151723Z 
2025-01-10T12:40:40.1151823Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1152190Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1152565Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1152950Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1153558Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1153567Z 
2025-01-10T12:40:40.1153693Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1153807Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1153884Z        ...
2025-01-10T12:40:40.1153974Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1154097Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1154212Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1154286Z        ...
2025-01-10T12:40:40.1154381Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1154507Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1154614Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1155181Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1155192Z 
2025-01-10T12:40:40.1155318Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1155434Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1155511Z        ...
2025-01-10T12:40:40.1155610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1155733Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1155852Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1155929Z        ...
2025-01-10T12:40:40.1156023Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1156245Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1156358Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1156889Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1156894Z 
2025-01-10T12:40:40.1157025Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1157139Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1157213Z        ...
2025-01-10T12:40:40.1157302Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1157542Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1157657Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1157731Z        ...
2025-01-10T12:40:40.1157822Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1157945Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1158057Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1158619Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1158624Z 
2025-01-10T12:40:40.1158760Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1158875Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1158949Z        ...
2025-01-10T12:40:40.1159039Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1159166Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1159281Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1159355Z        ...
2025-01-10T12:40:40.1159447Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1159569Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1159786Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1160349Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1160354Z 
2025-01-10T12:40:40.1160484Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1160595Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1160668Z        ...
2025-01-10T12:40:40.1160755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1160877Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1160996Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1161069Z        ...
2025-01-10T12:40:40.1161158Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1161279Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1161389Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1161931Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1161936Z 
2025-01-10T12:40:40.1162065Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1162176Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1162249Z        ...
2025-01-10T12:40:40.1162337Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1162461Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1162582Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1162655Z        ...
2025-01-10T12:40:40.1162744Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1162865Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1162971Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1163525Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1163530Z 
2025-01-10T12:40:40.1163662Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1163773Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1163846Z        ...
2025-01-10T12:40:40.1163935Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1164058Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1164172Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1164339Z        ...
2025-01-10T12:40:40.1164430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1164559Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1164671Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1165241Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1165250Z 
2025-01-10T12:40:40.1165354Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1165723Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1166143Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1166596Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1167169Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1167180Z 
2025-01-10T12:40:40.1167274Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1167642Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1168021Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1168393Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1168942Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1168947Z 
2025-01-10T12:40:40.1169079Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1169188Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1169269Z        ...
2025-01-10T12:40:40.1169354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1169484Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1169702Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1169780Z        ...
2025-01-10T12:40:40.1169867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1169993Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1170094Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1170676Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1170681Z 
2025-01-10T12:40:40.1170811Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1170922Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1171000Z        ...
2025-01-10T12:40:40.1171084Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1171212Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1171320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1171405Z        ...
2025-01-10T12:40:40.1171489Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1171617Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1171718Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1172259Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1172344Z 
2025-01-10T12:40:40.1172479Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1172586Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1172665Z        ...
2025-01-10T12:40:40.1172748Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1172876Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1172985Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1173070Z        ...
2025-01-10T12:40:40.1173155Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1173286Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1173389Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1173969Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1173981Z 
2025-01-10T12:40:40.1174116Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1174222Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1174301Z        ...
2025-01-10T12:40:40.1174385Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1174512Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1174623Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1174701Z        ...
2025-01-10T12:40:40.1174789Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1174916Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1175017Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1175591Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1175601Z 
2025-01-10T12:40:40.1175732Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1175838Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1175917Z        ...
2025-01-10T12:40:40.1176001Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1176223Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1176337Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1176416Z        ...
2025-01-10T12:40:40.1176501Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1176766Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1176866Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1177421Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1177432Z 
2025-01-10T12:40:40.1177561Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1177667Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1177746Z        ...
2025-01-10T12:40:40.1177829Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1177957Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1178067Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1178146Z        ...
2025-01-10T12:40:40.1178230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1178362Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1178463Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1179053Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1179189Z 
2025-01-10T12:40:40.1179323Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1179430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1179508Z        ...
2025-01-10T12:40:40.1179591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1179717Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1179827Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1179909Z        ...
2025-01-10T12:40:40.1179995Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1180124Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1180229Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1180827Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1180838Z 
2025-01-10T12:40:40.1180940Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1181305Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1181636Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1181976Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1182575Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1182580Z 
2025-01-10T12:40:40.1182684Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1183046Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1183527Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1183910Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1184489Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1184571Z 
2025-01-10T12:40:40.1184701Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1184815Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1184889Z        ...
2025-01-10T12:40:40.1184981Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1185105Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1185224Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1185297Z        ...
2025-01-10T12:40:40.1185395Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1185520Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1185626Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1186352Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1186368Z 
2025-01-10T12:40:40.1186496Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1186611Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1186685Z        ...
2025-01-10T12:40:40.1186776Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1186900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1187022Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1187099Z        ...
2025-01-10T12:40:40.1187194Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1187323Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1187425Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1187997Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1188006Z 
2025-01-10T12:40:40.1188133Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1188249Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1188323Z        ...
2025-01-10T12:40:40.1188413Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1188537Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1188654Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1188728Z        ...
2025-01-10T12:40:40.1188827Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1189078Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1189179Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1189901Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1189914Z 
2025-01-10T12:40:40.1190088Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T12:40:40.1190467Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1195243Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-10T12:40:40.1200232Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T12:40:40.1200547Z At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T12:40:40.1201190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1201196Z 
2025-01-10T12:40:40.1201330Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1201447Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1201526Z        ...
2025-01-10T12:40:40.1201613Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1201745Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1201855Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1202063Z        ...
2025-01-10T12:40:40.1202149Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1202278Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1202379Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1202986Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1202992Z 
2025-01-10T12:40:40.1203123Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1203237Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1203326Z        ...
2025-01-10T12:40:40.1203415Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1203544Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1203654Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1203737Z        ...
2025-01-10T12:40:40.1203821Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1203950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1204053Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1204646Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1204651Z 
2025-01-10T12:40:40.1204784Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1204893Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1204971Z        ...
2025-01-10T12:40:40.1205054Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1205187Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1205296Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1205378Z        ...
2025-01-10T12:40:40.1205462Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1205590Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1205689Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1206368Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1206376Z 
2025-01-10T12:40:40.1206504Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1206610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1206806Z        ...
2025-01-10T12:40:40.1206890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1207019Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1207128Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1207212Z        ...
2025-01-10T12:40:40.1207294Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1207419Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1207520Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1208075Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1208082Z 
2025-01-10T12:40:40.1208212Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1208319Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1208404Z        ...
2025-01-10T12:40:40.1208488Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1208619Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1208728Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1208916Z        ...
2025-01-10T12:40:40.1208999Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1209125Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1209226Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1209786Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1209792Z 
2025-01-10T12:40:40.1209892Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1210250Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1210580Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1210898Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1211468Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1211477Z 
2025-01-10T12:40:40.1211575Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1211928Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1212293Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1212739Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1213281Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1213287Z 
2025-01-10T12:40:40.1213410Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1213527Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1213601Z        ...
2025-01-10T12:40:40.1213699Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1213823Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1214017Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1214091Z        ...
2025-01-10T12:40:40.1214180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1214305Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1214411Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1214985Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1214991Z 
2025-01-10T12:40:40.1215114Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1215232Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1215305Z        ...
2025-01-10T12:40:40.1215393Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1215515Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1215638Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1215711Z        ...
2025-01-10T12:40:40.1215801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1215923Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1216028Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1216680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1216687Z 
2025-01-10T12:40:40.1216811Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1216929Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1217001Z        ...
2025-01-10T12:40:40.1217089Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1217209Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1217322Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1217405Z        ...
2025-01-10T12:40:40.1217493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1217612Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1217720Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1218397Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1218403Z 
2025-01-10T12:40:40.1218571Z DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:40.1219056Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1223910Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:40.1228995Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:40.1229298Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:40.1229903Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1229913Z 
2025-01-10T12:40:40.1230046Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1230157Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1230236Z        ...
2025-01-10T12:40:40.1230323Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1230454Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1230564Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1230648Z        ...
2025-01-10T12:40:40.1230732Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1230860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1230961Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1231531Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1231664Z 
2025-01-10T12:40:40.1231798Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1231908Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1231988Z        ...
2025-01-10T12:40:40.1232071Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1232199Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1232309Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1232394Z        ...
2025-01-10T12:40:40.1232476Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1232603Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1232705Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1233275Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1233287Z 
2025-01-10T12:40:40.1233420Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1233526Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1233617Z        ...
2025-01-10T12:40:40.1233703Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1233833Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1233944Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1234031Z        ...
2025-01-10T12:40:40.1234115Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1234244Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1234347Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1234906Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1234919Z 
2025-01-10T12:40:40.1235050Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1235157Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1235239Z        ...
2025-01-10T12:40:40.1235323Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1235456Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1235566Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1235646Z        ...
2025-01-10T12:40:40.1235817Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1235948Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1236050Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1236630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1236641Z 
2025-01-10T12:40:40.1236772Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1236882Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1236963Z        ...
2025-01-10T12:40:40.1237049Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1237177Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1237284Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1237363Z        ...
2025-01-10T12:40:40.1237448Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1237580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1237680Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1238173Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1238291Z 
2025-01-10T12:40:40.1238398Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1238757Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1239083Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1239405Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1239902Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1239907Z 
2025-01-10T12:40:40.1240010Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1240362Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1240735Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1241098Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1241665Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1241680Z 
2025-01-10T12:40:40.1241805Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1241920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1241992Z        ...
2025-01-10T12:40:40.1247585Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1247775Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1247901Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1247988Z        ...
2025-01-10T12:40:40.1248085Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1248236Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1248347Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1248891Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1249066Z 
2025-01-10T12:40:40.1249222Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1249343Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1249428Z        ...
2025-01-10T12:40:40.1249519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1249658Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1249772Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1249857Z        ...
2025-01-10T12:40:40.1249946Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1250084Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1250195Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1250685Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1250697Z 
2025-01-10T12:40:40.1250836Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1250945Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1251028Z        ...
2025-01-10T12:40:40.1251113Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1251246Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1251359Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1251439Z        ...
2025-01-10T12:40:40.1251523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1251650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1251759Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1252382Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1252393Z 
2025-01-10T12:40:40.1252569Z DataFrame.iloc[:, 0] (column name="0") values are different (2.42915 %)
2025-01-10T12:40:40.1252928Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1257906Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-10T12:40:40.1263031Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T12:40:40.1263239Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T12:40:40.1263802Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1263808Z 
2025-01-10T12:40:40.1263947Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1264165Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1264242Z        ...
2025-01-10T12:40:40.1264337Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1264466Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1264588Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1264661Z        ...
2025-01-10T12:40:40.1264752Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1264877Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1264987Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1265501Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1265507Z 
2025-01-10T12:40:40.1265643Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1265764Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1265839Z        ...
2025-01-10T12:40:40.1265934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1266182Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1266305Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1266496Z        ...
2025-01-10T12:40:40.1266592Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1266722Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1266840Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1267366Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1267372Z 
2025-01-10T12:40:40.1267511Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1267630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1267711Z        ...
2025-01-10T12:40:40.1267801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1267925Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1268044Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1268127Z        ...
2025-01-10T12:40:40.1268217Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1268340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1268449Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1268952Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1268957Z 
2025-01-10T12:40:40.1269090Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1269207Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1269285Z        ...
2025-01-10T12:40:40.1269374Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1269497Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1269616Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1269690Z        ...
2025-01-10T12:40:40.1269785Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1269906Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1270014Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1270520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1270525Z 
2025-01-10T12:40:40.1270657Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1270765Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1270847Z        ...
2025-01-10T12:40:40.1271052Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1271172Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1271287Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1271361Z        ...
2025-01-10T12:40:40.1271452Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1271583Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1271691Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1272211Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1272217Z 
2025-01-10T12:40:40.1272319Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1272685Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1273022Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1273435Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1273978Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1273983Z 
2025-01-10T12:40:40.1274080Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1274449Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1274824Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1275210Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1275713Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1275718Z 
2025-01-10T12:40:40.1275854Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1275965Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1276043Z        ...
2025-01-10T12:40:40.1276328Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1276464Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1276575Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1276654Z        ...
2025-01-10T12:40:40.1276740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1276873Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1276979Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1277520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1277527Z 
2025-01-10T12:40:40.1277662Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1277769Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1277850Z        ...
2025-01-10T12:40:40.1277936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1278076Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1278187Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1278266Z        ...
2025-01-10T12:40:40.1278351Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1278479Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1278693Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1279195Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1279200Z 
2025-01-10T12:40:40.1279336Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1279444Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1279524Z        ...
2025-01-10T12:40:40.1279609Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1279739Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1279853Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1279936Z        ...
2025-01-10T12:40:40.1280018Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1280147Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1280256Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1280789Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1280795Z 
2025-01-10T12:40:40.1280929Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1281035Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1281118Z        ...
2025-01-10T12:40:40.1281202Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1281334Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1281448Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1281529Z        ...
2025-01-10T12:40:40.1281611Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1281740Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1281843Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1282376Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1282381Z 
2025-01-10T12:40:40.1282506Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1282619Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1282698Z        ...
2025-01-10T12:40:40.1282782Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1282916Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1283030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1283219Z        ...
2025-01-10T12:40:40.1283305Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1283439Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1283543Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1284068Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1284073Z 
2025-01-10T12:40:40.1284201Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1284320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1284401Z        ...
2025-01-10T12:40:40.1284487Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1284618Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1284730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1284813Z        ...
2025-01-10T12:40:40.1284897Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1285029Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1285131Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1285632Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1285717Z 
2025-01-10T12:40:40.1285850Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1285964Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1286044Z        ...
2025-01-10T12:40:40.1286248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1286387Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1286499Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1286580Z        ...
2025-01-10T12:40:40.1286663Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1286797Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1286902Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1287421Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1287432Z 
2025-01-10T12:40:40.1287528Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1287900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1288232Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1288565Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1289087Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1289092Z 
2025-01-10T12:40:40.1289191Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1289691Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1290071Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1290448Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1290936Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1291049Z 
2025-01-10T12:40:40.1291178Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1291292Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1291368Z        ...
2025-01-10T12:40:40.1291458Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1291581Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1291696Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1291769Z        ...
2025-01-10T12:40:40.1291864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1291991Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1292096Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1292619Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1292636Z 
2025-01-10T12:40:40.1292763Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1292908Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1292982Z        ...
2025-01-10T12:40:40.1293070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1293192Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1293306Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1293378Z        ...
2025-01-10T12:40:40.1293465Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1293593Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1293699Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1294179Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1294188Z 
2025-01-10T12:40:40.1294321Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1294432Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1294504Z        ...
2025-01-10T12:40:40.1294595Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1294716Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1294828Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1294900Z        ...
2025-01-10T12:40:40.1294989Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1295112Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1295304Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1295820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1295825Z 
2025-01-10T12:40:40.1295958Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1296181Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1296255Z        ...
2025-01-10T12:40:40.1296342Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1296464Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1296577Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1296650Z        ...
2025-01-10T12:40:40.1296741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1296862Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1296973Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1297488Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1297493Z 
2025-01-10T12:40:40.1297623Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1297850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1297923Z        ...
2025-01-10T12:40:40.1298011Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1298133Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1298246Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1298318Z        ...
2025-01-10T12:40:40.1298406Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1298526Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1298635Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1299135Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1299140Z 
2025-01-10T12:40:40.1299269Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1299386Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1299459Z        ...
2025-01-10T12:40:40.1299547Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1299668Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1299782Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1299855Z        ...
2025-01-10T12:40:40.1299942Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1300064Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1300168Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1300698Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1300710Z 
2025-01-10T12:40:40.1300842Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1300954Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1301034Z        ...
2025-01-10T12:40:40.1301121Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1301241Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1301356Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1301429Z        ...
2025-01-10T12:40:40.1301520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1301641Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1301746Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1302293Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1302410Z 
2025-01-10T12:40:40.1302512Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1302880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1303214Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1303553Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1304184Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1304190Z 
2025-01-10T12:40:40.1304285Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1304653Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1305025Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1305411Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1305936Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1305941Z 
2025-01-10T12:40:40.1306186Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1306298Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1306382Z        ...
2025-01-10T12:40:40.1306468Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1306600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1306710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1306789Z        ...
2025-01-10T12:40:40.1306884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1307008Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1307114Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1307681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1307809Z 
2025-01-10T12:40:40.1307938Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1308054Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1308132Z        ...
2025-01-10T12:40:40.1308223Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1308346Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1308463Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1308537Z        ...
2025-01-10T12:40:40.1308629Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1308749Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1308855Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1309377Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1309399Z 
2025-01-10T12:40:40.1309526Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1309639Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1309712Z        ...
2025-01-10T12:40:40.1309925Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1310047Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1310162Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1310237Z        ...
2025-01-10T12:40:40.1310327Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1310448Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1310554Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1311110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1311125Z 
2025-01-10T12:40:40.1311249Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1311363Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1311435Z        ...
2025-01-10T12:40:40.1311528Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1311656Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1311773Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1311846Z        ...
2025-01-10T12:40:40.1311935Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1312057Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1312163Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1312710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1312724Z 
2025-01-10T12:40:40.1312849Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1312964Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1313037Z        ...
2025-01-10T12:40:40.1313125Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1313257Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1313376Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1313450Z        ...
2025-01-10T12:40:40.1313543Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1313664Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1313767Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1314311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1314321Z 
2025-01-10T12:40:40.1314534Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1314645Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1314717Z        ...
2025-01-10T12:40:40.1314803Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1314925Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1315045Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1315118Z        ...
2025-01-10T12:40:40.1315204Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1315323Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1315429Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1316003Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1316015Z 
2025-01-10T12:40:40.1316235Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1316353Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1316426Z        ...
2025-01-10T12:40:40.1316514Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1316635Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1316864Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1316939Z        ...
2025-01-10T12:40:40.1317026Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1317146Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1317249Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1317839Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1317849Z 
2025-01-10T12:40:40.1317941Z Series values are different (2.42915 %)
2025-01-10T12:40:40.1318303Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1318626Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1318952Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T12:40:40.1319549Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T12:40:40.1319558Z 
2025-01-10T12:40:40.1319650Z Series values are different (6.47773 %)
2025-01-10T12:40:40.1320007Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1320371Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1320865Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T12:40:40.1321436Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1321448Z 
2025-01-10T12:40:40.1321580Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1321687Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1321767Z        ...
2025-01-10T12:40:40.1321851Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1322066Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1322176Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1322254Z        ...
2025-01-10T12:40:40.1322339Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1322466Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1322567Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1323173Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1323184Z 
2025-01-10T12:40:40.1323316Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1323430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1323513Z        ...
2025-01-10T12:40:40.1323597Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1323725Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1323839Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1323919Z        ...
2025-01-10T12:40:40.1324002Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1324132Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1324234Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1324806Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1324811Z 
2025-01-10T12:40:40.1324947Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1325051Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1325140Z        ...
2025-01-10T12:40:40.1325233Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1325358Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1325473Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1325551Z        ...
2025-01-10T12:40:40.1325634Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1325759Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1325858Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1326579Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1326586Z 
2025-01-10T12:40:40.1326715Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1326947Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1327027Z        ...
2025-01-10T12:40:40.1327110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1327237Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1327351Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1327434Z        ...
2025-01-10T12:40:40.1327518Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1327642Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1327742Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1328338Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1328343Z 
2025-01-10T12:40:40.1328470Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1328582Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1328662Z        ...
2025-01-10T12:40:40.1328746Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1328871Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1328980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1329174Z        ...
2025-01-10T12:40:40.1329256Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1329382Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1329480Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1330060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T12:40:40.1330065Z 
2025-01-10T12:40:40.1330195Z MultiIndex level [2] values are different (2.42915 %)
2025-01-10T12:40:40.1330307Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1330388Z        ...
2025-01-10T12:40:40.1330470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1330598Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1330707Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T12:40:40.1330791Z        ...
2025-01-10T12:40:40.1330878Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T12:40:40.1331002Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T12:40:40.1331101Z At positional index 75, first diff: 7 != 6
2025-01-10T12:40:40.1331414Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-10T12:40:40.1331525Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1331529Z 
2025-01-10T12:40:40.1331626Z Mismatched elements: 80 / 584480 (0.0137%)
2025-01-10T12:40:40.1331740Z Max absolute difference among violations: 1.
2025-01-10T12:40:40.1331852Z Max relative difference among violations: 1.
2025-01-10T12:40:40.1332005Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332111Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332221Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:40.1332373Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332481Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T12:40:40.1332592Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T12:40:40.1332886Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-10T12:40:40.1332996Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1333001Z 
2025-01-10T12:40:40.1333094Z Mismatched elements: 775 / 29224 (2.65%)
2025-01-10T12:40:40.1333306Z Max absolute difference among violations: 4005
2025-01-10T12:40:40.1333420Z Max relative difference among violations: 415.5
2025-01-10T12:40:40.1333548Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:40.1333670Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T12:40:40.1333969Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-10T12:40:40.1334069Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1334081Z 
2025-01-10T12:40:40.1334171Z Mismatched elements: 1843 / 29224 (6.31%)
2025-01-10T12:40:40.1334287Z Max absolute difference among violations: 4046
2025-01-10T12:40:40.1334415Z Max relative difference among violations: 54.65079365
2025-01-10T12:40:40.1334541Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:40.1334661Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T12:40:40.1334926Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-10T12:40:40.1335029Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1335034Z 
2025-01-10T12:40:40.1335136Z Mismatched elements: 13593 / 584480 (2.33%)
2025-01-10T12:40:40.1335264Z Max absolute difference among violations: 0.99984222
2025-01-10T12:40:40.1335501Z Max relative difference among violations: 6337.12154973
2025-01-10T12:40:40.1335608Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1335693Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1335783Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.1335884Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1335970Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T12:40:40.1336049Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T12:40:40.1336388Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-10T12:40:40.1336488Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1336499Z 
2025-01-10T12:40:40.1336609Z Mismatched elements: 13481 / 263016 (5.13%)
2025-01-10T12:40:40.1336742Z Max absolute difference among violations: 2.93004431e+13
2025-01-10T12:40:40.1336874Z Max relative difference among violations: 6160.70416047
2025-01-10T12:40:40.1337044Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:40.1337143Z         4.043917e+10, 6.677200e-07],
2025-01-10T12:40:40.1337286Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:40.1337453Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T12:40:40.1337542Z         4.043917e+10, 6.677200e-07],
2025-01-10T12:40:40.1337674Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T12:40:40.1337919Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-10T12:40:40.1338018Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1338027Z 
2025-01-10T12:40:40.1338124Z Mismatched elements: 2241 / 29224 (7.67%)
2025-01-10T12:40:40.1338253Z Max absolute difference among violations: 2.92713618
2025-01-10T12:40:40.1338385Z Max relative difference among violations: 6160.70416047
2025-01-10T12:40:40.1338546Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:40.1338649Z        1.126883e+00, 4.414472e-04])
2025-01-10T12:40:40.1338818Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T12:40:40.1338898Z        1.126883e+00, 4.414472e-04])
2025-01-10T12:40:40.1339163Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-10T12:40:40.1339261Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1339266Z 
2025-01-10T12:40:40.1339368Z Mismatched elements: 40040 / 584480 (6.85%)
2025-01-10T12:40:40.1339504Z Max absolute difference among violations: 604603.16180317
2025-01-10T12:40:40.1339641Z Max relative difference among violations: 4.12352828e+47
2025-01-10T12:40:40.1339920Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:40.1340006Z         0.000000e+00, 0.000000e+00],
2025-01-10T12:40:40.1340139Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:40.1340312Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T12:40:40.1340399Z         0.000000e+00, 0.000000e+00],
2025-01-10T12:40:40.1340528Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T12:40:40.1341023Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1341029Z 
2025-01-10T12:40:40.1341194Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1341280Z [index]: [0, 1]
2025-01-10T12:40:40.1341379Z [left]:  [0.40039163797855976, 0.4502464194566679]
2025-01-10T12:40:40.1341490Z [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T12:40:40.1341661Z At positional index 1, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:40.1342151Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1342265Z 
2025-01-10T12:40:40.1342432Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1342510Z [index]: [0, 1]
2025-01-10T12:40:40.1342609Z [left]:  [9967.488442185557, 10090.337237980311]
2025-01-10T12:40:40.1342705Z [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T12:40:40.1342879Z At positional index 1, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:40.1343412Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1343424Z 
2025-01-10T12:40:40.1343587Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1343663Z [index]: [0, 1]
2025-01-10T12:40:40.1343767Z [left]:  [2869544645.3209715, 2880937482.0686474]
2025-01-10T12:40:40.1343869Z [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T12:40:40.1344038Z At positional index 1, first diff: 2880937482.0686474 != 2881024886.0882792
2025-01-10T12:40:40.1344532Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T12:40:40.1344537Z 
2025-01-10T12:40:40.1344690Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T12:40:40.1344773Z [index]: [0, 1]
2025-01-10T12:40:40.1344865Z [left]:  [9974.969233778693, 10755.649243810945]
2025-01-10T12:40:40.1344964Z [right]: [9974.969233778693, 10755.075718840653]
2025-01-10T12:40:40.1345128Z At positional index 1, first diff: 10755.649243810945 != 10755.075718840653
2025-01-10T12:40:40.1345507Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-10T12:40:40.1345512Z 
2025-01-10T12:40:40.1345610Z Series values are different (100.0 %)
2025-01-10T12:40:40.1345742Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1347059Z [left]:  [1.0165718020021351e+29, 8.62571306411696e+28, 7.646316854968748e+28, 6.908031002110369e+28, 6.371004709369714e+28, 5.982449936420004e+28, 5.597909928934078e+28, 5.282501777671676e+28, 5.020820935289605e+28, 4.812488067251654e+28, 4.619378304591877e+28, 4.388306749667424e+28, 4.251249216289637e+28, 4.088546520299996e+28, 3.9858007734081235e+28, 3.901095133154697e+28, 3.757289741517146e+28, 3.667469944294313e+28, 3.5385186052547926e+28, 3.4426113508496258e+28]
2025-01-10T12:40:40.1348248Z [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T12:40:40.1348573Z At positional index 0, first diff: 1.0165718020021351e+29 != 1.0202042777991753e+29
2025-01-10T12:40:40.1348938Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-10T12:40:40.1348943Z 
2025-01-10T12:40:40.1349037Z Series values are different (100.0 %)
2025-01-10T12:40:40.1349164Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1350117Z [left]:  [116384046125782.77, 98364976859735.92, 87012429590533.9, 78323368794569.64, 72459831721910.19, 67801678518213.21, 63548285829448.92, 60168818659967.44, 57633822561706.6, 55385117780772.836, 53329513121226.89, 51175446710558.34, 49779694218811.86, 48156497541116.836, 46966488943371.055, 46111178859655.91, 44994947495504.64, 44112804763262.04, 42985240421186.83, 42124609741493.33]
2025-01-10T12:40:40.1351079Z [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T12:40:40.1351360Z At positional index 0, first diff: 116384046125782.77 != 116635492761989.08
2025-01-10T12:40:40.1351716Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-10T12:40:40.1351721Z 
2025-01-10T12:40:40.1351835Z Series values are different (100.0 %)
2025-01-10T12:40:40.1351968Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1352952Z [left]:  [10090.337237980311, 10116.111865250032, 10139.105647760403, 10142.095945716788, 10150.321115800372, 10123.716397444778, 10084.67289639175, 10057.355380804116, 10074.14802083069, 10033.34032553025, 10031.455217823204, 9984.072259359717, 9944.672801953748, 9914.94014983714, 9894.541486572769, 9855.440248879018, 9803.441918457313, 9774.67801925122, 9733.316249005853, 9699.146904851166]
2025-01-10T12:40:40.1353954Z [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T12:40:40.1354125Z At positional index 0, first diff: 10090.337237980311 != 10091.396322818851
2025-01-10T12:40:40.1354498Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-10T12:40:40.1354502Z 
2025-01-10T12:40:40.1354604Z Series values are different (95.0 %)
2025-01-10T12:40:40.1354725Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T12:40:40.1355814Z [left]:  [0.4502464194566679, 0.3588077756029479, 0.29919338772622006, 0.2578213585150996, 0.22534909809623732, 0.20112973676351859, 0.18256797939880523, 0.16658198033870197, 0.15046332030127915, 0.13967997753779499, 0.12854517069780738, 0.12086181277279592, 0.11337029016111175, 0.10647071947828184, 0.1001313812482062, 0.09481639007111045, 0.09049931385807097, 0.08585386760525203, 0.0820617088891274, 0.07822247975675253]
2025-01-10T12:40:40.1356976Z [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T12:40:40.1357271Z At positional index 0, first diff: 0.4502464194566679 != 0.4500690173218345
2025-01-10T12:40:40.1357631Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-10T12:40:40.1357637Z 
2025-01-10T12:40:40.1357733Z Series values are different (93.3075 %)
2025-01-10T12:40:40.1358091Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1363191Z [left]:  [1806608624563428.5, 620862018889975.1, 651590360402046.8, 320943910538451.8, 561113750948472.0, 241813077915582.47, 676646472921252.1, 599025280528010.1, 607367947391787.6, 916971958881208.9, 944448818218154.5, 768258845302434.6, 3180924275421589.0, 2598931415289245.5, 857783354573278.5, 618961030157953.0, 551416577022691.9, 1086607883412041.1, 754829008385123.1, 491347895562954.75, 463465281553386.5, 1490385284357192.2, 820083420869824.9, 2175968348120412.0, 735390733822588.2, 940468156618057.8, 1199763529453654.8, 555520468115058.6, 1389937333648209.8, 1385931190300953.0, 368701656937785.25, 1912212664036841.8, 2017892944406485.5, 627650897605616.9, 1067487506686223.0, 948596178833240.9, 1978333560699086.0, 445386051467747.25, 1003125289074394.4, 849780111628392.1, 967717195563717.8, 1280742096219531.0, 1149849611786118.0, 1001922301464027.5, 1119252744389741.1, 508295069236469.7, 1892743849941115.5, 781585077537089.6, 1151156724320413.0, 604536150467357.8, 725946428462161.8, 457842696902374.94, 527259212440423.7, 341747840187921.4, 562226698625033.3, 1275220787923621.2, 656850299934257.8, 723897432192893.0, 1885653269401127.0, 586019958421091.4, 917082513099873.6, 691116115044799.8, 267992695666447.72, 343768201764091.25, 96588669652565.16, 1296826336599265.8, 491364756409299.2, 1492265818518465.2, 764049736945861.0, 1572646992102907.0, 1559779044312961.0, 476772251672717.25, 1860171378185045.5, 703037409456574.1, 1017503831063037.0, 484515686928066.25, 453175828268090.9, 717643868910604.1, 508969981599046.8, 1838872715503452.5, 663689519603300.6, 1322153982095330.5, 601639944763527.4, 1840486828647121.0, 440748324828153.3, 1641787766258543.2, 1588140566162619.2, 1174189775044361.5, 1215719222985419.8, 997715245989672.0, 1168655861235907.5, 1048633827874171.4, 1513925240826093.2, 1363224237769579.2, 430259960128613.0, 386080860775949.9, 1139214315131762.2, 307492179499752.94, 403495784873553.1, 1156290495733696.0, ...]
2025-01-10T12:40:40.1368521Z [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T12:40:40.1368868Z At positional index 0, first diff: 1806608624563428.5 != 1806512041912368.8
2025-01-10T12:40:40.1369259Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-10T12:40:40.1369265Z 
2025-01-10T12:40:40.1369363Z Series values are different (5.69 %)
2025-01-10T12:40:40.1369832Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T12:40:40.1375975Z [left]:  [2.580187415842485e-05, 2.5615305276449435e-05, 2.5858067889302645e-05, -2.428653976442584e-05, 2.4922994639403415e-05, -2.4562308146153393e-05, 2.410111883450277e-05, -2.4384311982125988e-05, -2.4539055130067117e-05, 2.5417984817525785e-05, 2.5118801887778956e-05, -2.4640919894610292e-05, -2.423143307883106e-05, -2.450580654750154e-05, 2.4958490931664476e-05, -2.4193730283432793e-05, 2.5669900182281568e-05, 2.5717784331930673e-05, 2.464778586595558e-05, -2.422776867520316e-05, 2.5447471360622184e-05, -2.4096375187582826e-05, 2.5614840427079128e-05, -2.49312723626409e-05, 2.5377783864650233e-05, -2.3976658244257284e-05, 2.436795912367303e-05, 2.5580236554001677e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4677663481005804e-05, 2.5692099297777826e-05, 2.270718268700719e-05, -2.4226303508833993e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2282478547016986e-05, 2.588758262836899e-05, -2.4715615971154623e-05, 2.5511122281086607e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3125991893671873e-05, -2.4679838721033196e-05, -2.4704318261060463e-05, -2.3740908948484777e-05, 2.4824314480224635e-05, -2.4131571097024343e-05, -2.4208443492969145e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.3936130899719313e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718856984580565e-05, 2.5235644746773655e-05, 2.5659462251071164e-05, 2.5705887025490933e-05, -2.353428102916105e-05, 2.5942471740302383e-05, 2.4777858792597298e-05, -2.4437183065568218e-05, -2.4885876501215466e-05, -2.4616314745328663e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.372394178881923e-05, -2.391362479385318e-05, -2.4073454979842357e-05, 2.5426114770306902e-05, 2.5043045302218097e-05, -2.3655628658685913e-05, 2.564649452803889e-05, -2.38991354195179e-05, 2.53349051266086e-05, 2.4848583494646775e-05, 2.5806793260333468e-05, 2.537958185060352e-05, -2.4205317283566705e-05, 2.452870549491093e-05, 2.491662545911019e-05, -2.4248092466552934e-05, -2.4259084237097454e-05, 2.5042343244083765e-05, -2.4183999173762468e-05, 2.534949108326902e-05, -2.43891861941742e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.1382336Z [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T12:40:40.1382673Z At positional index 23, first diff: -2.49312723626409e-05 != -2.4320296346496788e-05
2025-01-10T12:40:40.1383043Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-10T12:40:40.1383146Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1383158Z 
2025-01-10T12:40:40.1383252Z Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.1383392Z Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.1383504Z Max relative difference among violations: 1.
2025-01-10T12:40:40.1383687Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1383771Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1383944Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1384028Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1384420Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-10T12:40:40.1384520Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1384525Z 
2025-01-10T12:40:40.1384622Z Mismatched elements: 415 / 10000 (4.15%)
2025-01-10T12:40:40.1384758Z Max absolute difference among violations: 6.26425326e+37
2025-01-10T12:40:40.1384887Z Max relative difference among violations: 1.00484475
2025-01-10T12:40:40.1385056Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1385252Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1385423Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1385502Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1385808Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-10T12:40:40.1385917Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1385921Z 
2025-01-10T12:40:40.1386021Z Mismatched elements: 522 / 10000 (5.22%)
2025-01-10T12:40:40.1386268Z Max absolute difference among violations: 8.24408733e+37
2025-01-10T12:40:40.1386382Z Max relative difference among violations: 1.
2025-01-10T12:40:40.1386541Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1386627Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1386791Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1386875Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1387169Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-10T12:40:40.1387268Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1387273Z 
2025-01-10T12:40:40.1387378Z Mismatched elements: 490652 / 584480 (83.9%)
2025-01-10T12:40:40.1387626Z Max absolute difference among violations: 5.32418652e-19
2025-01-10T12:40:40.1387757Z Max relative difference among violations: 8.19556014
2025-01-10T12:40:40.1387856Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1387945Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1388024Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1388131Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1388216Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1388297Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1388562Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-10T12:40:40.1388664Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1388669Z 
2025-01-10T12:40:40.1388766Z Mismatched elements: 4783 / 10000 (47.8%)
2025-01-10T12:40:40.1388896Z Max absolute difference among violations: 1.1803545e+39
2025-01-10T12:40:40.1389031Z Max relative difference among violations: 4.31231392
2025-01-10T12:40:40.1389188Z  ACTUAL: array([1.471064e+39, 1.694868e+39, 1.386611e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1389273Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1389435Z  DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1389520Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1389814Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-10T12:40:40.1389914Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1389918Z 
2025-01-10T12:40:40.1390015Z Mismatched elements: 5925 / 10000 (59.2%)
2025-01-10T12:40:40.1390151Z Max absolute difference among violations: 3.03195861e+38
2025-01-10T12:40:40.1390283Z Max relative difference among violations: 21041.9645284
2025-01-10T12:40:40.1390439Z  ACTUAL: array([1.434743e+39, 1.367630e+39, 1.396131e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1390531Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1390697Z  DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1390780Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1391226Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-10T12:40:40.1391328Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1391333Z 
2025-01-10T12:40:40.1391439Z Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.1391571Z Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.1391696Z Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.1391917Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392006Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392084Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1392189Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392272Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1392362Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1392780Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-10T12:40:40.1392910Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1392915Z 
2025-01-10T12:40:40.1393012Z Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.1393144Z Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.1393270Z Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.1393427Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1393524Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1393684Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1393769Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1394217Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-10T12:40:40.1394405Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1394409Z 
2025-01-10T12:40:40.1394505Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1394632Z Max absolute difference among violations: 7.22899675e+37
2025-01-10T12:40:40.1394760Z Max relative difference among violations: 19.3073128
2025-01-10T12:40:40.1394918Z  ACTUAL: array([1.542394e+39, 1.544710e+39, 1.539595e+39, ..., 2.246822e+31,
2025-01-10T12:40:40.1395004Z        2.268272e+31, 2.225999e+31])
2025-01-10T12:40:40.1395164Z  DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T12:40:40.1395254Z        2.279436e+31, 2.243943e+31])
2025-01-10T12:40:40.1395689Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-10T12:40:40.1395793Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1395803Z 
2025-01-10T12:40:40.1395902Z Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.1396036Z Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.1396254Z Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.1396354Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396440Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396519Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1396625Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396704Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1396797Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1397213Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-10T12:40:40.1397317Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1397321Z 
2025-01-10T12:40:40.1397418Z Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.1397553Z Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.1397679Z Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.1397834Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1397920Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1398082Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1398167Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1398610Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-10T12:40:40.1398872Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1398877Z 
2025-01-10T12:40:40.1398971Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1399110Z Max absolute difference among violations: 6.03670637e+37
2025-01-10T12:40:40.1399231Z Max relative difference among violations: 9.913521
2025-01-10T12:40:40.1399397Z  ACTUAL: array([1.542318e+39, 1.552251e+39, 1.542848e+39, ..., 1.336556e+31,
2025-01-10T12:40:40.1399488Z        1.315549e+31, 1.281291e+31])
2025-01-10T12:40:40.1399646Z  DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T12:40:40.1399731Z        1.330497e+31, 1.294462e+31])
2025-01-10T12:40:40.1400164Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-10T12:40:40.1400270Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1400274Z 
2025-01-10T12:40:40.1400378Z Mismatched elements: 447216 / 584480 (76.5%)
2025-01-10T12:40:40.1400511Z Max absolute difference among violations: 7.31166044e-19
2025-01-10T12:40:40.1400630Z Max relative difference among violations: 8.28953452
2025-01-10T12:40:40.1400733Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1400813Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1401012Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1401116Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1401195Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1401278Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1401689Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-10T12:40:40.1401792Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1401796Z 
2025-01-10T12:40:40.1401885Z Mismatched elements: 4099 / 10000 (41%)
2025-01-10T12:40:40.1402025Z Max absolute difference among violations: 3.04011185e+39
2025-01-10T12:40:40.1402144Z Max relative difference among violations: 5.85885466
2025-01-10T12:40:40.1402309Z  ACTUAL: array([1.882128e+39, 1.306809e+39, 1.435029e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1402391Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1402557Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1402646Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1403088Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-10T12:40:40.1403193Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1403198Z 
2025-01-10T12:40:40.1403287Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1403422Z Max absolute difference among violations: 5.49004665e+37
2025-01-10T12:40:40.1403545Z Max relative difference among violations: 9.345234
2025-01-10T12:40:40.1403710Z  ACTUAL: array([1.540850e+39, 1.547859e+39, 1.540190e+39, ..., 1.173083e+31,
2025-01-10T12:40:40.1403798Z        1.146857e+31, 1.117191e+31])
2025-01-10T12:40:40.1403960Z  DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T12:40:40.1404039Z        1.260980e+31, 1.222587e+31])
2025-01-10T12:40:40.1404488Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-10T12:40:40.1404593Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1404597Z 
2025-01-10T12:40:40.1404693Z Mismatched elements: 442954 / 584480 (75.8%)
2025-01-10T12:40:40.1404828Z Max absolute difference among violations: 8.01824362e-19
2025-01-10T12:40:40.1404947Z Max relative difference among violations: 8.46146562
2025-01-10T12:40:40.1405048Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405127Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405212Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1405398Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405483Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T12:40:40.1405562Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T12:40:40.1405987Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-10T12:40:40.1406193Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1406199Z 
2025-01-10T12:40:40.1406292Z Mismatched elements: 3760 / 10000 (37.6%)
2025-01-10T12:40:40.1406427Z Max absolute difference among violations: 3.02096637e+39
2025-01-10T12:40:40.1406547Z Max relative difference among violations: 5.87366788
2025-01-10T12:40:40.1406712Z  ACTUAL: array([2.017630e+39, 1.582872e+39, 1.284481e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1406790Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1406956Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T12:40:40.1407041Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1407498Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-10T12:40:40.1407603Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1407724Z 
2025-01-10T12:40:40.1407817Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T12:40:40.1407949Z Max absolute difference among violations: 7.72948946e+37
2025-01-10T12:40:40.1408074Z Max relative difference among violations: 17.81369197
2025-01-10T12:40:40.1408236Z  ACTUAL: array([1.540883e+39, 1.540389e+39, 1.536139e+39, ..., 2.081039e+31,
2025-01-10T12:40:40.1408315Z        2.087889e+31, 2.059957e+31])
2025-01-10T12:40:40.1408480Z  DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T12:40:40.1408558Z        2.088676e+31, 2.060278e+31])
2025-01-10T12:40:40.1408906Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-10T12:40:40.1409008Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T12:40:40.1409012Z 
2025-01-10T12:40:40.1409104Z Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.1409237Z Max absolute difference among violations: 6.92504451e+25
2025-01-10T12:40:40.1409356Z Max relative difference among violations: 0.00085843
2025-01-10T12:40:40.1409518Z  ACTUAL: array([9.404484e+28, 8.060193e+28, 7.199975e+28, 6.546968e+28,
2025-01-10T12:40:40.1409636Z        6.034739e+28, 5.613400e+28, 5.251242e+28, 4.985184e+28,
2025-01-10T12:40:40.1409764Z        4.726437e+28, 4.509526e+28, 4.320081e+28, 4.151235e+28,...
2025-01-10T12:40:40.1409917Z  DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T12:40:40.1410035Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T12:40:40.1410153Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T12:40:40.1410544Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-10T12:40:40.1410658Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T12:40:40.1410668Z 
2025-01-10T12:40:40.1410756Z Mismatched elements: 20 / 20 (100%)
2025-01-10T12:40:40.1410889Z Max absolute difference among violations: 2.81924274e+25
2025-01-10T12:40:40.1411013Z Max relative difference among violations: 0.0005693
2025-01-10T12:40:40.1411171Z  ACTUAL: array([9.396322e+28, 8.064520e+28, 7.187546e+28, 6.550714e+28,
2025-01-10T12:40:40.1411284Z        6.032264e+28, 5.628320e+28, 5.284222e+28, 4.954908e+28,
2025-01-10T12:40:40.1411407Z        4.717867e+28, 4.492582e+28, 4.303848e+28, 4.140613e+28,...
2025-01-10T12:40:40.1411561Z  DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T12:40:40.1411679Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T12:40:40.1411795Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T12:40:40.1412429Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - ValueError: could not broadcast input array from shape (77,) into shape (64,)
2025-01-10T12:40:40.1412851Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-10T12:40:40.1412953Z Not equal to tolerance rtol=0.01, atol=0
2025-01-10T12:40:40.1412958Z 
2025-01-10T12:40:40.1413056Z Mismatched elements: 75 / 100000 (0.075%)
2025-01-10T12:40:40.1413185Z Max absolute difference among violations: 2.01554089e-05
2025-01-10T12:40:40.1413313Z Max relative difference among violations: 2.08104546
2025-01-10T12:40:40.1413487Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.1413581Z        -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.1413752Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T12:40:40.1413845Z        -9.757136e-06,  1.019764e-05])
2025-01-10T12:40:40.1414305Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-10T12:40:40.1414408Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1414413Z 
2025-01-10T12:40:40.1414584Z (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.1414733Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.1414850Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.1414967Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.1415124Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.1415233Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.1415356Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.1415809Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-10T12:40:40.1415921Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1415925Z 
2025-01-10T12:40:40.1416018Z Mismatched elements: 558 / 558 (100%)
2025-01-10T12:40:40.1416239Z Max absolute difference among violations: 5978.84516144
2025-01-10T12:40:40.1416371Z Max relative difference among violations: 0.4321623
2025-01-10T12:40:40.1416518Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.1416633Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.1416749Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.1416903Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.1417012Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.1417136Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.1417595Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-10T12:40:40.1417696Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1417701Z 
2025-01-10T12:40:40.1417793Z (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.1417942Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.1418061Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.1418179Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.1418336Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.1418446Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.1418568Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.1419017Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-10T12:40:40.1419241Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1419246Z 
2025-01-10T12:40:40.1419335Z (shapes (147,), (159,) mismatch)
2025-01-10T12:40:40.1419482Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.1419604Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.1419718Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.1419872Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.1419980Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.1420103Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.1420552Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-10T12:40:40.1420662Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1420666Z 
2025-01-10T12:40:40.1420753Z (shapes (503,), (508,) mismatch)
2025-01-10T12:40:40.1420898Z  ACTUAL: array([11852.913858, 11852.913858, 11852.913858, 11381.456285,
2025-01-10T12:40:40.1421011Z        12643.551092, 11481.82435 , 11481.82435 , 11481.82435 ,
2025-01-10T12:40:40.1421255Z        11682.770457, 11121.761454, 11826.139986, 11151.276115,...
2025-01-10T12:40:40.1421408Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T12:40:40.1421516Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T12:40:40.1421641Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T12:40:40.1422084Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-10T12:40:40.1422187Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1422191Z 
2025-01-10T12:40:40.1422287Z (shapes (1435,), (1466,) mismatch)
2025-01-10T12:40:40.1422448Z  ACTUAL: array([11061.809432, 12248.182229, 11489.536063, ..., 13052.865391,
2025-01-10T12:40:40.1422533Z        11383.689745, 11102.237019])
2025-01-10T12:40:40.1422697Z  DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T12:40:40.1422786Z        11152.962595, 11172.044815])
2025-01-10T12:40:40.1423239Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - AssertionError: 
2025-01-10T12:40:40.1423342Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1423347Z 
2025-01-10T12:40:40.1423431Z (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.1423573Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1423679Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1423789Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1423879Z        0.      , 1.      ])
2025-01-10T12:40:40.1424015Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1424116Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1424224Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1424336Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.1424782Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-10T12:40:40.1424888Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1424893Z 
2025-01-10T12:40:40.1424981Z (shapes (134,), (147,) mismatch)
2025-01-10T12:40:40.1425125Z  ACTUAL: array([11193.08325 , 13536.93126 , 11647.608047, 11992.657901,
2025-01-10T12:40:40.1425241Z        15280.372922, 11647.007285, 11787.879439, 15144.426129,
2025-01-10T12:40:40.1425447Z        11822.894648, 14558.460905, 11033.525762, 14395.756654,...
2025-01-10T12:40:40.1425602Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T12:40:40.1425710Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T12:40:40.1425832Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T12:40:40.1426397Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-10T12:40:40.1426502Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1426506Z 
2025-01-10T12:40:40.1426590Z (shapes (367,), (379,) mismatch)
2025-01-10T12:40:40.1426739Z  ACTUAL: array([11107.033242, 11193.08325 , 13536.93126 , 11647.608047,
2025-01-10T12:40:40.1426854Z        11992.657901, 15280.372922, 11647.007285, 11787.879439,
2025-01-10T12:40:40.1426970Z        15144.426129, 11822.894648, 14558.460905, 11033.525762,...
2025-01-10T12:40:40.1427127Z  DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T12:40:40.1427241Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T12:40:40.1427361Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T12:40:40.1427820Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - AssertionError: 
2025-01-10T12:40:40.1428043Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1428047Z 
2025-01-10T12:40:40.1428132Z (shapes (20,), (24,) mismatch)
2025-01-10T12:40:40.1428272Z  ACTUAL: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1428374Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1428482Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1428564Z        0.      , 1.      ])
2025-01-10T12:40:40.1428700Z  DESIRED: array([0.      , 0.      , 0.5     , 1.      , 0.      , 0.3     ,
2025-01-10T12:40:40.1428805Z        1.      , 1.      , 0.16129 , 1.      , 0.806452, 1.      ,
2025-01-10T12:40:40.1428911Z        0.806452, 1.      , 0.16129 , 1.      , 1.      , 0.407407,
2025-01-10T12:40:40.1429015Z        0.      , 1.      , 0.5     , 0.      , 0.      , 1.      ])
2025-01-10T12:40:40.1429441Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-01-10T12:40:40.1429544Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1429549Z 
2025-01-10T12:40:40.1429638Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1429754Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1429886Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1430038Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1430128Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1430283Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1430374Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1430796Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-01-10T12:40:40.1430907Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1430911Z 
2025-01-10T12:40:40.1430998Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1431110Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1431230Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1431382Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1431468Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1431617Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1431703Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1432234Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-10T12:40:40.1432337Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1432342Z 
2025-01-10T12:40:40.1432429Z Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.1432547Z Max absolute difference among violations: 18
2025-01-10T12:40:40.1432657Z Max relative difference among violations: 0.5
2025-01-10T12:40:40.1432812Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.1432898Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.1433050Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.1433140Z          1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.1433552Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-10T12:40:40.1433658Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1433663Z 
2025-01-10T12:40:40.1433749Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1433863Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1433992Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1434145Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1434307Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1434459Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1434545Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1434955Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - AssertionError: 
2025-01-10T12:40:40.1435055Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1435059Z 
2025-01-10T12:40:40.1435148Z Mismatched elements: 12 / 40 (30%)
2025-01-10T12:40:40.1435270Z Max absolute difference among violations: 58.
2025-01-10T12:40:40.1435376Z Max relative difference among violations: 30.
2025-01-10T12:40:40.1435472Z  ACTUAL: array([[1.10e+04, 6.00e+01],
2025-01-10T12:40:40.1435552Z        [1.19e+04, 6.00e+01],
2025-01-10T12:40:40.1435639Z        [1.19e+04, 3.10e+01],...
2025-01-10T12:40:40.1435736Z  DESIRED: array([[1.10e+04, 2.00e+00],
2025-01-10T12:40:40.1435819Z        [1.19e+04, 2.00e+00],
2025-01-10T12:40:40.1435897Z        [1.19e+04, 1.00e+00],...
2025-01-10T12:40:40.1436408Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T12:40:40.1436508Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1436512Z 
2025-01-10T12:40:40.1436600Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1436709Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1436828Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1436981Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1437064Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1437215Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1437296Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1437719Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T12:40:40.1437816Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1437822Z 
2025-01-10T12:40:40.1437907Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1438017Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1438138Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1438289Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1438371Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1438641Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1438721Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1439136Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T12:40:40.1439238Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1439247Z 
2025-01-10T12:40:40.1439333Z Mismatched elements: 6 / 20 (30%)
2025-01-10T12:40:40.1439443Z Max absolute difference among violations: 18
2025-01-10T12:40:40.1439549Z Max relative difference among violations: 0.5
2025-01-10T12:40:40.1439702Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T12:40:40.1439783Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T12:40:40.1439938Z  DESIRED: array([288, 288, 120, 120,  44,  44,  22,  22,  13,  13,  10,  10,   1,
2025-01-10T12:40:40.1440018Z          1,   0,   0,   5,   5,   0,   0])
2025-01-10T12:40:40.1440438Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T12:40:40.1440531Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1440535Z 
2025-01-10T12:40:40.1440627Z Mismatched elements: 2 / 20 (10%)
2025-01-10T12:40:40.1440848Z Max absolute difference among violations: 30
2025-01-10T12:40:40.1440970Z Max relative difference among violations: 0.54545455
2025-01-10T12:40:40.1441120Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T12:40:40.1441200Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T12:40:40.1441348Z  DESIRED: array([132, 132,  55,  55,  29,  29,  21,  21,   7,   7,   0,   0,   0,
2025-01-10T12:40:40.1441428Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T12:40:40.1441843Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T12:40:40.1441944Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T12:40:40.1441948Z 
2025-01-10T12:40:40.1442044Z Mismatched elements: 12 / 20 (60%)
2025-01-10T12:40:40.1442151Z Max absolute difference among violations: 58
2025-01-10T12:40:40.1442266Z Max relative difference among violations: 30.
2025-01-10T12:40:40.1442421Z  ACTUAL: array([60, 60, 31, 31, 18, 18, 12, 12,  7,  7,  5,  5,  0,  0,  0,  0,  1,
2025-01-10T12:40:40.1442501Z         1,  0,  0])
2025-01-10T12:40:40.1442650Z  DESIRED: array([2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T12:40:40.1443122Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-10T12:40:40.1443229Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1443233Z 
2025-01-10T12:40:40.1443322Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1443473Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1443599Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1443768Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1443849Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1444015Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1444106Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1444577Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-10T12:40:40.1444686Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1444691Z 
2025-01-10T12:40:40.1444781Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1444921Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1445041Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1445204Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1445368Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1445532Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1445617Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1446214Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-10T12:40:40.1446332Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1446337Z 
2025-01-10T12:40:40.1446430Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1446567Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1446686Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1446849Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1446932Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1447099Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1447181Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1447656Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-10T12:40:40.1447759Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1447893Z 
2025-01-10T12:40:40.1447985Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1448120Z Max absolute difference among violations: 4.33016083e-05
2025-01-10T12:40:40.1448241Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1448404Z  ACTUAL: array([1.529155e-06, 1.142600e-06, 1.971849e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1448482Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1448647Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1448726Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1449194Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-10T12:40:40.1449302Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1449306Z 
2025-01-10T12:40:40.1449396Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1449532Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1449666Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1449828Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1449906Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1450068Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1450147Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1450615Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-10T12:40:40.1450717Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1450728Z 
2025-01-10T12:40:40.1450819Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1450959Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1451097Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1451267Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1451353Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1451523Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1451605Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1452084Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-10T12:40:40.1452184Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1452189Z 
2025-01-10T12:40:40.1452286Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1452544Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1452676Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1452845Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1452925Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1453097Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1453177Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1453652Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-10T12:40:40.1453752Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1453756Z 
2025-01-10T12:40:40.1453852Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1453980Z Max absolute difference among violations: 5.4915623e-05
2025-01-10T12:40:40.1454116Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1454288Z  ACTUAL: array([3.230525e-06, 1.634784e-06, 3.617980e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1454368Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1454532Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T12:40:40.1454611Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1455162Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-10T12:40:40.1455262Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1455266Z 
2025-01-10T12:40:40.1455366Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1455498Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1455631Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1455791Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1455877Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1456050Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1456257Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1456733Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-10T12:40:40.1456840Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1456844Z 
2025-01-10T12:40:40.1456945Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1457073Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1457201Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1457366Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1457461Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1457628Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1457712Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1458187Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-10T12:40:40.1458286Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1458291Z 
2025-01-10T12:40:40.1458394Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1458528Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1458659Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1458816Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1458900Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1459058Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1459142Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1459613Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-10T12:40:40.1459829Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1459834Z 
2025-01-10T12:40:40.1459937Z Mismatched elements: 610 / 1938 (31.5%)
2025-01-10T12:40:40.1460066Z Max absolute difference among violations: 5.18101657e+47
2025-01-10T12:40:40.1460199Z Max relative difference among violations: 4.03018084
2025-01-10T12:40:40.1460355Z  ACTUAL: array([1.829627e+46, 1.367115e+46, 2.359308e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1460439Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1460598Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1460684Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1461148Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-10T12:40:40.1461254Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1461262Z 
2025-01-10T12:40:40.1461357Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1461485Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1461615Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1461771Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1461983Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1462140Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1462224Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1462687Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-10T12:40:40.1462790Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1462794Z 
2025-01-10T12:40:40.1462889Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1463017Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1463154Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1463308Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1463393Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1463551Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1463640Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1464104Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-10T12:40:40.1464211Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1464215Z 
2025-01-10T12:40:40.1464313Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1464441Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1464573Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1464738Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1464856Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1465014Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1465101Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1465566Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-10T12:40:40.1465675Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1465679Z 
2025-01-10T12:40:40.1465769Z Mismatched elements: 697 / 1938 (36%)
2025-01-10T12:40:40.1465905Z Max absolute difference among violations: 6.57062783e+47
2025-01-10T12:40:40.1466038Z Max relative difference among violations: 50149.82031431
2025-01-10T12:40:40.1466309Z  ACTUAL: array([3.865307e+46, 1.956012e+46, 4.328895e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1466396Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1466674Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T12:40:40.1466759Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1467189Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T12:40:40.1467301Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1467306Z 
2025-01-10T12:40:40.1467396Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1467534Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1467664Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1467822Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1467908Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1468069Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1468153Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1468605Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T12:40:40.1468711Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1468715Z 
2025-01-10T12:40:40.1468807Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1469075Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1469197Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1469366Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1469455Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1469616Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1469702Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1470126Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-10T12:40:40.1470239Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1470243Z 
2025-01-10T12:40:40.1470334Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1470469Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1470589Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1470762Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1470842Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1471005Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1471091Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1471511Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-10T12:40:40.1471619Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1471623Z 
2025-01-10T12:40:40.1471713Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1471852Z Max absolute difference among violations: 1.8511615e-13
2025-01-10T12:40:40.1471977Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1472144Z  ACTUAL: array([3.821527e-15, 3.883507e-15, 1.586296e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1472224Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1472392Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1472469Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1472898Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T12:40:40.1473001Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1473005Z 
2025-01-10T12:40:40.1473097Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1473232Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1473359Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1473623Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1473706Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1473877Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1473956Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1474389Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T12:40:40.1474494Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1474499Z 
2025-01-10T12:40:40.1474590Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1474724Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1474851Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1475017Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1475095Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1475268Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1475349Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1475773Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-10T12:40:40.1475956Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1475966Z 
2025-01-10T12:40:40.1476153Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1476291Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1476419Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1476580Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1476659Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1476822Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1476902Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1477337Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T12:40:40.1477437Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1477441Z 
2025-01-10T12:40:40.1477539Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1477679Z Max absolute difference among violations: 3.02703484e-13
2025-01-10T12:40:40.1477810Z Max relative difference among violations: 16816.91196075
2025-01-10T12:40:40.1477974Z  ACTUAL: array([8.041649e-15, 5.829233e-15, 2.430626e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1478053Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1478220Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T12:40:40.1478299Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1478726Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-10T12:40:40.1478829Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1478833Z 
2025-01-10T12:40:40.1478931Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1479059Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1479193Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1479363Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1479442Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1479608Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1479688Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1480114Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-10T12:40:40.1480214Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1480219Z 
2025-01-10T12:40:40.1480318Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1480561Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1480690Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1480847Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1480932Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1481103Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1481182Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1481615Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-10T12:40:40.1481716Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1481720Z 
2025-01-10T12:40:40.1481818Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1481946Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1482073Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1482233Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1482321Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1482482Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1482561Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1483103Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-10T12:40:40.1483205Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1483209Z 
2025-01-10T12:40:40.1483306Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T12:40:40.1483433Z Max absolute difference among violations: 2.21490582e+39
2025-01-10T12:40:40.1483563Z Max relative difference among violations: 2.48849949
2025-01-10T12:40:40.1483721Z  ACTUAL: array([4.572439e+37, 4.646598e+37, 1.897995e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1483806Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1483972Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1484059Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1484488Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-10T12:40:40.1484594Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1484598Z 
2025-01-10T12:40:40.1484696Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1484823Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1484978Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1485138Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1485224Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1485393Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1485506Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1485931Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-10T12:40:40.1486036Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1486040Z 
2025-01-10T12:40:40.1486238Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1486370Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1486507Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1486672Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1486760Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1486924Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1487009Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1487430Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-10T12:40:40.1487653Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1487657Z 
2025-01-10T12:40:40.1487752Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1487893Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1488027Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1488190Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1488276Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1488433Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1488519Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1488944Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-10T12:40:40.1489051Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T12:40:40.1489055Z 
2025-01-10T12:40:40.1489149Z Mismatched elements: 536 / 1938 (27.7%)
2025-01-10T12:40:40.1489279Z Max absolute difference among violations: 3.6218326e+39
2025-01-10T12:40:40.1489415Z Max relative difference among violations: 16816.91195075
2025-01-10T12:40:40.1489571Z  ACTUAL: array([9.621794e+37, 6.974649e+37, 2.908232e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1489655Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1489922Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T12:40:40.1490007Z        0.000000e+00, 0.000000e+00])
2025-01-10T12:40:40.1490281Z = 278 failed, 1160 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 251 warnings in 764.84s (0:12:44) =
2025-01-10T12:40:42.4336860Z ##[error]Process completed with exit code 1.
